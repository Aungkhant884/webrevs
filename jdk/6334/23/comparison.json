{"files":[{"patch":"@@ -186,1 +186,0 @@\n-          --with-version-build=0\n@@ -204,2 +203,2 @@\n-            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\n@@ -311,2 +310,2 @@\n-          mkdir -p \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin${{ matrix.artifact }}\"\n@@ -316,2 +315,2 @@\n-          mkdir -p \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin-tests${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin-tests${{ matrix.artifact }}\"\n@@ -321,1 +320,1 @@\n-          imageroot=`find ${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }} -name release -type f`\n+          imageroot=`find ${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin${{ matrix.artifact }} -name release -type f`\n@@ -327,1 +326,1 @@\n-          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\n+          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin-tests${{ matrix.artifact }}\n@@ -480,2 +479,2 @@\n-          mkdir -p \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin\"\n-          tar -xf \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin.tar.gz\" -C \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin\"\n+          mkdir -p \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin\"\n+          tar -xf \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin.tar.gz\" -C \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin\"\n@@ -485,1 +484,1 @@\n-          build_jdk_root=`find ${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin -name release -type f`\n+          build_jdk_root=`find ${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal_linux-x64_bin -name release -type f`\n@@ -553,1 +552,0 @@\n-          --with-version-build=0\n@@ -652,1 +650,0 @@\n-          --with-version-build=0\n@@ -670,2 +667,2 @@\n-            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\n@@ -778,2 +775,2 @@\n-          mkdir -p \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin${{ matrix.artifact }}\"\n@@ -783,2 +780,2 @@\n-          mkdir -p \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin-tests${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin-tests${{ matrix.artifact }}\"\n@@ -788,1 +785,1 @@\n-          imageroot=`find ${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }} -name release -type f`\n+          imageroot=`find ${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin${{ matrix.artifact }} -name release -type f`\n@@ -794,1 +791,1 @@\n-          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\n+          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_linux-x86_bin-tests${{ matrix.artifact }}\n@@ -930,1 +927,0 @@\n-          --with-version-build=0\n@@ -1042,1 +1038,0 @@\n-          --with-version-build=0\n@@ -1062,3 +1057,3 @@\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}.zip\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\n+            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}.zip\n+            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\n@@ -1184,2 +1179,2 @@\n-          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}.zip\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}.zip\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}\"\n@@ -1189,2 +1184,2 @@\n-          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols\"\n-          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols\"\n+          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}-symbols\"\n+          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }}-symbols\"\n@@ -1194,2 +1189,2 @@\n-          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin-tests${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin-tests${{ matrix.artifact }}\"\n@@ -1198,1 +1193,1 @@\n-        run: echo (\"imageroot=\" + (Get-ChildItem -Path $HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }} -Filter release -Recurse -ErrorAction SilentlyContinue -Force).DirectoryName) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8\n+        run: echo (\"imageroot=\" + (Get-ChildItem -Path $HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin${{ matrix.artifact }} -Filter release -Recurse -ErrorAction SilentlyContinue -Force).DirectoryName) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8\n@@ -1206,1 +1201,1 @@\n-          $env:TEST_IMAGE_DIR = cygpath \"$HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\" ;\n+          $env:TEST_IMAGE_DIR = cygpath \"$HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_windows-x64_bin-tests${{ matrix.artifact }}\" ;\n@@ -1349,1 +1344,0 @@\n-          --with-version-build=0\n@@ -1367,2 +1361,2 @@\n-            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin-tests${{ matrix.artifact }}.tar.gz\n@@ -1452,1 +1446,0 @@\n-          --with-version-build=0\n@@ -1470,2 +1463,2 @@\n-            jdk\/build\/macos-aarch64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-aarch64_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/macos-aarch64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-aarch64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/macos-aarch64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_macos-aarch64_bin${{ matrix.artifact }}.tar.gz\n+            jdk\/build\/macos-aarch64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal_macos-aarch64_bin-tests${{ matrix.artifact }}.tar.gz\n@@ -1578,2 +1571,2 @@\n-          mkdir -p \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin${{ matrix.artifact }}\"\n@@ -1583,2 +1576,2 @@\n-          mkdir -p \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin-tests${{ matrix.artifact }}\"\n+          mkdir -p \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin-tests${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin-tests${{ matrix.artifact }}\"\n@@ -1594,1 +1587,1 @@\n-          imageroot=`find ${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin${{ matrix.artifact }} -name release -type f`\n+          imageroot=`find ${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin${{ matrix.artifact }} -name release -type f`\n@@ -1600,1 +1593,1 @@\n-          TEST_IMAGE_DIR=${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_macos-x64_bin-tests${{ matrix.artifact }}\n+          TEST_IMAGE_DIR=${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal_macos-x64_bin-tests${{ matrix.artifact }}\n","filename":".github\/workflows\/submit.yml","additions":40,"deletions":47,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -1,45 +0,0 @@\n-\/*\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * This little utility can be used to expand the jib-profiles configuration\n- * files into plain json.\n- *\n- * Usage:\n- *\n- *   jjs -scripting print-config.js -- [<jib-profiles.js>]\n- *\n- *\/\n-\n-var file = $ARG[0];\n-if (file == null) {\n-    file = new java.io.File(__DIR__, \"..\/conf\/jib-profiles.js\").getCanonicalPath();\n-}\n-load(file);\n-var input = {};\n-input.get = function(dependencyName, attribute) {\n-    return \"\\${\" + dependencyName + \".\" + attribute + \"}\";\n-};\n-print(JSON.stringify(getJibProfiles(input), null, 2));\n","filename":"bin\/print-config.js","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -199,1 +199,1 @@\n-<p>Windows is the only non-POSIX OS supported by the JDK, and as such, requires some extra care. A POSIX support layer is required to build on Windows. Currently, the only supported such layers are Cygwin and Windows Subsystem for Linux (WSL). (Msys is no longer supported due to a too old bash; msys2 would likely be possible to support in a future version but that would require effort to implement.)<\/p>\n+<p>Windows is the only non-POSIX OS supported by the JDK, and as such, requires some extra care. A POSIX support layer is required to build on Windows. Currently, the only supported such layers are Cygwin, Windows Subsystem for Linux (WSL), and MSYS2. (MSYS is no longer supported due to an outdated bash; While OpenJDK can be built with MSYS2, support for it is still experimental, so build failures and unusual errors are not uncommon.)<\/p>\n@@ -301,1 +301,1 @@\n-<p>For aarch64 machines running Windows the minimum accepted version is Visual Studio 2019 (16.8 or higher). For all other platforms the minimum accepted version of Visual Studio is 2017.  Older versions will not be accepted by <code>configure<\/code> and will not work. For all platforms the maximum accepted version of Visual Studio is 2022.<\/p>\n+<p>For aarch64 machines running Windows the minimum accepted version is Visual Studio 2019 (16.8 or higher). For all other platforms the minimum accepted version of Visual Studio is 2017. Older versions will not be accepted by <code>configure<\/code> and will not work. For all platforms the maximum accepted version of Visual Studio is 2022.<\/p>\n","filename":"doc\/building.html","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,0 +138,8 @@\n+#### Branch Protection\n+\n+In order to use Branch Protection features in the VM, `--enable-branch-protection`\n+must be used. This option requires C++ compiler support (GCC 9.1.0+ or Clang\n+10+). The resulting build can be run on both machines with and without support\n+for branch protection in hardware. Branch Protection is only supported for\n+Linux targets.\n+\n@@ -182,4 +190,4 @@\n-Currently, the only supported such layers are Cygwin and Windows Subsystem for\n-Linux (WSL). (Msys is no longer supported due to a too old bash; msys2 would\n-likely be possible to support in a future version but that would require effort\n-to implement.)\n+Currently, the only supported such layers are Cygwin, Windows Subsystem for\n+Linux (WSL), and MSYS2. (MSYS is no longer supported due to an outdated bash;\n+While OpenJDK can be built with MSYS2, support for it is still experimental, so\n+build failures and unusual errors are not uncommon.)\n","filename":"doc\/building.md","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -70,1 +70,3 @@\n-<p>Proposed changes should be discussed on the <a href=\"mailto:hotspot-dev@openjdk.java.net\">HotSpot Developers<\/a> mailing list, and approved by <a href=\"https:\/\/en.wikipedia.org\/wiki\/Rough_consensus\">rough consensus<\/a> of the <a href=\"https:\/\/openjdk.java.net\/census#hotspot\">HotSpot Group<\/a> Members. The Group Lead determines whether consensus has been reached. Changes are likely to be cautious and incremental, since HotSpot coders have been using these guidelines for years.<\/p>\n+<p>Proposed changes should be discussed on the <a href=\"mailto:hotspot-dev@openjdk.java.net\">HotSpot Developers<\/a> mailing list. Changes are likely to be cautious and incremental, since HotSpot coders have been using these guidelines for years.<\/p>\n+<p>Substantive changes are approved by <a href=\"https:\/\/en.wikipedia.org\/wiki\/Rough_consensus\">rough consensus<\/a> of the <a href=\"https:\/\/openjdk.java.net\/census#hotspot\">HotSpot Group<\/a> Members. The Group Lead determines whether consensus has been reached.<\/p>\n+<p>Editorial changes (changes that only affect the description of HotSpot style, not its substance) do not require the full consensus gathering process. The normal HotSpot pull request process may be used for editorial changes, with the additional requirement that the requisite reviewers are also HotSpot Group Members.<\/p>\n","filename":"doc\/hotspot-style.html","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,4 @@\n-list, and approved by\n+list.  Changes are likely to be cautious and incremental, since HotSpot\n+coders have been using these guidelines for years.\n+\n+Substantive changes are approved by\n@@ -63,2 +66,6 @@\n-Changes are likely to be cautious and incremental, since HotSpot\n-coders have been using these guidelines for years.\n+\n+Editorial changes (changes that only affect the description of HotSpot\n+style, not its substance) do not require the full consensus gathering\n+process.  The normal HotSpot pull request process may be used for\n+editorial changes, with the additional requirement that the requisite\n+reviewers are also HotSpot Group Members.\n","filename":"doc\/hotspot-style.md","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-  ifeq ($(VERSION_BUILD), 0)\n+  ifeq ($(VERSION_BUILD), )\n","filename":"make\/Docs.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,4 @@\n+HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+HSDIS_TOOLCHAIN_CFLAGS := $(CFLAGS_JDKLIB)\n+HSDIS_TOOLCHAIN_LDFLAGS := $(LDFLAGS_JDKLIB)\n+\n@@ -41,0 +45,38 @@\n+  IMAGE_HSDIS_DIR := $(JDK_IMAGE_DIR)\/bin\n+else\n+  INSTALLED_HSDIS_DIR := $(JDK_OUTPUTDIR)\/lib\n+  IMAGE_HSDIS_DIR := $(JDK_IMAGE_DIR)\/lib\n+endif\n+\n+ifeq ($(HSDIS_BACKEND), capstone)\n+  ifeq ($(call isTargetCpuArch, x86), true)\n+    CAPSTONE_ARCH := CS_ARCH_X86\n+    CAPSTONE_MODE := CS_MODE_$(OPENJDK_TARGET_CPU_BITS)\n+  else ifeq ($(call isTargetCpuArch, aarch64), true)\n+    CAPSTONE_ARCH := CS_ARCH_ARM64\n+    CAPSTONE_MODE := CS_MODE_ARM\n+  else\n+    $(error No support for Capstone on this platform)\n+  endif\n+\n+  HSDIS_CFLAGS += -DCAPSTONE_ARCH=$(CAPSTONE_ARCH) \\\n+      -DCAPSTONE_MODE=$(CAPSTONE_MODE)\n+endif\n+\n+ifeq ($(HSDIS_BACKEND), llvm)\n+  # Use C++ instead of C\n+  HSDIS_TOOLCHAIN_CFLAGS := $(CXXFLAGS_JDKLIB)\n+  HSDIS_TOOLCHAIN := TOOLCHAIN_LINK_CXX\n+\n+  ifeq ($(call isTargetOs, linux), true)\n+    LLVM_OS := pc-linux-gnu\n+  else ifeq ($(call isTargetOs, macosx), true)\n+    LLVM_OS := apple-darwin\n+  else ifeq ($(call isTargetOs, windows), true)\n+    LLVM_OS := pc-windows-msvc\n+  else\n+    $(error No support for LLVM on this platform)\n+  endif\n+\n+  HSDIS_CFLAGS += -DLLVM_DEFAULT_TRIPLET='\"$(OPENJDK_TARGET_CPU)-$(LLVM_OS)\"'\n+endif\n@@ -42,2 +84,4 @@\n-  # On windows, we need to \"fake\" a completely different toolchain using gcc\n-  # instead of the normal microsoft toolchain. This is quite hacky...\n+ifeq ($(HSDIS_BACKEND), binutils)\n+  ifeq ($(call isTargetOs, windows), true)\n+    # On windows, we need to \"fake\" a completely different toolchain using gcc\n+    # instead of the normal microsoft toolchain. This is quite hacky...\n@@ -45,1 +89,1 @@\n-  MINGW_BASE := x86_64-w64-mingw32\n+    MINGW_BASE := x86_64-w64-mingw32\n@@ -47,4 +91,1 @@\n-  MINGW_SYSROOT = $(shell $(MINGW_BASE)-gcc -print-sysroot)\n-  ifeq ($(wildcard $(MINGW_SYSROOT)), )\n-    # Use fallback path\n-    MINGW_SYSROOT := \/usr\/$(MINGW_BASE)\n+    MINGW_SYSROOT = $(shell $(MINGW_BASE)-gcc -print-sysroot)\n@@ -52,1 +93,5 @@\n-      $(error mingw sysroot not found)\n+      # Use fallback path\n+      MINGW_SYSROOT := \/usr\/$(MINGW_BASE)\n+      ifeq ($(wildcard $(MINGW_SYSROOT)), )\n+        $(error mingw sysroot not found)\n+      endif\n@@ -54,1 +99,0 @@\n-  endif\n@@ -56,13 +100,10 @@\n-  $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n-      CC := $(MINGW_BASE)-gcc, \\\n-      LD := $(MINGW_BASE)-ld, \\\n-      OBJCOPY := $(MINGW_BASE)-objcopy, \\\n-      RC := $(RC), \\\n-      SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-      SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-  ))\n-\n-  MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/mingw\/lib\n-  ifeq ($(wildcard $(MINGW_SYSROOT_LIB_PATH)), )\n-    # Try without mingw\n-    MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/lib\n+    $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n+        CC := $(MINGW_BASE)-gcc, \\\n+        LD := $(MINGW_BASE)-ld, \\\n+        OBJCOPY := $(MINGW_BASE)-objcopy, \\\n+        RC := $(RC), \\\n+        SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n+        SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n+    ))\n+\n+    MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/mingw\/lib\n@@ -70,1 +111,5 @@\n-      $(error mingw sysroot lib path not found)\n+      # Try without mingw\n+      MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/lib\n+      ifeq ($(wildcard $(MINGW_SYSROOT_LIB_PATH)), )\n+        $(error mingw sysroot lib path not found)\n+      endif\n@@ -72,1 +117,0 @@\n-  endif\n@@ -74,6 +118,2 @@\n-  MINGW_VERSION = $(shell $(MINGW_BASE)-gcc -v 2>&1 | $(GREP) \"gcc version\" | $(CUT) -d \" \" -f 3)\n-  MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION)\n-  ifeq ($(wildcard $(MINGW_GCC_LIB_PATH)), )\n-    # Try using only major version number\n-    MINGW_VERSION_MAJOR := $(firstword $(subst ., , $(MINGW_VERSION)))\n-    MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION_MAJOR)\n+    MINGW_VERSION = $(shell $(MINGW_BASE)-gcc -v 2>&1 | $(GREP) \"gcc version\" | $(CUT) -d \" \" -f 3)\n+    MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION)\n@@ -81,1 +121,6 @@\n-      $(error mingw gcc lib path not found)\n+      # Try using only major version number\n+      MINGW_VERSION_MAJOR := $(firstword $(subst ., , $(MINGW_VERSION)))\n+      MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION_MAJOR)\n+      ifeq ($(wildcard $(MINGW_GCC_LIB_PATH)), )\n+        $(error mingw gcc lib path not found)\n+      endif\n@@ -83,1 +128,0 @@\n-  endif\n@@ -85,24 +129,20 @@\n-  TOOLCHAIN_TYPE := gcc\n-  OPENJDK_TARGET_OS := linux\n-  CC_OUT_OPTION := -o$(SPACE)\n-  LD_OUT_OPTION := -o$(SPACE)\n-  GENDEPS_FLAGS := -MMD -MF\n-  CFLAGS_DEBUG_SYMBOLS := -g\n-  DISABLED_WARNINGS :=\n-  DISABLE_WARNING_PREFIX := -Wno-\n-  CFLAGS_WARNINGS_ARE_ERRORS := -Werror\n-  SHARED_LIBRARY_FLAGS := -shared\n-\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n-  HSDIS_TOOLCHAIN_CFLAGS :=\n-  HSDIS_TOOLCHAIN_LDFLAGS := -L$(MINGW_GCC_LIB_PATH) -L$(MINGW_SYSROOT_LIB_PATH)\n-  MINGW_DLLCRT := $(MINGW_SYSROOT_LIB_PATH)\/dllcrt2.o\n-  HSDIS_TOOLCHAIN_LIBS := $(MINGW_DLLCRT) -lmingw32 -lgcc -lgcc_eh -lmoldname \\\n-      -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32\n-else\n-  INSTALLED_HSDIS_DIR := $(JDK_OUTPUTDIR)\/lib\n-\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n-  HSDIS_TOOLCHAIN_CFLAGS := $(CFLAGS_JDKLIB)\n-  HSDIS_TOOLCHAIN_LDFLAGS := $(LDFLAGS_JDKLIB)\n-  HSDIS_TOOLCHAIN_LIBS := -ldl\n+    TOOLCHAIN_TYPE := gcc\n+    OPENJDK_TARGET_OS := linux\n+    CC_OUT_OPTION := -o$(SPACE)\n+    LD_OUT_OPTION := -o$(SPACE)\n+    GENDEPS_FLAGS := -MMD -MF\n+    CFLAGS_DEBUG_SYMBOLS := -g\n+    DISABLED_WARNINGS :=\n+    DISABLE_WARNING_PREFIX := -Wno-\n+    CFLAGS_WARNINGS_ARE_ERRORS := -Werror\n+    SHARED_LIBRARY_FLAGS := -shared\n+\n+    HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n+    HSDIS_TOOLCHAIN_CFLAGS :=\n+    HSDIS_TOOLCHAIN_LDFLAGS := -L$(MINGW_GCC_LIB_PATH) -L$(MINGW_SYSROOT_LIB_PATH)\n+    MINGW_DLLCRT := $(MINGW_SYSROOT_LIB_PATH)\/dllcrt2.o\n+    HSDIS_TOOLCHAIN_LIBS := $(MINGW_DLLCRT) -lmingw32 -lgcc -lgcc_eh -lmoldname \\\n+        -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32\n+  else\n+    HSDIS_TOOLCHAIN_LIBS := -ldl\n+  endif\n@@ -111,1 +151,0 @@\n-\n@@ -114,1 +153,2 @@\n-    SRC := $(TOPDIR)\/src\/utils\/hsdis, \\\n+    SRC := $(TOPDIR)\/src\/utils\/hsdis\/$(HSDIS_BACKEND), \\\n+    EXTRA_HEADER_DIRS := $(TOPDIR)\/src\/utils\/hsdis, \\\n@@ -121,1 +161,1 @@\n-    LDFLAGS := $(HSDIS_TOOLCHAIN_LDFLAGS) $(SHARED_LIBRARY_FLAGS), \\\n+    LDFLAGS := $(HSDIS_TOOLCHAIN_LDFLAGS) $(HSDIS_LDFLAGS) $(SHARED_LIBRARY_FLAGS), \\\n@@ -132,0 +172,1 @@\n+INSTALLED_HSDIS_IMAGE := $(IMAGE_HSDIS_DIR)\/$(INSTALLED_HSDIS_NAME)\n@@ -134,1 +175,3 @@\n-\t$(call LogWarn, NOTE: The resulting build might not be redistributable. Seek legal advice before distibuting.)\n+        ifeq ($(HSDIS_BACKEND), binutils)\n+\t  $(call LogWarn, NOTE: The resulting build might not be redistributable. Seek legal advice before distributing.)\n+        endif\n@@ -137,0 +180,2 @@\n+$(INSTALLED_HSDIS_IMAGE): $(INSTALLED_HSDIS)\n+\t$(install-file)\n@@ -138,1 +183,1 @@\n-install: $(INSTALLED_HSDIS)\n+install: $(INSTALLED_HSDIS_IMAGE)\n","filename":"make\/Hsdis.gmk","additions":107,"deletions":62,"binary":false,"changes":169,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-\t$(ECHO) \"build.workspace.root=$(call FixPath, $(WORKSPACE_ROOT))\" >> $@\n-\t$(ECHO) \"build.output.root=$(call FixPath, $(OUTPUTDIR))\" >> $@\n+\t$(ECHO) 'build.workspace.root=$(call FixPath, $(WORKSPACE_ROOT))' >> $@\n+\t$(ECHO) 'build.output.root=$(call FixPath, $(OUTPUTDIR))' >> $@\n","filename":"make\/TestImage.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -785,1 +785,0 @@\n-      workspace_root_win=`$FIXPATH_BASE print \"${WORKSPACE_ROOT%\/}\"`\n@@ -787,2 +786,1 @@\n-      PATHMAP_FLAGS=\"-pathmap:${workspace_root_win\/\/\\\/\/\\\\\\\\}=s \\\n-          -pathmap:${workspace_root_win}=s\"\n+      PATHMAP_FLAGS=\"-pathmap:${WORKSPACE_ROOT}=s\"\n@@ -808,0 +806,2 @@\n+  FLAGS_SETUP_BRANCH_PROTECTION\n+\n@@ -813,1 +813,1 @@\n-      $REPRODUCIBLE_CFLAGS\"\n+      $REPRODUCIBLE_CFLAGS $BRANCH_PROTECTION_CFLAGS\"\n@@ -818,1 +818,1 @@\n-      $FILE_MACRO_CFLAGS $REPRODUCIBLE_CFLAGS\"\n+      $FILE_MACRO_CFLAGS $REPRODUCIBLE_CFLAGS $BRANCH_PROTECTION_CFLAGS\"\n@@ -884,0 +884,21 @@\n+\n+AC_DEFUN_ONCE([FLAGS_SETUP_BRANCH_PROTECTION],\n+[\n+  # Is branch protection available?\n+  BRANCH_PROTECTION_AVAILABLE=false\n+  BRANCH_PROTECTION_FLAG=\"-mbranch-protection=standard\"\n+\n+  if test \"x$OPENJDK_TARGET_CPU\" = xaarch64; then\n+    if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+      FLAGS_COMPILER_CHECK_ARGUMENTS(ARGUMENT: [${BRANCH_PROTECTION_FLAG}],\n+          IF_TRUE: [BRANCH_PROTECTION_AVAILABLE=true])\n+    fi\n+  fi\n+\n+  BRANCH_PROTECTION_CFLAGS=\"\"\n+  UTIL_ARG_ENABLE(NAME: branch-protection, DEFAULT: false,\n+      RESULT: USE_BRANCH_PROTECTION, AVAILABLE: $BRANCH_PROTECTION_AVAILABLE,\n+      DESC: [enable branch protection when compiling C\/C++],\n+      IF_ENABLED: [ BRANCH_PROTECTION_CFLAGS=${BRANCH_PROTECTION_FLAG}])\n+  AC_SUBST(BRANCH_PROTECTION_CFLAGS)\n+])\n","filename":"make\/autoconf\/flags-cflags.m4","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -120,0 +120,2 @@\n+    capstone)\n+      PKGHANDLER_COMMAND=\"sudo apt-get install libcapstone-dev\" ;;\n@@ -171,0 +173,2 @@\n+    capstone)\n+      PKGHANDLER_COMMAND=\"brew install capstone\" ;;\n","filename":"make\/autoconf\/help.m4","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -814,1 +814,7 @@\n-      [what hsdis backend to use ('none', 'binutils') @<:@none@:>@])])\n+      [what hsdis backend to use ('none', 'capstone', 'llvm', 'binutils') @<:@none@:>@])])\n+\n+  AC_ARG_WITH(capstone, [AS_HELP_STRING([--with-capstone],\n+      [where to find the Capstone files needed for hsdis\/capstone])])\n+\n+  AC_ARG_WITH([llvm], [AS_HELP_STRING([--with-llvm],\n+      [where to find the LLVM files needed for hsdis\/llvm])])\n@@ -829,0 +835,88 @@\n+  elif test \"x$with_hsdis\" = xcapstone; then\n+    HSDIS_BACKEND=capstone\n+    AC_MSG_RESULT(['capstone'])\n+\n+    if test \"x$with_capstone\" != x; then\n+      AC_MSG_CHECKING([for capstone])\n+      CAPSTONE=\"$with_capstone\"\n+      AC_MSG_RESULT([$CAPSTONE])\n+\n+      HSDIS_CFLAGS=\"-I${CAPSTONE}\/include\/capstone\"\n+      if test \"x$OPENJDK_TARGET_OS\" != xwindows; then\n+        HSDIS_LDFLAGS=\"-L${CAPSTONE}\/lib\"\n+        HSDIS_LIBS=\"-lcapstone\"\n+      else\n+        HSDIS_LDFLAGS=\"-nodefaultlib:libcmt.lib\"\n+        HSDIS_LIBS=\"${CAPSTONE}\/capstone.lib\"\n+      fi\n+    else\n+      if test \"x$OPENJDK_TARGET_OS\" = xwindows; then\n+        # There is no way to auto-detect capstone on Windowos\n+        AC_MSG_NOTICE([You must specify capstone location using --with-capstone=<path>])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+\n+      PKG_CHECK_MODULES(CAPSTONE, capstone, [CAPSTONE_FOUND=yes], [CAPSTONE_FOUND=no])\n+      if test \"x$CAPSTONE_FOUND\" = xyes; then\n+        HSDIS_CFLAGS=\"$CAPSTONE_CFLAGS\"\n+        HSDIS_LDFLAGS=\"$CAPSTONE_LDFLAGS\"\n+        HSDIS_LIBS=\"$CAPSTONE_LIBS\"\n+      else\n+        HELP_MSG_MISSING_DEPENDENCY([capstone])\n+        AC_MSG_NOTICE([Cannot locate capstone which is needed for hsdis\/capstone. Try using --with-capstone=<path>. $HELP_MSG])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+    fi\n+  elif test \"x$with_hsdis\" = xllvm; then\n+    HSDIS_BACKEND=llvm\n+    AC_MSG_RESULT(['llvm'])\n+\n+    if test \"x$with_llvm\" != x; then\n+      LLVM_DIR=\"$with_llvm\"\n+    fi\n+\n+    if test \"x$OPENJDK_TARGET_OS\" != xwindows; then\n+      if test \"x$LLVM_DIR\" = x; then\n+        # Macs with homebrew can have llvm in different places\n+        UTIL_LOOKUP_PROGS(LLVM_CONFIG, llvm-config, [$PATH:\/usr\/local\/opt\/llvm\/bin:\/opt\/homebrew\/opt\/llvm\/bin])\n+        if test \"x$LLVM_CONFIG\" = x; then\n+          AC_MSG_NOTICE([Cannot locate llvm-config which is needed for hsdis\/llvm. Try using --with-llvm=<LLVM home>.])\n+          AC_MSG_ERROR([Cannot continue])\n+        fi\n+      else\n+        UTIL_LOOKUP_PROGS(LLVM_CONFIG, llvm-config, [$LLVM_DIR\/bin])\n+        if test \"x$LLVM_CONFIG\" = x; then\n+          AC_MSG_NOTICE([Cannot locate llvm-config in $LLVM_DIR. Check your --with-llvm argument.])\n+          AC_MSG_ERROR([Cannot continue])\n+        fi\n+      fi\n+\n+      # We need the LLVM flags and libs, and llvm-config provides them for us.\n+      HSDIS_CFLAGS=`$LLVM_CONFIG --cflags`\n+      HSDIS_LDFLAGS=`$LLVM_CONFIG --ldflags`\n+      HSDIS_LIBS=`$LLVM_CONFIG --libs $OPENJDK_TARGET_CPU_ARCH ${OPENJDK_TARGET_CPU_ARCH}disassembler`\n+    else\n+      if test \"x$LLVM_DIR\" = x; then\n+        AC_MSG_NOTICE([--with-llvm is needed on Windows to point out the LLVM home])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+\n+      # Official Windows installation of LLVM do not ship llvm-config, and self-built llvm-config\n+      # produced unusable output, so just ignore it on Windows.\n+      if ! test -e $LLVM_DIR\/include\/llvm-c\/lto.h; then\n+        AC_MSG_NOTICE([$LLVM_DIR does not seem like a valid LLVM home; include dir is missing])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+      if ! test -e $LLVM_DIR\/include\/llvm-c\/Disassembler.h; then\n+        AC_MSG_NOTICE([$LLVM_DIR does not point to a complete LLVM installation. ])\n+        AC_MSG_NOTICE([The official LLVM distribution is missing crucical files; you need to build LLVM yourself or get all include files elsewhere])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+      if ! test -e $LLVM_DIR\/lib\/llvm-c.lib; then\n+        AC_MSG_NOTICE([$LLVM_DIR does not seem like a valid LLVM home; lib dir is missing])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+      HSDIS_CFLAGS=\"-I$LLVM_DIR\/include\"\n+      HSDIS_LDFLAGS=\"-libpath:$LLVM_DIR\/lib\"\n+      HSDIS_LIBS=\"llvm-c.lib\"\n+    fi\n@@ -856,0 +950,1 @@\n+        HSDIS_LDFLAGS=\"\"\n@@ -898,0 +993,1 @@\n+  AC_SUBST(HSDIS_LDFLAGS)\n","filename":"make\/autoconf\/jdk-options.m4","additions":97,"deletions":1,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -202,0 +202,4 @@\n+      if test \"x$VERSION_BUILD\" = x0; then\n+        AC_MSG_WARN([Version build 0 is interpreted as no build number])\n+        VERSION_BUILD=\n+      fi\n@@ -253,1 +257,2 @@\n-      # Default is to calculate a string like this 'adhoc.<username>.<base dir name>'\n+      # Default is to calculate a string like this:\n+      # 'adhoc.<username>.<base dir name>'\n@@ -255,1 +260,1 @@\n-      [ basedirname=`$BASENAME \"$TOPDIR\" | $TR -d -c '[a-z][A-Z][0-9].-'` ]\n+      [ basedirname=`$BASENAME \"$WORKSPACE_ROOT\" | $TR -d -c '[a-z][A-Z][0-9].-'` ]\n@@ -274,0 +279,4 @@\n+      if test \"x$VERSION_BUILD\" = \"x0\"; then\n+        AC_MSG_WARN([--with-version-build=0 is interpreted as --without-version-build])\n+        VERSION_BUILD=\n+      fi\n@@ -279,2 +288,0 @@\n-      # FIXME: Until all code can cope with an empty VERSION_BUILD, set it to 0.\n-      VERSION_BUILD=0\n@@ -453,3 +460,12 @@\n-  # The complete version string, with additional build information\n-  if test \"x$VERSION_BUILD$VERSION_OPT\" = x; then\n-    VERSION_STRING=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}\n+  # A build number of \"0\" is interpreted as \"no build number\".\n+  if test \"x$VERSION_BUILD\" = x0; then\n+    VERSION_BUILD=\n+  fi\n+\n+  # Compute the complete version string, with additional build information\n+  version_with_pre=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}\n+  if test \"x$VERSION_BUILD\" != x || \\\n+      ( test \"x$VERSION_OPT\" != x && test \"x$VERSION_PRE\" = x ); then\n+    # As per JEP 223, if build is set, or if opt is set but not pre,\n+    # we need a + separator\n+    version_with_build=$version_with_pre+$VERSION_BUILD\n@@ -457,2 +473,1 @@\n-    # If either build or opt is set, we need a + separator\n-    VERSION_STRING=$VERSION_NUMBER${VERSION_PRE:+-$VERSION_PRE}+$VERSION_BUILD${VERSION_OPT:+-$VERSION_OPT}\n+    version_with_build=$version_with_pre\n@@ -460,0 +475,1 @@\n+  VERSION_STRING=$version_with_build${VERSION_OPT:+-$VERSION_OPT}\n","filename":"make\/autoconf\/jdk-version.m4","additions":25,"deletions":9,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    jvmci jvmti link-time-opt management minimal nmt opt-size parallelgc \\\n+    jvmci jvmti link-time-opt management minimal opt-size parallelgc \\\n@@ -71,1 +71,0 @@\n-m4_define(jvm_feature_desc_nmt, [include native memory tracking (NMT)])\n@@ -268,16 +267,0 @@\n-###############################################################################\n-# Check if the feature 'jfr' is available on this platform.\n-#\n-AC_DEFUN_ONCE([JVM_FEATURES_CHECK_JFR],\n-[\n-  JVM_FEATURES_CHECK_AVAILABILITY(jfr, [\n-    AC_MSG_CHECKING([if platform is supported by JFR])\n-    if test \"x$OPENJDK_TARGET_OS\" = xaix; then\n-      AC_MSG_RESULT([no, $OPENJDK_TARGET_OS-$OPENJDK_TARGET_CPU])\n-      AVAILABLE=false\n-    else\n-      AC_MSG_RESULT([yes])\n-    fi\n-  ])\n-])\n-\n@@ -403,1 +386,0 @@\n-  JVM_FEATURES_CHECK_JFR\n@@ -409,6 +391,0 @@\n-  # Filter out features by default for all variants on certain platforms.\n-  # Make sure to just add to JVM_FEATURES_PLATFORM_FILTER, since it could\n-  # have a value already from custom extensions.\n-  if test \"x$OPENJDK_TARGET_OS\" = xaix; then\n-    JVM_FEATURES_PLATFORM_FILTER=\"$JVM_FEATURES_PLATFORM_FILTER jfr\"\n-  fi\n@@ -446,1 +422,1 @@\n-        jfr jni-check jvmci jvmti management nmt parallelgc services \\\n+        jfr jni-check jvmci jvmti management parallelgc services \\\n@@ -541,4 +517,0 @@\n-  if JVM_FEATURES_IS_ACTIVE(management) && ! JVM_FEATURES_IS_ACTIVE(nmt); then\n-    AC_MSG_ERROR([Specified JVM feature 'management' requires feature 'nmt' for variant '$variant'])\n-  fi\n-\n","filename":"make\/autoconf\/jvm-features.m4","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,1 +242,1 @@\n-VERSION_CFLAGS := \\\n+VERSION_CFLAGS = \\\n@@ -364,0 +364,1 @@\n+HSDIS_LDFLAGS := @HSDIS_LDFLAGS@\n@@ -409,0 +410,1 @@\n+BRANCH_PROTECTION_CFLAGS := @BRANCH_PROTECTION_CFLAGS@\n@@ -422,1 +424,1 @@\n-# Source folder for user provided cacerts PEM files \n+# Source folder for user provided cacerts PEM files\n@@ -932,1 +934,6 @@\n-BASE_NAME := $(VERSION_SHORT)+$(VERSION_BUILD)_$(OPENJDK_TARGET_BUNDLE_PLATFORM)\n+ifneq ($(VERSION_BUILD), )\n+  BASE_NAME := $(VERSION_SHORT)+$(VERSION_BUILD)_$(OPENJDK_TARGET_BUNDLE_PLATFORM)\n+else\n+  BASE_NAME := $(VERSION_SHORT)_$(OPENJDK_TARGET_BUNDLE_PLATFORM)\n+endif\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1172,7 +1172,0 @@\n-            \/\/ Use custom build of JCov\n-            \/\/ See CODETOOLS-7902734 for more info.\n-            \/\/ server: \"jpg\",\n-            \/\/ product: \"jcov\",\n-            \/\/ version: \"3.0\",\n-            \/\/ build_number: \"b07\",\n-            \/\/ file: \"bundles\/jcov-3_0.zip\",\n@@ -1180,1 +1173,1 @@\n-            revision: \"3.0-9-jdk-asm+1.0\",\n+            revision: \"3.0-12-jdk-asm+1.0\",\n@@ -1434,1 +1427,4 @@\n-    var args = [\"--with-version-build=\" + common.build_number];\n+    var args = [];\n+    if (common.build_number != 0) {\n+        args = concat(args, \"--with-version-build=\" + common.build_number);\n+    }\n","filename":"make\/conf\/jib-profiles.js","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,0 +161,1 @@\n+JVM_LoadZipLibrary\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/cbbba1d234670453df9c930dfbf510c0474d4301\/public_suffix_list.dat\n-Date: 2020-04-24\n+Github: https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/3c213aab32b3c014f171b1673d4ce9b5cd72bf1c\/public_suffix_list.dat\n+Date: 2021-11-27\n","filename":"make\/data\/publicsuffixlist\/VERSION","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-\/\/ ar : https:\/\/nic.ar\/nic-argentina\/normativa-vigente\n+\/\/ ar : https:\/\/nic.ar\/es\/nic-argentina\/normativa\n@@ -180,0 +180,1 @@\n+bet.ar\n@@ -181,0 +182,1 @@\n+coop.ar\n@@ -187,0 +189,1 @@\n+mutual.ar\n@@ -189,0 +192,1 @@\n+senasa.ar\n@@ -261,1 +265,1 @@\n-education.tas.edu.au\n+\/\/ education.tas.edu.au - Removed at the request of the Department of Education Tasmania\n@@ -459,0 +463,1 @@\n+app.br\n@@ -466,0 +471,1 @@\n+bib.br\n@@ -480,0 +486,1 @@\n+coz.br\n@@ -484,0 +491,3 @@\n+des.br\n+det.br\n+dev.br\n@@ -488,0 +498,1 @@\n+enf.br\n@@ -503,0 +514,1 @@\n+geo.br\n@@ -546,0 +558,1 @@\n+log.br\n@@ -578,0 +591,1 @@\n+rep.br\n@@ -588,0 +602,1 @@\n+seg.br\n@@ -595,0 +610,1 @@\n+tec.br\n@@ -725,1 +741,0 @@\n-aprendemas.cl\n@@ -830,0 +845,1 @@\n+\/\/ cv : http:\/\/www.dns.cv\/tldcv_portal\/do?com=DS;5446457100;111;+PAGE(4000018)+K-CAT-CODIGO(RDOM)+RCNT(100); <- registration rules\n@@ -831,0 +847,5 @@\n+com.cv\n+edu.cv\n+int.cv\n+nome.cv\n+org.cv\n@@ -898,1 +919,1 @@\n-\/\/ dz : https:\/\/en.wikipedia.org\/wiki\/.dz\n+\/\/ dz : http:\/\/www.nic.dz\/images\/pdf_nic\/charte.pdf\n@@ -900,0 +921,2 @@\n+art.dz\n+asso.dz\n@@ -901,0 +924,2 @@\n+edu.dz\n+gov.dz\n@@ -903,3 +928,0 @@\n-gov.dz\n-edu.dz\n-asso.dz\n@@ -907,1 +929,2 @@\n-art.dz\n+soc.dz\n+tm.dz\n@@ -1005,0 +1028,4 @@\n+com.fm\n+edu.fm\n+net.fm\n+org.fm\n@@ -1044,0 +1071,2 @@\n+edu.gd\n+gov.gd\n@@ -1135,1 +1164,1 @@\n-\/\/ gt : http:\/\/www.gt\/politicas_de_registro.html\n+\/\/ gt : https:\/\/www.gt\/sitio\/registration_policy.php?lang=en\n@@ -1159,0 +1188,1 @@\n+\/\/ gw : https:\/\/nic.gw\/regras\/\n@@ -3788,1 +3818,1 @@\n-\/\/ lk : http:\/\/www.nic.lk\/seclevpr.html\n+\/\/ lk : https:\/\/www.nic.lk\/index.php\/domain-registration\/lk-domain-naming-structure\n@@ -4577,1 +4607,2 @@\n-\/\/ my : http:\/\/www.mynic.net.my\/\n+\/\/ my : http:\/\/www.mynic.my\/\n+\/\/ Available strings: https:\/\/mynic.my\/resources\/domains\/buying-a-domain\/\n@@ -4579,0 +4610,1 @@\n+biz.my\n@@ -4580,3 +4612,0 @@\n-net.my\n-org.my\n-gov.my\n@@ -4584,0 +4613,1 @@\n+gov.my\n@@ -4586,0 +4616,2 @@\n+net.my\n+org.my\n@@ -4682,5 +4714,5 @@\n-\/\/ no : http:\/\/www.norid.no\/regelverk\/index.en.html\n-\/\/ The Norwegian registry has declined to notify us of updates. The web pages\n-\/\/ referenced below are the official source of the data. There is also an\n-\/\/ announce mailing list:\n-\/\/ https:\/\/postlister.uninett.no\/sympa\/info\/norid-diskusjon\n+\/\/ no : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/\n+\/\/ Norid geographical second level domains : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-b\/\n+\/\/ Norid category second level domains : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-c\/\n+\/\/ Norid category second-level domains managed by parties other than Norid : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-d\/\n+\/\/ RSS feed: https:\/\/teknisk.norid.no\/en\/feed\/\n@@ -4688,1 +4720,1 @@\n-\/\/ Norid generic domains : http:\/\/www.norid.no\/regelverk\/vedlegg-c.en.html\n+\/\/ Norid category second level domains : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-c\/\n@@ -4696,1 +4728,1 @@\n-\/\/ Non-Norid generic domains : http:\/\/www.norid.no\/regelverk\/vedlegg-d.en.html\n+\/\/ Norid category second-level domains managed by parties other than Norid : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-d\/\n@@ -4702,1 +4734,1 @@\n-\/\/ no geographical names : http:\/\/www.norid.no\/regelverk\/vedlegg-b.en.html\n+\/\/ Norid geographical second level domains : https:\/\/www.norid.no\/en\/om-domenenavn\/regelverk-for-no\/vedlegg-b\/\n@@ -5831,1 +5863,1 @@\n-\/\/ pt : http:\/\/online.dns.pt\/dns\/start_dns\n+\/\/ pt : https:\/\/www.dns.pt\/en\/domain\/pt-terms-and-conditions-registration-rules\/\n@@ -6068,0 +6100,1 @@\n+me.ss\n@@ -6070,0 +6103,1 @@\n+sch.ss\n@@ -6078,1 +6112,0 @@\n-gov.st\n@@ -6183,2 +6216,2 @@\n-\/\/ tn : https:\/\/en.wikipedia.org\/wiki\/.tn\n-\/\/ http:\/\/whois.ati.tn\/\n+\/\/ tn : http:\/\/www.registre.tn\/fr\/\n+\/\/ https:\/\/whois.ati.tn\/\n@@ -6191,0 +6224,1 @@\n+info.tn\n@@ -6192,0 +6226,1 @@\n+mincom.tn\n@@ -6195,1 +6230,0 @@\n-info.tn\n@@ -6198,8 +6232,0 @@\n-edunet.tn\n-rnrt.tn\n-rns.tn\n-rnu.tn\n-mincom.tn\n-agrinet.tn\n-defense.tn\n-turen.tn\n@@ -6330,1 +6356,0 @@\n-dominic.ua\n@@ -6696,1 +6721,1 @@\n-\/\/ Submitted by registry\n+\/\/ Submitted by registry nic@nic.ve and nicve@conatel.gob.ve\n@@ -6699,0 +6724,1 @@\n+bib.ve\n@@ -6710,0 +6736,1 @@\n+nom.ve\n@@ -6711,0 +6738,1 @@\n+rar.ve\n@@ -6789,0 +6817,3 @@\n+\/\/ xn--mgbcpq6gpa1a (\"albahrain\", Arabic) : BH\n+البحرين\n+\n@@ -6921,0 +6952,3 @@\n+\/\/ xn--q7ce6a (\"Lao\", Lao) : LA\n+ລາວ\n+\n@@ -6922,1 +6956,1 @@\n-\/\/ http:\/\/nic.lk\n+\/\/ https:\/\/nic.lk\n@@ -6926,1 +6960,1 @@\n-\/\/ http:\/\/nic.lk\n+\/\/ https:\/\/nic.lk\n@@ -7046,1 +7080,7 @@\n-*.ye\n+ye\n+com.ye\n+edu.ye\n+gov.ye\n+net.ye\n+mil.ye\n+org.ye\n@@ -7095,1 +7135,1 @@\n-\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2020-04-02T18:20:31Z\n+\/\/ List of new gTLDs imported from https:\/\/www.icann.org\/resources\/registries\/gtlds\/v2\/gtlds.json on 2021-11-13T15:12:42Z\n@@ -7121,1 +7161,1 @@\n-\/\/ abogado : 2014-04-24 Minds + Machines Group Limited\n+\/\/ abogado : 2014-04-24 Registry Services, LLC\n@@ -7178,3 +7218,0 @@\n-\/\/ aigo : 2015-08-06 aigo Digital Technology Co,Ltd.\n-aigo\n-\n@@ -7244,1 +7281,1 @@\n-\/\/ anquan : 2015-01-08 QIHOO 360 TECHNOLOGY CO. LTD.\n+\/\/ anquan : 2015-01-08 Beijing Qihu Keji Co., Ltd.\n@@ -7304,1 +7341,1 @@\n-\/\/ audio : 2014-03-20 Uniregistry, Corp.\n+\/\/ audio : 2014-03-20 UNR Corp.\n@@ -7313,1 +7350,1 @@\n-\/\/ auto : 2014-11-13 Cars Registry Limited\n+\/\/ auto : 2014-11-13 XYZ.COM LLC\n@@ -7316,1 +7353,1 @@\n-\/\/ autos : 2014-01-09 DERAutos, LLC\n+\/\/ autos : 2014-01-09 XYZ.COM LLC\n@@ -7322,1 +7359,1 @@\n-\/\/ aws : 2015-06-25 Amazon Registry Services, Inc.\n+\/\/ aws : 2015-06-25 AWS Registry LLC\n@@ -7325,1 +7362,1 @@\n-\/\/ axa : 2013-12-19 AXA SA\n+\/\/ axa : 2013-12-19 AXA Group Operations SAS\n@@ -7400,1 +7437,1 @@\n-\/\/ beer : 2014-01-09 Minds + Machines Group Limited\n+\/\/ beer : 2014-01-09 Registry Services, LLC\n@@ -7442,1 +7479,1 @@\n-\/\/ blackfriday : 2014-01-16 Uniregistry, Corp.\n+\/\/ blackfriday : 2014-01-16 UNR Corp.\n@@ -7466,1 +7503,1 @@\n-\/\/ boats : 2014-12-04 DERBoats, LLC\n+\/\/ boats : 2014-12-04 XYZ.COM LLC\n@@ -7505,1 +7542,1 @@\n-\/\/ box : 2015-11-12 .BOX INC.\n+\/\/ box : 2015-11-12 Intercap Registry Inc.\n@@ -7517,1 +7554,1 @@\n-\/\/ broker : 2014-12-11 Dotbroker Registry Limited\n+\/\/ broker : 2014-12-11 Dog Beach, LLC\n@@ -7589,1 +7626,1 @@\n-\/\/ car : 2015-01-22 Cars Registry Limited\n+\/\/ car : 2015-01-22 XYZ.COM LLC\n@@ -7607,1 +7644,1 @@\n-\/\/ cars : 2014-11-13 Cars Registry Limited\n+\/\/ cars : 2014-11-13 XYZ.COM LLC\n@@ -7610,1 +7647,1 @@\n-\/\/ casa : 2013-11-21 Minds + Machines Group Limited\n+\/\/ casa : 2013-11-21 Registry Services, LLC\n@@ -7613,1 +7650,1 @@\n-\/\/ case : 2015-09-03 CNH Industrial N.V.\n+\/\/ case : 2015-09-03 Helium TLDs Ltd\n@@ -7616,3 +7653,0 @@\n-\/\/ caseih : 2015-09-03 CNH Industrial N.V.\n-caseih\n-\n@@ -7643,3 +7677,0 @@\n-\/\/ ceb : 2015-04-09 The Corporate Executive Board Company\n-ceb\n-\n@@ -7658,1 +7689,1 @@\n-\/\/ cfd : 2014-12-11 DotCFD Registry Limited\n+\/\/ cfd : 2014-12-11 ShortDot SA\n@@ -7682,1 +7713,1 @@\n-\/\/ christmas : 2013-11-21 Uniregistry, Corp.\n+\/\/ christmas : 2013-11-21 UNR Corp.\n@@ -7721,1 +7752,1 @@\n-\/\/ click : 2014-06-05 Uniregistry, Corp.\n+\/\/ click : 2014-06-05 UNR Corp.\n@@ -7736,1 +7767,1 @@\n-\/\/ club : 2013-11-08 .CLUB DOMAINS, LLC\n+\/\/ club : 2013-11-08 Registry Services, LLC\n@@ -7793,1 +7824,1 @@\n-\/\/ cooking : 2013-11-21 Minds + Machines Group Limited\n+\/\/ cooking : 2013-11-21 Registry Services, LLC\n@@ -7826,1 +7857,1 @@\n-\/\/ creditunion : 2015-01-22 CUNA Performance Resources, LLC\n+\/\/ creditunion : 2015-01-22 DotCooperation LLC\n@@ -7883,1 +7914,1 @@\n-\/\/ dds : 2015-05-07 Minds + Machines Group Limited\n+\/\/ dds : 2015-05-07 Registry Services, LLC\n@@ -7922,1 +7953,1 @@\n-\/\/ design : 2014-11-07 Top Level Design, LLC\n+\/\/ design : 2014-11-07 Registry Services, LLC\n@@ -7934,1 +7965,1 @@\n-\/\/ diet : 2014-06-26 Uniregistry, Corp.\n+\/\/ diet : 2014-06-26 UNR Corp.\n@@ -7994,1 +8025,1 @@\n-\/\/ dupont : 2015-06-25 E. I. du Pont de Nemours and Company\n+\/\/ dupont : 2015-06-25 DuPont Specialty Products USA, LLC\n@@ -8057,3 +8088,0 @@\n-\/\/ esurance : 2015-07-23 Esurance Insurance Company\n-esurance\n-\n@@ -8114,1 +8142,1 @@\n-\/\/ fashion : 2014-07-03 Minds + Machines Group Limited\n+\/\/ fashion : 2014-07-03 Registry Services, LLC\n@@ -8165,1 +8193,1 @@\n-\/\/ fishing : 2013-11-21 Minds + Machines Group Limited\n+\/\/ fishing : 2013-11-21 Registry Services, LLC\n@@ -8168,1 +8196,1 @@\n-\/\/ fit : 2014-11-07 Minds + Machines Group Limited\n+\/\/ fit : 2014-11-07 Registry Services, LLC\n@@ -8174,1 +8202,1 @@\n-\/\/ flickr : 2015-04-02 Yahoo! Domain Services Inc.\n+\/\/ flickr : 2015-04-02 Flickr, Inc.\n@@ -8186,1 +8214,1 @@\n-\/\/ flowers : 2014-10-09 Uniregistry, Corp.\n+\/\/ flowers : 2014-10-09 UNR Corp.\n@@ -8207,1 +8235,1 @@\n-\/\/ forex : 2014-12-11 Dotforex Registry Limited\n+\/\/ forex : 2014-12-11 Dog Beach, LLC\n@@ -8246,4 +8274,1 @@\n-\/\/ fujixerox : 2015-07-23 Xerox DNHC LLC\n-fujixerox\n-\n-\/\/ fun : 2016-01-14 DotSpace Inc.\n+\/\/ fun : 2016-01-14 Radix FZC\n@@ -8276,1 +8301,1 @@\n-\/\/ game : 2015-05-28 Uniregistry, Corp.\n+\/\/ game : 2015-05-28 UNR Corp.\n@@ -8285,1 +8310,1 @@\n-\/\/ garden : 2014-06-26 Minds + Machines Group Limited\n+\/\/ garden : 2014-06-26 Registry Services, LLC\n@@ -8414,1 +8439,1 @@\n-\/\/ guitars : 2013-11-14 Uniregistry, Corp.\n+\/\/ guitars : 2013-11-14 UNR Corp.\n@@ -8447,1 +8472,1 @@\n-\/\/ help : 2014-06-26 Uniregistry, Corp.\n+\/\/ help : 2014-06-26 UNR Corp.\n@@ -8462,1 +8487,1 @@\n-\/\/ hiphop : 2014-03-06 Uniregistry, Corp.\n+\/\/ hiphop : 2014-03-06 UNR Corp.\n@@ -8471,1 +8496,1 @@\n-\/\/ hiv : 2014-03-13 Uniregistry, Corp.\n+\/\/ hiv : 2014-03-13 UNR Corp.\n@@ -8492,1 +8517,1 @@\n-\/\/ homes : 2014-01-09 DERHomes, LLC\n+\/\/ homes : 2014-01-09 XYZ.COM LLC\n@@ -8501,1 +8526,1 @@\n-\/\/ horse : 2013-11-21 Minds + Machines Group Limited\n+\/\/ horse : 2013-11-21 Registry Services, LLC\n@@ -8507,1 +8532,1 @@\n-\/\/ host : 2014-04-17 DotHost Inc.\n+\/\/ host : 2014-04-17 Radix FZC\n@@ -8510,1 +8535,1 @@\n-\/\/ hosting : 2014-05-29 Uniregistry, Corp.\n+\/\/ hosting : 2014-05-29 UNR Corp.\n@@ -8600,3 +8625,0 @@\n-\/\/ intel : 2015-08-06 Intel Corporation\n-intel\n-\n@@ -8633,3 +8655,0 @@\n-\/\/ iveco : 2015-09-03 CNH Industrial N.V.\n-iveco\n-\n@@ -8645,3 +8664,0 @@\n-\/\/ jcp : 2015-04-23 JCP Media, Inc.\n-jcp\n-\n@@ -8684,1 +8700,1 @@\n-\/\/ juegos : 2014-03-20 Uniregistry, Corp.\n+\/\/ juegos : 2014-03-20 UNR Corp.\n@@ -8711,0 +8727,3 @@\n+\/\/ kids : 2021-08-13 DotKids Foundation Limited\n+kids\n+\n@@ -8789,1 +8808,1 @@\n-\/\/ law : 2015-01-22 LW TLD Limited\n+\/\/ law : 2015-01-22 Registry Services, LLC\n@@ -8795,1 +8814,1 @@\n-\/\/ lds : 2014-03-20 IRI Domain Management, LLC (\"Applicant\")\n+\/\/ lds : 2014-03-20 IRI Domain Management, LLC\n@@ -8852,1 +8871,1 @@\n-\/\/ link : 2013-11-14 Uniregistry, Corp.\n+\/\/ link : 2013-11-14 UNR Corp.\n@@ -8870,1 +8889,1 @@\n-\/\/ llp : 2019-08-26 Dot Registry LLC\n+\/\/ llp : 2019-08-26 UNR Corp.\n@@ -8888,1 +8907,1 @@\n-\/\/ lol : 2015-01-30 Uniregistry, Corp.\n+\/\/ lol : 2015-01-30 UNR Corp.\n@@ -8918,4 +8937,1 @@\n-\/\/ lupin : 2014-11-07 LUPIN LIMITED\n-lupin\n-\n-\/\/ luxe : 2014-01-09 Minds + Machines Group Limited\n+\/\/ luxe : 2014-01-09 Registry Services, LLC\n@@ -8960,1 +8976,1 @@\n-\/\/ markets : 2014-12-11 Dotmarkets Registry Limited\n+\/\/ markets : 2014-12-11 Dog Beach, LLC\n@@ -9008,3 +9024,0 @@\n-\/\/ metlife : 2015-05-07 MetLife Services and Solutions, LLC\n-metlife\n-\n@@ -9050,1 +9063,1 @@\n-\/\/ mom : 2015-04-16 Uniregistry, Corp.\n+\/\/ mom : 2015-04-16 UNR Corp.\n@@ -9062,1 +9075,1 @@\n-\/\/ mormon : 2013-12-05 IRI Domain Management, LLC (\"Applicant\")\n+\/\/ mormon : 2013-12-05 IRI Domain Management, LLC\n@@ -9074,1 +9087,1 @@\n-\/\/ motorcycles : 2014-01-09 DERMotorcycles, LLC\n+\/\/ motorcycles : 2014-01-09 XYZ.COM LLC\n@@ -9092,0 +9105,3 @@\n+\/\/ music : 2021-05-04 DotMusic Limited\n+music\n+\n@@ -9101,3 +9117,0 @@\n-\/\/ nationwide : 2015-07-23 Nationwide Mutual Insurance Company\n-nationwide\n-\n@@ -9125,1 +9138,1 @@\n-\/\/ neustar : 2013-12-05 Registry Services, LLC\n+\/\/ neustar : 2013-12-05 NeuStar, Inc.\n@@ -9131,3 +9144,0 @@\n-\/\/ newholland : 2015-09-03 CNH Industrial N.V.\n-newholland\n-\n@@ -9179,1 +9189,1 @@\n-\/\/ norton : 2014-12-04 Symantec Corporation\n+\/\/ norton : 2014-12-04 NortonLifeLock Inc.\n@@ -9206,1 +9216,1 @@\n-\/\/ observer : 2015-04-30 Top Level Spectrum, Inc.\n+\/\/ observer : 2015-04-30 Dog Beach, LLC\n@@ -9239,1 +9249,1 @@\n-\/\/ onl : 2013-09-16 I-Registry Ltd.\n+\/\/ onl : 2013-09-16 iRegistry GmbH\n@@ -9242,1 +9252,1 @@\n-\/\/ online : 2015-01-15 DotOnline Inc.\n+\/\/ online : 2015-01-15 Radix FZC\n@@ -9245,3 +9255,0 @@\n-\/\/ onyourside : 2015-07-23 Nationwide Mutual Insurance Company\n-onyourside\n-\n@@ -9326,1 +9333,1 @@\n-\/\/ photo : 2013-11-14 Uniregistry, Corp.\n+\/\/ photo : 2013-11-14 UNR Corp.\n@@ -9338,1 +9345,1 @@\n-\/\/ pics : 2013-11-14 Uniregistry, Corp.\n+\/\/ pics : 2013-11-14 UNR Corp.\n@@ -9401,1 +9408,1 @@\n-\/\/ press : 2014-04-03 DotPress Inc.\n+\/\/ press : 2014-04-03 Radix FZC\n@@ -9425,1 +9432,1 @@\n-\/\/ property : 2014-05-22 Uniregistry, Corp.\n+\/\/ property : 2014-05-22 UNR Corp.\n@@ -9452,3 +9459,0 @@\n-\/\/ qvc : 2015-07-30 QVC, Inc.\n-qvc\n-\n@@ -9473,1 +9477,1 @@\n-\/\/ realty : 2015-03-19 Fegistry, LLC\n+\/\/ realty : 2015-03-19 Dog Beach, LLC\n@@ -9536,1 +9540,1 @@\n-\/\/ rich : 2013-11-21 I-Registry Ltd.\n+\/\/ rich : 2013-11-21 iRegistry GmbH\n@@ -9545,3 +9549,0 @@\n-\/\/ rightathome : 2015-07-23 Johnson Shareholdings, Inc.\n-rightathome\n-\n@@ -9557,3 +9558,0 @@\n-\/\/ rmit : 2015-11-19 Royal Melbourne Institute of Technology\n-rmit\n-\n@@ -9566,1 +9564,1 @@\n-\/\/ rodeo : 2013-12-19 Minds + Machines Group Limited\n+\/\/ rodeo : 2013-12-19 Registry Services, LLC\n@@ -9644,1 +9642,1 @@\n-\/\/ sbs : 2014-11-07 SPECIAL BROADCASTING SERVICE CORPORATION\n+\/\/ sbs : 2014-11-07 ShortDot SA\n@@ -9677,3 +9675,0 @@\n-\/\/ scor : 2014-10-31 SCOR SE\n-scor\n-\n@@ -9719,1 +9714,1 @@\n-\/\/ sexy : 2013-09-11 Uniregistry, Corp.\n+\/\/ sexy : 2013-09-11 UNR Corp.\n@@ -9752,1 +9747,1 @@\n-\/\/ shouji : 2015-01-08 QIHOO 360 TECHNOLOGY CO. LTD.\n+\/\/ shouji : 2015-01-08 Beijing Qihu Keji Co., Ltd.\n@@ -9761,3 +9756,0 @@\n-\/\/ shriram : 2014-01-23 Shriram Capital Ltd.\n-shriram\n-\n@@ -9773,1 +9765,1 @@\n-\/\/ site : 2015-01-15 DotSite Inc.\n+\/\/ site : 2015-01-15 Radix FZC\n@@ -9833,1 +9825,1 @@\n-\/\/ space : 2014-04-03 DotSpace Inc.\n+\/\/ space : 2014-04-03 Radix FZC\n@@ -9842,3 +9834,0 @@\n-\/\/ spreadbetting : 2014-12-11 Dotspreadbetting Registry Limited\n-spreadbetting\n-\n@@ -9875,1 +9864,1 @@\n-\/\/ store : 2015-04-09 DotStore Inc.\n+\/\/ store : 2015-04-09 Radix FZC\n@@ -9902,1 +9891,1 @@\n-\/\/ surf : 2014-01-09 Minds + Machines Group Limited\n+\/\/ surf : 2014-01-09 Registry Services, LLC\n@@ -9914,3 +9903,0 @@\n-\/\/ swiftcover : 2015-07-23 Swiftcover Insurance Services Limited\n-swiftcover\n-\n@@ -9923,3 +9909,0 @@\n-\/\/ symantec : 2014-12-04 Symantec Corporation\n-symantec\n-\n@@ -9950,1 +9933,1 @@\n-\/\/ tattoo : 2013-08-30 Uniregistry, Corp.\n+\/\/ tattoo : 2013-08-30 UNR Corp.\n@@ -9968,1 +9951,1 @@\n-\/\/ tech : 2015-01-30 Personals TLD Inc.\n+\/\/ tech : 2015-01-30 Radix FZC\n@@ -9995,1 +9978,1 @@\n-\/\/ tickets : 2015-02-05 Accent Media Limited\n+\/\/ tickets : 2015-02-05 XYZ.COM LLC\n@@ -10061,1 +10044,1 @@\n-\/\/ trading : 2014-12-11 Dottrading Registry Limited\n+\/\/ trading : 2014-12-11 Dog Beach, LLC\n@@ -10079,1 +10062,1 @@\n-\/\/ trust : 2014-10-16 NCC Group Inc.\n+\/\/ trust : 2014-10-16 UNR Corp.\n@@ -10112,1 +10095,1 @@\n-\/\/ uno : 2013-09-11 DotSite Inc.\n+\/\/ uno : 2013-09-11 Radix FZC\n@@ -10163,1 +10146,1 @@\n-\/\/ vip : 2015-01-22 Minds + Machines Group Limited\n+\/\/ vip : 2015-01-22 Registry Services, LLC\n@@ -10184,1 +10167,1 @@\n-\/\/ vodka : 2013-12-19 Minds + Machines Group Limited\n+\/\/ vodka : 2013-12-19 Registry Services, LLC\n@@ -10226,1 +10209,1 @@\n-\/\/ watches : 2014-12-22 Richemont DNS Inc.\n+\/\/ watches : 2014-12-22 Afilias Limited\n@@ -10241,1 +10224,1 @@\n-\/\/ website : 2014-04-03 DotWebsite Inc.\n+\/\/ website : 2014-04-03 Radix FZC\n@@ -10244,4 +10227,1 @@\n-\/\/ wed : 2013-10-01 Atgron, Inc.\n-wed\n-\n-\/\/ wedding : 2014-04-24 Minds + Machines Group Limited\n+\/\/ wedding : 2014-04-24 Registry Services, LLC\n@@ -10289,1 +10269,1 @@\n-\/\/ work : 2013-12-19 Minds + Machines Group Limited\n+\/\/ work : 2013-12-19 Registry Services, LLC\n@@ -10316,1 +10296,1 @@\n-\/\/ xihuan : 2015-01-08 QIHOO 360 TECHNOLOGY CO. LTD.\n+\/\/ xihuan : 2015-01-08 Beijing Qihu Keji Co., Ltd.\n@@ -10340,3 +10320,0 @@\n-\/\/ xn--3oq18vl8pn36a : 2015-07-02 Volkswagen (China) Investment Co., Ltd.\n-大众汽车\n-\n@@ -10352,1 +10329,1 @@\n-\/\/ xn--4gbrim : 2013-10-04 Fans TLD Limited\n+\/\/ xn--4gbrim : 2013-10-04 Helium TLDs Ltd\n@@ -10457,1 +10434,1 @@\n-\/\/ xn--g2xx48c : 2015-01-30 Minds + Machines Group Limited\n+\/\/ xn--g2xx48c : 2015-01-30 Nawang Heli(Xiamen) Network Service Co., LTD.\n@@ -10493,3 +10470,0 @@\n-\/\/ xn--kpu716f : 2014-12-22 Richemont DNS Inc.\n-手表\n-\n@@ -10550,3 +10524,0 @@\n-\/\/ xn--pbt977c : 2014-12-22 Richemont DNS Inc.\n-珠宝\n-\n@@ -10610,1 +10581,1 @@\n-\/\/ yachts : 2014-01-09 DERYachts, LLC\n+\/\/ yachts : 2014-01-09 XYZ.COM LLC\n@@ -10613,1 +10584,1 @@\n-\/\/ yahoo : 2015-04-02 Yahoo! Domain Services Inc.\n+\/\/ yahoo : 2015-04-02 Oath Inc.\n@@ -10625,1 +10596,1 @@\n-\/\/ yoga : 2014-05-29 Minds + Machines Group Limited\n+\/\/ yoga : 2014-05-29 Registry Services, LLC\n@@ -10637,1 +10608,1 @@\n-\/\/ yun : 2015-01-08 QIHOO 360 TECHNOLOGY CO. LTD.\n+\/\/ yun : 2015-01-08 Beijing Qihu Keji Co., Ltd.\n@@ -10669,0 +10640,11 @@\n+\/\/ 611coin : https:\/\/611project.org\/\n+611.to\n+\n+\/\/ Aaron Marais' Gitlab pages: https:\/\/lab.aaronleem.co.za\n+\/\/ Submitted by Aaron Marais <its_me@aaronleem.co.za>\n+graphox.us\n+\n+\/\/ accesso Technology Group, plc. : https:\/\/accesso.com\/\n+\/\/ Submitted by accesso Team <accessoecommerce@accesso.com>\n+*.devcdnaccesso.com\n+\n@@ -10670,1 +10652,1 @@\n-\/\/ Submitted by Ian Boston <boston@adobe.com>\n+\/\/ Submitted by Ian Boston <boston@adobe.com> and Lars Trieloff <trieloff@adobe.com>\n@@ -10672,1 +10654,0 @@\n-adobeaemcloud.net\n@@ -10674,0 +10655,4 @@\n+hlx.live\n+adobeaemcloud.net\n+hlx.page\n+hlx3.page\n@@ -10688,0 +10673,4 @@\n+\/\/ all-inkl.com : https:\/\/all-inkl.com\n+\/\/ Submitted by Werner Kaltofen <wk@all-inkl.com>\n+kasserver.com\n+\n@@ -10735,0 +10724,4 @@\n+\/\/ Amazon Global Accelerator : https:\/\/aws.amazon.com\/global-accelerator\/\n+\/\/ Submitted by Daniel Massaguer <psl-maintainers@amazon.com>\n+awsglobalaccelerator.com\n+\n@@ -10792,4 +10785,0 @@\n-\/\/ Amsterdam Wireless: https:\/\/www.amsterdamwireless.nl\/\n-\/\/ Submitted by Imre Jonk <hostmaster@amsterdamwireless.nl>\n-amsw.nl\n-\n@@ -10805,0 +10794,13 @@\n+\/\/ Apphud : https:\/\/apphud.com\n+\/\/ Submitted by Alexander Selivanov <alex@apphud.com>\n+siiites.com\n+\n+\/\/ Appspace : https:\/\/www.appspace.com\n+\/\/ Submitted by Appspace Security Team <security@appspace.com>\n+appspacehosted.com\n+appspaceusercontent.com\n+\n+\/\/ Appudo UG (haftungsbeschränkt) : https:\/\/www.appudo.com\n+\/\/ Submitted by Alexander Hochbaum <admin@appudo.com>\n+appudo.net\n+\n@@ -10830,0 +10832,4 @@\n+\/\/ Atlassian : https:\/\/atlassian.com\n+\/\/ Submitted by Sam Smyth <devloop@atlassian.com>\n+cdn.prod.atlassian-dev.net\n+\n@@ -10834,0 +10840,4 @@\n+\/\/ AVStack Pte. Ltd. : https:\/\/avstack.io\n+\/\/ Submitted by Jasper Hugo <jasper@avstack.io>\n+onavstack.net\n+\n@@ -10839,0 +10849,4 @@\n+\/\/ AZ.pl sp. z.o.o: https:\/\/az.pl\n+\/\/ Submited by Krzysztof Wolski <krzysztof.wolski@home.eu>\n+ecommerce-shop.pl\n+\n@@ -10851,0 +10865,5 @@\n+\/\/ University of Banja Luka : https:\/\/unibl.org\n+\/\/ Domains for Republic of Srpska administrative entity.\n+\/\/ Submitted by Marko Ivanovic <kormang@hotmail.rs>\n+rs.ba\n+\n@@ -10852,1 +10871,2 @@\n-\/\/ Submitted by Gabor Kozma <info@banzaicloud.com>\n+\/\/ Submitted by Janos Matyas <info@banzaicloud.com>\n+*.banzai.cloud\n@@ -10854,0 +10874,2 @@\n+*.backyards.banzaicloud.io\n+\n@@ -10863,0 +10885,4 @@\n+\/\/ Bitbucket : http:\/\/bitbucket.org\n+\/\/ Submitted by Andy Ortlieb <aortlieb@atlassian.com>\n+bitbucket.io\n+\n@@ -10867,0 +10893,8 @@\n+\/\/ Blatech : http:\/\/www.blatech.net\n+\/\/ Submitted by Luke Bratch <luke@bratch.co.uk>\n+of.je\n+\n+\/\/ Blue Bite, LLC : https:\/\/bluebite.com\n+\/\/ Submitted by Joshua Weiss <admin.engineering@bluebite.com>\n+bluebite.io\n+\n@@ -10871,0 +10905,4 @@\n+\/\/ Boutir : https:\/\/www.boutir.com\n+\/\/ Submitted by Eric Ng Ka Ka <ngkaka@boutir.com>\n+boutir.com\n+\n@@ -10884,0 +10922,4 @@\n+\/\/ Brendly : https:\/\/brendly.rs\n+\/\/ Submitted by Dusan Radovanovic <dusan.radovanovic@brendly.rs>\n+shop.brendly.rs\n+\n@@ -10894,0 +10936,4 @@\n+\/\/ Caf.js Labs LLC : https:\/\/www.cafjs.com\n+\/\/ Submitted by Antonio Lain <antlai@cafjs.com>\n+cafjs.com\n+\n@@ -10900,0 +10946,2 @@\n+drr.ac\n+uwu.ai\n@@ -10902,1 +10950,1 @@\n-uwu.ai\n+ju.mp\n@@ -10907,1 +10955,0 @@\n-ar.com\n@@ -10914,1 +10961,0 @@\n-gb.com\n@@ -10916,1 +10962,0 @@\n-hu.com\n@@ -10920,1 +10965,0 @@\n-kr.com\n@@ -10922,2 +10966,0 @@\n-no.com\n-qc.com\n@@ -10930,1 +10972,0 @@\n-uy.com\n@@ -10934,0 +10975,9 @@\n+\/\/ No longer operated by CentralNic, these entries should be adopted and\/or removed by current operators\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+ar.com\n+hu.com\n+kr.com\n+no.com\n+qc.com\n+uy.com\n+\n@@ -10945,0 +10995,1 @@\n+web.in\n@@ -10954,0 +11005,10 @@\n+\/\/ Roar Domains LLC : https:\/\/roar.basketball\/\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+aus.basketball\n+nz.basketball\n+\n+\/\/ BRS Media : https:\/\/brsmedia.com\/\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+radio.am\n+radio.fm\n+\n@@ -10961,3 +11022,3 @@\n-\/\/ Citrix : https:\/\/citrix.com\n-\/\/ Submitted by Alex Stoddard <alex.stoddard@citrix.com>\n-xenapponazure.com\n+\/\/ Cityhost LLC  : https:\/\/cityhost.ua\n+\/\/ Submitted by Maksym Rivtin <support@cityhost.net.ua>\n+cx.ua\n@@ -10970,4 +11031,0 @@\n-\/\/ ClearVox : http:\/\/www.clearvox.nl\/\n-\/\/ Submitted by Leon Rowland <leon@clearvox.nl>\n-virtueeldomein.nl\n-\n@@ -10979,1 +11036,3 @@\n-\/\/ Submitted by Colin Sidoti <colin@clerk.dev>\n+\/\/ Submitted by Colin Sidoti <systems@clerk.dev>\n+clerk.app\n+clerkstage.app\n@@ -10981,0 +11040,1 @@\n+*.lclstage.dev\n@@ -10982,0 +11042,1 @@\n+*.stgstage.dev\n@@ -10983,3 +11044,3 @@\n-\/\/ Clic2000 : https:\/\/clic2000.fr\n-\/\/ Submitted by Mathilde Blanchemanche <mathilde@clic2000.fr>\n-clic2000.net\n+\/\/ ClickRising : https:\/\/clickrising.com\/\n+\/\/ Submitted by Umut Gumeli <infrastructure-publicsuffixlist@clickrising.com>\n+clickrising.net\n@@ -11007,2 +11068,2 @@\n-\/\/ Submitted by Philip Langdale <security@cloudera.com>\n-cloudera.site\n+\/\/ Submitted by Kedarnath Waikar <security@cloudera.com>\n+*.cloudera.site\n@@ -11011,1 +11072,2 @@\n-\/\/ Submitted by Jake Riesterer <publicsuffixlist@cloudflare.com>\n+\/\/ Submitted by Cloudflare Team <publicsuffixlist@cloudflare.com>\n+pages.dev\n@@ -11052,4 +11114,0 @@\n-\/\/ Cloudeity Inc : https:\/\/cloudeity.com\n-\/\/ Submitted by Stefan Dimitrov <contact@cloudeity.com>\n-cloudeity.net\n-\n@@ -11119,0 +11177,6 @@\n+\/\/ Danger Science Group: https:\/\/dangerscience.com\/\n+\/\/ Submitted by Skylar MacDonald <skylar@dangerscience.com>\n+fnwk.site\n+folionetwork.site\n+platform0.app\n+\n@@ -11154,0 +11218,5 @@\n+\/\/ DataDetect, LLC. : https:\/\/datadetect.com\n+\/\/ Submitted by Andrew Banchich <abanchich@sceven.com>\n+demo.datadetect.com\n+instance.datadetect.com\n+\n@@ -11158,0 +11227,4 @@\n+\/\/ DDNS5 : https:\/\/ddns5.com\n+\/\/ Submitted by Cameron Elliott <cameron@cameronelliott.com>\n+ddns5.com\n+\n@@ -11162,0 +11235,5 @@\n+\/\/ Deno Land Inc : https:\/\/deno.com\/\n+\/\/ Submitted by Luca Casonato <hostmaster@deno.com>\n+deno.dev\n+deno-staging.dev\n+\n@@ -11166,0 +11244,9 @@\n+\/\/ Diher Solutions : https:\/\/diher.solutions\n+\/\/ Submitted by Didi Hermawan <mail@diher.solutions>\n+*.rss.my.id\n+*.diher.solutions\n+\n+\/\/ DNS Africa Ltd https:\/\/dns.business\n+\/\/ Submitted by Calvin Browne <calvin@dns.business>\n+jozi.biz\n+\n@@ -11179,0 +11266,4 @@\n+\/\/ DreamCommerce : https:\/\/shoper.pl\/\n+\/\/ Submitted by Konrad Kotarba <konrad.kotarba@dreamcommerce.com>\n+shoparena.pl\n+\n@@ -11196,0 +11287,7 @@\n+\/\/ Bip : https:\/\/bip.sh\n+\/\/ Submitted by Joel Kennedy <joel@bip.sh>\n+bip.sh\n+\n+\/\/ bitbridge.net : Submitted by Craig Welch, abeliidev@gmail.com\n+bitbridge.net\n+\n@@ -11499,0 +11597,8 @@\n+\/\/ DigitalOcean App Platform : https:\/\/www.digitalocean.com\/products\/app-platform\/\n+\/\/ Submitted by Braxton Huggins <psl-maintainers@digitalocean.com>\n+ondigitalocean.app\n+\n+\/\/ DigitalOcean Spaces : https:\/\/www.digitalocean.com\/products\/spaces\/\n+\/\/ Submitted by Robin H. Johnson <psl-maintainers@digitalocean.com>\n+*.digitaloceanspaces.com\n+\n@@ -11531,0 +11637,10 @@\n+\/\/ eero : https:\/\/eero.com\/\n+\/\/ Submitted by Yue Kang <eero-dynamic-dns@amazon.com>\n+eero.online\n+eero-stage.online\n+\n+\/\/ Elementor : Elementor Ltd.\n+\/\/ Submitted by Anton Barkan <antonb@elementor.com>\n+elementor.cloud\n+elementor.cool\n+\n@@ -11538,0 +11654,1 @@\n+tuleap-partners.com\n@@ -11544,5 +11661,0 @@\n-\/\/ Enonic : http:\/\/enonic.com\/\n-\/\/ Submitted by Erik Kaareng-Sunde <esu@enonic.com>\n-enonic.io\n-customer.enonic.io\n-\n@@ -11608,0 +11720,4 @@\n+\/\/ Eurobyte : https:\/\/eurobyte.ru\n+\/\/ Submitted by Evgeniy Subbotin <e.subbotin@eurobyte.ru>\n+eurodir.ru\n+\n@@ -11718,0 +11834,1 @@\n+edgecompute.app\n@@ -11731,1 +11848,0 @@\n-fastpanel.direct\n@@ -11733,1 +11849,1 @@\n-myfast.space\n+fastvps.host\n@@ -11736,5 +11852,1 @@\n-fastvps.host\n-\n-\/\/ Featherhead : https:\/\/featherhead.xyz\/\n-\/\/ Submitted by Simon Menke <simon@featherhead.xyz>\n-fhapp.xyz\n+myfast.space\n@@ -11752,2 +11864,0 @@\n-conn.uk\n-copro.uk\n@@ -11756,0 +11866,3 @@\n+conn.uk\n+copro.uk\n+hosp.uk\n@@ -11761,0 +11874,4 @@\n+\/\/ FH Muenster : https:\/\/www.fh-muenster.de\n+\/\/ Submitted by Robin Naundorf <r.naundorf@fh-muenster.de>\n+fh-muenster.io\n+\n@@ -11775,0 +11892,19 @@\n+\/\/ Firewebkit : https:\/\/www.firewebkit.com\n+\/\/ Submitted by Majid Qureshi <mqureshi@amrayn.com>\n+fireweb.app\n+\n+\/\/ FLAP : https:\/\/www.flap.cloud\n+\/\/ Submitted by Louis Chemineau <louis@chmn.me>\n+flap.id\n+\n+\/\/ FlashDrive : https:\/\/flashdrive.io\n+\/\/ Submitted by Eric Chan <support@flashdrive.io>\n+onflashdrive.app\n+fldrv.com\n+\n+\/\/ fly.io: https:\/\/fly.io\n+\/\/ Submitted by Kurt Mackey <kurt@fly.io>\n+fly.dev\n+edgeapp.net\n+shw.io\n+\n@@ -11779,0 +11915,18 @@\n+\/\/ Forgerock : https:\/\/www.forgerock.com\n+\/\/ Submitted by Roderick Parr <roderick.parr@forgerock.com>\n+forgeblocks.com\n+id.forgerock.io\n+\n+\/\/ Framer : https:\/\/www.framer.com\n+\/\/ Submitted by Koen Rouwhorst <koenrh@framer.com>\n+framer.app\n+framercanvas.com\n+\n+\/\/ Frusky MEDIA&PR : https:\/\/www.frusky.de\n+\/\/ Submitted by Victor Pupynin <hallo@frusky.de>\n+*.frusky.de\n+\n+\/\/ RavPage : https:\/\/www.ravpage.co.il\n+\/\/ Submitted by Roni Horowitz <roni@responder.co.il>\n+ravpage.co.il\n+\n@@ -11796,0 +11950,8 @@\n+\/\/ freemyip.com : https:\/\/freemyip.com\n+\/\/ Submitted by Cadence <contact@freemyip.com>\n+freemyip.com\n+\n+\/\/ FunkFeuer - Verein zur Förderung freier Netze : https:\/\/www.funkfeuer.at\n+\/\/ Submitted by Daniel A. Maierhofer <vorstand@funkfeuer.at>\n+wien.funkfeuer.at\n+\n@@ -11819,0 +11981,1 @@\n+gentlentapis.com\n@@ -11820,0 +11983,9 @@\n+cdn-edges.net\n+\n+\/\/ Ghost Foundation : https:\/\/ghost.org\n+\/\/ Submitted by Matt Hanley <security@ghost.org>\n+ghost.io\n+\n+\/\/ GignoSystemJapan: http:\/\/gsj.bz\n+\/\/ Submitted by GignoSystemJapan <kakutou-ec@gsj.bz>\n+gsj.bz\n@@ -11823,1 +11995,0 @@\n-github.io\n@@ -11825,0 +11996,2 @@\n+githubpreview.dev\n+github.io\n@@ -11830,0 +12003,5 @@\n+\/\/ Gitplac.si - https:\/\/gitplac.si\n+\/\/ Submitted by Aljaž Starc <me@aljaxus.eu>\n+gitapp.si\n+gitpage.si\n+\n@@ -11834,0 +12012,9 @@\n+\/\/ Global NOG Alliance : https:\/\/nogalliance.org\/\n+\/\/ Submitted by Sander Steffann <sander@nogalliance.org>\n+nog.community\n+\n+\/\/ Globe Hosting SRL : https:\/\/www.globehosting.com\/\n+\/\/ Submitted by Gavin Brown <gavin.brown@centralnic.com>\n+co.ro\n+shop.ro\n+\n@@ -11839,1 +12026,1 @@\n-\/\/ Submitted by Tom Whitwell <tom.whitwell@digital.cabinet-office.gov.uk>\n+\/\/ Submitted by Tom Whitwell <gov-uk-paas-support@digital.cabinet-office.gov.uk>\n@@ -11843,0 +12030,4 @@\n+\/\/ GOV.UK Pay : https:\/\/www.payments.service.gov.uk\/\n+\/\/ Submitted by Richard Baker <richard.baker@digital.cabinet-office.gov.uk>\n+pymnt.uk\n+\n@@ -11850,1 +12041,0 @@\n-shop.ro\n@@ -11864,0 +12054,12 @@\n+codespot.com\n+googleapis.com\n+googlecode.com\n+pagespeedmobilizer.com\n+publishproxy.com\n+withgoogle.com\n+withyoutube.com\n+*.gateway.dev\n+cloud.goog\n+translate.goog\n+*.usercontent.goog\n+cloudfunctions.net\n@@ -11938,9 +12140,0 @@\n-cloudfunctions.net\n-cloud.goog\n-codespot.com\n-googleapis.com\n-googlecode.com\n-pagespeedmobilizer.com\n-publishproxy.com\n-withgoogle.com\n-withyoutube.com\n@@ -11948,3 +12141,3 @@\n-\/\/ Aaron Marais' Gitlab pages: https:\/\/lab.aaronleem.co.za\n-\/\/ Submitted by Aaron Marais <its_me@aaronleem.co.za>\n-graphox.us\n+\/\/ Goupile : https:\/\/goupile.fr\n+\/\/ Submitted by Niels Martignene <hello@goupile.fr>\n+goupile.fr\n@@ -11956,0 +12149,5 @@\n+\/\/ GünstigBestellen : https:\/\/günstigbestellen.de\n+\/\/ Submitted by Furkan Akkoc <info@hendelzon.de>\n+günstigbestellen.de\n+günstigliefern.de\n+\n@@ -11977,0 +12175,4 @@\n+\/\/ Heilbronn University of Applied Sciences - Faculty Informatics (GitLab Pages): https:\/\/www.hs-heilbronn.de\n+\/\/ Submitted by Richard Zowalla <mi-admin@hs-heilbronn.de>\n+pages.it.hs-heilbronn.de\n+\n@@ -11994,0 +12196,8 @@\n+\/\/ home.pl S.A.: https:\/\/home.pl\n+\/\/ Submited by Krzysztof Wolski <krzysztof.wolski@home.eu>\n+homesklep.pl\n+\n+\/\/ Hong Kong Productivity Council: https:\/\/www.hkpc.org\/\n+\/\/ Submitted by SECaaS Team <summchan@hkpc.org>\n+secaas.hk\n+\n@@ -11996,1 +12206,0 @@\n-bpl.biz\n@@ -11998,1 +12207,0 @@\n-ng.city\n@@ -12000,1 +12208,0 @@\n-ng.ink\n@@ -12006,1 +12213,1 @@\n-ng.school\n+edu.scot\n@@ -12008,0 +12215,4 @@\n+org.yt\n+\n+\/\/ HostyHosting (hostyhosting.com)\n+hostyhosting.io\n@@ -12022,0 +12233,13 @@\n+\/\/ Impertrix Solutions : <https:\/\/impertrixcdn.com>\n+\/\/ Submitted by Zhixiang Zhao <csuite@impertrix.com>\n+impertrixcdn.com\n+impertrix.com\n+\n+\/\/ Incsub, LLC: https:\/\/incsub.com\/\n+\/\/ Submitted by Aaron Edwards <sysadmins@incsub.com>\n+smushcdn.com\n+wphostedmail.com\n+wpmucdn.com\n+tempurl.host\n+wpmudev.host\n+\n@@ -12077,0 +12301,8 @@\n+\/\/ Internet-Pro, LLP: https:\/\/netangels.ru\/\n+\/\/ Submited by Vasiliy Sheredeko <piphon@gmail.com>\n+na4u.ru\n+\n+\/\/ iopsys software solutions AB : https:\/\/iopsys.eu\/\n+\/\/ Submitted by Roman Azarenko <roman.azarenko@iopsys.eu>\n+iopsys.se\n+\n@@ -12092,0 +12324,86 @@\n+\/\/ Jelastic, Inc. : https:\/\/jelastic.com\/\n+\/\/ Submited by Ihor Kolodyuk <ik@jelastic.com>\n+mel.cloudlets.com.au\n+cloud.interhostsolutions.be\n+users.scale.virtualcloud.com.br\n+mycloud.by\n+alp1.ae.flow.ch\n+appengine.flow.ch\n+es-1.axarnet.cloud\n+diadem.cloud\n+vip.jelastic.cloud\n+jele.cloud\n+it1.eur.aruba.jenv-aruba.cloud\n+it1.jenv-aruba.cloud\n+keliweb.cloud\n+cs.keliweb.cloud\n+oxa.cloud\n+tn.oxa.cloud\n+uk.oxa.cloud\n+primetel.cloud\n+uk.primetel.cloud\n+ca.reclaim.cloud\n+uk.reclaim.cloud\n+us.reclaim.cloud\n+ch.trendhosting.cloud\n+de.trendhosting.cloud\n+jele.club\n+amscompute.com\n+clicketcloud.com\n+dopaas.com\n+hidora.com\n+paas.hosted-by-previder.com\n+rag-cloud.hosteur.com\n+rag-cloud-ch.hosteur.com\n+jcloud.ik-server.com\n+jcloud-ver-jpc.ik-server.com\n+demo.jelastic.com\n+kilatiron.com\n+paas.massivegrid.com\n+jed.wafaicloud.com\n+lon.wafaicloud.com\n+ryd.wafaicloud.com\n+j.scaleforce.com.cy\n+jelastic.dogado.eu\n+fi.cloudplatform.fi\n+demo.datacenter.fi\n+paas.datacenter.fi\n+jele.host\n+mircloud.host\n+paas.beebyte.io\n+sekd1.beebyteapp.io\n+jele.io\n+cloud-fr1.unispace.io\n+jc.neen.it\n+cloud.jelastic.open.tim.it\n+jcloud.kz\n+upaas.kazteleport.kz\n+cloudjiffy.net\n+fra1-de.cloudjiffy.net\n+west1-us.cloudjiffy.net\n+jls-sto1.elastx.net\n+jls-sto2.elastx.net\n+jls-sto3.elastx.net\n+faststacks.net\n+fr-1.paas.massivegrid.net\n+lon-1.paas.massivegrid.net\n+lon-2.paas.massivegrid.net\n+ny-1.paas.massivegrid.net\n+ny-2.paas.massivegrid.net\n+sg-1.paas.massivegrid.net\n+jelastic.saveincloud.net\n+nordeste-idc.saveincloud.net\n+j.scaleforce.net\n+jelastic.tsukaeru.net\n+sdscloud.pl\n+unicloud.pl\n+mircloud.ru\n+jelastic.regruhosting.ru\n+enscaled.sg\n+jele.site\n+jelastic.team\n+orangecloud.tn\n+j.layershift.co.uk\n+phx.enscaled.us\n+mircloud.us\n+\n@@ -12100,0 +12418,4 @@\n+\/\/ Jotelulu S.L. : https:\/\/jotelulu.com\n+\/\/ Submitted by Daniel Fariña <ingenieria@jotelulu.com>\n+jotelulu.cloud\n+\n@@ -12131,0 +12453,5 @@\n+\/\/ Katholieke Universiteit Leuven: https:\/\/www.kuleuven.be\n+\/\/ Submitted by Abuse KU Leuven <abuse@kuleuven.be>\n+kuleuven.cloud\n+ezproxy.kuleuven.be\n+\n@@ -12135,0 +12462,5 @@\n+\/\/ Krellian Ltd. : https:\/\/krellian.com\n+\/\/ Submitted by Ben Francis <ben@krellian.com>\n+krellian.net\n+webthings.io\n+\n@@ -12165,4 +12497,0 @@\n-\/\/ Linki Tools UG : https:\/\/linki.tools\n-\/\/ Submitted by Paulo Matos <pmatos@linki.tools>\n-linkitools.space\n-\n@@ -12177,1 +12505,3 @@\n-nodebalancer.linode.com\n+*.nodebalancer.linode.com\n+*.linodeobjects.com\n+ip.linodeusercontent.com\n@@ -12183,0 +12513,4 @@\n+\/\/ localzone.xyz\n+\/\/ Submitted by Kenny Niehage <hello@yahe.sh>\n+localzone.xyz\n+\n@@ -12191,0 +12525,8 @@\n+\/\/ Lokalized : https:\/\/lokalized.nl\n+\/\/ Submitted by Noah Taheij <noah@lokalized.nl>\n+servers.run\n+\n+\/\/ Lõhmus Family, The\n+\/\/ Submitted by Heiki Lõhmus <hostmaster at lohmus dot me>\n+lohmus.me\n+\n@@ -12202,1 +12544,0 @@\n-uklugs.org\n@@ -12228,0 +12569,1 @@\n+barsy.ro\n@@ -12246,0 +12588,28 @@\n+\/\/ Mail Transfer Platform : https:\/\/www.neupeer.com\n+\/\/ Submitted by Li Hui <lihui@neupeer.com>\n+cn.vu\n+\n+\/\/ Maze Play: https:\/\/www.mazeplay.com\n+\/\/ Submitted by Adam Humpherys <adam@mws.dev>\n+mazeplay.com\n+\n+\/\/ mcpe.me : https:\/\/mcpe.me\n+\/\/ Submitted by Noa Heyl <hi@noa.dev>\n+mcpe.me\n+\n+\/\/ McHost : https:\/\/mchost.ru\n+\/\/ Submitted by Evgeniy Subbotin <e.subbotin@mchost.ru>\n+mcdir.me\n+mcdir.ru\n+mcpre.ru\n+vps.mcdir.ru\n+\n+\/\/ Mediatech : https:\/\/mediatech.by\n+\/\/ Submitted by Evgeniy Kozhuhovskiy <ugenk@mediatech.by>\n+mediatech.by\n+mediatech.dev\n+\n+\/\/ Medicom Health : https:\/\/medicomhealth.com\n+\/\/ Submitted by Michael Olson <molson@medicomhealth.com>\n+hra.health\n+\n@@ -12253,1 +12623,1 @@\n-cloud.metacentrum.cz\n+*.cloud.metacentrum.cz\n@@ -12270,1 +12640,1 @@\n-\/\/ Submitted by Mostafa Elzeiny <moelzein@microsoft.com>\n+\/\/ Submitted by Mitch Webster <miwebst@microsoft.com>\n@@ -12275,0 +12645,18 @@\n+azurestaticapps.net\n+centralus.azurestaticapps.net\n+eastasia.azurestaticapps.net\n+eastus2.azurestaticapps.net\n+westeurope.azurestaticapps.net\n+westus2.azurestaticapps.net\n+\n+\/\/ minion.systems : http:\/\/minion.systems\n+\/\/ Submitted by Robert Böttinger <r@minion.systems>\n+csx.cc\n+\n+\/\/ Mintere : https:\/\/mintere.com\/\n+\/\/ Submitted by Ben Aubin <security@mintere.com>\n+mintere.site\n+\n+\/\/ MobileEducation, LLC : https:\/\/joinforte.com\n+\/\/ Submitted by Grayson Martin <grayson.martin@mobileeducation.us>\n+forte.id\n@@ -12290,0 +12678,16 @@\n+\/\/ Mythic Beasts : https:\/\/www.mythic-beasts.com\n+\/\/ Submitted by Paul Cammish <kelduum@mythic-beasts.com>\n+hostedpi.com\n+customer.mythic-beasts.com\n+caracal.mythic-beasts.com\n+fentiger.mythic-beasts.com\n+lynx.mythic-beasts.com\n+ocelot.mythic-beasts.com\n+oncilla.mythic-beasts.com\n+onza.mythic-beasts.com\n+sphinx.mythic-beasts.com\n+vs.mythic-beasts.com\n+x.mythic-beasts.com\n+yali.mythic-beasts.com\n+cust.retrosnub.co.uk\n+\n@@ -12295,1 +12699,1 @@\n-\/\/ Submitted by James Stevens <registry@names.of.london> or <james@jrcs.net>\n+\/\/ Submitted by James Stevens <registry[at]names.of.london> or <publiclist[at]jrcs.net>\n@@ -12298,2 +12702,0 @@\n-on.fashion\n-of.football\n@@ -12302,0 +12704,2 @@\n+from.marketing\n+with.marketing\n@@ -12303,0 +12707,1 @@\n+repair.men\n@@ -12306,0 +12711,1 @@\n+under.one\n@@ -12307,1 +12713,2 @@\n-of.work\n+that.win\n+from.work\n@@ -12310,4 +12717,0 @@\n-\/\/ NCTU.ME : https:\/\/nctu.me\/\n-\/\/ Submitted by Tocknicsu <admin@nctu.me>\n-nctu.me\n-\n@@ -12316,1 +12719,0 @@\n-bitballoon.com\n@@ -12318,1 +12720,0 @@\n-netlify.com\n@@ -12336,0 +12737,14 @@\n+\/\/ Noop : https:\/\/noop.app\n+\/\/ Submitted by Nathaniel Schweinberg <noop@rearc.io>\n+*.developer.app\n+noop.app\n+\n+\/\/ Northflank Ltd. : https:\/\/northflank.com\/\n+\/\/ Submitted by Marco Suter <marco@northflank.com>\n+*.northflank.app\n+*.code.run\n+\n+\/\/ Noticeable : https:\/\/noticeable.io\n+\/\/ Submitted by Laurent Pellegrino <security@noticeable.io>\n+noticeable.news\n+\n@@ -12474,54 +12889,0 @@\n-\/\/ NymNom : https:\/\/nymnom.com\/\n-\/\/ Submitted by NymNom <psl@nymnom.com>\n-nom.ae\n-nom.af\n-nom.ai\n-nom.al\n-nym.by\n-nom.bz\n-nym.bz\n-nom.cl\n-nym.ec\n-nom.gd\n-nom.ge\n-nom.gl\n-nym.gr\n-nom.gt\n-nym.gy\n-nym.hk\n-nom.hn\n-nym.ie\n-nom.im\n-nom.ke\n-nym.kz\n-nym.la\n-nym.lc\n-nom.li\n-nym.li\n-nym.lt\n-nym.lu\n-nom.lv\n-nym.me\n-nom.mk\n-nym.mn\n-nym.mx\n-nom.nu\n-nym.nz\n-nym.pe\n-nym.pt\n-nom.pw\n-nom.qa\n-nym.ro\n-nom.rs\n-nom.si\n-nym.sk\n-nom.st\n-nym.su\n-nym.sx\n-nom.tj\n-nym.tw\n-nom.ug\n-nom.uy\n-nom.vc\n-nom.vg\n-\n@@ -12536,0 +12897,4 @@\n+\/\/ OMG.LOL : <https:\/\/omg.lol>\n+\/\/ Submitted by Adam Newbold <adam@omg.lol>\n+omg.lol\n+\n@@ -12540,0 +12905,8 @@\n+\/\/ OmniWe Limited: https:\/\/omniwe.com\n+\/\/ Submitted by Vicary Archangel <vicary@omniwe.com>\n+omniwe.site\n+\n+\/\/ One.com: https:\/\/www.one.com\/\n+\/\/ Submitted by Jacob Bunk Nielsen <jbn@one.com>\n+service.one\n+\n@@ -12544,0 +12917,4 @@\n+\/\/ Open Social : https:\/\/www.getopensocial.com\/\n+\/\/ Submitted by Alexander Varwijk <security@getopensocial.com>\n+opensocial.site\n+\n@@ -12548,0 +12925,4 @@\n+\/\/ OpenResearch GmbH: https:\/\/openresearch.com\/\n+\/\/ Submitted by Philipp Schmid <ops@openresearch.com>\n+orsites.com\n+\n@@ -12552,2 +12933,4 @@\n-\/\/ Oursky Limited : https:\/\/skygear.io\/\n-\/\/ Submited by Skygear Developer <hello@skygear.io>\n+\/\/ Oursky Limited : https:\/\/authgear.com\/, https:\/\/skygear.io\/\n+\/\/ Submited by Authgear Team <hello@authgear.com>, Skygear Developer <hello@skygear.io>\n+authgear-staging.com\n+authgearapps.com\n@@ -12560,0 +12943,5 @@\n+\/\/ OVHcloud: https:\/\/ovhcloud.com\n+\/\/ Submitted by Vincent Cassé <vincent.casse@ovhcloud.com>\n+*.webpaas.ovh.net\n+*.hosting.ovh.net\n+\n@@ -12565,0 +12953,4 @@\n+\/\/ OwO : https:\/\/whats-th.is\/\n+\/\/ Submitted by Dean Sheather <dean@deansheather.com>\n+*.owo.codes\n+\n@@ -12581,0 +12973,15 @@\n+\/\/ PageXL : https:\/\/pagexl.com\n+\/\/ Submitted by Yann Guichard <yann@pagexl.com>\n+pagexl.com\n+\n+\/\/ Paywhirl, Inc : https:\/\/paywhirl.com\/\n+\/\/ Submitted by Daniel Netzer <dan@paywhirl.com>\n+*.paywhirl.com\n+\n+\/\/ pcarrier.ca Software Inc: https:\/\/pcarrier.ca\/\n+\/\/ Submitted by Pierre Carrier <pc@rrier.ca>\n+bar0.net\n+bar1.net\n+bar2.net\n+rdv.to\n+\n@@ -12602,0 +13009,4 @@\n+\/\/ PE Ulyanov Kirill Sergeevich : https:\/\/airy.host\n+\/\/ Submitted by Kirill Ulyanov <k.ulyanov@airy.host>\n+lk3.ru\n+\n@@ -12608,1 +13019,4 @@\n-*.platform.sh\n+bc.platform.sh\n+ent.platform.sh\n+eu.platform.sh\n+us.platform.sh\n@@ -12610,0 +13024,1 @@\n+*.tst.site\n@@ -12617,0 +13032,6 @@\n+\/\/ Plesk : https:\/\/www.plesk.com\/\n+\/\/ Submitted by Anton Akhtyamov <program-managers@plesk.com>\n+pdns.page\n+plesk.page\n+pleskns.com\n+\n@@ -12625,0 +13046,11 @@\n+\/\/ Postman, Inc : https:\/\/postman.com\n+\/\/ Submitted by Rahul Dhawan <security@postman.com>\n+postman-echo.com\n+pstmn.io\n+mock.pstmn.io\n+httpbin.org\n+\n+\/\/prequalifyme.today : https:\/\/prequalifyme.today\n+\/\/Submitted by DeepakTiwari deepak@ivylead.io\n+prequalifyme.today\n+\n@@ -12654,0 +13086,9 @@\n+\/\/ PythonAnywhere LLP: https:\/\/www.pythonanywhere.com\n+\/\/ Submitted by Giles Thomas <giles@pythonanywhere.com>\n+pythonanywhere.com\n+eu.pythonanywhere.com\n+\n+\/\/ QOTO, Org.\n+\/\/ Submitted by Jeffrey Phillips Freeman <jeffrey.freeman@qoto.org>\n+qoto.io\n+\n@@ -12662,0 +13103,8 @@\n+\/\/ Rad Web Hosting: https:\/\/radwebhosting.com\n+\/\/ Submitted by Scott Claeys <s.claeys@radwebhosting.com>\n+cloudsite.builders\n+\n+\/\/ Redgate Software: https:\/\/red-gate.com\n+\/\/ Submitted by Andrew Farries <andrew.farries@red-gate.com>\n+instances.spawn.cc\n+\n@@ -12699,0 +13148,4 @@\n+\/\/ Rakuten Games, Inc : https:\/\/dev.viberplay.io\n+\/\/ Submitted by Joshua Zhang <public-suffix@rgames.jp>\n+g.vbrplsbx.io\n+\n@@ -12721,0 +13174,1 @@\n+id.repl.co\n@@ -12735,1 +13189,0 @@\n-ptplus.fit\n@@ -12738,0 +13191,8 @@\n+\/\/ Rico Developments Limited : https:\/\/adimo.co\n+\/\/ Submitted by Colin Brown <hello@adimo.co>\n+adimo.co.uk\n+\n+\/\/ Riseup Networks : https:\/\/riseup.net\n+\/\/ Submitted by Micah Anderson <micah@riseup.net>\n+itcouldbewor.se\n+\n@@ -12742,0 +13203,13 @@\n+\/\/ Rusnames Limited: http:\/\/rusnames.ru\/\n+\/\/ Submitted by Sergey Zotov <admin@rusnames.ru>\n+биз.рус\n+ком.рус\n+крым.рус\n+мир.рус\n+мск.рус\n+орг.рус\n+самара.рус\n+сочи.рус\n+спб.рус\n+я.рус\n+\n@@ -12758,0 +13232,1 @@\n+service.gov.scot\n@@ -12776,0 +13251,8 @@\n+\/\/ Seidat : https:\/\/www.seidat.com\n+\/\/ Submitted by Artem Kondratev <accounts@seidat.com>\n+seidat.net\n+\n+\/\/ Sellfy : https:\/\/sellfy.com\n+\/\/ Submitted by Yuriy Romadin <contact@sellfy.com>\n+sellfy.store\n+\n@@ -12780,0 +13263,8 @@\n+\/\/ Sendmsg: https:\/\/www.sendmsg.co.il\n+\/\/ Submitted by Assaf Stern <domains@comstar.co.il>\n+minisite.ms\n+\n+\/\/ Service Magnet : https:\/\/myservicemagnet.com\n+\/\/ Submitted by Dave Sanders <dave@myservicemagnet.com>\n+magnet.page\n+\n@@ -12786,0 +13277,5 @@\n+\/\/ Shift Crypto AG : https:\/\/shiftcrypto.ch\n+\/\/ Submitted by alex <alex@shiftcrypto.ch>\n+shiftcrypto.dev\n+shiftcrypto.io\n+\n@@ -12794,0 +13290,4 @@\n+\/\/ Shopify : https:\/\/www.shopify.com\n+\/\/ Submitted by Alex Richter <alex.richter@shopify.com>\n+myshopify.com\n+\n@@ -12824,0 +13324,16 @@\n+\/\/ Small Technology Foundation : https:\/\/small-tech.org\n+\/\/ Submitted by Aral Balkan <aral@small-tech.org>\n+small-web.org\n+\n+\/\/ Smoove.io : https:\/\/www.smoove.io\/\n+\/\/ Submitted by Dan Kozak <dan@smoove.io>\n+vp4.me\n+\n+\/\/ Snowplow Analytics : https:\/\/snowplowanalytics.com\/\n+\/\/ Submitted by Ian Streeter <ian@snowplowanalytics.com>\n+try-snowplow.com\n+\n+\/\/ SourceHut : https:\/\/sourcehut.org\n+\/\/ Submitted by Drew DeVault <sir@cmpwn.com>\n+srht.site\n+\n@@ -12828,0 +13344,4 @@\n+\/\/ Staclar : https:\/\/staclar.com\n+\/\/ Submitted by Matthias Merkel <matthias.merkel@staclar.com>\n+novecore.site\n+\n@@ -12834,0 +13354,11 @@\n+\/\/ Storebase : https:\/\/www.storebase.io\n+\/\/ Submitted by Tony Schirmer <tony@storebase.io>\n+storebase.store\n+\n+\/\/ Strategic System Consulting (eApps Hosting): https:\/\/www.eapps.com\/\n+\/\/ Submitted by Alex Oancea <aoancea@cloudscale365.com>\n+vps-host.net\n+atl.jelastic.vps-host.net\n+njs.jelastic.vps-host.net\n+ric.jelastic.vps-host.net\n+\n@@ -12851,0 +13382,22 @@\n+\/\/ Spreadshop (sprd.net AG) : https:\/\/www.spreadshop.com\/\n+\/\/ Submitted by Martin Breest <security@spreadshop.com>\n+myspreadshop.at\n+myspreadshop.com.au\n+myspreadshop.be\n+myspreadshop.ca\n+myspreadshop.ch\n+myspreadshop.com\n+myspreadshop.de\n+myspreadshop.dk\n+myspreadshop.es\n+myspreadshop.fi\n+myspreadshop.fr\n+myspreadshop.ie\n+myspreadshop.it\n+myspreadshop.net\n+myspreadshop.nl\n+myspreadshop.no\n+myspreadshop.pl\n+myspreadshop.se\n+myspreadshop.co.uk\n+\n@@ -12872,4 +13425,6 @@\n-\/\/ Swisscom Application Cloud: https:\/\/developer.swisscom.com\n-\/\/ Submitted by Matthias.Winzeler <matthias.winzeler@swisscom.com>\n-applicationcloud.io\n-scapp.io\n+\/\/ Supabase : https:\/\/supabase.io\n+\/\/ Submitted by Inian Parameshwaran <security@supabase.io>\n+supabase.co\n+supabase.in\n+supabase.net\n+su.paba.se\n@@ -12904,0 +13459,4 @@\n+\/\/ Tabit Technologies Ltd. : https:\/\/tabit.cloud\/\n+\/\/ Submitted by Oren Agiv <oren@tabit.cloud>\n+tabitorder.co.il\n+\n@@ -12908,0 +13467,5 @@\n+\/\/ Tailscale Inc. : https:\/\/www.tailscale.com\n+\/\/ Submitted by David Anderson <danderson@tailscale.com>\n+beta.tailscale.net\n+ts.net\n+\n@@ -12931,0 +13495,3 @@\n+*.firenet.ch\n+*.svc.firenet.ch\n+reservd.com\n@@ -12936,0 +13503,7 @@\n+reservd.dev.thingdust.io\n+reservd.disrec.thingdust.io\n+reservd.testing.thingdust.io\n+\n+\/\/ ticket i\/O GmbH : https:\/\/ticket.io\n+\/\/ Submitted by Christian Franke <it@ticket.io>\n+tickets.io\n@@ -12941,0 +13515,6 @@\n+tlon.network\n+\n+\/\/ Tor Project, Inc. : https:\/\/torproject.org\n+\/\/ Submitted by Antoine Beaupré <anarcat@torproject.org\n+torproject.net\n+pages.torproject.net\n@@ -12947,0 +13527,4 @@\n+\/\/ TradableBits: https:\/\/tradablebits.com\n+\/\/ Submitted by Dmitry Khrisanov dmitry@tradablebits.com\n+tbits.me\n+\n@@ -13012,0 +13596,4 @@\n+\/\/ Upli : https:\/\/upli.io\n+\/\/ Submitted by Lenny Bakkalian <lenny.bakkalian@gmail.com>\n+upli.io\n+\n@@ -13025,0 +13613,6 @@\n+\/\/ Vercel, Inc : https:\/\/vercel.com\/\n+\/\/ Submitted by Connor Davis <security@vercel.com>\n+vercel.app\n+vercel.dev\n+now.sh\n+\n@@ -13037,0 +13631,42 @@\n+\/\/ Voxel.sh DNS : https:\/\/voxel.sh\/dns\/\n+\/\/ Submitted by Mia Rehlinger <dns@voxel.sh>\n+neko.am\n+nyaa.am\n+be.ax\n+cat.ax\n+es.ax\n+eu.ax\n+gg.ax\n+mc.ax\n+us.ax\n+xy.ax\n+nl.ci\n+xx.gl\n+app.gp\n+blog.gt\n+de.gt\n+to.gt\n+be.gy\n+cc.hn\n+blog.kg\n+io.kg\n+jp.kg\n+tv.kg\n+uk.kg\n+us.kg\n+de.ls\n+at.md\n+de.md\n+jp.md\n+to.md\n+indie.porn\n+vxl.sh\n+ch.tc\n+me.tc\n+we.tc\n+nyan.to\n+at.vg\n+blog.vu\n+dev.vu\n+me.vu\n+\n@@ -13045,0 +13681,9 @@\n+\/\/ WapBlog.ID : https:\/\/www.wapblog.id\n+\/\/ Submitted by Fajar Sodik <official@wapblog.id>\n+idnblogger.com\n+indowapblog.com\n+bloger.id\n+wblog.id\n+wbq.me\n+fastblog.net\n+\n@@ -13049,0 +13694,7 @@\n+\/\/ WebHotelier Technologies Ltd: https:\/\/www.webhotelier.net\/\n+\/\/ Submitted by Apostolos Tsakpinis <apostolos.tsakpinis@gmail.com>\n+reserve-online.net\n+reserve-online.com\n+bookonline.app\n+hotelwithflight.com\n+\n@@ -13059,0 +13711,4 @@\n+\/\/ WIARD Enterprises : https:\/\/wiardweb.com\n+\/\/ Submitted by Kidd Hustle <kiddhustle@wiardweb.com>\n+pages.wiardweb.com\n+\n@@ -13072,0 +13728,1 @@\n+woltlab-demo.com\n@@ -13078,0 +13735,17 @@\n+\/\/ Woods Valldata : https:\/\/www.woodsvalldata.co.uk\/\n+\/\/ Submitted by Chris Whittle <chris.whittle@woodsvalldata.co.uk>\n+affinitylottery.org.uk\n+raffleentry.org.uk\n+weeklylottery.org.uk\n+\n+\/\/ WP Engine : https:\/\/wpengine.com\/\n+\/\/ Submitted by Michael Smith <michael.smith@wpengine.com>\n+\/\/ Submitted by Brandon DuRette <brandon.durette@wpengine.com>\n+wpenginepowered.com\n+js.wpenginepowered.com\n+\n+\/\/ Wix.com, Inc. : https:\/\/www.wix.com\n+\/\/ Submitted by Shahar Talmi <shahar@wix.com>\n+wixsite.com\n+editorx.io\n+\n@@ -13120,0 +13794,1 @@\n+ynh.fr\n@@ -13128,4 +13803,0 @@\n-\/\/ Zeit, Inc. : https:\/\/zeit.domains\/\n-\/\/ Submitted by Olli Vanhoja <olli@zeit.co>\n-now.sh\n-\n@@ -13142,4 +13813,0 @@\n-\/\/ Mintere : https:\/\/mintere.com\/\n-\/\/ Submitted by Ben Aubin <security@mintere.com>\n-mintere.site\n-\n","filename":"make\/data\/publicsuffixlist\/public_suffix_list.dat","additions":1029,"deletions":362,"binary":false,"changes":1391,"status":"modified"},{"patch":"@@ -396,0 +396,10 @@\n+class name java\/util\/Hashtable\n+header extends java\/util\/Dictionary implements java\/util\/Map,java\/lang\/Cloneable,java\/io\/Serializable flags 21 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/util\/Dictionary<TK;TV;>;Ljava\/util\/Map<TK;TV;>;Ljava\/lang\/Cloneable;Ljava\/io\/Serializable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n+class name java\/util\/IdentityHashMap\n+header extends java\/util\/AbstractMap implements java\/util\/Map,java\/io\/Serializable,java\/lang\/Cloneable flags 21 signature <K:Ljava\/lang\/Object;V:Ljava\/lang\/Object;>Ljava\/util\/AbstractMap<TK;TV;>;Ljava\/util\/Map<TK;TV;>;Ljava\/io\/Serializable;Ljava\/lang\/Cloneable;\n+innerclass innerClass java\/util\/Map$Entry outerClass java\/util\/Map innerClassName Entry flags 609\n+innerclass innerClass java\/io\/ObjectInputStream$GetField outerClass java\/io\/ObjectInputStream innerClassName GetField flags 409\n+\n","filename":"make\/data\/symbols\/java.base-I.sym.txt","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,5 @@\n+ifeq ($(VERSION_BUILD), )\n+  # Hotspot cannot handle an empty build number\n+  VERSION_BUILD := 0\n+endif\n+\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,7 +133,0 @@\n-ifneq ($(call check-jvm-feature, nmt), true)\n-  JVM_CFLAGS_FEATURES += -DINCLUDE_NMT=0\n-  JVM_EXCLUDE_FILES += \\\n-      memBaseline.cpp memReporter.cpp mallocTracker.cpp virtualMemoryTracker.cpp nmtCommon.cpp \\\n-      memTracker.cpp nmtDCmd.cpp mallocSiteTable.cpp threadStackTracker.cpp\n-endif\n-\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n@@ -37,0 +40,1 @@\n+import java.util.stream.Collectors;\n@@ -50,1 +54,1 @@\n-    private final static Map<String, Bundle> bundles = new HashMap<>();\n+    private static final Map<String, Bundle> bundles = new HashMap<>();\n@@ -52,1 +56,1 @@\n-    private final static String[] NUMBER_PATTERN_KEYS = {\n+    private static final String[] NUMBER_PATTERN_KEYS = {\n@@ -59,3 +63,3 @@\n-    private final static String[] COMPACT_NUMBER_PATTERN_KEYS = {\n-            \"short.CompactNumberPatterns\",\n-            \"long.CompactNumberPatterns\"\n+    private static final String[] COMPACT_NUMBER_PATTERN_KEYS = {\n+        \"short.CompactNumberPatterns\",\n+        \"long.CompactNumberPatterns\"\n@@ -64,1 +68,1 @@\n-    private final static String[] NUMBER_ELEMENT_KEYS = {\n+    private static final String[] NUMBER_ELEMENT_KEYS = {\n@@ -80,1 +84,1 @@\n-    private final static String[] TIME_PATTERN_KEYS = {\n+    private static final String[] TIME_PATTERN_KEYS = {\n@@ -87,1 +91,1 @@\n-    private final static String[] DATE_PATTERN_KEYS = {\n+    private static final String[] DATE_PATTERN_KEYS = {\n@@ -94,1 +98,1 @@\n-    private final static String[] DATETIME_PATTERN_KEYS = {\n+    private static final String[] DATETIME_PATTERN_KEYS = {\n@@ -101,1 +105,1 @@\n-    private final static String[] ERA_KEYS = {\n+    private static final String[] ERA_KEYS = {\n@@ -107,0 +111,4 @@\n+    \/\/ DateFormatItem prefix\n+    static final String DATEFORMATITEM_KEY_PREFIX = \"DateFormatItem.\";\n+    static final String DATEFORMATITEM_INPUT_REGIONS_PREFIX = \"DateFormatItemInputRegions.\";\n+\n@@ -108,7 +116,7 @@\n-    private final static String TZ_GEN_LONG_KEY = \"timezone.displayname.generic.long\";\n-    private final static String TZ_GEN_SHORT_KEY = \"timezone.displayname.generic.short\";\n-    private final static String TZ_STD_LONG_KEY = \"timezone.displayname.standard.long\";\n-    private final static String TZ_STD_SHORT_KEY = \"timezone.displayname.standard.short\";\n-    private final static String TZ_DST_LONG_KEY = \"timezone.displayname.daylight.long\";\n-    private final static String TZ_DST_SHORT_KEY = \"timezone.displayname.daylight.short\";\n-    private final static String[] ZONE_NAME_KEYS = {\n+    private static final String TZ_GEN_LONG_KEY = \"timezone.displayname.generic.long\";\n+    private static final String TZ_GEN_SHORT_KEY = \"timezone.displayname.generic.short\";\n+    private static final String TZ_STD_LONG_KEY = \"timezone.displayname.standard.long\";\n+    private static final String TZ_STD_SHORT_KEY = \"timezone.displayname.standard.short\";\n+    private static final String TZ_DST_LONG_KEY = \"timezone.displayname.daylight.long\";\n+    private static final String TZ_DST_SHORT_KEY = \"timezone.displayname.daylight.short\";\n+    private static final String[] ZONE_NAME_KEYS = {\n@@ -265,1 +273,1 @@\n-        if (\"root\".equals(id)) {\n+        if (isRoot()) {\n@@ -290,0 +298,8 @@\n+\n+            \/\/ Skeleton\n+            handleSkeletonPatterns(myMap, calendarType);\n+        }\n+\n+        \/\/ Skeleton input regions\n+        if (isRoot()) {\n+            skeletonInputRegions(myMap);\n@@ -650,2 +666,3 @@\n-                \/\/ Change cldr letter 'u' to 'y', as 'u' is interpreted as\n-                \/\/ \"Extended year (numeric)\" in CLDR\/LDML,\n+            case 'U':\n+                \/\/ Change cldr letter 'u'\/'U' to 'y', as 'u' is interpreted as\n+                \/\/ \"Extended year (numeric)\", and 'U' as \"Cyclic year\" in CLDR\/LDML,\n@@ -745,0 +762,13 @@\n+    private void handleSkeletonPatterns(Map<String, Object> myMap, CalendarType calendarType) {\n+        String calendarPrefix = calendarType.keyElementName();\n+        myMap.putAll(myMap.entrySet().stream()\n+            .filter(e -> e.getKey().startsWith(Bundle.DATEFORMATITEM_KEY_PREFIX))\n+            .collect(Collectors.toMap(\n+                e -> calendarPrefix + e.getKey(),\n+                e -> translateDateFormatLetters(calendarType,\n+                        (String)e.getValue(),\n+                        this::convertDateTimePatternLetter)\n+            ))\n+        );\n+    }\n+\n@@ -793,0 +823,10 @@\n+\n+    private static void skeletonInputRegions(Map<String, Object> myMap) {\n+        myMap.putAll(myMap.entrySet().stream()\n+                .filter(e -> e.getKey().startsWith(Bundle.DATEFORMATITEM_INPUT_REGIONS_PREFIX))\n+                .collect(Collectors.toMap(\n+                        e -> e.getKey(),\n+                        e -> ((String)e.getValue()).trim()\n+                ))\n+        );\n+    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/Bundle.java","additions":61,"deletions":21,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -850,0 +850,1 @@\n+        \"DateFormatItem\",\n@@ -855,3 +856,0 @@\n-            if (calendarType == CalendarType.GENERIC) {\n-                continue;\n-            }\n@@ -859,5 +857,6 @@\n-            for (String element : FORMAT_DATA_ELEMENTS) {\n-                String key = prefix + element;\n-                copyIfPresent(map, \"java.time.\" + key, formatData);\n-                copyIfPresent(map, key, formatData);\n-            }\n+            Arrays.stream(FORMAT_DATA_ELEMENTS)\n+                .flatMap(elem -> map.keySet().stream().filter(k -> k.startsWith(prefix + elem)))\n+                .forEach(key -> {\n+                    copyIfPresent(map, \"java.time.\" + key, formatData);\n+                    copyIfPresent(map, key, formatData);\n+                });\n@@ -871,3 +870,0 @@\n-                    if (calendarType == CalendarType.GENERIC) {\n-                        continue;\n-                    }\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/CLDRConverter.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -759,0 +759,8 @@\n+        case \"dateFormatItem\":\n+            {\n+                \/\/ for FormatData\n+                String prefix = (currentCalendarType == null) ? \"\" : currentCalendarType.keyElementName();\n+                pushStringEntry(qName, attributes,\n+                        prefix + Bundle.DATEFORMATITEM_KEY_PREFIX + attributes.getValue(\"id\"));\n+            }\n+            break;\n@@ -1116,1 +1124,1 @@\n-                return put(entry.getKey(), value);\n+                return put(key, value);\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/LDMLParseHandler.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Arrays;\n@@ -32,0 +33,3 @@\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+import java.util.stream.Collectors;\n@@ -65,0 +69,4 @@\n+    \/\/ Input Skeleton map for \"preferred\" and \"allowed\"\n+    \/\/ Map<\"preferred\"\/\"allowed\", Map<\"skeleton\", SortedSet<\"regions\">>>\n+    private final Map<String, Map<String, SortedSet<String>>> inputSkeletonMap;\n+\n@@ -69,0 +77,1 @@\n+        inputSkeletonMap = new HashMap<>();\n@@ -79,0 +88,4 @@\n+     *\n+     * This method also returns Maps for \"preferred\" and \"allowed\" skeletons,\n+     * which are grouped by regions. E.g, \"h:XX YY ZZ;\" which means 'h' pattern\n+     * is \"preferred\"\/\"allowed\" in \"XX\", \"YY\", and \"ZZ\" regions.\n@@ -83,12 +96,11 @@\n-            parentLocalesMap.keySet().forEach(key -> {\n-            values.put(CLDRConverter.PARENT_LOCALE_PREFIX+key,\n-                parentLocalesMap.get(key));\n-            });\n-            firstDayMap.keySet().forEach(key -> {\n-            values.put(CLDRConverter.CALENDAR_FIRSTDAY_PREFIX+firstDayMap.get(key),\n-                key);\n-            });\n-            minDaysMap.keySet().forEach(key -> {\n-            values.put(CLDRConverter.CALENDAR_MINDAYS_PREFIX+minDaysMap.get(key),\n-                key);\n-            });\n+            parentLocalesMap.forEach((k, v) -> values.put(CLDRConverter.PARENT_LOCALE_PREFIX + k, v));\n+            firstDayMap.forEach((k, v) -> values.put(CLDRConverter.CALENDAR_FIRSTDAY_PREFIX + v, k));\n+            minDaysMap.forEach((k, v) -> values.put(CLDRConverter.CALENDAR_MINDAYS_PREFIX + v, k));\n+            inputSkeletonMap.get(\"preferred\").forEach((k, v) ->\n+                    values.merge(Bundle.DATEFORMATITEM_INPUT_REGIONS_PREFIX + \"preferred\",\n+                            k + \":\" + v.stream().collect(Collectors.joining(\" \")) + \";\",\n+                            (old, newVal) -> old + (String)newVal));\n+            inputSkeletonMap.get(\"allowed\").forEach((k, v) ->\n+                    values.merge(Bundle.DATEFORMATITEM_INPUT_REGIONS_PREFIX + \"allowed\",\n+                            k + \":\" + v.stream().collect(Collectors.joining(\" \")) + \";\",\n+                            (old, newVal) -> old + (String)newVal));\n@@ -161,0 +173,13 @@\n+        case \"hours\":\n+            if (!isIgnored(attributes)) {\n+                var preferred = attributes.getValue(\"preferred\");\n+                var allowed = attributes.getValue(\"allowed\").replaceFirst(\" .*\", \"\").replaceFirst(\"b\", \"B\"); \/\/ take only the first one, \"b\" -> \"B\"\n+                var regions = Arrays.stream(attributes.getValue(\"regions\").split(\" \"))\n+                        .map(r -> r.replaceAll(\"_\", \"-\"))\n+                        .collect(Collectors.toSet());\n+                var pmap = inputSkeletonMap.computeIfAbsent(\"preferred\", k -> new HashMap<>());\n+                var amap = inputSkeletonMap.computeIfAbsent(\"allowed\", k -> new HashMap<>());\n+                pmap.computeIfAbsent(preferred, k -> new TreeSet<>()).addAll(regions);\n+                amap.computeIfAbsent(allowed, k -> new TreeSet<>()).addAll(regions);\n+            }\n+            break;\n@@ -167,1 +192,0 @@\n-\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/SupplementDataParseHandler.java","additions":38,"deletions":14,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.base\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.datatransfer\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.logging\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-DOCLINT += -Xdoclint:all\/protected,-reference \\\n+DOCLINT += -Xdoclint:all\/protected \\\n","filename":"make\/modules\/java.management\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-    JAVA_ARGS := -Djava.security.manager=allow, \\\n","filename":"make\/modules\/jdk.jstatd\/Launcher.gmk","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-# Copyright (c) 2010, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-# Script to update the Copyright YEAR range in Mercurial sources.\n+# Script to update the Copyright YEAR range in Mercurial & Git sources.\n@@ -29,1 +29,6 @@\n-awk=awk\n+#------------------------------------------------------------\n+copyright=\"Copyright (c)\"\n+company=\"Oracle\"\n+#------------------------------------------------------------\n+\n+awk=\"awk\"\n@@ -34,0 +39,7 @@\n+# To allow total changes counting\n+shopt -s lastpipe\n+\n+# Get an absolute path to this script, since that determines the top-level directory.\n+this_script_dir=`dirname $0`\n+this_script_dir=`cd $this_script_dir > \/dev\/null && pwd`\n+\n@@ -40,0 +52,5 @@\n+# Default or supplied company name\n+if [ \"$3\" != \"\" ] ; then\n+  company=\"$3\"\n+fi\n+\n@@ -41,2 +58,2 @@\n-if [ \"$1\" != \"\" ] ; then\n-  year=\"$1\"\n+if [ \"$2\" != \"\" ] ; then\n+  year=\"$2\"\n@@ -47,0 +64,43 @@\n+# VCS select\n+vcs=\"$1\"\n+\n+if [ -z \"$vcs\" ] ; then\n+  git_found=false\n+  hg_found=false\n+\n+  [ -d \"${this_script_dir}\/..\/..\/.git\" ] && git_found=true\n+  [ -d \"${this_script_dir}\/..\/..\/.hg\" ] && hg_found=true\n+\n+  if [ \"$git_found\" == \"true\" ] && [ \"$hg_found\" == \"false\" ] ; then\n+    vcs=\"git\"\n+  elif [ \"$hg_found\" == \"true\" ] && [ \"$git_found\" == \"false\" ] ; then\n+    vcs=\"hg\"\n+  else\n+    echo \"Error: could not auto-detect version control system\"\n+    vcs=\"\"\n+  fi\n+fi\n+\n+case \"$vcs\" in\n+  \"git\")\n+    echo \"Using Git version control system\"\n+    vcs_status=(git ls-files -m)\n+    vcs_list_changesets=(git log --no-merges --since=\"${year}-01-01T00:00:00Z\" --until=\"${year}-12-31T23:59:59Z\" --pretty=tformat:\"%H\")\n+    vcs_changeset_message=(git log -1 --pretty=tformat:\"%B\") # followed by ${changeset}\n+    vcs_changeset_files=(git diff-tree --no-commit-id --name-only -r) # followed by ${changeset}\n+    ;;\n+\n+  \"hg\")\n+    echo \"Using Mercurial version control system\"\n+    vcs_status=(hg status)\n+    vcs_list_changesets=(hg log --no-merges -v -d \"${year}-01-01 to ${year}-12-31\" --template '{node}\\n')\n+    vcs_changeset_message=(hg log -l1 --template '{desc}\\n' --rev) # followed by ${changeset}\n+    vcs_changeset_files=(hg log -l1 -v --template '{files}\\n' --rev) # followed by ${changeset}\n+    ;;\n+\n+  *)\n+    echo \"Usage: `basename \"$0\"` <git|hg> [year [company]]\"\n+    exit 1\n+    ;;\n+esac\n+\n@@ -71,2 +131,0 @@\n-    copyright=\"Copyright (c)\"\n-    company=\"Oracle\"\n@@ -97,1 +155,1 @@\n-  hg log -l1 --rev $1 -v --template '{files}\\n' | expand \\\n+  \"${vcs_changeset_files[@]}\" \"$1\" | expand \\\n@@ -101,2 +159,0 @@\n-    copyright=\"Copyright (c)\"\n-    company=\"Oracle\"\n@@ -119,2 +175,2 @@\n-    hg log -l1 --rev $1 -v --template '{files}\\n'\n-    hg log -l1 --rev $1 -v --template '{files}\\n' | expand \\\n+    \"${vcs_changeset_files[@]}\" \"$1\"\n+    \"${vcs_changeset_files[@]}\" \"$1\" | expand \\\n@@ -129,1 +185,1 @@\n-previous=`hg status|wc -l`\n+previous=`\"${vcs_status[@]}\"|wc -l`\n@@ -132,1 +188,1 @@\n-  echo \"  hg status | wc -l = `hg status | wc -l`\"\n+  echo \"  ${vcs_status[*]} | wc -l = `\"${vcs_status[@]}\" | wc -l`\"\n@@ -138,1 +194,1 @@\n-hg log --no-merges -v -d \"${year}-01-01 to ${year}-12-31\" --template '{node}\\n' > ${all_changesets}\n+\"${vcs_list_changesets[@]}\" > ${all_changesets}\n@@ -149,1 +205,1 @@\n-    hg log -l1 --rev ${changeset} --template '{desc}\\n' > ${desc}\n+    \"${vcs_changeset_message[@]}\" \"${changeset}\" > ${desc}\n@@ -178,1 +234,1 @@\n-     echo \"This count should match the count of modified files in the repository: hg status -m\"\n+     echo \"This count should match the count of modified files in the repository: ${vcs_status[*]}\"\n@@ -182,1 +238,1 @@\n-   echo \"  hg status -m | wc -l = `hg status -m | wc -l`\"\n+   echo \"  ${vcs_status[*]} | wc -l = `\"${vcs_status[@]}\" | wc -l`\"\n@@ -189,1 +245,1 @@\n-   echo \"  hg status -m | wc -l = `hg status -m | wc -l`\"\n+   echo \"  ${vcs_status[*]} | wc -l = `\"${vcs_status[@]}\" | wc -l`\"\n","filename":"make\/scripts\/update_copyright_year.sh","additions":75,"deletions":19,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,2 @@\n+  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerClassLoaderTest := jvm.lib\n+  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerLookupTest := jvm.lib\n@@ -83,0 +85,2 @@\n+  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerClassLoaderTest := -ljvm\n+  BUILD_JDK_JTREG_EXECUTABLES_LIBS_exeNullCallerLookupTest := -ljvm\n","filename":"make\/test\/JtregNativeJdk.gmk","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1202,3 +1202,0 @@\n-reg_class p0_reg(P0);\n-reg_class p1_reg(P1);\n-\n@@ -1859,0 +1856,4 @@\n+  if (VM_Version::use_rop_protection()) {\n+    st->print(\"ldr zr, [lr]\\n\\t\");\n+    st->print(\"pacia  lr, rfp\\n\\t\");\n+  }\n@@ -1967,0 +1968,4 @@\n+  if (VM_Version::use_rop_protection()) {\n+    st->print(\"autia lr, rfp\\n\\t\");\n+    st->print(\"ldr zr, [lr]\\n\\t\");\n+  }\n@@ -3207,0 +3212,5 @@\n+  enc_class aarch64_enc_stlrb0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrb);\n+  %}\n+\n@@ -3212,0 +3222,5 @@\n+  enc_class aarch64_enc_stlrh0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrh);\n+  %}\n+\n@@ -3217,0 +3232,4 @@\n+  enc_class aarch64_enc_stlrw0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlrw);\n+  %}\n@@ -3307,0 +3326,5 @@\n+  enc_class aarch64_enc_stlr0(memory mem) %{\n+    MOV_VOLATILE(zr, $mem$$base, $mem$$index, $mem$$scale, $mem$$disp,\n+                 rscratch1, stlr);\n+  %}\n+\n@@ -5690,18 +5714,0 @@\n-operand pRegGov_P0()\n-%{\n-  constraint(ALLOC_IN_RC(p0_reg));\n-  match(RegVectMask);\n-  op_cost(0);\n-  format %{ %}\n-  interface(REG_INTER);\n-%}\n-\n-operand pRegGov_P1()\n-%{\n-  constraint(ALLOC_IN_RC(p1_reg));\n-  match(RegVectMask);\n-  op_cost(0);\n-  format %{ %}\n-  interface(REG_INTER);\n-%}\n-\n@@ -8299,0 +8305,12 @@\n+instruct storeimmB0_volatile(immI0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem (StoreB mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrb  zr, $mem\\t# byte\" %}\n+\n+  ins_encode(aarch64_enc_stlrb0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -8312,0 +8330,12 @@\n+instruct storeimmC0_volatile(immI0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem (StoreC mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrh  zr, $mem\\t# short\" %}\n+\n+  ins_encode(aarch64_enc_stlrh0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -8326,0 +8356,12 @@\n+instruct storeimmI0_volatile(immI0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem(StoreI mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrw  zr, $mem\\t# int\" %}\n+\n+  ins_encode(aarch64_enc_stlrw0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -8339,0 +8381,12 @@\n+instruct storeimmL0_volatile(immL0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem (StoreL mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlr  zr, $mem\\t# int\" %}\n+\n+  ins_encode(aarch64_enc_stlr0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -8352,0 +8406,12 @@\n+instruct storeimmP0_volatile(immP0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem (StoreP mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlr  zr, $mem\\t# ptr\" %}\n+\n+  ins_encode(aarch64_enc_stlr0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -8365,0 +8431,12 @@\n+instruct storeimmN0_volatile(immN0 zero, \/* sync_memory*\/indirect mem)\n+%{\n+  match(Set mem (StoreN mem zero));\n+\n+  ins_cost(VOLATILE_REF_COST);\n+  format %{ \"stlrw  zr, $mem\\t# compressed ptr\" %}\n+\n+  ins_encode(aarch64_enc_stlrw0(mem));\n+\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n@@ -16686,1 +16764,1 @@\n-  predicate((UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU));\n+  predicate(((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU);\n@@ -16696,1 +16774,1 @@\n-                      fnoreg, fnoreg, fnoreg, pnoreg, pnoreg, StrIntrinsicNode::UU);\n+                      fnoreg, fnoreg, fnoreg, StrIntrinsicNode::UU);\n@@ -16704,1 +16782,1 @@\n-  predicate((UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL));\n+  predicate(((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL);\n@@ -16713,1 +16791,1 @@\n-                      fnoreg, fnoreg, fnoreg, pnoreg, pnoreg, StrIntrinsicNode::LL);\n+                      fnoreg, fnoreg, fnoreg, StrIntrinsicNode::LL);\n@@ -16722,1 +16800,1 @@\n-  predicate((UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL));\n+  predicate(((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL);\n@@ -16733,1 +16811,1 @@\n-                      $vtmp3$$FloatRegister, pnoreg, pnoreg, StrIntrinsicNode::UL);\n+                      $vtmp3$$FloatRegister, StrIntrinsicNode::UL);\n@@ -16742,1 +16820,1 @@\n-  predicate((UseSVE == 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU));\n+  predicate(((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU);\n@@ -16753,1 +16831,1 @@\n-                      $vtmp3$$FloatRegister, pnoreg, pnoreg, StrIntrinsicNode::LU);\n+                      $vtmp3$$FloatRegister,StrIntrinsicNode::LU);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":107,"deletions":29,"binary":false,"changes":136,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n-\/\/ Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ Copyright (c) 2020, 2021, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2020, 2022, Arm Limited. All rights reserved.\n@@ -1291,0 +1291,30 @@\n+\/\/ vector not - predicated\n+\n+instruct vnotI_masked(vReg dst, vReg src, immI_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst (XorV (Binary src (ReplicateB m1)) pg));\n+  match(Set dst (XorV (Binary src (ReplicateS m1)) pg));\n+  match(Set dst (XorV (Binary src (ReplicateI m1)) pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_not $dst, $pg, $src\\t# vector (sve) B\/H\/S\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_not(as_FloatRegister($dst$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vnotL_masked(vReg dst, vReg src, immL_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst (XorV (Binary src (ReplicateL m1)) pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_not $dst, $pg, $src\\t# vector (sve) D\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_not(as_FloatRegister($dst$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -1321,0 +1351,30 @@\n+\/\/ vector and_not - predicated\n+\n+instruct vand_notI_masked(vReg dst_src1, vReg src2, immI_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateB m1))) pg));\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateS m1))) pg));\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateI m1))) pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_bic $dst_src1, $pg, $dst_src1, $src2\\t# vector (sve) B\/H\/S\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_bic(as_FloatRegister($dst_src1$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vand_notL_masked(vReg dst_src1, vReg src2, immL_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateL m1))) pg));\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_bic $dst_src1, $pg, $dst_src1, $src2\\t# vector (sve) D\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_bic(as_FloatRegister($dst_src1$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n@@ -5576,99 +5636,0 @@\n-\/\/ Intrisics for String.compareTo()\n-\n-\/\/ Note that Z registers alias the corresponding NEON registers, we declare the vector operands of\n-\/\/ these string_compare variants as NEON register type for convenience so that the prototype of\n-\/\/ string_compare can be shared with all variants.\n-\n-\n-instruct string_compareLL_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegP_R3 str2, iRegI_R4 cnt2,\n-                              iRegI_R0 result, iRegP_R10 tmp1, iRegL_R11 tmp2,\n-                              vRegD_V0 vtmp1, vRegD_V1 vtmp2, pRegGov_P0 pgtmp1,\n-                              pRegGov_P1 pgtmp2, rFlagsReg cr)\n-%{\n-  predicate((UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LL));\n-  match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n-  effect(TEMP tmp1, TEMP tmp2, TEMP vtmp1, TEMP vtmp2, TEMP pgtmp1, TEMP pgtmp2,\n-         USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n-\n-  format %{ \"String Compare $str1,$cnt1,$str2,$cnt2 -> $result   # USE sve\" %}\n-  ins_encode %{\n-    \/\/ Count is in 8-bit bytes; non-Compact chars are 16 bits.\n-    __ string_compare($str1$$Register, $str2$$Register,\n-                      $cnt1$$Register, $cnt2$$Register, $result$$Register,\n-                      $tmp1$$Register, $tmp2$$Register,\n-                      $vtmp1$$FloatRegister, $vtmp2$$FloatRegister, fnoreg,\n-                      as_PRegister($pgtmp1$$reg), as_PRegister($pgtmp2$$reg),\n-                      StrIntrinsicNode::LL);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n-instruct string_compareLU_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegP_R3 str2, iRegI_R4 cnt2,\n-                              iRegI_R0 result, iRegP_R10 tmp1, iRegL_R11 tmp2,\n-                              vRegD_V0 vtmp1, vRegD_V1 vtmp2, pRegGov_P0 pgtmp1,\n-                              pRegGov_P1 pgtmp2, rFlagsReg cr)\n-%{\n-  predicate((UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::LU));\n-  match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n-  effect(TEMP tmp1, TEMP tmp2, TEMP vtmp1, TEMP vtmp2, TEMP pgtmp1, TEMP pgtmp2,\n-         USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n-\n-  format %{ \"String Compare $str1,$cnt1,$str2,$cnt2 -> $result   # USE sve\" %}\n-  ins_encode %{\n-    \/\/ Count is in 8-bit bytes; non-Compact chars are 16 bits.\n-    __ string_compare($str1$$Register, $str2$$Register,\n-                      $cnt1$$Register, $cnt2$$Register, $result$$Register,\n-                      $tmp1$$Register, $tmp2$$Register,\n-                      $vtmp1$$FloatRegister, $vtmp2$$FloatRegister, fnoreg,\n-                      as_PRegister($pgtmp1$$reg), as_PRegister($pgtmp2$$reg),\n-                      StrIntrinsicNode::LU);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n-instruct string_compareUL_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegP_R3 str2, iRegI_R4 cnt2,\n-                              iRegI_R0 result, iRegP_R10 tmp1, iRegL_R11 tmp2,\n-                              vRegD_V0 vtmp1, vRegD_V1 vtmp2, pRegGov_P0 pgtmp1,\n-                              pRegGov_P1 pgtmp2, rFlagsReg cr)\n-%{\n-  predicate((UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UL));\n-  match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n-  effect(TEMP tmp1, TEMP tmp2, TEMP vtmp1, TEMP vtmp2, TEMP pgtmp1, TEMP pgtmp2,\n-         USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n-\n-  format %{ \"String Compare $str1,$cnt1,$str2,$cnt2 -> $result   # USE sve\" %}\n-  ins_encode %{\n-    \/\/ Count is in 8-bit bytes; non-Compact chars are 16 bits.\n-    __ string_compare($str1$$Register, $str2$$Register,\n-                      $cnt1$$Register, $cnt2$$Register, $result$$Register,\n-                      $tmp1$$Register, $tmp2$$Register,\n-                      $vtmp1$$FloatRegister, $vtmp2$$FloatRegister, fnoreg,\n-                      as_PRegister($pgtmp1$$reg), as_PRegister($pgtmp2$$reg),\n-                      StrIntrinsicNode::UL);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n-instruct string_compareUU_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegP_R3 str2, iRegI_R4 cnt2,\n-                              iRegI_R0 result, iRegP_R10 tmp1, iRegL_R11 tmp2,\n-                              vRegD_V0 vtmp1, vRegD_V1 vtmp2, pRegGov_P0 pgtmp1,\n-                              pRegGov_P1 pgtmp2, rFlagsReg cr)\n-%{\n-  predicate((UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::UU));\n-  match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n-  effect(TEMP tmp1, TEMP tmp2, TEMP vtmp1, TEMP vtmp2, TEMP pgtmp1, TEMP pgtmp2,\n-         USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n-\n-  format %{ \"String Compare $str1,$cnt1,$str2,$cnt2 -> $result   # USE sve\" %}\n-  ins_encode %{\n-    \/\/ Count is in 8-bit bytes; non-Compact chars are 16 bits.\n-    __ string_compare($str1$$Register, $str2$$Register,\n-                      $cnt1$$Register, $cnt2$$Register, $result$$Register,\n-                      $tmp1$$Register, $tmp2$$Register,\n-                      $vtmp1$$FloatRegister, $vtmp2$$FloatRegister, fnoreg,\n-                      as_PRegister($pgtmp1$$reg), as_PRegister($pgtmp2$$reg),\n-                      StrIntrinsicNode::UU);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":62,"deletions":101,"binary":false,"changes":163,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n-\/\/ Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ Copyright (c) 2020, 2021, Arm Limited. All rights reserved.\n+\/\/ Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2020, 2022, Arm Limited. All rights reserved.\n@@ -748,0 +748,26 @@\n+\/\/ vector not - predicated\n+dnl\n+define(`MATCH_RULE', `ifelse($1, I,\n+`match(Set dst (XorV (Binary src (ReplicateB m1)) pg));\n+  match(Set dst (XorV (Binary src (ReplicateS m1)) pg));\n+  match(Set dst (XorV (Binary src (ReplicateI m1)) pg));',\n+`match(Set dst (XorV (Binary src (ReplicateL m1)) pg));')')dnl\n+dnl\n+define(`VECTOR_NOT_PREDICATE', `\n+instruct vnot$1_masked`'(vReg dst, vReg src, imm$1_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  MATCH_RULE($1)\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_not $dst, $pg, $src\\t# vector (sve) $2\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_not(as_FloatRegister($dst$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}')dnl\n+dnl                 $1, $2\n+VECTOR_NOT_PREDICATE(I, B\/H\/S)\n+VECTOR_NOT_PREDICATE(L, D)\n+undefine(MATCH_RULE)\n+dnl\n@@ -774,0 +800,26 @@\n+\/\/ vector and_not - predicated\n+dnl\n+define(`MATCH_RULE', `ifelse($1, I,\n+`match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateB m1))) pg));\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateS m1))) pg));\n+  match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateI m1))) pg));',\n+`match(Set dst_src1 (AndV (Binary dst_src1 (XorV src2 (ReplicateL m1))) pg));')')dnl\n+dnl\n+define(`VECTOR_AND_NOT_PREDICATE', `\n+instruct vand_not$1_masked`'(vReg dst_src1, vReg src2, imm$1_M1 m1, pRegGov pg) %{\n+  predicate(UseSVE > 0);\n+  MATCH_RULE($1)\n+  ins_cost(SVE_COST);\n+  format %{ \"sve_bic $dst_src1, $pg, $dst_src1, $src2\\t# vector (sve) $2\" %}\n+  ins_encode %{\n+    BasicType bt = Matcher::vector_element_basic_type(this);\n+    __ sve_bic(as_FloatRegister($dst_src1$$reg), __ elemType_to_regVariant(bt),\n+               as_PRegister($pg$$reg), as_FloatRegister($src2$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}')dnl\n+dnl                     $1, $2\n+VECTOR_AND_NOT_PREDICATE(I, B\/H\/S)\n+VECTOR_AND_NOT_PREDICATE(L, D)\n+undefine(MATCH_RULE)\n+dnl\n@@ -3057,36 +3109,0 @@\n-\/\/ Intrisics for String.compareTo()\n-\n-\/\/ Note that Z registers alias the corresponding NEON registers, we declare the vector operands of\n-\/\/ these string_compare variants as NEON register type for convenience so that the prototype of\n-\/\/ string_compare can be shared with all variants.\n-\n-dnl\n-define(`STRING_COMPARETO', `\n-instruct string_compare$1_sve(iRegP_R1 str1, iRegI_R2 cnt1, iRegP_R3 str2, iRegI_R4 cnt2,\n-                              iRegI_R0 result, iRegP_R10 tmp1, iRegL_R11 tmp2,\n-                              vRegD_V0 vtmp1, vRegD_V1 vtmp2, pRegGov_P0 pgtmp1,\n-                              pRegGov_P1 pgtmp2, rFlagsReg cr)\n-%{\n-  predicate((UseSVE > 0) && (((StrCompNode*)n)->encoding() == StrIntrinsicNode::$1));\n-  match(Set result (StrComp (Binary str1 cnt1) (Binary str2 cnt2)));\n-  effect(TEMP tmp1, TEMP tmp2, TEMP vtmp1, TEMP vtmp2, TEMP pgtmp1, TEMP pgtmp2,\n-         USE_KILL str1, USE_KILL str2, USE_KILL cnt1, USE_KILL cnt2, KILL cr);\n-\n-  format %{ \"String Compare $str1,$cnt1,$str2,$cnt2 -> $result   # USE sve\" %}\n-  ins_encode %{\n-    \/\/ Count is in 8-bit bytes; non-Compact chars are 16 bits.\n-    __ string_compare($str1$$Register, $str2$$Register,\n-                      $cnt1$$Register, $cnt2$$Register, $result$$Register,\n-                      $tmp1$$Register, $tmp2$$Register,\n-                      $vtmp1$$FloatRegister, $vtmp2$$FloatRegister, fnoreg,\n-                      as_PRegister($pgtmp1$$reg), as_PRegister($pgtmp2$$reg),\n-                      StrIntrinsicNode::$1);\n-  %}\n-  ins_pipe(pipe_class_memory);\n-%}')dnl\n-dnl              $1\n-STRING_COMPARETO(LL)\n-STRING_COMPARETO(LU)\n-STRING_COMPARETO(UL)\n-STRING_COMPARETO(UU)\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":54,"deletions":38,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -990,3 +990,1 @@\n-  void hint(int imm) {\n-    system(0b00, 0b011, 0b0010, 0b0000, imm);\n-  }\n+  \/\/ Hint instructions\n@@ -994,2 +992,3 @@\n-  void nop() {\n-    hint(0);\n+#define INSN(NAME, crm, op2)               \\\n+  void NAME() {                            \\\n+    system(0b00, 0b011, 0b0010, crm, op2); \\\n@@ -998,3 +997,6 @@\n-  void yield() {\n-    hint(1);\n-  }\n+  INSN(nop,   0b000, 0b0000);\n+  INSN(yield, 0b000, 0b0001);\n+  INSN(wfe,   0b000, 0b0010);\n+  INSN(wfi,   0b000, 0b0011);\n+  INSN(sev,   0b000, 0b0100);\n+  INSN(sevl,  0b000, 0b0101);\n@@ -1002,7 +1004,13 @@\n-  void wfe() {\n-    hint(2);\n-  }\n-\n-  void wfi() {\n-    hint(3);\n-  }\n+  INSN(autia1716, 0b0001, 0b100);\n+  INSN(autiasp,   0b0011, 0b101);\n+  INSN(autiaz,    0b0011, 0b100);\n+  INSN(autib1716, 0b0001, 0b110);\n+  INSN(autibsp,   0b0011, 0b111);\n+  INSN(autibz,    0b0011, 0b110);\n+  INSN(pacia1716, 0b0001, 0b000);\n+  INSN(paciasp,   0b0011, 0b001);\n+  INSN(paciaz,    0b0011, 0b000);\n+  INSN(pacib1716, 0b0001, 0b010);\n+  INSN(pacibsp,   0b0011, 0b011);\n+  INSN(pacibz,    0b0011, 0b010);\n+  INSN(xpaclri,   0b0000, 0b111);\n@@ -1010,7 +1018,1 @@\n-  void sev() {\n-    hint(4);\n-  }\n-\n-  void sevl() {\n-    hint(5);\n-  }\n+#undef INSN\n@@ -1102,1 +1104,2 @@\n-  void branch_reg(Register R, int opc) {\n+\n+  void branch_reg(int OP, int A, int M, Register RN, Register RM) {\n@@ -1105,4 +1108,6 @@\n-    f(opc, 24, 21);\n-    f(0b11111000000, 20, 10);\n-    rf(R, 5);\n-    f(0b00000, 4, 0);\n+    f(OP, 24, 21);\n+    f(0b111110000, 20, 12);\n+    f(A, 11, 11);\n+    f(M, 10, 10);\n+    rf(RN, 5);\n+    rf(RM, 0);\n@@ -1111,3 +1116,3 @@\n-#define INSN(NAME, opc)                         \\\n-  void NAME(Register R) {                       \\\n-    branch_reg(R, opc);                         \\\n+#define INSN(NAME, opc)              \\\n+  void NAME(Register RN) {           \\\n+    branch_reg(opc, 0, 0, RN, r0);    \\\n@@ -1124,3 +1129,3 @@\n-#define INSN(NAME, opc)                         \\\n-  void NAME() {                 \\\n-    branch_reg(dummy_reg, opc);         \\\n+#define INSN(NAME, opc)                     \\\n+  void NAME() {                             \\\n+    branch_reg(opc, 0, 0, dummy_reg, r0);    \\\n@@ -1132,0 +1137,34 @@\n+#undef INSN\n+\n+#define INSN(NAME, M)                                  \\\n+  void NAME() {                                        \\\n+    branch_reg(0b0010, 1, M, dummy_reg, dummy_reg);    \\\n+  }\n+\n+  INSN(retaa, 0);\n+  INSN(retab, 1);\n+\n+#undef INSN\n+\n+#define INSN(NAME, OP, M)                   \\\n+  void NAME(Register rn) {                  \\\n+    branch_reg(OP, 1, M, rn, dummy_reg);    \\\n+  }\n+\n+  INSN(braaz,  0b0000, 0);\n+  INSN(brabz,  0b0000, 1);\n+  INSN(blraaz, 0b0001, 0);\n+  INSN(blrabz, 0b0001, 1);\n+\n+#undef INSN\n+\n+#define INSN(NAME, OP, M)                  \\\n+  void NAME(Register rn, Register rm) {    \\\n+    branch_reg(OP, 1, M, rn, rm);          \\\n+  }\n+\n+  INSN(braa,  0b1000, 0);\n+  INSN(brab,  0b1000, 1);\n+  INSN(blraa, 0b1001, 0);\n+  INSN(blrab, 0b1001, 1);\n+\n@@ -1795,0 +1834,31 @@\n+  \/\/ PAC instructions\n+  INSN(pacia,  0b110, 0b00001, 0b00000);\n+  INSN(pacib,  0b110, 0b00001, 0b00001);\n+  INSN(pacda,  0b110, 0b00001, 0b00010);\n+  INSN(pacdb,  0b110, 0b00001, 0b00011);\n+  INSN(autia,  0b110, 0b00001, 0b00100);\n+  INSN(autib,  0b110, 0b00001, 0b00101);\n+  INSN(autda,  0b110, 0b00001, 0b00110);\n+  INSN(autdb,  0b110, 0b00001, 0b00111);\n+\n+#undef INSN\n+\n+#define INSN(NAME, op29, opcode2, opcode)                       \\\n+  void NAME(Register Rd) {                                      \\\n+    starti;                                                     \\\n+    f(opcode2, 20, 16);                                         \\\n+    data_processing(current_insn, op29, opcode, Rd, dummy_reg); \\\n+  }\n+\n+  \/\/ PAC instructions (with zero modifier)\n+  INSN(paciza,  0b110, 0b00001, 0b01000);\n+  INSN(pacizb,  0b110, 0b00001, 0b01001);\n+  INSN(pacdza,  0b110, 0b00001, 0b01010);\n+  INSN(pacdzb,  0b110, 0b00001, 0b01011);\n+  INSN(autiza,  0b110, 0b00001, 0b01100);\n+  INSN(autizb,  0b110, 0b00001, 0b01101);\n+  INSN(autdza,  0b110, 0b00001, 0b01110);\n+  INSN(autdzb,  0b110, 0b00001, 0b01111);\n+  INSN(xpaci,   0b110, 0b00001, 0b10000);\n+  INSN(xpacd,   0b110, 0b00001, 0b10001);\n+\n@@ -3048,0 +3118,1 @@\n+  INSN(sve_bic,  0b00000100, 0b011011000); \/\/ vector bitwise clear\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":104,"deletions":33,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/bytes_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -388,0 +388,1 @@\n+    __ authenticate_return_address(exception_pc, rscratch1);\n@@ -436,0 +437,1 @@\n+  __ protect_return_address(exception_pc, rscratch1);\n@@ -451,0 +453,1 @@\n+  __ protect_return_address(r0, rscratch1);\n@@ -499,0 +502,2 @@\n+  __ mov(r3, lr);\n+  __ protect_return_address();\n@@ -502,1 +507,1 @@\n-  __ call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::exception_handler_for_return_address), rthread, lr);\n+  __ call_VM_leaf(CAST_FROM_FN_PTR(address, SharedRuntime::exception_handler_for_return_address), rthread, r3);\n@@ -515,0 +520,1 @@\n+  __ authenticate_return_address();\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_Runtime1_aarch64.cpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -679,2 +679,1 @@\n-    FloatRegister vtmp1, FloatRegister vtmp2, FloatRegister vtmp3,\n-    PRegister pgtmp1, PRegister pgtmp2, int ae) {\n+    FloatRegister vtmp1, FloatRegister vtmp2, FloatRegister vtmp3, int ae) {\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,2 +35,1 @@\n-                      FloatRegister vtmp2, FloatRegister vtmp3,\n-                      PRegister pgtmp1, PRegister pgtmp2, int ae);\n+                      FloatRegister vtmp2, FloatRegister vtmp3, int ae);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,0 @@\n-      sender_pc = (address) this->fp()[return_addr_offset];\n@@ -138,0 +137,1 @@\n+      sender_pc = pauth_strip_verifiable((address) this->fp()[return_addr_offset], (address)saved_fp);\n@@ -154,1 +154,0 @@\n-      sender_pc = (address) *(sender_sp-1);\n@@ -157,0 +156,1 @@\n+      sender_pc = pauth_strip_verifiable((address) *(sender_sp-1), (address)saved_fp);\n@@ -271,0 +271,3 @@\n+  address signing_sp = (((address*) sp())[-2]);\n+  address signed_pc = pauth_sign_return_address(pc, (address)signing_sp);\n+  address pc_old = pauth_strip_verifiable(*pc_addr, (address)signing_sp);\n@@ -272,2 +275,6 @@\n-    tty->print_cr(\"patch_pc at address \" INTPTR_FORMAT \" [\" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\",\n-                  p2i(pc_addr), p2i(*pc_addr), p2i(pc));\n+    tty->print(\"patch_pc at address \" INTPTR_FORMAT \" [\" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\",\n+                  p2i(pc_addr), p2i(pc_old), p2i(pc));\n+    if (VM_Version::use_rop_protection()) {\n+      tty->print(\" [signed \" INTPTR_FORMAT \" -> \" INTPTR_FORMAT \"]\", p2i(*pc_addr), p2i(signed_pc));\n+    }\n+    tty->print_cr(\"\");\n@@ -276,2 +283,0 @@\n-  \/\/ Only generated code frames should be patched, therefore the return address will not be signed.\n-  assert(pauth_ptr_is_raw(*pc_addr), \"cannot be signed\");\n@@ -280,2 +285,2 @@\n-  assert(_pc == *pc_addr || pc == *pc_addr, \"must be\");\n-  *pc_addr = pc;\n+  assert(_pc == pc_old || pc == pc_old, \"must be\");\n+  *pc_addr = signed_pc;\n@@ -361,0 +366,1 @@\n+  fr.set_sp_is_trusted();\n@@ -457,1 +463,2 @@\n-  \/\/ Use the raw version of pc - the interpreter should not have signed it.\n+  \/\/ For ROP protection, Interpreter will have signed the sender_pc, but there is no requirement to authenticate it here.\n+  address sender_pc = pauth_strip_verifiable(sender_pc_maybe_signed(), (address)link());\n@@ -459,1 +466,1 @@\n-  return frame(sender_sp, unextended_sp, link(), sender_pc_maybe_signed());\n+  return frame(sender_sp, unextended_sp, link(), sender_pc);\n@@ -462,1 +469,0 @@\n-\n@@ -466,3 +472,11 @@\n-  \/\/ we cannot rely upon the last fp having been saved to the thread\n-  \/\/ in C2 code but it will have been pushed onto the stack. so we\n-  \/\/ have to find it relative to the unextended sp\n+  \/\/ When the sp of a compiled frame is correct, we can get the correct sender sp\n+  \/\/ by unextended sp + frame size.\n+  \/\/ For the following two scenarios, the sp of a compiled frame is correct:\n+  \/\/  a) This compiled frame is built from the anchor.\n+  \/\/  b) This compiled frame is built from a callee frame, and the callee frame can\n+  \/\/    calculate its sp correctly.\n+  \/\/\n+  \/\/ For b), if the callee frame is a native code frame (such as leaf call), the sp of\n+  \/\/ the compiled frame cannot be calculated correctly. There is currently no suitable\n+  \/\/ solution to solve this problem perfectly. But when PreserveFramePointer is enabled,\n+  \/\/ we can get the correct sender sp by fp + 2 (that is sender_sp()).\n@@ -471,1 +485,2 @@\n-  intptr_t* l_sender_sp = unextended_sp() + _cb->frame_size();\n+  intptr_t* l_sender_sp = (!PreserveFramePointer || _sp_is_trusted) ? unextended_sp() + _cb->frame_size()\n+                                                                    : sender_sp();\n@@ -475,1 +490,3 @@\n-  address sender_pc = (address) *(l_sender_sp-1);\n+\n+  \/\/ For ROP protection, C1\/C2 will have signed the sender_pc, but there is no requirement to authenticate it here.\n+  address sender_pc = pauth_strip_verifiable((address) *(l_sender_sp-1), (address) *(l_sender_sp-2));\n@@ -523,0 +540,3 @@\n+  \/\/ Native code may or may not have signed the return address, we have no way to be sure or what\n+  \/\/ signing methods they used. Instead, just ensure the stripped value is used.\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":37,"deletions":17,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,0 +127,5 @@\n+  \/\/ true means _sp value is correct and we can use it to get the sender's sp\n+  \/\/ of the compiled frame, otherwise, _sp value may be invalid and we can use\n+  \/\/ _fp to get the sender's sp if PreserveFramePointer is enabled.\n+  bool _sp_is_trusted;\n+\n@@ -168,0 +173,2 @@\n+  void set_sp_is_trusted() { _sp_is_trusted = true; }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,1 @@\n+  _sp_is_trusted = false;\n@@ -67,0 +68,1 @@\n+  _sp_is_trusted = false;\n@@ -94,0 +96,1 @@\n+  _sp_is_trusted = false;\n@@ -125,0 +128,1 @@\n+  _sp_is_trusted = false;\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -274,1 +274,1 @@\n-    __ enter(); \/\/ barrier may call runtime\n+    __ enter(\/*strip_ret_addr*\/true); \/\/ barrier may call runtime\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/g1\/g1BarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. All rights reserved.\n@@ -240,1 +240,1 @@\n-  __ enter();\n+  __ enter(\/*strip_ret_addr*\/true);\n@@ -362,1 +362,1 @@\n-    __ enter();\n+    __ enter(\/*strip_ret_addr*\/true);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-  __ enter();\n+  __ enter(\/*strip_ret_addr*\/true);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/z\/zBarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,3 @@\n-          range(1, 99)\n+          range(1, 99)                                                  \\\n+  product(ccstr, UseBranchProtection, \"none\",                           \\\n+          \"Branch Protection to use: none, standard, pac-ret\")          \\\n","filename":"src\/hotspot\/cpu\/aarch64\/globals_aarch64.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -132,0 +132,10 @@\n+  assert(count > 0, \"must be\");\n+  assert(nbits > 0, \"must be\");\n+  assert(count * nbits <= 64, \"must be\");\n+\n+  \/\/ Special case nbits == 64 since the shift below with that nbits value\n+  \/\/ would result in undefined behavior.\n+  if (nbits == 64) {\n+    return bits;\n+  }\n+\n@@ -133,1 +143,0 @@\n-  \/\/ nbits may be 64 in which case we want mask to be -1\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/jniTypes_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1140,0 +1140,2 @@\n+  strip_return_address(); \/\/ This might happen within a stack frame.\n+  protect_return_address();\n@@ -1153,0 +1155,1 @@\n+  authenticate_return_address();\n@@ -1169,0 +1172,2 @@\n+  strip_return_address(); \/\/ This might happen within a stack frame.\n+  protect_return_address();\n@@ -1189,0 +1194,1 @@\n+  authenticate_return_address();\n@@ -4299,0 +4305,1 @@\n+  protect_return_address();\n@@ -4331,0 +4338,1 @@\n+  authenticate_return_address();\n@@ -5172,0 +5180,1 @@\n+  protect_return_address();\n@@ -5181,0 +5190,1 @@\n+  authenticate_return_address();\n@@ -5272,0 +5282,99 @@\n+\n+\/\/ Stack frame creation\/removal\n+\n+void MacroAssembler::enter(bool strip_ret_addr) {\n+  if (strip_ret_addr) {\n+    \/\/ Addresses can only be signed once. If there are multiple nested frames being created\n+    \/\/ in the same function, then the return address needs stripping first.\n+    strip_return_address();\n+  }\n+  protect_return_address();\n+  stp(rfp, lr, Address(pre(sp, -2 * wordSize)));\n+  mov(rfp, sp);\n+}\n+\n+void MacroAssembler::leave() {\n+  mov(sp, rfp);\n+  ldp(rfp, lr, Address(post(sp, 2 * wordSize)));\n+  authenticate_return_address();\n+}\n+\n+\/\/ ROP Protection\n+\/\/ Use the AArch64 PAC feature to add ROP protection for generated code. Use whenever creating\/\n+\/\/ destroying stack frames or whenever directly loading\/storing the LR to memory.\n+\/\/ If ROP protection is not set then these functions are no-ops.\n+\/\/ For more details on PAC see pauth_aarch64.hpp.\n+\n+\/\/ Sign the LR. Use during construction of a stack frame, before storing the LR to memory.\n+\/\/ Uses the FP as the modifier.\n+\/\/\n+void MacroAssembler::protect_return_address() {\n+  if (VM_Version::use_rop_protection()) {\n+    check_return_address();\n+    \/\/ The standard convention for C code is to use paciasp, which uses SP as the modifier. This\n+    \/\/ works because in C code, FP and SP match on function entry. In the JDK, SP and FP may not\n+    \/\/ match, so instead explicitly use the FP.\n+    pacia(lr, rfp);\n+  }\n+}\n+\n+\/\/ Sign the return value in the given register. Use before updating the LR in the exisiting stack\n+\/\/ frame for the current function.\n+\/\/ Uses the FP from the start of the function as the modifier - which is stored at the address of\n+\/\/ the current FP.\n+\/\/\n+void MacroAssembler::protect_return_address(Register return_reg, Register temp_reg) {\n+  if (VM_Version::use_rop_protection()) {\n+    assert(PreserveFramePointer, \"PreserveFramePointer must be set for ROP protection\");\n+    check_return_address(return_reg);\n+    ldr(temp_reg, Address(rfp));\n+    pacia(return_reg, temp_reg);\n+  }\n+}\n+\n+\/\/ Authenticate the LR. Use before function return, after restoring FP and loading LR from memory.\n+\/\/\n+void MacroAssembler::authenticate_return_address(Register return_reg) {\n+  if (VM_Version::use_rop_protection()) {\n+    autia(return_reg, rfp);\n+    check_return_address(return_reg);\n+  }\n+}\n+\n+\/\/ Authenticate the return value in the given register. Use before updating the LR in the exisiting\n+\/\/ stack frame for the current function.\n+\/\/ Uses the FP from the start of the function as the modifier - which is stored at the address of\n+\/\/ the current FP.\n+\/\/\n+void MacroAssembler::authenticate_return_address(Register return_reg, Register temp_reg) {\n+  if (VM_Version::use_rop_protection()) {\n+    assert(PreserveFramePointer, \"PreserveFramePointer must be set for ROP protection\");\n+    ldr(temp_reg, Address(rfp));\n+    autia(return_reg, temp_reg);\n+    check_return_address(return_reg);\n+  }\n+}\n+\n+\/\/ Strip any PAC data from LR without performing any authentication. Use with caution - only if\n+\/\/ there is no guaranteed way of authenticating the LR.\n+\/\/\n+void MacroAssembler::strip_return_address() {\n+  if (VM_Version::use_rop_protection()) {\n+    xpaclri();\n+  }\n+}\n+\n+#ifndef PRODUCT\n+\/\/ PAC failures can be difficult to debug. After an authentication failure, a segfault will only\n+\/\/ occur when the pointer is used - ie when the program returns to the invalid LR. At this point\n+\/\/ it is difficult to debug back to the callee function.\n+\/\/ This function simply loads from the address in the given register.\n+\/\/ Use directly after authentication to catch authentication failures.\n+\/\/ Also use before signing to check that the pointer is valid and hasn't already been signed.\n+\/\/\n+void MacroAssembler::check_return_address(Register return_reg) {\n+  if (VM_Version::use_rop_protection()) {\n+    ldr(zr, Address(return_reg));\n+  }\n+}\n+#endif\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":109,"deletions":0,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -691,10 +691,10 @@\n-  void enter()\n-  {\n-    stp(rfp, lr, Address(pre(sp, -2 * wordSize)));\n-    mov(rfp, sp);\n-  }\n-  void leave()\n-  {\n-    mov(sp, rfp);\n-    ldp(rfp, lr, Address(post(sp, 2 * wordSize)));\n-  }\n+  void enter(bool strip_ret_addr = false);\n+  void leave();\n+\n+  \/\/ ROP Protection\n+  void protect_return_address();\n+  void protect_return_address(Register return_reg, Register temp_reg);\n+  void authenticate_return_address(Register return_reg = lr);\n+  void authenticate_return_address(Register return_reg, Register temp_reg);\n+  void strip_return_address();\n+  void check_return_address(Register return_reg=lr) PRODUCT_RETURN;\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Arm Limited. All rights reserved.\n+ * Copyright (c) 2021, 2022, Arm Limited. All rights reserved.\n@@ -30,0 +30,39 @@\n+\/\/ Support for ROP Protection in VM code.\n+\/\/ This is provided via the AArch64 PAC feature.\n+\/\/ For more details on PAC see The Arm ARM, section \"Pointer authentication in AArch64 state\".\n+\/\/\n+\/\/ PAC provides a method to sign and authenticate pointer values. Signing combines the register\n+\/\/ being signed, an additional modifier and a per-process secret key, writing the result to unused\n+\/\/ high bits of the signed register. Once signed a register must be authenticated or stripped\n+\/\/ before it can be used.\n+\/\/ Authentication reverses the signing operation, clearing the high bits. If the signed register\n+\/\/ or modifier has changed then authentication will fail and invalid data will be written to the\n+\/\/ high bits and the next time the pointer is used a segfault will be raised.\n+\/\/\n+\/\/ Assume a malicious attacker is able to edit the stack via an exploit. Control flow can be\n+\/\/ changed by re-writing the return values stored on the stack. ROP protection prevents this by\n+\/\/ signing return addresses before saving them on the stack, then authenticating when they are\n+\/\/ loaded back. The scope of this protection is per function (a value is signed and authenticated\n+\/\/ by the same function), therefore it is possible for different functions within the same\n+\/\/ program to use different signing methods.\n+\/\/\n+\/\/ The VM and native code is protected by compiling with the GCC AArch64 branch protection flag.\n+\/\/\n+\/\/ All generated code is protected via the ROP functions provided in macroAssembler.\n+\/\/\n+\/\/ In addition, the VM needs to be aware of PAC whenever viewing or editing the stack. Functions\n+\/\/ are provided here and in the OS specific files. We should assume all stack frames for generated\n+\/\/ code have signed return values. Rewriting the stack should ensure new values are correctly\n+\/\/ signed. However, we cannot make any assumptions about how (or if) native code uses PAC - here\n+\/\/ we should limit access to viewing via stripping.\n+\/\/\n+\n+\n+\/\/ Confirm the given pointer has not been signed - ie none of the high bits are set.\n+\/\/\n+\/\/ Note this can give false positives. The PAC signing can generate a signature with all signing\n+\/\/ bits as zeros, causing this function to return true. Therefore this should only be used for\n+\/\/ assert style checking. In addition, this function should never be used with a \"not\" to confirm\n+\/\/ a pointer is signed, as it will fail the above case. The only safe way to do this is to instead\n+\/\/ authenticate the pointer.\n+\/\/\n@@ -31,1 +70,0 @@\n-  \/\/ Confirm none of the high bits are set in the pointer.\n@@ -35,0 +73,11 @@\n+\/\/ Strip a return value (same as pauth_strip_pointer). When debug is enabled then authenticate\n+\/\/ instead.\n+\/\/\n+inline address pauth_strip_verifiable(address ret_addr, address modifier) {\n+  if (VM_Version::use_rop_protection()) {\n+    DEBUG_ONLY(ret_addr = pauth_authenticate_return_address(ret_addr, modifier);)\n+    NOT_DEBUG(ret_addr = pauth_strip_pointer(ret_addr));\n+  }\n+  return ret_addr;\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/pauth_aarch64.hpp","additions":51,"deletions":2,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -278,2 +278,0 @@\n-CONSTANT_REGISTER_DECLARATION(PRegister, pnoreg, (-1));\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,210 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2014, Red Hat Inc. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/macroAssembler.inline.hpp\"\n-#include \"asm\/register.hpp\"\n-#include \"register_aarch64.hpp\"\n-# include \"interp_masm_aarch64.hpp\"\n-\n-REGISTER_DEFINITION(Register, noreg);\n-\n-REGISTER_DEFINITION(Register, r0);\n-REGISTER_DEFINITION(Register, r1);\n-REGISTER_DEFINITION(Register, r2);\n-REGISTER_DEFINITION(Register, r3);\n-REGISTER_DEFINITION(Register, r4);\n-REGISTER_DEFINITION(Register, r5);\n-REGISTER_DEFINITION(Register, r6);\n-REGISTER_DEFINITION(Register, r7);\n-REGISTER_DEFINITION(Register, r8);\n-REGISTER_DEFINITION(Register, r9);\n-REGISTER_DEFINITION(Register, r10);\n-REGISTER_DEFINITION(Register, r11);\n-REGISTER_DEFINITION(Register, r12);\n-REGISTER_DEFINITION(Register, r13);\n-REGISTER_DEFINITION(Register, r14);\n-REGISTER_DEFINITION(Register, r15);\n-REGISTER_DEFINITION(Register, r16);\n-REGISTER_DEFINITION(Register, r17);\n-REGISTER_DEFINITION(Register, r18_tls); \/\/ see comment in register_aarch64.hpp\n-REGISTER_DEFINITION(Register, r19);\n-REGISTER_DEFINITION(Register, r20);\n-REGISTER_DEFINITION(Register, r21);\n-REGISTER_DEFINITION(Register, r22);\n-REGISTER_DEFINITION(Register, r23);\n-REGISTER_DEFINITION(Register, r24);\n-REGISTER_DEFINITION(Register, r25);\n-REGISTER_DEFINITION(Register, r26);\n-REGISTER_DEFINITION(Register, r27);\n-REGISTER_DEFINITION(Register, r28);\n-REGISTER_DEFINITION(Register, r29);\n-REGISTER_DEFINITION(Register, r30);\n-REGISTER_DEFINITION(Register, sp);\n-\n-REGISTER_DEFINITION(FloatRegister, fnoreg);\n-\n-REGISTER_DEFINITION(FloatRegister, v0);\n-REGISTER_DEFINITION(FloatRegister, v1);\n-REGISTER_DEFINITION(FloatRegister, v2);\n-REGISTER_DEFINITION(FloatRegister, v3);\n-REGISTER_DEFINITION(FloatRegister, v4);\n-REGISTER_DEFINITION(FloatRegister, v5);\n-REGISTER_DEFINITION(FloatRegister, v6);\n-REGISTER_DEFINITION(FloatRegister, v7);\n-REGISTER_DEFINITION(FloatRegister, v8);\n-REGISTER_DEFINITION(FloatRegister, v9);\n-REGISTER_DEFINITION(FloatRegister, v10);\n-REGISTER_DEFINITION(FloatRegister, v11);\n-REGISTER_DEFINITION(FloatRegister, v12);\n-REGISTER_DEFINITION(FloatRegister, v13);\n-REGISTER_DEFINITION(FloatRegister, v14);\n-REGISTER_DEFINITION(FloatRegister, v15);\n-REGISTER_DEFINITION(FloatRegister, v16);\n-REGISTER_DEFINITION(FloatRegister, v17);\n-REGISTER_DEFINITION(FloatRegister, v18);\n-REGISTER_DEFINITION(FloatRegister, v19);\n-REGISTER_DEFINITION(FloatRegister, v20);\n-REGISTER_DEFINITION(FloatRegister, v21);\n-REGISTER_DEFINITION(FloatRegister, v22);\n-REGISTER_DEFINITION(FloatRegister, v23);\n-REGISTER_DEFINITION(FloatRegister, v24);\n-REGISTER_DEFINITION(FloatRegister, v25);\n-REGISTER_DEFINITION(FloatRegister, v26);\n-REGISTER_DEFINITION(FloatRegister, v27);\n-REGISTER_DEFINITION(FloatRegister, v28);\n-REGISTER_DEFINITION(FloatRegister, v29);\n-REGISTER_DEFINITION(FloatRegister, v30);\n-REGISTER_DEFINITION(FloatRegister, v31);\n-\n-REGISTER_DEFINITION(Register, zr);\n-\n-REGISTER_DEFINITION(Register, c_rarg0);\n-REGISTER_DEFINITION(Register, c_rarg1);\n-REGISTER_DEFINITION(Register, c_rarg2);\n-REGISTER_DEFINITION(Register, c_rarg3);\n-REGISTER_DEFINITION(Register, c_rarg4);\n-REGISTER_DEFINITION(Register, c_rarg5);\n-REGISTER_DEFINITION(Register, c_rarg6);\n-REGISTER_DEFINITION(Register, c_rarg7);\n-\n-REGISTER_DEFINITION(FloatRegister, c_farg0);\n-REGISTER_DEFINITION(FloatRegister, c_farg1);\n-REGISTER_DEFINITION(FloatRegister, c_farg2);\n-REGISTER_DEFINITION(FloatRegister, c_farg3);\n-REGISTER_DEFINITION(FloatRegister, c_farg4);\n-REGISTER_DEFINITION(FloatRegister, c_farg5);\n-REGISTER_DEFINITION(FloatRegister, c_farg6);\n-REGISTER_DEFINITION(FloatRegister, c_farg7);\n-\n-REGISTER_DEFINITION(Register, j_rarg0);\n-REGISTER_DEFINITION(Register, j_rarg1);\n-REGISTER_DEFINITION(Register, j_rarg2);\n-REGISTER_DEFINITION(Register, j_rarg3);\n-REGISTER_DEFINITION(Register, j_rarg4);\n-REGISTER_DEFINITION(Register, j_rarg5);\n-REGISTER_DEFINITION(Register, j_rarg6);\n-REGISTER_DEFINITION(Register, j_rarg7);\n-\n-REGISTER_DEFINITION(FloatRegister, j_farg0);\n-REGISTER_DEFINITION(FloatRegister, j_farg1);\n-REGISTER_DEFINITION(FloatRegister, j_farg2);\n-REGISTER_DEFINITION(FloatRegister, j_farg3);\n-REGISTER_DEFINITION(FloatRegister, j_farg4);\n-REGISTER_DEFINITION(FloatRegister, j_farg5);\n-REGISTER_DEFINITION(FloatRegister, j_farg6);\n-REGISTER_DEFINITION(FloatRegister, j_farg7);\n-\n-REGISTER_DEFINITION(Register, rscratch1);\n-REGISTER_DEFINITION(Register, rscratch2);\n-REGISTER_DEFINITION(Register, esp);\n-REGISTER_DEFINITION(Register, rdispatch);\n-REGISTER_DEFINITION(Register, rcpool);\n-REGISTER_DEFINITION(Register, rmonitors);\n-REGISTER_DEFINITION(Register, rlocals);\n-REGISTER_DEFINITION(Register, rmethod);\n-REGISTER_DEFINITION(Register, rbcp);\n-\n-REGISTER_DEFINITION(Register, lr);\n-REGISTER_DEFINITION(Register, rfp);\n-REGISTER_DEFINITION(Register, rthread);\n-REGISTER_DEFINITION(Register, rheapbase);\n-\n-REGISTER_DEFINITION(Register, r31_sp);\n-\n-REGISTER_DEFINITION(FloatRegister, z0);\n-REGISTER_DEFINITION(FloatRegister, z1);\n-REGISTER_DEFINITION(FloatRegister, z2);\n-REGISTER_DEFINITION(FloatRegister, z3);\n-REGISTER_DEFINITION(FloatRegister, z4);\n-REGISTER_DEFINITION(FloatRegister, z5);\n-REGISTER_DEFINITION(FloatRegister, z6);\n-REGISTER_DEFINITION(FloatRegister, z7);\n-REGISTER_DEFINITION(FloatRegister, z8);\n-REGISTER_DEFINITION(FloatRegister, z9);\n-REGISTER_DEFINITION(FloatRegister, z10);\n-REGISTER_DEFINITION(FloatRegister, z11);\n-REGISTER_DEFINITION(FloatRegister, z12);\n-REGISTER_DEFINITION(FloatRegister, z13);\n-REGISTER_DEFINITION(FloatRegister, z14);\n-REGISTER_DEFINITION(FloatRegister, z15);\n-REGISTER_DEFINITION(FloatRegister, z16);\n-REGISTER_DEFINITION(FloatRegister, z17);\n-REGISTER_DEFINITION(FloatRegister, z18);\n-REGISTER_DEFINITION(FloatRegister, z19);\n-REGISTER_DEFINITION(FloatRegister, z20);\n-REGISTER_DEFINITION(FloatRegister, z21);\n-REGISTER_DEFINITION(FloatRegister, z22);\n-REGISTER_DEFINITION(FloatRegister, z23);\n-REGISTER_DEFINITION(FloatRegister, z24);\n-REGISTER_DEFINITION(FloatRegister, z25);\n-REGISTER_DEFINITION(FloatRegister, z26);\n-REGISTER_DEFINITION(FloatRegister, z27);\n-REGISTER_DEFINITION(FloatRegister, z28);\n-REGISTER_DEFINITION(FloatRegister, z29);\n-REGISTER_DEFINITION(FloatRegister, z30);\n-REGISTER_DEFINITION(FloatRegister, z31);\n-\n-REGISTER_DEFINITION(PRegister, pnoreg);\n-\n-REGISTER_DEFINITION(PRegister, p0);\n-REGISTER_DEFINITION(PRegister, p1);\n-REGISTER_DEFINITION(PRegister, p2);\n-REGISTER_DEFINITION(PRegister, p3);\n-REGISTER_DEFINITION(PRegister, p4);\n-REGISTER_DEFINITION(PRegister, p5);\n-REGISTER_DEFINITION(PRegister, p6);\n-REGISTER_DEFINITION(PRegister, p7);\n-REGISTER_DEFINITION(PRegister, p8);\n-REGISTER_DEFINITION(PRegister, p9);\n-REGISTER_DEFINITION(PRegister, p10);\n-REGISTER_DEFINITION(PRegister, p11);\n-REGISTER_DEFINITION(PRegister, p12);\n-REGISTER_DEFINITION(PRegister, p13);\n-REGISTER_DEFINITION(PRegister, p14);\n-REGISTER_DEFINITION(PRegister, p15);\n-\n-REGISTER_DEFINITION(PRegister, ptrue);\n","filename":"src\/hotspot\/cpu\/aarch64\/register_definitions_aarch64.cpp","additions":0,"deletions":210,"binary":false,"changes":210,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -413,0 +413,1 @@\n+  __ authenticate_return_address(c_rarg1, rscratch1);\n@@ -2181,1 +2182,0 @@\n-\n@@ -2183,0 +2183,1 @@\n+  __ protect_return_address(r3, rscratch1);\n@@ -2290,0 +2291,1 @@\n+  __ authenticate_return_address();\n@@ -2431,0 +2433,1 @@\n+  __ protect_return_address();\n@@ -2505,0 +2508,1 @@\n+  __ authenticate_return_address();\n@@ -2627,0 +2631,5 @@\n+  \/\/ When the signal occured, the LR was either signed and stored on the stack (in which\n+  \/\/ case it will be restored from the stack before being used) or unsigned and not stored\n+  \/\/ on the stack. Stipping ensures we get the right value.\n+  __ strip_return_address();\n+\n@@ -2646,0 +2655,1 @@\n+    __ protect_return_address(r20, rscratch1);\n@@ -2686,0 +2696,1 @@\n+    __ authenticate_return_address(r20, rscratch1);\n@@ -2700,0 +2711,1 @@\n+    __ protect_return_address(r20, rscratch1);\n@@ -2860,0 +2872,1 @@\n+  __ protect_return_address();\n@@ -2913,0 +2926,1 @@\n+  __ authenticate_return_address(r3);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -5218,91 +5218,0 @@\n-  enum string_compare_mode {\n-    LL,\n-    LU,\n-    UL,\n-    UU,\n-  };\n-\n-  \/\/ The following registers are declared in aarch64.ad\n-  \/\/ r0  = result\n-  \/\/ r1  = str1\n-  \/\/ r2  = cnt1\n-  \/\/ r3  = str2\n-  \/\/ r4  = cnt2\n-  \/\/ r10 = tmp1\n-  \/\/ r11 = tmp2\n-  \/\/ z0  = ztmp1\n-  \/\/ z1  = ztmp2\n-  \/\/ p0  = pgtmp1\n-  \/\/ p1  = pgtmp2\n-  address generate_compare_long_string_sve(string_compare_mode mode) {\n-    __ align(CodeEntryAlignment);\n-    address entry = __ pc();\n-    Register result = r0, str1 = r1, cnt1 = r2, str2 = r3, cnt2 = r4,\n-             tmp1 = r10, tmp2 = r11;\n-\n-    Label LOOP, MATCH, DONE, NOMATCH;\n-    Register vec_len = tmp1;\n-    Register idx = tmp2;\n-    \/\/ The minimum of the string lengths has been stored in cnt2.\n-    Register cnt = cnt2;\n-    FloatRegister ztmp1 = z0, ztmp2 = z1;\n-    PRegister pgtmp1 = p0, pgtmp2 = p1;\n-\n-    if (mode == LL) {\n-      __ sve_cntb(vec_len);\n-    } else {\n-      __ sve_cnth(vec_len);\n-    }\n-\n-    __ mov(idx, 0);\n-    __ sve_whilelt(pgtmp1, mode == LL ? __ B : __ H, idx, cnt);\n-\n-    __ bind(LOOP);\n-      switch (mode) {\n-        case LL:\n-          __ sve_ld1b(ztmp1, __ B, pgtmp1, Address(str1, idx));\n-          __ sve_ld1b(ztmp2, __ B, pgtmp1, Address(str2, idx));\n-          break;\n-        case LU:\n-          __ sve_ld1b(ztmp1, __ H, pgtmp1, Address(str1, idx));\n-          __ sve_ld1h(ztmp2, __ H, pgtmp1, Address(str2, idx, Address::lsl(1)));\n-          break;\n-        case UL:\n-          __ sve_ld1h(ztmp1, __ H, pgtmp1, Address(str1, idx, Address::lsl(1)));\n-          __ sve_ld1b(ztmp2, __ H, pgtmp1, Address(str2, idx));\n-          break;\n-        case UU:\n-          __ sve_ld1h(ztmp1, __ H, pgtmp1, Address(str1, idx, Address::lsl(1)));\n-          __ sve_ld1h(ztmp2, __ H, pgtmp1, Address(str2, idx, Address::lsl(1)));\n-          break;\n-        default: ShouldNotReachHere();\n-      }\n-      __ add(idx, idx, vec_len);\n-\n-      \/\/ Compare strings.\n-      __ sve_cmp(Assembler::NE, pgtmp2, mode == LL ? __ B : __ H, pgtmp1, ztmp1, ztmp2);\n-      __ br(__ NE, MATCH);\n-      __ sve_whilelt(pgtmp1, mode == LL ? __ B : __ H, idx, cnt);\n-      __ br(__ LT, LOOP);\n-\n-      \/\/ The result has been computed in the caller prior to entering this stub.\n-      __ b(DONE);\n-\n-    __ bind(MATCH);\n-\n-      \/\/ Crop the vector to find its location.\n-      __ sve_brkb(pgtmp2, pgtmp1, pgtmp2, false \/* isMerge *\/);\n-\n-      \/\/ Extract the first different characters of each string.\n-      __ sve_lasta(rscratch1, mode == LL ? __ B : __ H, pgtmp2, ztmp1);\n-      __ sve_lasta(rscratch2, mode == LL ? __ B : __ H, pgtmp2, ztmp2);\n-\n-      \/\/ Compute the difference of the first different characters.\n-      __ sub(result, rscratch1, rscratch2);\n-\n-    __ bind(DONE);\n-      __ ret(lr);\n-\n-    return entry;\n-  }\n-\n@@ -5431,1 +5340,0 @@\n-    if (UseSVE == 0) {\n@@ -5440,10 +5348,0 @@\n-    } else {\n-      StubRoutines::aarch64::_compare_long_string_LL\n-          = generate_compare_long_string_sve(LL);\n-      StubRoutines::aarch64::_compare_long_string_UU\n-          = generate_compare_long_string_sve(UU);\n-      StubRoutines::aarch64::_compare_long_string_LU\n-          = generate_compare_long_string_sve(LU);\n-      StubRoutines::aarch64::_compare_long_string_UL\n-          = generate_compare_long_string_sve(UL);\n-    }\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":0,"deletions":102,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-  static address _has_negatives;\n-  static address _has_negatives_long;\n@@ -81,0 +79,3 @@\n+  static address _has_negatives;\n+  static address _has_negatives_long;\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/stubRoutines_aarch64.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -835,0 +835,1 @@\n+  __ protect_return_address();\n@@ -1751,0 +1752,2 @@\n+    \/\/ This is a return address, so requires authenticating for PAC.\n+    __ authenticate_return_address(c_rarg1, rscratch1);\n@@ -1940,0 +1943,1 @@\n+  __ protect_return_address();\n@@ -1950,0 +1954,1 @@\n+  __ authenticate_return_address();\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+bool VM_Version::_rop_protection;\n@@ -200,2 +201,4 @@\n-  \/\/ Neoverse N1\n-  if (_cpu == CPU_ARM && (_model == 0xd0c || _model2 == 0xd0c)) {\n+  \/\/ Neoverse N1, N2 and V1\n+  if (_cpu == CPU_ARM && ((_model == 0xd0c || _model2 == 0xd0c)\n+                          || (_model == 0xd49 || _model2 == 0xd49)\n+                          || (_model == 0xd40 || _model2 == 0xd40))) {\n@@ -410,0 +413,33 @@\n+  if (UseBranchProtection == nullptr || strcmp(UseBranchProtection, \"none\") == 0) {\n+    _rop_protection = false;\n+  } else if (strcmp(UseBranchProtection, \"standard\") == 0) {\n+    _rop_protection = false;\n+    \/\/ Enable PAC if this code has been built with branch-protection and the CPU\/OS supports it.\n+#ifdef __ARM_FEATURE_PAC_DEFAULT\n+    if ((_features & CPU_PACA) != 0) {\n+      _rop_protection = true;\n+    }\n+#endif\n+  } else if (strcmp(UseBranchProtection, \"pac-ret\") == 0) {\n+    _rop_protection = true;\n+#ifdef __ARM_FEATURE_PAC_DEFAULT\n+    if ((_features & CPU_PACA) == 0) {\n+      warning(\"ROP-protection specified, but not supported on this CPU.\");\n+      \/\/ Disable PAC to prevent illegal instruction crashes.\n+      _rop_protection = false;\n+    }\n+#else\n+    warning(\"ROP-protection specified, but this VM was built without ROP-protection support.\");\n+#endif\n+  } else {\n+    vm_exit_during_initialization(err_msg(\"Unsupported UseBranchProtection: %s\", UseBranchProtection));\n+  }\n+\n+  \/\/ The frame pointer must be preserved for ROP protection.\n+  if (_rop_protection == true) {\n+    if (FLAG_IS_DEFAULT(PreserveFramePointer) == false && PreserveFramePointer == false ) {\n+      vm_exit_during_initialization(err_msg(\"PreserveFramePointer cannot be disabled for ROP-protection\"));\n+    }\n+    PreserveFramePointer = true;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":39,"deletions":3,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+  static bool _rop_protection;\n@@ -117,0 +118,1 @@\n+    decl(PACA,          \"paca\",          30)  \\\n@@ -120,1 +122,1 @@\n-    decl(A53MAC,        \"a53mac\",        30)\n+    decl(A53MAC,        \"a53mac\",        31)\n@@ -159,0 +161,1 @@\n+  static bool use_rop_protection() { return _rop_protection; }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/bytes_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/jniTypes_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,100 +0,0 @@\n-\/*\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/register.hpp\"\n-#include \"interp_masm_arm.hpp\"\n-#include \"register_arm.hpp\"\n-\n-REGISTER_DEFINITION(Register, noreg);\n-REGISTER_DEFINITION(FloatRegister, fnoreg);\n-\n-\n-REGISTER_DEFINITION(FloatRegister, S0);\n-REGISTER_DEFINITION(FloatRegister, S1_reg);\n-REGISTER_DEFINITION(FloatRegister, S2_reg);\n-REGISTER_DEFINITION(FloatRegister, S3_reg);\n-REGISTER_DEFINITION(FloatRegister, S4_reg);\n-REGISTER_DEFINITION(FloatRegister, S5_reg);\n-REGISTER_DEFINITION(FloatRegister, S6_reg);\n-REGISTER_DEFINITION(FloatRegister, S7);\n-REGISTER_DEFINITION(FloatRegister, S8);\n-REGISTER_DEFINITION(FloatRegister, S9);\n-REGISTER_DEFINITION(FloatRegister, S10);\n-REGISTER_DEFINITION(FloatRegister, S11);\n-REGISTER_DEFINITION(FloatRegister, S12);\n-REGISTER_DEFINITION(FloatRegister, S13);\n-REGISTER_DEFINITION(FloatRegister, S14);\n-REGISTER_DEFINITION(FloatRegister, S15);\n-REGISTER_DEFINITION(FloatRegister, S16);\n-REGISTER_DEFINITION(FloatRegister, S17);\n-REGISTER_DEFINITION(FloatRegister, S18);\n-REGISTER_DEFINITION(FloatRegister, S19);\n-REGISTER_DEFINITION(FloatRegister, S20);\n-REGISTER_DEFINITION(FloatRegister, S21);\n-REGISTER_DEFINITION(FloatRegister, S22);\n-REGISTER_DEFINITION(FloatRegister, S23);\n-REGISTER_DEFINITION(FloatRegister, S24);\n-REGISTER_DEFINITION(FloatRegister, S25);\n-REGISTER_DEFINITION(FloatRegister, S26);\n-REGISTER_DEFINITION(FloatRegister, S27);\n-REGISTER_DEFINITION(FloatRegister, S28);\n-REGISTER_DEFINITION(FloatRegister, S29);\n-REGISTER_DEFINITION(FloatRegister, S30);\n-REGISTER_DEFINITION(FloatRegister, S31);\n-REGISTER_DEFINITION(FloatRegister, Stemp);\n-REGISTER_DEFINITION(FloatRegister, D0);\n-REGISTER_DEFINITION(FloatRegister, D1);\n-REGISTER_DEFINITION(FloatRegister, D2);\n-REGISTER_DEFINITION(FloatRegister, D3);\n-REGISTER_DEFINITION(FloatRegister, D4);\n-REGISTER_DEFINITION(FloatRegister, D5);\n-REGISTER_DEFINITION(FloatRegister, D6);\n-REGISTER_DEFINITION(FloatRegister, D7);\n-REGISTER_DEFINITION(FloatRegister, D8);\n-REGISTER_DEFINITION(FloatRegister, D9);\n-REGISTER_DEFINITION(FloatRegister, D10);\n-REGISTER_DEFINITION(FloatRegister, D11);\n-REGISTER_DEFINITION(FloatRegister, D12);\n-REGISTER_DEFINITION(FloatRegister, D13);\n-REGISTER_DEFINITION(FloatRegister, D14);\n-REGISTER_DEFINITION(FloatRegister, D15);\n-REGISTER_DEFINITION(FloatRegister, D16);\n-REGISTER_DEFINITION(FloatRegister, D17);\n-REGISTER_DEFINITION(FloatRegister, D18);\n-REGISTER_DEFINITION(FloatRegister, D19);\n-REGISTER_DEFINITION(FloatRegister, D20);\n-REGISTER_DEFINITION(FloatRegister, D21);\n-REGISTER_DEFINITION(FloatRegister, D22);\n-REGISTER_DEFINITION(FloatRegister, D23);\n-REGISTER_DEFINITION(FloatRegister, D24);\n-REGISTER_DEFINITION(FloatRegister, D25);\n-REGISTER_DEFINITION(FloatRegister, D26);\n-REGISTER_DEFINITION(FloatRegister, D27);\n-REGISTER_DEFINITION(FloatRegister, D28);\n-REGISTER_DEFINITION(FloatRegister, D29);\n-REGISTER_DEFINITION(FloatRegister, D30);\n-REGISTER_DEFINITION(FloatRegister, D31);\n-\n","filename":"src\/hotspot\/cpu\/arm\/register_definitions_arm.cpp","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2016 SAP SE. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/bytes_ppc.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2013 SAP SE. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022 SAP SE. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/jniTypes_ppc.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022 SAP SE. All rights reserved.\n@@ -2735,0 +2735,1 @@\n+  beq(flag, cont);\n@@ -2736,1 +2737,2 @@\n-# ifdef ASSERT\n+  \/\/ Check for recursive locking.\n+  cmpd(flag, current_header, R16_thread);\n@@ -2738,7 +2740,6 @@\n-  \/\/ We have acquired the monitor, check some invariants.\n-  addi(\/*monitor=*\/temp, temp, -ObjectMonitor::owner_offset_in_bytes());\n-  \/\/ Invariant 1: _recursions should be 0.\n-  \/\/assert(ObjectMonitor::recursions_size_in_bytes() == 8, \"unexpected size\");\n-  asm_assert_mem8_is_zero(ObjectMonitor::recursions_offset_in_bytes(), temp,\n-                            \"monitor->_recursions should be 0\");\n-# endif\n+\n+  \/\/ Current thread already owns the lock. Just increment recursions.\n+  Register recursions = displaced_header;\n+  ld(recursions, ObjectMonitor::recursions_offset_in_bytes()-ObjectMonitor::owner_offset_in_bytes(), temp);\n+  addi(recursions, recursions, 1);\n+  std(recursions, ObjectMonitor::recursions_offset_in_bytes()-ObjectMonitor::owner_offset_in_bytes(), temp);\n@@ -2760,2 +2761,1 @@\n-  Label cont;\n-  Label object_has_monitor;\n+  Label cont, object_has_monitor, notRecursive;\n@@ -2833,3 +2833,2 @@\n-  xorr(temp, R16_thread, temp);      \/\/ Will be 0 if we are the owner.\n-  orr(temp, temp, displaced_header); \/\/ Will be 0 if there are 0 recursions.\n-  cmpdi(flag, temp, 0);\n+\n+  cmpd(flag, temp, R16_thread);\n@@ -2838,0 +2837,6 @@\n+  addic_(displaced_header, displaced_header, -1);\n+  blt(CCR0, notRecursive); \/\/ Not recursive if negative after decrement.\n+  std(displaced_header, ObjectMonitor::recursions_offset_in_bytes(), current_header);\n+  b(cont); \/\/ flag is already EQ here.\n+\n+  bind(notRecursive);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -1,37 +0,0 @@\n-\/*\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2015 SAP SE. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ Make sure the defines don't screw up the declarations later on in this file.\n-#define DONT_USE_REGISTER_DEFINES\n-\n-#include \"asm\/register.hpp\"\n-\n-REGISTER_DEFINITION(Register, noreg);\n-\n-REGISTER_DEFINITION(FloatRegister, fnoreg);\n-\n-REGISTER_DEFINITION(VectorRegister, vnoreg);\n-\n-REGISTER_DEFINITION(VectorSRegister, vsnoreg);\n","filename":"src\/hotspot\/cpu\/ppc\/register_definitions_ppc.cpp","additions":0,"deletions":37,"binary":false,"changes":37,"status":"deleted"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2012, 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022 SAP SE. All rights reserved.\n@@ -4659,2 +4659,0 @@\n-    \/\/ replace the standard masm with a special one:\n-    _masm = new MacroAssembler(code);\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2018 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/bytes_s390.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022 SAP SE. All rights reserved.\n@@ -49,4 +50,0 @@\n-\/\/ The result is the number of characters copied before the first incompatible character was found.\n-\/\/ If precise is true, the processing stops exactly at this point. Otherwise, the result may be off\n-\/\/ by a few bytes. The result always indicates the number of copied characters.\n-\/\/ When used as a character index, the returned value points to the first incompatible character.\n@@ -54,3 +51,19 @@\n-\/\/ Note: Does not behave exactly like package private StringUTF16 compress java implementation in case of failure:\n-\/\/ - Different number of characters may have been written to dead array (if precise is false).\n-\/\/ - Returns a number <cnt instead of 0. (Result gets compared with cnt.)\n+\/\/ The result indicates success or failure of the operation.\n+\/\/   General compress operation (cut off high order byte which must be all zeroes).\n+\/\/    = len - all characters have been successfully compressed.\n+\/\/    = 0   - compress failed. At least one character was found with a non-zero high order byte.\n+\/\/            This is the failure return value which exactly corresponds to the Java implementation.\n+\/\/    0 <= result < len - compress failed. That many characters were compressed successfully\n+\/\/                        before the first non-compressable character was found. This is the\n+\/\/                        current, but not fully compatible, implementation. See below.\n+\/\/   Encode to ISO or 7-bit ASCII array.\n+\/\/    = len - all characters have been encoded successfully.\n+\/\/    < len - encode failed. That many characters were encoded successfully.\n+\/\/            When used as an index into the character array, the return value addresses the\n+\/\/            first not encodeable character.\n+\/\/\n+\/\/ If precise is true, the processing stops exactly at the point where a failure is detected.\n+\/\/ More characters than indicated by the return value may have been read from the src array.\n+\/\/ Exactly the number of characters indicated by the return value have been written to dst.\n+\/\/ If precise is false, a few characters more than indicated by the return value may have been\n+\/\/ written to the dst array. In any failure case, The result value indexes the first invalid character.\n@@ -58,1 +71,1 @@\n-                                                Register tmp,    bool precise) {\n+                                                Register tmp,    bool precise, bool toASCII) {\n@@ -61,0 +74,3 @@\n+  unsigned short char_mask = 0xff00;  \/\/ all selected bits must be '0' for a char to be valid\n+  unsigned int   mask_ix_l = 0;       \/\/ leftmost one bit pos in mask\n+  unsigned int   mask_ix_r = 7;       \/\/ rightmost one bit pos in mask\n@@ -62,1 +78,7 @@\n-    BLOCK_COMMENT(\"encode_iso_array {\");\n+    if (toASCII) {\n+      BLOCK_COMMENT(\"encode_ascii_array {\");\n+      char_mask = 0xff80;\n+      mask_ix_r = 8;         \/\/ rightmost one bit pos in mask. ASCII only uses codes 0..127\n+    } else {\n+      BLOCK_COMMENT(\"encode_iso_array {\");\n+    }\n@@ -65,0 +87,1 @@\n+    assert(!toASCII, \"Can't compress strings to 7-bit ASCII\");\n@@ -75,2 +98,2 @@\n-  z_iilf(Rmask, 0xFF00FF00);\n-  z_iihf(Rmask, 0xFF00FF00);\n+  z_iilf(Rmask, (unsigned int)char_mask<<16 | (unsigned int)char_mask);\n+  z_iihf(Rmask, (unsigned int)char_mask<<16 | (unsigned int)char_mask);\n@@ -81,1 +104,1 @@\n-    \/\/   Strings with 4 and 8 characters were fond to occur very frequently.\n+    \/\/   Strings with 4 and 8 characters were found to occur very frequently.\n@@ -136,1 +159,2 @@\n-                                           \/\/ Must be multiple of 2*(vector register length in chars (8 HW = 128 bits)).\n+                                           \/\/ Must correspond to # vector registers used by implementation,\n+                                           \/\/ and must be a power of 2.\n@@ -153,1 +177,1 @@\n-    z_vgmh(Vmask, 0, 7);                   \/\/ generate 0xff00 mask for all 2-byte elements\n+    z_vgmh(Vmask, mask_ix_l, mask_ix_r);   \/\/ generate 0xff00\/0xff80 mask for all 2-byte elements\n@@ -165,1 +189,1 @@\n-      z_vceqhs(Vtmp1, Vtmp1, Vzero);       \/\/ high half of all chars must be zero for successful compress.\n+      z_vceqhs(Vtmp1, Vtmp1, Vzero);       \/\/ all bits selected by mask must be zero for successful compress.\n@@ -190,1 +214,2 @@\n-                                           \/\/ Must be multiple of 8.\n+                                           \/\/ Must correspond to # registers used by implementation,\n+                                           \/\/ and must be a power of 2.\n@@ -200,1 +225,1 @@\n-    z_sra(Rix, log_min_cnt);             \/\/ unrolled loop count\n+    z_sra(Rix, log_min_cnt);               \/\/ unrolled loop count\n@@ -247,0 +272,2 @@\n+      \/\/ Because we don't need to be precise, we just return the # of characters which have been written.\n+      \/\/ The first illegal character is in the index range [result-min_cnt\/2, result+min_cnt\/2).\n@@ -277,1 +304,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -286,1 +313,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -290,1 +317,1 @@\n-      z_tmll(Z_R0, 0xff00);\n+      z_tmll(Z_R0, char_mask);\n@@ -302,1 +329,1 @@\n-      z_srk(Rix, Rcnt, Z_R0);              \/\/ remaining # chars to compress in unrolled loop\n+      z_srk(Rix, Rcnt, Z_R0);              \/\/ remaining # chars to compress in scalar loop\n@@ -307,2 +334,2 @@\n-    z_lgfr(result, Rcnt);                  \/\/ # processed characters (if all runs ok).\n-    z_brz(ScalarDone);                     \/\/ uses CC from Rix calculation\n+    z_lgfr(result, Rcnt);                  \/\/ # processed characters (if all encodes ok).\n+    z_brz(ScalarDone);                     \/\/ anything left to do? (uses CC from Rix calculation)\n@@ -312,1 +339,1 @@\n-      z_tmll(Z_R1, 0xff00);\n+      z_tmll(Z_R1, char_mask);\n@@ -332,1 +359,5 @@\n-    BLOCK_COMMENT(\"} encode_iso_array\");\n+    if (toASCII) {\n+      BLOCK_COMMENT(\"} encode_ascii_array\");\n+    } else {\n+      BLOCK_COMMENT(\"} encode_iso_array\");\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/c2_MacroAssembler_s390.cpp","additions":57,"deletions":26,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022 SAP SE. All rights reserved.\n@@ -41,1 +42,1 @@\n-                               Register tmp,    bool precise);\n+                               Register tmp,    bool precise, bool toASCII);\n","filename":"src\/hotspot\/cpu\/s390\/c2_MacroAssembler_s390.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -120,2 +120,2 @@\n-    z_abi_160* sender_abi = (z_abi_160*) fp;\n-    intptr_t* sender_sp = (intptr_t*) sender_abi->callers_sp;\n+    z_abi_16* sender_abi = (z_abi_16*)fp;\n+    intptr_t* sender_sp = (intptr_t*) fp;\n@@ -145,1 +145,1 @@\n-        return false;\n+      return false;\n@@ -322,2 +322,2 @@\n-\n-  Method* m = *interpreter_frame_method_addr();\n+  \/\/ Need to use \"unchecked\" versions to avoid \"z_istate_magic_number\" assertion.\n+  Method* m = (Method*)(ijava_state_unchecked()->method);\n@@ -338,2 +338,1 @@\n-\n-  address  bcp    = interpreter_frame_bcp();\n+  address bcp = (address)(ijava_state_unchecked()->bcp);\n@@ -345,1 +344,1 @@\n-  ConstantPoolCache* cp = *interpreter_frame_cache_addr();\n+  ConstantPoolCache* cp = (ConstantPoolCache*)(ijava_state_unchecked()->cpoolCache);\n@@ -349,2 +348,1 @@\n-\n-  address locals =  (address) *interpreter_frame_locals_addr();\n+  address locals = (address)(ijava_state_unchecked()->locals);\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/jniTypes_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022 SAP SE. All rights reserved.\n@@ -153,1 +154,1 @@\n-  static const bool supports_encode_ascii_array = false;\n+  static const bool supports_encode_ascii_array = true;\n","filename":"src\/hotspot\/cpu\/s390\/matcher_s390.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2017 SAP SE. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-\/\/ Make sure the defines don't screw up the declarations later on in this file.\n-#define DONT_USE_REGISTER_DEFINES\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/register.hpp\"\n-#include \"register_s390.hpp\"\n-#include \"interp_masm_s390.hpp\"\n-\n-REGISTER_DEFINITION(Register, noreg);\n-\n-REGISTER_DEFINITION(FloatRegister, fnoreg);\n-\n-REGISTER_DEFINITION(VectorRegister, vnoreg);\n","filename":"src\/hotspot\/cpu\/s390\/register_definitions_s390.cpp","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -2,2 +2,2 @@\n-\/\/ Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n-\/\/ Copyright (c) 2017, 2020 SAP SE. All rights reserved.\n+\/\/ Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+\/\/ Copyright (c) 2017, 2022 SAP SE. All rights reserved.\n@@ -10233,1 +10233,1 @@\n-                       $tmp$$Register, false);\n+                       $tmp$$Register, false, false);\n@@ -10294,1 +10294,1 @@\n-  format %{ \"Encode array $src->$dst($len) -> $result\" %}\n+  format %{ \"Encode iso array $src->$dst($len) -> $result\" %}\n@@ -10297,1 +10297,15 @@\n-                       $tmp$$Register, true);\n+                       $tmp$$Register, true, false);\n+  %}\n+  ins_pipe(pipe_class_dummy);\n+%}\n+\n+\/\/ encode char[] to byte[] in ASCII\n+instruct encode_ascii_array(iRegP src, iRegP dst, iRegI result, iRegI len, iRegI tmp, flagsReg cr) %{\n+  predicate(((EncodeISOArrayNode*)n)->is_ascii());\n+  match(Set result (EncodeISOArray src (Binary dst len)));\n+  effect(TEMP_DEF result, TEMP tmp, KILL cr); \/\/ R0, R1 are killed, too.\n+  ins_cost(300);\n+  format %{ \"Encode ascii array $src->$dst($len) -> $result\" %}\n+  ins_encode %{\n+    __ string_compress($result$$Register, $src$$Register, $dst$$Register, $len$$Register,\n+                       $tmp$$Register, true, true);\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2019 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022 SAP SE. All rights reserved.\n@@ -2407,3 +2407,0 @@\n-    \/\/ Replace the standard masm with a special one:\n-    _masm = new MacroAssembler(code);\n-\n","filename":"src\/hotspot\/cpu\/s390\/stubGenerator_s390.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2476,0 +2476,10 @@\n+void Assembler::vmovddup(XMMRegister dst, Address src, int vector_len) {\n+  assert(VM_Version::supports_avx(), \"\");\n+  InstructionMark im(this);\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ VM_Version::supports_evex(), \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  attributes.set_rex_vex_w_reverted();\n+  simd_prefix(dst, xnoreg, src, VEX_SIMD_F2, VEX_OPCODE_0F, &attributes);\n+  emit_int8(0x12);\n+  emit_operand(dst, src);\n+}\n+\n@@ -4763,1 +4773,1 @@\n-  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n@@ -4768,0 +4778,9 @@\n+void Assembler::vpmovzxwq(XMMRegister dst, XMMRegister src, int vector_len) {\n+  assert(vector_len == AVX_128bit? VM_Version::supports_avx() :\n+  vector_len == AVX_256bit? VM_Version::supports_avx2() :\n+  vector_len == AVX_512bit? VM_Version::supports_evex() : 0, \" \");\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_38, &attributes);\n+  emit_int16(0x34, (0xC0 | encode));\n+}\n+\n@@ -9294,1 +9313,1 @@\n-  emit_int24(0x73, (0xC0 | encode), shift & 0xFF);\n+  emit_int24(0x72, (0xC0 | encode), shift & 0xFF);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -380,1 +380,1 @@\n-  bool is_lval() { return _is_lval; }\n+  bool is_lval() const { return _is_lval; }\n@@ -1470,0 +1470,1 @@\n+  void vmovddup(XMMRegister dst, Address src, int vector_len);\n@@ -1824,2 +1825,1 @@\n-  void vpmovzxbw( XMMRegister dst, Address src, int vector_len);\n-  void pmovzxdq(XMMRegister dst, XMMRegister src);\n+  void vpmovzxbw(XMMRegister dst, Address src, int vector_len);\n@@ -1827,1 +1827,0 @@\n-  void vpmovzxdq(XMMRegister dst, XMMRegister src, int vector_len);\n@@ -1830,0 +1829,4 @@\n+  void vpmovzxwd(XMMRegister dst, XMMRegister src, int vector_len);\n+  void vpmovzxwq(XMMRegister dst, XMMRegister src, int vector_len);\n+  void pmovzxdq(XMMRegister dst, XMMRegister src);\n+  void vpmovzxdq(XMMRegister dst, XMMRegister src, int vector_len);\n@@ -1846,3 +1849,0 @@\n-\n-  void vpmovzxwd(XMMRegister dst, XMMRegister src, int vector_len);\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/bytes_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1496,0 +1496,20 @@\n+void C2_MacroAssembler::load_vector(XMMRegister dst, Address src, int vlen_in_bytes) {\n+  switch (vlen_in_bytes) {\n+  case 4:  movdl(dst, src);   break;\n+  case 8:  movq(dst, src);    break;\n+  case 16: movdqu(dst, src);  break;\n+  case 32: vmovdqu(dst, src); break;\n+  case 64: evmovdquq(dst, src, Assembler::AVX_512bit); break;\n+  default: ShouldNotReachHere();\n+  }\n+}\n+\n+void C2_MacroAssembler::load_vector(XMMRegister dst, AddressLiteral src, int vlen_in_bytes, Register rscratch) {\n+  if (reachable(src)) {\n+    load_vector(dst, as_Address(src), vlen_in_bytes);\n+  } else {\n+    lea(rscratch, src);\n+    load_vector(dst, Address(rscratch, 0), vlen_in_bytes);\n+  }\n+}\n+\n@@ -2195,78 +2215,0 @@\n-void C2_MacroAssembler::vpcmpu(BasicType typ, XMMRegister dst, XMMRegister src1, XMMRegister src2, ComparisonPredicate comparison,\n-                            int vlen_in_bytes, XMMRegister vtmp1, XMMRegister vtmp2, Register scratch) {\n-  int vlen_enc = vector_length_encoding(vlen_in_bytes*2);\n-  switch (typ) {\n-  case T_BYTE:\n-    vpmovzxbw(vtmp1, src1, vlen_enc);\n-    vpmovzxbw(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::W, vlen_enc, scratch);\n-    vpacksswb(dst, dst, dst, vlen_enc);\n-    break;\n-  case T_SHORT:\n-    vpmovzxwd(vtmp1, src1, vlen_enc);\n-    vpmovzxwd(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::D, vlen_enc, scratch);\n-    vpackssdw(dst, dst, dst, vlen_enc);\n-    break;\n-  case T_INT:\n-    vpmovzxdq(vtmp1, src1, vlen_enc);\n-    vpmovzxdq(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::Q, vlen_enc, scratch);\n-    vpermilps(dst, dst, 8, vlen_enc);\n-    break;\n-  default:\n-    assert(false, \"Should not reach here\");\n-  }\n-  if (vlen_in_bytes == 16) {\n-    vpermpd(dst, dst, 0x8, vlen_enc);\n-  }\n-}\n-\n-void C2_MacroAssembler::vpcmpu32(BasicType typ, XMMRegister dst, XMMRegister src1, XMMRegister src2, ComparisonPredicate comparison, int vlen_in_bytes,\n-                              XMMRegister vtmp1, XMMRegister vtmp2, XMMRegister vtmp3, Register scratch) {\n-  int vlen_enc = vector_length_encoding(vlen_in_bytes);\n-  switch (typ) {\n-  case T_BYTE:\n-    vpmovzxbw(vtmp1, src1, vlen_enc);\n-    vpmovzxbw(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::W, vlen_enc, scratch);\n-    vextracti128(vtmp1, src1, 1);\n-    vextracti128(vtmp2, src2, 1);\n-    vpmovzxbw(vtmp1, vtmp1, vlen_enc);\n-    vpmovzxbw(vtmp2, vtmp2, vlen_enc);\n-    vpcmpCCW(vtmp3, vtmp1, vtmp2, comparison, Assembler::W, vlen_enc, scratch);\n-    vpacksswb(dst, dst, vtmp3, vlen_enc);\n-    vpermpd(dst, dst, 0xd8, vlen_enc);\n-    break;\n-  case T_SHORT:\n-    vpmovzxwd(vtmp1, src1, vlen_enc);\n-    vpmovzxwd(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::D, vlen_enc, scratch);\n-    vextracti128(vtmp1, src1, 1);\n-    vextracti128(vtmp2, src2, 1);\n-    vpmovzxwd(vtmp1, vtmp1, vlen_enc);\n-    vpmovzxwd(vtmp2, vtmp2, vlen_enc);\n-    vpcmpCCW(vtmp3, vtmp1, vtmp2, comparison, Assembler::D,  vlen_enc, scratch);\n-    vpackssdw(dst, dst, vtmp3, vlen_enc);\n-    vpermpd(dst, dst, 0xd8, vlen_enc);\n-    break;\n-  case T_INT:\n-    vpmovzxdq(vtmp1, src1, vlen_enc);\n-    vpmovzxdq(vtmp2, src2, vlen_enc);\n-    vpcmpCCW(dst, vtmp1, vtmp2, comparison, Assembler::Q, vlen_enc, scratch);\n-    vpshufd(dst, dst, 8, vlen_enc);\n-    vpermq(dst, dst, 8, vlen_enc);\n-    vextracti128(vtmp1, src1, 1);\n-    vextracti128(vtmp2, src2, 1);\n-    vpmovzxdq(vtmp1, vtmp1, vlen_enc);\n-    vpmovzxdq(vtmp2, vtmp2, vlen_enc);\n-    vpcmpCCW(vtmp3, vtmp1, vtmp2, comparison, Assembler::Q,  vlen_enc, scratch);\n-    vpshufd(vtmp3, vtmp3, 8, vlen_enc);\n-    vpermq(vtmp3, vtmp3, 0x80, vlen_enc);\n-    vpblendd(dst, dst, vtmp3, 0xf0, vlen_enc);\n-    break;\n-  default:\n-    assert(false, \"Should not reach here\");\n-  }\n-}\n-\n@@ -4155,0 +4097,27 @@\n+void C2_MacroAssembler::vector_unsigned_cast(XMMRegister dst, XMMRegister src, int vlen_enc,\n+                                             BasicType from_elem_bt, BasicType to_elem_bt) {\n+  switch (from_elem_bt) {\n+    case T_BYTE:\n+      switch (to_elem_bt) {\n+        case T_SHORT: vpmovzxbw(dst, src, vlen_enc); break;\n+        case T_INT:   vpmovzxbd(dst, src, vlen_enc); break;\n+        case T_LONG:  vpmovzxbq(dst, src, vlen_enc); break;\n+        default: ShouldNotReachHere();\n+      }\n+      break;\n+    case T_SHORT:\n+      switch (to_elem_bt) {\n+        case T_INT:  vpmovzxwd(dst, src, vlen_enc); break;\n+        case T_LONG: vpmovzxwq(dst, src, vlen_enc); break;\n+        default: ShouldNotReachHere();\n+      }\n+      break;\n+    case T_INT:\n+      assert(to_elem_bt == T_LONG, \"\");\n+      vpmovzxdq(dst, src, vlen_enc);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":47,"deletions":78,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -147,0 +147,2 @@\n+  void load_vector(XMMRegister dst, Address src, int vlen_in_bytes);\n+  void load_vector(XMMRegister dst, AddressLiteral src, int vlen_in_bytes, Register rscratch = rscratch1);\n@@ -149,6 +151,0 @@\n-  \/\/ vector compare\n-  void vpcmpu(BasicType typ, XMMRegister dst, XMMRegister src1, XMMRegister src2, ComparisonPredicate comparison, int vlen_in_bytes,\n-              XMMRegister vtmp1, XMMRegister vtmp2, Register scratch);\n-  void vpcmpu32(BasicType typ, XMMRegister dst, XMMRegister src1, XMMRegister src2, ComparisonPredicate comparison, int vlen_in_bytes,\n-                XMMRegister vtmp1, XMMRegister vtmp2, XMMRegister vtmp3, Register scratch);\n-\n@@ -315,0 +311,3 @@\n+  void vector_unsigned_cast(XMMRegister dst, XMMRegister src, int vlen_enc,\n+                            BasicType from_elem_bt, BasicType to_elem_bt);\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/c2_intelJccErratum_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -455,1 +455,1 @@\n-    __ kmovql(Address(rsp, _spill_offset), reg);\n+    __ kmov(Address(rsp, _spill_offset), reg);\n@@ -464,1 +464,1 @@\n-    __ kmovql(reg, Address(rsp, _spill_offset));\n+    __ kmov(reg, Address(rsp, _spill_offset));\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/zBarrierSetAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/jniTypes_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2705,0 +2705,9 @@\n+void MacroAssembler::vmovddup(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch) {\n+  if (reachable(src)) {\n+    Assembler::vmovddup(dst, as_Address(src), vector_len);\n+  } else {\n+    lea(rscratch, src);\n+    Assembler::vmovddup(dst, Address(rscratch, 0), vector_len);\n+  }\n+}\n+\n@@ -3154,0 +3163,9 @@\n+void MacroAssembler::vbroadcastsd(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch) {\n+  if (reachable(src)) {\n+    Assembler::vbroadcastsd(dst, as_Address(src), vector_len);\n+  } else {\n+    lea(rscratch, src);\n+    Assembler::vbroadcastsd(dst, Address(rscratch, 0), vector_len);\n+  }\n+}\n+\n@@ -3222,1 +3240,1 @@\n-void MacroAssembler::vpcmpCCW(XMMRegister dst, XMMRegister nds, XMMRegister src, ComparisonPredicate cond, Width width, int vector_len, Register scratch_reg) {\n+void MacroAssembler::vpcmpCCW(XMMRegister dst, XMMRegister nds, XMMRegister src, XMMRegister xtmp, ComparisonPredicate cond, Width width, int vector_len) {\n@@ -3235,1 +3253,2 @@\n-    vpxor(dst, dst, ExternalAddress(StubRoutines::x86::vector_all_bits_set()), vector_len, scratch_reg);\n+    vallones(xtmp, vector_len);\n+    vpxor(dst, xtmp, dst, vector_len);\n@@ -3239,1 +3258,2 @@\n-    vpxor(dst, dst, ExternalAddress(StubRoutines::x86::vector_all_bits_set()), vector_len, scratch_reg);\n+    vallones(xtmp, vector_len);\n+    vpxor(dst, xtmp, dst, vector_len);\n@@ -3243,1 +3263,2 @@\n-    vpxor(dst, dst, ExternalAddress(StubRoutines::x86::vector_all_bits_set()), vector_len, scratch_reg);\n+    vallones(xtmp, vector_len);\n+    vpxor(dst, xtmp, dst, vector_len);\n@@ -4633,2 +4654,7 @@\n-    push(rscratch1); \/\/ cmpptr trashes rscratch1\n-    cmpptr(r12_heapbase, ExternalAddress((address)CompressedOops::ptrs_base_addr()));\n+    const auto src2 = ExternalAddress((address)CompressedOops::ptrs_base_addr());\n+    assert(!src2.is_lval(), \"should not be lval\");\n+    const bool is_src2_reachable = reachable(src2);\n+    if (!is_src2_reachable) {\n+      push(rscratch1);  \/\/ cmpptr trashes rscratch1\n+    }\n+    cmpptr(r12_heapbase, src2);\n@@ -4638,1 +4664,3 @@\n-    pop(rscratch1);\n+    if (!is_src2_reachable) {\n+      pop(rscratch1);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":36,"deletions":8,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -1179,0 +1179,3 @@\n+  using Assembler::vmovddup;\n+  void vmovddup(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch = rscratch1);\n+\n@@ -1287,0 +1290,3 @@\n+  using Assembler::vbroadcastsd;\n+  void vbroadcastsd(XMMRegister dst, AddressLiteral src, int vector_len, Register rscratch = rscratch1);\n+\n@@ -1313,1 +1319,1 @@\n-  void vpcmpCCW(XMMRegister dst, XMMRegister nds, XMMRegister src, ComparisonPredicate cond, Width width, int vector_len, Register scratch_reg);\n+  void vpcmpCCW(XMMRegister dst, XMMRegister nds, XMMRegister src, XMMRegister xtmp, ComparisonPredicate cond, Width width, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,14 +169,1 @@\n-    int vlen_in_bytes = vlen * type2aelembytes(bt);\n-    if ((UseAVX > 2) && (VM_Version::supports_avx512vl() || vlen_in_bytes == 64))\n-      return true;\n-    else {\n-      \/\/ instruction set supports only signed comparison\n-      \/\/ so need to zero extend to higher integral type and perform comparison\n-      \/\/ cannot cast long to higher integral type\n-      \/\/ and on avx1 cannot cast 128 bit integral vectors to higher size\n-\n-      if ((bt != T_LONG)  &&\n-          ((UseAVX >= 2) || (vlen_in_bytes <= 8)))\n-        return true;\n-    }\n-    return false;\n+    return true;\n","filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/rdtsc_x86.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,143 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/register.hpp\"\n-#include \"register_x86.hpp\"\n-#include \"interp_masm_x86.hpp\"\n-\n-REGISTER_DEFINITION(Register, noreg);\n-REGISTER_DEFINITION(Register, rax);\n-REGISTER_DEFINITION(Register, rcx);\n-REGISTER_DEFINITION(Register, rdx);\n-REGISTER_DEFINITION(Register, rbx);\n-REGISTER_DEFINITION(Register, rsp);\n-REGISTER_DEFINITION(Register, rbp);\n-REGISTER_DEFINITION(Register, rsi);\n-REGISTER_DEFINITION(Register, rdi);\n-#ifdef AMD64\n-REGISTER_DEFINITION(Register, r8);\n-REGISTER_DEFINITION(Register, r9);\n-REGISTER_DEFINITION(Register, r10);\n-REGISTER_DEFINITION(Register, r11);\n-REGISTER_DEFINITION(Register, r12);\n-REGISTER_DEFINITION(Register, r13);\n-REGISTER_DEFINITION(Register, r14);\n-REGISTER_DEFINITION(Register, r15);\n-#endif \/\/ AMD64\n-\n-REGISTER_DEFINITION(FloatRegister, fnoreg);\n-\n-REGISTER_DEFINITION(XMMRegister, xnoreg);\n-REGISTER_DEFINITION(XMMRegister, xmm0 );\n-REGISTER_DEFINITION(XMMRegister, xmm1 );\n-REGISTER_DEFINITION(XMMRegister, xmm2 );\n-REGISTER_DEFINITION(XMMRegister, xmm3 );\n-REGISTER_DEFINITION(XMMRegister, xmm4 );\n-REGISTER_DEFINITION(XMMRegister, xmm5 );\n-REGISTER_DEFINITION(XMMRegister, xmm6 );\n-REGISTER_DEFINITION(XMMRegister, xmm7 );\n-#ifdef AMD64\n-REGISTER_DEFINITION(XMMRegister, xmm8);\n-REGISTER_DEFINITION(XMMRegister, xmm9);\n-REGISTER_DEFINITION(XMMRegister, xmm10);\n-REGISTER_DEFINITION(XMMRegister, xmm11);\n-REGISTER_DEFINITION(XMMRegister, xmm12);\n-REGISTER_DEFINITION(XMMRegister, xmm13);\n-REGISTER_DEFINITION(XMMRegister, xmm14);\n-REGISTER_DEFINITION(XMMRegister, xmm15);\n-REGISTER_DEFINITION(XMMRegister, xmm16);\n-REGISTER_DEFINITION(XMMRegister, xmm17);\n-REGISTER_DEFINITION(XMMRegister, xmm18);\n-REGISTER_DEFINITION(XMMRegister, xmm19);\n-REGISTER_DEFINITION(XMMRegister, xmm20);\n-REGISTER_DEFINITION(XMMRegister, xmm21);\n-REGISTER_DEFINITION(XMMRegister, xmm22);\n-REGISTER_DEFINITION(XMMRegister, xmm23);\n-REGISTER_DEFINITION(XMMRegister, xmm24);\n-REGISTER_DEFINITION(XMMRegister, xmm25);\n-REGISTER_DEFINITION(XMMRegister, xmm26);\n-REGISTER_DEFINITION(XMMRegister, xmm27);\n-REGISTER_DEFINITION(XMMRegister, xmm28);\n-REGISTER_DEFINITION(XMMRegister, xmm29);\n-REGISTER_DEFINITION(XMMRegister, xmm30);\n-REGISTER_DEFINITION(XMMRegister, xmm31);\n-\n-REGISTER_DEFINITION(Register, c_rarg0);\n-REGISTER_DEFINITION(Register, c_rarg1);\n-REGISTER_DEFINITION(Register, c_rarg2);\n-REGISTER_DEFINITION(Register, c_rarg3);\n-\n-REGISTER_DEFINITION(XMMRegister, c_farg0);\n-REGISTER_DEFINITION(XMMRegister, c_farg1);\n-REGISTER_DEFINITION(XMMRegister, c_farg2);\n-REGISTER_DEFINITION(XMMRegister, c_farg3);\n-\n-\/\/ Non windows OS's have a few more argument registers\n-#ifndef _WIN64\n-REGISTER_DEFINITION(Register, c_rarg4);\n-REGISTER_DEFINITION(Register, c_rarg5);\n-\n-REGISTER_DEFINITION(XMMRegister, c_farg4);\n-REGISTER_DEFINITION(XMMRegister, c_farg5);\n-REGISTER_DEFINITION(XMMRegister, c_farg6);\n-REGISTER_DEFINITION(XMMRegister, c_farg7);\n-#endif \/* _WIN64 *\/\n-\n-REGISTER_DEFINITION(Register, j_rarg0);\n-REGISTER_DEFINITION(Register, j_rarg1);\n-REGISTER_DEFINITION(Register, j_rarg2);\n-REGISTER_DEFINITION(Register, j_rarg3);\n-REGISTER_DEFINITION(Register, j_rarg4);\n-REGISTER_DEFINITION(Register, j_rarg5);\n-\n-REGISTER_DEFINITION(XMMRegister, j_farg0);\n-REGISTER_DEFINITION(XMMRegister, j_farg1);\n-REGISTER_DEFINITION(XMMRegister, j_farg2);\n-REGISTER_DEFINITION(XMMRegister, j_farg3);\n-REGISTER_DEFINITION(XMMRegister, j_farg4);\n-REGISTER_DEFINITION(XMMRegister, j_farg5);\n-REGISTER_DEFINITION(XMMRegister, j_farg6);\n-REGISTER_DEFINITION(XMMRegister, j_farg7);\n-\n-REGISTER_DEFINITION(Register, rscratch1);\n-REGISTER_DEFINITION(Register, rscratch2);\n-\n-REGISTER_DEFINITION(Register, r12_heapbase);\n-REGISTER_DEFINITION(Register, r15_thread);\n-#endif \/\/ AMD64\n-\n-REGISTER_DEFINITION(KRegister, knoreg);\n-REGISTER_DEFINITION(KRegister, k0);\n-REGISTER_DEFINITION(KRegister, k1);\n-REGISTER_DEFINITION(KRegister, k2);\n-REGISTER_DEFINITION(KRegister, k3);\n-REGISTER_DEFINITION(KRegister, k4);\n-REGISTER_DEFINITION(KRegister, k5);\n-REGISTER_DEFINITION(KRegister, k6);\n-REGISTER_DEFINITION(KRegister, k7);\n-\n-\/\/ JSR 292\n-REGISTER_DEFINITION(Register, rbp_mh_SP_save);\n","filename":"src\/hotspot\/cpu\/x86\/register_definitions_x86.cpp","additions":0,"deletions":143,"binary":false,"changes":143,"status":"deleted"},{"patch":"@@ -3005,1 +3005,1 @@\n-  CodeBuffer buffer(name, 1000, 512);\n+  CodeBuffer buffer(name, 1200, 512);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -716,1 +716,2 @@\n-  \/\/ Quick & dirty stack overflow checking: bang the stack & handle trap.\n+  \/\/ See more discussion in stackOverflow.hpp.\n+\n@@ -722,1 +723,1 @@\n-  \/\/ method receiever, so do the banging after locking the receiver.)\n+  \/\/ method receiver, so do the banging after locking the receiver.)\n@@ -724,3 +725,1 @@\n-  \/\/ Bang each page in the shadow zone. We can't assume it's been done for\n-  \/\/ an interpreter frame with greater than a page of locals, so each page\n-  \/\/ needs to be checked.  Only true for non-native.\n+  const int shadow_zone_size = checked_cast<int>(StackOverflow::stack_shadow_zone_size());\n@@ -728,4 +727,29 @@\n-  const int n_shadow_pages = ((int)StackOverflow::stack_shadow_zone_size()) \/ page_size;\n-  const int start_page = native_call ? n_shadow_pages : 1;\n-  for (int pages = start_page; pages <= n_shadow_pages; pages++) {\n-    __ bang_stack_with_offset(pages*page_size);\n+  const int n_shadow_pages = shadow_zone_size \/ page_size;\n+\n+  const Register thread = NOT_LP64(rsi) LP64_ONLY(r15_thread);\n+#ifndef _LP64\n+  __ push(thread);\n+  __ get_thread(thread);\n+#endif\n+\n+#ifdef ASSERT\n+  Label L_good_limit;\n+  __ cmpptr(Address(thread, JavaThread::shadow_zone_safe_limit()), (int32_t)NULL_WORD);\n+  __ jcc(Assembler::notEqual, L_good_limit);\n+  __ stop(\"shadow zone safe limit is not initialized\");\n+  __ bind(L_good_limit);\n+\n+  Label L_good_watermark;\n+  __ cmpptr(Address(thread, JavaThread::shadow_zone_growth_watermark()), (int32_t)NULL_WORD);\n+  __ jcc(Assembler::notEqual, L_good_watermark);\n+  __ stop(\"shadow zone growth watermark is not initialized\");\n+  __ bind(L_good_watermark);\n+#endif\n+\n+  Label L_done;\n+\n+  __ cmpptr(rsp, Address(thread, JavaThread::shadow_zone_growth_watermark()));\n+  __ jcc(Assembler::above, L_done);\n+\n+  for (int p = 1; p <= n_shadow_pages; p++) {\n+    __ bang_stack_with_offset(p*page_size);\n@@ -733,0 +757,12 @@\n+\n+  \/\/ Record a new watermark, unless the update is above the safe limit.\n+  \/\/ Otherwise, the next time around a check above would pass the safe limit.\n+  __ cmpptr(rsp, Address(thread, JavaThread::shadow_zone_safe_limit()));\n+  __ jccb(Assembler::belowEqual, L_done);\n+  __ movptr(Address(thread, JavaThread::shadow_zone_growth_watermark()), rsp);\n+\n+  __ bind(L_done);\n+\n+#ifndef _LP64\n+  __ pop(thread);\n+#endif\n@@ -1705,1 +1741,1 @@\n-      __ jmp(L);\n+      __ jmpb(L);\n@@ -1708,1 +1744,1 @@\n-      __ jmp(L);\n+      __ jmpb(L);\n@@ -1712,1 +1748,1 @@\n-      __ jmp(L);\n+      __ jmpb(L);\n@@ -1715,1 +1751,1 @@\n-      __ jmp(L);\n+      __ jmpb(L);\n@@ -1719,1 +1755,1 @@\n-      __ jmp(L);\n+      __ jmpb(L);\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":51,"deletions":15,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    __ jcc(Assembler::notZero, isfloatordouble);\n+    __ jccb(Assembler::notZero, isfloatordouble);\n@@ -91,1 +91,1 @@\n-    __ jmp (next);\n+    __ jmpb(next);\n@@ -95,1 +95,1 @@\n-    __ jcc(Assembler::notZero, isdouble);\n+    __ jccb(Assembler::notZero, isdouble);\n@@ -99,1 +99,1 @@\n-    __ jmp(next);\n+    __ jmpb(next);\n@@ -153,1 +153,1 @@\n-    __ jcc(Assembler::notZero, d);\n+    __ jccb(Assembler::notZero, d);\n@@ -155,1 +155,1 @@\n-    __ jmp(done);\n+    __ jmpb(done);\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86_64.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -528,1 +528,1 @@\n-      __ jcc(Assembler::notEqual, notInt);\n+      __ jccb(Assembler::notEqual, notInt);\n@@ -536,1 +536,1 @@\n-      __ jcc(Assembler::notEqual, notFloat);\n+      __ jccb(Assembler::notEqual, notFloat);\n@@ -544,1 +544,1 @@\n-      __ jcc(Assembler::notEqual, notShort);\n+      __ jccb(Assembler::notEqual, notShort);\n@@ -552,1 +552,1 @@\n-      __ jcc(Assembler::notEqual, notByte);\n+      __ jccb(Assembler::notEqual, notByte);\n@@ -560,1 +560,1 @@\n-      __ jcc(Assembler::notEqual, notChar);\n+      __ jccb(Assembler::notEqual, notChar);\n@@ -568,1 +568,1 @@\n-      __ jcc(Assembler::notEqual, notBool);\n+      __ jccb(Assembler::notEqual, notBool);\n@@ -582,1 +582,1 @@\n-      __ jcc(Assembler::notEqual, notLong);\n+      __ jccb(Assembler::notEqual, notLong);\n@@ -592,1 +592,1 @@\n-      __ jcc(Assembler::notEqual, notDouble);\n+      __ jccb(Assembler::notEqual, notDouble);\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1821,3 +1821,0 @@\n-  if (FLAG_IS_DEFAULT(PrefetchFieldsAhead)) {\n-    FLAG_SET_DEFAULT(PrefetchFieldsAhead, 1);\n-  }\n@@ -1886,3 +1883,0 @@\n-    if (PrefetchFieldsAhead > 0) {\n-      log->print_cr(\"PrefetchFieldsAhead %d\", (int) PrefetchFieldsAhead);\n-    }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,0 @@\n-               lzcnt_intel  : 1,\n@@ -156,1 +155,1 @@\n-                            : 22;\n+                            : 23;\n@@ -643,1 +642,1 @@\n-      if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt_intel != 0)\n+      if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt != 0) {\n@@ -645,2 +644,2 @@\n-      \/\/ for Intel, ecx.bits.misalignsse bit (bit 8) indicates support for prefetchw\n-      if (_cpuid_info.ext_cpuid1_ecx.bits.misalignsse != 0) {\n+      }\n+      if (_cpuid_info.ext_cpuid1_ecx.bits.prefetchw != 0) {\n@@ -658,1 +657,1 @@\n-      if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt_intel != 0)\n+      if (_cpuid_info.ext_cpuid1_ecx.bits.lzcnt != 0) {\n@@ -660,2 +659,2 @@\n-      \/\/ for ZX, ecx.bits.misalignsse bit (bit 8) indicates support for prefetchw\n-      if (_cpuid_info.ext_cpuid1_ecx.bits.misalignsse != 0) {\n+      }\n+      if (_cpuid_info.ext_cpuid1_ecx.bits.prefetchw != 0) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1460,0 +1460,3 @@\n+    case Op_VectorUCastB2X:\n+    case Op_VectorUCastS2X:\n+    case Op_VectorUCastI2X:\n@@ -1611,0 +1614,1 @@\n+#ifdef _LP64\n@@ -1614,0 +1618,4 @@\n+#else\n+      \/\/ x86_32.ad has a special match rule for SqrtD.\n+      \/\/ Together with common x86 rules, this handles all UseSSE cases.\n+#endif\n@@ -2550,9 +2558,15 @@\n-static inline jlong replicate8_imm(int con, int width) {\n-  \/\/ Load a constant of \"width\" (in bytes) and replicate it to fill 64bit.\n-  assert(width == 1 || width == 2 || width == 4, \"only byte, short or int types here\");\n-  int bit_width = width * 8;\n-  jlong val = con;\n-  val &= (((jlong) 1) << bit_width) - 1;  \/\/ mask off sign bits\n-  while(bit_width < 64) {\n-    val |= (val << bit_width);\n-    bit_width <<= 1;\n+template <class T>\n+static inline GrowableArray<jvalue>* vreplicate_imm(BasicType bt, T con, int len) {\n+  GrowableArray<jvalue>* val = new GrowableArray<jvalue>(len);\n+  jvalue ele;\n+  switch (bt) {\n+    case T_BYTE:   ele.b = con; break;\n+    case T_SHORT:  ele.s = con; break;\n+    case T_INT:    ele.i = con; break;\n+    case T_LONG:   ele.j = con; break;\n+    case T_FLOAT:  ele.f = con; break;\n+    case T_DOUBLE: ele.d = con; break;\n+    default: ShouldNotReachHere();\n+  }\n+  for (int i = 0; i < len; i++) {\n+    val->append(ele);\n@@ -2563,0 +2577,12 @@\n+static inline jlong high_bit_set(BasicType bt) {\n+  switch (bt) {\n+    case T_BYTE:  return 0x8080808080808080;\n+    case T_SHORT: return 0x8000800080008000;\n+    case T_INT:   return 0x8000000080000000;\n+    case T_LONG:  return 0x8000000000000000;\n+    default:\n+      ShouldNotReachHere();\n+      return 0;\n+  }\n+}\n+\n@@ -3810,8 +3836,1 @@\n-    switch (Matcher::vector_length_in_bytes(this)) {\n-      case  4: __ movdl    ($dst$$XMMRegister, $mem$$Address); break;\n-      case  8: __ movq     ($dst$$XMMRegister, $mem$$Address); break;\n-      case 16: __ movdqu   ($dst$$XMMRegister, $mem$$Address); break;\n-      case 32: __ vmovdqu  ($dst$$XMMRegister, $mem$$Address); break;\n-      case 64: __ evmovdqul($dst$$XMMRegister, $mem$$Address, Assembler::AVX_512bit); break;\n-      default: ShouldNotReachHere();\n-    }\n+    __ load_vector($dst$$XMMRegister, $mem$$Address, Matcher::vector_length_in_bytes(this));\n@@ -3995,16 +4014,2 @@\n-    uint vlen = Matcher::vector_length(this);\n-    InternalAddress const_addr = $constantaddress(replicate8_imm($con$$constant, 1));\n-    if (vlen == 4) {\n-      __ movdl($dst$$XMMRegister, const_addr);\n-    } else {\n-      __ movq($dst$$XMMRegister, const_addr);\n-      if (vlen >= 16) {\n-        if (VM_Version::supports_avx2()) {\n-          int vlen_enc = vector_length_encoding(this);\n-          __ vpbroadcastq($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-        } else {\n-          assert(vlen == 16, \"sanity\");\n-          __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n-        }\n-      }\n-    }\n+    InternalAddress addr = $constantaddress(T_BYTE, vreplicate_imm(T_BYTE, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n@@ -4015,17 +4020,0 @@\n-\/\/ Replicate byte scalar zero to be vector\n-instruct ReplB_zero(vec dst, immI_0 zero) %{\n-  match(Set dst (ReplicateB zero));\n-  format %{ \"replicateB $dst,$zero\" %}\n-  ins_encode %{\n-    uint vlen = Matcher::vector_length(this);\n-    if (vlen <= 16) {\n-      __ pxor($dst$$XMMRegister, $dst$$XMMRegister);\n-    } else {\n-      \/\/ Use vpxor since AVX512F does not have 512bit vxorpd (requires AVX512DQ).\n-      int vlen_enc = vector_length_encoding(this);\n-      __ vpxor($dst$$XMMRegister, $dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n-  %}\n-  ins_pipe( fpu_reg_reg );\n-%}\n-\n@@ -4077,16 +4065,2 @@\n-    uint vlen = Matcher::vector_length(this);\n-    InternalAddress const_addr = $constantaddress(replicate8_imm($con$$constant, 2));\n-    if (vlen == 2) {\n-      __ movdl($dst$$XMMRegister, const_addr);\n-    } else {\n-      __ movq($dst$$XMMRegister, const_addr);\n-      if (vlen >= 8) {\n-        if (VM_Version::supports_avx2()) {\n-          int vlen_enc = vector_length_encoding(this);\n-          __ vpbroadcastw($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-        } else {\n-          assert(vlen == 8, \"sanity\");\n-          __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n-        }\n-      }\n-    }\n+    InternalAddress addr = $constantaddress(T_SHORT, vreplicate_imm(T_SHORT, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n@@ -4094,16 +4068,1 @@\n-  ins_pipe( fpu_reg_reg );\n-%}\n-\n-instruct ReplS_zero(vec dst, immI_0 zero) %{\n-  match(Set dst (ReplicateS zero));\n-  format %{ \"replicateS $dst,$zero\" %}\n-  ins_encode %{\n-    uint vlen = Matcher::vector_length(this);\n-    if (vlen <= 8) {\n-      __ pxor($dst$$XMMRegister, $dst$$XMMRegister);\n-    } else {\n-      int vlen_enc = vector_length_encoding(this);\n-      __ vpxor($dst$$XMMRegister, $dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n-  %}\n-  ins_pipe( fpu_reg_reg );\n+  ins_pipe( pipe_slow );\n@@ -4159,13 +4118,2 @@\n-    uint vlen = Matcher::vector_length(this);\n-    InternalAddress const_addr = $constantaddress(replicate8_imm($con$$constant, 4));\n-    if (vlen <= 4) {\n-      __ movq($dst$$XMMRegister, const_addr);\n-      if (vlen == 4) {\n-        __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n-      }\n-    } else {\n-      assert(VM_Version::supports_avx2(), \"sanity\");\n-      int vlen_enc = vector_length_encoding(this);\n-      __ movq($dst$$XMMRegister, const_addr);\n-      __ vpbroadcastd($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n+    InternalAddress addr = $constantaddress(T_INT, vreplicate_imm(T_INT, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n@@ -4176,1 +4124,1 @@\n-\/\/ Replicate integer (4 byte) scalar zero to be vector\n+\/\/ Replicate scalar zero to be vector\n@@ -4178,0 +4126,2 @@\n+  match(Set dst (ReplicateB zero));\n+  match(Set dst (ReplicateS zero));\n@@ -4181,2 +4131,2 @@\n-    uint vlen = Matcher::vector_length(this);\n-    if (vlen <= 4) {\n+    uint vsize = Matcher::vector_length_in_bytes(this);\n+    if (vsize <= 16) {\n@@ -4313,11 +4263,2 @@\n-    uint vlen = Matcher::vector_length(this);\n-    InternalAddress const_addr = $constantaddress($con);\n-    if (vlen == 2) {\n-      __ movq($dst$$XMMRegister, const_addr);\n-      __ punpcklqdq($dst$$XMMRegister, $dst$$XMMRegister);\n-    } else {\n-      assert(VM_Version::supports_avx2(), \"sanity\");\n-      int vlen_enc = vector_length_encoding(this);\n-      __ movq($dst$$XMMRegister, const_addr);\n-      __ vpbroadcastq($dst$$XMMRegister, $dst$$XMMRegister, vlen_enc);\n-    }\n+    InternalAddress addr = $constantaddress(T_LONG, vreplicate_imm(T_LONG, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n@@ -4393,0 +4334,11 @@\n+\/\/ Replicate float scalar immediate to be vector by loading from const table.\n+instruct ReplF_imm(vec dst, immF con) %{\n+  match(Set dst (ReplicateF con));\n+  format %{ \"replicateF $dst,$con\" %}\n+  ins_encode %{\n+    InternalAddress addr = $constantaddress(T_FLOAT, vreplicate_imm(T_FLOAT, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -4447,0 +4399,11 @@\n+\/\/ Replicate double (8 byte) scalar immediate to be vector by loading from const table.\n+instruct ReplD_imm(vec dst, immD con) %{\n+  match(Set dst (ReplicateD con));\n+  format %{ \"replicateD $dst,$con\" %}\n+  ins_encode %{\n+    InternalAddress addr = $constantaddress(T_DOUBLE, vreplicate_imm(T_DOUBLE, $con$$constant, Matcher::vector_length(this)));\n+    __ load_vector($dst$$XMMRegister, addr, Matcher::vector_length_in_bytes(this));\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -7254,0 +7217,16 @@\n+instruct vucast(vec dst, vec src) %{\n+  match(Set dst (VectorUCastB2X src));\n+  match(Set dst (VectorUCastS2X src));\n+  match(Set dst (VectorUCastI2X src));\n+  format %{ \"vector_ucast $dst,$src\\t!\" %}\n+  ins_encode %{\n+    assert(UseAVX > 0, \"required\");\n+\n+    BasicType from_elem_bt = Matcher::vector_element_basic_type(this, $src);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vector_unsigned_cast($dst$$XMMRegister, $src$$XMMRegister, vlen_enc, from_elem_bt, to_elem_bt);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -7316,1 +7295,1 @@\n-instruct vcmp(legVec dst, legVec src1, legVec src2, immI8 cond, rRegP scratch) %{\n+instruct vcmp_direct(legVec dst, legVec src1, legVec src2, immI8 cond) %{\n@@ -7321,1 +7300,4 @@\n-            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1))) &&\n+            (n->in(2)->get_int() == BoolTest::eq ||\n+             n->in(2)->get_int() == BoolTest::lt ||\n+             n->in(2)->get_int() == BoolTest::gt)); \/\/ cond\n@@ -7323,2 +7305,1 @@\n-  effect(TEMP scratch);\n-  format %{ \"vector_compare $dst,$src1,$src2,$cond\\t! using $scratch as TEMP\" %}\n+  format %{ \"vector_compare $dst,$src1,$src2,$cond\\t!\" %}\n@@ -7329,1 +7310,1 @@\n-    __ vpcmpCCW($dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, cmp, ww, vlen_enc, $scratch$$Register);\n+    __ vpcmpCCW($dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, xnoreg, cmp, ww, vlen_enc);\n@@ -7334,1 +7315,1 @@\n-instruct vcmpu(legVec dst, legVec src1, legVec src2, immI8 cond, legVec vtmp1, legVec vtmp2, rRegP scratch) %{\n+instruct vcmp_negate(legVec dst, legVec src1, legVec src2, immI8 cond, legVec xtmp) %{\n@@ -7336,4 +7317,7 @@\n-            is_unsigned_booltest_pred(n->in(2)->get_int()) &&\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 16 && \/\/ src1\n-            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1)))); \/\/ src1\n+            !is_unsigned_booltest_pred(n->in(2)->get_int()) &&\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  4 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n+            is_integral_type(Matcher::vector_element_basic_type(n->in(1)->in(1))) &&\n+            (n->in(2)->get_int() == BoolTest::ne ||\n+             n->in(2)->get_int() == BoolTest::le ||\n+             n->in(2)->get_int() == BoolTest::ge)); \/\/ cond\n@@ -7341,2 +7325,2 @@\n-  effect(TEMP vtmp1, TEMP vtmp2, TEMP scratch);\n-  format %{ \"vector_compareu $dst,$src1,$src2,$cond\\t! using $scratch as TEMP\" %}\n+  effect(TEMP dst, TEMP xtmp);\n+  format %{ \"vector_compare $dst,$src1,$src2,$cond\\t! using $xtmp as TEMP\" %}\n@@ -7344,1 +7328,1 @@\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n+    int vlen_enc = vector_length_encoding(this, $src1);\n@@ -7346,3 +7330,2 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n-    __ vpcmpu(bt, $dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, cmp, vlen, $vtmp1$$XMMRegister,\n-              $vtmp2$$XMMRegister, $scratch$$Register);\n+    Assembler::Width ww = widthForType(Matcher::vector_element_basic_type(this, $src1));\n+    __ vpcmpCCW($dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, $xtmp$$XMMRegister, cmp, ww, vlen_enc);\n@@ -7353,1 +7336,1 @@\n-instruct vcmpu32(legVec dst, legVec src1, legVec src2, immI8 cond, legVec vtmp1, legVec vtmp2, legVec vtmp3, rRegP scratch) %{\n+instruct vcmpu(legVec dst, legVec src1, legVec src2, immI8 cond, legVec xtmp) %{\n@@ -7356,1 +7339,2 @@\n-            Matcher::vector_length_in_bytes(n->in(1)->in(1)) == 32 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) >=  4 && \/\/ src1\n+            Matcher::vector_length_in_bytes(n->in(1)->in(1)) <= 32 && \/\/ src1\n@@ -7359,2 +7343,2 @@\n-  effect(TEMP dst, TEMP vtmp1, TEMP vtmp2, TEMP vtmp3, TEMP scratch);\n-  format %{ \"vector_compareu $dst,$src1,$src2,$cond\\t! using $scratch as TEMP\" %}\n+  effect(TEMP dst, TEMP xtmp);\n+  format %{ \"vector_compareu $dst,$src1,$src2,$cond\\t! using $xtmp as TEMP\" %}\n@@ -7362,1 +7346,2 @@\n-    int vlen = Matcher::vector_length_in_bytes(this, $src1);\n+    InternalAddress flip_bit = $constantaddress(high_bit_set(Matcher::vector_element_basic_type(this, $src1)));\n+    int vlen_enc = vector_length_encoding(this, $src1);\n@@ -7364,3 +7349,10 @@\n-    BasicType bt = Matcher::vector_element_basic_type(this, $src1);\n-    __ vpcmpu32(bt, $dst$$XMMRegister, $src1$$XMMRegister, $src2$$XMMRegister, cmp, vlen, $vtmp1$$XMMRegister,\n-                $vtmp2$$XMMRegister, $vtmp3$$XMMRegister, $scratch$$Register);\n+    Assembler::Width ww = widthForType(Matcher::vector_element_basic_type(this, $src1));\n+\n+    if (vlen_enc == Assembler::AVX_128bit) {\n+      __ vmovddup($xtmp$$XMMRegister, flip_bit, vlen_enc, noreg);\n+    } else {\n+      __ vbroadcastsd($xtmp$$XMMRegister, flip_bit, vlen_enc, noreg);\n+    }\n+    __ vpxor($dst$$XMMRegister, $xtmp$$XMMRegister, $src1$$XMMRegister, vlen_enc);\n+    __ vpxor($xtmp$$XMMRegister, $xtmp$$XMMRegister, $src2$$XMMRegister, vlen_enc);\n+    __ vpcmpCCW($dst$$XMMRegister, $dst$$XMMRegister, $xtmp$$XMMRegister, $xtmp$$XMMRegister, cmp, ww, vlen_enc);\n@@ -7371,1 +7363,1 @@\n-instruct vcmpu64(vec dst, vec src1, vec src2, immI8 cond, rRegP scratch, kReg ktmp) %{\n+instruct vcmp64(vec dst, vec src1, vec src2, immI8 cond, rRegP scratch, kReg ktmp) %{\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":126,"deletions":134,"binary":false,"changes":260,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/zero\/bytes_zero.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/cpu\/zero\/jniTypes_zero.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-#include \"services\/dtraceAttacher.hpp\"\n","filename":"src\/hotspot\/os\/aix\/attachListener_aix.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3,0 +4,1 @@\n+ * Copyright (c) 2022, IBM Corp.\n@@ -33,0 +35,3 @@\n+typedef int (*fun_perfstat_cpu_t) (perfstat_id_t *name, PERFSTAT_CPU_T_LATEST* userbuff,\n+                                   int sizeof_userbuff, int desired_number);\n+\n@@ -39,0 +44,7 @@\n+typedef int (*fun_perfstat_netinterface_t) (perfstat_id_t *name, perfstat_netinterface_t* userbuff,\n+                                            int sizeof_userbuff, int desired_number);\n+\n+typedef int (*fun_perfstat_process_t) (perfstat_id_t *name,\n+                                       PERFSTAT_PROCESS_T_LATEST* userbuff, int sizeof_userbuff,\n+                                       int desired_number);\n+\n@@ -51,2 +63,4 @@\n-static fun_perfstat_cpu_total_t     g_fun_perfstat_cpu_total = NULL;\n-static fun_perfstat_memory_total_t  g_fun_perfstat_memory_total = NULL;\n+static fun_perfstat_cpu_total_t       g_fun_perfstat_cpu_total       = NULL;\n+static fun_perfstat_cpu_t             g_fun_perfstat_cpu             = NULL;\n+static fun_perfstat_memory_total_t    g_fun_perfstat_memory_total    = NULL;\n+static fun_perfstat_netinterface_t    g_fun_perfstat_netinterface    = NULL;\n@@ -54,3 +68,4 @@\n-static fun_perfstat_wpar_total_t    g_fun_perfstat_wpar_total = NULL;\n-static fun_perfstat_reset_t         g_fun_perfstat_reset = NULL;\n-static fun_wpar_getcid_t            g_fun_wpar_getcid = NULL;\n+static fun_perfstat_process_t         g_fun_perfstat_process         = NULL;\n+static fun_perfstat_wpar_total_t      g_fun_perfstat_wpar_total      = NULL;\n+static fun_perfstat_reset_t           g_fun_perfstat_reset           = NULL;\n+static fun_wpar_getcid_t              g_fun_wpar_getcid              = NULL;\n@@ -87,0 +102,1 @@\n+  RESOLVE_FUN(perfstat_cpu);\n@@ -88,0 +104,2 @@\n+  RESOLVE_FUN(perfstat_netinterface);\n+  RESOLVE_FUN(perfstat_process);\n@@ -111,0 +129,16 @@\n+int libperfstat::perfstat_cpu_total(perfstat_id_t *name, PERFSTAT_CPU_TOTAL_T_LATEST* userbuff,\n+                                    int sizeof_userbuff, int desired_number) {\n+  if (g_fun_perfstat_cpu_total == NULL) {\n+    return -1;\n+  }\n+  return g_fun_perfstat_cpu_total(name, userbuff, sizeof_userbuff, desired_number);\n+}\n+\n+int libperfstat::perfstat_cpu(perfstat_id_t *name, PERFSTAT_CPU_T_LATEST* userbuff,\n+                              int sizeof_userbuff, int desired_number) {\n+  if (g_fun_perfstat_cpu == NULL) {\n+    return -1;\n+  }\n+  return g_fun_perfstat_cpu(name, userbuff, sizeof_userbuff, desired_number);\n+}\n+\n@@ -120,3 +154,4 @@\n-int libperfstat::perfstat_cpu_total(perfstat_id_t *name, PERFSTAT_CPU_TOTAL_T_LATEST* userbuff,\n-                                    int sizeof_userbuff, int desired_number) {\n-  if (g_fun_perfstat_cpu_total == NULL) {\n+int libperfstat::perfstat_netinterface(perfstat_id_t *name,\n+                                       perfstat_netinterface_t* userbuff,\n+                                       int sizeof_userbuff, int desired_number) {\n+  if (g_fun_perfstat_netinterface == NULL) {\n@@ -125,1 +160,1 @@\n-  return g_fun_perfstat_cpu_total(name, userbuff, sizeof_userbuff, desired_number);\n+  return g_fun_perfstat_netinterface(name, userbuff, sizeof_userbuff, desired_number);\n@@ -136,0 +171,8 @@\n+int libperfstat::perfstat_process(perfstat_id_t *name, perfstat_process_t* userbuff,\n+                                  int sizeof_userbuff, int desired_number) {\n+  if (g_fun_perfstat_process == NULL) {\n+    return -1;\n+  }\n+  return g_fun_perfstat_process(name, userbuff, sizeof_userbuff, desired_number);\n+}\n+\n","filename":"src\/hotspot\/os\/aix\/libperfstat_aix.cpp","additions":52,"deletions":9,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3,0 +4,1 @@\n+ * Copyright (c) 2022, IBM Corp.\n@@ -50,1 +52,3 @@\n-#define IDENTIFIER_LENGTH 64    \/* length of strings included in the structures *\/\n+#define IDENTIFIER_LENGTH  64    \/* length of strings included in the structures *\/\n+#define FIRST_CPU          \"\"    \/* pseudo-name for fist CPU *\/\n+#define FIRST_NETINTERFACE \"\"    \/* pseudo-name for first NETINTERFACE *\/\n@@ -442,0 +446,96 @@\n+typedef struct { \/* component perfstat_cpu_t from AIX 7.2 documentation *\/\n+  char name [IDENTIFIER_LENGTH];            \/* Logical processor name (processor0, processor1,.). *\/\n+  ulong_t state;                            \/* Specifies whether the CPU is offline or online.\n+                                             * (NOTE: The type of 'state' is not specified in the documentation, but\n+                                             * ulong_t is the correct length) *\/\n+  u_longlong_t user;                        \/* Raw number of clock ticks spent in user mode. *\/\n+  u_longlong_t sys;                         \/* Raw number of clock ticks spent in system mode. *\/\n+  u_longlong_t idle;                        \/* Raw number of clock ticks spent idle. *\/\n+  u_longlong_t wait;                        \/* Raw number of clock ticks spent waiting for I\/O. *\/\n+  u_longlong_t pswitch;                     \/* Number of context switches (changes of currently running process). *\/\n+  u_longlong_t syscall;                     \/* Number of system calls executed. *\/\n+  u_longlong_t sysread;                     \/* Number of read system calls executed. *\/\n+  u_longlong_t syswrite;                    \/* Number of write system calls executed. *\/\n+  u_longlong_t sysfork;                     \/* Number of fork system call executed. *\/\n+  u_longlong_t sysexec;                     \/* Number of exec system call executed. *\/\n+  u_longlong_t readch;                      \/* Number of characters transferred with read system call. *\/\n+  u_longlong_t writech;                     \/* Number of characters transferred with write system call. *\/\n+  u_longlong_t bread;                       \/* Number of block reads. *\/\n+  u_longlong_t bwrite;                      \/* Number of block writes. *\/\n+  u_longlong_t lread;                       \/* Number of logical read requests. *\/\n+  u_longlong_t lwrite;                      \/* Number of logical write requests. *\/\n+  u_longlong_t phread;                      \/* Number of physical reads (reads on raw device). *\/\n+  u_longlong_t phwrite;                     \/* Number of physical writes (writes on raw device). *\/\n+  u_longlong_t iget;                        \/* Number of inode lookups. *\/\n+  u_longlong_t namei;                       \/* Number of vnode lookup from a path name. *\/\n+  u_longlong_t dirblk;                      \/* Number of 512-byte blocks reads by the directory search routine to locate an entry for a file. *\/\n+  u_longlong_t msg;                         \/* Number of interprocess communication (IPC) message operations. *\/\n+  u_longlong_t sema;                        \/* Number of IPC semaphore operations. *\/\n+  u_longlong_t minfaults;                   \/* Number of page faults with no I\/O. *\/\n+  u_longlong_t majfaults;                   \/* Number of page faults with disk I\/O. *\/\n+  u_longlong_t puser;                       \/* Raw number of physical processor ticks in user mode. *\/\n+  u_longlong_t psys;                        \/* Raw number of physical processor ticks in system mode. *\/\n+  u_longlong_t pidle;                       \/* Raw number of physical processor ticks idle. *\/\n+  u_longlong_t pwait;                       \/* Raw number of physical processor ticks waiting for I\/O. *\/\n+  u_longlong_t redisp_sd0;                  \/* Number of thread redispatches within the scheduler affinity domain 0. *\/\n+  u_longlong_t redisp_sd1;                  \/* Number of thread redispatches within the scheduler affinity domain 1. *\/\n+  u_longlong_t redisp_sd2;                  \/* Number of thread redispatches within the scheduler affinity domain 2. *\/\n+  u_longlong_t redisp_sd3;                  \/* Number of thread redispatches within the scheduler affinity domain 3. *\/\n+  u_longlong_t redisp_sd4;                  \/* Number of thread redispatches within the scheduler affinity domain 4. *\/\n+  u_longlong_t redisp_sd5;                  \/* Number of thread redispatches within the scheduler affinity domain 5. *\/\n+  u_longlong_t migration_push;              \/* Number of thread migrations from the local runque to another queue due to starvation load balancing. *\/\n+  u_longlong_t migration_S3grq;             \/* Number of thread migrations from the global runque to the local runque resulting in a move across scheduling domain 3. *\/\n+  u_longlong_t migration_S3pull;            \/* Number of thread migrations from another processor's runque resulting in a move across scheduling domain 3. *\/\n+  u_longlong_t invol_cswitch;               \/* Number of involuntary thread context switches. *\/\n+  u_longlong_t vol_cswitch;                 \/* Number of voluntary thread context switches. *\/\n+  u_longlong_t runque;                      \/* Number of threads on the runque. *\/\n+  u_longlong_t bound;                       \/* Number of bound threads. *\/\n+  u_longlong_t decrintrs;                   \/* Number of decrementer interrupts. *\/\n+  u_longlong_t mpcrintrs;                   \/* Number of received interrupts for MPC. *\/\n+  u_longlong_t mpcsintrs;                   \/* Number of sent interrupts for MPC. *\/\n+  u_longlong_t devintrs;                    \/* Number of device interrupts. *\/\n+  u_longlong_t softintrs;                   \/* Number of offlevel handlers called. *\/\n+  u_longlong_t phantintrs;                  \/* Number of phantom interrupts. *\/\n+  u_longlong_t idle_donated_purr;           \/* Number of idle cycles donated by a dedicated partition enabled for donation. *\/\n+  u_longlong_t idle_donated_spurr;          \/* Number of idle spurr cycles donated by a dedicated partition enabled for donation. *\/\n+  u_longlong_t busy_donated_purr;           \/* Number of busy cycles donated by a dedicated partition enabled for donation. *\/\n+  u_longlong_t busy_donated_spurr;          \/* Number of busy spurr cycles donated by a dedicated partition enabled for donation. *\/\n+  u_longlong_t idle_stolen_purr;            \/* Number of idle cycles stolen by the hypervisor from a dedicated partition. *\/\n+  u_longlong_t idle_stolen_spurr;           \/* Number of idle spurr cycles stolen by the hypervisor from a dedicated partition. *\/\n+  u_longlong_t busy_stolen_purr;            \/* Number of busy cycles stolen by the hypervisor from a dedicated partition. *\/\n+  u_longlong_t busy_stolen_spurr;           \/* Number of busy spurr cycles stolen by the hypervisor from a dedicated partition.*\/\n+  u_longlong_t shcpus_in_sys;               \/* Number of physical processors allocated for shared processor use, across all shared processors pools. *\/\n+  u_longlong_t entitled_pool_capacity;      \/* Entitled processor capacity of partition’s pool. *\/\n+  u_longlong_t pool_max_time;               \/* Summation of maximum time that can be consumed by the pool (nanoseconds). *\/\n+  u_longlong_t pool_busy_time;              \/* Summation of busy (nonidle) time accumulated across all partitions in the pool (nanoseconds). *\/\n+  u_longlong_t pool_scaled_busy_time;       \/* Scaled summation of busy (nonidle) time accumulated across all partitions in the pool (nanoseconds). *\/\n+  u_longlong_t shcpu_tot_time;              \/* Summation of total time across all physical processors allocated for shared processor use (nanoseconds). *\/\n+  u_longlong_t shcpu_busy_time;             \/* Summation of busy (nonidle) time accumulated across all shared processor partitions (nanoseconds). *\/\n+  u_longlong_t shcpu_scaled_busy_time;      \/* Scaled summation of busy time accumulated across all shared processor partitions (nanoseconds). *\/\n+  int ams_pool_id;                          \/* AMS pool ID of the pool the LPAR belongs to. *\/\n+  int var_mem_weight;                       \/* Variable memory capacity weight. *\/\n+  u_longlong_t iome;                        \/* I\/O memory entitlement of the partition in bytes. *\/\n+  u_longlong_t pmem;                        \/* Physical memory currently backing the partition's logical memory in bytes. *\/\n+  u_longlong_t hpi;                         \/* Number of hypervisor page-ins. *\/\n+  u_longlong_t hpit;                        \/* Time spent in hypervisor page-ins (in nanoseconds). *\/\n+  u_longlong_t hypv_pagesize;               \/* Hypervisor page size in KB. *\/\n+  uint online_lcpus;                        \/* Number of online logical processors. *\/\n+  uint smt_thrds;                           \/* Number of SMT threads. *\/\n+} perfstat_cpu_t;\n+\n+typedef struct {\n+  char name[IDENTIFIER_LENGTH];             \/* Name of the interface. *\/\n+  char description[IDENTIFIER_LENGTH];      \/* Interface description (from ODM, similar to lscfg output). *\/\n+  uchar type;                               \/* Ethernet, token ring, and so on. Interpretation can be done using the \/usr\/include\/net\/if_types.h file. *\/\n+  u_longlong_t mtu;                         \/* Network frame size. *\/\n+  u_longlong_t ipacets;                     \/* Number of packets received on interface. *\/\n+  u_longlong_t ibytes;                      \/* Number of bytes received on interface. *\/\n+  u_longlong_t ierrors;                     \/* Number of input errors on interface. *\/\n+  u_longlong_t opackets;                    \/* Number of packets sent on interface. *\/\n+  u_longlong_t obytes;                      \/* Number of bytes sent on interface. *\/\n+  u_longlong_t oerrors;                     \/* Number of output errors on interface. *\/\n+  u_longlong_t collisions;                  \/* Number of collisions on csma interface. *\/\n+  u_longlong_t bitrate;                     \/* Adapter rating in bit per second. *\/\n+  u_longlong_t if_iqdrops;                  \/* Dropped on input, this interface. *\/\n+  u_longlong_t if_arpdrops;                 \/* Dropped because no arp response. *\/\n+} perfstat_netinterface_t;\n@@ -800,0 +900,32 @@\n+typedef struct {\n+        u_longlong_t version;                 \/* Version number of the data structure. *\/\n+        u_longlong_t pid;                     \/* Process ID. *\/\n+        char proc_name[64];                   \/* Name of the process. *\/\n+        int proc_priority;                    \/* Process priority. *\/\n+        u_longlong_t num_threads;             \/* Thread count. *\/\n+        u_longlong_t proc_uid;                \/* Owner information. *\/\n+        u_longlong_t proc_classid;            \/* WLM class name. *\/\n+        u_longlong_t proc_size;               \/* Virtual size of the process (exclusive usage, leaving all shared library text & shared file pages, shared memory, and memory mapped). *\/\n+        u_longlong_t proc_real_mem_data;      \/* Real memory used for data in KB. *\/\n+        u_longlong_t proc_real_mem_text;      \/* Real memory used for text in KB. *\/\n+        u_longlong_t proc_virt_mem_data;      \/* Virtual memory used for data in KB. *\/\n+        u_longlong_t proc_virt_mem_text;      \/* Virtual memory used for text in KB. *\/\n+        u_longlong_t shared_lib_data_size;    \/* Data size from shared library in KB. *\/\n+        u_longlong_t heap_size;               \/* Heap size in KB. *\/\n+        u_longlong_t real_inuse;              \/* The Real memory (in KB) in use by the process including all kind of segments (excluding system segments). This includes text, data, shared library text, shared library data, file pages, shared memory, and memory mapped. *\/\n+        u_longlong_t virt_inuse;              \/* The virtual memory (in KB) in use by the process including all kind of segments (excluding system segments). This includes text, data, shared library text, shared library data, file pages, shared memory, and memory mapped. *\/\n+        u_longlong_t pinned;                  \/* Pinned memory (in KB) for this process inclusive of all segments. *\/\n+        u_longlong_t pgsp_inuse;              \/* Paging space used (in KB) inclusive of all segments. *\/\n+        u_longlong_t filepages;               \/* File pages used (in KB) including shared pages. *\/\n+        u_longlong_t real_inuse_map;          \/* Real memory used (in KB) for shared memory and memory mapped regions *\/\n+        u_longlong_t virt_inuse_map;          \/* Virtual memory used (in KB) for shared memory and memory mapped regions. *\/\n+        u_longlong_t pinned_inuse_map;        \/* Pinned memory used (in KB) for shared memory and memory mapped regions. *\/\n+        double ucpu_time;                     \/* User mode CPU time is in percentage or milliseconds, which is based on, whether it is filled by perfstat_process_util or perfstat_process respectively. *\/\n+        double scpu_time;                     \/* System mode CPU time is in percentage or milliseconds, which is based on whether it is filled by perfstat_process_util or perfstat_process respectively. *\/\n+        u_longlong_t last_timebase;           \/* Timebase counter. *\/\n+        u_longlong_t inBytes;                 \/* Bytes written to disk. *\/\n+        u_longlong_t outBytes;                \/* Bytes read from disk. *\/\n+        u_longlong_t inOps;                   \/* In operations from disk. *\/\n+        u_longlong_t outOps;                  \/* Out operations from disk *\/\n+} perfstat_process_t;\n+\n@@ -857,3 +989,8 @@\n-#define PERFSTAT_PARTITON_TOTAL_T_LATEST perfstat_partition_total_t_71_1\/* latest perfstat_partition_total_t structure *\/\n-#define PERFSTAT_CPU_TOTAL_T_LATEST perfstat_cpu_total_t_72             \/* latest perfstat_cpu_total_t structure *\/\n-#define PERFSTAT_WPAR_TOTAL_T_LATEST perfstat_wpar_total_t_71           \/* latest perfstat_wpar_total_t structure *\/\n+#define PERFSTAT_PARTITON_TOTAL_T_LATEST perfstat_partition_total_t_71_1 \/* latest perfstat_partition_total_t structure *\/\n+#define PERFSTAT_PROCESS_T_LATEST perfstat_process_t                     \/* latest perfstat_process_t structure *\/\n+#define PERFSTAT_CPU_TOTAL_T_LATEST perfstat_cpu_total_t_72              \/* latest perfstat_cpu_total_t structure *\/\n+#define PERFSTAT_CPU_T_LATEST perfstat_cpu_t                             \/* latest perfstat_cpu_t structure *\/\n+#define PERFSTAT_NETINTERFACE_T_LATEST perfstat_netinterface_t           \/* latest perfstat_netinterface_t structure *\/\n+#define PERFSTAT_WPAR_TOTAL_T_LATEST perfstat_wpar_total_t_71            \/* latest perfstat_wpar_total_t structure *\/\n+\n+typedef PERFSTAT_CPU_TOTAL_T_LATEST perfstat_cpu_total_t;\n@@ -889,0 +1026,8 @@\n+  static int perfstat_cpu(perfstat_id_t *name, PERFSTAT_CPU_T_LATEST* userbuff,\n+                          int sizeof_userbuff, int desired_number);\n+\n+  static int perfstat_process(perfstat_id_t *name, PERFSTAT_PROCESS_T_LATEST* userbuff,\n+                              int sizeof_userbuff, int desired_number);\n+\n+  static int perfstat_netinterface(perfstat_id_t *name, PERFSTAT_NETINTERFACE_T_LATEST* userbuff,\n+                                   int sizeof_userbuff, int desired_number);\n","filename":"src\/hotspot\/os\/aix\/libperfstat_aix.hpp","additions":149,"deletions":4,"binary":false,"changes":153,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -4,0 +4,1 @@\n+ * Copyright (c) 2022, IBM Corp.\n@@ -113,7 +114,1 @@\n-struct entry_t {\n-  entry_t* next;\n-  loaded_module_t info;\n-};\n-\n-static void print_entry(const entry_t* e, outputStream* os) {\n-  const loaded_module_t* const lm = &(e->info);\n+static void print_entry(const loaded_module_t* lm, outputStream* os) {\n@@ -132,1 +127,1 @@\n-static entry_t* g_first = NULL;\n+static loaded_module_t* g_first = NULL;\n@@ -134,5 +129,5 @@\n-static entry_t* find_entry_for_text_address(const void* p) {\n-  for (entry_t* e = g_first; e; e = e->next) {\n-    if ((uintptr_t)p >= (uintptr_t)e->info.text &&\n-        (uintptr_t)p < ((uintptr_t)e->info.text + e->info.text_len)) {\n-      return e;\n+static loaded_module_t* find_entry_for_text_address(const void* p) {\n+  for (loaded_module_t* lm = g_first; lm; lm = lm->next) {\n+    if ((uintptr_t)p >= (uintptr_t)lm->text &&\n+        (uintptr_t)p < ((uintptr_t)lm->text + lm->text_len)) {\n+      return lm;\n@@ -144,5 +139,5 @@\n-static entry_t* find_entry_for_data_address(const void* p) {\n-  for (entry_t* e = g_first; e; e = e->next) {\n-    if ((uintptr_t)p >= (uintptr_t)e->info.data &&\n-        (uintptr_t)p < ((uintptr_t)e->info.data + e->info.data_len)) {\n-      return e;\n+static loaded_module_t* find_entry_for_data_address(const void* p) {\n+  for (loaded_module_t* lm = g_first; lm; lm = lm->next) {\n+    if ((uintptr_t)p >= (uintptr_t)lm->data &&\n+        (uintptr_t)p < ((uintptr_t)lm->data + lm->data_len)) {\n+      return lm;\n@@ -155,6 +150,6 @@\n-static void add_entry_to_list(entry_t* e, entry_t** start) {\n-  entry_t* last = NULL;\n-  entry_t* e2 = *start;\n-  while (e2 && e2->info.text < e->info.text) {\n-    last = e2;\n-    e2 = e2->next;\n+static void add_entry_to_list(loaded_module_t* lm, loaded_module_t** start) {\n+  loaded_module_t* last = NULL;\n+  loaded_module_t* lm2 = *start;\n+  while (lm2 && lm2->text < lm->text) {\n+    last = lm2;\n+    lm2 = lm2->next;\n@@ -163,1 +158,1 @@\n-    last->next = e;\n+    last->next = lm;\n@@ -165,1 +160,1 @@\n-    *start = e;\n+    *start = lm;\n@@ -167,1 +162,1 @@\n-  e->next = e2;\n+  lm->next = lm2;\n@@ -170,6 +165,6 @@\n-static void free_entry_list(entry_t** start) {\n-  entry_t* e = *start;\n-  while (e) {\n-    entry_t* const e2 = e->next;\n-    ::free(e);\n-    e = e2;\n+static void free_entry_list(loaded_module_t** start) {\n+  loaded_module_t* lm = *start;\n+  while (lm) {\n+    loaded_module_t* const lm2 = lm->next;\n+    ::free(lm);\n+    lm = lm2;\n@@ -189,1 +184,1 @@\n-  entry_t* new_list = NULL;\n+  loaded_module_t* new_list = NULL;\n@@ -217,2 +212,2 @@\n-    entry_t* e = (entry_t*) ::malloc(sizeof(entry_t));\n-    if (!e) {\n+    loaded_module_t* lm = (loaded_module_t*) ::malloc(sizeof(loaded_module_t));\n+    if (!lm) {\n@@ -223,1 +218,1 @@\n-    memset(e, 0, sizeof(entry_t));\n+    memset(lm, 0, sizeof(loaded_module_t));\n@@ -225,4 +220,4 @@\n-    e->info.text = ldi->ldinfo_textorg;\n-    e->info.text_len = ldi->ldinfo_textsize;\n-    e->info.data = ldi->ldinfo_dataorg;\n-    e->info.data_len = ldi->ldinfo_datasize;\n+    lm->text     = ldi->ldinfo_textorg;\n+    lm->text_len = ldi->ldinfo_textsize;\n+    lm->data     = ldi->ldinfo_dataorg;\n+    lm->data_len = ldi->ldinfo_datasize;\n@@ -230,2 +225,2 @@\n-    e->info.path = g_stringlist.add(ldi->ldinfo_filename);\n-    if (!e->info.path) {\n+    lm->path = g_stringlist.add(ldi->ldinfo_filename);\n+    if (!lm->path) {\n@@ -238,1 +233,1 @@\n-      const char* p = strrchr(e->info.path, '\/');\n+      const char* p = strrchr(lm->path, '\/');\n@@ -241,1 +236,1 @@\n-        e->info.shortname = p;\n+        lm->shortname = p;\n@@ -243,1 +238,1 @@\n-        e->info.shortname = e->info.path;\n+        lm->shortname = lm->path;\n@@ -251,2 +246,2 @@\n-      e->info.member = g_stringlist.add(p_mbr_name);\n-      if (!e->info.member) {\n+      lm->member = g_stringlist.add(p_mbr_name);\n+      if (!lm->member) {\n@@ -257,1 +252,1 @@\n-      e->info.member = NULL;\n+      lm->member = NULL;\n@@ -260,1 +255,1 @@\n-    if (strcmp(e->info.shortname, \"libjvm.so\") == 0) {\n+    if (strcmp(lm->shortname, \"libjvm.so\") == 0) {\n@@ -264,1 +259,1 @@\n-      e->info.is_in_vm = true;\n+      lm->is_in_vm = true;\n@@ -268,5 +263,5 @@\n-      e->info.text, e->info.text_len,\n-      e->info.data, e->info.data_len,\n-      e->info.path, e->info.shortname,\n-      (e->info.member ? e->info.member : \"NULL\"),\n-      e->info.is_in_vm\n+      lm->text, lm->text_len,\n+      lm->data, lm->data_len,\n+      lm->path, lm->shortname,\n+      (lm->member ? lm->member : \"NULL\"),\n+      lm->is_in_vm\n@@ -276,1 +271,1 @@\n-    add_entry_to_list(e, &new_list);\n+    add_entry_to_list(lm, &new_list);\n@@ -307,0 +302,17 @@\n+\/\/ Callback for loaded module information (from os.hpp)\n+\/\/ Input parameters:\n+\/\/    char*     module_file_name,\n+\/\/    address   module_base_addr,\n+\/\/    address   module_top_addr,\n+\/\/    void*     param\n+static bool for_each_internal(os::LoadedModulesCallbackFunc cb, void* param) {\n+\n+  for (const loaded_module_t* lm = g_first; lm; lm = lm->next) {\n+    (*cb)(lm->shortname,\n+          (address) lm->text,\n+          (address) lm->text + lm->text_len,\n+          param);\n+  }\n+\n+  return true;\n+}\n@@ -325,2 +337,2 @@\n-  for (entry_t* e = g_first; e; e = e->next) {\n-    print_entry(e, os);\n+  for (loaded_module_t* lm = g_first; lm; lm = lm->next) {\n+    print_entry(lm, os);\n@@ -337,6 +349,4 @@\n-  const entry_t* const e = find_entry_for_text_address(p);\n-  if (e) {\n-    if (info) {\n-      *info = e->info;\n-    }\n-    return true;\n+\n+  const loaded_module_t* const lm = find_entry_for_text_address(p);\n+  if (!lm) {\n+    return false;\n@@ -344,1 +354,6 @@\n-  return false;\n+\n+  if (info) {\n+    memcpy(info, lm, sizeof(loaded_module_t));\n+    info->next = nullptr;\n+  }\n+  return true;\n@@ -356,4 +371,21 @@\n-  const entry_t* const e = find_entry_for_data_address(p);\n-  if (e) {\n-    if (info) {\n-      *info = e->info;\n+\n+  const loaded_module_t* const lm = find_entry_for_data_address(p);\n+  if (!lm) {\n+    return false;\n+  }\n+\n+  if (info) {\n+    memcpy(info, lm, sizeof(loaded_module_t));\n+    info->next = nullptr;\n+  }\n+  return true;\n+}\n+\n+bool LoadedLibraries::for_each(os::LoadedModulesCallbackFunc cb, void* param) {\n+  MiscUtils::AutoCritSect lck(&g_cs);\n+\n+  if (!g_first) {\n+    if (!reload_table()) {\n+      \/\/ If the table is not loaded and cannot be initialized,\n+      \/\/ then we must quit.\n+      return false;\n@@ -361,1 +393,0 @@\n-    return true;\n@@ -363,1 +394,2 @@\n-  return false;\n+\n+  return for_each_internal(cb, param);\n","filename":"src\/hotspot\/os\/aix\/loadlib_aix.cpp","additions":105,"deletions":73,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +36,3 @@\n+#include \"misc_aix.hpp\"\n+#include \"runtime\/os.hpp\"\n+\n@@ -69,0 +73,3 @@\n+  \/\/ Next item in the list, or NULL if no such item exits\n+  loaded_module_t* next;\n+\n@@ -102,0 +109,4 @@\n+    \/\/ Apply the callback to each loaded_module_t in the list\n+    \/\/ Return false if module table is empty and cannot be loaded.\n+    static bool for_each(os::LoadedModulesCallbackFunc cb, void* param);\n+\n@@ -104,0 +115,1 @@\n+\n","filename":"src\/hotspot\/os\/aix\/loadlib_aix.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1134,1 +1134,5 @@\n-  \/\/ Not yet implemented.\n+\n+  if (!LoadedLibraries::for_each(callback, param)) {\n+    return -1;\n+  }\n+\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,2 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, IBM Corp.\n@@ -27,0 +28,1 @@\n+#include \"libperfstat_aix.hpp\"\n@@ -28,0 +30,1 @@\n+#include \"memory\/resourceArea.hpp\"\n@@ -32,0 +35,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -34,3 +38,2 @@\n-#include <stdio.h>\n-#include <stdarg.h>\n-#include <unistd.h>\n+#include <dirent.h>\n+#include <dlfcn.h>\n@@ -38,0 +41,4 @@\n+#include <limits.h>\n+#include <pthread.h>\n+#include <stdarg.h>\n+#include <stdio.h>\n@@ -39,0 +46,1 @@\n+#include <sys\/procfs.h>\n@@ -40,1 +48,0 @@\n-#include <sys\/types.h>\n@@ -42,1 +49,1 @@\n-#include <dirent.h>\n+#include <sys\/types.h>\n@@ -44,163 +51,1 @@\n-#include <dlfcn.h>\n-#include <pthread.h>\n-#include <limits.h>\n-\n-\/**\n-   \/proc\/[number]\/stat\n-              Status information about the process.  This is used by ps(1).  It is defined in \/usr\/src\/linux\/fs\/proc\/array.c.\n-\n-              The fields, in order, with their proper scanf(3) format specifiers, are:\n-\n-              1. pid %d The process id.\n-\n-              2. comm %s\n-                     The filename of the executable, in parentheses.  This is visible whether or not the executable is swapped out.\n-\n-              3. state %c\n-                     One  character  from  the  string \"RSDZTW\" where R is running, S is sleeping in an interruptible wait, D is waiting in uninterruptible disk\n-                     sleep, Z is zombie, T is traced or stopped (on a signal), and W is paging.\n-\n-              4. ppid %d\n-                     The PID of the parent.\n-\n-              5. pgrp %d\n-                     The process group ID of the process.\n-\n-              6. session %d\n-                     The session ID of the process.\n-\n-              7. tty_nr %d\n-                     The tty the process uses.\n-\n-              8. tpgid %d\n-                     The process group ID of the process which currently owns the tty that the process is connected to.\n-\n-              9. flags %lu\n-                     The flags of the process.  The math bit is decimal 4, and the traced bit is decimal 10.\n-\n-              10. minflt %lu\n-                     The number of minor faults the process has made which have not required loading a memory page from disk.\n-\n-              11. cminflt %lu\n-                     The number of minor faults that the process's waited-for children have made.\n-\n-              12. majflt %lu\n-                     The number of major faults the process has made which have required loading a memory page from disk.\n-\n-              13. cmajflt %lu\n-                     The number of major faults that the process's waited-for children have made.\n-\n-              14. utime %lu\n-                     The number of jiffies that this process has been scheduled in user mode.\n-\n-              15. stime %lu\n-                     The number of jiffies that this process has been scheduled in kernel mode.\n-\n-              16. cutime %ld\n-                     The number of jiffies that this process's waited-for children have been scheduled in user mode. (See also times(2).)\n-\n-              17. cstime %ld\n-                     The number of jiffies that this process' waited-for children have been scheduled in kernel mode.\n-\n-              18. priority %ld\n-                     The standard nice value, plus fifteen.  The value is never negative in the kernel.\n-\n-              19. nice %ld\n-                     The nice value ranges from 19 (nicest) to -19 (not nice to others).\n-\n-              20. 0 %ld  This value is hard coded to 0 as a placeholder for a removed field.\n-\n-              21. itrealvalue %ld\n-                     The time in jiffies before the next SIGALRM is sent to the process due to an interval timer.\n-\n-              22. starttime %lu\n-                     The time in jiffies the process started after system boot.\n-\n-              23. vsize %lu\n-                     Virtual memory size in bytes.\n-\n-              24. rss %ld\n-                     Resident Set Size: number of pages the process has in real memory, minus 3 for administrative purposes. This is just the pages which  count\n-                     towards text, data, or stack space.  This does not include pages which have not been demand-loaded in, or which are swapped out.\n-\n-              25. rlim %lu\n-                     Current limit in bytes on the rss of the process (usually 4294967295 on i386).\n-\n-              26. startcode %lu\n-                     The address above which program text can run.\n-\n-              27. endcode %lu\n-                     The address below which program text can run.\n-\n-              28. startstack %lu\n-                     The address of the start of the stack.\n-\n-              29. kstkesp %lu\n-                     The current value of esp (stack pointer), as found in the kernel stack page for the process.\n-\n-              30. kstkeip %lu\n-                     The current EIP (instruction pointer).\n-\n-              31. signal %lu\n-                     The bitmap of pending signals (usually 0).\n-\n-              32. blocked %lu\n-                     The bitmap of blocked signals (usually 0, 2 for shells).\n-\n-              33. sigignore %lu\n-                     The bitmap of ignored signals.\n-\n-              34. sigcatch %lu\n-                     The bitmap of catched signals.\n-\n-              35. wchan %lu\n-                     This  is the \"channel\" in which the process is waiting.  It is the address of a system call, and can be looked up in a namelist if you need\n-                     a textual name.  (If you have an up-to-date \/etc\/psdatabase, then try ps -l to see the WCHAN field in action.)\n-\n-              36. nswap %lu\n-                     Number of pages swapped - not maintained.\n-\n-              37. cnswap %lu\n-                     Cumulative nswap for child processes.\n-\n-              38. exit_signal %d\n-                     Signal to be sent to parent when we die.\n-\n-              39. processor %d\n-                     CPU number last executed on.\n-\n-\n-\n- \/\/\/\/\/ SSCANF FORMAT STRING. Copy and use.\n-\n-field:        1  2  3  4  5  6  7  8  9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38 39\n-format:       %d %s %c %d %d %d %d %d %lu %lu %lu %lu %lu %lu %lu %ld %ld %ld %ld %ld %ld %lu %lu %ld %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %lu %d %d\n-\n-\n-*\/\n-\n-\/**\n- * For platforms that have them, when declaring\n- * a printf-style function,\n- *   formatSpec is the parameter number (starting at 1)\n- *       that is the format argument (\"%d pid %s\")\n- *   params is the parameter number where the actual args to\n- *       the format starts. If the args are in a va_list, this\n- *       should be 0.\n- *\/\n-#ifndef PRINTF_ARGS\n-#  define PRINTF_ARGS(formatSpec,  params) ATTRIBUTE_PRINTF(formatSpec, params)\n-#endif\n-\n-#ifndef SCANF_ARGS\n-#  define SCANF_ARGS(formatSpec,   params) ATTRIBUTE_SCANF(formatSpec, params)\n-#endif\n-\n-#ifndef _PRINTFMT_\n-#  define _PRINTFMT_\n-#endif\n-\n-#ifndef _SCANFMT_\n-#  define _SCANFMT_\n-#endif\n-\n+#include <unistd.h>\n@@ -208,5 +53,6 @@\n-struct CPUPerfTicks {\n-  uint64_t  used;\n-  uint64_t  usedKernel;\n-  uint64_t  total;\n-};\n+typedef struct {\n+  u_longlong_t  user;\n+  u_longlong_t  sys;\n+  u_longlong_t  idle;\n+  u_longlong_t  wait;\n+} cpu_tick_store_t;\n@@ -214,4 +60,4 @@\n-typedef enum {\n-  CPU_LOAD_VM_ONLY,\n-  CPU_LOAD_GLOBAL,\n-} CpuLoadTarget;\n+typedef struct {\n+  double utime;\n+  double stime;\n+} jvm_time_store_t;\n@@ -226,10 +72,2 @@\n-struct CPUPerfCounters {\n-  int   nProcs;\n-  CPUPerfTicks jvmTicks;\n-  CPUPerfTicks* cpus;\n-};\n-\n-static double get_cpu_load(int which_logical_cpu, CPUPerfCounters* counters, double* pkernelLoad, CpuLoadTarget target);\n-\n-\/** reads \/proc\/<pid>\/stat data, with some checks and some skips.\n- *  Ensure that 'fmt' does _NOT_ contain the first two \"%d %s\"\n+\/**\n+ * Get info for requested PID from \/proc\/<pid>\/psinfo file\n@@ -237,23 +75,2 @@\n-static int SCANF_ARGS(2, 0) vread_statdata(const char* procfile, _SCANFMT_ const char* fmt, va_list args) {\n-  FILE*f;\n-  int n;\n-  char buf[2048];\n-\n-  if ((f = os::fopen(procfile, \"r\")) == NULL) {\n-    return -1;\n-  }\n-\n-  if ((n = fread(buf, 1, sizeof(buf), f)) != -1) {\n-    char *tmp;\n-\n-    buf[n-1] = '\\0';\n-    \/** skip through pid and exec name. *\/\n-    if ((tmp = strrchr(buf, ')')) != NULL) {\n-      \/\/ skip the ')' and the following space\n-      \/\/ but check that buffer is long enough\n-      tmp += 2;\n-      if (tmp < buf + n) {\n-        n = vsscanf(tmp, fmt, args);\n-      }\n-    }\n-  }\n+static bool read_psinfo(const u_longlong_t& pid, psinfo_t& psinfo) {\n+  static size_t BUF_LENGTH = 32 + sizeof(u_longlong_t);\n@@ -261,1 +78,3 @@\n-  fclose(f);\n+  FILE* fp;\n+  char buf[BUF_LENGTH];\n+  int len;\n@@ -263,2 +82,2 @@\n-  return n;\n-}\n+  jio_snprintf(buf, BUF_LENGTH, \"\/proc\/%llu\/psinfo\", pid);\n+  fp = fopen(buf, \"r\");\n@@ -266,3 +85,3 @@\n-static int SCANF_ARGS(2, 3) read_statdata(const char* procfile, _SCANFMT_ const char* fmt, ...) {\n-  int   n;\n-  va_list args;\n+  if (!fp) {\n+    return false;\n+  }\n@@ -270,4 +89,2 @@\n-  va_start(args, fmt);\n-  n = vread_statdata(procfile, fmt, args);\n-  va_end(args);\n-  return n;\n+  len = fread(&psinfo, 1, sizeof(psinfo_t), fp);\n+  return len == sizeof(psinfo_t);\n@@ -277,2 +94,1 @@\n- * on Linux we got the ticks related information from \/proc\/stat\n- * this does not work on AIX, libperfstat might be an alternative\n+ * Get and set ticks for the specified lcpu\n@@ -280,3 +96,2 @@\n-static OSReturn get_total_ticks(int which_logical_cpu, CPUPerfTicks* pticks) {\n-  return OS_ERR;\n-}\n+static OSReturn get_lcpu_ticks(perfstat_id_t* lcpu_name, cpu_tick_store_t* pticks) {\n+  perfstat_cpu_t lcpu_stats;\n@@ -284,5 +99,3 @@\n-\/** read user and system ticks from a named procfile, assumed to be in 'stat' format then. *\/\n-static int read_ticks(const char* procfile, uint64_t* userTicks, uint64_t* systemTicks) {\n-  return read_statdata(procfile, \"%*c %*d %*d %*d %*d %*d %*u %*u %*u %*u %*u \" UINT64_FORMAT \" \" UINT64_FORMAT,\n-    userTicks, systemTicks);\n-}\n+  if (!pticks) {\n+    return OS_ERR;\n+  }\n@@ -290,6 +103,12 @@\n-\/**\n- * Return the number of ticks spent in any of the processes belonging\n- * to the JVM on any CPU.\n- *\/\n-static OSReturn get_jvm_ticks(CPUPerfTicks* pticks) {\n-  return OS_ERR;\n+  \/\/ populate cpu_stats\n+  if (libperfstat::perfstat_cpu(lcpu_name, &lcpu_stats, sizeof(perfstat_cpu_t), 1) < 1) {\n+    memset(pticks, 0, sizeof(cpu_tick_store_t));\n+    return OS_ERR;\n+  }\n+\n+  pticks->user = lcpu_stats.user;\n+  pticks->sys  = lcpu_stats.sys;\n+  pticks->idle = lcpu_stats.idle;\n+  pticks->wait = lcpu_stats.wait;\n+\n+  return OS_OK;\n@@ -299,5 +118,1 @@\n- * Return the load of the CPU as a double. 1.0 means the CPU process uses all\n- * available time for user or system processes, 0.0 means the CPU uses all time\n- * being idle.\n- *\n- * Returns a negative value if there is a problem in determining the CPU load.\n+ * Return CPU load caused by the currently executing process (the jvm).\n@@ -305,5 +120,3 @@\n-static double get_cpu_load(int which_logical_cpu, CPUPerfCounters* counters, double* pkernelLoad, CpuLoadTarget target) {\n-  uint64_t udiff, kdiff, tdiff;\n-  CPUPerfTicks* pticks;\n-  CPUPerfTicks  tmp;\n-  double user_load;\n+static OSReturn get_jvm_load(double* jvm_uload, double* jvm_sload) {\n+  static clock_t ticks_per_sec = sysconf(_SC_CLK_TCK);\n+  static u_longlong_t last_timebase = 0;\n@@ -311,1 +124,3 @@\n-  *pkernelLoad = 0.0;\n+  perfstat_process_t jvm_stats;\n+  perfstat_id_t name_holder;\n+  u_longlong_t timebase_diff;\n@@ -313,6 +128,3 @@\n-  if (target == CPU_LOAD_VM_ONLY) {\n-    pticks = &counters->jvmTicks;\n-  } else if (-1 == which_logical_cpu) {\n-    pticks = &counters->cpus[counters->nProcs];\n-  } else {\n-    pticks = &counters->cpus[which_logical_cpu];\n+  jio_snprintf(name_holder.name, IDENTIFIER_LENGTH, \"%d\", getpid());\n+  if (libperfstat::perfstat_process(&name_holder, &jvm_stats, sizeof(perfstat_process_t), 1) < 1) {\n+    return OS_ERR;\n@@ -321,1 +133,3 @@\n-  tmp = *pticks;\n+  \/\/ Update timebase\n+  timebase_diff = jvm_stats.last_timebase - last_timebase;\n+  last_timebase = jvm_stats.last_timebase;\n@@ -323,6 +137,5 @@\n-  if (target == CPU_LOAD_VM_ONLY) {\n-    if (get_jvm_ticks(pticks) != OS_OK) {\n-      return -1.0;\n-    }\n-  } else if (get_total_ticks(which_logical_cpu, pticks) != OS_OK) {\n-    return -1.0;\n+  if (jvm_uload) {\n+    *jvm_uload = jvm_stats.ucpu_time \/ timebase_diff;\n+  }\n+  if (jvm_sload) {\n+    *jvm_sload = jvm_stats.scpu_time \/ timebase_diff;\n@@ -331,6 +144,6 @@\n-  \/\/ seems like we sometimes end up with less kernel ticks when\n-  \/\/ reading \/proc\/self\/stat a second time, timing issue between cpus?\n-  if (pticks->usedKernel < tmp.usedKernel) {\n-    kdiff = 0;\n-  } else {\n-    kdiff = pticks->usedKernel - tmp.usedKernel;\n+  return OS_OK;\n+}\n+\n+static void update_prev_time(jvm_time_store_t* from, jvm_time_store_t* to) {\n+  if (from && to) {\n+    memcpy(to, from, sizeof(jvm_time_store_t));\n@@ -338,2 +151,1 @@\n-  tdiff = pticks->total - tmp.total;\n-  udiff = pticks->used - tmp.used;\n+}\n@@ -341,4 +153,3 @@\n-  if (tdiff == 0) {\n-    return 0.0;\n-  } else if (tdiff < (udiff + kdiff)) {\n-    tdiff = udiff + kdiff;\n+static void update_prev_ticks(cpu_tick_store_t* from, cpu_tick_store_t* to) {\n+  if (from && to) {\n+    memcpy(to, from, sizeof(cpu_tick_store_t));\n@@ -346,4 +157,1 @@\n-  *pkernelLoad = (kdiff \/ (double)tdiff);\n-  \/\/ BUG9044876, normalize return values to sane values\n-  *pkernelLoad = MAX2<double>(*pkernelLoad, 0.0);\n-  *pkernelLoad = MIN2<double>(*pkernelLoad, 1.0);\n+}\n@@ -351,3 +159,5 @@\n-  user_load = (udiff \/ (double)tdiff);\n-  user_load = MAX2<double>(user_load, 0.0);\n-  user_load = MIN2<double>(user_load, 1.0);\n+\/**\n+ * Calculate the current system load from current ticks using previous ticks as a starting point.\n+ *\/\n+static void calculate_updated_load(cpu_tick_store_t* update, cpu_tick_store_t* prev, double* load) {\n+  cpu_tick_store_t diff;\n@@ -355,2 +165,5 @@\n-  return user_load;\n-}\n+  if (update && prev && load) {\n+    diff.user = update->user - prev->user;\n+    diff.sys  = update->sys  - prev->sys;\n+    diff.idle = update->idle - prev->idle;\n+    diff.wait = update->wait - prev->wait;\n@@ -358,2 +171,2 @@\n-static int SCANF_ARGS(1, 2) parse_stat(_SCANFMT_ const char* fmt, ...) {\n-  return OS_ERR;\n+    *load = 1.0 - diff.idle\/(diff.sys + diff.user + diff.idle + diff.wait);\n+  }\n@@ -362,3 +175,8 @@\n-static int get_noof_context_switches(uint64_t* switches) {\n-  return parse_stat(\"ctxt \" UINT64_FORMAT \"\\n\", switches);\n-}\n+\/**\n+ * Look up lcpu names for later re-use.\n+ *\/\n+static bool populate_lcpu_names(int ncpus, perfstat_id_t* lcpu_names) {\n+  ResourceMark rm;\n+  perfstat_cpu_t* all_lcpu_stats;\n+  perfstat_cpu_t* lcpu_stats;\n+  perfstat_id_t   name_holder;\n@@ -366,4 +184,1 @@\n-\/** returns boot time in _seconds_ since epoch *\/\n-static int get_boot_time(uint64_t* time) {\n-  return parse_stat(\"btime \" UINT64_FORMAT \"\\n\", time);\n-}\n+  assert(lcpu_names, \"Names pointer NULL\");\n@@ -371,6 +186,1 @@\n-static int perf_context_switch_rate(double* rate) {\n-  static pthread_mutex_t contextSwitchLock = PTHREAD_MUTEX_INITIALIZER;\n-  static uint64_t      bootTime;\n-  static uint64_t      lastTimeNanos;\n-  static uint64_t      lastSwitches;\n-  static double        lastRate;\n+  strncpy(name_holder.name, FIRST_CPU, IDENTIFIER_LENGTH);\n@@ -378,2 +188,1 @@\n-  uint64_t bt = 0;\n-  int res = 0;\n+  all_lcpu_stats = NEW_RESOURCE_ARRAY(perfstat_cpu_t, ncpus);\n@@ -381,7 +190,3 @@\n-  \/\/ First time through bootTime will be zero.\n-  if (bootTime == 0) {\n-    uint64_t tmp;\n-    if (get_boot_time(&tmp) < 0) {\n-      return OS_ERR;\n-    }\n-    bt = tmp * 1000;\n+  \/\/ If perfstat_cpu does not return the expected number of names, signal error to caller\n+  if (ncpus != libperfstat::perfstat_cpu(&name_holder, all_lcpu_stats, sizeof(perfstat_cpu_t), ncpus)) {\n+    return false;\n@@ -390,1 +195,3 @@\n-  res = OS_OK;\n+  for (int n = 0; n < ncpus; n++) {\n+    strncpy(lcpu_names[n].name, all_lcpu_stats[n].name, IDENTIFIER_LENGTH);\n+  }\n@@ -392,2 +199,2 @@\n-  pthread_mutex_lock(&contextSwitchLock);\n-  {\n+  return true;\n+}\n@@ -395,2 +202,6 @@\n-    uint64_t sw;\n-    s8 t, d;\n+\/**\n+ * Calculates the context switch rate.\n+ * (Context Switches \/ Tick) * (Tick \/ s) = Context Switches per second\n+ *\/\n+static OSReturn perf_context_switch_rate(double* rate) {\n+  static clock_t ticks_per_sec = sysconf(_SC_CLK_TCK);\n@@ -398,13 +209,2 @@\n-    if (bootTime == 0) {\n-      \/\/ First interval is measured from boot time which is\n-      \/\/ seconds since the epoch. Thereafter we measure the\n-      \/\/ elapsed time using javaTimeNanos as it is monotonic-\n-      \/\/ non-decreasing.\n-      lastTimeNanos = os::javaTimeNanos();\n-      t = os::javaTimeMillis();\n-      d = t - bt;\n-      \/\/ keep bootTime zero for now to use as a first-time-through flag\n-    } else {\n-      t = os::javaTimeNanos();\n-      d = nanos_to_millis(t - lastTimeNanos);\n-    }\n+  u_longlong_t ticks;\n+  perfstat_cpu_total_t cpu_stats;\n@@ -412,17 +212,3 @@\n-    if (d == 0) {\n-      *rate = lastRate;\n-    } else if (get_noof_context_switches(&sw) == 0) {\n-      *rate      = ( (double)(sw - lastSwitches) \/ d ) * 1000;\n-      lastRate     = *rate;\n-      lastSwitches = sw;\n-      if (bootTime != 0) {\n-        lastTimeNanos = t;\n-      }\n-    } else {\n-      *rate = 0;\n-      res   = OS_ERR;\n-    }\n-    if (*rate <= 0) {\n-      *rate = 0;\n-      lastRate = 0;\n-    }\n+   if (libperfstat::perfstat_cpu_total(NULL, &cpu_stats, sizeof(perfstat_cpu_total_t), 1) < 0) {\n+     return OS_ERR;\n+   }\n@@ -430,5 +216,2 @@\n-    if (bootTime == 0) {\n-      bootTime = bt;\n-    }\n-  }\n-  pthread_mutex_unlock(&contextSwitchLock);\n+   ticks = cpu_stats.user + cpu_stats.sys + cpu_stats.idle + cpu_stats.wait;\n+   *rate = (cpu_stats.pswitch \/ ticks) * ticks_per_sec;\n@@ -436,1 +219,1 @@\n-  return res;\n+   return OS_OK;\n@@ -440,1 +223,0 @@\n-  friend class CPUPerformanceInterface;\n@@ -442,6 +224,3 @@\n-  CPUPerfCounters _counters;\n-\n-  int cpu_load(int which_logical_cpu, double* cpu_load);\n-  int context_switch_rate(double* rate);\n-  int cpu_load_total_process(double* cpu_load);\n-  int cpu_loads_process(double* pjvmUserLoad, double* pjvmKernelLoad, double* psystemTotalLoad);\n+  int _ncpus;\n+  perfstat_id_t* _lcpu_names;\n+  cpu_tick_store_t* _prev_ticks;\n@@ -453,0 +232,5 @@\n+\n+  int cpu_load(int which_logical_cpu, double* cpu_load);\n+  int context_switch_rate(double* rate);\n+  int cpu_load_total_process(double* cpu_load);\n+  int cpu_loads_process(double* pjvmUserLoad, double* pjvmKernelLoad, double* psystemTotalLoad);\n@@ -455,4 +239,4 @@\n-CPUPerformanceInterface::CPUPerformance::CPUPerformance() {\n-  _counters.nProcs = os::active_processor_count();\n-  _counters.cpus = NULL;\n-}\n+CPUPerformanceInterface::CPUPerformance::CPUPerformance():\n+  _ncpus(0),\n+  _lcpu_names(NULL),\n+  _prev_ticks(NULL) {}\n@@ -461,3 +245,1 @@\n-  size_t array_entry_count = _counters.nProcs + 1;\n-  _counters.cpus = NEW_C_HEAP_ARRAY(CPUPerfTicks, array_entry_count, mtInternal);\n-  memset(_counters.cpus, 0, array_entry_count * sizeof(*_counters.cpus));\n+  perfstat_cpu_total_t cpu_stats;\n@@ -465,6 +247,5 @@\n-  \/\/ For the CPU load total\n-  get_total_ticks(-1, &_counters.cpus[_counters.nProcs]);\n-\n-  \/\/ For each CPU\n-  for (int i = 0; i < _counters.nProcs; i++) {\n-    get_total_ticks(i, &_counters.cpus[i]);\n+  if (libperfstat::perfstat_cpu_total(NULL, &cpu_stats, sizeof(perfstat_cpu_total_t), 1) < 0) {\n+    return false;\n+  }\n+  if (cpu_stats.ncpus <= 0) {\n+    return false;\n@@ -472,2 +253,0 @@\n-  \/\/ For JVM load\n-  get_jvm_ticks(&_counters.jvmTicks);\n@@ -475,4 +254,10 @@\n-  \/\/ initialize context switch system\n-  \/\/ the double is only for init\n-  double init_ctx_switch_rate;\n-  perf_context_switch_rate(&init_ctx_switch_rate);\n+  _ncpus = cpu_stats.ncpus;\n+  _lcpu_names = NEW_C_HEAP_ARRAY(perfstat_id_t, _ncpus, mtInternal);\n+\n+  _prev_ticks = NEW_C_HEAP_ARRAY(cpu_tick_store_t, _ncpus, mtInternal);\n+  \/\/ Set all prev-tick values to 0\n+  memset(_prev_ticks, 0, _ncpus*sizeof(cpu_tick_store_t));\n+\n+  if (!populate_lcpu_names(_ncpus, _lcpu_names)) {\n+    return false;\n+  }\n@@ -484,2 +269,5 @@\n-  if (_counters.cpus != NULL) {\n-    FREE_C_HEAP_ARRAY(char, _counters.cpus);\n+  if (_lcpu_names) {\n+    FREE_C_HEAP_ARRAY(perfstat_id_t, _lcpu_names);\n+  }\n+  if (_prev_ticks) {\n+    FREE_C_HEAP_ARRAY(cpu_tick_store_t, _prev_ticks);\n@@ -489,5 +277,11 @@\n-int CPUPerformanceInterface::CPUPerformance::cpu_load(int which_logical_cpu, double* cpu_load) {\n-  double u, s;\n-  u = get_cpu_load(which_logical_cpu, &_counters, &s, CPU_LOAD_GLOBAL);\n-  if (u < 0) {\n-    *cpu_load = 0.0;\n+\/**\n+ * Get CPU load for all processes on specified logical CPU.\n+ *\/\n+int CPUPerformanceInterface::CPUPerformance::cpu_load(int lcpu_number, double* lcpu_load) {\n+  cpu_tick_store_t ticks;\n+\n+  assert(lcpu_load != NULL, \"NULL pointer passed to cpu_load\");\n+  assert(lcpu_number < _ncpus, \"Invalid lcpu passed to cpu_load\");\n+\n+  if (get_lcpu_ticks(&_lcpu_names[lcpu_number], &ticks) == OS_ERR) {\n+    *lcpu_load = -1.0;\n@@ -496,2 +290,4 @@\n-  \/\/ Cap total systemload to 1.0\n-  *cpu_load = MIN2<double>((u + s), 1.0);\n+\n+  calculate_updated_load(&ticks, &_prev_ticks[lcpu_number], lcpu_load);\n+  update_prev_ticks(&ticks, &_prev_ticks[lcpu_number]);\n+\n@@ -501,6 +297,31 @@\n-int CPUPerformanceInterface::CPUPerformance::cpu_load_total_process(double* cpu_load) {\n-  double u, s;\n-  u = get_cpu_load(-1, &_counters, &s, CPU_LOAD_VM_ONLY);\n-  if (u < 0) {\n-    *cpu_load = 0.0;\n-    return OS_ERR;\n+\/**\n+ * Get CPU load for all processes on all CPUs.\n+ *\/\n+int CPUPerformanceInterface::CPUPerformance::cpu_load_total_process(double* total_load) {\n+  cpu_tick_store_t total_ticks;\n+  cpu_tick_store_t prev_total_ticks;\n+\n+  assert(total_load != NULL, \"NULL pointer passed to cpu_load_total_process\");\n+\n+  memset(&total_ticks, 0, sizeof(cpu_tick_store_t));\n+  memset(&prev_total_ticks, 0, sizeof(cpu_tick_store_t));\n+\n+  for (int lcpu = 0; lcpu < _ncpus; lcpu++) {\n+    cpu_tick_store_t lcpu_ticks;\n+\n+    if (get_lcpu_ticks(&_lcpu_names[lcpu], &lcpu_ticks) == OS_ERR) {\n+      *total_load = -1.0;\n+      return OS_ERR;\n+    }\n+\n+    total_ticks.user = lcpu_ticks.user;\n+    total_ticks.sys  = lcpu_ticks.sys;\n+    total_ticks.idle = lcpu_ticks.idle;\n+    total_ticks.wait = lcpu_ticks.wait;\n+\n+    prev_total_ticks.user += _prev_ticks[lcpu].user;\n+    prev_total_ticks.sys  += _prev_ticks[lcpu].sys;\n+    prev_total_ticks.idle += _prev_ticks[lcpu].idle;\n+    prev_total_ticks.wait += _prev_ticks[lcpu].wait;\n+\n+    update_prev_ticks(&lcpu_ticks, &_prev_ticks[lcpu]);\n@@ -508,1 +329,3 @@\n-  *cpu_load = u + s;\n+\n+  calculate_updated_load(&total_ticks, &prev_total_ticks, total_load);\n+\n@@ -512,0 +335,11 @@\n+\/**\n+ * Get CPU load for all CPUs.\n+ *\n+ * Set values for:\n+ * - pjvmUserLoad:     CPU load due to jvm process in user mode. Jvm process assumed to be self process\n+ * - pjvmKernelLoad:   CPU load due to jvm process in kernel mode. Jvm process assumed to be self process\n+ * - psystemTotalLoad: Total CPU load from all process on all logical CPUs\n+ *\n+ * Note: If any of the above loads cannot be calculated, this procedure returns OS_ERR and any load that could not be calculated is set to -1\n+ *\n+ *\/\n@@ -513,1 +347,1 @@\n-  double u, s, t;\n+  double u, k, t;\n@@ -515,10 +349,3 @@\n-  assert(pjvmUserLoad != NULL, \"pjvmUserLoad not inited\");\n-  assert(pjvmKernelLoad != NULL, \"pjvmKernelLoad not inited\");\n-  assert(psystemTotalLoad != NULL, \"psystemTotalLoad not inited\");\n-\n-  u = get_cpu_load(-1, &_counters, &s, CPU_LOAD_VM_ONLY);\n-  if (u < 0) {\n-    *pjvmUserLoad = 0.0;\n-    *pjvmKernelLoad = 0.0;\n-    *psystemTotalLoad = 0.0;\n-    return OS_ERR;\n+  int retval = OS_OK;\n+  if (get_jvm_load(&u, &k) == OS_ERR || cpu_load_total_process(&t) == OS_ERR) {\n+    retval = OS_ERR;\n@@ -527,4 +354,8 @@\n-  cpu_load(-1, &t);\n-  \/\/ clamp at user+system and 1.0\n-  if (u + s > t) {\n-    t = MIN2<double>(u + s, 1.0);\n+  if (pjvmUserLoad) {\n+    *pjvmUserLoad = u;\n+  }\n+  if (pjvmKernelLoad) {\n+    *pjvmKernelLoad = k;\n+  }\n+  if (psystemTotalLoad) {\n+    *psystemTotalLoad = t;\n@@ -533,5 +364,1 @@\n-  *pjvmUserLoad = u;\n-  *pjvmKernelLoad = s;\n-  *psystemTotalLoad = t;\n-\n-  return OS_OK;\n+  return retval;\n@@ -576,30 +403,4 @@\n-  friend class SystemProcessInterface;\n- private:\n-  class ProcessIterator : public CHeapObj<mtInternal> {\n-    friend class SystemProcessInterface::SystemProcesses;\n-   private:\n-    DIR*           _dir;\n-    struct dirent* _entry;\n-    bool           _valid;\n-    char           _exeName[PATH_MAX];\n-    char           _exePath[PATH_MAX];\n-\n-    ProcessIterator();\n-    ~ProcessIterator();\n-    bool initialize();\n-\n-    bool is_valid() const { return _valid; }\n-    bool is_valid_entry(struct dirent* entry) const;\n-    bool is_dir(const char* name) const;\n-    int  fsize(const char* name, uint64_t& size) const;\n-\n-    char* allocate_string(const char* str) const;\n-    void  get_exe_name();\n-    char* get_exe_path();\n-    char* get_cmdline();\n-\n-    int current(SystemProcess* process_info);\n-    int next_process();\n-  };\n-\n-  ProcessIterator* _iterator;\n+  private:\n+  char* allocate_string(const char* str) const;\n+\n+  public:\n@@ -609,2 +410,0 @@\n-\n-  \/\/information about system processes\n@@ -614,69 +413,1 @@\n-bool SystemProcessInterface::SystemProcesses::ProcessIterator::is_dir(const char* name) const {\n-  struct stat mystat;\n-  int ret_val = 0;\n-\n-  ret_val = stat(name, &mystat);\n-  if (ret_val < 0) {\n-    return false;\n-  }\n-  ret_val = S_ISDIR(mystat.st_mode);\n-  return ret_val > 0;\n-}\n-\n-int SystemProcessInterface::SystemProcesses::ProcessIterator::fsize(const char* name, uint64_t& size) const {\n-  assert(name != NULL, \"name pointer is NULL!\");\n-  size = 0;\n-  struct stat fbuf;\n-\n-  if (stat(name, &fbuf) < 0) {\n-    return OS_ERR;\n-  }\n-  size = fbuf.st_size;\n-  return OS_OK;\n-}\n-\n-\/\/ if it has a numeric name, is a directory and has a 'stat' file in it\n-bool SystemProcessInterface::SystemProcesses::ProcessIterator::is_valid_entry(struct dirent* entry) const {\n-  char buffer[PATH_MAX];\n-  uint64_t size = 0;\n-\n-  if (atoi(entry->d_name) != 0) {\n-    jio_snprintf(buffer, PATH_MAX, \"\/proc\/%s\", entry->d_name);\n-    buffer[PATH_MAX - 1] = '\\0';\n-\n-    if (is_dir(buffer)) {\n-      jio_snprintf(buffer, PATH_MAX, \"\/proc\/%s\/stat\", entry->d_name);\n-      buffer[PATH_MAX - 1] = '\\0';\n-      if (fsize(buffer, size) != OS_ERR) {\n-        return true;\n-      }\n-    }\n-  }\n-  return false;\n-}\n-\n-\/\/ get exe-name from \/proc\/<pid>\/stat\n-void SystemProcessInterface::SystemProcesses::ProcessIterator::get_exe_name() {\n-  FILE* fp;\n-  char  buffer[PATH_MAX];\n-\n-  jio_snprintf(buffer, PATH_MAX, \"\/proc\/%s\/stat\", _entry->d_name);\n-  buffer[PATH_MAX - 1] = '\\0';\n-  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n-    if (fgets(buffer, PATH_MAX, fp) != NULL) {\n-      char* start, *end;\n-      \/\/ exe-name is between the first pair of ( and )\n-      start = strchr(buffer, '(');\n-      if (start != NULL && start[1] != '\\0') {\n-        start++;\n-        end = strrchr(start, ')');\n-        if (end != NULL) {\n-          size_t len;\n-          len = MIN2<size_t>(end - start, sizeof(_exeName) - 1);\n-          memcpy(_exeName, start, len);\n-          _exeName[len] = '\\0';\n-        }\n-      }\n-    }\n-    fclose(fp);\n-  }\n+SystemProcessInterface::SystemProcesses::SystemProcesses() {\n@@ -685,35 +416,2 @@\n-\/\/ get command line from \/proc\/<pid>\/cmdline\n-char* SystemProcessInterface::SystemProcesses::ProcessIterator::get_cmdline() {\n-  FILE* fp;\n-  char  buffer[PATH_MAX];\n-  char* cmdline = NULL;\n-\n-  jio_snprintf(buffer, PATH_MAX, \"\/proc\/%s\/cmdline\", _entry->d_name);\n-  buffer[PATH_MAX - 1] = '\\0';\n-  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n-    size_t size = 0;\n-    char   dummy;\n-\n-    \/\/ find out how long the file is (stat always returns 0)\n-    while (fread(&dummy, 1, 1, fp) == 1) {\n-      size++;\n-    }\n-    if (size > 0) {\n-      cmdline = NEW_C_HEAP_ARRAY(char, size + 1, mtInternal);\n-      cmdline[0] = '\\0';\n-      if (fseek(fp, 0, SEEK_SET) == 0) {\n-        if (fread(cmdline, 1, size, fp) == size) {\n-          \/\/ the file has the arguments separated by '\\0',\n-          \/\/ so we translate '\\0' to ' '\n-          for (size_t i = 0; i < size; i++) {\n-            if (cmdline[i] == '\\0') {\n-              cmdline[i] = ' ';\n-            }\n-          }\n-          cmdline[size] = '\\0';\n-        }\n-      }\n-    }\n-    fclose(fp);\n-  }\n-  return cmdline;\n+bool SystemProcessInterface::SystemProcesses::initialize() {\n+  return true;\n@@ -722,7 +420,1 @@\n-\/\/ get full path to exe from \/proc\/<pid>\/exe symlink\n-char* SystemProcessInterface::SystemProcesses::ProcessIterator::get_exe_path() {\n-  char buffer[PATH_MAX];\n-\n-  jio_snprintf(buffer, PATH_MAX, \"\/proc\/%s\/exe\", _entry->d_name);\n-  buffer[PATH_MAX - 1] = '\\0';\n-  return realpath(buffer, _exePath);\n+SystemProcessInterface::SystemProcesses::~SystemProcesses() {\n@@ -731,1 +423,1 @@\n-char* SystemProcessInterface::SystemProcesses::ProcessIterator::allocate_string(const char* str) const {\n+char* SystemProcessInterface::SystemProcesses::allocate_string(const char* str) const {\n@@ -738,9 +430,6 @@\n-int SystemProcessInterface::SystemProcesses::ProcessIterator::current(SystemProcess* process_info) {\n-  if (!is_valid()) {\n-    return OS_ERR;\n-  }\n-\n-  process_info->set_pid(atoi(_entry->d_name));\n-\n-  get_exe_name();\n-  process_info->set_name(allocate_string(_exeName));\n+int SystemProcessInterface::SystemProcesses::system_processes(SystemProcess** system_processes, int* nprocs) const {\n+  ResourceMark rm;\n+  perfstat_process_t* proc_stats;\n+  SystemProcess* head;\n+  perfstat_id_t name_holder;\n+  int records_allocated = 0;\n@@ -748,10 +437,1 @@\n-  if (get_exe_path() != NULL) {\n-     process_info->set_path(allocate_string(_exePath));\n-  }\n-\n-  char* cmdline = NULL;\n-  cmdline = get_cmdline();\n-  if (cmdline != NULL) {\n-    process_info->set_command_line(allocate_string(cmdline));\n-    FREE_C_HEAP_ARRAY(char, cmdline);\n-  }\n+  assert(nprocs != NULL, \"system_processes counter pointers is NULL!\");\n@@ -759,2 +439,3 @@\n-  return OS_OK;\n-}\n+  head = NULL;\n+  *nprocs = 0;\n+  strncpy(name_holder.name, \"\", IDENTIFIER_LENGTH);\n@@ -762,2 +443,4 @@\n-int SystemProcessInterface::SystemProcesses::ProcessIterator::next_process() {\n-  if (!is_valid()) {\n+  \/\/ calling perfstat_<subsystem>(NULL, NULL, _, 0) returns number of available records\n+  *nprocs = libperfstat::perfstat_process(NULL, NULL, sizeof(perfstat_process_t), 0);\n+  if(*nprocs < 1) {\n+    \/\/ expect at least 1 process\n@@ -767,18 +450,2 @@\n-  do {\n-    _entry = os::readdir(_dir);\n-    if (_entry == NULL) {\n-      \/\/ Error or reached end.  Could use errno to distinguish those cases.\n-      _valid = false;\n-      return OS_ERR;\n-    }\n-  } while(!is_valid_entry(_entry));\n-\n-  _valid = true;\n-  return OS_OK;\n-}\n-\n-SystemProcessInterface::SystemProcesses::ProcessIterator::ProcessIterator() {\n-  _dir = NULL;\n-  _entry = NULL;\n-  _valid = false;\n-}\n+  records_allocated = *nprocs;\n+  proc_stats = NEW_RESOURCE_ARRAY(perfstat_process_t, records_allocated);\n@@ -786,4 +453,3 @@\n-bool SystemProcessInterface::SystemProcesses::ProcessIterator::initialize() {\n-  \/\/ Not yet implemented.\n-  return false;\n-}\n+  \/\/ populate stats && set the actual number of procs that have been populated\n+  \/\/ should never be higher than requested, but may be lower due to process death\n+  *nprocs = libperfstat::perfstat_process(&name_holder, proc_stats, sizeof(perfstat_process_t), records_allocated);\n@@ -791,5 +457,6 @@\n-SystemProcessInterface::SystemProcesses::ProcessIterator::~ProcessIterator() {\n-  if (_dir != NULL) {\n-    os::closedir(_dir);\n-  }\n-}\n+  for (int n = 0; n < *nprocs; n++) {\n+    psinfo_t psinfo;\n+    \/\/ Note: SystemProcess with free these in its dtor.\n+    char* name     = NEW_C_HEAP_ARRAY(char, IDENTIFIER_LENGTH, mtInternal);\n+    char* exe_name = NEW_C_HEAP_ARRAY(char, PRFNSZ, mtInternal);\n+    char* cmd_line = NEW_C_HEAP_ARRAY(char, PRARGSZ, mtInternal);\n@@ -797,3 +464,1 @@\n-SystemProcessInterface::SystemProcesses::SystemProcesses() {\n-  _iterator = NULL;\n-}\n+    strncpy(name, proc_stats[n].proc_name, IDENTIFIER_LENGTH);\n@@ -801,4 +466,4 @@\n-bool SystemProcessInterface::SystemProcesses::initialize() {\n-  _iterator = new SystemProcessInterface::SystemProcesses::ProcessIterator();\n-  return _iterator->initialize();\n-}\n+    if (read_psinfo(proc_stats[n].pid, psinfo)) {\n+      strncpy(exe_name, psinfo.pr_fname, PRFNSZ);\n+      strncpy(cmd_line, psinfo.pr_psargs, PRARGSZ);\n+    }\n@@ -806,3 +471,8 @@\n-SystemProcessInterface::SystemProcesses::~SystemProcesses() {\n-  if (_iterator != NULL) {\n-    delete _iterator;\n+    \/\/ create a new SystemProcess with next pointing to current head.\n+    SystemProcess* sp = new SystemProcess(proc_stats[n].pid,\n+                                          name,\n+                                          exe_name,\n+                                          cmd_line,\n+                                          head);\n+    \/\/ update head.\n+    head = sp;\n@@ -810,10 +480,0 @@\n-}\n-\n-int SystemProcessInterface::SystemProcesses::system_processes(SystemProcess** system_processes, int* no_of_sys_processes) const {\n-  assert(system_processes != NULL, \"system_processes pointer is NULL!\");\n-  assert(no_of_sys_processes != NULL, \"system_processes counter pointers is NULL!\");\n-  assert(_iterator != NULL, \"iterator is NULL!\");\n-\n-  \/\/ initialize pointers\n-  *no_of_sys_processes = 0;\n-  *system_processes = NULL;\n@@ -821,16 +481,1 @@\n-  while (_iterator->is_valid()) {\n-    SystemProcess* tmp = new SystemProcess();\n-    _iterator->current(tmp);\n-\n-    \/\/if already existing head\n-    if (*system_processes != NULL) {\n-      \/\/move \"first to second\"\n-      tmp->set_next(*system_processes);\n-    }\n-    \/\/ new head\n-    *system_processes = tmp;\n-    \/\/ increment\n-    (*no_of_sys_processes)++;\n-    \/\/ step forward\n-    _iterator->next_process();\n-  }\n+  *system_processes = head;\n@@ -900,1 +545,2 @@\n-  friend class NetworkPerformanceInterface;\n+  NONCOPYABLE(NetworkPerformance);\n+\n@@ -902,0 +548,3 @@\n+  char* allocate_string(const char* str) const;\n+\n+  public:\n@@ -903,1 +552,0 @@\n-  NONCOPYABLE(NetworkPerformance);\n@@ -909,3 +557,1 @@\n-NetworkPerformanceInterface::NetworkPerformance::NetworkPerformance() {\n-\n-}\n+NetworkPerformanceInterface::NetworkPerformance::NetworkPerformance() {}\n@@ -917,2 +563,17 @@\n-NetworkPerformanceInterface::NetworkPerformance::~NetworkPerformance() {\n-}\n+NetworkPerformanceInterface::NetworkPerformance::~NetworkPerformance() {}\n+\n+int NetworkPerformanceInterface::NetworkPerformance::network_utilization(NetworkInterface** network_interfaces) const {\n+  int n_records = 0;\n+  perfstat_netinterface_t* net_stats;\n+  perfstat_id_t name_holder;\n+  int records_allocated = 0;\n+\n+  assert(network_interfaces != NULL, \"network_interfaces is NULL\");\n+\n+  *network_interfaces = NULL;\n+  strncpy(name_holder.name , FIRST_NETINTERFACE, IDENTIFIER_LENGTH);\n+\n+  \/\/ calling perfstat_<subsystem>(NULL, NULL, _, 0) returns number of available records\n+  if ((n_records = libperfstat::perfstat_netinterface(NULL, NULL, sizeof(perfstat_netinterface_t), 0)) < 0) {\n+    return OS_ERR;\n+  }\n@@ -920,3 +581,26 @@\n-int NetworkPerformanceInterface::NetworkPerformance::network_utilization(NetworkInterface** network_interfaces) const\n-{\n-  return FUNCTIONALITY_NOT_IMPLEMENTED;\n+  records_allocated = n_records;\n+  net_stats = NEW_C_HEAP_ARRAY(perfstat_netinterface_t, records_allocated, mtInternal);\n+\n+  n_records = libperfstat::perfstat_netinterface(&name_holder, net_stats, sizeof(perfstat_netinterface_t), n_records);\n+\n+  \/\/ check for error\n+  if (n_records < 0) {\n+    FREE_C_HEAP_ARRAY(perfstat_netinterface_t, net_stats);\n+    return OS_ERR;\n+  }\n+\n+  for (int i = 0; i < n_records; i++) {\n+    \/\/ Create new Network interface *with current head as next node*\n+    \/\/ Note: NetworkInterface makes copies of these string values into RA memory\n+    \/\/ this means:\n+    \/\/ (1) we are free to clean our values upon exiting this proc\n+    \/\/ (2) we avoid using RA-alloced memory here (ie. do not use NEW_RESOURCE_ARRAY)\n+    NetworkInterface* new_interface = new NetworkInterface(net_stats[i].name,\n+                                                           net_stats[i].ibytes,\n+                                                           net_stats[i].obytes,\n+                                                           *network_interfaces);\n+    *network_interfaces = new_interface;\n+  }\n+\n+  FREE_C_HEAP_ARRAY(perfstat_netinterface_t, net_stats);\n+  return OS_OK;\n","filename":"src\/hotspot\/os\/aix\/os_perf_aix.cpp","additions":333,"deletions":649,"binary":false,"changes":982,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-#include \"services\/dtraceAttacher.hpp\"\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/os\/bsd\/gc\/z\/zNUMA_bsd.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"services\/dtraceAttacher.hpp\"\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zSyscall_linux.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2177,1 +2177,5 @@\n-    st->print_cr(\"%d\", i);\n+    if (ActiveProcessorCount > 0) {\n+      st->print_cr(\"%d, but overridden by -XX:ActiveProcessorCount %d\", i, ActiveProcessorCount);\n+    } else {\n+      st->print_cr(\"%d\", i);\n+    }\n@@ -5383,0 +5387,1 @@\n+  \/\/ Note: all ranges are \"[..)\"\n@@ -5388,1 +5393,1 @@\n-    st->print(\"Range [%llx-%llx) contains: \", start, end);\n+    st->print_cr(\"Range [%llx-%llx) contains: \", start, end);\n@@ -5391,3 +5396,3 @@\n-      unsigned long long a1 = 0;\n-      unsigned long long a2 = 0;\n-      if (::sscanf(line, \"%llx-%llx\", &a1, &a2) == 2) {\n+      unsigned long long segment_start = 0;\n+      unsigned long long segment_end = 0;\n+      if (::sscanf(line, \"%llx-%llx\", &segment_start, &segment_end) == 2) {\n@@ -5395,3 +5400,1 @@\n-        if ((a1 >= start && a1 < end) || \/\/ left leg in\n-            (a2 >= start && a2 < end) || \/\/ right leg in\n-            (a1 < start && a2 >= end)) { \/\/ superimposition\n+        if (segment_start < end && segment_end > start) {\n@@ -5405,1 +5408,1 @@\n-      st->print(\"nothing.\");\n+      st->print_cr(\"nothing.\");\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -692,4 +692,0 @@\n-int os::close(int fd) {\n-  return ::close(fd);\n-}\n-\n@@ -723,4 +719,0 @@\n-int os::socket(int domain, int type, int protocol) {\n-  return ::socket(domain, type, protocol);\n-}\n-\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-    result = os::close(fd);\n+    result = ::close(fd);\n@@ -333,1 +333,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -341,1 +341,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -348,1 +348,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -355,1 +355,1 @@\n-  os::close(fd);\n+  ::close(fd);\n@@ -908,1 +908,1 @@\n-    os::close(fd);\n+    ::close(fd);\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -565,0 +565,5 @@\n+  if (sig == BREAK_SIGNAL) {\n+    assert(!ReduceSignalUsage, \"Should not happen with -Xrs\/-XX:+ReduceSignalUsage\");\n+    return true; \/\/ ignore it\n+  }\n+\n@@ -1200,1 +1205,1 @@\n-void set_signal_handler(int sig) {\n+void set_signal_handler(int sig, bool do_check = true) {\n@@ -1244,1 +1249,1 @@\n-  do_check_signal_periodically[sig] = true;\n+  do_check_signal_periodically[sig] = do_check;\n@@ -1282,1 +1287,6 @@\n-\n+  if (!ReduceSignalUsage) {\n+    \/\/ This is just for early initialization phase. Intercepting the signal here reduces the risk\n+    \/\/ that an attach client accidentally forces HotSpot to quit prematurely. We skip the periodic\n+    \/\/ check because late initialization will overwrite it to UserHandler.\n+    set_signal_handler(BREAK_SIGNAL, false);\n+  }\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/os\/posix\/signals_posix.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/os\/posix\/threadLocalStorage_posix.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-#include \"services\/dtraceAttacher.hpp\"\n","filename":"src\/hotspot\/os\/windows\/attachListener_windows.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/os\/windows\/gc\/z\/zMapper_windows.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/os\/windows\/iphlp_interface.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -532,1 +532,1 @@\n-  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \").\", os::current_thread_id());\n+  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \", stacksize: \" SIZE_FORMAT \"k).\", os::current_thread_id(), thread->stack_size() \/ 1024);\n@@ -1556,1 +1556,1 @@\n-     (os::read(fd, (void*)&signature_offset, sizeof(signature_offset))))\n+     (::read(fd, (void*)&signature_offset, sizeof(signature_offset))))\n@@ -1565,1 +1565,1 @@\n-     (sizeof(lib_arch) != (os::read(fd, (void*)&lib_arch, sizeof(lib_arch))))\n+     (sizeof(lib_arch) != (::read(fd, (void*)&lib_arch, sizeof(lib_arch))))\n@@ -4765,4 +4765,0 @@\n-int os::close(int fd) {\n-  return ::close(fd);\n-}\n-\n@@ -5728,4 +5724,0 @@\n-int os::socket(int domain, int type, int protocol) {\n-  return ::socket(domain, type, protocol);\n-}\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/os\/windows\/pdh_interface.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/os\/windows\/threadLocalStorage_windows.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+ * Copyright (c) 2022, IBM Corp.\n@@ -27,0 +28,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -37,0 +39,2 @@\n+  \/\/ Assume spill slot for link register contains a suitable pc.\n+  \/\/ Should have been filled by method entry code.\n@@ -44,4 +48,60 @@\n-  ucontext_t* uc = (ucontext_t*) ucontext;\n-  *fr_addr = frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1\/*REG_SP*\/],\n-                   (address)uc->uc_mcontext.jmp_context.iar);\n-  return true;\n+\n+  \/\/ If we have a last_Java_frame, then we should use it even if\n+  \/\/ isInJava == true.  It should be more reliable than ucontext info.\n+  if (has_last_Java_frame() && frame_anchor()->walkable()) {\n+    *fr_addr = pd_last_frame();\n+    return true;\n+  }\n+\n+  \/\/ At this point, we don't have a last_Java_frame, so\n+  \/\/ we try to glean some information out of the ucontext\n+  \/\/ if we were running Java code when SIGPROF came in.\n+  if (isInJava) {\n+    ucontext_t* uc = (ucontext_t*) ucontext;\n+    address pc = (address)uc->uc_mcontext.jmp_context.iar;\n+\n+    if (pc == NULL) {\n+      \/\/ ucontext wasn't useful\n+      return false;\n+    }\n+\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1\/*REG_SP*\/], pc);\n+\n+    if (ret_frame.fp() == NULL) {\n+      \/\/ The found frame does not have a valid frame pointer.\n+      \/\/ Bail out because this will create big trouble later on, either\n+      \/\/  - when using istate, calculated as (NULL - ijava_state_size) or\n+      \/\/  - when using fp() directly in safe_for_sender()\n+      \/\/\n+      \/\/ There is no conclusive description (yet) how this could happen, but it does.\n+      \/\/ For more details on what was observed, see thread_linux_s390.cpp\n+      return false;\n+    }\n+\n+    if (ret_frame.is_interpreted_frame()) {\n+      frame::ijava_state *istate = ret_frame.get_ijava_state();\n+      const Method *m = (const Method*)(istate->method);\n+      if (!Method::is_valid_method(m)) return false;\n+      if (!Metaspace::contains(m->constMethod())) return false;\n+\n+      uint64_t reg_bcp = uc->uc_mcontext.jmp_context.gpr[14\/*R14_bcp*\/];\n+      uint64_t istate_bcp = istate->bcp;\n+      uint64_t code_start = (uint64_t)(m->code_base());\n+      uint64_t code_end = (uint64_t)(m->code_base() + m->code_size());\n+      if (istate_bcp >= code_start && istate_bcp < code_end) {\n+        \/\/ we have a valid bcp, don't touch it, do nothing\n+      } else if (reg_bcp >= code_start && reg_bcp < code_end) {\n+        istate->bcp = reg_bcp;\n+      } else {\n+        return false;\n+      }\n+    }\n+    if (!ret_frame.safe_for_sender(this)) {\n+      \/\/ nothing else to try if the frame isn't good\n+      return false;\n+    }\n+    *fr_addr = ret_frame;\n+    return true;\n+  }\n+  \/\/ nothing else to try\n+  return false;\n@@ -50,1 +110,1 @@\n-\/\/ Forte Analyzer AsyncGetCallTrace profiling support is not implemented on Aix\/PPC.\n+\/\/ Forte Analyzer AsyncGetCallTrace profiling support.\n@@ -52,2 +112,1 @@\n-  Unimplemented();\n-  return false;\n+  return pd_get_top_frame_for_profiling(fr_addr, ucontext, isInJava);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/thread_aix_ppc.cpp","additions":66,"deletions":7,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Arm Limited. All rights reserved.\n+ * Copyright (c) 2021, 2022, Arm Limited. All rights reserved.\n@@ -28,11 +28,2 @@\n-#ifdef __APPLE__\n-#include <ptrauth.h>\n-#endif\n-\n-\/\/ Only the PAC instructions in the NOP space can be used. This ensures the\n-\/\/ binaries work on systems without PAC. Write these instructions using their\n-\/\/ alternate \"hint\" instructions to ensure older compilers can still be used.\n-\/\/ For Apple, use the provided interface as this may provide additional\n-\/\/ optimization.\n-\n-#define XPACLRI \"hint #0x7;\"\n+\/\/ OS specific Support for ROP Protection in VM code.\n+\/\/ For more details on PAC see pauth_aarch64.hpp.\n@@ -41,7 +32,2 @@\n-#ifdef __APPLE__\n-  return ptrauth_strip(ptr, ptrauth_key_asib);\n-#else\n-  register address result __asm__(\"x30\") = ptr;\n-  asm (XPACLRI : \"+r\"(result));\n-  return result;\n-#endif\n+  \/\/ No PAC support in BSD as of yet.\n+  return ptr;\n@@ -50,1 +36,9 @@\n-#undef XPACLRI\n+inline address pauth_sign_return_address(address ret_addr, address sp) {\n+  \/\/ No PAC support in BSD as of yet.\n+  return ret_addr;\n+}\n+\n+inline address pauth_authenticate_return_address(address ret_addr, address sp) {\n+  \/\/ No PAC support in BSD as of yet.\n+  return ret_addr;\n+}\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/pauth_bsd_aarch64.inline.hpp","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,3 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  f.set_sp_is_trusted();\n+  return f;\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/thread_bsd_aarch64.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Arm Limited. All rights reserved.\n+ * Copyright (c) 2021, 2022, Arm Limited. All rights reserved.\n@@ -28,3 +28,2 @@\n-\/\/ Only the PAC instructions in the NOP space can be used. This ensures the\n-\/\/ binaries work on systems without PAC. Write these instructions using their\n-\/\/ alternate \"hint\" instructions to ensure older compilers can still be used.\n+\/\/ OS specific Support for ROP Protection in VM code.\n+\/\/ For more details on PAC see pauth_aarch64.hpp.\n@@ -32,1 +31,1 @@\n-#define XPACLRI \"hint #0x7;\"\n+inline bool pauth_ptr_is_raw(address ptr);\n@@ -34,0 +33,10 @@\n+\/\/ Use only the PAC instructions in the NOP space. This ensures the binaries work on systems\n+\/\/ without PAC. Write these instructions using their alternate \"hint\" instructions to ensure older\n+\/\/ compilers can still be used.\n+#define XPACLRI   \"hint #0x7;\"\n+#define PACIA1716 \"hint #0x8;\"\n+#define AUTIA1716 \"hint #0xc;\"\n+\n+\/\/ Strip an address. Use with caution - only if there is no guaranteed way of authenticating the\n+\/\/ value.\n+\/\/\n@@ -40,0 +49,28 @@\n+\/\/ Sign a return value, using the given modifier.\n+\/\/\n+inline address pauth_sign_return_address(address ret_addr, address sp) {\n+  if (VM_Version::use_rop_protection()) {\n+    \/\/ A pointer cannot be double signed.\n+    guarantee(pauth_ptr_is_raw(ret_addr), \"Return address is already signed\");\n+    register address r17 __asm(\"r17\") = ret_addr;\n+    register address r16 __asm(\"r16\") = sp;\n+    asm (PACIA1716 : \"+r\"(r17) : \"r\"(r16));\n+    ret_addr = r17;\n+  }\n+  return ret_addr;\n+}\n+\n+\/\/ Authenticate a return value, using the given modifier.\n+\/\/\n+inline address pauth_authenticate_return_address(address ret_addr, address sp) {\n+  if (VM_Version::use_rop_protection()) {\n+    register address r17 __asm(\"r17\") = ret_addr;\n+    register address r16 __asm(\"r16\") = sp;\n+    asm (AUTIA1716 : \"+r\"(r17) : \"r\"(r16));\n+    ret_addr = r17;\n+    \/\/ Ensure that the pointer authenticated.\n+    guarantee(pauth_ptr_is_raw(ret_addr), \"Return address did not authenticate\");\n+  }\n+  return ret_addr;\n+}\n+\n@@ -41,0 +78,2 @@\n+#undef PACIA1716\n+#undef AUTIA1716\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/pauth_linux_aarch64.inline.hpp","additions":44,"deletions":5,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/\/ Copyright (c) 2015, Red Hat Inc. All rights reserved.\n+\/\/ Copyright (c) 2015, 2022, Red Hat Inc. All rights reserved.\n@@ -32,0 +32,1 @@\n+\thint #0x19      \/\/ paciasp\n@@ -42,0 +43,1 @@\n+\thint #0x1d      \/\/ autiasp\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,3 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  f.set_sp_is_trusted();\n+  return f;\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/thread_linux_aarch64.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -75,0 +75,4 @@\n+#ifndef HWCAP_PACA\n+#define HWCAP_PACA (1 << 30)\n+#endif\n+\n@@ -114,0 +118,1 @@\n+  static_assert(CPU_PACA    == HWCAP_PACA,    \"Flag CPU_PACA must follow Linux HWCAP\");\n@@ -127,1 +132,2 @@\n-      HWCAP_SVE);\n+      HWCAP_SVE     |\n+      HWCAP_PACA);\n@@ -177,2 +183,2 @@\n-    ssize_t read_sz = os::read(fd, buf, buflen);\n-    os::close(fd);\n+    ssize_t read_sz = ::read(fd, buf, buflen);\n+    ::close(fd);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2016, 2019 SAP SE. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022 SAP SE. All rights reserved.\n@@ -61,2 +61,1 @@\n-    frame ret_frame((intptr_t*)uc->uc_mcontext.gregs[15\/*Z_SP*\/],\n-                   (address)uc->uc_mcontext.psw.addr);\n+    address pc = (address)uc->uc_mcontext.psw.addr;\n@@ -64,1 +63,1 @@\n-    if (ret_frame.pc() == NULL) {\n+    if (pc == NULL) {\n@@ -69,0 +68,2 @@\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.gregs[15\/*Z_SP*\/], pc);\n+\n@@ -103,1 +104,1 @@\n-      if (is_in_full_stack((address)istate)) {\n+      if (!is_in_full_stack((address)istate)) {\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/thread_linux_s390.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Arm Limited. All rights reserved.\n+ * Copyright (c) 2021, 2022, Arm Limited. All rights reserved.\n@@ -28,0 +28,3 @@\n+\/\/ OS specific Support for ROP Protection in VM code.\n+\/\/ For more details on PAC see pauth_aarch64.hpp.\n+\n@@ -33,1 +36,4 @@\n-#endif \/\/ OS_CPU_WINDOWS_AARCH64_PAUTH_WINDOWS_AARCH64_INLINE_HPP\n+inline address pauth_sign_return_address(address ret_addr, address sp) {\n+  \/\/ No PAC support in windows as of yet.\n+  return ret_addr;\n+}\n@@ -35,0 +41,6 @@\n+inline address pauth_authenticate_return_address(address ret_addr, address sp) {\n+  \/\/ No PAC support in windows as of yet.\n+  return ret_addr;\n+}\n+\n+#endif \/\/ OS_CPU_WINDOWS_AARCH64_PAUTH_WINDOWS_AARCH64_INLINE_HPP\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/pauth_windows_aarch64.inline.hpp","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2022, Alibaba Group Holding Limited. All rights reserved.\n@@ -32,1 +33,3 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  f.set_sp_is_trusted();\n+  return f;\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/thread_windows_aarch64.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,192 @@\n+\/*\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"adlc.hpp\"\n+\n+void* AdlAllocateHeap(size_t size) {\n+  unsigned char* ptr = (unsigned char*) malloc(size);\n+  if (ptr == NULL && size != 0) {\n+    fprintf(stderr, \"Error: Out of memory in ADLC\\n\"); \/\/ logging can cause crash!\n+    fflush(stderr);\n+    exit(1);\n+  }\n+  return ptr;\n+}\n+\n+void* AdlReAllocateHeap(void* old_ptr, size_t size) {\n+  unsigned char* ptr = (unsigned char*) realloc(old_ptr, size);\n+  if (ptr == NULL && size != 0) {\n+    fprintf(stderr, \"Error: Out of memory in ADLC\\n\"); \/\/ logging can cause crash!\n+    fflush(stderr);\n+    exit(1);\n+  }\n+  return ptr;\n+}\n+\n+void* AdlChunk::operator new(size_t requested_size, size_t length) throw() {\n+  return AdlCHeapObj::operator new(requested_size + length);\n+}\n+\n+void  AdlChunk::operator delete(void* p, size_t length) {\n+  AdlCHeapObj::operator delete(p);\n+}\n+\n+AdlChunk::AdlChunk(size_t length) {\n+  _next = NULL;         \/\/ Chain on the linked list\n+  _len  = length;       \/\/ Save actual size\n+}\n+\n+\/\/------------------------------chop-------------------------------------------\n+void AdlChunk::chop() {\n+  AdlChunk *k = this;\n+  while( k ) {\n+    AdlChunk *tmp = k->_next;\n+    \/\/ clear out this chunk (to detect allocation bugs)\n+    memset(k, 0xBE, k->_len);\n+    free(k);                    \/\/ Free chunk (was malloc'd)\n+    k = tmp;\n+  }\n+}\n+\n+void AdlChunk::next_chop() {\n+  _next->chop();\n+  _next = NULL;\n+}\n+\n+\/\/------------------------------AdlArena------------------------------------------\n+AdlArena::AdlArena( size_t init_size ) {\n+  init_size = (init_size+3) & ~3;\n+  _first = _chunk = new (init_size) AdlChunk(init_size);\n+  _hwm = _chunk->bottom();      \/\/ Save the cached hwm, max\n+  _max = _chunk->top();\n+  set_size_in_bytes(init_size);\n+}\n+\n+AdlArena::AdlArena() {\n+  _first = _chunk = new (AdlChunk::init_size) AdlChunk(AdlChunk::init_size);\n+  _hwm = _chunk->bottom();      \/\/ Save the cached hwm, max\n+  _max = _chunk->top();\n+  set_size_in_bytes(AdlChunk::init_size);\n+}\n+\n+AdlArena::AdlArena( AdlArena *a )\n+: _chunk(a->_chunk), _hwm(a->_hwm), _max(a->_max), _first(a->_first) {\n+  set_size_in_bytes(a->size_in_bytes());\n+}\n+\n+\/\/------------------------------used-------------------------------------------\n+\/\/ Total of all AdlChunks in arena\n+size_t AdlArena::used() const {\n+  size_t sum = _chunk->_len - (_max-_hwm); \/\/ Size leftover in this AdlChunk\n+  AdlChunk *k = _first;\n+  while( k != _chunk) {         \/\/ Whilst have AdlChunks in a row\n+    sum += k->_len;             \/\/ Total size of this AdlChunk\n+    k = k->_next;               \/\/ Bump along to next AdlChunk\n+  }\n+  return sum;                   \/\/ Return total consumed space.\n+}\n+\n+\/\/------------------------------grow-------------------------------------------\n+\/\/ Grow a new AdlChunk\n+void* AdlArena::grow( size_t x ) {\n+  \/\/ Get minimal required size.  Either real big, or even bigger for giant objs\n+  size_t len = max(x, AdlChunk::size);\n+\n+  AdlChunk *k = _chunk;         \/\/ Get filled-up chunk address\n+  _chunk = new (len) AdlChunk(len);\n+\n+  if( k ) k->_next = _chunk;    \/\/ Append new chunk to end of linked list\n+  else _first = _chunk;\n+  _hwm  = _chunk->bottom();     \/\/ Save the cached hwm, max\n+  _max =  _chunk->top();\n+  set_size_in_bytes(size_in_bytes() + len);\n+  void* result = _hwm;\n+  _hwm += x;\n+  return result;\n+}\n+\n+\/\/------------------------------calloc-----------------------------------------\n+\/\/ Allocate zeroed storage in AdlArena\n+void *AdlArena::Acalloc( size_t items, size_t x ) {\n+  size_t z = items*x;   \/\/ Total size needed\n+  void *ptr = Amalloc(z);       \/\/ Get space\n+  memset( ptr, 0, z );          \/\/ Zap space\n+  return ptr;                   \/\/ Return space\n+}\n+\n+\/\/------------------------------realloc----------------------------------------\n+\/\/ Reallocate storage in AdlArena.\n+void *AdlArena::Arealloc( void *old_ptr, size_t old_size, size_t new_size ) {\n+  char *c_old = (char*)old_ptr; \/\/ Handy name\n+  \/\/ Stupid fast special case\n+  if( new_size <= old_size ) {  \/\/ Shrink in-place\n+    if( c_old+old_size == _hwm) \/\/ Attempt to free the excess bytes\n+      _hwm = c_old+new_size;    \/\/ Adjust hwm\n+    return c_old;\n+  }\n+\n+  \/\/ See if we can resize in-place\n+  if( (c_old+old_size == _hwm) &&       \/\/ Adjusting recent thing\n+      (c_old+new_size <= _max) ) {      \/\/ Still fits where it sits\n+    _hwm = c_old+new_size;      \/\/ Adjust hwm\n+    return c_old;               \/\/ Return old pointer\n+  }\n+\n+  \/\/ Oops, got to relocate guts\n+  void *new_ptr = Amalloc(new_size);\n+  memcpy( new_ptr, c_old, old_size );\n+  Afree(c_old,old_size);        \/\/ Mostly done to keep stats accurate\n+  return new_ptr;\n+}\n+\n+\/\/------------------------------reset------------------------------------------\n+\/\/ Reset this AdlArena to empty, and return this AdlArenas guts in a new AdlArena.\n+AdlArena *AdlArena::reset(void) {\n+  AdlArena *a = new AdlArena(this);   \/\/ New empty arena\n+  _first = _chunk = NULL;       \/\/ Normal, new-arena initialization\n+  _hwm = _max = NULL;\n+  return a;                     \/\/ Return AdlArena with guts\n+}\n+\n+\/\/------------------------------contains---------------------------------------\n+\/\/ Determine if pointer belongs to this AdlArena or not.\n+bool AdlArena::contains( const void *ptr ) const {\n+  if( (void*)_chunk->bottom() <= ptr && ptr < (void*)_hwm )\n+    return true;                \/\/ Check for in this chunk\n+  for( AdlChunk *c = _first; c; c = c->_next )\n+    if( (void*)c->bottom() <= ptr && ptr < (void*)c->top())\n+      return true;              \/\/ Check for every chunk in AdlArena\n+  return false;                 \/\/ Not in any AdlChunk, so not in AdlArena\n+}\n+\n+\/\/-----------------------------------------------------------------------------\n+\/\/ CHeapObj\n+\n+void* AdlCHeapObj::operator new(size_t size) throw() {\n+  return (void *) AdlAllocateHeap(size);\n+}\n+\n+void AdlCHeapObj::operator delete(void* p){\n+ free(p);\n+}\n","filename":"src\/hotspot\/share\/adlc\/adlArena.cpp","additions":192,"deletions":0,"binary":false,"changes":192,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_ADLC_ADLARENA_HPP\n+#define SHARE_ADLC_ADLARENA_HPP\n+\n+void* AdlAllocateHeap(size_t size);\n+void* AdlReAllocateHeap(void* old_ptr, size_t size);\n+\n+\/\/ All classes in adlc may be derived\n+\/\/ from one of the following allocation classes:\n+\/\/\n+\/\/ For objects allocated in the C-heap (managed by: malloc & free).\n+\/\/ - CHeapObj\n+\/\/\n+\/\/ For classes used as name spaces.\n+\/\/ - AdlAllStatic\n+\/\/\n+\n+class AdlCHeapObj {\n+ public:\n+  void* operator new(size_t size) throw();\n+  void  operator delete(void* p);\n+  void* new_array(size_t size);\n+};\n+\n+\/\/ Base class for classes that constitute name spaces.\n+\n+class AdlAllStatic {\n+ public:\n+  void* operator new(size_t size) throw();\n+  void operator delete(void* p);\n+};\n+\n+\n+\/\/------------------------------AdlChunk------------------------------------------\n+\/\/ Linked list of raw memory chunks\n+class AdlChunk: public AdlCHeapObj {\n+ private:\n+  \/\/ This ordinary operator delete is needed even though not used, so the\n+  \/\/ below two-argument operator delete will be treated as a placement\n+  \/\/ delete rather than an ordinary sized delete; see C++14 3.7.4.2\/p2.\n+  void operator delete(void* p);\n+ public:\n+  void* operator new(size_t size, size_t length) throw();\n+  void  operator delete(void* p, size_t length);\n+  AdlChunk(size_t length);\n+\n+  enum {\n+      init_size =  1*1024,      \/\/ Size of first chunk\n+      size      = 32*1024       \/\/ Default size of an AdlArena chunk (following the first)\n+  };\n+  AdlChunk*       _next;        \/\/ Next AdlChunk in list\n+  size_t       _len;            \/\/ Size of this AdlChunk\n+\n+  void chop();                  \/\/ Chop this chunk\n+  void next_chop();             \/\/ Chop next chunk\n+\n+  \/\/ Boundaries of data area (possibly unused)\n+  char* bottom() const { return ((char*) this) + sizeof(AdlChunk);  }\n+  char* top()    const { return bottom() + _len; }\n+};\n+\n+\n+\/\/------------------------------AdlArena------------------------------------------\n+\/\/ Fast allocation of memory\n+class AdlArena: public AdlCHeapObj {\n+protected:\n+  friend class ResourceMark;\n+  friend class HandleMark;\n+  friend class NoHandleMark;\n+  AdlChunk *_first;             \/\/ First chunk\n+  AdlChunk *_chunk;             \/\/ current chunk\n+  char *_hwm, *_max;            \/\/ High water mark and max in current chunk\n+  void* grow(size_t x);         \/\/ Get a new AdlChunk of at least size x\n+  size_t _size_in_bytes;          \/\/ Size of arena (used for memory usage tracing)\n+public:\n+  AdlArena();\n+  AdlArena(size_t init_size);\n+  AdlArena(AdlArena *old);\n+  ~AdlArena()                   { _first->chop(); }\n+  char* hwm() const             { return _hwm; }\n+\n+  \/\/ Fast allocate in the arena.  Common case is: pointer test + increment.\n+  void* Amalloc(size_t x) {\n+#ifdef _LP64\n+    x = (x + (8-1)) & ((unsigned)(-8));\n+#else\n+    x = (x + (4-1)) & ((unsigned)(-4));\n+#endif\n+    if (_hwm + x > _max) {\n+      return grow(x);\n+    } else {\n+      char *old = _hwm;\n+      _hwm += x;\n+      return old;\n+    }\n+  }\n+  \/\/ Further assume size is padded out to words\n+  void *AmallocWords(size_t x) {\n+    assert( (x&(sizeof(char*)-1)) == 0, \"misaligned size\" );\n+    if (_hwm + x > _max) {\n+      return grow(x);\n+    } else {\n+      char *old = _hwm;\n+      _hwm += x;\n+      return old;\n+    }\n+  }\n+\n+  \/\/ Fast delete in area.  Common case is: NOP (except for storage reclaimed)\n+  void Afree(void *ptr, size_t size) {\n+    if (((char*)ptr) + size == _hwm) _hwm = (char*)ptr;\n+  }\n+\n+  void *Acalloc( size_t items, size_t x );\n+  void *Arealloc( void *old_ptr, size_t old_size, size_t new_size );\n+\n+  \/\/ Reset this AdlArena to empty, and return this AdlArenas guts in a new AdlArena.\n+  AdlArena *reset(void);\n+\n+  \/\/ Determine if pointer belongs to this AdlArena or not.\n+  bool contains( const void *ptr ) const;\n+\n+  \/\/ Total of all chunks in use (not thread-safe)\n+  size_t used() const;\n+\n+  \/\/ Total # of bytes used\n+  size_t size_in_bytes() const         {  return _size_in_bytes; }\n+  void   set_size_in_bytes(size_t size)  { _size_in_bytes = size;   }\n+};\n+\n+#endif \/\/ SHARE_ADLC_ADLARENA_HPP\n","filename":"src\/hotspot\/share\/adlc\/adlArena.hpp","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"},{"patch":"@@ -96,1 +96,1 @@\n-#include \"arena.hpp\"\n+#include \"adlArena.hpp\"\n","filename":"src\/hotspot\/share\/adlc\/adlc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,1 +214,1 @@\n-          char* buf = (char*) AllocateHeap(strlen(instr->_ident) + 4);\n+          char* buf = (char*) AdlAllocateHeap(strlen(instr->_ident) + 4);\n@@ -2808,1 +2808,1 @@\n-  char* ec_name = (char*) AllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n+  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n@@ -3279,1 +3279,1 @@\n-  char* ec_name = (char*) AllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n+  char* ec_name = (char*) AdlAllocateHeap(strlen(inst._ident) + strlen(prefix) + 1);\n@@ -4412,1 +4412,1 @@\n-      char* result = (char *)AllocateHeap(strlen(location) + strlen(cppBlock) + strlen(end_loc) + 1);\n+      char* result = (char *)AdlAllocateHeap(strlen(location) + strlen(cppBlock) + strlen(end_loc) + 1);\n@@ -4501,1 +4501,1 @@\n-    char* result = (char *)AllocateHeap(strlen(location) + strlen(token2) + strlen(end_loc) + 1);\n+    char* result = (char *)AdlAllocateHeap(strlen(location) + strlen(token2) + strlen(end_loc) + 1);\n@@ -4599,1 +4599,1 @@\n-      char* buf = (char*) AllocateHeap(strlen(param) + 3);\n+      char* buf = (char*) AdlAllocateHeap(strlen(param) + 3);\n@@ -5207,1 +5207,1 @@\n-  char* location = (char *)AllocateHeap(strlen(file) + 100);\n+  char* location = (char *)AdlAllocateHeap(strlen(file) + 100);\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1,192 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"adlc.hpp\"\n-\n-void* AllocateHeap(size_t size) {\n-  unsigned char* ptr = (unsigned char*) malloc(size);\n-  if (ptr == NULL && size != 0) {\n-    fprintf(stderr, \"Error: Out of memory in ADLC\\n\"); \/\/ logging can cause crash!\n-    fflush(stderr);\n-    exit(1);\n-  }\n-  return ptr;\n-}\n-\n-void* ReAllocateHeap(void* old_ptr, size_t size) {\n-  unsigned char* ptr = (unsigned char*) realloc(old_ptr, size);\n-  if (ptr == NULL && size != 0) {\n-    fprintf(stderr, \"Error: Out of memory in ADLC\\n\"); \/\/ logging can cause crash!\n-    fflush(stderr);\n-    exit(1);\n-  }\n-  return ptr;\n-}\n-\n-void* Chunk::operator new(size_t requested_size, size_t length) throw() {\n-  return CHeapObj::operator new(requested_size + length);\n-}\n-\n-void  Chunk::operator delete(void* p, size_t length) {\n-  CHeapObj::operator delete(p);\n-}\n-\n-Chunk::Chunk(size_t length) {\n-  _next = NULL;         \/\/ Chain on the linked list\n-  _len  = length;       \/\/ Save actual size\n-}\n-\n-\/\/------------------------------chop-------------------------------------------\n-void Chunk::chop() {\n-  Chunk *k = this;\n-  while( k ) {\n-    Chunk *tmp = k->_next;\n-    \/\/ clear out this chunk (to detect allocation bugs)\n-    memset(k, 0xBE, k->_len);\n-    free(k);                    \/\/ Free chunk (was malloc'd)\n-    k = tmp;\n-  }\n-}\n-\n-void Chunk::next_chop() {\n-  _next->chop();\n-  _next = NULL;\n-}\n-\n-\/\/------------------------------Arena------------------------------------------\n-Arena::Arena( size_t init_size ) {\n-  init_size = (init_size+3) & ~3;\n-  _first = _chunk = new (init_size) Chunk(init_size);\n-  _hwm = _chunk->bottom();      \/\/ Save the cached hwm, max\n-  _max = _chunk->top();\n-  set_size_in_bytes(init_size);\n-}\n-\n-Arena::Arena() {\n-  _first = _chunk = new (Chunk::init_size) Chunk(Chunk::init_size);\n-  _hwm = _chunk->bottom();      \/\/ Save the cached hwm, max\n-  _max = _chunk->top();\n-  set_size_in_bytes(Chunk::init_size);\n-}\n-\n-Arena::Arena( Arena *a )\n-: _chunk(a->_chunk), _hwm(a->_hwm), _max(a->_max), _first(a->_first) {\n-  set_size_in_bytes(a->size_in_bytes());\n-}\n-\n-\/\/------------------------------used-------------------------------------------\n-\/\/ Total of all Chunks in arena\n-size_t Arena::used() const {\n-  size_t sum = _chunk->_len - (_max-_hwm); \/\/ Size leftover in this Chunk\n-  Chunk *k = _first;\n-  while( k != _chunk) {         \/\/ Whilst have Chunks in a row\n-    sum += k->_len;             \/\/ Total size of this Chunk\n-    k = k->_next;               \/\/ Bump along to next Chunk\n-  }\n-  return sum;                   \/\/ Return total consumed space.\n-}\n-\n-\/\/------------------------------grow-------------------------------------------\n-\/\/ Grow a new Chunk\n-void* Arena::grow( size_t x ) {\n-  \/\/ Get minimal required size.  Either real big, or even bigger for giant objs\n-  size_t len = max(x, Chunk::size);\n-\n-  Chunk *k = _chunk;            \/\/ Get filled-up chunk address\n-  _chunk = new (len) Chunk(len);\n-\n-  if( k ) k->_next = _chunk;    \/\/ Append new chunk to end of linked list\n-  else _first = _chunk;\n-  _hwm  = _chunk->bottom();     \/\/ Save the cached hwm, max\n-  _max =  _chunk->top();\n-  set_size_in_bytes(size_in_bytes() + len);\n-  void* result = _hwm;\n-  _hwm += x;\n-  return result;\n-}\n-\n-\/\/------------------------------calloc-----------------------------------------\n-\/\/ Allocate zeroed storage in Arena\n-void *Arena::Acalloc( size_t items, size_t x ) {\n-  size_t z = items*x;   \/\/ Total size needed\n-  void *ptr = Amalloc(z);       \/\/ Get space\n-  memset( ptr, 0, z );          \/\/ Zap space\n-  return ptr;                   \/\/ Return space\n-}\n-\n-\/\/------------------------------realloc----------------------------------------\n-\/\/ Reallocate storage in Arena.\n-void *Arena::Arealloc( void *old_ptr, size_t old_size, size_t new_size ) {\n-  char *c_old = (char*)old_ptr; \/\/ Handy name\n-  \/\/ Stupid fast special case\n-  if( new_size <= old_size ) {  \/\/ Shrink in-place\n-    if( c_old+old_size == _hwm) \/\/ Attempt to free the excess bytes\n-      _hwm = c_old+new_size;    \/\/ Adjust hwm\n-    return c_old;\n-  }\n-\n-  \/\/ See if we can resize in-place\n-  if( (c_old+old_size == _hwm) &&       \/\/ Adjusting recent thing\n-      (c_old+new_size <= _max) ) {      \/\/ Still fits where it sits\n-    _hwm = c_old+new_size;      \/\/ Adjust hwm\n-    return c_old;               \/\/ Return old pointer\n-  }\n-\n-  \/\/ Oops, got to relocate guts\n-  void *new_ptr = Amalloc(new_size);\n-  memcpy( new_ptr, c_old, old_size );\n-  Afree(c_old,old_size);        \/\/ Mostly done to keep stats accurate\n-  return new_ptr;\n-}\n-\n-\/\/------------------------------reset------------------------------------------\n-\/\/ Reset this Arena to empty, and return this Arenas guts in a new Arena.\n-Arena *Arena::reset(void) {\n-  Arena *a = new Arena(this);   \/\/ New empty arena\n-  _first = _chunk = NULL;       \/\/ Normal, new-arena initialization\n-  _hwm = _max = NULL;\n-  return a;                     \/\/ Return Arena with guts\n-}\n-\n-\/\/------------------------------contains---------------------------------------\n-\/\/ Determine if pointer belongs to this Arena or not.\n-bool Arena::contains( const void *ptr ) const {\n-  if( (void*)_chunk->bottom() <= ptr && ptr < (void*)_hwm )\n-    return true;                \/\/ Check for in this chunk\n-  for( Chunk *c = _first; c; c = c->_next )\n-    if( (void*)c->bottom() <= ptr && ptr < (void*)c->top())\n-      return true;              \/\/ Check for every chunk in Arena\n-  return false;                 \/\/ Not in any Chunk, so not in Arena\n-}\n-\n-\/\/-----------------------------------------------------------------------------\n-\/\/ CHeapObj\n-\n-void* CHeapObj::operator new(size_t size) throw() {\n-  return (void *) AllocateHeap(size);\n-}\n-\n-void CHeapObj::operator delete(void* p){\n- free(p);\n-}\n","filename":"src\/hotspot\/share\/adlc\/arena.cpp","additions":0,"deletions":192,"binary":false,"changes":192,"status":"deleted"},{"patch":"@@ -1,154 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_ADLC_ARENA_HPP\n-#define SHARE_ADLC_ARENA_HPP\n-\n-void* AllocateHeap(size_t size);\n-void* ReAllocateHeap(void* old_ptr, size_t size);\n-\n-\/\/ All classes in adlc may be derived\n-\/\/ from one of the following allocation classes:\n-\/\/\n-\/\/ For objects allocated in the C-heap (managed by: malloc & free).\n-\/\/ - CHeapObj\n-\/\/\n-\/\/ For classes used as name spaces.\n-\/\/ - AllStatic\n-\/\/\n-\n-class CHeapObj {\n- public:\n-  void* operator new(size_t size) throw();\n-  void  operator delete(void* p);\n-  void* new_array(size_t size);\n-};\n-\n-\/\/ Base class for classes that constitute name spaces.\n-\n-class AllStatic {\n- public:\n-  void* operator new(size_t size) throw();\n-  void operator delete(void* p);\n-};\n-\n-\n-\/\/------------------------------Chunk------------------------------------------\n-\/\/ Linked list of raw memory chunks\n-class Chunk: public CHeapObj {\n- private:\n-  \/\/ This ordinary operator delete is needed even though not used, so the\n-  \/\/ below two-argument operator delete will be treated as a placement\n-  \/\/ delete rather than an ordinary sized delete; see C++14 3.7.4.2\/p2.\n-  void operator delete(void* p);\n- public:\n-  void* operator new(size_t size, size_t length) throw();\n-  void  operator delete(void* p, size_t length);\n-  Chunk(size_t length);\n-\n-  enum {\n-      init_size =  1*1024,      \/\/ Size of first chunk\n-      size      = 32*1024       \/\/ Default size of an Arena chunk (following the first)\n-  };\n-  Chunk*       _next;           \/\/ Next Chunk in list\n-  size_t       _len;            \/\/ Size of this Chunk\n-\n-  void chop();                  \/\/ Chop this chunk\n-  void next_chop();             \/\/ Chop next chunk\n-\n-  \/\/ Boundaries of data area (possibly unused)\n-  char* bottom() const { return ((char*) this) + sizeof(Chunk);  }\n-  char* top()    const { return bottom() + _len; }\n-};\n-\n-\n-\/\/------------------------------Arena------------------------------------------\n-\/\/ Fast allocation of memory\n-class Arena: public CHeapObj {\n-protected:\n-  friend class ResourceMark;\n-  friend class HandleMark;\n-  friend class NoHandleMark;\n-  Chunk *_first;                \/\/ First chunk\n-  Chunk *_chunk;                \/\/ current chunk\n-  char *_hwm, *_max;            \/\/ High water mark and max in current chunk\n-  void* grow(size_t x);         \/\/ Get a new Chunk of at least size x\n-  size_t _size_in_bytes;          \/\/ Size of arena (used for memory usage tracing)\n-public:\n-  Arena();\n-  Arena(size_t init_size);\n-  Arena(Arena *old);\n-  ~Arena()                      { _first->chop(); }\n-  char* hwm() const             { return _hwm; }\n-\n-  \/\/ Fast allocate in the arena.  Common case is: pointer test + increment.\n-  void* Amalloc(size_t x) {\n-#ifdef _LP64\n-    x = (x + (8-1)) & ((unsigned)(-8));\n-#else\n-    x = (x + (4-1)) & ((unsigned)(-4));\n-#endif\n-    if (_hwm + x > _max) {\n-      return grow(x);\n-    } else {\n-      char *old = _hwm;\n-      _hwm += x;\n-      return old;\n-    }\n-  }\n-  \/\/ Further assume size is padded out to words\n-  void *AmallocWords(size_t x) {\n-    assert( (x&(sizeof(char*)-1)) == 0, \"misaligned size\" );\n-    if (_hwm + x > _max) {\n-      return grow(x);\n-    } else {\n-      char *old = _hwm;\n-      _hwm += x;\n-      return old;\n-    }\n-  }\n-\n-  \/\/ Fast delete in area.  Common case is: NOP (except for storage reclaimed)\n-  void Afree(void *ptr, size_t size) {\n-    if (((char*)ptr) + size == _hwm) _hwm = (char*)ptr;\n-  }\n-\n-  void *Acalloc( size_t items, size_t x );\n-  void *Arealloc( void *old_ptr, size_t old_size, size_t new_size );\n-\n-  \/\/ Reset this Arena to empty, and return this Arenas guts in a new Arena.\n-  Arena *reset(void);\n-\n-  \/\/ Determine if pointer belongs to this Arena or not.\n-  bool contains( const void *ptr ) const;\n-\n-  \/\/ Total of all chunks in use (not thread-safe)\n-  size_t used() const;\n-\n-  \/\/ Total # of bytes used\n-  size_t size_in_bytes() const         {  return _size_in_bytes; }\n-  void   set_size_in_bytes(size_t size)  { _size_in_bytes = size;   }\n-};\n-\n-#endif \/\/ SHARE_ADLC_ARENA_HPP\n","filename":"src\/hotspot\/share\/adlc\/arena.hpp","additions":0,"deletions":154,"binary":false,"changes":154,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-  ProductionState(Arena *arena) : _production(cmpstr, hashstr, arena) { initialize(); };\n+  ProductionState(AdlArena *arena) : _production(cmpstr, hashstr, arena) { initialize(); };\n@@ -820,1 +820,1 @@\n-ExprDict::ExprDict( CmpKey cmp, Hash hash, Arena *arena )\n+ExprDict::ExprDict( CmpKey cmp, Hash hash, AdlArena *arena )\n","filename":"src\/hotspot\/share\/adlc\/dfa.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-Dict::Dict(CmpKey initcmp, Hash inithash, Arena *arena) : _hash(inithash), _cmp(initcmp), _arena(arena) {\n+Dict::Dict(CmpKey initcmp, Hash inithash, AdlArena *arena) : _hash(inithash), _cmp(initcmp), _arena(arena) {\n","filename":"src\/hotspot\/share\/adlc\/dict2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  class Arena *_arena;          \/\/ Where to draw storage from\n+  class AdlArena *_arena;       \/\/ Where to draw storage from\n@@ -59,1 +59,1 @@\n-  Dict( CmpKey cmp, Hash hash, Arena *arena );\n+  Dict( CmpKey cmp, Hash hash, AdlArena *arena );\n","filename":"src\/hotspot\/share\/adlc\/dict2.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,3 @@\n-Arena  *Form::arena = Form::generate_arena(); \/\/  = Form::generate_arena();\n-Arena *Form::generate_arena() {\n-  return (new Arena);\n+AdlArena  *Form::arena = Form::generate_arena(); \/\/  = Form::generate_arena();\n+AdlArena *Form::generate_arena() {\n+  return (new AdlArena);\n@@ -43,1 +43,1 @@\n-  _names = (const char**) AllocateHeap(_max*sizeof(char*));\n+  _names = (const char**) AdlAllocateHeap(_max*sizeof(char*));\n@@ -52,1 +52,1 @@\n-    _names = (const char**) ReAllocateHeap(_names, (_max *=2)*sizeof(char*));\n+    _names = (const char**) AdlReAllocateHeap(_names, (_max *=2)*sizeof(char*));\n@@ -315,1 +315,1 @@\n-FormDict::FormDict( CmpKey cmp, Hash hash, Arena *arena )\n+FormDict::FormDict( CmpKey cmp, Hash hash, AdlArena *arena )\n","filename":"src\/hotspot\/share\/adlc\/forms.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-  FormDict( CmpKey cmp, Hash hash, Arena *arena );\n+  FormDict( CmpKey cmp, Hash hash, AdlArena *arena );\n@@ -122,1 +122,1 @@\n-  static Arena  *arena;            \/\/ arena used by forms\n+  static AdlArena  *arena;         \/\/ arena used by forms\n@@ -124,1 +124,1 @@\n-  static Arena  *generate_arena(); \/\/ allocate arena used by forms\n+  static AdlArena  *generate_arena(); \/\/ allocate arena used by forms\n@@ -576,1 +576,1 @@\n-  ExprDict( CmpKey cmp, Hash hash, Arena *arena );\n+  ExprDict( CmpKey cmp, Hash hash, AdlArena *arena );\n","filename":"src\/hotspot\/share\/adlc\/forms.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -209,1 +209,1 @@\n-  \/\/ Chunk and register mask are determined by the register number\n+  \/\/ AdlChunk and register mask are determined by the register number\n","filename":"src\/hotspot\/share\/adlc\/formsopt.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1369,1 +1369,1 @@\n-    uniq_idx = (uint*) AllocateHeap(sizeof(uint) * _uniq_idx_length);\n+    uniq_idx = (uint*) AdlAllocateHeap(sizeof(uint) * _uniq_idx_length);\n@@ -3479,1 +3479,1 @@\n-  subtree = (char *)AllocateHeap(len);\n+  subtree = (char *)AdlAllocateHeap(len);\n@@ -3929,1 +3929,1 @@\n-  char* buf = (char*) AllocateHeap(strlen(instr_ident) + 4);\n+  char* buf = (char*) AdlAllocateHeap(strlen(instr_ident) + 4);\n@@ -4237,0 +4237,1 @@\n+    \"VectorUCastB2X\", \"VectorUCastS2X\", \"VectorUCastI2X\",\n","filename":"src\/hotspot\/share\/adlc\/formssel.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -432,0 +432,25 @@\n+  address array_constant(BasicType bt, GrowableArray<jvalue>* c) {\n+    CodeSection* c1 = _code_section;\n+    int len = c->length();\n+    int size = type2aelembytes(bt) * len;\n+    address ptr = start_a_const(size, MIN2(round_up_power_of_2(size), 8));\n+    if (ptr != NULL) {\n+      for (int i = 0; i < len; i++) {\n+        jvalue e = c->at(i);\n+        switch(bt) {\n+          case T_BOOLEAN: emit_int8(e.z);   break;\n+          case T_BYTE:    emit_int8(e.b);   break;\n+          case T_CHAR:    emit_int16(e.c);  break;\n+          case T_SHORT:   emit_int16(e.s);  break;\n+          case T_INT:     emit_int32(e.i);  break;\n+          case T_LONG:    emit_int64(e.j);  break;\n+          case T_FLOAT:   emit_float(e.f);  break;\n+          case T_DOUBLE:  emit_double(e.d); break;\n+          default:\n+            ShouldNotReachHere();\n+        }\n+      }\n+      end_a_const(c1);\n+    }\n+    return ptr;\n+  }\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-\/\/ use the debugging suport below. No virtual functions are used for efficiency.\n+\/\/ use the debugging support below. No virtual functions are used for efficiency.\n@@ -90,2 +90,0 @@\n-#define REGISTER_DEFINITION(type, name)\n-\n","filename":"src\/hotspot\/share\/asm\/register.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"classfile\/javaClasses.hpp\"\n@@ -919,5 +920,1 @@\n-  if (con.basic_type() == T_ILLEGAL) {\n-    \/\/ FIXME: an unresolved Dynamic constant can get here,\n-    \/\/ and that should not terminate the whole compilation.\n-    BAILOUT(\"could not resolve a constant\");\n-  } else {\n+  if (con.is_valid()) {\n@@ -927,11 +924,10 @@\n-      case T_BOOLEAN: t = new IntConstant     (con.as_boolean()); break;\n-      case T_BYTE   : t = new IntConstant     (con.as_byte   ()); break;\n-      case T_CHAR   : t = new IntConstant     (con.as_char   ()); break;\n-      case T_SHORT  : t = new IntConstant     (con.as_short  ()); break;\n-      case T_INT    : t = new IntConstant     (con.as_int    ()); break;\n-      case T_LONG   : t = new LongConstant    (con.as_long   ()); break;\n-      case T_FLOAT  : t = new FloatConstant   (con.as_float  ()); break;\n-      case T_DOUBLE : t = new DoubleConstant  (con.as_double ()); break;\n-      case T_ARRAY  : t = new ArrayConstant   (con.as_object ()->as_array   ()); break;\n-      case T_OBJECT :\n-       {\n+      case T_BOOLEAN: t = new IntConstant   (con.as_boolean()); break;\n+      case T_BYTE   : t = new IntConstant   (con.as_byte   ()); break;\n+      case T_CHAR   : t = new IntConstant   (con.as_char   ()); break;\n+      case T_SHORT  : t = new IntConstant   (con.as_short  ()); break;\n+      case T_INT    : t = new IntConstant   (con.as_int    ()); break;\n+      case T_LONG   : t = new LongConstant  (con.as_long   ()); break;\n+      case T_FLOAT  : t = new FloatConstant (con.as_float  ()); break;\n+      case T_DOUBLE : t = new DoubleConstant(con.as_double ()); break;\n+      case T_ARRAY  : \/\/ fall-through\n+      case T_OBJECT : {\n@@ -939,4 +935,2 @@\n-        if (!obj->is_loaded()\n-            || (PatchALot && obj->klass() != ciEnv::current()->String_klass())) {\n-          \/\/ A Class, MethodType, MethodHandle, or String.\n-          \/\/ Unloaded condy nodes show up as T_ILLEGAL, above.\n+        if (!obj->is_loaded() || (PatchALot && (obj->is_null_object() || obj->klass() != ciEnv::current()->String_klass()))) {\n+          \/\/ A Class, MethodType, MethodHandle, Dynamic, or String.\n@@ -948,1 +942,1 @@\n-          if (obj->is_null_object())\n+          if (obj->is_null_object()) {\n@@ -950,1 +944,1 @@\n-          else if (obj->is_array())\n+          } else if (obj->is_array()) {\n@@ -952,1 +946,1 @@\n-          else\n+          } else {\n@@ -954,0 +948,1 @@\n+          }\n@@ -956,2 +951,2 @@\n-       }\n-      default       : ShouldNotReachHere();\n+      }\n+      default: ShouldNotReachHere();\n@@ -965,0 +960,18 @@\n+\n+    \/\/ Unbox the value at runtime, if needed.\n+    \/\/ ConstantDynamic entry can be of a primitive type, but it is cached in boxed form.\n+    if (patch_state != NULL) {\n+      int index = stream()->get_constant_pool_index();\n+      BasicType type = stream()->get_basic_type_for_constant_at(index);\n+      if (is_java_primitive(type)) {\n+        ciInstanceKlass* box_klass = ciEnv::current()->get_box_klass_for_primitive_type(type);\n+        assert(box_klass->is_loaded(), \"sanity\");\n+        int offset = java_lang_boxing_object::value_offset(type);\n+        ciField* value_field = box_klass->get_field_by_offset(offset, false \/*is_static*\/);\n+        x = new LoadField(append(x), offset, value_field, false \/*is_static*\/, patch_state, false \/*needs_patching*\/);\n+        t = as_ValueType(type);\n+      } else {\n+        assert(is_reference_type(type), \"not a reference: %s\", type2name(type));\n+      }\n+    }\n+\n@@ -966,0 +979,2 @@\n+  } else {\n+    BAILOUT(\"could not resolve a constant\");\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":40,"deletions":25,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-  output()->print(\"%s\", name);\n+  output()->print(\"%s(\", name);\n","filename":"src\/hotspot\/share\/c1\/c1_InstructionPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+      case Bytecodes::_ldc2_w:\n","filename":"src\/hotspot\/share\/c1\/c1_LIRAssembler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -368,1 +368,6 @@\n-  return instruction->dominator_depth() < loop_header->dominator_depth();\n+  for (BlockBegin *d = loop_header->dominator(); d != NULL; d = d->dominator()) {\n+    if (d == instruction->block()) {\n+      return true;\n+    }\n+  }\n+  return false;\n","filename":"src\/hotspot\/share\/c1\/c1_RangeCheckElimination.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1012,0 +1012,1 @@\n+      case Bytecodes::_ldc2_w:\n@@ -1156,1 +1157,0 @@\n-              assert(mirror() != NULL, \"klass not set\");\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -43,0 +44,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -267,1 +269,1 @@\n-      (intptr_t)CompressedOops::encode_not_null(*o));\n+      UseCompressedOops ? (intptr_t)CompressedOops::encode_not_null(*o) : (intptr_t)((void*)(*o)));\n@@ -309,3 +311,9 @@\n-  narrowOop o = CompressedOops::narrow_oop_cast(nextPtr());\n-  if (CompressedOops::is_null(o) || !HeapShared::is_fully_available()) {\n-    *p = NULL;\n+  if (UseCompressedOops) {\n+    narrowOop o = CompressedOops::narrow_oop_cast(nextPtr());\n+    if (CompressedOops::is_null(o) || !HeapShared::is_fully_available()) {\n+      *p = NULL;\n+    } else {\n+      assert(HeapShared::can_use(), \"sanity\");\n+      assert(HeapShared::is_fully_available(), \"must be\");\n+      *p = HeapShared::decode_from_archive(o);\n+    }\n@@ -313,3 +321,7 @@\n-    assert(HeapShared::can_use(), \"sanity\");\n-    assert(HeapShared::is_fully_available(), \"must be\");\n-    *p = HeapShared::decode_from_archive(o);\n+    intptr_t dumptime_oop = nextPtr();\n+    if (dumptime_oop == 0 || !HeapShared::is_fully_available()) {\n+      *p = NULL;\n+    } else {\n+      intptr_t runtime_oop = dumptime_oop + HeapShared::runtime_delta();\n+      *p = cast_to_oop(runtime_oop);\n+    }\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,5 +62,0 @@\n-  \/\/ filter out java\/lang\/invoke\/BoundMethodHandle$Species....\n-  if (cfs != NULL && strcmp(cfs->source(), \"_ClassSpecializer_generateConcreteSpeciesCode\") == 0) {\n-    return;\n-  }\n-\n@@ -110,1 +105,0 @@\n-  ClassLoaderData* loader_data = k->class_loader_data();\n@@ -112,2 +106,14 @@\n-  if (!SystemDictionaryShared::is_builtin_loader(loader_data)) {\n-    if (cfs == NULL || strncmp(cfs->source(), \"file:\", 5) != 0) {\n+  ClassLoaderData* loader_data = k->class_loader_data();\n+  bool is_builtin_loader = SystemDictionaryShared::is_builtin_loader(loader_data);\n+  if (!is_builtin_loader) {\n+    \/\/ class may be loaded from shared archive\n+    if (!k->is_shared()) {\n+      if (cfs == nullptr || cfs->source() == nullptr) {\n+        \/\/ CDS static dump only handles unregistered class with known source.\n+        return;\n+      }\n+      if (strncmp(cfs->source(), \"file:\", 5) != 0) {\n+        return;\n+      }\n+    } else {\n+      \/\/ Shared unregistered classes are skipped since their real source are not recorded in shared space.\n@@ -121,0 +127,4 @@\n+  \/\/ filter out java\/lang\/invoke\/BoundMethodHandle$Species...\n+  if (cfs != nullptr && cfs->source() != nullptr && strcmp(cfs->source(), \"_ClassSpecializer_generateConcreteSpeciesCode\") == 0) {\n+    return;\n+  }\n@@ -148,1 +158,1 @@\n-  if (!SystemDictionaryShared::is_builtin_loader(loader_data)) {\n+  if (!is_builtin_loader) {\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,2 +138,1 @@\n-    \/\/ _klass may become NULL due to DynamicArchiveBuilder::set_to_null\n-    return _excluded || _failed_verification || _klass == NULL;\n+    return _excluded || _failed_verification;\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -378,2 +378,1 @@\n-      vm_exit_during_initialization(\"-XX:ArchiveClassesAtExit\" __THEMSG, NULL);\n-#undef __THEMSG\n+      warning(\"-XX:ArchiveClassesAtExit\" __THEMSG);\n@@ -381,0 +380,2 @@\n+#undef __THEMSG\n+    DynamicDumpSharedSpaces = false;\n@@ -387,1 +388,1 @@\n-  MetaspaceShared::link_shared_classes(THREAD);\n+  MetaspaceShared::link_shared_classes(false\/*not from jcmd*\/, THREAD);\n@@ -403,1 +404,1 @@\n-  MetaspaceShared::link_shared_classes(CHECK);\n+  MetaspaceShared::link_shared_classes(true\/*from jcmd*\/, CHECK);\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n@@ -248,2 +248,7 @@\n-    _heap_begin = CompressedOops::begin();\n-    _heap_end = CompressedOops::end();\n+    if (UseCompressedOops) {\n+      _heap_begin = CompressedOops::begin();\n+      _heap_end = CompressedOops::end();\n+    } else {\n+      _heap_begin = (address)G1CollectedHeap::heap()->reserved().start();\n+      _heap_end = (address)G1CollectedHeap::heap()->reserved().end();\n+    }\n@@ -319,0 +324,1 @@\n+  st->print_cr(\"- heap_begin:                     \" INTPTR_FORMAT, p2i(_heap_begin));\n@@ -770,0 +776,15 @@\n+\/\/ Returns true if a path within the paths exists and has non-zero size.\n+bool FileMapInfo::check_paths_existence(const char* paths) {\n+  ClasspathStream cp_stream(paths);\n+  bool exist = false;\n+  struct stat st;\n+  while (cp_stream.has_next()) {\n+    const char* path = cp_stream.get_next();\n+    if (os::stat(path, &st) == 0 && st.st_size > 0) {\n+      exist = true;\n+      break;\n+    }\n+  }\n+  return exist;\n+}\n+\n@@ -853,1 +874,6 @@\n-      mismatch = true;\n+      ResourceMark rm;\n+      if (check_paths_existence(rp)) {\n+        \/\/ If a path exists in the runtime boot paths, it is considered a mismatch\n+        \/\/ since there's no boot path specified during dump time.\n+        mismatch = true;\n+      }\n@@ -940,0 +966,11 @@\n+bool FileMapInfo::check_module_paths() {\n+  const char* rp = Arguments::get_property(\"jdk.module.path\");\n+  int num_paths = Arguments::num_archives(rp);\n+  if (num_paths != header()->num_module_paths()) {\n+    return false;\n+  }\n+  ResourceMark rm;\n+  GrowableArray<const char*>* rp_array = create_path_array(rp);\n+  return check_paths(header()->app_module_paths_start_index(), num_paths, rp_array);\n+}\n+\n@@ -962,3 +999,5 @@\n-      DynamicDumpSharedSpaces = false;\n-      warning(\n-        \"Dynamic archiving is disabled because base layer archive has module path\");\n+      if (!check_module_paths()) {\n+        DynamicDumpSharedSpaces = false;\n+        warning(\n+          \"Dynamic archiving is disabled because base layer archive has a different module path\");\n+      }\n@@ -1073,1 +1112,1 @@\n-      os::close(_fd);\n+      ::close(_fd);\n@@ -1095,1 +1134,1 @@\n-    size_t n = os::read(fd, (void*)&gen_header, (unsigned int)size);\n+    size_t n = ::read(fd, (void*)&gen_header, (unsigned int)size);\n@@ -1128,1 +1167,1 @@\n-    n = os::read(fd, (void*)_header, (unsigned int)size);\n+    n = ::read(fd, (void*)_header, (unsigned int)size);\n@@ -1282,1 +1321,1 @@\n-  size_t n = os::read(fd, (void*)_header, (unsigned int)size);\n+  size_t n = ::read(fd, (void*)_header, (unsigned int)size);\n@@ -1474,1 +1513,5 @@\n-    mapping_offset = (size_t)CompressedOops::encode_not_null(cast_to_oop(base));\n+    if (UseCompressedOops) {\n+      mapping_offset = (size_t)CompressedOops::encode_not_null(cast_to_oop(base));\n+    } else {\n+      mapping_offset = requested_base - (char*)G1CollectedHeap::heap()->reserved().start();\n+    }\n@@ -1653,1 +1696,1 @@\n-    if (os::close(_fd) < 0) {\n+    if (::close(_fd) < 0) {\n@@ -1781,1 +1824,1 @@\n-    \/\/ can't mmap into a ReservedSpace, so we just os::read() the data. We're going to patch all the\n+    \/\/ can't mmap into a ReservedSpace, so we just ::read() the data. We're going to patch all the\n@@ -1887,1 +1930,1 @@\n-  size_t n = os::read(_fd, buffer, (unsigned int)count);\n+  size_t n = ::read(_fd, buffer, (unsigned int)count);\n@@ -1996,1 +2039,4 @@\n-                p2i(CompressedOops::begin()), p2i(CompressedOops::end()));\n+                UseCompressedOops ? p2i(CompressedOops::begin()) :\n+                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved().start()) : 0L,\n+                UseCompressedOops ? p2i(CompressedOops::end()) :\n+                                    UseG1GC ? p2i((address)G1CollectedHeap::heap()->reserved().end()) : 0L);\n@@ -2006,0 +2052,20 @@\n+\/\/ The address where the bottom of this shared heap region should be mapped\n+\/\/ at runtime\n+address FileMapInfo::heap_region_runtime_start_address(FileMapRegion* spc) {\n+  assert(UseSharedSpaces, \"runtime only\");\n+  spc->assert_is_heap_region();\n+  if (UseCompressedOops) {\n+    return start_address_as_decoded_from_archive(spc);\n+  } else {\n+    assert(is_aligned(spc->mapping_offset(), sizeof(HeapWord)), \"must be\");\n+    return header()->heap_begin() + spc->mapping_offset() + HeapShared::runtime_delta();\n+  }\n+}\n+\n+void FileMapInfo::set_shared_heap_runtime_delta(ptrdiff_t delta) {\n+  if (UseCompressedOops) {\n+    HeapShared::init_narrow_oop_decoding(narrow_oop_base() + delta, narrow_oop_shift());\n+  } else {\n+    HeapShared::set_runtime_delta(delta);\n+  }\n+}\n@@ -2028,9 +2094,23 @@\n-    MemRegion range = get_heap_regions_range_with_current_oop_encoding_mode();\n-    if (!CompressedOops::is_in(range)) {\n-      log_info(cds)(\"CDS heap data needs to be relocated because\");\n-      log_info(cds)(\"the desired range \" PTR_FORMAT \" - \"  PTR_FORMAT, p2i(range.start()), p2i(range.end()));\n-      log_info(cds)(\"is outside of the heap \" PTR_FORMAT \" - \"  PTR_FORMAT, p2i(CompressedOops::begin()), p2i(CompressedOops::end()));\n-      _heap_pointers_need_patching = true;\n-    } else if (header()->heap_end() != CompressedOops::end()) {\n-      log_info(cds)(\"CDS heap data needs to be relocated to the end of the runtime heap to reduce fragmentation\");\n-      _heap_pointers_need_patching = true;\n+    if (UseCompressedOops) {\n+      MemRegion range = get_heap_regions_range_with_current_oop_encoding_mode();\n+      if (!CompressedOops::is_in(range)) {\n+        log_info(cds)(\"CDS heap data needs to be relocated because\");\n+        log_info(cds)(\"the desired range \" PTR_FORMAT \" - \"  PTR_FORMAT, p2i(range.start()), p2i(range.end()));\n+        log_info(cds)(\"is outside of the heap \" PTR_FORMAT \" - \"  PTR_FORMAT, p2i(CompressedOops::begin()), p2i(CompressedOops::end()));\n+        _heap_pointers_need_patching = true;\n+      } else if (header()->heap_end() != CompressedOops::end()) {\n+        log_info(cds)(\"CDS heap data needs to be relocated to the end of the runtime heap to reduce fragmentation\");\n+        _heap_pointers_need_patching = true;\n+      }\n+    } else {\n+      MemRegion range((HeapWord*)header()->heap_begin(), (HeapWord*)header()->heap_end());\n+      if (!G1CollectedHeap::heap()->reserved().contains(range)) {\n+        log_info(cds)(\"CDS heap data needs to be relocated because\");\n+        log_info(cds)(\"the desired range \" PTR_FORMAT \" - \"  PTR_FORMAT, p2i(range.start()), p2i(range.end()));\n+        log_info(cds)(\"is outside of the heap \" PTR_FORMAT \" - \"  PTR_FORMAT,\n+            p2i((address)G1CollectedHeap::heap()->reserved().start()), p2i((address)G1CollectedHeap::heap()->reserved().end()));\n+        _heap_pointers_need_patching = true;\n+      } else if (header()->heap_end() != (address)G1CollectedHeap::heap()->reserved().end()) {\n+        log_info(cds)(\"CDS heap data needs to be relocated to the end of the runtime heap to reduce fragmentation\");\n+        _heap_pointers_need_patching = true;\n+      }\n@@ -2043,1 +2123,1 @@\n-    \/\/   [      |archived heap regions| ]         runtime heap end ------v\n+    \/\/   [      |archived heap regions| ]         run time heap end -----v\n@@ -2045,0 +2125,3 @@\n+    \/\/          ^\n+    \/\/          D                                ^\n+    \/\/                                           R\n@@ -2048,2 +2131,2 @@\n-    \/\/ At run time, they may not be inside the heap, so we move them so\n-    \/\/ that they are now near the top of the runtime time. This can be done by\n+    \/\/ At run time, if the heap ends at a different address, we need to\n+    \/\/ move them near to top of the run time heap. This can be done by\n@@ -2051,0 +2134,7 @@\n+    \/\/\n+    \/\/ Also: D = bottom of a heap region at dump time\n+    \/\/       R = bottom of a heap region at run time\n+    \/\/\n+    \/\/ FileMapRegion* spc = ...;\n+    \/\/   address D = header()->heap_begin() + spc->mapping_offset();\n+    \/\/   address R = D + delta;\n@@ -2052,1 +2142,2 @@\n-    address runtime_heap_end = CompressedOops::end();\n+    address runtime_heap_end = UseCompressedOops ? CompressedOops::end() :\n+                                                   (address)G1CollectedHeap::heap()->reserved().end();\n@@ -2057,1 +2148,2 @@\n-  HeapShared::init_narrow_oop_decoding(narrow_oop_base() + delta, narrow_oop_shift());\n+\n+  set_shared_heap_runtime_delta(delta);\n@@ -2060,1 +2152,2 @@\n-  address relocated_closed_heap_region_bottom = start_address_as_decoded_from_archive(si);\n+  address relocated_closed_heap_region_bottom = heap_region_runtime_start_address(si);\n+\n@@ -2071,1 +2164,2 @@\n-    HeapShared::init_narrow_oop_decoding(narrow_oop_base() + delta, narrow_oop_shift());\n+    set_shared_heap_runtime_delta(delta);\n+    relocated_closed_heap_region_bottom = heap_region_runtime_start_address(si);\n@@ -2073,1 +2167,0 @@\n-    relocated_closed_heap_region_bottom = start_address_as_decoded_from_archive(si);\n@@ -2078,0 +2171,9 @@\n+  if (_heap_pointers_need_patching) {\n+    char* bitmap_base = map_bitmap_region();\n+    if (bitmap_base == NULL) {\n+      log_info(cds)(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n+      _heap_pointers_need_patching = false;\n+      return;\n+    }\n+  }\n+\n@@ -2131,1 +2233,1 @@\n-      HeapWord* start = (HeapWord*)start_address_as_decoded_from_archive(si);\n+      HeapWord* start = (HeapWord*)heap_region_runtime_start_address(si);\n@@ -2207,3 +2309,1 @@\n-  if (bitmap_base == NULL) {\n-    return;\n-  }\n+  assert(bitmap_base != NULL, \"must have already been mapped\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":137,"deletions":37,"binary":false,"changes":174,"status":"modified"},{"patch":"@@ -354,2 +354,0 @@\n-  FileMapHeader *header() const       { return _header; }\n-\n@@ -357,0 +355,1 @@\n+  FileMapHeader *header() const       { return _header; }\n@@ -495,0 +494,1 @@\n+  bool check_module_paths();\n@@ -557,0 +557,1 @@\n+  bool  check_paths_existence(const char* paths) NOT_CDS_RETURN_(false);\n@@ -570,0 +571,2 @@\n+  address heap_region_runtime_start_address(FileMapRegion* spc) NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  void set_shared_heap_runtime_delta(ptrdiff_t delta) NOT_CDS_JAVA_HEAP_RETURN;\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+\/\/ Support for loaded heap.\n@@ -91,0 +92,4 @@\n+\n+\/\/ Suport for mapped heap (!UseCompressedOops only)\n+ptrdiff_t HeapShared::_runtime_delta = 0;\n+\n@@ -365,1 +370,4 @@\n-                  p2i(CompressedOops::begin()), p2i(CompressedOops::end()));\n+                   UseCompressedOops ? p2i(CompressedOops::begin()) :\n+                                       p2i((address)G1CollectedHeap::heap()->reserved().start()),\n+                   UseCompressedOops ? p2i(CompressedOops::end()) :\n+                                       p2i((address)G1CollectedHeap::heap()->reserved().end()));\n@@ -661,1 +669,0 @@\n-\n@@ -1403,1 +1410,1 @@\n-  narrowOop* _start;\n+  void* _start;\n@@ -1408,1 +1415,1 @@\n-  FindEmbeddedNonNullPointers(narrowOop* start, BitMap* oopmap)\n+  FindEmbeddedNonNullPointers(void* start, BitMap* oopmap)\n@@ -1415,1 +1422,1 @@\n-      size_t idx = p - _start;\n+      size_t idx = p - (narrowOop*)_start;\n@@ -1421,2 +1428,8 @@\n-  virtual void do_oop(oop *p) {\n-    ShouldNotReachHere();\n+  virtual void do_oop(oop* p) {\n+    _num_total_oops ++;\n+    if ((*p) != NULL) {\n+      size_t idx = p - (oop*)_start;\n+      _oopmap->set_bit(idx);\n+    } else {\n+      _num_null_oops ++;\n+    }\n@@ -1429,2 +1442,1 @@\n-  assert(UseCompressedOops, \"must be\");\n-  size_t num_bits = region.byte_size() \/ sizeof(narrowOop);\n+  size_t num_bits = region.byte_size() \/ (UseCompressedOops ? sizeof(narrowOop) : sizeof(oop));\n@@ -1435,1 +1447,1 @@\n-  FindEmbeddedNonNullPointers finder((narrowOop*)p, &oopmap);\n+  FindEmbeddedNonNullPointers finder((void*)p, &oopmap);\n@@ -1456,1 +1468,1 @@\n-class PatchEmbeddedPointers: public BitMapClosure {\n+class PatchCompressedEmbeddedPointers: public BitMapClosure {\n@@ -1460,1 +1472,1 @@\n-  PatchEmbeddedPointers(narrowOop* start) : _start(start) {}\n+  PatchCompressedEmbeddedPointers(narrowOop* start) : _start(start) {}\n@@ -1472,0 +1484,16 @@\n+class PatchUncompressedEmbeddedPointers: public BitMapClosure {\n+  oop* _start;\n+\n+ public:\n+  PatchUncompressedEmbeddedPointers(oop* start) : _start(start) {}\n+\n+  bool do_bit(size_t offset) {\n+    oop* p = _start + offset;\n+    intptr_t dumptime_oop = (intptr_t)((void*)*p);\n+    assert(dumptime_oop != 0, \"null oops should have been filtered out at dump time\");\n+    intptr_t runtime_oop = dumptime_oop + HeapShared::runtime_delta();\n+    RawAccess<IS_NOT_NULL>::oop_store(p, cast_to_oop(runtime_oop));\n+    return true;\n+  }\n+};\n+\n@@ -1484,2 +1512,7 @@\n-  PatchEmbeddedPointers patcher((narrowOop*)region.start());\n-  bm.iterate(&patcher);\n+  if (UseCompressedOops) {\n+    PatchCompressedEmbeddedPointers patcher((narrowOop*)region.start());\n+    bm.iterate(&patcher);\n+  } else {\n+    PatchUncompressedEmbeddedPointers patcher((oop*)region.start());\n+    bm.iterate(&patcher);\n+  }\n@@ -1649,0 +1682,4 @@\n+  if (bitmap_base == 0) {\n+    _loading_failed = true;\n+    return false; \/\/ OOM or CRC error\n+  }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":51,"deletions":14,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-      return (UseG1GC && UseCompressedOops && UseCompressedClassPointers);\n+      return (UseG1GC && UseCompressedClassPointers);\n@@ -172,1 +172,1 @@\n-    CDS_JAVA_HEAP_ONLY(return (UseG1GC && UseCompressedOops && UseCompressedClassPointers);)\n+    CDS_JAVA_HEAP_ONLY(return (UseG1GC && UseCompressedClassPointers);)\n@@ -300,1 +300,1 @@\n-  \/\/ Used by decode_from_archive\n+  \/\/ UseCompressedOops only: Used by decode_from_archive\n@@ -304,0 +304,3 @@\n+  \/\/ !UseCompressedOops only: used to relocate pointers to the archived objects\n+  static ptrdiff_t _runtime_delta;\n+\n@@ -421,0 +424,6 @@\n+\n+  static void set_runtime_delta(ptrdiff_t delta) {\n+    assert(!UseCompressedOops, \"must be\");\n+    _runtime_delta = delta;\n+  }\n+\n@@ -424,0 +433,6 @@\n+  static ptrdiff_t runtime_delta() {\n+    assert(!UseCompressedOops, \"must be\");\n+    CDS_JAVA_HEAP_ONLY(return _runtime_delta;)\n+    NOT_CDS_JAVA_HEAP_RETURN_(0L);\n+  }\n+\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,6 +70,0 @@\n-\n-void LambdaFormInvokers::append_filtered(char* line) {\n-  if (should_be_archived(line)) {\n-      append(line);\n-  }\n-}\n@@ -183,0 +177,9 @@\n+\/\/ check if a class name is a species\n+bool is_a_species(const char* species_name) {\n+  log_info(cds)(\"Checking class %s\", species_name);\n+  if (strstr(species_name, \"java\/lang\/invoke\/BoundMethodHandle$Species_\") != nullptr) {\n+    return true;\n+  }\n+  return false;\n+}\n+\n@@ -191,0 +194,6 @@\n+  \/\/ the species is shared in base archive, skip it.\n+  if (klass->is_regenerated() && is_a_species(name)) {\n+    log_info(cds)(\"Skip regenerating for shared  %s\", name);\n+    return;\n+  }\n+\n@@ -214,2 +223,2 @@\n-  \/\/ exclude the existing class from dump\n-  SystemDictionaryShared::set_excluded(InstanceKlass::cast(klass));\n+  result->set_regenerated();  \/\/ mark for regenerated\n+  SystemDictionaryShared::set_excluded(InstanceKlass::cast(klass)); \/\/ exclude the existing class from dump\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,0 @@\n-  static void append_filtered(char* line);\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+#include \"runtime\/globals_extension.hpp\"\n@@ -645,2 +646,4 @@\n-void MetaspaceShared::link_shared_classes(TRAPS) {\n-  LambdaFormInvokers::regenerate_holder_classes(CHECK);\n+void MetaspaceShared::link_shared_classes(bool jcmd_request, TRAPS) {\n+  if (!jcmd_request) {\n+    LambdaFormInvokers::regenerate_holder_classes(CHECK);\n+  }\n@@ -710,0 +713,24 @@\n+#if INCLUDE_CDS_JAVA_HEAP && defined(_LP64)\n+void MetaspaceShared::adjust_heap_sizes_for_dumping() {\n+  if (!DumpSharedSpaces || UseCompressedOops) {\n+    return;\n+  }\n+  \/\/ CDS heap dumping requires all string oops to have an offset\n+  \/\/ from the heap bottom that can be encoded in 32-bit.\n+  julong max_heap_size = (julong)(4 * G);\n+\n+  if (MinHeapSize > max_heap_size) {\n+    log_debug(cds)(\"Setting MinHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", MinHeapSize\/M);\n+    FLAG_SET_ERGO(MinHeapSize, max_heap_size);\n+  }\n+  if (InitialHeapSize > max_heap_size) {\n+    log_debug(cds)(\"Setting InitialHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", InitialHeapSize\/M);\n+    FLAG_SET_ERGO(InitialHeapSize, max_heap_size);\n+  }\n+  if (MaxHeapSize > max_heap_size) {\n+    log_debug(cds)(\"Setting MaxHeapSize to 4G for CDS dumping, original size = \" SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+    FLAG_SET_ERGO(MaxHeapSize, max_heap_size);\n+  }\n+}\n+#endif \/\/ INCLUDE_CDS_JAVA_HEAP && _LP64\n+\n@@ -778,1 +805,1 @@\n-  link_shared_classes(CHECK);\n+  link_shared_classes(false\/*not from jcmd*\/, CHECK);\n@@ -835,5 +862,4 @@\n-      \"Archived java heap is not supported as UseG1GC, \"\n-      \"UseCompressedOops and UseCompressedClassPointers are required.\"\n-      \"Current settings: UseG1GC=%s, UseCompressedOops=%s, UseCompressedClassPointers=%s.\",\n-      BOOL_TO_STR(UseG1GC), BOOL_TO_STR(UseCompressedOops),\n-      BOOL_TO_STR(UseCompressedClassPointers));\n+      \"Archived java heap is not supported as UseG1GC \"\n+      \"and UseCompressedClassPointers are required.\"\n+      \"Current settings: UseG1GC=%s, UseCompressedClassPointers=%s.\",\n+      BOOL_TO_STR(UseG1GC), BOOL_TO_STR(UseCompressedClassPointers));\n@@ -958,0 +984,3 @@\n+    if (DynamicDumpSharedSpaces) {\n+      warning(\"-XX:ArchiveClassesAtExit is unsupported when base CDS archive is not loaded. Run with -Xlog:cds for more info.\");\n+    }\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":37,"deletions":8,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,3 @@\n+#ifdef _LP64\n+  static void adjust_heap_sizes_for_dumping() NOT_CDS_JAVA_HEAP_RETURN;\n+#endif\n@@ -136,1 +139,1 @@\n-  static void link_shared_classes(TRAPS) NOT_CDS_RETURN;\n+  static void link_shared_classes(bool jcmd_request, TRAPS) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -419,2 +419,2 @@\n-        constantTag tag = s.get_constant_pool_tag(index);\n-        if (tag.is_long() || tag.is_double()) {\n+        BasicType con_bt = s.get_basic_type_for_constant_at(index);\n+        if (con_bt == T_LONG || con_bt == T_DOUBLE) {\n@@ -423,1 +423,1 @@\n-        } else if (tag.basic_type() == T_OBJECT) {\n+        } else if (con_bt == T_OBJECT) {\n","filename":"src\/hotspot\/share\/ci\/bcEscapeAnalyzer.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -130,0 +130,11 @@\n+\n+  bool is_loaded() const {\n+    if (is_valid()) {\n+      if (is_reference_type(basic_type())) {\n+        return as_object()->is_loaded();\n+      } else {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/ci\/ciConstant.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -395,0 +395,17 @@\n+ciInstanceKlass* ciEnv::get_box_klass_for_primitive_type(BasicType type) {\n+  switch (type) {\n+    case T_BOOLEAN: return Boolean_klass();\n+    case T_BYTE   : return Byte_klass();\n+    case T_CHAR   : return Character_klass();\n+    case T_SHORT  : return Short_klass();\n+    case T_INT    : return Integer_klass();\n+    case T_LONG   : return Long_klass();\n+    case T_FLOAT  : return Float_klass();\n+    case T_DOUBLE : return Double_klass();\n+\n+    default:\n+      assert(false, \"not a primitive: %s\", type2name(type));\n+      return NULL;\n+  }\n+}\n+\n@@ -506,7 +523,0 @@\n-  \/\/ setup up the proper type to return on OOM\n-  ciKlass* fail_type;\n-  if (sym->char_at(0) == JVM_SIGNATURE_ARRAY) {\n-    fail_type = _unloaded_ciobjarrayklass;\n-  } else {\n-    fail_type = _unloaded_ciinstance_klass;\n-  }\n@@ -594,1 +604,0 @@\n-  EXCEPTION_CONTEXT;\n@@ -602,1 +611,1 @@\n-    klass =  ConstantPool::klass_at_if_loaded(cpool, index);\n+    klass = ConstantPool::klass_at_if_loaded(cpool, index);\n@@ -661,0 +670,57 @@\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciEnv::unbox_primitive_value\n+\/\/\n+\/\/ Unbox a primitive and return it as a ciConstant.\n+ciConstant ciEnv::unbox_primitive_value(ciObject* cibox, BasicType expected_bt) {\n+  jvalue value;\n+  BasicType bt = java_lang_boxing_object::get_value(cibox->get_oop(), &value);\n+  if (bt != expected_bt && expected_bt != T_ILLEGAL) {\n+    assert(false, \"type mismatch: %s vs %s\", type2name(expected_bt), cibox->klass()->name()->as_klass_external_name());\n+    return ciConstant();\n+  }\n+  switch (bt) {\n+    case T_BOOLEAN: return ciConstant(bt, value.z);\n+    case T_BYTE:    return ciConstant(bt, value.b);\n+    case T_SHORT:   return ciConstant(bt, value.s);\n+    case T_CHAR:    return ciConstant(bt, value.c);\n+    case T_INT:     return ciConstant(bt, value.i);\n+    case T_LONG:    return ciConstant(value.j);\n+    case T_FLOAT:   return ciConstant(value.f);\n+    case T_DOUBLE:  return ciConstant(value.d);\n+\n+    default:\n+      assert(false, \"not a primitive type: %s\", type2name(bt));\n+      return ciConstant();\n+  }\n+}\n+\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciEnv::get_resolved_constant\n+\/\/\n+ciConstant ciEnv::get_resolved_constant(const constantPoolHandle& cpool, int obj_index) {\n+  assert(obj_index >= 0, \"\");\n+  oop obj = cpool->resolved_references()->obj_at(obj_index);\n+  if (obj == NULL) {\n+    \/\/ Unresolved constant. It is resolved when the corresponding slot contains a non-null reference.\n+    \/\/ Null constant is represented as a sentinel (non-null) value.\n+    return ciConstant();\n+  } else if (obj == Universe::the_null_sentinel()) {\n+    return ciConstant(T_OBJECT, get_object(NULL));\n+  } else {\n+    ciObject* ciobj = get_object(obj);\n+    if (ciobj->is_array()) {\n+      return ciConstant(T_ARRAY, ciobj);\n+    } else {\n+      int cp_index = cpool->object_to_cp_index(obj_index);\n+      BasicType bt = cpool->basic_type_for_constant_at(cp_index);\n+      if (is_java_primitive(bt)) {\n+        assert(cpool->tag_at(cp_index).is_dynamic_constant(), \"sanity\");\n+        return unbox_primitive_value(ciobj, bt);\n+      } else {\n+        assert(ciobj->is_instance(), \"should be an instance\");\n+        return ciConstant(T_OBJECT, ciobj);\n+      }\n+    }\n+  }\n+}\n+\n@@ -666,1 +732,1 @@\n-                                             int pool_index, int cache_index,\n+                                             int index, int obj_index,\n@@ -669,39 +735,4 @@\n-  EXCEPTION_CONTEXT;\n-  int index = pool_index;\n-  if (cache_index >= 0) {\n-    assert(index < 0, \"only one kind of index at a time\");\n-    index = cpool->object_to_cp_index(cache_index);\n-    oop obj = cpool->resolved_references()->obj_at(cache_index);\n-    if (obj != NULL) {\n-      if (obj == Universe::the_null_sentinel()) {\n-        return ciConstant(T_OBJECT, get_object(NULL));\n-      }\n-      BasicType bt = T_OBJECT;\n-      if (cpool->tag_at(index).is_dynamic_constant())\n-        bt = Signature::basic_type(cpool->uncached_signature_ref_at(index));\n-      if (is_reference_type(bt)) {\n-      } else {\n-        \/\/ we have to unbox the primitive value\n-        if (!is_java_primitive(bt))  return ciConstant();\n-        jvalue value;\n-        BasicType bt2 = java_lang_boxing_object::get_value(obj, &value);\n-        assert(bt2 == bt, \"\");\n-        switch (bt2) {\n-        case T_DOUBLE:  return ciConstant(value.d);\n-        case T_FLOAT:   return ciConstant(value.f);\n-        case T_LONG:    return ciConstant(value.j);\n-        case T_INT:     return ciConstant(bt2, value.i);\n-        case T_SHORT:   return ciConstant(bt2, value.s);\n-        case T_BYTE:    return ciConstant(bt2, value.b);\n-        case T_CHAR:    return ciConstant(bt2, value.c);\n-        case T_BOOLEAN: return ciConstant(bt2, value.z);\n-        default:  return ciConstant();\n-        }\n-      }\n-      ciObject* ciobj = get_object(obj);\n-      if (ciobj->is_array()) {\n-        return ciConstant(T_ARRAY, ciobj);\n-      } else {\n-        assert(ciobj->is_instance(), \"should be an instance\");\n-        return ciConstant(T_OBJECT, ciobj);\n-      }\n+  if (obj_index >= 0) {\n+    ciConstant con = get_resolved_constant(cpool, obj_index);\n+    if (con.is_valid()) {\n+      return con;\n@@ -720,3 +751,3 @@\n-    oop string = NULL;\n-    assert(cache_index >= 0, \"should have a cache index\");\n-    string = cpool->string_at(index, cache_index, THREAD);\n+    EXCEPTION_CONTEXT;\n+    assert(obj_index >= 0, \"should have an object index\");\n+    oop string = cpool->string_at(index, obj_index, THREAD);\n@@ -728,7 +759,2 @@\n-    ciObject* constant = get_object(string);\n-    if (constant->is_array()) {\n-      return ciConstant(T_ARRAY, constant);\n-    } else {\n-      assert (constant->is_instance(), \"must be an instance, or not? \");\n-      return ciConstant(T_OBJECT, constant);\n-    }\n+    ciInstance* constant = get_object(string)->as_instance();\n+    return ciConstant(T_OBJECT, constant);\n@@ -736,1 +762,1 @@\n-    return ciConstant();\n+    return ciConstant(T_OBJECT, get_unloaded_klass_mirror(NULL));\n@@ -738,1 +764,0 @@\n-    \/\/ 4881222: allow ldc to take a class type\n@@ -740,7 +765,0 @@\n-    if (HAS_PENDING_EXCEPTION) {\n-      CLEAR_PENDING_EXCEPTION;\n-      record_out_of_memory_failure();\n-      return ciConstant();\n-    }\n-    assert (klass->is_instance_klass() || klass->is_array_klass(),\n-            \"must be an instance or array klass \");\n@@ -748,1 +766,1 @@\n-  } else if (tag.is_method_type()) {\n+  } else if (tag.is_method_type() || tag.is_method_type_in_error()) {\n@@ -750,0 +768,1 @@\n+    assert(obj_index >= 0, \"should have an object index\");\n@@ -753,1 +772,1 @@\n-  } else if (tag.is_method_handle()) {\n+  } else if (tag.is_method_handle() || tag.is_method_handle_in_error()) {\n@@ -755,0 +774,1 @@\n+    assert(obj_index >= 0, \"should have an object index\");\n@@ -762,2 +782,3 @@\n-  } else if (tag.is_dynamic_constant()) {\n-    return ciConstant();\n+  } else if (tag.is_dynamic_constant() || tag.is_dynamic_constant_in_error()) {\n+    assert(obj_index >= 0, \"should have an object index\");\n+    return ciConstant(T_OBJECT, unloaded_ciinstance()); \/\/ unresolved dynamic constant\n@@ -765,1 +786,1 @@\n-    ShouldNotReachHere();\n+    assert(false, \"unknown tag: %d (%s)\", tag.value(), tag.internal_name());\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":94,"deletions":73,"binary":false,"changes":167,"status":"modified"},{"patch":"@@ -168,0 +168,3 @@\n+  ciConstant unbox_primitive_value(ciObject* cibox, BasicType expected_bt = T_ILLEGAL);\n+  ciConstant get_resolved_constant(const constantPoolHandle& cpool, int obj_index);\n+\n@@ -432,0 +435,2 @@\n+  ciInstanceKlass* get_box_klass_for_primitive_type(BasicType type);\n+\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -558,1 +558,1 @@\n-ciInstance* ciObjectFactory::get_unloaded_klass_mirror(ciKlass*  type) {\n+ciInstance* ciObjectFactory::get_unloaded_klass_mirror(ciKlass* type) {\n@@ -573,1 +573,1 @@\n-  if (ciEnv::_MethodHandle_klass == NULL)  return NULL;\n+  assert(ciEnv::_MethodHandle_klass != NULL, \"\");\n@@ -584,1 +584,1 @@\n-  if (ciEnv::_MethodType_klass == NULL)  return NULL;\n+  assert(ciEnv::_MethodType_klass != NULL, \"\");\n@@ -589,1 +589,1 @@\n-  if (ciEnv::_Object_klass == NULL)  return NULL;\n+  assert(ciEnv::_Object_klass != NULL, \"\");\n","filename":"src\/hotspot\/share\/ci\/ciObjectFactory.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -233,0 +233,2 @@\n+  VM_ENTRY_MARK;\n+  constantPoolHandle cpool(THREAD, _method->get_Method()->constants());\n@@ -237,1 +239,6 @@\n-    pool_index = -1;\n+    pool_index = cpool->object_to_cp_index(cache_index);\n+  } else if (cpool->tag_at(pool_index).is_dynamic_constant() ||\n+             cpool->tag_at(pool_index).is_dynamic_constant_in_error()) {\n+    \/\/ Condy with primitive type is not quickened, so the index into resolved reference cache should be reconstructed.\n+    assert(is_java_primitive(cpool->basic_type_for_constant_at(pool_index)), \"not quickened\");\n+    cache_index = cpool->cp_to_object_index(pool_index);\n@@ -239,2 +246,0 @@\n-  VM_ENTRY_MARK;\n-  constantPoolHandle cpool(THREAD, _method->get_Method()->constants());\n@@ -252,0 +257,8 @@\n+}\n+\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciBytecodeStream::get_basic_type_for_constant_at\n+\/\/\n+BasicType ciBytecodeStream::get_basic_type_for_constant_at(int index) const {\n+  VM_ENTRY_MARK;\n+  return _method->get_Method()->constants()->basic_type_for_constant_at(index);\n","filename":"src\/hotspot\/share\/ci\/ciStreams.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-  \/\/ Does this instruction contain an index which refes into the CP cache?\n+  \/\/ Does this instruction contain an index which refers into the CP cache?\n@@ -229,1 +229,1 @@\n-  ciConstant get_constant();\n+  ciConstant  get_constant();\n@@ -231,0 +231,1 @@\n+  BasicType   get_basic_type_for_constant_at(int index) const;\n@@ -238,3 +239,11 @@\n-  bool is_unresolved_klass_in_error() const {\n-    constantTag tag = get_constant_pool_tag(get_klass_index());\n-    return tag.is_unresolved_klass_in_error();\n+  bool is_in_error() const {\n+    assert(cur_bc() == Bytecodes::_ldc    ||\n+           cur_bc() == Bytecodes::_ldc_w  ||\n+           cur_bc() == Bytecodes::_ldc2_w, \"not supported: %s\", Bytecodes::name(cur_bc()));\n+\n+    int index = get_constant_pool_index();\n+    constantTag tag = get_constant_pool_tag(index);\n+    return tag.is_unresolved_klass_in_error() ||\n+           tag.is_method_handle_in_error()    ||\n+           tag.is_method_type_in_error()      ||\n+           tag.is_dynamic_constant_in_error();\n","filename":"src\/hotspot\/share\/ci\/ciStreams.hpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -723,0 +723,5 @@\n+  if (str->is_in_error()) {\n+    trap(str, NULL, Deoptimization::make_trap_request(Deoptimization::Reason_unhandled,\n+                                                      Deoptimization::Action_none));\n+    return;\n+  }\n@@ -725,1 +730,2 @@\n-    BasicType basic_type = con.basic_type();\n+    int index = str->get_constant_pool_index();\n+    BasicType basic_type = str->get_basic_type_for_constant_at(index);\n@@ -735,0 +741,2 @@\n+      assert(basic_type == con.basic_type() || con.basic_type() == T_OBJECT,\n+             \"not a boxed form: %s vs %s\", type2name(basic_type), type2name(con.basic_type()));\n@@ -738,8 +746,3 @@\n-    if (str->is_unresolved_klass_in_error()) {\n-      trap(str, NULL, Deoptimization::make_trap_request(Deoptimization::Reason_unhandled,\n-                                                        Deoptimization::Action_none));\n-    } else {\n-      \/\/ OutOfMemoryError in the CI while loading constant\n-      push_null();\n-      outer()->record_failure(\"ldc did not link\");\n-    }\n+    \/\/ OutOfMemoryError in the CI while loading a String constant.\n+    push_null();\n+    outer()->record_failure(\"ldc did not link\");\n@@ -2176,1 +2179,1 @@\n-      return str.is_unresolved_klass_in_error();\n+      return str.is_in_error();\n@@ -2205,1 +2208,1 @@\n-bool ciTypeFlow::clone_loop_heads(Loop* lp, StateVector* temp_vector, JsrSet* temp_set) {\n+bool ciTypeFlow::clone_loop_heads(StateVector* temp_vector, JsrSet* temp_set) {\n@@ -2208,1 +2211,1 @@\n-    lp = iter.current();\n+    Loop* lp = iter.current();\n@@ -2453,0 +2456,96 @@\n+\/\/ If the tail is a branch to the head, retrieve how many times that path was taken from profiling\n+int ciTypeFlow::profiled_count(ciTypeFlow::Loop* loop) {\n+  ciMethodData* methodData = method()->method_data();\n+  if (!methodData->is_mature()) {\n+    return 0;\n+  }\n+  ciTypeFlow::Block* tail = loop->tail();\n+  if (tail->control() == -1) {\n+    return 0;\n+  }\n+\n+  ciProfileData* data = methodData->bci_to_data(tail->control());\n+\n+  if (data == NULL || !data->is_JumpData()) {\n+    return 0;\n+  }\n+\n+  ciBytecodeStream iter(method());\n+  iter.reset_to_bci(tail->control());\n+\n+  bool is_an_if = false;\n+  bool wide = false;\n+  Bytecodes::Code bc = iter.next();\n+  switch (bc) {\n+    case Bytecodes::_ifeq:\n+    case Bytecodes::_ifne:\n+    case Bytecodes::_iflt:\n+    case Bytecodes::_ifge:\n+    case Bytecodes::_ifgt:\n+    case Bytecodes::_ifle:\n+    case Bytecodes::_if_icmpeq:\n+    case Bytecodes::_if_icmpne:\n+    case Bytecodes::_if_icmplt:\n+    case Bytecodes::_if_icmpge:\n+    case Bytecodes::_if_icmpgt:\n+    case Bytecodes::_if_icmple:\n+    case Bytecodes::_if_acmpeq:\n+    case Bytecodes::_if_acmpne:\n+    case Bytecodes::_ifnull:\n+    case Bytecodes::_ifnonnull:\n+      is_an_if = true;\n+      break;\n+    case Bytecodes::_goto_w:\n+    case Bytecodes::_jsr_w:\n+      wide = true;\n+      break;\n+    case Bytecodes::_goto:\n+    case Bytecodes::_jsr:\n+      break;\n+    default:\n+      fatal(\" invalid bytecode: %s\", Bytecodes::name(iter.cur_bc()));\n+  }\n+\n+  GrowableArray<ciTypeFlow::Block*>* succs = tail->successors();\n+\n+  if (!is_an_if) {\n+    assert(((wide ? iter.get_far_dest() : iter.get_dest()) == loop->head()->start()) == (succs->at(ciTypeFlow::GOTO_TARGET) == loop->head()), \"branch should lead to loop head\");\n+    if (succs->at(ciTypeFlow::GOTO_TARGET) == loop->head()) {\n+      return method()->scale_count(data->as_JumpData()->taken());\n+    }\n+  } else {\n+    assert((iter.get_dest() == loop->head()->start()) == (succs->at(ciTypeFlow::IF_TAKEN) == loop->head()), \"bytecode and CFG not consistent\");\n+    assert((tail->limit() == loop->head()->start()) == (succs->at(ciTypeFlow::IF_NOT_TAKEN) == loop->head()), \"bytecode and CFG not consistent\");\n+    if (succs->at(ciTypeFlow::IF_TAKEN) == loop->head()) {\n+      return method()->scale_count(data->as_JumpData()->taken());\n+    } else if (succs->at(ciTypeFlow::IF_NOT_TAKEN) == loop->head()) {\n+      return method()->scale_count(data->as_BranchData()->not_taken());\n+    }\n+  }\n+\n+  return 0;\n+}\n+\n+bool ciTypeFlow::Loop::at_insertion_point(Loop* lp, Loop* current) {\n+  int lp_pre_order = lp->head()->pre_order();\n+  if (current->head()->pre_order() < lp_pre_order) {\n+    return true;\n+  } else if (current->head()->pre_order() > lp_pre_order) {\n+    return false;\n+  }\n+  \/\/ In the case of a shared head, make the most frequent head\/tail (as reported by profiling) the inner loop\n+  if (current->head() == lp->head()) {\n+    int lp_count = outer()->profiled_count(lp);\n+    int current_count = outer()->profiled_count(current);\n+    if (current_count < lp_count) {\n+      return true;\n+    } else if (current_count > lp_count) {\n+      return false;\n+    }\n+  }\n+  if (current->tail()->pre_order() > lp->tail()->pre_order()) {\n+    return true;\n+  }\n+  return false;\n+}\n+\n@@ -2470,1 +2569,1 @@\n-      if (current == lp)\n+      if (current == lp) {\n@@ -2472,4 +2571,2 @@\n-      if (current->head()->pre_order() < lp_pre_order)\n-        break;\n-      if (current->head()->pre_order() == lp_pre_order &&\n-          current->tail()->pre_order() > lp->tail()->pre_order()) {\n+      }\n+      if (at_insertion_point(lp, current)) {\n@@ -2735,1 +2832,1 @@\n-    bool changed = clone_loop_heads(loop_tree_root(), temp_vector, temp_set);\n+    bool changed = clone_loop_heads(temp_vector, temp_set);\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":115,"deletions":18,"binary":false,"changes":133,"status":"modified"},{"patch":"@@ -720,0 +720,3 @@\n+    ciTypeFlow* outer() const { return head()->outer(); }\n+    bool at_insertion_point(Loop* lp, Loop* current);\n+\n@@ -798,1 +801,1 @@\n-  bool clone_loop_heads(Loop* lp, StateVector* temp_vector, JsrSet* temp_set);\n+  bool clone_loop_heads(StateVector* temp_vector, JsrSet* temp_set);\n@@ -916,0 +919,2 @@\n+  int profiled_count(ciTypeFlow::Loop* loop);\n+\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/altHashing.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,2 @@\n-int ClassLoader::_libzip_loaded = 0;\n+int    ClassLoader::_libzip_loaded          = 0;\n+void*  ClassLoader::_zip_handle             = NULL;\n@@ -256,1 +257,1 @@\n-      size_t num_read = os::read(file_handle, (char*) buffer, st.st_size);\n+      size_t num_read = ::read(file_handle, (char*) buffer, st.st_size);\n@@ -258,1 +259,1 @@\n-      os::close(file_handle);\n+      ::close(file_handle);\n@@ -945,1 +946,0 @@\n-  void* handle = NULL;\n@@ -947,1 +947,1 @@\n-    handle = os::dll_load(path, ebuf, sizeof ebuf);\n+    _zip_handle = os::dll_load(path, ebuf, sizeof ebuf);\n@@ -949,1 +949,1 @@\n-  if (handle == NULL) {\n+  if (_zip_handle == NULL) {\n@@ -953,6 +953,6 @@\n-  ZipOpen = CAST_TO_FN_PTR(ZipOpen_t, dll_lookup(handle, \"ZIP_Open\", path));\n-  ZipClose = CAST_TO_FN_PTR(ZipClose_t, dll_lookup(handle, \"ZIP_Close\", path));\n-  FindEntry = CAST_TO_FN_PTR(FindEntry_t, dll_lookup(handle, \"ZIP_FindEntry\", path));\n-  ReadEntry = CAST_TO_FN_PTR(ReadEntry_t, dll_lookup(handle, \"ZIP_ReadEntry\", path));\n-  GetNextEntry = CAST_TO_FN_PTR(GetNextEntry_t, dll_lookup(handle, \"ZIP_GetNextEntry\", path));\n-  Crc32 = CAST_TO_FN_PTR(Crc32_t, dll_lookup(handle, \"ZIP_CRC32\", path));\n+  ZipOpen = CAST_TO_FN_PTR(ZipOpen_t, dll_lookup(_zip_handle, \"ZIP_Open\", path));\n+  ZipClose = CAST_TO_FN_PTR(ZipClose_t, dll_lookup(_zip_handle, \"ZIP_Close\", path));\n+  FindEntry = CAST_TO_FN_PTR(FindEntry_t, dll_lookup(_zip_handle, \"ZIP_FindEntry\", path));\n+  ReadEntry = CAST_TO_FN_PTR(ReadEntry_t, dll_lookup(_zip_handle, \"ZIP_ReadEntry\", path));\n+  GetNextEntry = CAST_TO_FN_PTR(GetNextEntry_t, dll_lookup(_zip_handle, \"ZIP_GetNextEntry\", path));\n+  Crc32 = CAST_TO_FN_PTR(Crc32_t, dll_lookup(_zip_handle, \"ZIP_CRC32\", path));\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,0 +232,3 @@\n+\n+  \/\/ cache the zip library handle\n+  static void* _zip_handle;\n@@ -256,1 +259,0 @@\n-  static inline void load_zip_library_if_needed();\n@@ -259,0 +261,2 @@\n+  static inline void load_zip_library_if_needed();\n+  static void* zip_library_handle() { return _zip_handle; }\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -4090,2 +4090,6 @@\n-  for (int i = 0, limit = pts->length(); i < limit; i++) {\n-    java_lang_Class::print_signature(pts->obj_at(i), st);\n+  if (pts != NULL) {\n+    for (int i = 0, limit = pts->length(); i < limit; i++) {\n+      java_lang_Class::print_signature(pts->obj_at(i), st);\n+    }\n+  } else {\n+    st->print(\"NULL\");\n@@ -4094,1 +4098,6 @@\n-  java_lang_Class::print_signature(rtype(mt), st);\n+  oop rt = rtype(mt);\n+  if (rt != NULL) {\n+    java_lang_Class::print_signature(rt, st);\n+  } else {\n+    st->print(\"NULL\");\n+  }\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/klassFactory.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/modules.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/filemap.hpp\"\n@@ -58,0 +59,3 @@\n+#if INCLUDE_G1GC\n+#include \"gc\/g1\/g1CollectedHeap.hpp\"\n+#endif\n@@ -70,3 +74,12 @@\n-  assert(sizeof(narrowOop) == sizeof(offset), \"must be\");\n-  narrowOop v = CompressedOops::narrow_oop_cast(offset);\n-  return HeapShared::decode_from_archive(v);\n+  if (UseCompressedOops) {\n+    assert(sizeof(narrowOop) == sizeof(offset), \"must be\");\n+    narrowOop v = CompressedOops::narrow_oop_cast(offset);\n+    return HeapShared::decode_from_archive(v);\n+  } else {\n+    intptr_t dumptime_oop = (uintptr_t)offset;\n+    assert(dumptime_oop != 0, \"null strings cannot be interned\");\n+    intptr_t runtime_oop = dumptime_oop +\n+                           (intptr_t)FileMapInfo::current_info()->header()->heap_begin() +\n+                           (intptr_t)HeapShared::runtime_delta();\n+    return (oop)cast_to_oop(runtime_oop);\n+  }\n@@ -749,0 +762,10 @@\n+private:\n+  u4 compute_delta(oop s) {\n+    HeapWord* start = G1CollectedHeap::heap()->reserved().start();\n+    intx offset = ((address)(void*)s) - ((address)(void*)start);\n+    assert(offset >= 0, \"must be\");\n+    if (offset > 0xffffffff) {\n+      fatal(\"too large\");\n+    }\n+    return (u4)offset;\n+  }\n@@ -760,1 +783,5 @@\n-    _writer->add(hash, CompressedOops::narrow_oop_value(new_s));\n+    if (UseCompressedOops) {\n+      _writer->add(hash, CompressedOops::narrow_oop_value(new_s));\n+    } else {\n+      _writer->add(hash, compute_delta(new_s));\n+    }\n@@ -774,1 +801,0 @@\n-\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":31,"deletions":5,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2081,3 +2081,3 @@\n-                                                          Klass* accessing_klass,\n-                                                          Handle *appendix_result,\n-                                                          TRAPS) {\n+                                                     Klass* accessing_klass,\n+                                                     Handle* appendix_result,\n+                                                     TRAPS) {\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1418,0 +1418,5 @@\n+    \/\/ We did not save the classfile data of the regenerated LambdaForm invoker classes,\n+    \/\/ so we cannot support CLFH for such classes.\n+    if (record->_klass->is_regenerated() && JvmtiExport::should_post_class_file_load_hook()) {\n+       return NULL;\n+    }\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-  volatile long _stack_traversal_mark;\n+  volatile int64_t _stack_traversal_mark;\n@@ -541,2 +541,2 @@\n-  long  stack_traversal_mark()                    { return _stack_traversal_mark; }\n-  void  set_stack_traversal_mark(long l)          { _stack_traversal_mark = l; }\n+  int64_t stack_traversal_mark()                  { return _stack_traversal_mark; }\n+  void    set_stack_traversal_mark(int64_t l)     { _stack_traversal_mark = l; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/code\/vtableStubs.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-long CompileBroker::_peak_compilation_time         = 0;\n+jlong CompileBroker::_peak_compilation_time        = 0;\n@@ -617,1 +617,0 @@\n-    GrowableArray<const char*>* c2_phase_names = new GrowableArray<const char*>(PHASE_NUM_TYPES);\n@@ -619,1 +618,1 @@\n-      const char* phase_name = CompilerPhaseTypeHelper::to_string((CompilerPhaseType) i);\n+      const char* phase_name = CompilerPhaseTypeHelper::to_description((CompilerPhaseType) i);\n@@ -1973,0 +1972,2 @@\n+      } else {\n+        task->set_failure_reason(\"breakpoints are present\");\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-  static long _peak_compilation_time;\n+  static jlong _peak_compilation_time;\n@@ -414,2 +414,2 @@\n-  static long get_peak_compilation_time() {         return _peak_compilation_time; }\n-  static long get_total_compilation_time() {        return _t_total_compilation.milliseconds(); }\n+  static jlong get_peak_compilation_time() {        return _peak_compilation_time; }\n+  static jlong get_total_compilation_time() {       return _t_total_compilation.milliseconds(); }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-        bytes_read = os::read(partial_fd, buf, (int)nr);\n+        bytes_read = ::read(partial_fd, buf, (int)nr);\n@@ -238,1 +238,1 @@\n-      while ((bytes_read = os::read(partial_fd, buf, buflen-1)) > 0) {\n+      while ((bytes_read = ::read(partial_fd, buf, buflen-1)) > 0) {\n@@ -288,1 +288,1 @@\n-      os::close(partial_fd);\n+      ::close(partial_fd);\n","filename":"src\/hotspot\/share\/compiler\/compileLog.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"opto\/phasetype.hpp\"\n@@ -265,0 +266,1 @@\n+  _ideal_phase_name_mask = 0;\n@@ -384,0 +386,18 @@\n+    \/\/ Parse PrintIdealPhaseName and create an efficient lookup mask\n+#ifndef PRODUCT\n+#ifdef COMPILER2\n+    if (!_modified[PrintIdealPhaseIndex]) {\n+      \/\/ Parse ccstr and create mask\n+      ccstrlist option;\n+      if (CompilerOracle::has_option_value(method, CompileCommand::PrintIdealPhase, option)) {\n+        uint64_t mask = 0;\n+        PhaseNameValidator validator(option, mask);\n+        if (validator.is_valid()) {\n+          assert(mask != 0, \"Must be set\");\n+          set.cloned()->_ideal_phase_name_mask = mask;\n+        }\n+      }\n+    }\n+#endif\n+#endif\n+\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.cpp","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-NOT_PRODUCT(cflags(PrintIdealLevel,     uintx, PrintIdealLevel, PrintIdealLevel)) \\\n+NOT_PRODUCT(cflags(PrintIdealPhase,     ccstrlist, \"\", PrintIdealPhase)) \\\n@@ -111,0 +111,1 @@\n+  uint64_t _ideal_phase_name_mask;\n@@ -140,1 +141,0 @@\n-\n@@ -153,0 +153,3 @@\n+  void set_ideal_phase_mask(uint64_t mask) { _ideal_phase_name_mask = mask; };\n+  uint64_t ideal_phase_mask() { return _ideal_phase_name_mask; };\n+\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compilerEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"opto\/phasetype.hpp\"\n@@ -686,0 +687,15 @@\n+#ifndef PRODUCT\n+      else if (option == CompileCommand::PrintIdealPhase) {\n+        uint64_t mask = 0;\n+        PhaseNameValidator validator(value, mask);\n+\n+        if (!validator.is_valid()) {\n+          jio_snprintf(errorbuf, buf_size, \"Unrecognized phase name in %s: %s\", option2name(option), validator.what());\n+        }\n+      } else if (option == CompileCommand::TestOptionList) {\n+        \/\/ all values are ok\n+      }\n+#endif\n+      else {\n+        assert(false, \"Ccstrlist type option missing validator\");\n+      }\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -82,3 +82,3 @@\n-  option(PrintIdeal, \"PrintIdeal\", Bool)  \\\n-  option(PrintIdealLevel, \"PrintIdealLevel\", Uintx) \\\n-  option(IGVPrintLevel, \"IGVPrintLevel\", Intx) \\\n+NOT_PRODUCT(option(PrintIdeal, \"PrintIdeal\", Bool))  \\\n+NOT_PRODUCT(option(PrintIdealPhase, \"PrintIdealPhase\", Ccstrlist)) \\\n+NOT_PRODUCT(option(IGVPrintLevel, \"IGVPrintLevel\", Intx)) \\\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"opto\/phasetype.hpp\"\n@@ -97,1 +98,1 @@\n-      ssize_t num_read = os::read(file_handle, (char*) buffer, st.st_size);\n+      ssize_t num_read = ::read(file_handle, (char*) buffer, st.st_size);\n@@ -101,1 +102,1 @@\n-        os::close(file_handle);\n+        ::close(file_handle);\n@@ -337,0 +338,9 @@\n+        } else if (strncmp(option_key->name, \"PrintIdealPhase\", 15) == 0) {\n+          uint64_t mask = 0;\n+          PhaseNameValidator validator(s, mask);\n+\n+          if (!validator.is_valid()) {\n+            error(VALUE_ERROR, \"Unrecognized phase name detected in PrintIdealPhase: %s\", validator.what());\n+            return false;\n+          }\n+          set->set_ideal_phase_mask(mask);\n","filename":"src\/hotspot\/share\/compiler\/directivesParser.cpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-  virtual bool can_load_archived_objects() const { return true; }\n+  virtual bool can_load_archived_objects() const { return UseCompressedOops; }\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -304,4 +304,1 @@\n-      \/\/ Specialized PLABs for old that handle BOT updates for object allocations.\n-      _alloc_buffers[state][node_index] = (state == G1HeapRegionAttr::Old)\n-                                        ? new G1BotUpdatingPLAB(word_sz)\n-                                        : new PLAB(word_sz);\n+      _alloc_buffers[state][node_index] = new PLAB(word_sz);\n@@ -367,1 +364,0 @@\n-    update_bot_for_direct_allocation(dest, result, word_sz);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -148,16 +148,0 @@\n-\/\/ Specialized PLAB for old generation promotions. For old regions the\n-\/\/ BOT needs to be updated and the relevant data to do this efficiently\n-\/\/ is stored in the PLAB.\n-class G1BotUpdatingPLAB : public PLAB {\n-  \/\/ An object spanning this threshold will cause a BOT update.\n-  HeapWord* _next_bot_threshold;\n-  \/\/ The region in which the PLAB resides.\n-  HeapRegion* _region;\n-public:\n-  G1BotUpdatingPLAB(size_t word_sz) : PLAB(word_sz) { }\n-  \/\/ Sets the new PLAB buffer as well as updates the threshold and region.\n-  void set_buf(HeapWord* buf, size_t word_sz) override;\n-  \/\/ Updates the BOT if the last allocation crossed the threshold.\n-  inline void update_bot(size_t word_sz);\n-};\n-\n@@ -184,3 +168,0 @@\n-  \/\/ Helpers to do explicit BOT updates for allocations in old generation regions.\n-  void update_bot_for_direct_allocation(G1HeapRegionAttr attr, HeapWord* addr, size_t size);\n-\n@@ -192,4 +173,0 @@\n-  \/\/ Returns if BOT updates are needed for the given destinaion. Currently we only have\n-  \/\/ two destinations and BOT updates are only needed for the old generation.\n-  inline bool needs_bot_update(G1HeapRegionAttr dest) const;\n-\n@@ -224,3 +201,0 @@\n-  \/\/ Update the BOT for the last PLAB allocation.\n-  inline void update_bot_for_plab_allocation(G1HeapRegionAttr dest, size_t word_sz, uint node_index);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":0,"deletions":26,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -136,45 +136,0 @@\n-inline bool G1PLABAllocator::needs_bot_update(G1HeapRegionAttr dest) const {\n-  return dest.is_old();\n-}\n-\n-inline void G1PLABAllocator::update_bot_for_direct_allocation(G1HeapRegionAttr attr, HeapWord* addr, size_t size) {\n-  if (!needs_bot_update(attr)) {\n-    return;\n-  }\n-\n-  \/\/ Out of PLAB allocations in an old generation region. Update BOT.\n-  HeapRegion* region = _g1h->heap_region_containing(addr);\n-  region->update_bot_at(addr, size);\n-}\n-\n-inline void G1PLABAllocator::update_bot_for_plab_allocation(G1HeapRegionAttr dest, size_t word_sz, uint node_index) {\n-  assert(needs_bot_update(dest), \"Wrong destination: %s\", dest.get_type_str());\n-  G1BotUpdatingPLAB* plab = static_cast<G1BotUpdatingPLAB*>(alloc_buffer(dest, node_index));\n-  plab->update_bot(word_sz);\n-}\n-\n-inline void G1BotUpdatingPLAB::set_buf(HeapWord* buf, size_t word_sz) {\n-  PLAB::set_buf(buf, word_sz);\n-  \/\/ Update the region and threshold to allow efficient BOT updates.\n-  _region = G1CollectedHeap::heap()->heap_region_containing(buf);\n-  _next_bot_threshold = _region->bot_threshold_for_addr(buf);\n-}\n-\n-inline void G1BotUpdatingPLAB::update_bot(size_t word_sz) {\n-  \/\/ The last object end is at _top, if it did not cross the\n-  \/\/ threshold, there is nothing to do.\n-  if (_top <= _next_bot_threshold) {\n-    return;\n-  }\n-\n-  HeapWord* obj_start = _top - word_sz;\n-  assert(contains(obj_start),\n-         \"Object start outside PLAB. bottom: \" PTR_FORMAT \" object: \" PTR_FORMAT,\n-         p2i(_bottom), p2i(obj_start));\n-  assert(obj_start <= _next_bot_threshold,\n-         \"Object start not below or at threshold. threshold: \" PTR_FORMAT \" object: \" PTR_FORMAT,\n-         p2i(_next_bot_threshold), p2i(obj_start));\n-\n-  _region->update_bot_crossing_threshold(&_next_bot_threshold, obj_start, _top);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.inline.hpp","additions":0,"deletions":45,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-  _next_offset_threshold(NULL),\n@@ -91,1 +90,1 @@\n-    alloc_block(prev_addr, next_addr);\n+    update_for_block(prev_addr, next_addr);\n@@ -207,1 +206,1 @@\n-\/\/              threshold_\n+\/\/              cur_card_boundary\n@@ -214,1 +213,1 @@\n-\/\/         block-start\n+\/\/         blk_start\n@@ -216,5 +215,4 @@\n-void G1BlockOffsetTablePart::alloc_block_work(HeapWord** threshold_, HeapWord* blk_start,\n-                                              HeapWord* blk_end) {\n-  \/\/ For efficiency, do copy-in\/copy-out.\n-  HeapWord* threshold = *threshold_;\n-  size_t    index =  _bot->index_for_raw(threshold);\n+void G1BlockOffsetTablePart::update_for_block_work(HeapWord* blk_start,\n+                                                   HeapWord* blk_end) {\n+  HeapWord* const cur_card_boundary = align_up_by_card_size(blk_start);\n+  size_t const index =  _bot->index_for_raw(cur_card_boundary);\n@@ -224,3 +222,3 @@\n-  assert(blk_end > threshold, \"should be past threshold\");\n-  assert(blk_start <= threshold, \"blk_start should be at or before threshold\");\n-  assert(pointer_delta(threshold, blk_start) < BOTConstants::card_size_in_words(),\n+  assert(blk_end > cur_card_boundary, \"should be past cur_card_boundary\");\n+  assert(blk_start <= cur_card_boundary, \"blk_start should be at or before cur_card_boundary\");\n+  assert(pointer_delta(cur_card_boundary, blk_start) < BOTConstants::card_size_in_words(),\n@@ -230,1 +228,1 @@\n-  assert(G1CollectedHeap::heap()->is_in_reserved(blk_end-1),\n+  assert(G1CollectedHeap::heap()->is_in_reserved(blk_end - 1),\n@@ -232,2 +230,2 @@\n-  assert(threshold == _bot->_reserved.start() + index*BOTConstants::card_size_in_words(),\n-         \"index must agree with threshold\");\n+  assert(cur_card_boundary == _bot->_reserved.start() + index*BOTConstants::card_size_in_words(),\n+         \"index must agree with cur_card_boundary\");\n@@ -235,1 +233,2 @@\n-  DEBUG_ONLY(size_t orig_index = index;)\n+  \/\/ Mark the card that holds the offset into the block.\n+  _bot->set_offset_array(index, cur_card_boundary, blk_start);\n@@ -237,4 +236,1 @@\n-  \/\/ Mark the card that holds the offset into the block.  Note\n-  \/\/ that _next_offset_threshold is not updated until the end\n-  \/\/ of this method.\n-  _bot->set_offset_array(index, threshold, blk_start);\n+  \/\/ We need to now mark the subsequent cards that this block spans.\n@@ -242,4 +238,2 @@\n-  \/\/ We need to now mark the subsequent cards that this blk spans.\n-\n-  \/\/ Index of card on which blk ends.\n-  size_t end_index   = _bot->index_for(blk_end - 1);\n+  \/\/ Index of card on which the block ends.\n+  size_t end_index = _bot->index_for(blk_end - 1);\n@@ -256,1 +250,2 @@\n-  \/\/ Calculate threshold_ this way because end_index\n+#ifdef ASSERT\n+  \/\/ Calculate new_card_boundary this way because end_index\n@@ -258,2 +253,2 @@\n-  threshold = _bot->address_for_index(end_index) + BOTConstants::card_size_in_words();\n-  assert(threshold >= blk_end, \"Incorrect offset threshold\");\n+  HeapWord* new_card_boundary = _bot->address_for_index(end_index) + BOTConstants::card_size_in_words();\n+  assert(new_card_boundary >= blk_end, \"postcondition\");\n@@ -261,3 +256,0 @@\n-  *threshold_ = threshold;\n-\n-#ifdef ASSERT\n@@ -268,2 +260,2 @@\n-  assert((_bot->offset_array(orig_index) == 0 && blk_start == boundary) ||\n-         (_bot->offset_array(orig_index) > 0 && _bot->offset_array(orig_index) < BOTConstants::card_size_in_words()),\n+  assert((_bot->offset_array(index) == 0 && blk_start == boundary) ||\n+         (_bot->offset_array(index) > 0 && _bot->offset_array(index) < BOTConstants::card_size_in_words()),\n@@ -271,1 +263,1 @@\n-         \"orig_index offset: %u, \"\n+         \"index offset: %u, \"\n@@ -274,1 +266,1 @@\n-         (uint)_bot->offset_array(orig_index),\n+         (uint)_bot->offset_array(index),\n@@ -276,1 +268,1 @@\n-  for (size_t j = orig_index + 1; j <= end_index; j++) {\n+  for (size_t j = index + 1; j <= end_index; j++) {\n@@ -292,2 +284,0 @@\n-  \/\/ Do not verify beyond the BOT allocation threshold.\n-  assert(_hr->top() <= _next_offset_threshold, \"invariant\");\n@@ -344,1 +334,0 @@\n-  out->print_cr(\"  next offset threshold: \" PTR_FORMAT, p2i(_next_offset_threshold));\n@@ -348,8 +337,0 @@\n-void G1BlockOffsetTablePart::reset_bot() {\n-  _next_offset_threshold = _hr->bottom();\n-}\n-\n-bool G1BlockOffsetTablePart::is_empty() const {\n-  return _next_offset_threshold == _hr->bottom();\n-}\n-\n@@ -357,2 +338,1 @@\n-  assert(is_empty(), \"first obj\");\n-  alloc_block(_hr->bottom(), obj_top);\n+  update_for_block(_hr->bottom(), obj_top);\n@@ -360,1 +340,1 @@\n-    alloc_block(obj_top, fill_size);\n+    update_for_block(obj_top, fill_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":29,"deletions":49,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -114,3 +114,0 @@\n-  \/\/ allocation boundary at which offset array must be updated\n-  HeapWord* _next_offset_threshold;\n-\n@@ -143,9 +140,2 @@\n-  \/\/ Requires that \"*threshold_\" be the first array entry boundary at or\n-  \/\/ above \"blk_start\".  If the block starts at or crosses \"*threshold_\", records\n-  \/\/ \"blk_start\" as the appropriate block start for the array index\n-  \/\/ starting at \"*threshold_\", and for any other indices crossed by the\n-  \/\/ block.  Updates \"*threshold_\" to correspond to the first index after\n-  \/\/ the block end.\n-  void alloc_block_work(HeapWord** threshold_,\n-                        HeapWord* blk_start,\n-                        HeapWord* blk_end);\n+  \/\/ Update BOT entries corresponding to the mem range [blk_start, blk_end).\n+  void update_for_block_work(HeapWord* blk_start, HeapWord* blk_end);\n@@ -156,0 +146,11 @@\n+  static HeapWord* align_up_by_card_size(HeapWord* const addr) {\n+    return align_up(addr, BOTConstants::card_size());\n+  }\n+\n+  static bool is_crossing_card_boundary(HeapWord* const obj_start,\n+                                        HeapWord* const obj_end) {\n+    HeapWord* cur_card_boundary = align_up_by_card_size(obj_start);\n+    \/\/ strictly greater-than\n+    return obj_end > cur_card_boundary;\n+  }\n+\n@@ -163,3 +164,0 @@\n-  \/\/ Given an address calculate where the next threshold needing an update is.\n-  inline HeapWord* threshold_for_addr(const void* addr);\n-\n@@ -172,25 +170,4 @@\n-  \/\/ Same as above, but does not have any of the possible side effects\n-  \/\/ discussed above.\n-  inline HeapWord* block_start_const(const void* addr) const;\n-\n-  \/\/ Reset bot to be empty.\n-  void reset_bot();\n-\n-  bool is_empty() const;\n-\n-  \/\/ Return the next threshold, the point at which the table should be\n-  \/\/ updated.\n-  HeapWord* threshold() const { return _next_offset_threshold; }\n-\n-  \/\/ Sets the threshold explicitly to keep it consistent with what has been\n-  \/\/ updated. This needs to be done when the threshold is not used for updating\n-  \/\/ the bot, for example when promoting to old in young collections.\n-  void set_threshold(HeapWord* threshold) { _next_offset_threshold = threshold; }\n-\n-  \/\/ These must be guaranteed to work properly (i.e., do nothing)\n-  \/\/ when \"blk_start\" (\"blk\" for second version) is \"NULL\".  In this\n-  \/\/ implementation, that's true because NULL is represented as 0, and thus\n-  \/\/ never exceeds the \"_next_offset_threshold\".\n-  void alloc_block(HeapWord* blk_start, HeapWord* blk_end) {\n-    if (blk_end > _next_offset_threshold) {\n-      alloc_block_work(&_next_offset_threshold, blk_start, blk_end);\n+\n+  void update_for_block(HeapWord* blk_start, HeapWord* blk_end) {\n+    if (is_crossing_card_boundary(blk_start, blk_end)) {\n+      update_for_block_work(blk_start, blk_end);\n@@ -199,2 +176,3 @@\n-  void alloc_block(HeapWord* blk, size_t size) {\n-    alloc_block(blk, blk+size);\n+\n+  void update_for_block(HeapWord* blk_start, size_t size) {\n+    update_for_block(blk_start, blk_start + size);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":20,"deletions":42,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -33,14 +33,1 @@\n-\n-inline HeapWord* G1BlockOffsetTablePart::threshold_for_addr(const void* addr) {\n-  assert(addr >= _hr->bottom() && addr < _hr->top(), \"invalid address\");\n-  size_t index = _bot->index_for(addr);\n-  HeapWord* card_boundary = _bot->address_for_index(index);\n-  \/\/ Address at card boundary, use as threshold.\n-  if (card_boundary == addr) {\n-    return card_boundary;\n-  }\n-\n-  \/\/ Calculate next threshold.\n-  HeapWord* threshold = card_boundary + BOTConstants::card_size_in_words();\n-  return threshold;\n-}\n+#include \"oops\/oop.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/g1\/g1BufferNodeList.hpp\"\n-#include \"utilities\/debug.hpp\"\n-\n-G1BufferNodeList::G1BufferNodeList() :\n-  _head(NULL), _tail(NULL), _entry_count(0) {}\n-\n-G1BufferNodeList::G1BufferNodeList(BufferNode* head,\n-                                   BufferNode* tail,\n-                                   size_t entry_count) :\n-  _head(head), _tail(tail), _entry_count(entry_count)\n-{\n-  assert((_head == NULL) == (_tail == NULL), \"invariant\");\n-  assert((_head == NULL) == (_entry_count == 0), \"invariant\");\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BufferNodeList.cpp","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -1,42 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_G1_G1BUFFERNODELIST_HPP\n-#define SHARE_GC_G1_G1BUFFERNODELIST_HPP\n-\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-class BufferNode;\n-\n-struct G1BufferNodeList {\n-  BufferNode* _head;            \/\/ First node in list or NULL if empty.\n-  BufferNode* _tail;            \/\/ Last node in list or NULL if empty.\n-  size_t _entry_count;          \/\/ Sum of entries in nodes in list.\n-\n-  G1BufferNodeList();\n-  G1BufferNodeList(BufferNode* head, BufferNode* tail, size_t entry_count);\n-};\n-\n-#endif \/\/ SHARE_GC_G1_G1BUFFERNODELIST_HPP\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BufferNodeList.hpp","additions":0,"deletions":42,"binary":false,"changes":42,"status":"deleted"},{"patch":"@@ -368,9 +368,1 @@\n-\n-#ifdef ASSERT\n-  if (type == G1CardSet::CardSetArrayOfCards ||\n-      type == G1CardSet::CardSetBitMap ||\n-      type == G1CardSet::CardSetHowl) {\n-    G1CardSetContainer* card_set = (G1CardSetContainer*)value;\n-    assert((card_set->refcount() == 1), \"must be\");\n-  }\n-#endif\n+  assert(static_cast<G1CardSetContainer*>(value)->refcount() == 1, \"must be\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-    assert(!_g1h->is_in_cset(o) || hr->rem_set()->strong_code_roots_list_contains(_nm), \"if o still in collection set then evacuation failed and nm must already be in the remset\");\n-    hr->add_strong_code_root(_nm);\n+    assert(!_g1h->is_in_cset(o) || hr->rem_set()->code_roots_list_contains(_nm), \"if o still in collection set then evacuation failed and nm must already be in the remset\");\n+    hr->add_code_root(_nm);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CodeBlobClosure.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1045,2 +1045,2 @@\n-  \/\/ Rebuild the strong code root lists for each region\n-  rebuild_strong_code_roots();\n+  \/\/ Rebuild the code root lists for each region\n+  rebuild_code_roots();\n@@ -1101,1 +1101,1 @@\n-                                         bool do_maximum_compaction) {\n+                                         bool do_maximal_compaction) {\n@@ -1114,1 +1114,1 @@\n-  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximum_compaction);\n+  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximal_compaction);\n@@ -1128,1 +1128,1 @@\n-  \/\/ When clear_all_soft_refs is set we want to do a maximum compaction\n+  \/\/ When clear_all_soft_refs is set we want to do a maximal compaction\n@@ -1130,1 +1130,1 @@\n-  bool do_maximum_compaction = clear_all_soft_refs;\n+  bool do_maximal_compaction = clear_all_soft_refs;\n@@ -1133,1 +1133,1 @@\n-                                  do_maximum_compaction);\n+                                  do_maximal_compaction);\n@@ -1141,1 +1141,1 @@\n-                                    false \/* do_maximum_compaction *\/);\n+                                    false \/* do_maximal_compaction *\/);\n@@ -1165,1 +1165,1 @@\n-                                                            bool maximum_compaction,\n+                                                            bool maximal_compaction,\n@@ -1189,1 +1189,1 @@\n-    \/\/ If maximum_compaction is set we clear all soft references and don't\n+    \/\/ If maximal_compaction is set we clear all soft references and don't\n@@ -1191,2 +1191,2 @@\n-    if (maximum_compaction) {\n-      log_info(gc, ergo)(\"Attempting maximum full compaction clearing soft references\");\n+    if (maximal_compaction) {\n+      log_info(gc, ergo)(\"Attempting maximal full compaction clearing soft references\");\n@@ -1197,2 +1197,2 @@\n-                                       maximum_compaction \/* clear_all_soft_refs *\/ ,\n-                                       maximum_compaction \/* do_maximum_compaction *\/);\n+                                       maximal_compaction \/* clear_all_soft_refs *\/ ,\n+                                       maximal_compaction \/* do_maximal_compaction *\/);\n@@ -1729,6 +1729,0 @@\n-  {\n-    G1DirtyCardQueueSet& dcqs = G1BarrierSet::dirty_card_queue_set();\n-    dcqs.set_process_cards_threshold(concurrent_refine()->yellow_zone());\n-    dcqs.set_max_cards(concurrent_refine()->red_zone());\n-  }\n-\n@@ -2414,1 +2408,0 @@\n-  case VerifyOption_G1UseNextMarking: return is_obj_ill(obj, hr);\n@@ -2425,1 +2418,0 @@\n-  case VerifyOption_G1UseNextMarking: return is_obj_ill(obj);\n@@ -3298,1 +3290,0 @@\n-    alloc_region->update_bot_threshold();\n@@ -3345,2 +3336,2 @@\n-      \/\/ HeapRegion::add_strong_code_root_locked() avoids adding duplicate entries.\n-      hr->add_strong_code_root_locked(_nm);\n+      \/\/ HeapRegion::add_code_root_locked() avoids adding duplicate entries.\n+      hr->add_code_root_locked(_nm);\n@@ -3371,1 +3362,1 @@\n-      hr->remove_strong_code_root(_nm);\n+      hr->remove_code_root(_nm);\n@@ -3414,1 +3405,1 @@\n-class RebuildStrongCodeRootClosure: public CodeBlobClosure {\n+class RebuildCodeRootClosure: public CodeBlobClosure {\n@@ -3418,1 +3409,1 @@\n-  RebuildStrongCodeRootClosure(G1CollectedHeap* g1h) :\n+  RebuildCodeRootClosure(G1CollectedHeap* g1h) :\n@@ -3431,2 +3422,2 @@\n-void G1CollectedHeap::rebuild_strong_code_roots() {\n-  RebuildStrongCodeRootClosure blob_cl(this);\n+void G1CollectedHeap::rebuild_code_roots() {\n+  RebuildCodeRootClosure blob_cl(this);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":22,"deletions":31,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -489,1 +489,1 @@\n-  \/\/ - if do_maximum_compaction is true, full gc will do a maximally\n+  \/\/ - if do_maximal_compaction is true, full gc will do a maximally\n@@ -495,1 +495,1 @@\n-                          bool do_maximum_compaction);\n+                          bool do_maximal_compaction);\n@@ -521,1 +521,1 @@\n-                                             bool maximum_compaction,\n+                                             bool maximal_compaction,\n@@ -1239,5 +1239,0 @@\n-  \/\/ This function returns true when an object has been\n-  \/\/ around since the previous marking and hasn't yet\n-  \/\/ been marked during this marking, and is not in a closed archive region.\n-  inline bool is_obj_ill(const oop obj, const HeapRegion* hr) const;\n-\n@@ -1252,2 +1247,0 @@\n-  inline bool is_obj_ill(const oop obj) const;\n-\n@@ -1290,1 +1283,1 @@\n-  \/\/ Rebuild the strong code root lists for each region\n+  \/\/ Rebuild the code root lists for each region\n@@ -1292,1 +1285,1 @@\n-  void rebuild_strong_code_roots();\n+  void rebuild_code_roots();\n@@ -1305,1 +1298,0 @@\n-  \/\/ vo == UseNextMarking -> use \"next\" marking information\n@@ -1311,3 +1303,0 @@\n-  \/\/ Currently, there is only one case where this is called with\n-  \/\/ vo == UseNextMarking, which is to verify the \"next\" marking\n-  \/\/ information at the end of remark.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -227,14 +227,0 @@\n-}\n-\n-inline bool G1CollectedHeap::is_obj_ill(const oop obj, const HeapRegion* hr) const {\n-  return\n-    !hr->obj_allocated_since_next_marking(obj) &&\n-    !is_marked_next(obj) &&\n-    !hr->is_closed_archive();\n-}\n-\n-inline bool G1CollectedHeap::is_obj_ill(const oop obj) const {\n-  if (obj == NULL) {\n-    return false;\n-  }\n-  return is_obj_ill(obj, heap_region_containing(obj));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2957,1 +2957,1 @@\n-  _total_remset_bytes(0), _total_strong_code_roots_bytes(0)\n+  _total_remset_bytes(0), _total_code_roots_bytes(0)\n@@ -3017,1 +3017,1 @@\n-  size_t strong_code_roots_bytes = r->rem_set()->strong_code_roots_mem_size();\n+  size_t code_roots_bytes = r->rem_set()->code_roots_mem_size();\n@@ -3026,1 +3026,1 @@\n-  _total_strong_code_roots_bytes += strong_code_roots_bytes;\n+  _total_code_roots_bytes += code_roots_bytes;\n@@ -3047,1 +3047,1 @@\n-                        remset_bytes, remset_type, strong_code_roots_bytes);\n+                        remset_bytes, remset_type, code_roots_bytes);\n@@ -3077,1 +3077,1 @@\n-                         bytes_to_mb(_total_strong_code_roots_bytes));\n+                         bytes_to_mb(_total_code_roots_bytes));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -850,2 +850,2 @@\n-  \/\/ Accumulator for strong code roots memory size\n-  size_t _total_strong_code_roots_bytes;\n+  \/\/ Accumulator for code roots memory size\n+  size_t _total_code_roots_bytes;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,20 @@\n-  return !_g1h->is_obj_ill(obj);\n+  \/\/ Check whether the passed in object is null. During discovery the referent\n+  \/\/ may be cleared between the initial check and being passed in here.\n+  if (obj == NULL) {\n+    \/\/ Return true to avoid discovery when the referent is NULL.\n+    return true;\n+  }\n+\n+  HeapRegion* hr = _g1h->heap_region_containing(cast_from_oop<HeapWord*>(obj));\n+  \/\/ All objects allocated since the start of marking are considered live.\n+  if (hr->obj_allocated_since_next_marking(obj)) {\n+    return true;\n+  }\n+\n+  \/\/ All objects in closed archive regions are live.\n+  if (hr->is_closed_archive()) {\n+    return true;\n+  }\n+\n+  \/\/ All objects that are marked are live.\n+  return _g1h->is_marked_next(obj);\n@@ -113,1 +132,0 @@\n-  assert(task_entry.is_array_slice() || !_g1h->is_obj_ill(task_entry.obj()), \"invariant\");  \/\/ FIXME!!!\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    result = new G1ConcurrentRefineThread(_cr, worker_id);\n+    result = G1ConcurrentRefineThread::create(_cr, worker_id);\n@@ -56,2 +56,3 @@\n-  _cr(NULL),\n-  _threads(NULL),\n+  _cr(nullptr),\n+  _primary_thread(nullptr),\n+  _threads(nullptr),\n@@ -79,8 +80,17 @@\n-  for (uint i = 0; i < num_max_threads; i++) {\n-    if (UseDynamicNumberOfGCThreads && i != 0 \/* Always start first thread. *\/) {\n-      _threads[i] = NULL;\n-    } else {\n-      _threads[i] = create_refinement_thread(i, true);\n-      if (_threads[i] == NULL) {\n-        vm_shutdown_during_initialization(\"Could not allocate refinement threads.\");\n-        return JNI_ENOMEM;\n+  if (num_max_threads > 0) {\n+    auto primary = G1PrimaryConcurrentRefineThread::create(cr);\n+    if (primary == nullptr) {\n+      vm_shutdown_during_initialization(\"Could not allocate primary refinement thread\");\n+      return JNI_ENOMEM;\n+    }\n+    _threads[0] = _primary_thread = primary;\n+\n+    for (uint i = 1; i < num_max_threads; ++i) {\n+      if (UseDynamicNumberOfGCThreads) {\n+        _threads[i] = nullptr;\n+      } else {\n+        _threads[i] = create_refinement_thread(i, true);\n+        if (_threads[i] == nullptr) {\n+          vm_shutdown_during_initialization(\"Could not allocate refinement threads.\");\n+          return JNI_ENOMEM;\n+        }\n@@ -91,4 +101,0 @@\n-  if (num_max_threads > 0) {\n-    G1BarrierSet::dirty_card_queue_set().set_primary_refinement_thread(_threads[0]);\n-  }\n-\n@@ -240,1 +246,12 @@\n-  return _thread_control.initialize(this, max_num_threads());\n+  jint result = _thread_control.initialize(this, max_num_threads());\n+  if (result != JNI_OK) return result;\n+\n+  G1DirtyCardQueueSet& dcqs = G1BarrierSet::dirty_card_queue_set();\n+  dcqs.set_max_cards(red_zone());\n+  if (max_num_threads() > 0) {\n+    G1PrimaryConcurrentRefineThread* primary_thread = _thread_control.primary_thread();\n+    primary_thread->update_notify_threshold(primary_activation_threshold());\n+    dcqs.set_refinement_notification_thread(primary_thread);\n+  }\n+\n+  return JNI_OK;\n@@ -395,8 +412,3 @@\n-    if (max_num_threads() == 0) {\n-      \/\/ Disable dcqs notification when there are no threads to notify.\n-      dcqs.set_process_cards_threshold(G1DirtyCardQueueSet::ProcessCardsThresholdNever);\n-    } else {\n-      \/\/ Worker 0 is the primary; wakeup is via dcqs notification.\n-      STATIC_ASSERT(max_yellow_zone <= INT_MAX);\n-      size_t activate = activation_threshold(0);\n-      dcqs.set_process_cards_threshold(activate);\n+    if (max_num_threads() > 0) {\n+      size_t threshold = primary_activation_threshold();\n+      _thread_control.primary_thread()->update_notify_threshold(threshold);\n@@ -414,1 +426,0 @@\n-  dcqs.notify_if_necessary();\n@@ -441,0 +452,5 @@\n+size_t G1ConcurrentRefine::primary_activation_threshold() const {\n+  assert(max_num_threads() > 0, \"No primary refinement thread\");\n+  return activation_threshold(0);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":42,"deletions":26,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"utilities\/ticks.hpp\"\n@@ -36,1 +36,1 @@\n-class outputStream;\n+class G1PrimaryConcurrentRefineThread;\n@@ -43,1 +43,1 @@\n-\n+  G1PrimaryConcurrentRefineThread* _primary_thread;\n@@ -56,0 +56,6 @@\n+  G1PrimaryConcurrentRefineThread* primary_thread() const {\n+    assert(_num_max_threads > 0, \"precondition\");\n+    assert(_primary_thread != nullptr, \"uninitialized\");\n+    return _primary_thread;\n+  }\n+\n@@ -119,0 +125,4 @@\n+  \/\/ The minimum number of pending cards for activation of the primary\n+  \/\/ refinement thread.\n+  size_t primary_activation_threshold() const;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.hpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+#include \"runtime\/init.hpp\"\n+#include \"runtime\/safepoint.hpp\"\n@@ -42,2 +44,0 @@\n-  _notifier(new Semaphore(0)),\n-  _should_notify(true),\n@@ -48,1 +48,0 @@\n-  create_and_start();\n@@ -53,42 +52,0 @@\n-  delete _notifier;\n-}\n-\n-void G1ConcurrentRefineThread::wait_for_completed_buffers() {\n-  assert(this == Thread::current(), \"precondition\");\n-  while (Atomic::load_acquire(&_should_notify)) {\n-    _notifier->wait();\n-  }\n-}\n-\n-void G1ConcurrentRefineThread::activate() {\n-  assert(this != Thread::current(), \"precondition\");\n-  \/\/ Notify iff transitioning from needing activation to not.  This helps\n-  \/\/ keep the semaphore count bounded and minimizes the work done by\n-  \/\/ activators when the thread is already active.\n-  if (Atomic::load_acquire(&_should_notify) &&\n-      Atomic::cmpxchg(&_should_notify, true, false)) {\n-    _notifier->signal();\n-  }\n-}\n-\n-bool G1ConcurrentRefineThread::maybe_deactivate(bool more_work) {\n-  assert(this == Thread::current(), \"precondition\");\n-\n-  if (more_work) {\n-    \/\/ Suppress unnecessary notifications.\n-    Atomic::release_store(&_should_notify, false);\n-    return false;\n-  } else if (Atomic::load_acquire(&_should_notify)) {\n-    \/\/ Deactivate if no notifications since enabled (see below).\n-    return true;\n-  } else {\n-    \/\/ Try for more refinement work with notifications enabled, to close\n-    \/\/ race; there could be a plethora of suppressed activation attempts\n-    \/\/ after we found no work but before we enable notifications here\n-    \/\/ (so there could be lots of work for this thread to do), followed\n-    \/\/ by a long time without activation after enabling notifications.\n-    \/\/ But first, clear any pending signals to prevent accumulation.\n-    while (_notifier->trywait()) {}\n-    Atomic::release_store(&_should_notify, true);\n-    return false;\n-  }\n@@ -100,7 +57,1 @@\n-  while (!should_terminate()) {\n-    \/\/ Wait for work\n-    wait_for_completed_buffers();\n-    if (should_terminate()) {\n-      break;\n-    }\n-\n+  while (wait_for_completed_buffers()) {\n@@ -128,2 +79,5 @@\n-        bool more_work = _cr->do_refinement_step(_worker_id, _refinement_stats);\n-        if (maybe_deactivate(more_work)) break;\n+        if (!_cr->do_refinement_step(_worker_id, _refinement_stats)) {\n+          if (maybe_deactivate()) {\n+            break;\n+          }\n+        }\n@@ -154,0 +108,161 @@\n+\n+G1PrimaryConcurrentRefineThread*\n+G1PrimaryConcurrentRefineThread::create(G1ConcurrentRefine* cr) {\n+  G1PrimaryConcurrentRefineThread* crt =\n+    new (std::nothrow) G1PrimaryConcurrentRefineThread(cr);\n+  if (crt != nullptr) {\n+    crt->create_and_start();\n+  }\n+  return crt;\n+}\n+\n+G1PrimaryConcurrentRefineThread::G1PrimaryConcurrentRefineThread(G1ConcurrentRefine* cr) :\n+  G1ConcurrentRefineThread(cr, 0),\n+  _notifier(0),\n+  _threshold(0)\n+{}\n+\n+void G1PrimaryConcurrentRefineThread::stop_service() {\n+  G1DirtyCardQueueSet& dcqs = G1BarrierSet::dirty_card_queue_set();\n+  dcqs.set_refinement_notification_thread(nullptr);\n+  G1ConcurrentRefineThread::stop_service();\n+}\n+\n+\/\/ The primary refinement thread is notified when buffers\/cards are added to\n+\/\/ the dirty card queue.  That can happen in fairly arbitrary contexts.\n+\/\/ This means there may be arbitrary other locks held when notifying.  We\n+\/\/ also don't want to have to take a lock on the fairly common notification\n+\/\/ path, as contention for that lock can significantly impact performance.\n+\/\/\n+\/\/ We use a semaphore to implement waiting and unblocking, to avoid\n+\/\/ lock rank checking issues.  (We could alternatively use an\n+\/\/ arbitrarily low ranked mutex.)  The atomic variable _threshold is\n+\/\/ used to decide when to signal the semaphore.  When its value is\n+\/\/ SIZE_MAX then the thread is running.  Otherwise, the thread should\n+\/\/ be requested to run when notified that the number of cards has\n+\/\/ exceeded the threshold value.\n+\n+bool G1PrimaryConcurrentRefineThread::wait_for_completed_buffers() {\n+  assert(this == Thread::current(), \"precondition\");\n+  _notifier.wait();\n+  assert(Atomic::load(&_threshold) == SIZE_MAX || should_terminate(), \"incorrect state\");\n+  return !should_terminate();\n+}\n+\n+bool G1PrimaryConcurrentRefineThread::maybe_deactivate() {\n+  assert(this == Thread::current(), \"precondition\");\n+  assert(Atomic::load(&_threshold) == SIZE_MAX, \"incorrect state\");\n+  Atomic::store(&_threshold, cr()->primary_activation_threshold());\n+  \/\/ Always deactivate when no refinement work found.  New refinement\n+  \/\/ work may have arrived after we tried, but checking for that would\n+  \/\/ still be racy.  Instead, the next time additional work is made\n+  \/\/ available we'll get reactivated.\n+  return true;\n+}\n+\n+void G1PrimaryConcurrentRefineThread::activate() {\n+  assert(this != Thread::current(), \"precondition\");\n+  \/\/ The thread is running when notifications are disabled, so shouldn't\n+  \/\/ signal is this case.  But there's a race between stop requests and\n+  \/\/ maybe_deactivate, so also signal if stop requested.\n+  size_t threshold = Atomic::load(&_threshold);\n+  if (((threshold != SIZE_MAX) &&\n+       (threshold == Atomic::cmpxchg(&_threshold, threshold, SIZE_MAX))) ||\n+      should_terminate()) {\n+    _notifier.signal();\n+  }\n+}\n+\n+void G1PrimaryConcurrentRefineThread::notify(size_t num_cards) {\n+  \/\/ Only activate if the number of pending cards exceeds the activation\n+  \/\/ threshold.  Notification is disabled when the thread is running, by\n+  \/\/ setting _threshold to SIZE_MAX.  A relaxed load is sufficient; we don't\n+  \/\/ need to be precise about this.\n+  if (num_cards > Atomic::load(&_threshold)) {\n+    \/\/ Discard notifications occurring during a safepoint.  A GC safepoint\n+    \/\/ may dirty some cards (such as during reference processing), possibly\n+    \/\/ leading to notification.  End-of-GC update_notify_threshold activates\n+    \/\/ the primary thread if needed.  Non-GC safepoints are expected to\n+    \/\/ rarely (if ever) dirty cards, so defer activation to a post-safepoint\n+    \/\/ notification.\n+    if (!SafepointSynchronize::is_at_safepoint()) {\n+      activate();\n+    }\n+  }\n+}\n+\n+void G1PrimaryConcurrentRefineThread::update_notify_threshold(size_t threshold) {\n+#ifdef ASSERT\n+  if (is_init_completed()) {\n+    assert_at_safepoint();\n+    assert(Thread::current()->is_VM_thread(), \"precondition\");\n+  }\n+#endif \/\/ ASSERT\n+  \/\/ If _threshold is SIZE_MAX then the thread is active and the value\n+  \/\/ of _threshold shouldn't be changed.\n+  if (Atomic::load(&_threshold) != SIZE_MAX) {\n+    Atomic::store(&_threshold, threshold);\n+    if (G1BarrierSet::dirty_card_queue_set().num_cards() > threshold) {\n+      activate();\n+    }\n+  }\n+}\n+\n+class G1SecondaryConcurrentRefineThread final : public G1ConcurrentRefineThread {\n+  Monitor _notifier;\n+  bool _requested_active;\n+\n+  bool wait_for_completed_buffers() override;\n+  bool maybe_deactivate() override;\n+\n+public:\n+  G1SecondaryConcurrentRefineThread(G1ConcurrentRefine* cr, uint worker_id);\n+\n+  void activate() override;\n+};\n+\n+G1SecondaryConcurrentRefineThread::G1SecondaryConcurrentRefineThread(G1ConcurrentRefine* cr,\n+                                                                     uint worker_id) :\n+  G1ConcurrentRefineThread(cr, worker_id),\n+  _notifier(Mutex::nosafepoint, this->name(), true),\n+  _requested_active(false)\n+{\n+  assert(worker_id > 0, \"precondition\");\n+}\n+\n+bool G1SecondaryConcurrentRefineThread::wait_for_completed_buffers() {\n+  assert(this == Thread::current(), \"precondition\");\n+  MonitorLocker ml(&_notifier, Mutex::_no_safepoint_check_flag);\n+  while (!_requested_active && !should_terminate()) {\n+    ml.wait();\n+  }\n+  return !should_terminate();\n+}\n+\n+void G1SecondaryConcurrentRefineThread::activate() {\n+  assert(this != Thread::current(), \"precondition\");\n+  MonitorLocker ml(&_notifier, Mutex::_no_safepoint_check_flag);\n+  if (!_requested_active || should_terminate()) {\n+    _requested_active = true;\n+    ml.notify();\n+  }\n+}\n+\n+bool G1SecondaryConcurrentRefineThread::maybe_deactivate() {\n+  assert(this == Thread::current(), \"precondition\");\n+  MutexLocker ml(&_notifier, Mutex::_no_safepoint_check_flag);\n+  bool requested = _requested_active;\n+  _requested_active = false;\n+  return !requested;            \/\/ Deactivate if not recently requested active.\n+}\n+\n+G1ConcurrentRefineThread*\n+G1ConcurrentRefineThread::create(G1ConcurrentRefine* cr, uint worker_id) {\n+  assert(worker_id > 0, \"precondition\");\n+  G1ConcurrentRefineThread* crt =\n+    new (std::nothrow) G1SecondaryConcurrentRefineThread(cr, worker_id);\n+  if (crt != nullptr) {\n+    crt->create_and_start();\n+  }\n+  return crt;\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThread.cpp","additions":170,"deletions":55,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,3 @@\n-#include \"utilities\/ticks.hpp\"\n+#include \"memory\/padded.hpp\"\n+#include \"runtime\/semaphore.hpp\"\n+#include \"utilities\/macros.hpp\"\n@@ -48,12 +50,10 @@\n-  \/\/ _notifier and _should_notify form a single-reader \/ multi-writer\n-  \/\/ notification mechanism.  The owning concurrent refinement thread is the\n-  \/\/ single reader. The writers are (other) threads that call activate() on\n-  \/\/ the thread.  The i-th concurrent refinement thread is responsible for\n-  \/\/ activating thread i+1 if the number of buffers in the queue exceeds a\n-  \/\/ threshold for that i+1th thread.  The 0th (primary) thread is activated\n-  \/\/ by threads that add cards to the dirty card queue set when the primary\n-  \/\/ thread's threshold is exceeded.  activate() is also used to wake up the\n-  \/\/ threads during termination, so even the non-primary thread case is\n-  \/\/ multi-writer.\n-  Semaphore* _notifier;\n-  volatile bool _should_notify;\n+  G1ConcurrentRefine* _cr;\n+\n+  NONCOPYABLE(G1ConcurrentRefineThread);\n+\n+protected:\n+  G1ConcurrentRefineThread(G1ConcurrentRefine* cr, uint worker_id);\n+\n+  \/\/ Returns !should_terminate().\n+  \/\/ precondition: this is the current thread.\n+  virtual bool wait_for_completed_buffers() = 0;\n@@ -63,1 +63,2 @@\n-  bool maybe_deactivate(bool more_work);\n+  \/\/ precondition: this is the current thread.\n+  virtual bool maybe_deactivate() = 0;\n@@ -65,3 +66,1 @@\n-  G1ConcurrentRefine* _cr;\n-\n-  void wait_for_completed_buffers();\n+  G1ConcurrentRefine* cr() const { return _cr; }\n@@ -69,2 +68,2 @@\n-  virtual void run_service();\n-  virtual void stop_service();\n+  void run_service() override;\n+  void stop_service() override;\n@@ -73,1 +72,1 @@\n-  G1ConcurrentRefineThread(G1ConcurrentRefine* cg1r, uint worker_id);\n+  static G1ConcurrentRefineThread* create(G1ConcurrentRefine* cr, uint worker_id);\n@@ -77,1 +76,2 @@\n-  void activate();\n+  \/\/ precondition: this is not the current thread.\n+  virtual void activate() = 0;\n@@ -87,0 +87,33 @@\n+\/\/ Singleton special refinement thread, registered with the dirty card queue.\n+\/\/ This thread supports notification of increases to the number of cards in\n+\/\/ the dirty card queue, which may trigger activation of this thread when it\n+\/\/ is not already running.\n+class G1PrimaryConcurrentRefineThread final : public G1ConcurrentRefineThread {\n+  \/\/ Support for activation.  The thread waits on this semaphore when idle.\n+  \/\/ Calls to activate signal it to wake the thread.\n+  Semaphore _notifier;\n+  DEFINE_PAD_MINUS_SIZE(0, DEFAULT_CACHE_LINE_SIZE, 0);\n+  \/\/ Used as both the activation threshold and also the \"is active\" state.\n+  \/\/ The value is SIZE_MAX when the thread is active, otherwise the threshold\n+  \/\/ for signaling the semaphore.\n+  volatile size_t _threshold;\n+  DEFINE_PAD_MINUS_SIZE(1, DEFAULT_CACHE_LINE_SIZE, sizeof(size_t));\n+\n+  bool wait_for_completed_buffers() override;\n+  bool maybe_deactivate() override;\n+\n+  G1PrimaryConcurrentRefineThread(G1ConcurrentRefine* cr);\n+\n+  void stop_service() override;\n+\n+public:\n+  static G1PrimaryConcurrentRefineThread* create(G1ConcurrentRefine* cr);\n+\n+  void activate() override;\n+\n+  \/\/ Used by the write barrier support to activate the thread if needed when\n+  \/\/ there are new refinement buffers.\n+  void notify(size_t num_cards);\n+  void update_notify_threshold(size_t threshold);\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefineThread.hpp","additions":55,"deletions":22,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"gc\/g1\/g1BufferNodeList.hpp\"\n@@ -38,0 +37,1 @@\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n@@ -69,1 +69,1 @@\n-  _primary_refinement_thread(NULL),\n+  _refinement_notification_thread(nullptr),\n@@ -74,1 +74,0 @@\n-  _process_cards_threshold(ProcessCardsThresholdNever),\n@@ -121,0 +120,4 @@\n+size_t G1DirtyCardQueueSet::num_cards() const {\n+  return Atomic::load(&_num_cards);\n+}\n+\n@@ -133,3 +136,2 @@\n-  if ((new_num_cards > process_cards_threshold()) &&\n-      (_primary_refinement_thread != NULL)) {\n-    _primary_refinement_thread->activate();\n+  if (_refinement_notification_thread != nullptr) {\n+    _refinement_notification_thread->notify(new_num_cards);\n@@ -316,1 +318,1 @@\n-  G1BufferNodeList list = take_all_completed_buffers();\n+  BufferNodeList list = take_all_completed_buffers();\n@@ -326,7 +328,0 @@\n-void G1DirtyCardQueueSet::notify_if_necessary() {\n-  if ((_primary_refinement_thread != NULL) &&\n-      (num_cards() > process_cards_threshold())) {\n-    _primary_refinement_thread->activate();\n-  }\n-}\n-\n@@ -337,1 +332,1 @@\n-  const G1BufferNodeList from = src->take_all_completed_buffers();\n+  const BufferNodeList from = src->take_all_completed_buffers();\n@@ -344,1 +339,1 @@\n-G1BufferNodeList G1DirtyCardQueueSet::take_all_completed_buffers() {\n+BufferNodeList G1DirtyCardQueueSet::take_all_completed_buffers() {\n@@ -350,1 +345,1 @@\n-  return G1BufferNodeList(pair.first, pair.second, num_cards);\n+  return BufferNodeList(pair.first, pair.second, num_cards);\n@@ -504,0 +499,8 @@\n+  \/\/ Don't try to process a buffer that will just get immediately paused.\n+  \/\/ When going into a safepoint it's just a waste of effort.\n+  \/\/ When coming out of a safepoint, Java threads may be running before the\n+  \/\/ yield request (for non-Java threads) has been cleared.\n+  if (SuspendibleThreadSet::should_yield()) {\n+    return;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1DirtyCardQueue.cpp","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-#include \"gc\/g1\/g1BufferNodeList.hpp\"\n@@ -32,0 +31,1 @@\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n@@ -37,1 +37,1 @@\n-class G1ConcurrentRefineThread;\n+class G1PrimaryConcurrentRefineThread;\n@@ -72,1 +72,1 @@\n-  \/\/ fields.  Similar to G1BufferNodeList, but without the _entry_count.\n+  \/\/ fields.  Similar to BufferNodeList, but without the _entry_count.\n@@ -159,4 +159,4 @@\n-  \/\/ The primary refinement thread, for activation when the processing\n-  \/\/ threshold is reached.  NULL if there aren't any refinement threads.\n-  G1ConcurrentRefineThread* _primary_refinement_thread;\n-  DEFINE_PAD_MINUS_SIZE(1, DEFAULT_CACHE_LINE_SIZE, sizeof(G1ConcurrentRefineThread*));\n+  \/\/ The refinement notification thread, for activation when the notification\n+  \/\/ threshold is reached.  nullptr if there aren't any refinement threads.\n+  G1PrimaryConcurrentRefineThread* _refinement_notification_thread;\n+  DEFINE_PAD_MINUS_SIZE(1, DEFAULT_CACHE_LINE_SIZE, sizeof(G1PrimaryConcurrentRefineThread*));\n@@ -177,3 +177,0 @@\n-  \/\/ Activation threshold for the primary refinement thread.\n-  size_t _process_cards_threshold;\n-\n@@ -245,4 +242,0 @@\n-  void set_primary_refinement_thread(G1ConcurrentRefineThread* thread) {\n-    _primary_refinement_thread = thread;\n-  }\n-\n@@ -257,1 +250,1 @@\n-  \/\/ Upper bound on the number of cards currently in in this queue set.\n+  \/\/ Upper bound on the number of cards currently in this queue set.\n@@ -260,1 +253,1 @@\n-  size_t num_cards() const { return _num_cards; }\n+  size_t num_cards() const;\n@@ -262,5 +255,4 @@\n-  \/\/ Get\/Set the number of cards that triggers log processing.\n-  \/\/ Log processing should be done when the number of cards exceeds the\n-  \/\/ threshold.\n-  void set_process_cards_threshold(size_t sz) {\n-    _process_cards_threshold = sz;\n+  \/\/ Record the primary concurrent refinement thread.  This is the thread to\n+  \/\/ be notified when num_cards() exceeds the refinement notification threshold.\n+  void set_refinement_notification_thread(G1PrimaryConcurrentRefineThread* thread) {\n+    _refinement_notification_thread = thread;\n@@ -268,7 +260,0 @@\n-  size_t process_cards_threshold() const {\n-    return _process_cards_threshold;\n-  }\n-  static const size_t ProcessCardsThresholdNever = SIZE_MAX;\n-\n-  \/\/ Notify the consumer if the number of buffers crossed the threshold\n-  void notify_if_necessary();\n@@ -278,1 +263,1 @@\n-  G1BufferNodeList take_all_completed_buffers();\n+  BufferNodeList take_all_completed_buffers();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1DirtyCardQueue.hpp","additions":15,"deletions":30,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-#include \"gc\/shared\/preservedMarks.inline.hpp\"\n@@ -80,1 +79,0 @@\n-    \/\/ Zapping clears the bitmap, make sure it didn't clear too much.\n@@ -98,1 +96,2 @@\n-    PreservedMarks::init_forwarded_mark(obj);\n+    \/\/ Reset the markWord\n+    obj->init_mark();\n@@ -102,1 +101,1 @@\n-    _hr->alloc_block_in_bot(obj_addr, obj_end);\n+    _hr->update_bot_for_block(obj_addr, obj_end);\n@@ -107,1 +106,2 @@\n-  \/\/ and the mark bitmap accordingly.\n+  \/\/ accordingly. Since we clear and use the prev bitmap for marking objects that\n+  \/\/ failed evacuation, there is no work to be done there.\n@@ -119,1 +119,1 @@\n-      _hr->alloc_block_in_bot(start, end_first_obj);\n+      _hr->update_bot_for_block(start, end_first_obj);\n@@ -125,1 +125,1 @@\n-        _hr->alloc_block_in_bot(end_first_obj, end);\n+        _hr->update_bot_for_block(end_first_obj, end);\n@@ -136,1 +136,1 @@\n-    _cm->clear_range_in_prev_bitmap(mr);\n+    assert(!_cm->is_marked_in_prev_bitmap(cast_to_oop(start)), \"should not be marked in prev bitmap\");\n@@ -190,2 +190,0 @@\n-    hr->reset_bot();\n-\n@@ -199,1 +197,1 @@\n-    hr->rem_set()->clean_strong_code_roots(hr);\n+    hr->rem_set()->clean_code_roots(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FromCardCache.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-#include \"gc\/g1\/g1FullGCPrepareTask.hpp\"\n+#include \"gc\/g1\/g1FullGCPrepareTask.inline.hpp\"\n@@ -114,1 +114,1 @@\n-                                 bool do_maximum_compaction) :\n+                                 bool do_maximal_compaction) :\n@@ -116,1 +116,1 @@\n-    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximum_compaction),\n+    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximal_compaction),\n@@ -297,0 +297,4 @@\n+#if TASKQUEUE_STATS\n+  oop_queue_set()->print_and_reset_taskqueue_stats(\"Oop Queue\");\n+  array_queue_set()->print_and_reset_taskqueue_stats(\"ObjArrayOop Queue\");\n+#endif\n@@ -300,1 +304,24 @@\n-  GCTraceTime(Info, gc, phases) info(\"Phase 2: Prepare for compaction\", scope()->timer());\n+  GCTraceTime(Info, gc, phases) info(\"Phase 2: Prepare compaction\", scope()->timer());\n+\n+  phase2a_determine_worklists();\n+\n+  bool has_free_compaction_targets = phase2b_forward_oops();\n+\n+  \/\/ Try to avoid OOM immediately after Full GC in case there are no free regions\n+  \/\/ left after determining the result locations (i.e. this phase). Prepare to\n+  \/\/ maximally compact the tail regions of the compaction queues serially.\n+  if (!has_free_compaction_targets) {\n+    phase2c_prepare_serial_compaction();\n+  }\n+}\n+\n+void G1FullCollector::phase2a_determine_worklists() {\n+  GCTraceTime(Debug, gc, phases) debug(\"Phase 2: Determine work lists\", scope()->timer());\n+\n+  G1DetermineCompactionQueueClosure cl(this);\n+  _heap->heap_region_iterate(&cl);\n+}\n+\n+bool G1FullCollector::phase2b_forward_oops() {\n+  GCTraceTime(Debug, gc, phases) debug(\"Phase 2: Prepare parallel compaction\", scope()->timer());\n+\n@@ -304,3 +331,32 @@\n-  \/\/ To avoid OOM when there is memory left.\n-  if (!task.has_freed_regions()) {\n-    task.prepare_serial_compaction();\n+  return task.has_free_compaction_targets();\n+}\n+\n+void G1FullCollector::phase2c_prepare_serial_compaction() {\n+  GCTraceTime(Debug, gc, phases) debug(\"Phase 2: Prepare serial compaction\", scope()->timer());\n+  \/\/ At this point we know that after parallel compaction there will be no\n+  \/\/ completely free regions. That means that the last region of\n+  \/\/ all compaction queues still have data in them. We try to compact\n+  \/\/ these regions in serial to avoid a premature OOM when the mutator wants\n+  \/\/ to allocate the first eden region after gc.\n+  for (uint i = 0; i < workers(); i++) {\n+    G1FullGCCompactionPoint* cp = compaction_point(i);\n+    if (cp->has_regions()) {\n+      serial_compaction_point()->add(cp->remove_last());\n+    }\n+  }\n+\n+  \/\/ Update the forwarding information for the regions in the serial\n+  \/\/ compaction point.\n+  G1FullGCCompactionPoint* cp = serial_compaction_point();\n+  for (GrowableArrayIterator<HeapRegion*> it = cp->regions()->begin(); it != cp->regions()->end(); ++it) {\n+    HeapRegion* current = *it;\n+    if (!cp->is_initialized()) {\n+      \/\/ Initialize the compaction point. Nothing more is needed for the first heap region\n+      \/\/ since it is already prepared for compaction.\n+      cp->initialize(current);\n+    } else {\n+      assert(!current->is_humongous(), \"Should be no humongous regions in compaction queue\");\n+      G1SerialRePrepareClosure re_prepare(cp, current);\n+      current->set_compaction_top(current->bottom());\n+      current->apply_to_marked_objects(mark_bitmap(), &re_prepare);\n+    }\n@@ -308,0 +364,1 @@\n+  cp->update();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":65,"deletions":8,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-                  bool do_maximum_compaction);\n+                  bool do_maximal_compaction);\n@@ -113,1 +113,1 @@\n-  size_t live_words(uint region_index) {\n+  size_t live_words(uint region_index) const {\n@@ -124,0 +124,3 @@\n+  \/\/ Are we (potentially) going to compact into this region?\n+  inline bool is_compaction_target(uint region_index) const;\n+\n@@ -131,0 +134,5 @@\n+\n+  void phase2a_determine_worklists();\n+  bool phase2b_forward_oops();\n+  void phase2c_prepare_serial_compaction();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,4 @@\n+bool G1FullCollector::is_compaction_target(uint region_index) const {\n+  return _region_attr_table.is_compacting(region_index) || is_free(region_index);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-void G1FullGCCompactionPoint::initialize_values(bool init_threshold) {\n+void G1FullGCCompactionPoint::initialize_values() {\n@@ -50,3 +50,0 @@\n-  if (init_threshold) {\n-    _current_region->initialize_bot_threshold();\n-  }\n@@ -63,1 +60,1 @@\n-void G1FullGCCompactionPoint::initialize(HeapRegion* hr, bool init_threshold) {\n+void G1FullGCCompactionPoint::initialize(HeapRegion* hr) {\n@@ -65,1 +62,1 @@\n-  initialize_values(init_threshold);\n+  initialize_values();\n@@ -92,1 +89,1 @@\n-  initialize_values(true);\n+  initialize_values();\n@@ -113,1 +110,1 @@\n-  _current_region->alloc_block_in_bot(_compaction_top - size, _compaction_top);\n+  _current_region->update_bot_for_block(_compaction_top - size, _compaction_top);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  void initialize_values(bool init_threshold);\n+  void initialize_values();\n@@ -51,1 +51,1 @@\n-  void initialize(HeapRegion* hr, bool init_threshold);\n+  void initialize(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactionPoint.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,4 @@\n+  bool is_compacting(uint idx) const {\n+    return get_by_index(idx) == Compacting;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCHeapRegionAttr.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,0 @@\n-  inline bool pop_object(oop& obj);\n-  inline bool pop_objarray(ObjArrayTask& array);\n@@ -83,0 +81,8 @@\n+\n+  inline void drain_oop_stack();\n+  \/\/ Transfer contents from the objArray task queue overflow stack to the shared\n+  \/\/ objArray stack.\n+  \/\/ Returns true and a valid task if there has not been enough space in the shared\n+  \/\/ objArray stack, otherwise the task is invalid.\n+  inline bool transfer_objArray_overflow_stack(ObjArrayTask& task);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,4 +94,0 @@\n-inline bool G1FullGCMarker::pop_object(oop& oop) {\n-  return _oop_stack.pop_overflow(oop) || _oop_stack.pop_local(oop);\n-}\n-\n@@ -104,4 +100,0 @@\n-inline bool G1FullGCMarker::pop_objarray(ObjArrayTask& arr) {\n-  return _objarray_stack.pop_overflow(arr) || _objarray_stack.pop_local(arr);\n-}\n-\n@@ -162,4 +154,4 @@\n-void G1FullGCMarker::drain_stack() {\n-  do {\n-    oop obj;\n-    while (pop_object(obj)) {\n+inline void G1FullGCMarker::drain_oop_stack() {\n+  oop obj;\n+  while (_oop_stack.pop_overflow(obj)) {\n+    if (!_oop_stack.try_push_to_taskqueue(obj)) {\n@@ -169,1 +161,24 @@\n-    \/\/ Process ObjArrays one at a time to avoid marking stack bloat.\n+  }\n+  while (_oop_stack.pop_local(obj)) {\n+    assert(_bitmap->is_marked(obj), \"must be marked\");\n+    follow_object(obj);\n+  }\n+}\n+\n+inline bool G1FullGCMarker::transfer_objArray_overflow_stack(ObjArrayTask& task) {\n+  \/\/ It is desirable to move as much as possible work from the overflow queue to\n+  \/\/ the shared queue as quickly as possible.\n+  while (_objarray_stack.pop_overflow(task)) {\n+    if (!_objarray_stack.try_push_to_taskqueue(task)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n+void G1FullGCMarker::drain_stack() {\n+  do {\n+    \/\/ First, drain regular oop stack.\n+    drain_oop_stack();\n+\n+    \/\/ Then process ObjArrays one at a time to avoid marking stack bloat.\n@@ -171,1 +186,2 @@\n-    if (pop_objarray(task)) {\n+    if (transfer_objArray_overflow_stack(task) ||\n+      _objarray_stack.pop_local(task)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":31,"deletions":15,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-#include \"gc\/g1\/g1CollectedHeap.hpp\"\n+#include \"gc\/g1\/g1CollectedHeap.inline.hpp\"\n@@ -32,1 +32,1 @@\n-#include \"gc\/g1\/g1FullGCPrepareTask.hpp\"\n+#include \"gc\/g1\/g1FullGCPrepareTask.inline.hpp\"\n@@ -42,11 +42,4 @@\n-template<bool is_humongous>\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::free_pinned_region(HeapRegion* hr) {\n-  _regions_freed = true;\n-  if (is_humongous) {\n-    _g1h->free_humongous_region(hr, nullptr);\n-  } else {\n-    _g1h->free_region(hr, nullptr);\n-  }\n-  _collector->set_free(hr->hrm_index());\n-  prepare_for_compaction(hr);\n-}\n+G1DetermineCompactionQueueClosure::G1DetermineCompactionQueueClosure(G1FullCollector* collector) :\n+  _g1h(G1CollectedHeap::heap()),\n+  _collector(collector),\n+  _cur_worker(0) { }\n@@ -55,37 +48,2 @@\n-  if (should_compact(hr)) {\n-    assert(!hr->is_humongous(), \"moving humongous objects not supported.\");\n-    prepare_for_compaction(hr);\n-  } else {\n-    \/\/ There is no need to iterate and forward objects in pinned regions ie.\n-    \/\/ prepare them for compaction. The adjust pointers phase will skip\n-    \/\/ work for them.\n-    assert(hr->containing_set() == nullptr, \"already cleared by PrepareRegionsClosure\");\n-    if (hr->is_humongous()) {\n-      oop obj = cast_to_oop(hr->humongous_start_region()->bottom());\n-      if (!_bitmap->is_marked(obj)) {\n-        free_pinned_region<true>(hr);\n-      }\n-    } else if (hr->is_open_archive()) {\n-      bool is_empty = _collector->live_words(hr->hrm_index()) == 0;\n-      if (is_empty) {\n-        free_pinned_region<false>(hr);\n-      }\n-    } else if (hr->is_closed_archive()) {\n-      \/\/ nothing to do with closed archive region\n-    } else {\n-      assert(MarkSweepDeadRatio > 0,\n-             \"only skip compaction for other regions when MarkSweepDeadRatio > 0\");\n-\n-      \/\/ Too many live objects; skip compacting it.\n-      _collector->update_from_compacting_to_skip_compacting(hr->hrm_index());\n-      if (hr->is_young()) {\n-        \/\/ G1 updates the BOT for old region contents incrementally, but young regions\n-        \/\/ lack BOT information for performance reasons.\n-        \/\/ Recreate BOT information of high live ratio young regions here to keep expected\n-        \/\/ performance during scanning their card tables in the collection pauses later.\n-        hr->update_bot();\n-      }\n-      log_trace(gc, phases)(\"Phase 2: skip compaction region index: %u, live words: \" SIZE_FORMAT,\n-                            hr->hrm_index(), _collector->live_words(hr->hrm_index()));\n-    }\n-  }\n+  uint region_idx = hr->hrm_index();\n+  assert(_collector->is_compaction_target(region_idx), \"must be\");\n@@ -93,2 +51,5 @@\n-  \/\/ Reset data structures not valid after Full GC.\n-  reset_region_metadata(hr);\n+  assert(!hr->is_pinned(), \"must be\");\n+  assert(!hr->is_closed_archive(), \"must be\");\n+  assert(!hr->is_open_archive(), \"must be\");\n+\n+  prepare_for_compaction(hr);\n@@ -101,1 +62,1 @@\n-    _freed_regions(false),\n+    _has_free_compaction_targets(false),\n@@ -105,3 +66,3 @@\n-void G1FullGCPrepareTask::set_freed_regions() {\n-  if (!_freed_regions) {\n-    _freed_regions = true;\n+void G1FullGCPrepareTask::set_has_free_compaction_targets() {\n+  if (!_has_free_compaction_targets) {\n+    _has_free_compaction_targets = true;\n@@ -111,2 +72,2 @@\n-bool G1FullGCPrepareTask::has_freed_regions() {\n-  return _freed_regions;\n+bool G1FullGCPrepareTask::has_free_compaction_targets() {\n+  return _has_free_compaction_targets;\n@@ -117,5 +78,21 @@\n-  G1FullGCCompactionPoint* compaction_point = collector()->compaction_point(worker_id);\n-  G1CalculatePointersClosure closure(collector(), compaction_point);\n-  G1CollectedHeap::heap()->heap_region_par_iterate_from_start(&closure, &_hrclaimer);\n-\n-  compaction_point->update();\n+  \/\/ Calculate the target locations for the objects in the non-free regions of\n+  \/\/ the compaction queues provided by the associate compaction point.\n+  {\n+    G1FullGCCompactionPoint* compaction_point = collector()->compaction_point(worker_id);\n+    G1CalculatePointersClosure closure(collector(), compaction_point);\n+\n+    for (GrowableArrayIterator<HeapRegion*> it = compaction_point->regions()->begin();\n+         it != compaction_point->regions()->end();\n+         ++it) {\n+      closure.do_heap_region(*it);\n+    }\n+    compaction_point->update();\n+    \/\/ Determine if there are any unused compaction targets. This is only the case if\n+    \/\/ there are\n+    \/\/ - any regions in queue, so no free ones either.\n+    \/\/ - and the current region is not the last one in the list.\n+    if (compaction_point->has_regions() &&\n+        compaction_point->current_region() != compaction_point->regions()->last()) {\n+      set_has_free_compaction_targets();\n+    }\n+  }\n@@ -123,3 +100,4 @@\n-  \/\/ Check if any regions was freed by this worker and store in task.\n-  if (closure.freed_regions()) {\n-    set_freed_regions();\n+  \/\/ Clear region metadata that is invalid after GC for all regions.\n+  {\n+    G1ResetMetadataClosure closure(collector());\n+    G1CollectedHeap::heap()->heap_region_par_iterate_from_start(&closure, &_hrclaimer);\n@@ -132,15 +110,4 @@\n-    _g1h(G1CollectedHeap::heap()),\n-    _collector(collector),\n-    _bitmap(collector->mark_bitmap()),\n-    _cp(cp),\n-    _regions_freed(false) { }\n-\n-bool G1FullGCPrepareTask::G1CalculatePointersClosure::should_compact(HeapRegion* hr) {\n-  if (hr->is_pinned()) {\n-    return false;\n-  }\n-  size_t live_words = _collector->live_words(hr->hrm_index());\n-  size_t live_words_threshold = _collector->scope()->region_compaction_threshold();\n-  \/\/ High live ratio region will not be compacted.\n-  return live_words <= live_words_threshold;\n-}\n+  _g1h(G1CollectedHeap::heap()),\n+  _collector(collector),\n+  _bitmap(collector->mark_bitmap()),\n+  _cp(cp) { }\n@@ -148,1 +115,5 @@\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::reset_region_metadata(HeapRegion* hr) {\n+G1FullGCPrepareTask::G1ResetMetadataClosure::G1ResetMetadataClosure(G1FullCollector* collector) :\n+  _g1h(G1CollectedHeap::heap()),\n+  _collector(collector) { }\n+\n+void G1FullGCPrepareTask::G1ResetMetadataClosure::reset_region_metadata(HeapRegion* hr) {\n@@ -158,0 +129,20 @@\n+bool G1FullGCPrepareTask::G1ResetMetadataClosure::do_heap_region(HeapRegion* hr) {\n+  uint const region_idx = hr->hrm_index();\n+  if (!_collector->is_compaction_target(region_idx)) {\n+    assert(!hr->is_free(), \"all free regions should be compaction targets\");\n+    assert(_collector->is_skip_compacting(region_idx) || hr->is_closed_archive(), \"must be\");\n+    if (hr->is_young()) {\n+      \/\/ G1 updates the BOT for old region contents incrementally, but young regions\n+      \/\/ lack BOT information for performance reasons.\n+      \/\/ Recreate BOT information of high live ratio young regions here to keep expected\n+      \/\/ performance during scanning their card tables in the collection pauses later.\n+      hr->update_bot();\n+    }\n+  }\n+\n+  \/\/ Reset data structures not valid after Full GC.\n+  reset_region_metadata(hr);\n+\n+  return false;\n+}\n+\n@@ -167,17 +158,1 @@\n-size_t G1FullGCPrepareTask::G1RePrepareClosure::apply(oop obj) {\n-  \/\/ We only re-prepare objects forwarded within the current region, so\n-  \/\/ skip objects that are already forwarded to another region.\n-  if (obj->is_forwarded() && !_current->is_in(obj->forwardee())) {\n-    return obj->size();\n-  }\n-\n-  \/\/ Get size and forward.\n-  size_t size = obj->size();\n-  _cp->forward(obj, size);\n-\n-  return size;\n-}\n-\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::prepare_for_compaction_work(G1FullGCCompactionPoint* cp,\n-                                                                                  HeapRegion* hr) {\n-  hr->set_compaction_top(hr->bottom());\n+void G1FullGCPrepareTask::G1CalculatePointersClosure::prepare_for_compaction(HeapRegion* hr) {\n@@ -185,1 +160,1 @@\n-    G1PrepareCompactLiveClosure prepare_compact(cp);\n+    G1PrepareCompactLiveClosure prepare_compact(_cp);\n@@ -189,62 +164,0 @@\n-\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::prepare_for_compaction(HeapRegion* hr) {\n-  if (!_cp->is_initialized()) {\n-    hr->set_compaction_top(hr->bottom());\n-    _cp->initialize(hr, true);\n-  }\n-  \/\/ Add region to the compaction queue and prepare it.\n-  _cp->add(hr);\n-  prepare_for_compaction_work(_cp, hr);\n-}\n-\n-void G1FullGCPrepareTask::prepare_serial_compaction() {\n-  GCTraceTime(Debug, gc, phases) debug(\"Phase 2: Prepare Serial Compaction\", collector()->scope()->timer());\n-  \/\/ At this point we know that no regions were completely freed by\n-  \/\/ the parallel compaction. That means that the last region of\n-  \/\/ all compaction queues still have data in them. We try to compact\n-  \/\/ these regions in serial to avoid a premature OOM.\n-  for (uint i = 0; i < collector()->workers(); i++) {\n-    G1FullGCCompactionPoint* cp = collector()->compaction_point(i);\n-    if (cp->has_regions()) {\n-      collector()->serial_compaction_point()->add(cp->remove_last());\n-    }\n-  }\n-\n-  \/\/ Update the forwarding information for the regions in the serial\n-  \/\/ compaction point.\n-  G1FullGCCompactionPoint* cp = collector()->serial_compaction_point();\n-  for (GrowableArrayIterator<HeapRegion*> it = cp->regions()->begin(); it != cp->regions()->end(); ++it) {\n-    HeapRegion* current = *it;\n-    if (!cp->is_initialized()) {\n-      \/\/ Initialize the compaction point. Nothing more is needed for the first heap region\n-      \/\/ since it is already prepared for compaction.\n-      cp->initialize(current, false);\n-    } else {\n-      assert(!current->is_humongous(), \"Should be no humongous regions in compaction queue\");\n-      G1RePrepareClosure re_prepare(cp, current);\n-      current->set_compaction_top(current->bottom());\n-      current->apply_to_marked_objects(collector()->mark_bitmap(), &re_prepare);\n-    }\n-  }\n-  cp->update();\n-}\n-\n-bool G1FullGCPrepareTask::G1CalculatePointersClosure::freed_regions() {\n-  if (_regions_freed) {\n-    return true;\n-  }\n-\n-  if (!_cp->has_regions()) {\n-    \/\/ No regions in queue, so no free ones either.\n-    return false;\n-  }\n-\n-  if (_cp->current_region() != _cp->regions()->last()) {\n-    \/\/ The current region used for compaction is not the last in the\n-    \/\/ queue. That means there is at least one free region in the queue.\n-    return true;\n-  }\n-\n-  \/\/ No free regions in the queue.\n-  return false;\n-}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":76,"deletions":163,"binary":false,"changes":239,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#include \"gc\/g1\/g1FullGCCompactionPoint.hpp\"\n-#include \"gc\/g1\/g1FullGCScope.hpp\"\n@@ -31,3 +29,2 @@\n-#include \"gc\/g1\/g1RootProcessor.hpp\"\n-#include \"gc\/g1\/heapRegionManager.hpp\"\n-#include \"gc\/shared\/referenceProcessor.hpp\"\n+#include \"gc\/g1\/heapRegion.hpp\"\n+#include \"memory\/allocation.hpp\"\n@@ -35,0 +32,1 @@\n+class G1CollectedHeap;\n@@ -37,0 +35,28 @@\n+class G1FullGCCompactionPoint;\n+class HeapRegion;\n+\n+\/\/ Determines the regions in the heap that should be part of the compaction and\n+\/\/ distributes them among the compaction queues in round-robin fashion.\n+class G1DetermineCompactionQueueClosure : public HeapRegionClosure {\n+  G1CollectedHeap* _g1h;\n+  G1FullCollector* _collector;\n+  uint _cur_worker;\n+\n+  template<bool is_humongous>\n+  inline void free_pinned_region(HeapRegion* hr);\n+\n+  inline bool should_compact(HeapRegion* hr) const;\n+\n+  \/\/ Returns the current worker id to assign a compaction point to, and selects\n+  \/\/ the next one round-robin style.\n+  inline uint next_worker();\n+\n+  inline G1FullGCCompactionPoint* next_compaction_point();\n+\n+  inline void add_to_compaction_queue(HeapRegion* hr);\n+\n+public:\n+  G1DetermineCompactionQueueClosure(G1FullCollector* collector);\n+\n+  inline bool do_heap_region(HeapRegion* hr) override;\n+};\n@@ -39,2 +65,1 @@\n-protected:\n-  volatile bool     _freed_regions;\n+  volatile bool     _has_free_compaction_targets;\n@@ -43,1 +68,1 @@\n-  void set_freed_regions();\n+  void set_has_free_compaction_targets();\n@@ -48,2 +73,3 @@\n-  void prepare_serial_compaction();\n-  bool has_freed_regions();\n+  \/\/ After the Prepare phase, are there any unused (empty) regions (compaction\n+  \/\/ targets) at the end of any compaction queues?\n+  bool has_free_compaction_targets();\n@@ -51,1 +77,1 @@\n-protected:\n+private:\n@@ -53,4 +79,0 @@\n-  private:\n-    template<bool is_humongous>\n-    void free_pinned_region(HeapRegion* hr);\n-  protected:\n@@ -61,1 +83,0 @@\n-    bool _regions_freed;\n@@ -63,1 +84,0 @@\n-    bool should_compact(HeapRegion* hr);\n@@ -65,3 +85,0 @@\n-    void prepare_for_compaction_work(G1FullGCCompactionPoint* cp, HeapRegion* hr);\n-\n-    void reset_region_metadata(HeapRegion* hr);\n@@ -74,1 +91,12 @@\n-    bool freed_regions();\n+  };\n+\n+  class G1ResetMetadataClosure : public HeapRegionClosure {\n+    G1CollectedHeap* _g1h;\n+    G1FullCollector* _collector;\n+\n+    void reset_region_metadata(HeapRegion* hr);\n+\n+  public:\n+    G1ResetMetadataClosure(G1FullCollector* collector);\n+\n+    bool do_heap_region(HeapRegion* hr);\n@@ -84,0 +112,1 @@\n+};\n@@ -85,3 +114,5 @@\n-  class G1RePrepareClosure : public StackObj {\n-    G1FullGCCompactionPoint* _cp;\n-    HeapRegion* _current;\n+\/\/ Closure to re-prepare objects in the serial compaction point queue regions for\n+\/\/ serial compaction.\n+class G1SerialRePrepareClosure : public StackObj {\n+  G1FullGCCompactionPoint* _cp;\n+  HeapRegion* _current;\n@@ -89,5 +120,4 @@\n-  public:\n-    G1RePrepareClosure(G1FullGCCompactionPoint* hrcp,\n-                       HeapRegion* hr) :\n-        _cp(hrcp),\n-        _current(hr) { }\n+public:\n+  G1SerialRePrepareClosure(G1FullGCCompactionPoint* hrcp, HeapRegion* hr) :\n+    _cp(hrcp),\n+    _current(hr) { }\n@@ -95,2 +125,1 @@\n-    size_t apply(oop object);\n-  };\n+  inline size_t apply(oop obj);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":61,"deletions":32,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_G1_G1FULLGCPREPARETASK_INLINE_HPP\n+#define SHARE_GC_G1_G1FULLGCPREPARETASK_INLINE_HPP\n+\n+#include \"gc\/g1\/g1FullGCPrepareTask.hpp\"\n+\n+#include \"gc\/g1\/g1CollectedHeap.inline.hpp\"\n+#include \"gc\/g1\/g1FullCollector.hpp\"\n+#include \"gc\/g1\/g1FullGCCompactionPoint.hpp\"\n+#include \"gc\/g1\/g1FullGCScope.hpp\"\n+#include \"gc\/g1\/heapRegion.inline.hpp\"\n+\n+template<bool is_humongous>\n+void G1DetermineCompactionQueueClosure::free_pinned_region(HeapRegion* hr) {\n+  if (is_humongous) {\n+    _g1h->free_humongous_region(hr, nullptr);\n+  } else {\n+    _g1h->free_region(hr, nullptr);\n+  }\n+  _collector->set_free(hr->hrm_index());\n+  add_to_compaction_queue(hr);\n+}\n+\n+inline bool G1DetermineCompactionQueueClosure::should_compact(HeapRegion* hr) const {\n+  \/\/ There is no need to iterate and forward objects in pinned regions ie.\n+  \/\/ prepare them for compaction.\n+  if (hr->is_pinned()) {\n+    return false;\n+  }\n+  size_t live_words = _collector->live_words(hr->hrm_index());\n+  size_t live_words_threshold = _collector->scope()->region_compaction_threshold();\n+  \/\/ High live ratio region will not be compacted.\n+  return live_words <= live_words_threshold;\n+}\n+\n+inline uint G1DetermineCompactionQueueClosure::next_worker() {\n+  uint result = _cur_worker;\n+  _cur_worker = (_cur_worker + 1) % _collector->workers();\n+  return result;\n+}\n+\n+inline G1FullGCCompactionPoint* G1DetermineCompactionQueueClosure::next_compaction_point() {\n+  return _collector->compaction_point(next_worker());\n+}\n+\n+inline void G1DetermineCompactionQueueClosure::add_to_compaction_queue(HeapRegion* hr) {\n+  hr->set_compaction_top(hr->bottom());\n+  G1FullGCCompactionPoint* cp = next_compaction_point();\n+  if (!cp->is_initialized()) {\n+    cp->initialize(hr);\n+  }\n+  \/\/ Add region to the compaction queue.\n+  cp->add(hr);\n+}\n+\n+inline bool G1DetermineCompactionQueueClosure::do_heap_region(HeapRegion* hr) {\n+  if (should_compact(hr)) {\n+    assert(!hr->is_humongous(), \"moving humongous objects not supported.\");\n+    add_to_compaction_queue(hr);\n+  } else {\n+    assert(hr->containing_set() == nullptr, \"already cleared by PrepareRegionsClosure\");\n+    if (hr->is_humongous()) {\n+      oop obj = cast_to_oop(hr->humongous_start_region()->bottom());\n+      bool is_empty = !_collector->mark_bitmap()->is_marked(obj);\n+      if (is_empty) {\n+        free_pinned_region<true>(hr);\n+      }\n+    } else if (hr->is_open_archive()) {\n+      bool is_empty = _collector->live_words(hr->hrm_index()) == 0;\n+      if (is_empty) {\n+        free_pinned_region<false>(hr);\n+      }\n+    } else if (hr->is_closed_archive()) {\n+      \/\/ nothing to do with closed archive region\n+    } else {\n+      assert(MarkSweepDeadRatio > 0,\n+             \"only skip compaction for other regions when MarkSweepDeadRatio > 0\");\n+\n+      \/\/ Too many live objects in the region; skip compacting it.\n+      _collector->update_from_compacting_to_skip_compacting(hr->hrm_index());\n+      log_trace(gc, phases)(\"Phase 2: skip compaction region index: %u, live words: \" SIZE_FORMAT,\n+                            hr->hrm_index(), _collector->live_words(hr->hrm_index()));\n+    }\n+  }\n+\n+  return false;\n+}\n+\n+inline size_t G1SerialRePrepareClosure::apply(oop obj) {\n+  \/\/ We only re-prepare objects forwarded within the current region, so\n+  \/\/ skip objects that are already forwarded to another region.\n+  if (obj->is_forwarded() && !_current->is_in(obj->forwardee())) {\n+    return obj->size();\n+  }\n+\n+  \/\/ Get size and forward.\n+  size_t size = obj->size();\n+  _cp->forward(obj, size);\n+\n+  return size;\n+}\n+\n+#endif \/\/ SHARE_GC_G1_G1FULLGCPREPARETASK_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.inline.hpp","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-                             bool do_maximum_compaction) :\n+                             bool do_maximal_compaction) :\n@@ -53,1 +53,1 @@\n-    _region_compaction_threshold(do_maximum_compaction ?\n+    _region_compaction_threshold(do_maximal_compaction ?\n@@ -73,1 +73,1 @@\n-size_t G1FullGCScope::region_compaction_threshold() {\n+size_t G1FullGCScope::region_compaction_threshold() const {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-  size_t region_compaction_threshold();\n+  size_t region_compaction_threshold() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionEventSender.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionTraceType.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,0 @@\n-  \/\/ _vo == UseNextMarking -> use \"next\" marking information,\n@@ -117,1 +116,1 @@\n-      \/\/ Verify that the strong code root list for this region\n+      \/\/ Verify that the code root list for this region\n@@ -119,1 +118,1 @@\n-      if (!hrrs->strong_code_roots_list_contains(_nm)) {\n+      if (!hrrs->code_roots_list_contains(_nm)) {\n@@ -209,1 +208,0 @@\n-  \/\/ _vo == UseNextMarking -> use \"next\" marking information,\n@@ -362,1 +360,0 @@\n-  \/\/ _vo == UseNextMarking -> use \"next\" marking information,\n@@ -410,3 +407,2 @@\n-        if (_vo != VerifyOption_G1UseNextMarking) {\n-          if (r->max_live_bytes() < not_dead_yet_cl.live_bytes()) {\n-            log_error(gc, verify)(\"[\" PTR_FORMAT \",\" PTR_FORMAT \"] max_live_bytes \" SIZE_FORMAT \" < calculated \" SIZE_FORMAT,\n+        if (r->max_live_bytes() < not_dead_yet_cl.live_bytes()) {\n+          log_error(gc, verify)(\"[\" PTR_FORMAT \",\" PTR_FORMAT \"] max_live_bytes \" SIZE_FORMAT \" < calculated \" SIZE_FORMAT,\n@@ -414,6 +410,1 @@\n-            _failures = true;\n-          }\n-        } else {\n-          \/\/ When vo == UseNextMarking we cannot currently do a sanity\n-          \/\/ check on the live bytes as the calculation has not been\n-          \/\/ finalized yet.\n+          _failures = true;\n@@ -438,1 +429,0 @@\n-  \/\/ _vo == UseNextMarking -> use \"next\" marking information,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-  \/\/ vo == UseNextMarking -> use \"next\" marking information\n@@ -70,3 +69,0 @@\n-  \/\/ Currently, there is only one case where this is called with\n-  \/\/ vo == UseNextMarking, which is to verify the \"next\" marking\n-  \/\/ information at the end of remark.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,7 +181,0 @@\n-void G1PageBasedVirtualSpace::pretouch_internal(size_t start_page, size_t end_page) {\n-  guarantee(start_page < end_page,\n-            \"Given start page \" SIZE_FORMAT \" is larger or equal to end page \" SIZE_FORMAT, start_page, end_page);\n-\n-  os::pretouch_memory(page_start(start_page), bounded_end_addr(end_page), _page_size);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PageBasedVirtualSpace.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,3 +90,0 @@\n-  \/\/ Pretouch the given memory range.\n-  void pretouch_internal(size_t start_page, size_t end_page);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1PageBasedVirtualSpace.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -437,0 +437,6 @@\n+void G1ParScanThreadState::update_bot_after_copying(oop obj, size_t word_sz) {\n+  HeapWord* obj_start = cast_from_oop<HeapWord*>(obj);\n+  HeapRegion* region = _g1h->heap_region_containing(obj_start);\n+  region->update_bot_for_obj(obj_start, word_sz);\n+}\n+\n@@ -506,4 +512,1 @@\n-      \/\/ Currently we only have two destinations and we only need BOT updates for\n-      \/\/ old. If the current allocation was done outside the PLAB this call will\n-      \/\/ have no effect since the _top of the PLAB has not changed.\n-      _plab_allocator->update_bot_for_plab_allocation(dest_attr, word_sz, node_index);\n+      update_bot_after_copying(obj, word_sz);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -172,0 +172,2 @@\n+  void update_bot_after_copying(oop obj, size_t word_sz);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-  size_t young_list_target_length() const { return _young_list_target_length; }\n+  uint young_list_target_length() const { return _young_list_target_length; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-  _buffers = G1BufferNodeList();\n+  _buffers = BufferNodeList();\n@@ -112,1 +112,1 @@\n-G1BufferNodeList G1RedirtyCardsQueueSet::take_all_completed_buffers() {\n+BufferNodeList G1RedirtyCardsQueueSet::take_all_completed_buffers() {\n@@ -114,1 +114,1 @@\n-  G1BufferNodeList result(_list.pop_all(), _tail, _entry_count);\n+  BufferNodeList result(_list.pop_all(), _tail, _entry_count);\n@@ -138,1 +138,1 @@\n-void G1RedirtyCardsQueueSet::add_bufferlist(const G1BufferNodeList& buffers) {\n+void G1RedirtyCardsQueueSet::add_bufferlist(const BufferNodeList& buffers) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RedirtyCardsQueue.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"gc\/g1\/g1BufferNodeList.hpp\"\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n@@ -45,1 +45,1 @@\n-  G1BufferNodeList _buffers;\n+  BufferNodeList _buffers;\n@@ -87,1 +87,1 @@\n-  void add_bufferlist(const G1BufferNodeList& buffers);\n+  void add_bufferlist(const BufferNodeList& buffers);\n@@ -92,1 +92,1 @@\n-  G1BufferNodeList take_all_completed_buffers();\n+  BufferNodeList take_all_completed_buffers();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RedirtyCardsQueue.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n@@ -948,2 +949,2 @@\n-  Tickspan _strong_code_root_scan_time;\n-  Tickspan _strong_code_trim_partially_time;\n+  Tickspan _code_root_scan_time;\n+  Tickspan _code_trim_partially_time;\n@@ -981,2 +982,2 @@\n-    _strong_code_root_scan_time(),\n-    _strong_code_trim_partially_time(),\n+    _code_root_scan_time(),\n+    _code_trim_partially_time(),\n@@ -999,3 +1000,3 @@\n-      G1EvacPhaseWithTrimTimeTracker timer(_pss, _strong_code_root_scan_time, _strong_code_trim_partially_time);\n-      \/\/ Scan the strong code root list attached to the current region\n-      r->strong_code_roots_do(_pss->closures()->weak_codeblobs());\n+      G1EvacPhaseWithTrimTimeTracker timer(_pss, _code_root_scan_time, _code_trim_partially_time);\n+      \/\/ Scan the code root list attached to the current region\n+      r->code_roots_do(_pss->closures()->weak_codeblobs());\n@@ -1009,2 +1010,2 @@\n-  Tickspan strong_code_root_scan_time() const { return _strong_code_root_scan_time;  }\n-  Tickspan strong_code_root_trim_partially_time() const { return _strong_code_trim_partially_time; }\n+  Tickspan code_root_scan_time() const { return _code_root_scan_time;  }\n+  Tickspan code_root_trim_partially_time() const { return _code_trim_partially_time; }\n@@ -1033,2 +1034,2 @@\n-  p->record_or_add_time_secs(coderoots_phase, worker_id, cl.strong_code_root_scan_time().seconds());\n-  p->add_time_secs(objcopy_phase, worker_id, cl.strong_code_root_trim_partially_time().seconds());\n+  p->record_or_add_time_secs(coderoots_phase, worker_id, cl.code_root_scan_time().seconds());\n+  p->add_time_secs(objcopy_phase, worker_id, cl.code_root_trim_partially_time().seconds());\n@@ -1432,1 +1433,1 @@\n-      G1BufferNodeList buffers = dcqs.take_all_completed_buffers();\n+      BufferNodeList buffers = dcqs.take_all_completed_buffers();\n@@ -1960,1 +1961,1 @@\n-      while (cur < hr->end()) {\n+      while (true) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -236,1 +236,1 @@\n-    \/\/ size of the strong code roots\n+    \/\/ size of the code roots\n@@ -244,1 +244,1 @@\n-    size_t code_root_mem_sz = hrrs->strong_code_roots_mem_size();\n+    size_t code_root_mem_sz = hrrs->code_roots_mem_size();\n@@ -249,1 +249,1 @@\n-    size_t code_root_elems = hrrs->strong_code_roots_list_length();\n+    size_t code_root_elems = hrrs->code_roots_list_length();\n@@ -303,1 +303,1 @@\n-    \/\/ Strong code root statistics\n+    \/\/ Code root statistics\n@@ -309,2 +309,2 @@\n-                  byte_size_in_proper_unit(max_code_root_rem_set->strong_code_roots_mem_size()),\n-                  proper_unit_for_byte_size(max_code_root_rem_set->strong_code_roots_mem_size()));\n+                  byte_size_in_proper_unit(max_code_root_rem_set->code_roots_mem_size()),\n+                  proper_unit_for_byte_size(max_code_root_rem_set->code_roots_mem_size()));\n@@ -324,3 +324,3 @@\n-                  byte_size_in_proper_unit(max_code_root_rem_set->strong_code_roots_mem_size()),\n-                  proper_unit_for_byte_size(max_code_root_rem_set->strong_code_roots_mem_size()),\n-                  max_code_root_rem_set->strong_code_roots_list_length());\n+                  byte_size_in_proper_unit(max_code_root_rem_set->code_roots_mem_size()),\n+                  proper_unit_for_byte_size(max_code_root_rem_set->code_roots_mem_size()),\n+                  max_code_root_rem_set->code_roots_list_length());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetSummary.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  \/\/ nmethods in the region's strong code roots set. So set G1BarrierNoOptRoots in\n+  \/\/ nmethods in the region's code roots set. So set G1BarrierNoOptRoots in\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SharedClosures.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-                                          false \/* do_maximum_compaction *\/);\n+                                          false \/* do_maximal_compaction *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,41 +62,0 @@\n-#if TASKQUEUE_STATS\n-uint G1YoungCollector::num_task_queues() const {\n-  return task_queues()->size();\n-}\n-\n-void G1YoungCollector::print_taskqueue_stats_hdr(outputStream* const st) {\n-  st->print_raw_cr(\"GC Task Stats\");\n-  st->print_raw(\"thr \"); TaskQueueStats::print_header(1, st); st->cr();\n-  st->print_raw(\"--- \"); TaskQueueStats::print_header(2, st); st->cr();\n-}\n-\n-void G1YoungCollector::print_taskqueue_stats() const {\n-  if (!log_is_enabled(Trace, gc, task, stats)) {\n-    return;\n-  }\n-  Log(gc, task, stats) log;\n-  ResourceMark rm;\n-  LogStream ls(log.trace());\n-  outputStream* st = &ls;\n-\n-  print_taskqueue_stats_hdr(st);\n-\n-  TaskQueueStats totals;\n-  const uint n = num_task_queues();\n-  for (uint i = 0; i < n; ++i) {\n-    st->print(\"%3u \", i); _g1h->task_queue(i)->stats.print(st); st->cr();\n-    totals += _g1h->task_queue(i)->stats;\n-  }\n-  st->print_raw(\"tot \"); totals.print(st); st->cr();\n-\n-  DEBUG_ONLY(totals.verify());\n-}\n-\n-void G1YoungCollector::reset_taskqueue_stats() {\n-  const uint n = num_task_queues();\n-  for (uint i = 0; i < n; ++i) {\n-    _g1h->task_queue(i)->stats.reset();\n-  }\n-}\n-#endif \/\/ TASKQUEUE_STATS\n-\n@@ -439,1 +398,1 @@\n-                               hr->rem_set()->strong_code_roots_list_length(),\n+                               hr->rem_set()->code_roots_list_length(),\n@@ -1150,2 +1109,1 @@\n-  TASKQUEUE_STATS_ONLY(print_taskqueue_stats());\n-  TASKQUEUE_STATS_ONLY(reset_taskqueue_stats());\n+  TASKQUEUE_STATS_ONLY(_g1h->task_queues()->print_and_reset_taskqueue_stats(\"Oop Queue\");)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":3,"deletions":45,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,7 +137,0 @@\n-#if TASKQUEUE_STATS\n-  uint num_task_queues() const;\n-  static void print_taskqueue_stats_hdr(outputStream* const st);\n-  void print_taskqueue_stats() const;\n-  void reset_taskqueue_stats();\n-#endif \/\/ TASKQUEUE_STATS\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -263,1 +263,0 @@\n-  reset_bot();\n@@ -307,1 +306,1 @@\n-void HeapRegion::add_strong_code_root(nmethod* nm) {\n+void HeapRegion::add_code_root(nmethod* nm) {\n@@ -309,1 +308,1 @@\n-  hrrs->add_strong_code_root(nm);\n+  hrrs->add_code_root(nm);\n@@ -312,1 +311,1 @@\n-void HeapRegion::add_strong_code_root_locked(nmethod* nm) {\n+void HeapRegion::add_code_root_locked(nmethod* nm) {\n@@ -315,1 +314,1 @@\n-  hrrs->add_strong_code_root_locked(nm);\n+  hrrs->add_code_root_locked(nm);\n@@ -318,1 +317,1 @@\n-void HeapRegion::remove_strong_code_root(nmethod* nm) {\n+void HeapRegion::remove_code_root(nmethod* nm) {\n@@ -320,1 +319,1 @@\n-  hrrs->remove_strong_code_root(nm);\n+  hrrs->remove_code_root(nm);\n@@ -323,1 +322,1 @@\n-void HeapRegion::strong_code_roots_do(CodeBlobClosure* blk) const {\n+void HeapRegion::code_roots_do(CodeBlobClosure* blk) const {\n@@ -325,1 +324,1 @@\n-  hrrs->strong_code_roots_do(blk);\n+  hrrs->code_roots_do(blk);\n@@ -328,1 +327,1 @@\n-class VerifyStrongCodeRootOopClosure: public OopClosure {\n+class VerifyCodeRootOopClosure: public OopClosure {\n@@ -356,1 +355,1 @@\n-  VerifyStrongCodeRootOopClosure(const HeapRegion* hr):\n+  VerifyCodeRootOopClosure(const HeapRegion* hr):\n@@ -366,1 +365,1 @@\n-class VerifyStrongCodeRootCodeBlobClosure: public CodeBlobClosure {\n+class VerifyCodeRootCodeBlobClosure: public CodeBlobClosure {\n@@ -370,1 +369,1 @@\n-  VerifyStrongCodeRootCodeBlobClosure(const HeapRegion* hr) :\n+  VerifyCodeRootCodeBlobClosure(const HeapRegion* hr) :\n@@ -378,1 +377,1 @@\n-        log_error(gc, verify)(\"region [\" PTR_FORMAT \",\" PTR_FORMAT \"] has dead nmethod \" PTR_FORMAT \" in its strong code roots\",\n+        log_error(gc, verify)(\"region [\" PTR_FORMAT \",\" PTR_FORMAT \"] has dead nmethod \" PTR_FORMAT \" in its code roots\",\n@@ -382,1 +381,1 @@\n-        VerifyStrongCodeRootOopClosure oop_cl(_hr);\n+        VerifyCodeRootOopClosure oop_cl(_hr);\n@@ -385,1 +384,1 @@\n-          log_error(gc, verify)(\"region [\" PTR_FORMAT \",\" PTR_FORMAT \"] has nmethod \" PTR_FORMAT \" in its strong code roots with no pointers into region\",\n+          log_error(gc, verify)(\"region [\" PTR_FORMAT \",\" PTR_FORMAT \"] has nmethod \" PTR_FORMAT \" in its code roots with no pointers into region\",\n@@ -400,1 +399,1 @@\n-void HeapRegion::verify_strong_code_roots(VerifyOption vo, bool* failures) const {\n+void HeapRegion::verify_code_roots(VerifyOption vo, bool* failures) const {\n@@ -407,1 +406,1 @@\n-    \/\/ unloading, code cache unloading, etc so the strong code roots\n+    \/\/ unloading, code cache unloading, etc so the code roots\n@@ -409,2 +408,2 @@\n-    \/\/ be consistent until the strong code roots are rebuilt after the\n-    \/\/ actual GC. Skip verifying the strong code roots in this particular\n+    \/\/ be consistent until the code roots are rebuilt after the\n+    \/\/ actual GC. Skip verifying the code roots in this particular\n@@ -417,1 +416,1 @@\n-  size_t strong_code_roots_length = hrrs->strong_code_roots_list_length();\n+  size_t code_roots_length = hrrs->code_roots_list_length();\n@@ -420,1 +419,1 @@\n-  \/\/ on its strong code root list\n+  \/\/ on its code root list\n@@ -422,1 +421,1 @@\n-    if (strong_code_roots_length > 0) {\n+    if (code_roots_length > 0) {\n@@ -424,1 +423,1 @@\n-                            HR_FORMAT_PARAMS(this), strong_code_roots_length);\n+                            HR_FORMAT_PARAMS(this), code_roots_length);\n@@ -431,1 +430,1 @@\n-    if (strong_code_roots_length > 0) {\n+    if (code_roots_length > 0) {\n@@ -433,1 +432,1 @@\n-                            HR_FORMAT_PARAMS(this), strong_code_roots_length);\n+                            HR_FORMAT_PARAMS(this), code_roots_length);\n@@ -439,2 +438,2 @@\n-  VerifyStrongCodeRootCodeBlobClosure cb_cl(this);\n-  strong_code_roots_do(&cb_cl);\n+  VerifyCodeRootCodeBlobClosure cb_cl(this);\n+  code_roots_do(&cb_cl);\n@@ -483,1 +482,0 @@\n-  \/\/ _vo == UseNextMarking -> use \"next\" marking information,\n@@ -733,1 +731,1 @@\n-  verify_strong_code_roots(vo, failures);\n+  verify_code_roots(vo, failures);\n@@ -783,1 +781,0 @@\n-  reset_bot();\n@@ -792,6 +789,2 @@\n-void HeapRegion::initialize_bot_threshold() {\n-  _bot_part.reset_bot();\n-}\n-\n-void HeapRegion::alloc_block_in_bot(HeapWord* start, HeapWord* end) {\n-  _bot_part.alloc_block(start, end);\n+void HeapRegion::update_bot_for_block(HeapWord* start, HeapWord* end) {\n+  _bot_part.update_for_block(start, end);\n@@ -813,1 +806,1 @@\n-    update_bot_at(address, word_size);\n+    update_bot_for_obj(address, word_size);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":31,"deletions":38,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -165,7 +165,2 @@\n-  \/\/ Update the BOT for the given address if it crosses the next\n-  \/\/ BOT threshold at or after obj_start.\n-  inline void update_bot_at(HeapWord* obj_start, size_t obj_size);\n-  \/\/ Update BOT at the given threshold for the given object. The\n-  \/\/ given object must cross the threshold.\n-  inline void update_bot_crossing_threshold(HeapWord** threshold, HeapWord* obj_start, HeapWord* obj_end);\n-  inline HeapWord* bot_threshold_for_addr(const void* addr);\n+  \/\/ Update BOT if this obj is the first entering a new card (i.e. crossing the card boundary).\n+  inline void update_bot_for_obj(HeapWord* obj_start, size_t obj_size);\n@@ -175,2 +170,1 @@\n-  void initialize_bot_threshold();\n-  void alloc_block_in_bot(HeapWord* start, HeapWord* end);\n+  void update_bot_for_block(HeapWord* start, HeapWord* end);\n@@ -200,4 +194,0 @@\n-  void reset_bot() {\n-    _bot_part.reset_bot();\n-  }\n-\n@@ -208,4 +198,0 @@\n-  void update_bot_threshold() {\n-    _bot_part.set_threshold(top());\n-  }\n-\n@@ -580,3 +566,3 @@\n-  void add_strong_code_root(nmethod* nm);\n-  void add_strong_code_root_locked(nmethod* nm);\n-  void remove_strong_code_root(nmethod* nm);\n+  void add_code_root(nmethod* nm);\n+  void add_code_root_locked(nmethod* nm);\n+  void remove_code_root(nmethod* nm);\n@@ -585,2 +571,2 @@\n-  \/\/ the strong code roots list for this region\n-  void strong_code_roots_do(CodeBlobClosure* blk) const;\n+  \/\/ the code roots list for this region\n+  void code_roots_do(CodeBlobClosure* blk) const;\n@@ -591,1 +577,1 @@\n-  \/\/ Verify that the entries on the strong code root list for this\n+  \/\/ Verify that the entries on the code root list for this\n@@ -593,1 +579,1 @@\n-  void verify_strong_code_roots(VerifyOption vo, bool* failures) const;\n+  void verify_code_roots(VerifyOption vo, bool* failures) const;\n@@ -599,1 +585,0 @@\n-  \/\/ vo == UseNextMarking -> use \"next\" marking information\n@@ -605,3 +590,0 @@\n-  \/\/ Currently, there is only one case where this is called with\n-  \/\/ vo == UseNextMarking, which is to verify the \"next\" marking\n-  \/\/ information at the end of remark.\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":10,"deletions":28,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -186,4 +186,0 @@\n-  if (is_empty()) {\n-    reset_bot();\n-  }\n-\n@@ -234,12 +230,1 @@\n-inline HeapWord* HeapRegion::bot_threshold_for_addr(const void* addr) {\n-  HeapWord* threshold = _bot_part.threshold_for_addr(addr);\n-  assert(threshold >= addr,\n-         \"threshold must be at or after given address. \" PTR_FORMAT \" >= \" PTR_FORMAT,\n-         p2i(threshold), p2i(addr));\n-  assert(is_old(),\n-         \"Should only calculate BOT threshold for old regions. addr: \" PTR_FORMAT \" region:\" HR_FORMAT,\n-         p2i(addr), HR_FORMAT_PARAMS(this));\n-  return threshold;\n-}\n-\n-inline void HeapRegion::update_bot_crossing_threshold(HeapWord** threshold, HeapWord* obj_start, HeapWord* obj_end) {\n+inline void HeapRegion::update_bot_for_obj(HeapWord* obj_start, size_t obj_size) {\n@@ -247,6 +232,0 @@\n-  assert(is_in(obj_start), \"obj_start must be in this region: \" HR_FORMAT\n-         \" obj_start \" PTR_FORMAT \" obj_end \" PTR_FORMAT \" threshold \" PTR_FORMAT,\n-         HR_FORMAT_PARAMS(this),\n-         p2i(obj_start), p2i(obj_end), p2i(*threshold));\n-  _bot_part.alloc_block_work(threshold, obj_start, obj_end);\n-}\n@@ -254,2 +233,0 @@\n-inline void HeapRegion::update_bot_at(HeapWord* obj_start, size_t obj_size) {\n-  HeapWord* threshold = bot_threshold_for_addr(obj_start);\n@@ -258,3 +235,6 @@\n-  if (obj_end > threshold) {\n-    update_bot_crossing_threshold(&threshold, obj_start, obj_end);\n-  }\n+  assert(is_in(obj_start), \"obj_start must be in this region: \" HR_FORMAT\n+         \" obj_start \" PTR_FORMAT \" obj_end \" PTR_FORMAT,\n+         HR_FORMAT_PARAMS(this),\n+         p2i(obj_start), p2i(obj_end));\n+\n+  _bot_part.update_for_block(obj_start, obj_end);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":7,"deletions":27,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionBounds.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-void HeapRegionRemSet::add_strong_code_root(nmethod* nm) {\n+void HeapRegionRemSet::add_code_root(nmethod* nm) {\n@@ -128,1 +128,1 @@\n-          \"should call add_strong_code_root_locked instead. CodeCache_lock->owned_by_self(): %s, is_at_safepoint(): %s\",\n+          \"should call add_code_root_locked instead. CodeCache_lock->owned_by_self(): %s, is_at_safepoint(): %s\",\n@@ -133,1 +133,1 @@\n-    add_strong_code_root_locked(nm);\n+    add_code_root_locked(nm);\n@@ -137,1 +137,1 @@\n-void HeapRegionRemSet::add_strong_code_root_locked(nmethod* nm) {\n+void HeapRegionRemSet::add_code_root_locked(nmethod* nm) {\n@@ -148,1 +148,1 @@\n-void HeapRegionRemSet::remove_strong_code_root(nmethod* nm) {\n+void HeapRegionRemSet::remove_code_root(nmethod* nm) {\n@@ -159,1 +159,1 @@\n-void HeapRegionRemSet::strong_code_roots_do(CodeBlobClosure* blk) const {\n+void HeapRegionRemSet::code_roots_do(CodeBlobClosure* blk) const {\n@@ -163,1 +163,1 @@\n-void HeapRegionRemSet::clean_strong_code_roots(HeapRegion* hr) {\n+void HeapRegionRemSet::clean_code_roots(HeapRegion* hr) {\n@@ -167,1 +167,1 @@\n-size_t HeapRegionRemSet::strong_code_roots_mem_size() {\n+size_t HeapRegionRemSet::code_roots_mem_size() {\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    return (strong_code_roots_list_length() == 0) && cardset_is_empty();\n+    return (code_roots_list_length() == 0) && cardset_is_empty();\n@@ -80,1 +80,1 @@\n-    return (strong_code_roots_list_length() == 0) && _card_set.occupancy_less_or_equal_to(occ);\n+    return (code_roots_list_length() == 0) && _card_set.occupancy_less_or_equal_to(occ);\n@@ -131,1 +131,1 @@\n-  \/\/ The actual # of bytes this hr_remset takes up. Also includes the strong code\n+  \/\/ The actual # of bytes this hr_remset takes up. Also includes the code\n@@ -135,2 +135,2 @@\n-      + (sizeof(HeapRegionRemSet) - sizeof(G1CardSet)) \/\/ Avoid double-counting G1CardSet.\n-      + strong_code_roots_mem_size();\n+           + (sizeof(HeapRegionRemSet) - sizeof(G1CardSet)) \/\/ Avoid double-counting G1CardSet.\n+           + code_roots_mem_size();\n@@ -157,3 +157,3 @@\n-  void add_strong_code_root(nmethod* nm);\n-  void add_strong_code_root_locked(nmethod* nm);\n-  void remove_strong_code_root(nmethod* nm);\n+  void add_code_root(nmethod* nm);\n+  void add_code_root_locked(nmethod* nm);\n+  void remove_code_root(nmethod* nm);\n@@ -161,3 +161,2 @@\n-  \/\/ Applies blk->do_code_blob() to each of the entries in\n-  \/\/ the strong code roots list\n-  void strong_code_roots_do(CodeBlobClosure* blk) const;\n+  \/\/ Applies blk->do_code_blob() to each of the entries in _code_roots\n+  void code_roots_do(CodeBlobClosure* blk) const;\n@@ -165,1 +164,1 @@\n-  void clean_strong_code_roots(HeapRegion* hr);\n+  void clean_code_roots(HeapRegion* hr);\n@@ -167,2 +166,2 @@\n-  \/\/ Returns the number of elements in the strong code roots list\n-  size_t strong_code_roots_list_length() const {\n+  \/\/ Returns the number of elements in _code_roots\n+  size_t code_roots_list_length() const {\n@@ -172,1 +171,1 @@\n-  \/\/ Returns true if the strong code roots contains the given\n+  \/\/ Returns true if the code roots contains the given\n@@ -174,1 +173,1 @@\n-  bool strong_code_roots_list_contains(nmethod* nm) {\n+  bool code_roots_list_contains(nmethod* nm) {\n@@ -179,2 +178,2 @@\n-  \/\/ consumed by the strong code roots.\n-  size_t strong_code_roots_mem_size();\n+  \/\/ consumed by the code roots.\n+  size_t code_roots_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionTracer.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionType.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-  assert_lock_strong(ExpandHeap_lock);\n+  assert_lock_strong(PSOldGenExpand_lock);\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-  \/\/ precondition: holding ExpandHeap_lock\n+  \/\/ precondition: holding PSOldGenExpand_lock\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,0 +135,7 @@\n+  assert(is_aligned(start_addr, _card_size), \"precondition\");\n+\n+  if (start_addr == end_addr) {\n+    \/\/ No objects in empty range.\n+    return false;\n+  }\n+\n@@ -136,1 +143,1 @@\n-  jbyte* end_block = block_for_addr(end_addr);\n+  jbyte* end_block = block_for_addr(end_addr - 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -168,3 +168,5 @@\n-  \/\/ Return true if an object starts in the range of heap addresses.\n-  \/\/ If an object starts at an address corresponding to\n-  \/\/ \"start\", the method will return true.\n+  \/\/ Return true iff an object starts in\n+  \/\/   [start_addr, end_addr_aligned_up)\n+  \/\/ where\n+  \/\/   end_addr_aligned_up = align_up(end_addr, _card_size)\n+  \/\/ Precondition: start_addr is card-size aligned\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-  _manager_array = NEW_C_HEAP_ARRAY(ParCompactionManager*, parallel_gc_threads+1, mtGC);\n+  _manager_array = NEW_C_HEAP_ARRAY(ParCompactionManager*, parallel_gc_threads, mtGC);\n@@ -87,3 +87,0 @@\n-  \/\/ The VMThread gets its own ParCompactionManager, which is not available\n-  \/\/ for work stealing.\n-  _manager_array[parallel_gc_threads] = new ParCompactionManager();\n@@ -100,1 +97,1 @@\n-  for (uint i=0; i<=parallel_gc_threads; i++) {\n+  for (uint i=0; i<parallel_gc_threads; i++) {\n@@ -107,1 +104,1 @@\n-  for (uint i=0; i<=parallel_gc_threads; i++) {\n+  for (uint i=0; i<parallel_gc_threads; i++) {\n@@ -119,0 +116,9 @@\n+bool ParCompactionManager::transfer_from_overflow_stack(ObjArrayTask& task) {\n+  while (_objarray_stack.pop_overflow(task)) {\n+    if (!_objarray_stack.try_push_to_taskqueue(task)) {\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n+\n@@ -121,1 +127,2 @@\n-    \/\/ Drain the overflow stack first, to allow stealing from the marking stack.\n+    \/\/ First, try to move tasks from the overflow stack into the shared buffer, so\n+    \/\/ that other threads can steal. Otherwise process the overflow stack first.\n@@ -124,1 +131,3 @@\n-      follow_contents(obj);\n+      if (!marking_stack()->try_push_to_taskqueue(obj)) {\n+        follow_contents(obj);\n+      }\n@@ -132,1 +141,1 @@\n-    if (_objarray_stack.pop_overflow(task) || _objarray_stack.pop_local(task)) {\n+    if (transfer_from_overflow_stack(task) || _objarray_stack.pop_local(task)) {\n@@ -187,1 +196,1 @@\n-  for (uint i = 0; i <= parallel_gc_threads; i++) {\n+  for (uint i = 0; i < parallel_gc_threads; i++) {\n@@ -194,1 +203,1 @@\n-  for (uint i = 0; i <= parallel_gc_threads; i++) {\n+  for (uint i = 0; i < parallel_gc_threads; i++) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+  bool transfer_from_overflow_stack(ObjArrayTask& task);\n@@ -150,1 +151,3 @@\n-  static ParCompactionManager* get_vmthread_cm() { return _manager_array[ParallelGCThreads]; }\n+  \/\/ Get the compaction manager when doing evacuation work from the VM thread.\n+  \/\/ Simply use the first compaction manager here.\n+  static ParCompactionManager* get_vmthread_cm() { return _manager_array[0]; }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-    MutexLocker x(ExpandHeap_lock);\n+    MutexLocker x(PSOldGenExpand_lock);\n@@ -184,1 +184,1 @@\n-  assert_lock_strong(ExpandHeap_lock);\n+  assert_lock_strong(PSOldGenExpand_lock);\n@@ -222,1 +222,1 @@\n-  assert_lock_strong(ExpandHeap_lock);\n+  assert_lock_strong(PSOldGenExpand_lock);\n@@ -258,1 +258,1 @@\n-  assert_lock_strong(ExpandHeap_lock);\n+  assert_lock_strong(PSOldGenExpand_lock);\n@@ -271,1 +271,1 @@\n-  assert_lock_strong(ExpandHeap_lock);\n+  assert_lock_strong(PSOldGenExpand_lock);\n@@ -276,1 +276,0 @@\n-    assert_lock_strong(ExpandHeap_lock);\n@@ -315,1 +314,1 @@\n-    MutexLocker x(ExpandHeap_lock);\n+    MutexLocker x(PSOldGenExpand_lock);\n@@ -319,1 +318,1 @@\n-    MutexLocker x(ExpandHeap_lock);\n+    MutexLocker x(PSOldGenExpand_lock);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1598,2 +1598,1 @@\n-void PSParallelCompact::summary_phase(ParCompactionManager* cm,\n-                                      bool maximum_compaction)\n+void PSParallelCompact::summary_phase(bool maximum_compaction)\n@@ -1738,4 +1737,0 @@\n-  TimeStamp marking_start;\n-  TimeStamp compaction_start;\n-  TimeStamp collection_exit;\n-\n@@ -1763,3 +1758,0 @@\n-  \/\/ Get the compaction manager reserved for the VM thread.\n-  ParCompactionManager* const vmthread_cm = ParCompactionManager::get_vmthread_cm();\n-\n@@ -1794,2 +1786,1 @@\n-    marking_start.update();\n-    marking_phase(vmthread_cm, &_gc_tracer);\n+    marking_phase(&_gc_tracer);\n@@ -1799,1 +1790,1 @@\n-    summary_phase(vmthread_cm, maximum_heap_compaction || max_on_system_gc);\n+    summary_phase(maximum_heap_compaction || max_on_system_gc);\n@@ -1810,1 +1801,0 @@\n-    compaction_start.update();\n@@ -1925,2 +1915,0 @@\n-  collection_exit.update();\n-\n@@ -1930,4 +1918,0 @@\n-  log_debug(gc, task, time)(\"VM-Thread \" JLONG_FORMAT \" \" JLONG_FORMAT \" \" JLONG_FORMAT,\n-                         marking_start.ticks(), compaction_start.ticks(),\n-                         collection_exit.ticks());\n-\n@@ -1967,30 +1951,0 @@\n-static void mark_from_roots_work(ParallelRootType::Value root_type, uint worker_id) {\n-  assert(ParallelScavengeHeap::heap()->is_gc_active(), \"called outside gc\");\n-\n-  ParCompactionManager* cm =\n-    ParCompactionManager::gc_thread_compaction_manager(worker_id);\n-  PCMarkAndPushClosure mark_and_push_closure(cm);\n-\n-  switch (root_type) {\n-    case ParallelRootType::class_loader_data:\n-      {\n-        CLDToOopClosure cld_closure(&mark_and_push_closure, ClassLoaderData::_claim_strong);\n-        ClassLoaderDataGraph::always_strong_cld_do(&cld_closure);\n-      }\n-      break;\n-\n-    case ParallelRootType::code_cache:\n-      \/\/ Do not treat nmethods as strong roots for mark\/sweep, since we can unload them.\n-      \/\/ScavengableNMethods::scavengable_nmethods_do(CodeBlobToOopClosure(&mark_and_push_closure));\n-      break;\n-\n-    case ParallelRootType::sentinel:\n-    DEBUG_ONLY(default:) \/\/ DEBUG_ONLY hack will create compile error on release builds (-Wswitch) and runtime check on debug builds\n-      fatal(\"Bad enumeration value: %u\", root_type);\n-      break;\n-  }\n-\n-  \/\/ Do the real work\n-  cm->follow_marking_stacks();\n-}\n-\n@@ -2003,2 +1957,0 @@\n-  oop obj = NULL;\n-  ObjArrayTask task;\n@@ -2006,1 +1958,3 @@\n-    while (ParCompactionManager::steal_objarray(worker_id,  task)) {\n+    oop obj = NULL;\n+    ObjArrayTask task;\n+    if (ParCompactionManager::steal_objarray(worker_id,  task)) {\n@@ -2008,3 +1962,1 @@\n-      cm->follow_marking_stacks();\n-    }\n-    while (ParCompactionManager::steal(worker_id, obj)) {\n+    } else if (ParCompactionManager::steal(worker_id, obj)) {\n@@ -2012,1 +1964,0 @@\n-      cm->follow_marking_stacks();\n@@ -2014,0 +1965,1 @@\n+    cm->follow_marking_stacks();\n@@ -2020,1 +1972,0 @@\n-  SequentialSubTasksDone _subtasks;\n@@ -2028,1 +1979,0 @@\n-      _subtasks(ParallelRootType::sentinel),\n@@ -2030,2 +1980,1 @@\n-      _active_workers(active_workers) {\n-  }\n+      _active_workers(active_workers) {}\n@@ -2034,2 +1983,9 @@\n-    for (uint task = 0; _subtasks.try_claim_task(task); \/*empty*\/ ) {\n-      mark_from_roots_work(static_cast<ParallelRootType::Value>(task), worker_id);\n+    ParCompactionManager* cm = ParCompactionManager::gc_thread_compaction_manager(worker_id);\n+    PCMarkAndPushClosure mark_and_push_closure(cm);\n+\n+    {\n+      CLDToOopClosure cld_closure(&mark_and_push_closure, ClassLoaderData::_claim_strong);\n+      ClassLoaderDataGraph::always_strong_cld_do(&cld_closure);\n+\n+      \/\/ Do the real work\n+      cm->follow_marking_stacks();\n@@ -2043,3 +1999,1 @@\n-      ParCompactionManager* cm = ParCompactionManager::gc_thread_compaction_manager(worker_id);\n-      PCMarkAndPushClosure closure(cm);\n-      _oop_storage_set_par_state.oops_do(&closure);\n+      _oop_storage_set_par_state.oops_do(&mark_and_push_closure);\n@@ -2078,2 +2032,1 @@\n-void PSParallelCompact::marking_phase(ParCompactionManager* cm,\n-                                      ParallelOldTracer *gc_tracer) {\n+void PSParallelCompact::marking_phase(ParallelOldTracer *gc_tracer) {\n@@ -2138,13 +2091,3 @@\n-}\n-\n-#ifdef ASSERT\n-void PCAdjustPointerClosure::verify_cm(ParCompactionManager* cm) {\n-  assert(cm != NULL, \"associate ParCompactionManage should not be NULL\");\n-  auto vmthread_cm = ParCompactionManager::get_vmthread_cm();\n-  if (Thread::current()->is_VM_thread()) {\n-    assert(cm == vmthread_cm, \"VM threads should use ParCompactionManager from get_vmthread_cm()\");\n-  } else {\n-    assert(Thread::current()->is_Worker_thread(), \"Must be a GC thread\");\n-    assert(cm != vmthread_cm, \"GC threads should use ParCompactionManager from gc_thread_compaction_manager()\");\n-  }\n-}\n+#if TASKQUEUE_STATS\n+  ParCompactionManager::oop_task_queues()->print_and_reset_taskqueue_stats(\"Oop Queue\");\n+  ParCompactionManager::_objarray_task_queues->print_and_reset_taskqueue_stats(\"ObjArrayOop Queue\");\n@@ -2152,0 +2095,1 @@\n+}\n@@ -2543,3 +2487,1 @@\n-    \/\/ Update the deferred objects, if any. In principle, any compaction\n-    \/\/ manager can be used. However, since the current thread is VM thread, we\n-    \/\/ use the rightful one to keep the verification logic happy.\n+    \/\/ Update the deferred objects, if any.\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":25,"deletions":83,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -1065,2 +1065,1 @@\n-  static void marking_phase(ParCompactionManager* cm,\n-                            ParallelOldTracer *gc_tracer);\n+  static void marking_phase(ParallelOldTracer *gc_tracer);\n@@ -1126,1 +1125,1 @@\n-  static void summary_phase(ParCompactionManager* cm, bool maximum_compaction);\n+  static void summary_phase(bool maximum_compaction);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -129,3 +129,1 @@\n-  PCAdjustPointerClosure(ParCompactionManager* cm) {\n-    verify_cm(cm);\n-    _cm = cm;\n+  PCAdjustPointerClosure(ParCompactionManager* cm) : _cm(cm) {\n@@ -140,2 +138,0 @@\n-\n-  static void verify_cm(ParCompactionManager* cm) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.inline.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-  const uint promotion_manager_num = ParallelGCThreads + 1;\n+  const uint promotion_manager_num = ParallelGCThreads;\n@@ -98,1 +98,1 @@\n-  return &_manager_array[ParallelGCThreads];\n+  return &_manager_array[0];\n@@ -107,1 +107,1 @@\n-  for(uint i=0; i<ParallelGCThreads+1; i++) {\n+  for(uint i=0; i<ParallelGCThreads; i++) {\n@@ -116,1 +116,1 @@\n-  for (uint i = 0; i < ParallelGCThreads + 1; i++) {\n+  for (uint i = 0; i < ParallelGCThreads; i++) {\n@@ -150,2 +150,1 @@\n-void\n-PSPromotionManager::print_taskqueue_stats() {\n+void PSPromotionManager::print_taskqueue_stats() {\n@@ -158,13 +157,2 @@\n-  outputStream* out = &ls;\n-  out->print_cr(\"== GC Tasks Stats, GC %3d\",\n-                ParallelScavengeHeap::heap()->total_collections());\n-\n-  TaskQueueStats totals;\n-  out->print(\"thr \"); TaskQueueStats::print_header(1, out); out->cr();\n-  out->print(\"--- \"); TaskQueueStats::print_header(2, out); out->cr();\n-  for (uint i = 0; i < ParallelGCThreads + 1; ++i) {\n-    TaskQueueStats& next = manager_array(i)->_claimed_stack_depth.stats;\n-    out->print(\"%3d \", i); next.print(out); out->cr();\n-    totals += next;\n-  }\n-  out->print(\"tot \"); totals.print(out); out->cr();\n+\n+  stack_array_depth()->print_taskqueue_stats(&ls, \"Oop Queue\");\n@@ -173,3 +161,3 @@\n-  for (uint i = 0; i < hlines; ++i) out->print_cr(\"%s\", pm_stats_hdr[i]);\n-  for (uint i = 0; i < ParallelGCThreads + 1; ++i) {\n-    manager_array(i)->print_local_stats(out, i);\n+  for (uint i = 0; i < hlines; ++i) ls.print_cr(\"%s\", pm_stats_hdr[i]);\n+  for (uint i = 0; i < ParallelGCThreads; ++i) {\n+    manager_array(i)->print_local_stats(&ls, i);\n@@ -179,2 +167,1 @@\n-void\n-PSPromotionManager::reset_stats() {\n+void PSPromotionManager::reset_stats() {\n@@ -219,2 +206,0 @@\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-\n@@ -247,6 +232,0 @@\n-#ifdef ASSERT\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-  MutableSpace* to_space = heap->young_gen()->to_space();\n-  MutableSpace* old_space = heap->old_gen()->object_space();\n-#endif \/* ASSERT *\/\n-\n@@ -363,1 +342,4 @@\n-    _preserved_marks->push_if_necessary(obj, obj_mark);\n+    \/\/ Save the markWord of promotion-failed objs in _preserved_marks for later\n+    \/\/ restoration. This way we don't have to walk the young-gen to locate\n+    \/\/ these promotion-failed objs.\n+    _preserved_marks->push_always(obj, obj_mark);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.cpp","additions":16,"deletions":34,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  assert(index <= ParallelGCThreads, \"out of range manager_array access\");\n+  assert(index < ParallelGCThreads, \"out of range manager_array access\");\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/psRootType.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -361,6 +361,0 @@\n-  TimeStamp scavenge_entry;\n-  TimeStamp scavenge_midpoint;\n-  TimeStamp scavenge_exit;\n-\n-  scavenge_entry.update();\n-\n@@ -466,2 +460,0 @@\n-    scavenge_midpoint.update();\n-\n@@ -672,6 +664,0 @@\n-  scavenge_exit.update();\n-\n-  log_debug(gc, task, time)(\"VM-Thread \" JLONG_FORMAT \" \" JLONG_FORMAT \" \" JLONG_FORMAT,\n-                            scavenge_entry.ticks(), scavenge_midpoint.ticks(),\n-                            scavenge_exit.ticks());\n-\n@@ -687,2 +673,0 @@\n-\/\/ This method iterates over all objects in the young generation,\n-\/\/ removing all forwarding references. It then restores any preserved marks.\n@@ -690,6 +674,0 @@\n-  ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n-  PSYoungGen* young_gen = heap->young_gen();\n-\n-  RemoveForwardedPointerClosure remove_fwd_ptr_closure;\n-  young_gen->object_iterate(&remove_fwd_ptr_closure);\n-\n@@ -699,1 +677,1 @@\n-  NOT_PRODUCT(heap->reset_promotion_should_fail();)\n+  NOT_PRODUCT(ParallelScavengeHeap::heap()->reset_promotion_should_fail();)\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -291,1 +291,0 @@\n-  MutexLocker x(ExpandHeap_lock);\n@@ -672,3 +671,15 @@\n-  RemoveForwardedPointerClosure rspc;\n-  eden()->object_iterate(&rspc);\n-  from()->object_iterate(&rspc);\n+  assert(_promotion_failed, \"precondition\");\n+\n+  \/\/ Will enter Full GC soon due to failed promotion. Must reset the mark word\n+  \/\/ of objs in young-gen so that no objs are marked (forwarded) when Full GC\n+  \/\/ starts. (The mark word is overloaded: `is_marked()` == `is_forwarded()`.)\n+  struct ResetForwardedMarkWord : ObjectClosure {\n+    void do_object(oop obj) override {\n+      if (obj->is_forwarded()) {\n+        obj->init_mark();\n+      }\n+    }\n+  } cl;\n+  eden()->object_iterate(&cl);\n+  from()->object_iterate(&cl);\n+\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  bool can_load_archived_objects() const { return true; }\n+  bool can_load_archived_objects() const { return UseCompressedOops; }\n","filename":"src\/hotspot\/share\/gc\/serial\/serialHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,0 @@\n-  GCMutexLocker x(ExpandHeap_lock);\n@@ -212,1 +211,1 @@\n-  assert_locked_or_safepoint(ExpandHeap_lock);\n+  assert_locked_or_safepoint(Heap_lock);\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/accessBarrierSupport.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/ageTableTracer.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/allocTracer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"runtime\/frame.inline.hpp\"\n@@ -57,0 +58,1 @@\n+  AARCH64_ONLY(return_address = pauth_strip_pointer(return_address));\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/blockOffsetTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n+#include \"utilities\/debug.hpp\"\n+\n+BufferNodeList::BufferNodeList() :\n+  _head(NULL), _tail(NULL), _entry_count(0) {}\n+\n+BufferNodeList::BufferNodeList(BufferNode* head,\n+                               BufferNode* tail,\n+                               size_t entry_count) :\n+  _head(head), _tail(tail), _entry_count(entry_count)\n+{\n+  assert((_head == NULL) == (_tail == NULL), \"invariant\");\n+  assert((_head == NULL) == (_entry_count == 0), \"invariant\");\n+}\n","filename":"src\/hotspot\/share\/gc\/shared\/bufferNodeList.cpp","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_SHARED_BUFFERNODELIST_HPP\n+#define SHARE_GC_SHARED_BUFFERNODELIST_HPP\n+\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+class BufferNode;\n+\n+struct BufferNodeList {\n+  BufferNode* _head;            \/\/ First node in list or NULL if empty.\n+  BufferNode* _tail;            \/\/ Last node in list or NULL if empty.\n+  size_t _entry_count;          \/\/ Sum of entries in nodes in list.\n+\n+  BufferNodeList();\n+  BufferNodeList(BufferNode* head, BufferNode* tail, size_t entry_count);\n+};\n+\n+#endif \/\/ SHARE_GC_SHARED_BUFFERNODELIST_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/bufferNodeList.hpp","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-      Node* new_val = kit->dstore_rounding(val.node());\n+      Node* new_val = kit->dprecision_rounding(val.node());\n","filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-class CollectedHeap : public CHeapObj<mtInternal> {\n+class CollectedHeap : public CHeapObj<mtGC> {\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/concurrentGCBreakpoints.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/gcCause.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/gcConfig.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLogPrecious.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/gcWhen.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -506,4 +506,0 @@\n-  product(intx, PrefetchFieldsAhead, -1,                                    \\\n-          \"How many fields ahead to prefetch in oop scan (<= 0 means off)\") \\\n-          range(-1, max_jint)                                               \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/locationPrinter.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/objectCountEventSender.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  virtual void set_buf(HeapWord* buf, size_t new_word_sz) {\n+  void set_buf(HeapWord* buf, size_t new_word_sz) {\n","filename":"src\/hotspot\/share\/gc\/shared\/plab.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,6 +74,0 @@\n-void RemoveForwardedPointerClosure::do_object(oop obj) {\n-  if (obj->is_forwarded()) {\n-    PreservedMarks::init_forwarded_mark(obj);\n-  }\n-}\n-\n@@ -128,2 +122,4 @@\n-\n-    log_trace(gc)(\"Restored %zu marks\", _total_size);\n+    size_t mem_size = _total_size * (sizeof(oop) + sizeof(markWord));\n+    log_trace(gc)(\"Restored %zu marks, occupying %zu %s\", _total_size,\n+                                                          byte_size_in_proper_unit(mem_size),\n+                                                          proper_unit_for_byte_size(mem_size));\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,1 @@\n+  inline void push_always(oop obj, markWord m);\n@@ -68,1 +69,0 @@\n-  inline static void init_forwarded_mark(oop obj);\n@@ -77,5 +77,0 @@\n-class RemoveForwardedPointerClosure: public ObjectClosure {\n-public:\n-  virtual void do_object(oop obj);\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,4 @@\n-inline void PreservedMarks::init_forwarded_mark(oop obj) {\n-  obj->init_mark();\n+inline void PreservedMarks::push_always(oop obj, markWord m) {\n+  assert(!m.is_marked(), \"precondition\");\n+  OopAndMarkWord elem(obj, m);\n+  _stack.push(elem);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,27 @@\n+BufferNode::Allocator::PendingList::PendingList() :\n+  _tail(nullptr), _head(nullptr), _count(0) {}\n+\n+BufferNode::Allocator::PendingList::~PendingList() {\n+  delete_list(Atomic::load(&_head));\n+}\n+\n+size_t BufferNode::Allocator::PendingList::add(BufferNode* node) {\n+  assert(node->next() == nullptr, \"precondition\");\n+  BufferNode* old_head = Atomic::xchg(&_head, node);\n+  if (old_head != nullptr) {\n+    node->set_next(old_head);\n+  } else {\n+    assert(_tail == nullptr, \"invariant\");\n+    _tail = node;\n+  }\n+  return Atomic::add(&_count, size_t(1));\n+}\n+\n+BufferNodeList BufferNode::Allocator::PendingList::take_all() {\n+  BufferNodeList result{Atomic::load(&_head), _tail, Atomic::load(&_count)};\n+  Atomic::store(&_head, (BufferNode*)nullptr);\n+  _tail = nullptr;\n+  Atomic::store(&_count, size_t(0));\n+  return result;\n+}\n+\n@@ -61,1 +88,2 @@\n-  _pending_list(),\n+  _pending_lists(),\n+  _active_pending_list(0),\n@@ -63,1 +91,0 @@\n-  _pending_count(0),\n@@ -73,1 +100,0 @@\n-  delete_list(_pending_list.pop_all());\n@@ -112,1 +138,1 @@\n-\/\/ initially place released nodes on the _pending_list, and transfer\n+\/\/ initially place released nodes on the pending list, and transfer\n@@ -114,6 +140,3 @@\n-\/\/ permitted, with a lock bit to control access to that phase.  A\n-\/\/ transfer takes all the nodes from the _pending_list, synchronizes on\n-\/\/ the _free_list pops, and then adds the former pending nodes to the\n-\/\/ _free_list.  While that's happening, other threads might be adding\n-\/\/ other nodes to the _pending_list, to be dealt with by some later\n-\/\/ transfer.\n+\/\/ permitted, with a lock bit to control access to that phase.  While\n+\/\/ a transfer is in progress, other threads might be adding other nodes\n+\/\/ to the pending list, to be dealt with by some later transfer.\n@@ -133,5 +156,8 @@\n-  \/\/ Add to pending list. Update count first so no underflow in transfer.\n-  size_t pending_count = Atomic::add(&_pending_count, 1u);\n-  _pending_list.push(*node);\n-  if (pending_count > trigger_transfer) {\n-    try_transfer_pending();\n+  \/\/ The pending list is double-buffered.  Add node to the currently active\n+  \/\/ pending list, within a critical section so a transfer will wait until\n+  \/\/ we're done with what might be the pending list to be transferred.\n+  {\n+    GlobalCounter::CriticalSection cs(Thread::current());\n+    uint index = Atomic::load_acquire(&_active_pending_list);\n+    size_t count = _pending_lists[index].add(node);\n+    if (count <= trigger_transfer) return;\n@@ -139,0 +165,2 @@\n+  \/\/ Attempt transfer when number pending exceeds the transfer threshold.\n+  try_transfer_pending();\n@@ -141,1 +169,1 @@\n-\/\/ Try to transfer nodes from _pending_list to _free_list, with a\n+\/\/ Try to transfer nodes from the pending list to _free_list, with a\n@@ -154,16 +182,15 @@\n-  \/\/ Claim all the pending nodes.\n-  BufferNode* first = _pending_list.pop_all();\n-  if (first != NULL) {\n-    \/\/ Prepare to add the claimed nodes, and update _pending_count.\n-    BufferNode* last = first;\n-    size_t count = 1;\n-    for (BufferNode* next = first->next(); next != NULL; next = next->next()) {\n-      last = next;\n-      ++count;\n-    }\n-    Atomic::sub(&_pending_count, count);\n-\n-    \/\/ Wait for any in-progress pops, to avoid ABA for them.\n-    GlobalCounter::write_synchronize();\n-\n-    \/\/ Add synchronized nodes to _free_list.\n+  \/\/ Change which pending list is active.  Don't need an atomic RMW since\n+  \/\/ we have the lock and we're the only writer.\n+  uint index = Atomic::load(&_active_pending_list);\n+  uint new_active = (index + 1) % ARRAY_SIZE(_pending_lists);\n+  Atomic::release_store(&_active_pending_list, new_active);\n+\n+  \/\/ Wait for all critical sections in the buffer life-cycle to complete.\n+  \/\/ This includes _free_list pops and adding to the now inactive pending\n+  \/\/ list.\n+  GlobalCounter::write_synchronize();\n+\n+  \/\/ Transfer the inactive pending list to _free_list.\n+  BufferNodeList transfer_list = _pending_lists[index].take_all();\n+  size_t count = transfer_list._entry_count;\n+  if (count > 0) {\n@@ -172,1 +199,1 @@\n-    _free_list.prepend(*first, *last);\n+    _free_list.prepend(*transfer_list._head, *transfer_list._tail);\n@@ -174,1 +201,1 @@\n-             (\"Transferred %s pending to free: \" SIZE_FORMAT, name(), count);\n+             (\"Transferred %s pending to free: %zu\", name(), count);\n","filename":"src\/hotspot\/share\/gc\/shared\/ptrQueue.cpp","additions":62,"deletions":35,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/bufferNodeList.hpp\"\n@@ -184,0 +185,20 @@\n+  class PendingList {\n+    BufferNode* _tail;\n+    DECLARE_PADDED_MEMBER(1, BufferNode* volatile, _head);\n+    DECLARE_PADDED_MEMBER(2, volatile size_t, _count);\n+\n+    NONCOPYABLE(PendingList);\n+\n+  public:\n+    PendingList();\n+    ~PendingList();\n+\n+    \/\/ Add node to the list.  Returns the number of nodes in the list.\n+    \/\/ Thread-safe against concurrent add operations.\n+    size_t add(BufferNode* node);\n+\n+    \/\/ Return the nodes in the list, leaving the list empty.\n+    \/\/ Not thread-safe.\n+    BufferNodeList take_all();\n+  };\n+\n@@ -186,1 +207,2 @@\n-  DECLARE_PADDED_MEMBER(1, Stack, _pending_list);\n+  PendingList _pending_lists[2];\n+  DECLARE_PADDED_MEMBER(1, volatile uint, _active_pending_list);\n@@ -188,3 +210,2 @@\n-  DECLARE_PADDED_MEMBER(3, volatile size_t, _pending_count);\n-  DECLARE_PADDED_MEMBER(4, volatile size_t, _free_count);\n-  DECLARE_PADDED_MEMBER(5, volatile bool, _transfer_lock);\n+  DECLARE_PADDED_MEMBER(3, volatile size_t, _free_count);\n+  DECLARE_PADDED_MEMBER(4, volatile bool, _transfer_lock);\n@@ -194,1 +215,1 @@\n-  void delete_list(BufferNode* list);\n+  static void delete_list(BufferNode* list);\n","filename":"src\/hotspot\/share\/gc\/shared\/ptrQueue.hpp","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/scavengableNMethods.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/spaceDecorator.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,3 @@\n-  \"qpush\", \"qpop\", \"qpop-s\", \"qattempt\", \"qsteal\", \"opush\", \"omax\"\n+  \"push\", \"pop\", \"pop-slow\",\n+  \"st-attempt\", \"st-empty\", \"st-ctdd\", \"st-success\", \"st-ctdd-max\", \"st-biasdrop\",\n+  \"ovflw-push\", \"ovflw-max\"\n@@ -89,3 +91,3 @@\n-  assert(get(push) == get(pop) + get(steal),\n-         \"push=\" SIZE_FORMAT \" pop=\" SIZE_FORMAT \" steal=\" SIZE_FORMAT,\n-         get(push), get(pop), get(steal));\n+  assert(get(push) == get(pop) + get(steal_success),\n+         \"push=%zu pop=%zu steal=%zu\",\n+         get(push), get(pop), get(steal_success));\n@@ -93,1 +95,1 @@\n-         \"pop_slow=\" SIZE_FORMAT \" pop=\" SIZE_FORMAT,\n+         \"pop_slow=%zu pop=%zu\",\n@@ -95,3 +97,12 @@\n-  assert(get(steal) <= get(steal_attempt),\n-         \"steal=\" SIZE_FORMAT \" steal_attempt=\" SIZE_FORMAT,\n-         get(steal), get(steal_attempt));\n+  assert(get(steal_empty) <= get(steal_attempt),\n+         \"steal_empty=%zu steal_attempt=%zu\",\n+         get(steal_empty), get(steal_attempt));\n+  assert(get(steal_contended) <= get(steal_attempt),\n+         \"steal_contended=%zu steal_attempt=%zu\",\n+         get(steal_contended), get(steal_attempt));\n+  assert(get(steal_success) <= get(steal_attempt),\n+         \"steal_success=%zu steal_attempt=%zu\",\n+         get(steal_success), get(steal_attempt));\n+  assert(get(steal_empty) + get(steal_contended) + get(steal_success) == get(steal_attempt),\n+         \"steal_empty=%zu steal_contended=%zu steal_success=%zu steal_attempt=%zu\",\n+         get(steal_empty), get(steal_contended), get(steal_success), get(steal_attempt));\n@@ -99,1 +110,1 @@\n-         \"overflow=\" SIZE_FORMAT \" push=\" SIZE_FORMAT,\n+         \"overflow=%zu push=%zu\",\n@@ -102,1 +113,1 @@\n-         \"overflow_max_len=\" SIZE_FORMAT \" overflow=\" SIZE_FORMAT,\n+         \"overflow_max_len=%zu overflow=%zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.cpp","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,5 @@\n-    steal,            \/\/ number of taskqueue steals\n+    steal_empty,      \/\/ number of empty taskqueues\n+    steal_contended,  \/\/ number of contended steals\n+    steal_success,    \/\/ number of successful steals\n+    steal_max_contended_in_a_row, \/\/ maximum number of contended steals in a row\n+    steal_bias_drop,  \/\/ number of times the bias has been dropped\n@@ -71,2 +75,10 @@\n-  inline void record_steal_attempt() { ++_stats[steal_attempt]; }\n-  inline void record_steal()         { ++_stats[steal]; }\n+  inline void record_steal_attempt(uint kind) {\n+    ++_stats[steal_attempt];\n+    ++_stats[steal_empty + kind];\n+  }\n+  inline void record_contended_in_a_row(uint in_a_row) {\n+    if (_stats[steal_max_contended_in_a_row] < in_a_row) {\n+      _stats[steal_max_contended_in_a_row] = in_a_row;\n+    }\n+  }\n+  inline void record_bias_drop() { ++_stats[steal_bias_drop]; }\n@@ -84,1 +96,1 @@\n-                           unsigned int width = 10);\n+                           unsigned int width = 11);\n@@ -86,1 +98,1 @@\n-  void print(outputStream* const stream = tty, unsigned int width = 10) const;\n+  void print(outputStream* const stream = tty, unsigned int width = 11) const;\n@@ -271,0 +283,10 @@\n+  \/\/ The result of a pop_global operation. The value order of this must correspond\n+  \/\/ to the order in the corresponding TaskQueueStats StatId.\n+  enum class PopResult : uint {\n+    Empty     = 0, \/\/ Queue has been empty. t is undefined.\n+    Contended = 1, \/\/ Contention prevented successful retrieval, queue most likely contains elements. t is undefined.\n+    Success   = 2  \/\/ Successfully retrieved an element, t contains it.\n+  };\n+\n+  TASKQUEUE_STATS_ONLY(void record_steal_attempt(PopResult kind) { stats.record_steal_attempt((uint)kind); })\n+\n@@ -331,0 +353,2 @@\n+  typedef typename TaskQueueSuper<N, F>::PopResult PopResult;\n+\n@@ -360,1 +384,1 @@\n-  bool pop_global(E& t);\n+  PopResult pop_global(E& t);\n@@ -390,1 +414,4 @@\n-  void invalidate_last_stolen_queue_id()     { _last_stolen_queue_id = InvalidQueueId; }\n+  void invalidate_last_stolen_queue_id()     {\n+    TASKQUEUE_STATS_ONLY(stats.record_bias_drop();)\n+    _last_stolen_queue_id = InvalidQueueId;\n+  }\n@@ -450,0 +477,1 @@\n+  typedef typename T::PopResult PopResult;\n@@ -455,1 +483,4 @@\n-  bool steal_best_of_2(uint queue_num, E& t);\n+  \/\/ Attempts to steal an element from a foreign queue (!= queue_num), setting\n+  \/\/ the result in t. Validity of this value and the return value is the same\n+  \/\/ as for the last pop_global() operation.\n+  PopResult steal_best_of_2(uint queue_num, E& t);\n@@ -476,0 +507,12 @@\n+\n+#if TASKQUEUE_STATS\n+private:\n+  static void print_taskqueue_stats_hdr(outputStream* const st, const char* label);\n+public:\n+  void print_taskqueue_stats(outputStream* const st, const char* label);\n+  void reset_taskqueue_stats();\n+\n+  \/\/ Prints taskqueue set statistics into gc+task+stats=trace and resets\n+  \/\/ its statistics.\n+  void print_and_reset_taskqueue_stats(const char* label);\n+#endif \/\/ TASKQUEUE_STATS\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.hpp","additions":52,"deletions":9,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n@@ -31,0 +33,1 @@\n+#include \"memory\/resourceArea.hpp\"\n@@ -35,0 +38,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -51,0 +55,45 @@\n+#if TASKQUEUE_STATS\n+template<class T, MEMFLAGS F>\n+void GenericTaskQueueSet<T, F>::print_taskqueue_stats_hdr(outputStream* const st, const char* label) {\n+  st->print_cr(\"GC Task Stats %s\", label);\n+  st->print(\"thr \"); TaskQueueStats::print_header(1, st); st->cr();\n+  st->print(\"--- \"); TaskQueueStats::print_header(2, st); st->cr();\n+}\n+\n+template<class T, MEMFLAGS F>\n+void GenericTaskQueueSet<T, F>::print_taskqueue_stats(outputStream* const st, const char* label) {\n+  print_taskqueue_stats_hdr(st, label);\n+\n+  TaskQueueStats totals;\n+  const uint n = size();\n+  for (uint i = 0; i < n; ++i) {\n+    st->print(\"%3u \", i); queue(i)->stats.print(st); st->cr();\n+    totals += queue(i)->stats;\n+  }\n+  st->print_raw(\"tot \"); totals.print(st); st->cr();\n+\n+  DEBUG_ONLY(totals.verify());\n+}\n+\n+template<class T, MEMFLAGS F>\n+void GenericTaskQueueSet<T, F>::reset_taskqueue_stats() {\n+  const uint n = size();\n+  for (uint i = 0; i < n; ++i) {\n+    queue(i)->stats.reset();\n+  }\n+}\n+\n+template <class T, MEMFLAGS F>\n+inline void GenericTaskQueueSet<T, F>::print_and_reset_taskqueue_stats(const char* label) {\n+  if (!log_is_enabled(Trace, gc, task, stats)) {\n+    return;\n+  }\n+  Log(gc, task, stats) log;\n+  ResourceMark rm;\n+  LogStream ls(log.trace());\n+\n+  print_taskqueue_stats(&ls, label);\n+  reset_taskqueue_stats();\n+}\n+#endif \/\/ TASKQUEUE_STATS\n+\n@@ -208,1 +257,1 @@\n-bool GenericTaskQueue<E, F, N>::pop_global(E& t) {\n+typename GenericTaskQueue<E, F, N>::PopResult GenericTaskQueue<E, F, N>::pop_global(E& t) {\n@@ -229,1 +278,1 @@\n-    return false;\n+    return PopResult::Empty;\n@@ -243,1 +292,1 @@\n-  return resAge == oldAge;\n+  return resAge == oldAge ? PopResult::Success : PopResult::Contended;\n@@ -270,2 +319,3 @@\n-template<class T, MEMFLAGS F> bool\n-GenericTaskQueueSet<T, F>::steal_best_of_2(uint queue_num, E& t) {\n+template<class T, MEMFLAGS F>\n+typename GenericTaskQueueSet<T, F>::PopResult GenericTaskQueueSet<T, F>::steal_best_of_2(uint queue_num, E& t) {\n+  T* const local_queue = queue(queue_num);\n@@ -273,1 +323,0 @@\n-    T* const local_queue = _queues[queue_num];\n@@ -290,2 +339,2 @@\n-    uint sz1 = _queues[k1]->size();\n-    uint sz2 = _queues[k2]->size();\n+    uint sz1 = queue(k1)->size();\n+    uint sz2 = queue(k2)->size();\n@@ -294,1 +343,1 @@\n-    bool suc = false;\n+    PopResult suc = PopResult::Empty;\n@@ -298,1 +347,2 @@\n-      suc = _queues[k2]->pop_global(t);\n+      suc = queue(k2)->pop_global(t);\n+      TASKQUEUE_STATS_ONLY(local_queue->record_steal_attempt(suc);)\n@@ -301,1 +351,2 @@\n-      suc = _queues[k1]->pop_global(t);\n+      suc = queue(k1)->pop_global(t);\n+      TASKQUEUE_STATS_ONLY(local_queue->record_steal_attempt(suc);)\n@@ -304,1 +355,1 @@\n-    if (suc) {\n+    if (suc == PopResult::Success) {\n@@ -314,1 +365,3 @@\n-    return _queues[k]->pop_global(t);\n+    PopResult res = queue(k)->pop_global(t);\n+    TASKQUEUE_STATS_ONLY(local_queue->record_steal_attempt(res);)\n+    return res;\n@@ -317,1 +370,2 @@\n-    return false;\n+    TASKQUEUE_STATS_ONLY(local_queue->record_steal_attempt(PopResult::Empty);)\n+    return PopResult::Empty;\n@@ -321,7 +375,8 @@\n-template<class T, MEMFLAGS F> bool\n-GenericTaskQueueSet<T, F>::steal(uint queue_num, E& t) {\n-  assert(queue_num < _n, \"index out of range.\");\n-  for (uint i = 0; i < 2 * _n; i++) {\n-    TASKQUEUE_STATS_ONLY(queue(queue_num)->stats.record_steal_attempt());\n-    if (steal_best_of_2(queue_num, t)) {\n-      TASKQUEUE_STATS_ONLY(queue(queue_num)->stats.record_steal());\n+template<class T, MEMFLAGS F>\n+bool GenericTaskQueueSet<T, F>::steal(uint queue_num, E& t) {\n+  uint const num_retries = 2 * _n;\n+\n+  TASKQUEUE_STATS_ONLY(uint contended_in_a_row = 0;)\n+  for (uint i = 0; i < num_retries; i++) {\n+    PopResult sr = steal_best_of_2(queue_num, t);\n+    if (sr == PopResult::Success) {\n@@ -329,0 +384,8 @@\n+    } else if (sr == PopResult::Contended) {\n+      TASKQUEUE_STATS_ONLY(\n+        contended_in_a_row++;\n+        queue(queue_num)->stats.record_contended_in_a_row(contended_in_a_row);\n+      )\n+    } else {\n+      assert(sr == PopResult::Empty, \"must be\");\n+      TASKQUEUE_STATS_ONLY(contended_in_a_row = 0;)\n","filename":"src\/hotspot\/share\/gc\/shared\/taskqueue.inline.hpp","additions":85,"deletions":22,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -33,2 +33,1 @@\n-      VerifyOption_G1UseNextMarking = VerifyOption_G1UsePrevMarking + 1,\n-      VerifyOption_G1UseFullMarking = VerifyOption_G1UseNextMarking + 1\n+      VerifyOption_G1UseFullMarking = VerifyOption_G1UsePrevMarking + 1\n","filename":"src\/hotspot\/share\/gc\/shared\/verifyOption.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/weakProcessor.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/workerPolicy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -721,1 +721,1 @@\n-  if (node->Opcode() == Op_ShenandoahLoadReferenceBarrier) return true;\n+  if (node->Opcode() == Op_ShenandoahLoadReferenceBarrier || node->Opcode() == Op_ShenandoahIUBarrier) return true;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n@@ -709,1 +710,1 @@\n-    assert(next->unique_ctrl_out() == c || c->is_Proj() || c->is_Region(), \"multiple control flow out but no proj or region?\");\n+    assert(next->unique_ctrl_out_or_null() == c || c->is_Proj() || c->is_Region(), \"multiple control flow out but no proj or region?\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBreakpoint.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2022, Red Hat, Inc. All rights reserved.\n@@ -32,1 +32,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2018, 2022, Red Hat, Inc. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRuntime.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2022, Red Hat, Inc. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkerPolicy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,3 @@\n-  return *barrier_set_state()->live(_node);\n+  RegMask* mask = barrier_set_state()->live(_node);\n+  assert(mask != NULL, \"must be mach-node with barrier\");\n+  return *mask;\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zAbort.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zAddressSpaceLimit.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrierSetRuntime.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -29,0 +29,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zBitField.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zBreakpoint.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zCPU.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zHash.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zHeuristics.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zLargePages.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethodTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zNUMA.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zOop.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zResurrection.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zThread.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zThreadLocalAllocBuffer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zUtils.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zValue.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zVerify.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                              \/\/ If false, this region was initialized using os::read().\n+                              \/\/ If false, this region was initialized using ::read().\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,3 @@\n+JNIEXPORT void * JNICALL\n+JVM_LoadZipLibrary();\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    result.set_handle(method, appendix, THREAD);\n+    result.set_handle(vmClasses::MethodHandle_klass(), method, appendix, THREAD);\n@@ -224,1 +224,1 @@\n-  result.set_handle(resolved_method(), resolved_appendix(), CHECK);\n+  result.set_handle(vmClasses::MethodHandle_klass(), resolved_method(), resolved_appendix(), CHECK);\n","filename":"src\/hotspot\/share\/interpreter\/bootstrapInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeHistogram.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeTracer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2019 SAP SE. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/bytecodeUtils.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/bytecodes.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -97,5 +97,0 @@\n-void CallInfo::set_handle(const methodHandle& resolved_method,\n-                          Handle resolved_appendix, TRAPS) {\n-  set_handle(vmClasses::MethodHandle_klass(), resolved_method, resolved_appendix, CHECK);\n-}\n-\n@@ -479,8 +474,6 @@\n-      Handle method_type;\n-      Method* result = SystemDictionary::find_method_handle_invoker(\n-                                                            klass,\n-                                                            name,\n-                                                            full_signature,\n-                                                            link_info.current_klass(),\n-                                                            &appendix,\n-                                                            CHECK_NULL);\n+      Method* result = SystemDictionary::find_method_handle_invoker(klass,\n+                                                                    name,\n+                                                                    full_signature,\n+                                                                    link_info.current_klass(),\n+                                                                    &appendix,\n+                                                                    CHECK_NULL);\n@@ -624,1 +617,1 @@\n-      || (resolved_klass == vmClasses::MethodHandle_klass() &&\n+      || ((resolved_klass == vmClasses::MethodHandle_klass() || resolved_klass == vmClasses::VarHandle_klass()) &&\n@@ -1682,0 +1675,13 @@\n+bool LinkResolver::resolve_previously_linked_invokehandle(CallInfo& result, const LinkInfo& link_info, const constantPoolHandle& pool, int index, TRAPS) {\n+  int cache_index = ConstantPool::decode_cpcache_index(index, true);\n+  ConstantPoolCacheEntry* cpce = pool->cache()->entry_at(cache_index);\n+  if (!cpce->is_f1_null()) {\n+    Klass* resolved_klass = link_info.resolved_klass();\n+    methodHandle method(THREAD, cpce->f1_as_method());\n+    Handle     appendix(THREAD, cpce->appendix_if_resolved(pool));\n+    result.set_handle(resolved_klass, method, appendix, CHECK_false);\n+    return true;\n+  } else {\n+    return false;\n+  }\n+}\n@@ -1684,1 +1690,0 @@\n-  \/\/ This guy is reached from InterpreterRuntime::resolve_invokehandle.\n@@ -1691,0 +1696,4 @@\n+  { \/\/ Check if the call site has been bound already, and short circuit:\n+    bool is_done = resolve_previously_linked_invokehandle(result, link_info, pool, index, CHECK);\n+    if (is_done) return;\n+  }\n@@ -1702,1 +1711,1 @@\n-  Handle       resolved_appendix;\n+  Handle resolved_appendix;\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":25,"deletions":16,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-  void set_handle(const methodHandle& resolved_method,\n-                  Handle resolved_appendix, TRAPS);\n@@ -252,0 +250,5 @@\n+  static bool resolve_previously_linked_invokehandle(CallInfo& result,\n+                                                     const LinkInfo& link_info,\n+                                                     const constantPoolHandle& pool,\n+                                                     int index, TRAPS);\n+\n@@ -340,1 +343,0 @@\n- public:\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,2 +279,2 @@\n-  Log(interpreter, oopmap) logv;\n-  LogStream st(logv.trace());\n+  const bool log = log_is_enabled(Trace, interpreter, oopmap);\n+  LogStream st(Log(interpreter, oopmap)::trace());\n@@ -282,1 +282,1 @@\n-  st.print(\"Locals (%d): \", max_locals);\n+  if (log) st.print(\"Locals (%d): \", max_locals);\n@@ -287,1 +287,1 @@\n-    st.print(\"%d\", v1 ? 1 : 0);\n+    if (log) st.print(\"%d\", v1 ? 1 : 0);\n@@ -289,1 +289,1 @@\n-  st.cr();\n+  if (log) st.cr();\n@@ -291,1 +291,1 @@\n-  st.print(\"Stack (%d): \", stack_top);\n+  if (log) st.print(\"Stack (%d): \", stack_top);\n@@ -296,1 +296,1 @@\n-    st.print(\"%d\", v1 ? 1 : 0);\n+    if (log) st.print(\"%d\", v1 ? 1 : 0);\n@@ -298,1 +298,1 @@\n-  st.cr();\n+  if (log) st.cr();\n","filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/templateTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1946,1 +1946,4 @@\n-              oop obj = cast_to_oop(result);\n+              \/\/ Initialize header, mirrors MemAllocator.\n+              oopDesc::set_mark(result, markWord::prototype());\n+              oopDesc::set_klass_gap(result, 0);\n+              oopDesc::release_set_klass(result, ik);\n@@ -1948,4 +1951,1 @@\n-              \/\/ Initialize header\n-              obj->set_mark(markWord::prototype());\n-              obj->set_klass_gap(0);\n-              obj->set_klass(ik);\n+              oop obj = cast_to_oop(result);\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/instrumentation\/jfrEventClassTransformer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -34,0 +35,1 @@\n+class outputStream;\n","filename":"src\/hotspot\/share\/jfr\/jfr.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/chains\/edgeUtils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/objectSampleCheckpoint.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/checkpoint\/rootResolver.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/leakProfiler.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/utilities\/granularTimer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/leakprofiler\/utilities\/rootType.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrFinalizerStatisticsEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrModuleEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrNetworkUtilization.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrThreadCPULoadEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrThreadDumpEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrMetadataEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrThreadState.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceId.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdBits.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdEpoch.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdLoadBarrier.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrChunkRotation.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-    os::close(emergency_fd);\n+    ::close(emergency_fd);\n@@ -301,1 +301,1 @@\n-  os::close(fd);\n+  ::close(fd);\n@@ -392,1 +392,1 @@\n-      os::close(current_fd);\n+      ::close(current_fd);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrMemorySizer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrRecorderThread.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrKlassUnloading.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrMethodLookup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrObjectAllocationSample.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrBigEndian.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrJavaLog.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrPredicate.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrTimeConverter.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrEncoding.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrJavaEventWriter.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-  os::close(_fd);\n+  ::close(_fd);\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -556,1 +556,1 @@\n-long JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n+jlong JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-  long get_long_at(JVMCIPrimitiveArray array, int index);\n+  jlong get_long_at(JVMCIPrimitiveArray array, int index);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -315,0 +315,2 @@\n+  static_field(StubRoutines,                _md5_implCompress,                                address)                               \\\n+  static_field(StubRoutines,                _md5_implCompressMB,                              address)                               \\\n@@ -321,0 +323,2 @@\n+  static_field(StubRoutines,                _sha3_implCompress,                               address)                               \\\n+  static_field(StubRoutines,                _sha3_implCompressMB,                             address)                               \\\n@@ -741,0 +745,3 @@\n+  static_field(StubRoutines::aarch64, _has_negatives, address)          \\\n+  static_field(StubRoutines::aarch64, _has_negatives_long, address)     \\\n+  static_field(VM_Version, _rop_protection, bool)                       \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -368,3 +368,3 @@\n-    \/\/ Skip over Windows paths such as \"C:\\...\"\n-    \/\/ Handle both C:\\... and file=C:\\...\"\n-    if (next != NULL && next[0] == ':' && next[1] == '\\\\') {\n+    \/\/ Skip over Windows paths such as \"C:\\...\" and \"C:\/...\".\n+    \/\/ Handles both \"C:\\...\" and \"file=C:\\...\".\n+    if (next != NULL && next[0] == ':' && (next[1] == '\\\\' || next[1] == '\/')) {\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -34,0 +34,1 @@\n+class outputStream;\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,2 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/share\/logging\/logLevel.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -93,1 +93,0 @@\n-  LOG_PREFIX(GCId::print_prefix, LOG_TAGS(gc, task, time)) \\\n","filename":"src\/hotspot\/share\/logging\/logPrefix.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -30,0 +30,2 @@\n+class outputStream;\n+\n@@ -186,1 +188,0 @@\n-  LOG_TAG(time) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,0 +149,1 @@\n+  f(mtObjectMonitor,  \"Object Monitors\")                                             \\\n@@ -173,2 +174,0 @@\n-#if INCLUDE_NMT\n-\n@@ -177,6 +176,0 @@\n-#else\n-\n-const bool NMT_track_callsite = false;\n-\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/internalStats.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2018, 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022 SAP SE. All rights reserved.\n@@ -80,1 +80,1 @@\n-      scale = NMT_ONLY(NMTUtil::scale_from_name(scale_value)) NOT_NMT(0);\n+      scale = NMTUtil::scale_from_name(scale_value);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2018, 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSettings.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022 SAP SE. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/runningCounters.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspaceCounters.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspaceCriticalAllocation.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,6 +199,0 @@\n-void Universe::basic_type_classes_do(void f(Klass*)) {\n-  for (int i = T_BOOLEAN; i < T_LONG+1; i++) {\n-    f(_typeArrayKlassObjs[i]);\n-  }\n-}\n-\n@@ -751,0 +745,4 @@\n+#ifdef _LP64\n+  MetaspaceShared::adjust_heap_sizes_for_dumping();\n+#endif \/\/ _LP64\n+\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -332,1 +332,1 @@\n-  \/\/ Apply \"f\" to all klasses for basic types (classes not present in\n+  \/\/ Apply the closure to all klasses for basic types (classes not present in\n@@ -334,1 +334,0 @@\n-  static void basic_type_classes_do(void f(Klass*));\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -631,1 +631,1 @@\n-    os::close(_fd_for_heap);\n+    ::close(_fd_for_heap);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/conditional.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/decay.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/removeCV.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/removeExtent.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/removePointer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/metaprogramming\/removeReference.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/oops\/access.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/oops\/accessDecorators.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/oops\/compressedOops.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -888,2 +888,1 @@\n-  if (tag.is_dynamic_constant() ||\n-      tag.is_dynamic_constant_in_error()) {\n+  if (tag.is_dynamic_constant()) {\n@@ -891,2 +890,1 @@\n-    \/\/ dynamic constant could return an array, treat as object\n-    return constantTag::ofBasicType(is_reference_type(bt) ? T_OBJECT : bt);\n+    return constantTag(constantTag::type2tag(bt));\n@@ -979,1 +977,0 @@\n-  case JVM_CONSTANT_UnresolvedClassInError:\n@@ -1047,8 +1044,0 @@\n-  case JVM_CONSTANT_DynamicInError:\n-  case JVM_CONSTANT_MethodHandleInError:\n-  case JVM_CONSTANT_MethodTypeInError:\n-    {\n-      throw_resolution_error(this_cp, index, CHECK_NULL);\n-      break;\n-    }\n-\n@@ -1068,1 +1057,4 @@\n-      Klass* callee = klass_at_impl(this_cp, callee_index, CHECK_NULL);\n+      Klass* callee = klass_at_impl(this_cp, callee_index, THREAD);\n+      if (HAS_PENDING_EXCEPTION) {\n+        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n+      }\n@@ -1072,1 +1064,1 @@\n-          ((!callee->is_interface() && m_tag.is_interface_method()))) {\n+          (!callee->is_interface() && m_tag.is_interface_method())) {\n@@ -1084,1 +1076,2 @@\n-        THROW_MSG_NULL(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+        Exceptions::fthrow(THREAD_AND_LOCATION, vmSymbols::java_lang_IncompatibleClassChangeError(), \"%s\", ss.as_string());\n+        save_and_throw_exception(this_cp, index, tag, CHECK_NULL);\n@@ -1091,1 +1084,0 @@\n-      result_oop = value();\n@@ -1095,0 +1087,1 @@\n+      result_oop = value();\n@@ -1139,0 +1132,7 @@\n+  case JVM_CONSTANT_UnresolvedClassInError:\n+  case JVM_CONSTANT_DynamicInError:\n+  case JVM_CONSTANT_MethodHandleInError:\n+  case JVM_CONSTANT_MethodTypeInError:\n+    throw_resolution_error(this_cp, index, CHECK_NULL);\n+    break;\n+\n@@ -1140,3 +1140,1 @@\n-    DEBUG_ONLY( tty->print_cr(\"*** %p: tag at CP[%d\/%d] = %d\",\n-                              this_cp(), index, cache_index, tag.value()));\n-    assert(false, \"unexpected constant tag\");\n+    fatal(\"unexpected constant tag at CP %p[%d\/%d] = %d\", this_cp(), index, cache_index, tag.value());\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -100,3 +100,0 @@\n-  template <typename T, class OopClosureType, class Contains>\n-  static void do_next(oop obj, OopClosureType* closure, Contains& contains);\n-\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -178,1 +178,2 @@\n-    _verified_at_dump_time = 8\n+    _verified_at_dump_time = 8,\n+    _regenerated = 16\n@@ -342,0 +343,7 @@\n+  void set_regenerated() {\n+    CDS_ONLY(_shared_class_flags |= _regenerated;)\n+  }\n+  bool is_regenerated() const {\n+    CDS_ONLY(return (_shared_class_flags & _regenerated) != 0;)\n+    NOT_CDS(return false;)\n+  }\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -277,1 +277,1 @@\n-\/\/ See JLS 3rd edition 8.4.6.1\n+\/\/ See JLS 8.4.8.1\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,2 +94,0 @@\n-  inline int klass_gap() const;\n-  inline void set_klass_gap(int z);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,4 +128,0 @@\n-int oopDesc::klass_gap() const {\n-  return *(int*)(((intptr_t)this) + klass_gap_offset_in_bytes());\n-}\n-\n@@ -138,4 +134,0 @@\n-void oopDesc::set_klass_gap(int v) {\n-  set_klass_gap((HeapWord*)this, v);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -115,5 +115,0 @@\n-  notproduct(uintx, PrintIdealLevel, 0,                                     \\\n-          \"Print ideal IR on stdout. \"                                      \\\n-          \"Same levels as PrintIdealGraphLevel\")                            \\\n-          range(0, 4)                                                       \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -909,1 +909,1 @@\n-        const Node *cn = pn->unique_ctrl_out();\n+        const Node* cn = pn->unique_ctrl_out_or_null();\n@@ -1417,1 +1417,1 @@\n-    Node* out_c = unique_ctrl_out();\n+    Node* out_c = unique_ctrl_out_or_null();\n@@ -1659,0 +1659,1 @@\n+  init_req( ValidLengthTest    , topnode);\n@@ -1685,48 +1686,0 @@\n-\/\/=============================================================================\n-Node* AllocateArrayNode::Ideal(PhaseGVN *phase, bool can_reshape) {\n-  if (remove_dead_region(phase, can_reshape))  return this;\n-  \/\/ Don't bother trying to transform a dead node\n-  if (in(0) && in(0)->is_top())  return NULL;\n-\n-  const Type* type = phase->type(Ideal_length());\n-  if (type->isa_int() && type->is_int()->_hi < 0) {\n-    if (can_reshape) {\n-      PhaseIterGVN *igvn = phase->is_IterGVN();\n-      \/\/ Unreachable fall through path (negative array length),\n-      \/\/ the allocation can only throw so disconnect it.\n-      Node* proj = proj_out_or_null(TypeFunc::Control);\n-      Node* catchproj = NULL;\n-      if (proj != NULL) {\n-        for (DUIterator_Fast imax, i = proj->fast_outs(imax); i < imax; i++) {\n-          Node *cn = proj->fast_out(i);\n-          if (cn->is_Catch()) {\n-            catchproj = cn->as_Multi()->proj_out_or_null(CatchProjNode::fall_through_index);\n-            break;\n-          }\n-        }\n-      }\n-      if (catchproj != NULL && catchproj->outcnt() > 0 &&\n-          (catchproj->outcnt() > 1 ||\n-           catchproj->unique_out()->Opcode() != Op_Halt)) {\n-        assert(catchproj->is_CatchProj(), \"must be a CatchProjNode\");\n-        Node* nproj = catchproj->clone();\n-        igvn->register_new_node_with_optimizer(nproj);\n-\n-        Node *frame = new ParmNode( phase->C->start(), TypeFunc::FramePtr );\n-        frame = phase->transform(frame);\n-        \/\/ Halt & Catch Fire\n-        Node* halt = new HaltNode(nproj, frame, \"unexpected negative array length\");\n-        phase->C->root()->add_req(halt);\n-        phase->transform(halt);\n-\n-        igvn->replace_node(catchproj, phase->C->top());\n-        return this;\n-      }\n-    } else {\n-      \/\/ Can't correct it during regular GVN so register for IGVN\n-      phase->C->record_for_igvn(this);\n-    }\n-  }\n-  return NULL;\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/callnode.cpp","additions":4,"deletions":51,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -916,0 +916,1 @@\n+    ValidLengthTest,\n@@ -925,0 +926,1 @@\n+    fields[ValidLengthTest] = TypeInt::BOOL;\n@@ -1019,4 +1021,2 @@\n-  AllocateArrayNode(Compile* C, const TypeFunc *atype, Node *ctrl, Node *mem, Node *abio,\n-                    Node* size, Node* klass_node, Node* initial_test,\n-                    Node* count_val\n-                    )\n+  AllocateArrayNode(Compile* C, const TypeFunc* atype, Node* ctrl, Node* mem, Node* abio, Node* size, Node* klass_node,\n+                    Node* initial_test, Node* count_val, Node* valid_length_test)\n@@ -1028,0 +1028,1 @@\n+    set_req(AllocateNode::ValidLengthTest, valid_length_test);\n@@ -1030,1 +1031,0 @@\n-  virtual Node *Ideal(PhaseGVN *phase, bool can_reshape);\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -868,4 +868,4 @@\n-  if (!((proj1->unique_ctrl_out() == iff2 &&\n-         proj2->unique_ctrl_out() == this) ||\n-        (proj2->unique_ctrl_out() == iff1 &&\n-         proj1->unique_ctrl_out() == this))) {\n+  if (!((proj1->unique_ctrl_out_or_null() == iff2 &&\n+         proj2->unique_ctrl_out_or_null() == this) ||\n+        (proj2->unique_ctrl_out_or_null() == iff1 &&\n+         proj1->unique_ctrl_out_or_null() == this))) {\n@@ -2690,0 +2690,11 @@\n+      } else if (call->is_AllocateArray()) {\n+        Node* klass_node = call->in(AllocateNode::KlassNode);\n+        Node* length = call->in(AllocateNode::ALength);\n+        const Type* length_type = phase->type(length);\n+        const Type* klass_type = phase->type(klass_node);\n+        Node* valid_length_test = call->in(AllocateNode::ValidLengthTest);\n+        const Type* valid_length_test_t = phase->type(valid_length_test);\n+        if (length_type == Type::TOP || klass_type == Type::TOP || valid_length_test_t == Type::TOP ||\n+            valid_length_test_t->is_int()->is_con(0)) {\n+          f[CatchProjNode::fall_through_index] = Type::TOP;\n+        }\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -482,0 +482,3 @@\n+macro(VectorUCastB2X)\n+macro(VectorUCastS2X)\n+macro(VectorUCastI2X)\n","filename":"src\/hotspot\/share\/opto\/classes.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1895,1 +1895,1 @@\n-        print_method(PHASE_INCREMENTAL_INLINE_STEP, cg->call_node(), 3);\n+        print_method(PHASE_INCREMENTAL_INLINE_STEP, 3, cg->call_node());\n@@ -2360,1 +2360,1 @@\n-      print_method(PHASE_INLINE_VECTOR_REBOX, cg->call_node());\n+      print_method(PHASE_INLINE_VECTOR_REBOX, 3, cg->call_node());\n@@ -3815,1 +3815,1 @@\n-          CallNode *call = n->in(0)->in(0)->as_Call();\n+          CallNode* call = n->in(0)->in(0)->as_Call();\n@@ -3824,1 +3824,1 @@\n-            Node *arg0 = call->in(TypeFunc::Parms);\n+            Node* arg0 = call->in(TypeFunc::Parms);\n@@ -3829,4 +3829,3 @@\n-          } else if (call->entry_point() == OptoRuntime::new_array_Java() &&\n-                     call->req() > TypeFunc::Parms+1 &&\n-                     call->is_CallStaticJava()) {\n-            \/\/ Check for negative array length. In such case, the optimizer has\n+          } else if (call->entry_point() == OptoRuntime::new_array_Java() ||\n+                     call->entry_point() == OptoRuntime::new_array_nozero_Java()) {\n+            \/\/ Check for illegal array length. In such case, the optimizer has\n@@ -3835,3 +3834,5 @@\n-            Node *arg1 = call->in(TypeFunc::Parms+1);\n-            if (arg1->is_Type() &&\n-                arg1->as_Type()->type()->join(TypeInt::POS)->empty()) {\n+            assert(call->is_CallStaticJava(), \"static call expected\");\n+            assert(call->req() == call->jvms()->endoff() + 1, \"missing extra input\");\n+            Node* valid_length_test = call->in(call->req()-1);\n+            call->del_req(call->req()-1);\n+            if (valid_length_test->find_int_con(1) == 0) {\n@@ -3840,0 +3841,2 @@\n+            assert(n->outcnt() == required_outcnt, \"malformed control flow\");\n+            continue;\n@@ -3848,0 +3851,8 @@\n+    } else if (n->is_PCTable() && n->in(0) && n->in(0)->in(0) && n->in(0)->in(0)->is_Call()) {\n+      CallNode* call = n->in(0)->in(0)->as_Call();\n+      if (call->entry_point() == OptoRuntime::new_array_Java() ||\n+          call->entry_point() == OptoRuntime::new_array_nozero_Java()) {\n+        assert(call->is_CallStaticJava(), \"static call expected\");\n+        assert(call->req() == call->jvms()->endoff() + 1, \"missing extra input\");\n+        call->del_req(call->req()-1); \/\/ valid length test useless now\n+      }\n@@ -4817,17 +4828,1 @@\n-void Compile::print_method(CompilerPhaseType cpt, int level) {\n-  print_method_impl(cpt, CompilerPhaseTypeHelper::to_string(cpt), level);\n-}\n-\n-void Compile::print_method(CompilerPhaseType cpt, Node* n, int level) {\n-  ResourceMark rm;\n-  stringStream ss;\n-  ss.print_raw(CompilerPhaseTypeHelper::to_string(cpt));\n-  if (n != NULL) {\n-    ss.print(\": %d %s \", n->_idx, NodeClassNames[n->Opcode()]);\n-  } else {\n-    ss.print_raw(\": NULL\");\n-  }\n-  C->print_method_impl(cpt, ss.as_string(), level);\n-}\n-\n-void Compile::print_method_impl(CompilerPhaseType cpt, const char *name, int level) {\n+void Compile::print_method(CompilerPhaseType cpt, int level, Node* n) {\n@@ -4839,0 +4834,8 @@\n+  ResourceMark rm;\n+  stringStream ss;\n+  ss.print_raw(CompilerPhaseTypeHelper::to_name(cpt));\n+  if (n != nullptr) {\n+    ss.print(\": %d %s \", n->_idx, NodeClassNames[n->Opcode()]);\n+  }\n+\n+  const char* name = ss.as_string();\n@@ -4842,2 +4845,2 @@\n-  if (should_print_ideal(level)) {\n-    print_ideal_ir(name);\n+  if (should_print_phase(cpt)) {\n+    print_ideal_ir(CompilerPhaseTypeHelper::to_name(cpt));\n@@ -4873,0 +4876,9 @@\n+bool Compile::should_print_phase(CompilerPhaseType cpt) {\n+#ifndef PRODUCT\n+  if ((_directive->ideal_phase_mask() & CompilerPhaseTypeHelper::to_bitmask(cpt)) != 0) {\n+    return true;\n+  }\n+#endif\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":42,"deletions":30,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -640,1 +640,0 @@\n-  bool          should_print_ideal(uint level) const { return _directive->PrintIdealLevelOption >= level; }\n@@ -657,0 +656,1 @@\n+  bool should_print_phase(CompilerPhaseType cpt);\n@@ -658,3 +658,1 @@\n-  void print_method(CompilerPhaseType cpt, int level);\n-  void print_method(CompilerPhaseType cpt, Node* n, int level = 3);\n-  void print_method_impl(CompilerPhaseType cpt, const char *name, int level);\n+  void print_method(CompilerPhaseType cpt, int level, Node* n = nullptr);\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,3 @@\n+  if (is_array() || other.is_array()) {\n+    return is_array() && other.is_array() && _v._array == other._v._array;\n+  }\n@@ -40,4 +43,4 @@\n-  case T_INT:\n-  case T_FLOAT:   return (_v._value.i == other._v._value.i);\n-  case T_LONG:\n-  case T_DOUBLE:  return (_v._value.j == other._v._value.j);\n+  case T_INT:     return (_v._value.i == other._v._value.i);\n+  case T_FLOAT:   return jint_cast(_v._value.f) == jint_cast(other._v._value.f);\n+  case T_LONG:    return (_v._value.j == other._v._value.j);\n+  case T_DOUBLE:  return jlong_cast(_v._value.d) == jlong_cast(other._v._value.d);\n@@ -59,2 +62,5 @@\n-static int type_to_size_in_bytes(BasicType t) {\n-  switch (t) {\n+static int constant_size(ConstantTable::Constant* con) {\n+  if (con->is_array()) {\n+    return type2aelembytes(con->type()) * con->get_array()->length();\n+  }\n+  switch (con->type()) {\n@@ -99,2 +105,3 @@\n-    int typesize = type_to_size_in_bytes(con->type());\n-    offset = align_up(offset, typesize);\n+    int typesize = constant_size(con);\n+    assert(typesize <= 8 || con->is_array(), \"sanity\");\n+    offset = align_up(offset, MIN2(round_up_power_of_2(typesize), 8));\n@@ -122,26 +129,18 @@\n-    switch (con.type()) {\n-    case T_INT:    constant_addr = _masm.int_constant(   con.get_jint()   ); break;\n-    case T_LONG:   constant_addr = _masm.long_constant(  con.get_jlong()  ); break;\n-    case T_FLOAT:  constant_addr = _masm.float_constant( con.get_jfloat() ); break;\n-    case T_DOUBLE: constant_addr = _masm.double_constant(con.get_jdouble()); break;\n-    case T_OBJECT: {\n-      jobject obj = con.get_jobject();\n-      int oop_index = _masm.oop_recorder()->find_index(obj);\n-      constant_addr = _masm.address_constant((address) obj, oop_Relocation::spec(oop_index));\n-      break;\n-    }\n-    case T_ADDRESS: {\n-      address addr = (address) con.get_jobject();\n-      constant_addr = _masm.address_constant(addr);\n-      break;\n-    }\n-    \/\/ We use T_VOID as marker for jump-table entries (labels) which\n-    \/\/ need an internal word relocation.\n-    case T_VOID: {\n-      MachConstantNode* n = (MachConstantNode*) con.get_jobject();\n-      \/\/ Fill the jump-table with a dummy word.  The real value is\n-      \/\/ filled in later in fill_jump_table.\n-      address dummy = (address) n;\n-      constant_addr = _masm.address_constant(dummy);\n-      if (constant_addr == NULL) {\n-        return false;\n+    if (con.is_array()) {\n+      constant_addr = _masm.array_constant(con.type(), con.get_array());\n+    } else {\n+      switch (con.type()) {\n+      case T_INT:    constant_addr = _masm.int_constant(   con.get_jint()   ); break;\n+      case T_LONG:   constant_addr = _masm.long_constant(  con.get_jlong()  ); break;\n+      case T_FLOAT:  constant_addr = _masm.float_constant( con.get_jfloat() ); break;\n+      case T_DOUBLE: constant_addr = _masm.double_constant(con.get_jdouble()); break;\n+      case T_OBJECT: {\n+        jobject obj = con.get_jobject();\n+        int oop_index = _masm.oop_recorder()->find_index(obj);\n+        constant_addr = _masm.address_constant((address) obj, oop_Relocation::spec(oop_index));\n+        break;\n+      }\n+      case T_ADDRESS: {\n+        address addr = (address) con.get_jobject();\n+        constant_addr = _masm.address_constant(addr);\n+        break;\n@@ -149,8 +148,9 @@\n-      assert((constant_addr - _masm.code()->consts()->start()) == con.offset(),\n-             \"must be: %d == %d\", (int)(constant_addr - _masm.code()->consts()->start()), (int)(con.offset()));\n-\n-      \/\/ Expand jump-table\n-      address last_addr = NULL;\n-      for (uint j = 1; j < n->outcnt(); j++) {\n-        last_addr = _masm.address_constant(dummy + j);\n-        if (last_addr == NULL) {\n+      \/\/ We use T_VOID as marker for jump-table entries (labels) which\n+      \/\/ need an internal word relocation.\n+      case T_VOID: {\n+        MachConstantNode* n = (MachConstantNode*) con.get_jobject();\n+        \/\/ Fill the jump-table with a dummy word.  The real value is\n+        \/\/ filled in later in fill_jump_table.\n+        address dummy = (address) n;\n+        constant_addr = _masm.address_constant(dummy);\n+        if (constant_addr == NULL) {\n@@ -159,1 +159,11 @@\n-      }\n+        assert((constant_addr - _masm.code()->consts()->start()) == con.offset(),\n+              \"must be: %d == %d\", (int)(constant_addr - _masm.code()->consts()->start()), (int)(con.offset()));\n+\n+        \/\/ Expand jump-table\n+        address last_addr = NULL;\n+        for (uint j = 1; j < n->outcnt(); j++) {\n+          last_addr = _masm.address_constant(dummy + j);\n+          if (last_addr == NULL) {\n+            return false;\n+          }\n+        }\n@@ -161,7 +171,7 @@\n-      address start = _masm.code()->consts()->start();\n-      address new_constant_addr = last_addr - ((n->outcnt() - 1) * sizeof(address));\n-      \/\/ Expanding the jump-table could result in an expansion of the const code section.\n-      \/\/ In that case, we need to check if the new constant address matches the offset.\n-      assert((constant_addr - start == con.offset()) || (new_constant_addr - start == con.offset()),\n-             \"must be: %d == %d or %d == %d (after an expansion)\", (int)(constant_addr - start), (int)(con.offset()),\n-             (int)(new_constant_addr - start), (int)(con.offset()));\n+        address start = _masm.code()->consts()->start();\n+        address new_constant_addr = last_addr - ((n->outcnt() - 1) * sizeof(address));\n+        \/\/ Expanding the jump-table could result in an expansion of the const code section.\n+        \/\/ In that case, we need to check if the new constant address matches the offset.\n+        assert((constant_addr - start == con.offset()) || (new_constant_addr - start == con.offset()),\n+              \"must be: %d == %d or %d == %d (after an expansion)\", (int)(constant_addr - start), (int)(con.offset()),\n+              (int)(new_constant_addr - start), (int)(con.offset()));\n@@ -169,9 +179,10 @@\n-      continue; \/\/ Loop\n-    }\n-    case T_METADATA: {\n-      Metadata* obj = con.get_metadata();\n-      int metadata_index = _masm.oop_recorder()->find_index(obj);\n-      constant_addr = _masm.address_constant((address) obj, metadata_Relocation::spec(metadata_index));\n-      break;\n-    }\n-    default: ShouldNotReachHere();\n+        continue; \/\/ Loop\n+      }\n+      case T_METADATA: {\n+        Metadata* obj = con.get_metadata();\n+        int metadata_index = _masm.oop_recorder()->find_index(obj);\n+        constant_addr = _masm.address_constant((address) obj, metadata_Relocation::spec(metadata_index));\n+        break;\n+      }\n+      default: ShouldNotReachHere();\n+      }\n@@ -221,0 +232,6 @@\n+ConstantTable::Constant ConstantTable::add(MachConstantNode* n, BasicType bt, GrowableArray<jvalue>* array) {\n+  Constant con(bt, array);\n+  add(con);\n+  return con;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/constantTable.cpp","additions":77,"deletions":60,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+    bool _is_array;\n@@ -44,0 +45,1 @@\n+      GrowableArray<jvalue>* _array;\n@@ -50,1 +52,1 @@\n-    Constant() : _type(T_ILLEGAL), _offset(-1), _freq(0.0f), _can_be_reused(true) { _v._value.l = 0; }\n+    Constant() : _type(T_ILLEGAL), _is_array(false), _offset(-1), _freq(0.0f), _can_be_reused(true) { _v._value.l = 0; }\n@@ -53,0 +55,1 @@\n+      _is_array(false),\n@@ -62,0 +65,1 @@\n+      _is_array(false),\n@@ -68,0 +72,13 @@\n+    Constant(BasicType type, GrowableArray<jvalue>* array) :\n+      _type(type),\n+      _is_array(true),\n+      _offset(-1),\n+      _freq(0.0f),\n+      _can_be_reused(false)\n+    {\n+      assert(is_java_primitive(type), \"not applicable for %s\", type2name(type));\n+      _v._array = new GrowableArray<jvalue>(array->length());\n+      for (jvalue ele : *array) {\n+        _v._array->append(ele);\n+      }\n+    }\n@@ -72,0 +89,1 @@\n+    bool is_array()       const    { return _is_array; }\n@@ -81,0 +99,2 @@\n+    GrowableArray<jvalue>* get_array() const { return _v._array; }\n+\n@@ -127,0 +147,1 @@\n+  Constant add(MachConstantNode* n, BasicType bt, GrowableArray<jvalue>* array);\n","filename":"src\/hotspot\/share\/opto\/constantTable.hpp","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2353,1 +2353,1 @@\n-        \/\/ the call, dstore_rounding does gvn.transform\n+        \/\/ the call, dprecision_rounding does gvn.transform\n@@ -2355,1 +2355,1 @@\n-        arg = dstore_rounding(arg);\n+        arg = dprecision_rounding(arg);\n@@ -2390,14 +2390,0 @@\n-\/\/ rounding for non-strict double stores\n-Node* GraphKit::dstore_rounding(Node* n) {\n-  if (Matcher::strict_fp_requires_explicit_rounding) {\n-#ifdef IA32\n-    if (UseSSE < 2) {\n-      return _gvn.transform(new RoundDoubleNode(0, n));\n-    }\n-#else\n-    Unimplemented();\n-#endif \/\/ IA32\n-  }\n-  return n;\n-}\n-\n@@ -2745,1 +2731,3 @@\n-  Node* norm = _gvn.transform( new CatchProjNode(catc, CatchProjNode::fall_through_index, CatchProjNode::no_handler_bci) );\n+  Node* norm = new CatchProjNode(catc, CatchProjNode::fall_through_index, CatchProjNode::no_handler_bci);\n+  _gvn.set_type_bottom(norm);\n+  C->record_for_igvn(norm);\n@@ -3986,0 +3974,9 @@\n+  const TypeOopPtr* ary_type = _gvn.type(klass_node)->is_klassptr()->as_instance_type();\n+  Node* valid_length_test = _gvn.intcon(1);\n+  if (ary_type->klass()->is_array_klass()) {\n+    BasicType bt = ary_type->klass()->as_array_klass()->element_type()->basic_type();\n+    jint max = TypeAryPtr::max_array_length(bt);\n+    Node* valid_length_cmp  = _gvn.transform(new CmpUNode(length, intcon(max)));\n+    valid_length_test = _gvn.transform(new BoolNode(valid_length_cmp, BoolTest::le));\n+  }\n+\n@@ -3992,1 +3989,1 @@\n-                            length);\n+                            length, valid_length_test);\n@@ -3999,1 +3996,0 @@\n-  const TypeOopPtr* ary_type = _gvn.type(klass_node)->is_klassptr()->as_instance_type();\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -793,3 +793,0 @@\n-  \/\/ rounding for non-strict double stores\n-  Node* dstore_rounding(Node* n);\n-\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -742,1 +742,1 @@\n-  Node* otherproj_ctrl_use = otherproj->unique_ctrl_out();\n+  Node* otherproj_ctrl_use = otherproj->unique_ctrl_out_or_null();\n@@ -1727,1 +1727,1 @@\n-      Node* head = unique_ctrl_out();\n+      Node* head = unique_ctrl_out_or_null();\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1192,1 +1192,1 @@\n-        } else if (c->unique_ctrl_out() == NULL && !c->is_If() && !c->is_Jump()) {\n+        } else if (c->unique_ctrl_out_or_null() == NULL && !c->is_If() && !c->is_Jump()) {\n","filename":"src\/hotspot\/share\/opto\/loopPredicate.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1237,1 +1237,1 @@\n-  Node* castii = new CastIINode(incr, TypeInt::INT, ConstraintCastNode::StrongDependency);\n+  Node* castii = new CastIINode(incr, TypeInt::INT, ConstraintCastNode::UnconditionalDependency);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -833,1 +833,0 @@\n-\n@@ -835,2 +834,0 @@\n-  BoolTest::mask mask = exit_test->as_BaseCountedLoopEnd()->test_trip();\n-  Node* cmp = exit_test->as_BaseCountedLoopEnd()->cmp_node();\n@@ -2852,1 +2849,1 @@\n-      Node* head = backedge->unique_ctrl_out();\n+      Node* head = backedge->unique_ctrl_out_or_null();\n@@ -5731,0 +5728,28 @@\n+  if (least != early) {\n+    \/\/ Move the node above predicates as far up as possible so a\n+    \/\/ following pass of loop predication doesn't hoist a predicate\n+    \/\/ that depends on it above that node.\n+    Node* new_ctrl = least;\n+    for (;;) {\n+      if (!new_ctrl->is_Proj()) {\n+        break;\n+      }\n+      CallStaticJavaNode* call = new_ctrl->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n+      if (call == NULL) {\n+        break;\n+      }\n+      int req = call->uncommon_trap_request();\n+      Deoptimization::DeoptReason trap_reason = Deoptimization::trap_request_reason(req);\n+      if (trap_reason != Deoptimization::Reason_loop_limit_check &&\n+          trap_reason != Deoptimization::Reason_predicate &&\n+          trap_reason != Deoptimization::Reason_profile_predicate) {\n+        break;\n+      }\n+      Node* c = new_ctrl->in(0)->in(0);\n+      if (is_dominator(c, early) && c != early) {\n+        break;\n+      }\n+      new_ctrl = c;\n+    }\n+    least = new_ctrl;\n+  }\n@@ -5734,27 +5759,7 @@\n-    Node* ctrl_out = least->unique_ctrl_out();\n-    if (ctrl_out && ctrl_out->is_Loop() &&\n-        least == ctrl_out->in(LoopNode::EntryControl)) {\n-      \/\/ Move the node above predicates as far up as possible so a\n-      \/\/ following pass of loop predication doesn't hoist a predicate\n-      \/\/ that depends on it above that node.\n-      Node* new_ctrl = least;\n-      for (;;) {\n-        if (!new_ctrl->is_Proj()) {\n-          break;\n-        }\n-        CallStaticJavaNode* call = new_ctrl->as_Proj()->is_uncommon_trap_if_pattern(Deoptimization::Reason_none);\n-        if (call == NULL) {\n-          break;\n-        }\n-        int req = call->uncommon_trap_request();\n-        Deoptimization::DeoptReason trap_reason = Deoptimization::trap_request_reason(req);\n-        if (trap_reason != Deoptimization::Reason_loop_limit_check &&\n-            trap_reason != Deoptimization::Reason_predicate &&\n-            trap_reason != Deoptimization::Reason_profile_predicate) {\n-          break;\n-        }\n-        Node* c = new_ctrl->in(0)->in(0);\n-        if (is_dominator(c, early) && c != early) {\n-          break;\n-        }\n-        new_ctrl = c;\n+    Node* ctrl_out = least->unique_ctrl_out_or_null();\n+    if (ctrl_out != NULL && ctrl_out->is_Loop() &&\n+        least == ctrl_out->in(LoopNode::EntryControl) &&\n+        (ctrl_out->is_CountedLoop() || ctrl_out->is_OuterStripMinedLoop())) {\n+      Node* least_dom = idom(least);\n+      if (get_loop(least_dom)->is_member(get_loop(least))) {\n+        least = least_dom;\n@@ -5762,1 +5767,0 @@\n-      least = new_ctrl;\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":37,"deletions":33,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -1452,1 +1452,2 @@\n-  Node *remix_address_expressions( Node *n );\n+  Node* remix_address_expressions(Node* n);\n+  Node* remix_address_expressions_add_left_shift(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -355,35 +355,3 @@\n-\/\/------------------------------remix_address_expressions----------------------\n-\/\/ Rework addressing expressions to get the most loop-invariant stuff\n-\/\/ moved out.  We'd like to do all associative operators, but it's especially\n-\/\/ important (common) to do address expressions.\n-Node *PhaseIdealLoop::remix_address_expressions( Node *n ) {\n-  if (!has_ctrl(n))  return NULL;\n-  Node *n_ctrl = get_ctrl(n);\n-  IdealLoopTree *n_loop = get_loop(n_ctrl);\n-\n-  \/\/ See if 'n' mixes loop-varying and loop-invariant inputs and\n-  \/\/ itself is loop-varying.\n-\n-  \/\/ Only interested in binary ops (and AddP)\n-  if( n->req() < 3 || n->req() > 4 ) return NULL;\n-\n-  Node *n1_ctrl = get_ctrl(n->in(                    1));\n-  Node *n2_ctrl = get_ctrl(n->in(                    2));\n-  Node *n3_ctrl = get_ctrl(n->in(n->req() == 3 ? 2 : 3));\n-  IdealLoopTree *n1_loop = get_loop( n1_ctrl );\n-  IdealLoopTree *n2_loop = get_loop( n2_ctrl );\n-  IdealLoopTree *n3_loop = get_loop( n3_ctrl );\n-\n-  \/\/ Does one of my inputs spin in a tighter loop than self?\n-  if( (n_loop->is_member( n1_loop ) && n_loop != n1_loop) ||\n-      (n_loop->is_member( n2_loop ) && n_loop != n2_loop) ||\n-      (n_loop->is_member( n3_loop ) && n_loop != n3_loop) )\n-    return NULL;                \/\/ Leave well enough alone\n-\n-  \/\/ Is at least one of my inputs loop-invariant?\n-  if( n1_loop == n_loop &&\n-      n2_loop == n_loop &&\n-      n3_loop == n_loop )\n-    return NULL;                \/\/ No loop-invariant inputs\n-\n-\n+\/\/ Replace expressions like ((V+I) << 2) with (V<<2 + I<<2).\n+Node* PhaseIdealLoop::remix_address_expressions_add_left_shift(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt) {\n+  assert(bt == T_INT || bt == T_LONG, \"only for integers\");\n@@ -392,2 +360,1 @@\n-  \/\/ Replace expressions like ((V+I) << 2) with (V<<2 + I<<2).\n-  if( n_op == Op_LShiftI ) {\n+  if (n_op == Op_LShift(bt)) {\n@@ -395,4 +362,4 @@\n-    Node *scale = n->in(2);\n-    Node *scale_ctrl = get_ctrl(scale);\n-    IdealLoopTree *scale_loop = get_loop(scale_ctrl );\n-    if( n_loop == scale_loop || !scale_loop->is_member( n_loop ) )\n+    Node* scale = n->in(2);\n+    Node* scale_ctrl = get_ctrl(scale);\n+    IdealLoopTree* scale_loop = get_loop(scale_ctrl);\n+    if (n_loop == scale_loop || !scale_loop->is_member(n_loop)) {\n@@ -400,2 +367,3 @@\n-    const TypeInt *scale_t = scale->bottom_type()->isa_int();\n-    if( scale_t && scale_t->is_con() && scale_t->get_con() >= 16 )\n+    }\n+    const TypeInt* scale_t = scale->bottom_type()->isa_int();\n+    if (scale_t != NULL && scale_t->is_con() && scale_t->get_con() >= 16) {\n@@ -403,0 +371,1 @@\n+    }\n@@ -404,5 +373,6 @@\n-    Node *add = n->in(1);\n-    Node *add_ctrl = get_ctrl(add);\n-    IdealLoopTree *add_loop = get_loop(add_ctrl);\n-    \/\/assert( n_loop == add_loop, \"\" );\n-    if( n_loop != add_loop ) return NULL;  \/\/ happens w\/ evil ZKM loops\n+    Node* add = n->in(1);\n+    Node* add_ctrl = get_ctrl(add);\n+    IdealLoopTree* add_loop = get_loop(add_ctrl);\n+    if (n_loop != add_loop) {\n+      return NULL;  \/\/ happens w\/ evil ZKM loops\n+    }\n@@ -411,3 +381,4 @@\n-    if( add->Opcode() == Op_SubI &&\n-        _igvn.type( add->in(1) ) != TypeInt::ZERO ) {\n-      Node *zero = _igvn.intcon(0);\n+    if (add->Opcode() == Op_Sub(bt) &&\n+        _igvn.type(add->in(1)) != TypeInteger::zero(bt)) {\n+      assert(add->Opcode() == Op_SubI || add->Opcode() == Op_SubL, \"\");\n+      Node* zero = _igvn.integercon(0, bt);\n@@ -415,4 +386,4 @@\n-      Node *neg = new SubINode( _igvn.intcon(0), add->in(2) );\n-      register_new_node( neg, get_ctrl(add->in(2) ) );\n-      add = new AddINode( add->in(1), neg );\n-      register_new_node( add, add_ctrl );\n+      Node* neg = SubNode::make(zero, add->in(2), bt);\n+      register_new_node(neg, get_ctrl(add->in(2)));\n+      add = AddNode::make(add->in(1), neg, bt);\n+      register_new_node(add, add_ctrl);\n@@ -420,1 +391,2 @@\n-    if( add->Opcode() != Op_AddI ) return NULL;\n+    if (add->Opcode() != Op_Add(bt)) return NULL;\n+    assert(add->Opcode() == Op_AddI || add->Opcode() == Op_AddL, \"\");\n@@ -422,8 +394,7 @@\n-    Node *add_var = add->in(1);\n-    Node *add_var_ctrl = get_ctrl(add_var);\n-    IdealLoopTree *add_var_loop = get_loop(add_var_ctrl );\n-    Node *add_invar = add->in(2);\n-    Node *add_invar_ctrl = get_ctrl(add_invar);\n-    IdealLoopTree *add_invar_loop = get_loop(add_invar_ctrl );\n-    if( add_var_loop == n_loop ) {\n-    } else if( add_invar_loop == n_loop ) {\n+    Node* add_var = add->in(1);\n+    Node* add_var_ctrl = get_ctrl(add_var);\n+    IdealLoopTree* add_var_loop = get_loop(add_var_ctrl);\n+    Node* add_invar = add->in(2);\n+    Node* add_invar_ctrl = get_ctrl(add_invar);\n+    IdealLoopTree* add_invar_loop = get_loop(add_invar_ctrl);\n+    if (add_invar_loop == n_loop) {\n@@ -435,3 +406,1 @@\n-      Node *add_var_ctrl = get_ctrl(add_var);\n-      IdealLoopTree *add_var_loop = get_loop(add_var_ctrl );\n-    } else                      \/\/ Else neither input is loop invariant\n+    } else if (add_var_loop != n_loop) { \/\/ Else neither input is loop invariant\n@@ -439,1 +408,2 @@\n-    if( n_loop == add_invar_loop || !add_invar_loop->is_member( n_loop ) )\n+    }\n+    if (n_loop == add_invar_loop || !add_invar_loop->is_member(n_loop)) {\n@@ -441,0 +411,1 @@\n+    }\n@@ -443,10 +414,10 @@\n-    Node *inv_scale = new LShiftINode( add_invar, scale );\n-    Node *inv_scale_ctrl =\n-      dom_depth(add_invar_ctrl) > dom_depth(scale_ctrl) ?\n-      add_invar_ctrl : scale_ctrl;\n-    register_new_node( inv_scale, inv_scale_ctrl );\n-    Node *var_scale = new LShiftINode( add_var, scale );\n-    register_new_node( var_scale, n_ctrl );\n-    Node *var_add = new AddINode( var_scale, inv_scale );\n-    register_new_node( var_add, n_ctrl );\n-    _igvn.replace_node( n, var_add );\n+    Node* inv_scale = LShiftNode::make(add_invar, scale, bt);\n+    Node* inv_scale_ctrl =\n+            dom_depth(add_invar_ctrl) > dom_depth(scale_ctrl) ?\n+            add_invar_ctrl : scale_ctrl;\n+    register_new_node(inv_scale, inv_scale_ctrl);\n+    Node* var_scale = LShiftNode::make(add_var, scale, bt);\n+    register_new_node(var_scale, n_ctrl);\n+    Node* var_add = AddNode::make(var_scale, inv_scale, bt);\n+    register_new_node(var_add, n_ctrl);\n+    _igvn.replace_node(n, var_add);\n@@ -455,0 +426,38 @@\n+  return NULL;\n+}\n+\n+\/\/------------------------------remix_address_expressions----------------------\n+\/\/ Rework addressing expressions to get the most loop-invariant stuff\n+\/\/ moved out.  We'd like to do all associative operators, but it's especially\n+\/\/ important (common) to do address expressions.\n+Node* PhaseIdealLoop::remix_address_expressions(Node* n) {\n+  if (!has_ctrl(n))  return NULL;\n+  Node* n_ctrl = get_ctrl(n);\n+  IdealLoopTree* n_loop = get_loop(n_ctrl);\n+\n+  \/\/ See if 'n' mixes loop-varying and loop-invariant inputs and\n+  \/\/ itself is loop-varying.\n+\n+  \/\/ Only interested in binary ops (and AddP)\n+  if (n->req() < 3 || n->req() > 4) return NULL;\n+\n+  Node* n1_ctrl = get_ctrl(n->in(                    1));\n+  Node* n2_ctrl = get_ctrl(n->in(                    2));\n+  Node* n3_ctrl = get_ctrl(n->in(n->req() == 3 ? 2 : 3));\n+  IdealLoopTree* n1_loop = get_loop(n1_ctrl);\n+  IdealLoopTree* n2_loop = get_loop(n2_ctrl);\n+  IdealLoopTree* n3_loop = get_loop(n3_ctrl);\n+\n+  \/\/ Does one of my inputs spin in a tighter loop than self?\n+  if ((n_loop->is_member(n1_loop) && n_loop != n1_loop) ||\n+      (n_loop->is_member(n2_loop) && n_loop != n2_loop) ||\n+      (n_loop->is_member(n3_loop) && n_loop != n3_loop)) {\n+    return NULL;                \/\/ Leave well enough alone\n+  }\n+\n+  \/\/ Is at least one of my inputs loop-invariant?\n+  if (n1_loop == n_loop &&\n+      n2_loop == n_loop &&\n+      n3_loop == n_loop) {\n+    return NULL;                \/\/ No loop-invariant inputs\n+  }\n@@ -456,0 +465,10 @@\n+  Node* res = remix_address_expressions_add_left_shift(n, n_loop, n_ctrl, T_INT);\n+  if (res != NULL) {\n+    return res;\n+  }\n+  res = remix_address_expressions_add_left_shift(n, n_loop, n_ctrl, T_LONG);\n+  if (res != NULL) {\n+    return res;\n+  }\n+\n+  int n_op = n->Opcode();\n@@ -457,1 +476,1 @@\n-  if( n_op == Op_AddI ||\n+  if (n_op == Op_AddI ||\n@@ -464,3 +483,3 @@\n-      n_op == Op_MulD ) {\n-    if( n2_loop == n_loop ) {\n-      assert( n1_loop != n_loop, \"\" );\n+      n_op == Op_MulD) {\n+    if (n2_loop == n_loop) {\n+      assert(n1_loop != n_loop, \"\");\n@@ -473,10 +492,10 @@\n-  if( n_op == Op_AddP ) {\n-    if( n2_loop == n_loop && n3_loop != n_loop ) {\n-      if( n->in(2)->Opcode() == Op_AddP && !n->in(3)->is_Con() ) {\n-        Node *n22_ctrl = get_ctrl(n->in(2)->in(2));\n-        Node *n23_ctrl = get_ctrl(n->in(2)->in(3));\n-        IdealLoopTree *n22loop = get_loop( n22_ctrl );\n-        IdealLoopTree *n23_loop = get_loop( n23_ctrl );\n-        if( n22loop != n_loop && n22loop->is_member(n_loop) &&\n-            n23_loop == n_loop ) {\n-          Node *add1 = new AddPNode( n->in(1), n->in(2)->in(2), n->in(3) );\n+  if (n_op == Op_AddP) {\n+    if (n2_loop == n_loop && n3_loop != n_loop) {\n+      if (n->in(2)->Opcode() == Op_AddP && !n->in(3)->is_Con()) {\n+        Node* n22_ctrl = get_ctrl(n->in(2)->in(2));\n+        Node* n23_ctrl = get_ctrl(n->in(2)->in(3));\n+        IdealLoopTree* n22loop = get_loop(n22_ctrl);\n+        IdealLoopTree* n23_loop = get_loop(n23_ctrl);\n+        if (n22loop != n_loop && n22loop->is_member(n_loop) &&\n+            n23_loop == n_loop) {\n+          Node* add1 = new AddPNode(n->in(1), n->in(2)->in(2), n->in(3));\n@@ -484,4 +503,4 @@\n-          register_new_node( add1, n_loop->_head->in(LoopNode::EntryControl) );\n-          Node *add2 = new AddPNode( n->in(1), add1, n->in(2)->in(3) );\n-          register_new_node( add2, n_ctrl );\n-          _igvn.replace_node( n, add2 );\n+          register_new_node(add1, n_loop->_head->in(LoopNode::EntryControl));\n+          Node* add2 = new AddPNode(n->in(1), add1, n->in(2)->in(3));\n+          register_new_node(add2, n_ctrl);\n+          _igvn.replace_node(n, add2);\n@@ -496,2 +515,2 @@\n-        Node *V = n->in(3)->in(1);\n-        Node *I = n->in(3)->in(2);\n+        Node* V = n->in(3)->in(1);\n+        Node* I = n->in(3)->in(2);\n@@ -503,1 +522,1 @@\n-          Node *add1 = new AddPNode(n->in(1), n->in(2), I);\n+          Node* add1 = new AddPNode(n->in(1), n->in(2), I);\n@@ -506,1 +525,1 @@\n-          Node *add2 = new AddPNode(n->in(1), add1, V);\n+          Node* add2 = new AddPNode(n->in(1), add1, V);\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":119,"deletions":100,"binary":false,"changes":219,"status":"modified"},{"patch":"@@ -1211,1 +1211,2 @@\n-            address slow_call_address  \/\/ Address of slow call\n+            address slow_call_address,  \/\/ Address of slow call\n+            Node* valid_length_test \/\/ whether length is valid or not\n@@ -1396,0 +1397,6 @@\n+  \/\/ For array allocations, copy the valid length check to the call node so Compile::final_graph_reshaping() can verify\n+  \/\/ that the call has the expected number of CatchProj nodes (in case the allocation always fails and the fallthrough\n+  \/\/ path dies).\n+  if (valid_length_test != NULL) {\n+    call->add_req(valid_length_test);\n+  }\n@@ -1878,1 +1885,1 @@\n-                         OptoRuntime::new_instance_Java());\n+                         OptoRuntime::new_instance_Java(), NULL);\n@@ -1883,0 +1890,1 @@\n+  Node* valid_length_test = alloc->in(AllocateNode::ValidLengthTest);\n@@ -1897,1 +1905,1 @@\n-                         slow_call_address);\n+                         slow_call_address, valid_length_test);\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -95,2 +95,2 @@\n-                              address slow_call_address);\n-  void yank_initalize_node(InitializeNode* node);\n+                              address slow_call_address,\n+                              Node* valid_length_test);\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4755,23 +4755,0 @@\n-  \/\/ Look carefully at the base node if it is a phi.\n-  PhiNode* phi_base;\n-  if (new_base != NULL && new_base->is_Phi())\n-    phi_base = new_base->as_Phi();\n-  else\n-    phi_base = NULL;\n-\n-  Node*    phi_reg = NULL;\n-  uint     phi_len = (uint)-1;\n-  if (phi_base != NULL) {\n-    phi_reg = phi_base->region();\n-    phi_len = phi_base->req();\n-    \/\/ see if the phi is unfinished\n-    for (uint i = 1; i < phi_len; i++) {\n-      if (phi_base->in(i) == NULL) {\n-        \/\/ incomplete phi; do not look at it yet!\n-        phi_reg = NULL;\n-        phi_len = (uint)-1;\n-        break;\n-      }\n-    }\n-  }\n-\n@@ -4978,1 +4955,0 @@\n-  Compile *C = Compile::current();\n","filename":"src\/hotspot\/share\/opto\/memnode.cpp","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -78,1 +78,3 @@\n-  if( in(0) && remove_dead_region(phase, can_reshape) ) return this;\n+  if (in(0) != NULL && remove_dead_region(phase, can_reshape)) {\n+    return this;\n+  }\n@@ -80,1 +82,3 @@\n-  if( in(0) && in(0)->is_top() )  return NULL;\n+  if (in(0) != NULL && in(0)->is_top()) {\n+    return NULL;\n+  }\n@@ -82,11 +86,11 @@\n-         in(IfFalse) != this &&\n-         in(IfTrue) != this, \"dead loop in CMoveNode::Ideal\" );\n-  if( phase->type(in(Condition)) == Type::TOP )\n-  return NULL; \/\/ return NULL when Condition is dead\n-\n-  if( in(IfFalse)->is_Con() && !in(IfTrue)->is_Con() ) {\n-    if( in(Condition)->is_Bool() ) {\n-      BoolNode* b  = in(Condition)->as_Bool();\n-      BoolNode* b2 = b->negate(phase);\n-      return make(in(Control), phase->transform(b2), in(IfTrue), in(IfFalse), _type);\n-    }\n+         in(IfFalse)   != this &&\n+         in(IfTrue)    != this, \"dead loop in CMoveNode::Ideal\");\n+  if (phase->type(in(Condition)) == Type::TOP ||\n+      phase->type(in(IfFalse))   == Type::TOP ||\n+      phase->type(in(IfTrue))    == Type::TOP) {\n+    return NULL;\n+  }\n+  \/\/ Canonicalize the node by moving constants to the right input.\n+  if (in(Condition)->is_Bool() && phase->type(in(IfFalse))->singleton() && !phase->type(in(IfTrue))->singleton()) {\n+    BoolNode* b = in(Condition)->as_Bool()->negate(phase);\n+    return make(in(Control), phase->transform(b), in(IfTrue), in(IfFalse), _type);\n@@ -194,8 +198,4 @@\n-  \/\/ have moved the constant to the right).  This situation is bad for Intel\n-  \/\/ and a don't-care for Sparc.  It's bad for Intel because the zero has to\n-  \/\/ be manifested in a register with a XOR which kills flags, which are live\n-  \/\/ on input to the CMoveI, leading to a situation which causes excessive\n-  \/\/ spilling on Intel.  For Sparc, if the zero in on the left the Sparc will\n-  \/\/ zero a register via G0 and conditionally-move the other constant.  If the\n-  \/\/ zero is on the right, the Sparc will load the first constant with a\n-  \/\/ 13-bit set-lo and conditionally move G0.  See bug 4677505.\n+  \/\/ have moved the constant to the right). This situation is bad for x86 because\n+  \/\/ the zero has to be manifested in a register with a XOR which kills flags,\n+  \/\/ which are live on input to the CMoveI, leading to a situation which causes\n+  \/\/ excessive spilling. See bug 4677505.\n","filename":"src\/hotspot\/share\/opto\/movenode.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -741,0 +741,12 @@\n+LShiftNode* LShiftNode::make(Node* in1, Node* in2, BasicType bt) {\n+  switch (bt) {\n+    case T_INT:\n+      return new LShiftINode(in1, in2);\n+    case T_LONG:\n+      return new LShiftLNode(in1, in2);\n+    default:\n+      fatal(\"Not implemented for %s\", type2name(bt));\n+  }\n+  return NULL;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/mulnode.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -231,0 +231,2 @@\n+\n+  static LShiftNode* make(Node* in1, Node* in2, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/mulnode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-    out = out->unique_ctrl_out();\n+    out = out->unique_ctrl_out_or_null();\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2390,1 +2390,1 @@\n-\/\/--------------------------unique_ctrl_out------------------------------\n+\/\/--------------------------unique_ctrl_out_or_null-------------------------\n@@ -2392,1 +2392,1 @@\n-Node* Node::unique_ctrl_out() const {\n+Node* Node::unique_ctrl_out_or_null() const {\n@@ -2406,0 +2406,8 @@\n+\/\/--------------------------unique_ctrl_out------------------------------\n+\/\/ Return the unique control out. Asserts if none or more than one control out.\n+Node* Node::unique_ctrl_out() const {\n+  Node* ctrl = unique_ctrl_out_or_null();\n+  assert(ctrl != NULL, \"control out is assumed to be unique\");\n+  return ctrl;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1087,0 +1087,2 @@\n+  Node* unique_ctrl_out_or_null() const;\n+  \/\/ Return the unique control out. Asserts if none or more than one control out.\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1868,0 +1868,1 @@\n+\n@@ -1870,18 +1871,3 @@\n-  case Bytecodes::_ldc2_w:\n-    \/\/ If the constant is unresolved, run this BC once in the interpreter.\n-    {\n-      ciConstant constant = iter().get_constant();\n-      if (!constant.is_valid() ||\n-          (constant.basic_type() == T_OBJECT &&\n-           !constant.as_object()->is_loaded())) {\n-        int index = iter().get_constant_pool_index();\n-        constantTag tag = iter().get_constant_pool_tag(index);\n-        uncommon_trap(Deoptimization::make_trap_request\n-                      (Deoptimization::Reason_unloaded,\n-                       Deoptimization::Action_reinterpret,\n-                       index),\n-                      NULL, tag.internal_name());\n-        break;\n-      }\n-      assert(constant.basic_type() != T_OBJECT || constant.as_object()->is_instance(),\n-             \"must be java_mirror of klass\");\n+  case Bytecodes::_ldc2_w: {\n+    ciConstant constant = iter().get_constant();\n+    if (constant.is_loaded()) {\n@@ -1892,1 +1878,6 @@\n-    }\n+    } else {\n+      \/\/ If the constant is unresolved or in error state, run this BC in the interpreter.\n+      if (iter().is_in_error()) {\n+        uncommon_trap(Deoptimization::make_trap_request(Deoptimization::Reason_unhandled,\n+                                                        Deoptimization::Action_none),\n+                      NULL, \"constant in error state\", true \/* must_throw *\/);\n@@ -1894,0 +1885,8 @@\n+      } else {\n+        int index = iter().get_constant_pool_index();\n+        uncommon_trap(Deoptimization::make_trap_request(Deoptimization::Reason_unloaded,\n+                                                        Deoptimization::Action_reinterpret,\n+                                                        index),\n+                      NULL, \"unresolved constant\", false \/* must_throw *\/);\n+      }\n+    }\n@@ -1895,0 +1894,1 @@\n+  }\n@@ -2007,1 +2007,1 @@\n-    set_pair_local( 0, dstore_rounding(pop_pair()) );\n+    set_pair_local( 0, dprecision_rounding(pop_pair()) );\n@@ -2010,1 +2010,1 @@\n-    set_pair_local( 1, dstore_rounding(pop_pair()) );\n+    set_pair_local( 1, dprecision_rounding(pop_pair()) );\n@@ -2013,1 +2013,1 @@\n-    set_pair_local( 2, dstore_rounding(pop_pair()) );\n+    set_pair_local( 2, dprecision_rounding(pop_pair()) );\n@@ -2016,1 +2016,1 @@\n-    set_pair_local( 3, dstore_rounding(pop_pair()) );\n+    set_pair_local( 3, dprecision_rounding(pop_pair()) );\n@@ -2019,1 +2019,1 @@\n-    set_pair_local( iter().get_index(), dstore_rounding(pop_pair()) );\n+    set_pair_local( iter().get_index(), dprecision_rounding(pop_pair()) );\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -28,0 +28,44 @@\n+#define COMPILER_PHASES(flags) \\\n+  flags(BEFORE_STRINGOPTS,            \"Before StringOpts\") \\\n+  flags(AFTER_STRINGOPTS,             \"After StringOpts\") \\\n+  flags(BEFORE_REMOVEUSELESS,         \"Before RemoveUseless\") \\\n+  flags(AFTER_PARSING,                \"After Parsing\") \\\n+  flags(ITER_GVN1,                    \"Iter GVN 1\") \\\n+  flags(EXPAND_VUNBOX,                \"Expand VectorUnbox\") \\\n+  flags(SCALARIZE_VBOX,               \"Scalarize VectorBox\") \\\n+  flags(INLINE_VECTOR_REBOX,          \"Inline Vector Rebox Calls\") \\\n+  flags(EXPAND_VBOX,                  \"Expand VectorBox\") \\\n+  flags(ELIMINATE_VBOX_ALLOC,         \"Eliminate VectorBoxAllocate\") \\\n+  flags(PHASEIDEAL_BEFORE_EA,         \"PhaseIdealLoop before EA\") \\\n+  flags(ITER_GVN_AFTER_VECTOR,        \"Iter GVN after vector box elimination\") \\\n+  flags(ITER_GVN_BEFORE_EA,           \"Iter GVN before EA\") \\\n+  flags(ITER_GVN_AFTER_EA,            \"Iter GVN after EA\") \\\n+  flags(ITER_GVN_AFTER_ELIMINATION,   \"Iter GVN after eliminating allocations and locks\") \\\n+  flags(PHASEIDEALLOOP1,              \"PhaseIdealLoop 1\") \\\n+  flags(PHASEIDEALLOOP2,              \"PhaseIdealLoop 2\") \\\n+  flags(PHASEIDEALLOOP3,              \"PhaseIdealLoop 3\") \\\n+  flags(CCP1,                         \"PhaseCCP 1\") \\\n+  flags(ITER_GVN2,                    \"Iter GVN 2\") \\\n+  flags(PHASEIDEALLOOP_ITERATIONS,    \"PhaseIdealLoop iterations\") \\\n+  flags(OPTIMIZE_FINISHED,            \"Optimize finished\") \\\n+  flags(GLOBAL_CODE_MOTION,           \"Global code motion\") \\\n+  flags(FINAL_CODE,                   \"Final Code\") \\\n+  flags(AFTER_EA,                     \"After Escape Analysis\") \\\n+  flags(BEFORE_CLOOPS,                \"Before CountedLoop\") \\\n+  flags(AFTER_CLOOPS,                 \"After CountedLoop\") \\\n+  flags(BEFORE_BEAUTIFY_LOOPS,        \"Before beautify loops\") \\\n+  flags(AFTER_BEAUTIFY_LOOPS,         \"After beautify loops\") \\\n+  flags(BEFORE_MATCHING,              \"Before matching\") \\\n+  flags(MATCHING,                     \"After matching\") \\\n+  flags(INCREMENTAL_INLINE,           \"Incremental Inline\") \\\n+  flags(INCREMENTAL_INLINE_STEP,      \"Incremental Inline Step\") \\\n+  flags(INCREMENTAL_INLINE_CLEANUP,   \"Incremental Inline Cleanup\") \\\n+  flags(INCREMENTAL_BOXING_INLINE,    \"Incremental Boxing Inline\") \\\n+  flags(CALL_CATCH_CLEANUP,           \"Call catch cleanup\") \\\n+  flags(MACRO_EXPANSION,              \"Macro expand\") \\\n+  flags(BARRIER_EXPANSION,            \"Barrier expand\") \\\n+  flags(END,                          \"End\") \\\n+  flags(FAILURE,                      \"Failure\") \\\n+  flags(DEBUG,                        \"Debug\")\n+\n+#define table_entry(name, description) PHASE_##name,\n@@ -29,45 +73,16 @@\n-  PHASE_BEFORE_STRINGOPTS,\n-  PHASE_AFTER_STRINGOPTS,\n-  PHASE_BEFORE_REMOVEUSELESS,\n-  PHASE_AFTER_PARSING,\n-  PHASE_ITER_GVN1,\n-  PHASE_EXPAND_VUNBOX,\n-  PHASE_SCALARIZE_VBOX,\n-  PHASE_INLINE_VECTOR_REBOX,\n-  PHASE_EXPAND_VBOX,\n-  PHASE_ELIMINATE_VBOX_ALLOC,\n-  PHASE_PHASEIDEAL_BEFORE_EA,\n-  PHASE_ITER_GVN_AFTER_VECTOR,\n-  PHASE_ITER_GVN_BEFORE_EA,\n-  PHASE_ITER_GVN_AFTER_EA,\n-  PHASE_ITER_GVN_AFTER_ELIMINATION,\n-  PHASE_PHASEIDEALLOOP1,\n-  PHASE_PHASEIDEALLOOP2,\n-  PHASE_PHASEIDEALLOOP3,\n-  PHASE_CCP1,\n-  PHASE_ITER_GVN2,\n-  PHASE_PHASEIDEALLOOP_ITERATIONS,\n-  PHASE_OPTIMIZE_FINISHED,\n-  PHASE_GLOBAL_CODE_MOTION,\n-  PHASE_FINAL_CODE,\n-  PHASE_AFTER_EA,\n-  PHASE_BEFORE_CLOOPS,\n-  PHASE_AFTER_CLOOPS,\n-  PHASE_BEFORE_BEAUTIFY_LOOPS,\n-  PHASE_AFTER_BEAUTIFY_LOOPS,\n-  PHASE_BEFORE_MATCHING,\n-  PHASE_MATCHING,\n-  PHASE_INCREMENTAL_INLINE,\n-  PHASE_INCREMENTAL_INLINE_STEP,\n-  PHASE_INCREMENTAL_INLINE_CLEANUP,\n-  PHASE_INCREMENTAL_BOXING_INLINE,\n-  PHASE_CALL_CATCH_CLEANUP,\n-  PHASE_INSERT_BARRIER,\n-  PHASE_MACRO_EXPANSION,\n-  PHASE_BARRIER_EXPANSION,\n-  PHASE_ADD_UNSAFE_BARRIER,\n-  PHASE_END,\n-  PHASE_FAILURE,\n-  PHASE_DEBUG,\n-\n-  PHASE_NUM_TYPES\n+  COMPILER_PHASES(table_entry)\n+  PHASE_NUM_TYPES,\n+  PHASE_NONE\n+};\n+#undef table_entry\n+\n+static const char* phase_descriptions[] = {\n+#define array_of_labels(name, description) description,\n+       COMPILER_PHASES(array_of_labels)\n+#undef array_of_labels\n+};\n+\n+static const char* phase_names[] = {\n+#define array_of_labels(name, description) #name,\n+       COMPILER_PHASES(array_of_labels)\n+#undef array_of_labels\n@@ -78,48 +93,55 @@\n-  static const char* to_string(CompilerPhaseType cpt) {\n-    switch (cpt) {\n-      case PHASE_BEFORE_STRINGOPTS:          return \"Before StringOpts\";\n-      case PHASE_AFTER_STRINGOPTS:           return \"After StringOpts\";\n-      case PHASE_BEFORE_REMOVEUSELESS:       return \"Before RemoveUseless\";\n-      case PHASE_AFTER_PARSING:              return \"After Parsing\";\n-      case PHASE_ITER_GVN1:                  return \"Iter GVN 1\";\n-      case PHASE_EXPAND_VUNBOX:              return \"Expand VectorUnbox\";\n-      case PHASE_SCALARIZE_VBOX:             return \"Scalarize VectorBox\";\n-      case PHASE_INLINE_VECTOR_REBOX:        return \"Inline Vector Rebox Calls\";\n-      case PHASE_EXPAND_VBOX:                return \"Expand VectorBox\";\n-      case PHASE_ELIMINATE_VBOX_ALLOC:       return \"Eliminate VectorBoxAllocate\";\n-      case PHASE_PHASEIDEAL_BEFORE_EA:       return \"PhaseIdealLoop before EA\";\n-      case PHASE_ITER_GVN_AFTER_VECTOR:      return \"Iter GVN after vector box elimination\";\n-      case PHASE_ITER_GVN_BEFORE_EA:         return \"Iter GVN before EA\";\n-      case PHASE_ITER_GVN_AFTER_EA:          return \"Iter GVN after EA\";\n-      case PHASE_ITER_GVN_AFTER_ELIMINATION: return \"Iter GVN after eliminating allocations and locks\";\n-      case PHASE_PHASEIDEALLOOP1:            return \"PhaseIdealLoop 1\";\n-      case PHASE_PHASEIDEALLOOP2:            return \"PhaseIdealLoop 2\";\n-      case PHASE_PHASEIDEALLOOP3:            return \"PhaseIdealLoop 3\";\n-      case PHASE_CCP1:                       return \"PhaseCCP 1\";\n-      case PHASE_ITER_GVN2:                  return \"Iter GVN 2\";\n-      case PHASE_PHASEIDEALLOOP_ITERATIONS:  return \"PhaseIdealLoop iterations\";\n-      case PHASE_OPTIMIZE_FINISHED:          return \"Optimize finished\";\n-      case PHASE_GLOBAL_CODE_MOTION:         return \"Global code motion\";\n-      case PHASE_FINAL_CODE:                 return \"Final Code\";\n-      case PHASE_AFTER_EA:                   return \"After Escape Analysis\";\n-      case PHASE_BEFORE_CLOOPS:              return \"Before CountedLoop\";\n-      case PHASE_AFTER_CLOOPS:               return \"After CountedLoop\";\n-      case PHASE_BEFORE_BEAUTIFY_LOOPS:      return \"Before beautify loops\";\n-      case PHASE_AFTER_BEAUTIFY_LOOPS:       return \"After beautify loops\";\n-      case PHASE_BEFORE_MATCHING:            return \"Before matching\";\n-      case PHASE_MATCHING:                   return \"After matching\";\n-      case PHASE_INCREMENTAL_INLINE:         return \"Incremental Inline\";\n-      case PHASE_INCREMENTAL_INLINE_STEP:    return \"Incremental Inline Step\";\n-      case PHASE_INCREMENTAL_INLINE_CLEANUP: return \"Incremental Inline Cleanup\";\n-      case PHASE_INCREMENTAL_BOXING_INLINE:  return \"Incremental Boxing Inline\";\n-      case PHASE_CALL_CATCH_CLEANUP:         return \"Call catch cleanup\";\n-      case PHASE_INSERT_BARRIER:             return \"Insert barrier\";\n-      case PHASE_MACRO_EXPANSION:            return \"Macro expand\";\n-      case PHASE_BARRIER_EXPANSION:          return \"Barrier expand\";\n-      case PHASE_ADD_UNSAFE_BARRIER:         return \"Add barrier to unsafe op\";\n-      case PHASE_END:                        return \"End\";\n-      case PHASE_FAILURE:                    return \"Failure\";\n-      case PHASE_DEBUG:                      return \"Debug\";\n-      default:\n-        ShouldNotReachHere();\n-        return NULL;\n+  static const char* to_name(CompilerPhaseType cpt) {\n+    return phase_names[cpt];\n+  }\n+  static const char* to_description(CompilerPhaseType cpt) {\n+    return phase_descriptions[cpt];\n+  }\n+  static int to_bitmask(CompilerPhaseType cpt) {\n+    return (1 << cpt);\n+  }\n+};\n+\n+static CompilerPhaseType find_phase(const char* str) {\n+  for (int i = 0; i < PHASE_NUM_TYPES; i++) {\n+    if (strcmp(phase_names[i], str) == 0) {\n+      return (CompilerPhaseType)i;\n+    }\n+  }\n+  return PHASE_NONE;\n+}\n+\n+class PhaseNameIter {\n+ private:\n+  char* _token;\n+  char* _saved_ptr;\n+  char* _list;\n+\n+ public:\n+  PhaseNameIter(ccstrlist option) {\n+    _list = (char*) canonicalize(option);\n+    _saved_ptr = _list;\n+    _token = strtok_r(_saved_ptr, \",\", &_saved_ptr);\n+  }\n+\n+  ~PhaseNameIter() {\n+    FREE_C_HEAP_ARRAY(char, _list);\n+  }\n+\n+  const char* operator*() const { return _token; }\n+\n+  PhaseNameIter& operator++() {\n+    _token = strtok_r(NULL, \",\", &_saved_ptr);\n+    return *this;\n+  }\n+\n+  ccstrlist canonicalize(ccstrlist option_value) {\n+    char* canonicalized_list = NEW_C_HEAP_ARRAY(char, strlen(option_value) + 1, mtCompiler);\n+    int i = 0;\n+    char current;\n+    while ((current = option_value[i]) != '\\0') {\n+      if (current == '\\n' || current == ' ') {\n+        canonicalized_list[i] = ',';\n+      } else {\n+        canonicalized_list[i] = current;\n+      }\n+      i++;\n@@ -127,0 +149,40 @@\n+    canonicalized_list[i] = '\\0';\n+    return canonicalized_list;\n+  }\n+};\n+\n+class PhaseNameValidator {\n+ private:\n+  bool _valid;\n+  char* _bad;\n+\n+ public:\n+  PhaseNameValidator(ccstrlist option, uint64_t& mask) : _valid(true), _bad(nullptr) {\n+    for (PhaseNameIter iter(option); *iter != NULL && _valid; ++iter) {\n+\n+      CompilerPhaseType cpt = find_phase(*iter);\n+      if (PHASE_NONE == cpt) {\n+        const size_t len = MIN2<size_t>(strlen(*iter), 63) + 1;  \/\/ cap len to a value we know is enough for all phase descriptions\n+        _bad = NEW_C_HEAP_ARRAY(char, len, mtCompiler);\n+        \/\/ strncpy always writes len characters. If the source string is shorter, the function fills the remaining bytes with NULLs.\n+        strncpy(_bad, *iter, len);\n+        _valid = false;\n+      } else {\n+        assert(cpt < 64, \"out of bounds\");\n+        mask |= CompilerPhaseTypeHelper::to_bitmask(cpt);\n+      }\n+    }\n+  }\n+\n+  ~PhaseNameValidator() {\n+    if (_bad != NULL) {\n+      FREE_C_HEAP_ARRAY(char, _bad);\n+    }\n+  }\n+\n+  bool is_valid() const {\n+    return _valid;\n+  }\n+\n+  const char* what() const {\n+    return _bad;\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":155,"deletions":93,"binary":false,"changes":248,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1468,0 +1468,6 @@\n+  \/\/ ret_pc will have been loaded from the stack, so for AArch64 will be signed.\n+  \/\/ This needs authenticating, but to do that here requires the fp of the previous frame.\n+  \/\/ A better way of doing it would be authenticate in the caller by adding a\n+  \/\/ AuthPAuthNode and using it in GraphKit::gen_stub. For now, just strip it.\n+  AARCH64_ONLY(ret_pc = pauth_strip_pointer(ret_pc));\n+\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -131,2 +131,2 @@\n-              assert(use->is_If() || use->is_CMove() || use->Opcode() == Op_Opaque1, \"unexpected node type\");\n-              Node *use_c = use->is_If() ? use->in(0) : get_ctrl(use);\n+              assert(use->is_If() || use->is_CMove() || use->Opcode() == Op_Opaque1 || use->is_AllocateArray(), \"unexpected node type\");\n+              Node *use_c = (use->is_If() || use->is_AllocateArray()) ? use->in(0) : get_ctrl(use);\n@@ -169,2 +169,3 @@\n-                assert(u->is_If() || u->is_CMove() || u->Opcode() == Op_Opaque1, \"unexpected node type\");\n-                assert(u->in(1) == bol, \"\");\n+                assert(u->is_If() || u->is_CMove() || u->Opcode() == Op_Opaque1 || u->is_AllocateArray(), \"unexpected node type\");\n+                assert(u->is_AllocateArray() || u->in(1) == bol, \"\");\n+                assert(!u->is_AllocateArray() || u->in(AllocateNode::ValidLengthTest) == bol, \"wrong input to AllocateArray\");\n@@ -172,1 +173,1 @@\n-                Node *u_ctrl = u->is_If() ? u->in(0) : get_ctrl(u);\n+                Node *u_ctrl = (u->is_If() || u->is_AllocateArray()) ? u->in(0) : get_ctrl(u);\n@@ -176,1 +177,1 @@\n-                _igvn.replace_input_of(u, 1, x);\n+                _igvn.replace_input_of(u, u->is_AllocateArray() ? AllocateNode::ValidLengthTest : 1, x);\n@@ -203,0 +204,18 @@\n+  if (n->Opcode() == Op_OpaqueLoopStride || n->Opcode() == Op_OpaqueLoopInit) {\n+    Unique_Node_List wq;\n+    wq.push(n);\n+    for (uint i = 0; i < wq.size(); i++) {\n+      Node* m = wq.at(i);\n+      if (m->is_If()) {\n+        assert(skeleton_predicate_has_opaque(m->as_If()), \"opaque node not reachable from if?\");\n+        Node* bol = clone_skeleton_predicate_bool(m, NULL, NULL, m->in(0));\n+        _igvn.replace_input_of(m, 1, bol);\n+      } else {\n+        assert(!m->is_CFG(), \"not CFG expected\");\n+        for (DUIterator_Fast jmax, j = m->fast_outs(jmax); j < jmax; j++) {\n+          Node* u = m->fast_out(j);\n+          wq.push(u);\n+        }\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/split_if.cpp","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-      C->print_method(PHASE_SCALARIZE_VBOX, vbox, 3);\n+      C->print_method(PHASE_SCALARIZE_VBOX, 3, vbox);\n@@ -134,1 +134,1 @@\n-      C->print_method(PHASE_EXPAND_VUNBOX, vec_unbox, 3);\n+      C->print_method(PHASE_EXPAND_VUNBOX, 3, vec_unbox);\n@@ -152,1 +152,1 @@\n-      C->print_method(PHASE_ELIMINATE_VBOX_ALLOC, vbox_alloc, 3);\n+      C->print_method(PHASE_ELIMINATE_VBOX_ALLOC, 3, vbox_alloc);\n@@ -300,1 +300,1 @@\n-    C->print_method(PHASE_EXPAND_VBOX, vec_box, 3);\n+    C->print_method(PHASE_EXPAND_VBOX, 3, vec_box);\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2373,1 +2373,2 @@\n-  assert(opr->get_con() == VectorSupport::VECTOR_OP_CAST ||\n+  assert(opr->get_con() == VectorSupport::VECTOR_OP_CAST  ||\n+         opr->get_con() == VectorSupport::VECTOR_OP_UCAST ||\n@@ -2375,1 +2376,2 @@\n-  bool is_cast = (opr->get_con() == VectorSupport::VECTOR_OP_CAST);\n+  bool is_cast = (opr->get_con() == VectorSupport::VECTOR_OP_CAST || opr->get_con() == VectorSupport::VECTOR_OP_UCAST);\n+  bool is_ucast = (opr->get_con() == VectorSupport::VECTOR_OP_UCAST);\n@@ -2460,1 +2462,1 @@\n-    int cast_vopc = VectorCastNode::opcode(new_elem_bt_from);\n+    int cast_vopc = VectorCastNode::opcode(new_elem_bt_from, !is_ucast);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1096,6 +1096,9 @@\n-    case Op_VectorCastB2X: return new VectorCastB2XNode(n1, vt);\n-    case Op_VectorCastS2X: return new VectorCastS2XNode(n1, vt);\n-    case Op_VectorCastI2X: return new VectorCastI2XNode(n1, vt);\n-    case Op_VectorCastL2X: return new VectorCastL2XNode(n1, vt);\n-    case Op_VectorCastF2X: return new VectorCastF2XNode(n1, vt);\n-    case Op_VectorCastD2X: return new VectorCastD2XNode(n1, vt);\n+    case Op_VectorCastB2X:  return new VectorCastB2XNode(n1, vt);\n+    case Op_VectorCastS2X:  return new VectorCastS2XNode(n1, vt);\n+    case Op_VectorCastI2X:  return new VectorCastI2XNode(n1, vt);\n+    case Op_VectorCastL2X:  return new VectorCastL2XNode(n1, vt);\n+    case Op_VectorCastF2X:  return new VectorCastF2XNode(n1, vt);\n+    case Op_VectorCastD2X:  return new VectorCastD2XNode(n1, vt);\n+    case Op_VectorUCastB2X: return new VectorUCastB2XNode(n1, vt);\n+    case Op_VectorUCastS2X: return new VectorUCastS2XNode(n1, vt);\n+    case Op_VectorUCastI2X: return new VectorUCastI2XNode(n1, vt);\n@@ -1108,1 +1111,2 @@\n-int VectorCastNode::opcode(BasicType bt) {\n+int VectorCastNode::opcode(BasicType bt, bool is_signed) {\n+  assert((is_integral_type(bt) && bt != T_LONG) || is_signed, \"\");\n@@ -1110,3 +1114,3 @@\n-    case T_BYTE:   return Op_VectorCastB2X;\n-    case T_SHORT:  return Op_VectorCastS2X;\n-    case T_INT:    return Op_VectorCastI2X;\n+    case T_BYTE:   return is_signed ? Op_VectorCastB2X : Op_VectorUCastB2X;\n+    case T_SHORT:  return is_signed ? Op_VectorCastS2X : Op_VectorUCastS2X;\n+    case T_INT:    return is_signed ? Op_VectorCastI2X : Op_VectorUCastI2X;\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1471,1 +1471,1 @@\n-  static int  opcode(BasicType bt);\n+  static int  opcode(BasicType bt, bool is_signed = true);\n@@ -1525,0 +1525,24 @@\n+class VectorUCastB2XNode : public VectorCastNode {\n+ public:\n+  VectorUCastB2XNode(Node* in, const TypeVect* vt) : VectorCastNode(in, vt) {\n+    assert(in->bottom_type()->is_vect()->element_basic_type() == T_BYTE, \"must be byte\");\n+  }\n+  virtual int Opcode() const;\n+};\n+\n+class VectorUCastS2XNode : public VectorCastNode {\n+ public:\n+  VectorUCastS2XNode(Node* in, const TypeVect* vt) : VectorCastNode(in, vt) {\n+    assert(in->bottom_type()->is_vect()->element_basic_type() == T_SHORT, \"must be short\");\n+  }\n+  virtual int Opcode() const;\n+};\n+\n+class VectorUCastI2XNode : public VectorCastNode {\n+ public:\n+  VectorUCastI2XNode(Node* in, const TypeVect* vt) : VectorCastNode(in, vt) {\n+    assert(in->bottom_type()->is_vect()->element_basic_type() == T_INT, \"must be int\");\n+  }\n+  virtual int Opcode() const;\n+};\n+\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jniFastGetField.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-#include \"classfile\/classLoader.hpp\"\n+#include \"classfile\/classLoader.inline.hpp\"\n@@ -3376,0 +3376,5 @@\n+JVM_LEAF(void*, JVM_LoadZipLibrary())\n+  ClassLoader::load_zip_library_if_needed();\n+  return ClassLoader::zip_library_handle();\n+JVM_END\n+\n@@ -3687,1 +3692,1 @@\n-      \/\/ Note: LambdaFormInvokers::append_filtered and LambdaFormInvokers::append take same format which is not\n+      \/\/ Note: LambdaFormInvokers::append take same format which is not\n@@ -3689,1 +3694,1 @@\n-      LambdaFormInvokers::append_filtered(os::strdup((const char*)c_line, mtInternal));\n+      LambdaFormInvokers::append(os::strdup((const char*)c_line, mtInternal));\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -290,0 +290,25 @@\n+\/\/ Write MethodParameters attribute\n+\/\/ JVMSpec|   MethodParameters_attribute {\n+\/\/ JVMSpec|     u2 attribute_name_index;\n+\/\/ JVMSpec|     u4 attribute_length;\n+\/\/ JVMSpec|     u1 parameters_count;\n+\/\/ JVMSpec|     {   u2 name_index;\n+\/\/ JVMSpec|         u2 access_flags;\n+\/\/ JVMSpec|     } parameters[parameters_count];\n+\/\/ JVMSpec|   }\n+void JvmtiClassFileReconstituter::write_method_parameter_attribute(const ConstMethod* const_method) {\n+  const MethodParametersElement *parameters = const_method->method_parameters_start();\n+  int length = const_method->method_parameters_length();\n+  assert(length <= max_jubyte, \"must fit u1\");\n+  int size = 1                  \/\/ parameters_count\n+           + (2 + 2) * length;  \/\/ parameters\n+\n+  write_attribute_name_index(\"MethodParameters\");\n+  write_u4(size);\n+  write_u1(length);\n+  for (int index = 0; index < length; index++) {\n+    write_u2(parameters[index].name_cp_index);\n+    write_u2(parameters[index].flags);\n+  }\n+}\n+\n@@ -692,0 +717,3 @@\n+  if (const_method->has_method_parameters()) {\n+    ++attr_count;     \/\/ has MethodParameters attribute\n+  }\n@@ -719,0 +747,3 @@\n+  if (const_method->has_method_parameters()) {\n+    write_method_parameter_attribute(const_method);\n+  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.cpp","additions":32,"deletions":1,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,0 +104,1 @@\n+  void write_method_parameter_attribute(const ConstMethod* const_method);\n","filename":"src\/hotspot\/share\/prims\/jvmtiClassFileReconstituter.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiExtensions.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiManageCapabilities.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2269,15 +2269,0 @@\n-\n-  \/\/ We also need to rewrite the parameter name indexes, if there is\n-  \/\/ method parameter data present\n-  if(method->has_method_parameters()) {\n-    const int len = method->method_parameters_length();\n-    MethodParametersElement* elem = method->method_parameters_start();\n-\n-    for (int i = 0; i < len; i++) {\n-      const u2 cp_index = elem[i].name_cp_index;\n-      const u2 new_cp_index = find_new_index(cp_index);\n-      if (new_cp_index != 0) {\n-        elem[i].name_cp_index = new_cp_index;\n-      }\n-    }\n-  }\n@@ -3697,0 +3682,13 @@\n+    \/\/ Update constant pool indices in the method's method_parameters.\n+    int mp_length = method->method_parameters_length();\n+    if (mp_length > 0) {\n+      MethodParametersElement* elem = method->method_parameters_start();\n+      for (int j = 0; j < mp_length; j++) {\n+        const int cp_index = elem[j].name_cp_index;\n+        const int new_cp_index = find_new_index(cp_index);\n+        if (new_cp_index != 0) {\n+          elem[j].name_cp_index = (u2)new_cp_index;\n+        }\n+      }\n+    }\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/prims\/resolvedMethodTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -79,1 +79,2 @@\n-    VECTOR_OP_REINTERPRET = 18,\n+    VECTOR_OP_UCAST       = 18,\n+    VECTOR_OP_REINTERPRET = 19,\n@@ -82,4 +83,4 @@\n-    VECTOR_OP_MASK_TRUECOUNT = 19,\n-    VECTOR_OP_MASK_FIRSTTRUE = 20,\n-    VECTOR_OP_MASK_LASTTRUE  = 21,\n-    VECTOR_OP_MASK_TOLONG    = 22,\n+    VECTOR_OP_MASK_TRUECOUNT = 20,\n+    VECTOR_OP_MASK_FIRSTTRUE = 21,\n+    VECTOR_OP_MASK_LASTTRUE  = 22,\n+    VECTOR_OP_MASK_TOLONG    = 23,\n@@ -88,2 +89,2 @@\n-    VECTOR_OP_LROTATE = 23,\n-    VECTOR_OP_RROTATE = 24,\n+    VECTOR_OP_LROTATE = 24,\n+    VECTOR_OP_RROTATE = 25,\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,0 +90,1 @@\n+#include \"services\/mallocSiteTable.hpp\"\n@@ -91,0 +92,1 @@\n+#include \"services\/memTracker.hpp\"\n@@ -96,0 +98,1 @@\n+#include \"utilities\/nativeCallStack.hpp\"\n@@ -108,5 +111,0 @@\n-#if INCLUDE_NMT\n-#include \"services\/mallocSiteTable.hpp\"\n-#include \"services\/memTracker.hpp\"\n-#include \"utilities\/nativeCallStack.hpp\"\n-#endif \/\/ INCLUDE_NMT\n@@ -649,1 +647,0 @@\n-#if INCLUDE_NMT\n@@ -727,1 +724,0 @@\n-#endif \/\/ INCLUDE_NMT\n@@ -2071,0 +2067,8 @@\n+WB_ENTRY(jboolean, WB_IsDTraceIncluded(JNIEnv* env))\n+#if defined(DTRACE_ENABLED)\n+  return true;\n+#else\n+  return false;\n+#endif \/\/ DTRACE_ENABLED\n+WB_END\n+\n@@ -2548,1 +2552,0 @@\n-#if INCLUDE_NMT\n@@ -2562,1 +2565,0 @@\n-#endif \/\/ INCLUDE_NMT\n@@ -2718,0 +2720,1 @@\n+  {CC\"isDTraceIncluded\",                  CC\"()Z\",    (void*)&WB_IsDTraceIncluded },\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"  \/\/ For declaration of class AllStatic\n+#include \"memory\/allStatic.hpp\"  \/\/ For declaration of class AllStatic\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -540,0 +540,1 @@\n+  { \"ExtendedDTraceProbes\",         JDK_Version::jdk(19), JDK_Version::jdk(20), JDK_Version::jdk(21) },\n@@ -550,0 +551,1 @@\n+  { \"PrefetchFieldsAhead\",          JDK_Version::undefined(), JDK_Version::jdk(19), JDK_Version::jdk(20) },\n@@ -2018,1 +2020,3 @@\n-    warning(\"UseHeavyMonitors is not fully implemented on this architecture\");\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"UseHeavyMonitors is not fully implemented on this architecture\");\n+    return false;\n@@ -2023,1 +2027,4 @@\n-    fatal(\"-XX:+UseHeavyMonitors and -XX:+UseRTMForStackLocks are mutually exclusive\");\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"-XX:+UseHeavyMonitors and -XX:+UseRTMForStackLocks are mutually exclusive\");\n+\n+    return false;\n@@ -2027,1 +2034,3 @@\n-    fatal(\"-XX:+VerifyHeavyMonitors requires -XX:+UseHeavyMonitors\");\n+    jio_fprintf(defaultStream::error_stream(),\n+                \"-XX:+VerifyHeavyMonitors requires -XX:+UseHeavyMonitors\");\n+    return false;\n@@ -2882,0 +2891,2 @@\n+      warning(\"Option ExtendedDTraceProbes was deprecated in version 19 and will likely be removed in a future release.\");\n+      warning(\"Use the combination of -XX:+DTraceMethodProbes, -XX:+DTraceAllocProbes and -XX:+DTraceMonitorProbes instead.\");\n@@ -2898,0 +2909,12 @@\n+    } else if (match_option(option, \"-XX:+DTraceMethodProbes\")) {\n+      jio_fprintf(defaultStream::error_stream(),\n+                  \"DTraceMethodProbes flag is not applicable for this configuration\\n\");\n+      return JNI_EINVAL;\n+    } else if (match_option(option, \"-XX:+DTraceAllocProbes\")) {\n+      jio_fprintf(defaultStream::error_stream(),\n+                  \"DTraceAllocProbes flag is not applicable for this configuration\\n\");\n+      return JNI_EINVAL;\n+    } else if (match_option(option, \"-XX:+DTraceMonitorProbes\")) {\n+      jio_fprintf(defaultStream::error_stream(),\n+                  \"DTraceMonitorProbes flag is not applicable for this configuration\\n\");\n+      return JNI_EINVAL;\n@@ -3326,1 +3349,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3332,1 +3355,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3343,1 +3366,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3350,2 +3373,2 @@\n-  ssize_t bytes_read = os::read(fd, (void *)buf, (unsigned)bytes_alloc);\n-  os::close(fd);\n+  ssize_t bytes_read = ::read(fd, (void *)buf, (unsigned)bytes_alloc);\n+  ::close(fd);\n@@ -3572,0 +3595,4 @@\n+            if (AutoCreateSharedArchive) {\n+              warning(\"-XX:+AutoCreateSharedArchive is unsupported when base CDS archive is not loaded. Run with -Xlog:cds for more info.\");\n+              AutoCreateSharedArchive = false;\n+            }\n@@ -4015,1 +4042,0 @@\n-#if INCLUDE_NMT\n@@ -4027,7 +4053,0 @@\n-#else\n-  if (!FLAG_IS_DEFAULT(NativeMemoryTracking) || PrintNMTStatistics) {\n-    warning(\"Native Memory Tracking is not supported in this VM\");\n-    FLAG_SET_DEFAULT(NativeMemoryTracking, \"off\");\n-    FLAG_SET_DEFAULT(PrintNMTStatistics, false);\n-  }\n-#endif \/\/ INCLUDE_NMT\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":35,"deletions":16,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n@@ -473,1 +473,0 @@\n-  static int num_archives(const char* archive_path) NOT_CDS_RETURN_(0);\n@@ -479,0 +478,1 @@\n+  static int num_archives(const char* archive_path) NOT_CDS_RETURN_(0);\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -707,0 +707,15 @@\n+#ifndef PRODUCT\n+static bool falls_through(Bytecodes::Code bc) {\n+  switch (bc) {\n+    \/\/ List may be incomplete.  Here we really only care about bytecodes where compiled code\n+    \/\/ can deoptimize.\n+    case Bytecodes::_goto:\n+    case Bytecodes::_goto_w:\n+    case Bytecodes::_athrow:\n+      return false;\n+    default:\n+      return true;\n+  }\n+}\n+#endif\n+\n@@ -804,1 +819,1 @@\n-          if (!Bytecodes::is_invoke(cur_code) && cur_code != Bytecodes::_athrow) {\n+          if (!Bytecodes::is_invoke(cur_code) && falls_through(cur_code)) {\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -231,0 +231,9 @@\n+  if ((uintx)CodeEntryAlignment > CodeCacheSegmentSize) {\n+    JVMFlag::printError(verbose,\n+                        \"CodeEntryAlignment (\" INTX_FORMAT \") must be \"\n+                        \"less than or equal to CodeCacheSegmentSize (\" UINTX_FORMAT \") \"\n+                        \"to align entry points\\n\",\n+                        CodeEntryAlignment, CodeCacheSegmentSize);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+\n@@ -253,0 +262,8 @@\n+  if (OptoLoopAlignment > CodeEntryAlignment) {\n+    JVMFlag::printError(verbose,\n+                        \"OptoLoopAlignment (\" INTX_FORMAT \") must be \"\n+                        \"less or equal to CodeEntryAlignment (\" INTX_FORMAT \")\\n\",\n+                        value, CodeEntryAlignment);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1113,0 +1113,5 @@\n+#ifdef AARCH64\n+  if (!pauth_ptr_is_raw(x)) {\n+    return false;\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/frame.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1194,4 +1194,0 @@\n-  notproduct(bool, VerifyJNIEnvThread, false,                               \\\n-          \"Verify JNIEnv.thread == Thread::current() when entering VM \"     \\\n-          \"from JNI\")                                                       \\\n-                                                                            \\\n@@ -1535,1 +1531,1 @@\n-  develop_pd(intx, CodeEntryAlignment,                                      \\\n+  product_pd(intx, CodeEntryAlignment, EXPERIMENTAL,                        \\\n@@ -1541,1 +1537,1 @@\n-          range(1, 16)                                                      \\\n+          range(1, 128)                                                     \\\n@@ -1865,1 +1861,3 @@\n-          \"Enable performance-impacting dtrace probes\")                     \\\n+          \"(Deprecated) Enable performance-impacting dtrace probes. \"       \\\n+          \"Use the combination of -XX:+DTraceMethodProbes, \"                \\\n+          \"-XX:+DTraceAllocProbes and -XX:+DTraceMonitorProbes instead.\")   \\\n@@ -1868,1 +1866,1 @@\n-          \"Enable dtrace probes for method-entry and method-exit\")          \\\n+          \"Enable dtrace tool probes for method-entry and method-exit\")     \\\n@@ -1871,1 +1869,1 @@\n-          \"Enable dtrace probes for object allocation\")                     \\\n+          \"Enable dtrace tool probes for object allocation\")                \\\n@@ -1874,1 +1872,1 @@\n-          \"Enable dtrace probes for monitor events\")                        \\\n+          \"Enable dtrace tool probes for monitor events\")                   \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/handshake.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/icache.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-int InterfaceSupport::_fullgc_alot_invocation = 0;\n+intx InterfaceSupport::_fullgc_alot_invocation = 0;\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  static int _fullgc_alot_invocation;\n+  static intx _fullgc_alot_invocation;\n@@ -343,0 +343,5 @@\n+\/\/\n+\/\/ As the JNIEnv can be passed from external native code we validate\n+\/\/ it in debug builds, primarily for our own testing. In general JNI\n+\/\/ does not attempt to detect programming errors and a bad JNIEnv may\n+\/\/ not even be readable.\n@@ -352,1 +357,1 @@\n-    assert( !VerifyJNIEnvThread || (thread == Thread::current()), \"JNIEnv is only valid in same thread\"); \\\n+    assert(thread == Thread::current(), \"JNIEnv is only valid in same thread\"); \\\n@@ -363,1 +368,1 @@\n-    assert( !VerifyJNIEnvThread || (thread == Thread::current()), \"JNIEnv is only valid in same thread\"); \\\n+    assert(thread == Thread::current(), \"JNIEnv is only valid in same thread\"); \\\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -383,1 +383,1 @@\n-  \/\/ stack_shadow_pages_available() and bang_stack_shadow_pages() use the same sp.\n+  \/\/ stack_shadow_pages_available() and map_stack_shadow_pages() use the same sp.\n","filename":"src\/hotspot\/share\/runtime\/javaCalls.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -387,4 +387,9 @@\n-  }\n-  if (block != NULL) {\n-    Atomic::dec(&_blocks_allocated);\n-    delete block;\n+  } else {\n+    DEBUG_ONLY(block->set_pop_frame_link(NULL));\n+    while (block != NULL) {\n+      JNIHandleBlock* next = block->_next;\n+      Atomic::dec(&_blocks_allocated);\n+      assert(block->pop_frame_link() == NULL, \"pop_frame_link should be NULL\");\n+      delete block;\n+      block = next;\n+    }\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/jniHandles.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,3 @@\n-Mutex*   ExpandHeap_lock              = NULL;\n+#ifdef INCLUDE_PARALLELGC\n+Mutex*   PSOldGenExpand_lock      = NULL;\n+#endif\n@@ -140,1 +142,0 @@\n-#if INCLUDE_NMT\n@@ -142,1 +143,1 @@\n-#endif\n+\n@@ -323,1 +324,0 @@\n-#if INCLUDE_NMT\n@@ -325,1 +325,0 @@\n-#endif\n@@ -364,1 +363,5 @@\n-  defl(ExpandHeap_lock             , PaddedMutex ,  Heap_lock, true);\n+#ifdef INCLUDE_PARALLELGC\n+  if (UseParallelGC) {\n+    defl(PSOldGenExpand_lock   , PaddedMutex , Heap_lock, true);\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,3 @@\n-extern Mutex*   ExpandHeap_lock;                 \/\/ a lock on expanding the heap\n+#ifdef INCLUDE_PARALLELGC\n+extern Mutex*   PSOldGenExpand_lock;         \/\/ a lock on expanding the heap\n+#endif\n@@ -117,1 +119,0 @@\n-#if INCLUDE_NMT\n@@ -119,1 +120,0 @@\n-#endif\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -236,13 +236,0 @@\n-void* ObjectMonitor::operator new (size_t size) throw() {\n-  return AllocateHeap(size, mtInternal);\n-}\n-void* ObjectMonitor::operator new[] (size_t size) throw() {\n-  return operator new (size);\n-}\n-void ObjectMonitor::operator delete(void* p) {\n-  FreeHeap(p);\n-}\n-void ObjectMonitor::operator delete[] (void *p) {\n-  operator delete(p);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,1 +130,1 @@\n-class ObjectMonitor : public CHeapObj<mtInternal> {\n+class ObjectMonitor : public CHeapObj<mtObjectMonitor> {\n@@ -206,5 +206,0 @@\n-  void* operator new (size_t size) throw();\n-  void* operator new[] (size_t size) throw();\n-  void operator delete(void* p);\n-  void operator delete[] (void* p);\n-\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/orderAccess.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -634,6 +634,4 @@\n-#if INCLUDE_NMT\n-  {\n-    void* rc = NULL;\n-    if (NMTPreInit::handle_malloc(&rc, size)) {\n-      return rc;\n-    }\n+  \/\/ Special handling for NMT preinit phase before arguments are parsed\n+  void* rc = NULL;\n+  if (NMTPreInit::handle_malloc(&rc, size)) {\n+    return rc;\n@@ -641,1 +639,0 @@\n-#endif\n@@ -680,6 +677,4 @@\n-#if INCLUDE_NMT\n-  {\n-    void* rc = NULL;\n-    if (NMTPreInit::handle_realloc(&rc, memblock, size)) {\n-      return rc;\n-    }\n+  \/\/ Special handling for NMT preinit phase before arguments are parsed\n+  void* rc = NULL;\n+  if (NMTPreInit::handle_realloc(&rc, memblock, size)) {\n+    return rc;\n@@ -687,1 +682,0 @@\n-#endif\n@@ -726,1 +720,1 @@\n-#if INCLUDE_NMT\n+  \/\/ Special handling for NMT preinit phase before arguments are parsed\n@@ -730,1 +724,0 @@\n-#endif\n@@ -1297,4 +1290,0 @@\n-ssize_t os::read(int fd, void *buf, unsigned int nBytes) {\n-  return ::read(fd, buf, nBytes);\n-}\n-\n@@ -1398,1 +1387,1 @@\n-  \/\/ Check if we have StackShadowPages above the yellow zone.  This parameter\n+  \/\/ Check if we have StackShadowPages above the guard zone. This parameter\n@@ -1406,3 +1395,1 @@\n-  address limit = JavaThread::cast(thread)->stack_end() +\n-                  (StackOverflow::stack_guard_zone_size() + StackOverflow::stack_shadow_zone_size());\n-\n+  address limit = JavaThread::cast(thread)->stack_overflow_state()->shadow_zone_safe_limit();\n@@ -1759,0 +1746,8 @@\n+\/\/ Pretouching must use a store, not just a load.  On many OSes loads from\n+\/\/ fresh memory would be satisfied from a single mapped page containing all\n+\/\/ zeros.  We need to store something to each page to get them backed by\n+\/\/ their own memory, which is the effect we want here.  An atomic add of\n+\/\/ zero is used instead of a simple store, allowing the memory to be used\n+\/\/ while pretouch is in progress, rather than requiring users of the memory\n+\/\/ to wait until the entire range has been touched.  This is technically\n+\/\/ a UB data race, but doesn't cause any problems for us.\n@@ -1760,6 +1755,16 @@\n-  for (volatile char *p = (char*)start; p < (char*)end; p += page_size) {\n-    \/\/ Note: this must be a store, not a load. On many OSes loads from fresh\n-    \/\/ memory would be satisfied from a single mapped page containing all zeros.\n-    \/\/ We need to store something to each page to get them backed by their own\n-    \/\/ memory, which is the effect we want here.\n-    *p = 0;\n+  assert(start <= end, \"invalid range: \" PTR_FORMAT \" -> \" PTR_FORMAT, p2i(start), p2i(end));\n+  assert(is_power_of_2(page_size), \"page size misaligned: %zu\", page_size);\n+  assert(page_size >= sizeof(int), \"page size too small: %zu\", page_size);\n+  if (start < end) {\n+    \/\/ We're doing concurrent-safe touch and memory state has page\n+    \/\/ granularity, so we can touch anywhere in a page.  Touch at the\n+    \/\/ beginning of each page to simplify iteration.\n+    char* cur = static_cast<char*>(align_down(start, page_size));\n+    void* last = align_down(static_cast<char*>(end) - 1, page_size);\n+    assert(cur <= last, \"invariant\");\n+    \/\/ Iterate from first page through last (inclusive), being careful to\n+    \/\/ avoid overflow if the last page abuts the end of the address range.\n+    for ( ; true; cur += page_size) {\n+      Atomic::add(reinterpret_cast<int*>(cur), 0, memory_order_relaxed);\n+      if (cur >= last) break;\n+    }\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":36,"deletions":31,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -368,4 +368,3 @@\n-  \/\/ Touch memory pages that cover the memory range from start to end (exclusive)\n-  \/\/ to make the OS back the memory range with actual memory.\n-  \/\/ Current implementation may not touch the last page if unaligned addresses\n-  \/\/ are passed.\n+  \/\/ Touch memory pages that cover the memory range from start to end\n+  \/\/ (exclusive) to make the OS back the memory range with actual memory.\n+  \/\/ Other threads may use the memory range concurrently with pretouch.\n@@ -546,1 +545,0 @@\n-  static int close(int fd);\n@@ -566,1 +564,0 @@\n-  static ssize_t read(int fd, void *buf, unsigned int nBytes);\n@@ -788,1 +785,0 @@\n-  static int socket(int domain, int type, int protocol);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/prefetch.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/reflectionUtils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/safepoint.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1950,0 +1950,2 @@\n+  AARCH64_ONLY(assert(pauth_ptr_is_raw(caller_pc), \"should be raw\"));\n+\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,4 +42,5 @@\n-  \/\/ We need to adapt the configured number of stack protection pages given\n-  \/\/ in 4K pages to the actual os page size. We must do this before setting\n-  \/\/ up minimal stack sizes etc. in os::init_2().\n-  size_t alignment = 4*K;\n+  \/\/ We need to adapt the configured number of stack protection pages to the\n+  \/\/ actual OS page size. We must do this before setting up minimal stack\n+  \/\/ sizes etc. in os::init_2(). The option values are given in 4K units,\n+  \/\/ matching the smallest page size in supported platforms.\n+  size_t unit = 4*K;\n@@ -48,1 +49,1 @@\n-  _stack_red_zone_size = align_up(StackRedPages * alignment, page_size);\n+  _stack_red_zone_size = align_up(StackRedPages * unit, page_size);\n@@ -51,1 +52,1 @@\n-  _stack_yellow_zone_size = align_up(StackYellowPages * alignment, page_size);\n+  _stack_yellow_zone_size = align_up(StackYellowPages * unit, page_size);\n@@ -54,1 +55,1 @@\n-  _stack_reserved_zone_size = align_up(StackReservedPages * alignment, page_size);\n+  _stack_reserved_zone_size = align_up(StackReservedPages * unit, page_size);\n@@ -66,1 +67,1 @@\n-  _stack_shadow_zone_size = align_up(StackShadowPages * alignment, page_size);\n+  _stack_shadow_zone_size = align_up(StackShadowPages * unit, page_size);\n","filename":"src\/hotspot\/share\/runtime\/stackOverflow.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,2 @@\n+    _shadow_zone_safe_limit(nullptr),\n+    _shadow_zone_growth_watermark(nullptr),\n@@ -61,0 +63,1 @@\n+    set_shadow_zone_limits();\n@@ -71,0 +74,2 @@\n+  address          _shadow_zone_safe_limit;\n+  address          _shadow_zone_growth_watermark;\n@@ -80,0 +85,3 @@\n+  \/\/ --------------------------------------------------------------------------------\n+  \/\/\n+  \/\/ The Java thread stack is structured as follows:\n@@ -98,5 +106,18 @@\n-  \/\/  --  <-- stack_reserved_zone_base()    ---      ---\n-  \/\/                                                 \/|\\  shadow     <--  stack_overflow_limit() (somewhere in here)\n-  \/\/                                                  |   zone\n-  \/\/                                                 \\|\/  size\n-  \/\/  some untouched memory                          ---\n+  \/\/  --  <-- stack_reserved_zone_base()    ---   ---\n+  \/\/                                               ^\n+  \/\/                                               |    <--  stack_overflow_limit() [somewhere in here]\n+  \/\/                                               |  shadow\n+  \/\/                                               |   zone\n+  \/\/                                               |   size\n+  \/\/                                               v\n+  \/\/                                              ---   <--  shadow_zone_safe_limit()\n+  \/\/ (Here and below: not yet touched stack)\n+  \/\/\n+  \/\/\n+  \/\/ (Here and below: touched at least once)      ---\n+  \/\/                                               ^\n+  \/\/                                               |  shadow\n+  \/\/                                               |   zone\n+  \/\/                                               |   size\n+  \/\/                                               v\n+  \/\/                                              ---   <--  shadow_zone_growth_watermark()\n@@ -123,0 +144,78 @@\n+  \/\/\n+  \/\/ The stack overflow mechanism detects overflows by touching (\"banging\") the stack\n+  \/\/ ahead of current stack pointer (SP). The entirety of guard zone is memory protected,\n+  \/\/ therefore such access would trap when touching the guard zone, and one of the following\n+  \/\/ things would happen.\n+  \/\/\n+  \/\/ Access in the red zone: unrecoverable stack overflow. Crash the VM, generate a report,\n+  \/\/ crash dump, and other diagnostics.\n+  \/\/\n+  \/\/ Access in the yellow zone: recoverable, reportable stack overflow. Create and throw\n+  \/\/ a StackOverflowError, remove the protection of yellow zone temporarily to let exception\n+  \/\/ handlers run. If exception handlers themselves run out of stack, they will crash VM due\n+  \/\/ to access to red zone.\n+  \/\/\n+  \/\/ Access in the reserved zone: recoverable, reportable, transparent for privileged methods\n+  \/\/ stack overflow. Perform a stack walk to check if there's a method annotated with\n+  \/\/ @ReservedStackAccess on the call stack. If such method is found, remove the protection of\n+  \/\/ reserved zone temporarily, and let the method run. If not, handle the access like a yellow\n+  \/\/ zone trap.\n+  \/\/\n+  \/\/ The banging itself happens within the \"shadow zone\" that extends from the current SP.\n+  \/\/\n+  \/\/ The goals for properly implemented shadow zone banging are:\n+  \/\/\n+  \/\/  a) Allow native\/VM methods to run without stack overflow checks within some reasonable\n+  \/\/     headroom. Default shadow zone size should accommodate the largest normally expected\n+  \/\/     native\/VM stack use.\n+  \/\/  b) Guarantee the stack overflow checks work even if SP is dangerously close to guard zone.\n+  \/\/     If SP is very low, banging at the edge of shadow zone (SP+shadow-zone-size) can slip\n+  \/\/     into adjacent thread stack, or even into other readable memory. This would potentially\n+  \/\/     pass the check by accident.\n+  \/\/  c) Allow for incremental stack growth on some OSes. This is enabled by handling traps\n+  \/\/     from not yet committed thread stacks, even outside the guard zone. The banging should\n+  \/\/     not allow uncommitted \"gaps\" on thread stack. See for example the uses of\n+  \/\/     os::map_stack_shadow_pages().\n+  \/\/  d) Make sure the stack overflow trap happens in the code that is known to runtime, so\n+  \/\/     the traps can be reasonably handled: handling a spurious trap from executing Java code\n+  \/\/     is hard, while properly handling the trap from VM\/native code is nearly impossible.\n+  \/\/\n+  \/\/ The simplest code that satisfies all these requirements is banging the shadow zone\n+  \/\/ page by page at every Java\/native method entry.\n+  \/\/\n+  \/\/ While that code is sufficient, it comes with the large performance cost. This performance\n+  \/\/ cost can be reduced by several *optional* techniques:\n+  \/\/\n+  \/\/ 1. Guarantee that stack would not take another page. If so, the current bang was\n+  \/\/ enough to verify we are not near the guard zone. This kind of insight is usually only\n+  \/\/ available for compilers that can know the size of the frame exactly.\n+  \/\/\n+  \/\/ Examples: PhaseOutput::need_stack_bang.\n+  \/\/\n+  \/\/ 2. Check the current SP in relation to shadow zone safe limit.\n+  \/\/\n+  \/\/ Define \"safe limit\" as the highest SP where banging would not touch the guard zone.\n+  \/\/ Then, do the page-by-page bang only if current SP is above that safe limit, OR some\n+  \/\/ OS-es need it to get the stack mapped.\n+  \/\/\n+  \/\/ Examples: AbstractAssembler::generate_stack_overflow_check, JavaCalls::call_helper,\n+  \/\/ os::stack_shadow_pages_available, os::map_stack_shadow_pages and their uses.\n+  \/\/\n+  \/\/ 3. Check the current SP in relation to the shadow zone growth watermark.\n+  \/\/\n+  \/\/ Define \"shadow zone growth watermark\" as the highest SP where we banged already.\n+  \/\/ Invariant: growth watermark is always above the safe limit, which allows testing\n+  \/\/ for watermark and safe limit at the same time in the most frequent case.\n+  \/\/\n+  \/\/ Easy and overwhelmingly frequent case: SP is above the growth watermark, and\n+  \/\/ by extension above the safe limit. In this case, we know that the guard zone is far away\n+  \/\/ (safe limit), and that the stack was banged before for stack growth (growth watermark).\n+  \/\/ Therefore, we can skip the banging altogether.\n+  \/\/\n+  \/\/ Harder cases: SP is below the growth watermark. In might be due to two things:\n+  \/\/ we have not banged the stack for growth (below growth watermark only), or we are\n+  \/\/ close to guard zone (also below safe limit). Do the full banging. Once done, we\n+  \/\/ can adjust the growth watermark, thus recording the bang for stack growth had\n+  \/\/ happened.\n+  \/\/\n+  \/\/ Examples: TemplateInterpreterGenerator::bang_stack_shadow_pages on x86 and others.\n@@ -192,0 +291,5 @@\n+  address shadow_zone_safe_limit() const {\n+    assert(_shadow_zone_safe_limit != nullptr, \"Don't call this before the field is initialized.\");\n+    return _shadow_zone_safe_limit;\n+  }\n+\n@@ -245,0 +349,7 @@\n+\n+  void set_shadow_zone_limits() {\n+    _shadow_zone_safe_limit =\n+      stack_end() + stack_guard_zone_size() + stack_shadow_zone_size();\n+    _shadow_zone_growth_watermark =\n+      stack_base();\n+  }\n","filename":"src\/hotspot\/share\/runtime\/stackOverflow.hpp","additions":117,"deletions":6,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/stackWatermark.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  _masm = new MacroAssembler(code );\n+  _masm = new MacroAssembler(code);\n","filename":"src\/hotspot\/share\/runtime\/stubCodeGenerator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  int traversal;\n+  int64_t traversal;\n@@ -60,1 +60,1 @@\n-  long traversal_mark;\n+  int64_t traversal_mark;\n@@ -68,2 +68,2 @@\n-      tty->print_cr(\"traversal = %d compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n-                    PTR_FORMAT \" state = %d traversal_mark %ld line = %d\",\n+      tty->print_cr(\"traversal = \" INT64_FORMAT \" compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n+                    PTR_FORMAT \" state = %d traversal_mark \" INT64_FORMAT \" line = %d\",\n@@ -110,2 +110,2 @@\n-long     NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n-long     NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n+int64_t  NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n+int64_t  NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n@@ -122,2 +122,2 @@\n-long   NMethodSweeper::_total_nof_methods_reclaimed     = 0;   \/\/ Accumulated nof methods flushed\n-long   NMethodSweeper::_total_nof_c2_methods_reclaimed  = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_methods_reclaimed    = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_c2_methods_reclaimed = 0;   \/\/ Accumulated nof methods flushed\n@@ -190,1 +190,1 @@\n-    tty->print_cr(\"### Sweep: stack traversal %ld\", _traversals);\n+    tty->print_cr(\"### Sweep: stack traversal \" INT64_FORMAT, _traversals);\n@@ -220,1 +220,1 @@\n-      const long wait_time = 60*60*24 * 1000;\n+      const int64_t wait_time = 60*60*24 * 1000;\n@@ -649,1 +649,1 @@\n-    xtty->begin_elem(\"sweeper state='%s' traversals='\" INTX_FORMAT \"' \", msg, (intx)traversal_count());\n+    xtty->begin_elem(\"sweeper state='%s' traversals='\" INT64_FORMAT \"' \", msg, traversal_count());\n@@ -667,2 +667,3 @@\n-  out->print_cr(\"  Total number of full sweeps:     %ld\", _total_nof_code_cache_sweeps);\n-  out->print_cr(\"  Total number of flushed methods: %ld (thereof %ld C2 methods)\", _total_nof_methods_reclaimed,\n+  out->print_cr(\"  Total number of full sweeps:     \" INT64_FORMAT, _total_nof_code_cache_sweeps);\n+  out->print_cr(\"  Total number of flushed methods: \" INT64_FORMAT \" (thereof \" INT64_FORMAT \" C2 methods)\",\n+                                                    _total_nof_methods_reclaimed,\n","filename":"src\/hotspot\/share\/runtime\/sweeper.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-  static long      _traversals;                   \/\/ Stack scan count, also sweep ID.\n-  static long      _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n+  static int64_t   _traversals;                   \/\/ Stack scan count, also sweep ID.\n+  static int64_t   _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n@@ -81,2 +81,2 @@\n-  static long      _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n-  static long      _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n+  static int64_t   _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n+  static int64_t   _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n@@ -100,1 +100,1 @@\n-  static long traversal_count()                    { return _traversals; }\n+  static int64_t traversal_count()                 { return _traversals; }\n@@ -103,1 +103,1 @@\n-  static int  total_nof_methods_reclaimed()        { return _total_nof_methods_reclaimed; }\n+  static int64_t total_nof_methods_reclaimed()     { return _total_nof_methods_reclaimed; }\n","filename":"src\/hotspot\/share\/runtime\/sweeper.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -320,1 +320,0 @@\n-#if INCLUDE_NMT\n@@ -328,1 +327,0 @@\n-#endif \/\/ INCLUDE_NMT\n@@ -2707,1 +2705,0 @@\n-#if INCLUDE_NMT\n@@ -2710,1 +2707,0 @@\n-#endif \/\/ INCLUDE_NMT\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -553,2 +553,2 @@\n-  void    register_thread_stack_with_NMT() NOT_NMT_RETURN;\n-  void    unregister_thread_stack_with_NMT() NOT_NMT_RETURN;\n+  void    register_thread_stack_with_NMT();\n+  void    unregister_thread_stack_with_NMT();\n@@ -1302,0 +1302,6 @@\n+  static ByteSize shadow_zone_safe_limit()  {\n+    return byte_offset_of(JavaThread, _stack_overflow_state._shadow_zone_safe_limit);\n+  }\n+  static ByteSize shadow_zone_growth_watermark()  {\n+    return byte_offset_of(JavaThread, _stack_overflow_state._shadow_zone_growth_watermark);\n+  }\n@@ -1315,0 +1321,3 @@\n+  \/\/ Returns the current thread as indicated by the given JNIEnv.\n+  \/\/ We don't assert it is Thread::current here as that is done at the\n+  \/\/ external JNI entry points where the JNIEnv is passed into the VM.\n@@ -1316,8 +1325,9 @@\n-    JavaThread *thread_from_jni_env = (JavaThread*)((intptr_t)env - in_bytes(jni_environment_offset()));\n-    \/\/ Only return NULL if thread is off the thread list; starting to\n-    \/\/ exit should not return NULL.\n-    if (thread_from_jni_env->is_terminated()) {\n-      thread_from_jni_env->block_if_vm_exited();\n-      return NULL;\n-    } else {\n-      return thread_from_jni_env;\n+    JavaThread* current = (JavaThread*)((intptr_t)env - in_bytes(jni_environment_offset()));\n+    \/\/ We can't get here in a thread that has completed its execution and so\n+    \/\/ \"is_terminated\", but a thread is also considered terminated if the VM\n+    \/\/ has exited, so we have to check this and block in case this is a daemon\n+    \/\/ thread returning to the VM (the JNI DirectBuffer entry points rely on\n+    \/\/ this).\n+    if (current->is_terminated()) {\n+      current->block_if_vm_exited();\n+      ShouldNotReachHere();\n@@ -1325,0 +1335,1 @@\n+    return current;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":22,"deletions":11,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/threadLocalStorage.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,2 @@\n-  template(None)                                  \\\n+  template(Halt)                                  \\\n+  template(SafepointALot)                         \\\n@@ -45,1 +46,0 @@\n-  template(ForceAsyncSafepoint)                   \\\n@@ -51,1 +51,0 @@\n-  template(DeoptimizeTheWorld)                    \\\n@@ -67,1 +66,0 @@\n-  template(HandshakeOneThread)                    \\\n@@ -69,1 +67,0 @@\n-  template(HandshakeFallback)                     \\\n@@ -92,1 +89,0 @@\n-  template(RotateGCLog)                           \\\n@@ -102,2 +98,0 @@\n-  template(ThreadSuspend)                         \\\n-  template(ThreadsSuspendJVMTI)                   \\\n@@ -105,1 +99,0 @@\n-  template(ScavengeMonitors)                      \\\n@@ -108,0 +101,1 @@\n+  template(GTestStopSafepoint)                    \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -35,7 +35,8 @@\n-class VM_None: public VM_Operation {\n-  const char* _reason;\n- public:\n-  VM_None(const char* reason) : _reason(reason) {}\n-  const char* name() const { return _reason; }\n-  VMOp_Type type() const { return VMOp_None; }\n-  void doit() {};\n+class VM_EmptyOperation : public VM_Operation {\n+public:\n+  virtual void doit() final {}\n+  virtual bool skip_thread_oop_barriers() const final {\n+    \/\/ Neither the doit function nor the the safepoint\n+    \/\/ cleanup tasks read oops in the Java threads.\n+    return true;\n+  }\n@@ -44,1 +45,1 @@\n-class VM_Cleanup: public VM_Operation {\n+class VM_Halt: public VM_EmptyOperation {\n@@ -46,2 +47,1 @@\n-  VMOp_Type type() const { return VMOp_Cleanup; }\n-  void doit() {};\n+  VMOp_Type type() const { return VMOp_Halt; }\n@@ -50,3 +50,1 @@\n-class VM_ClearICs: public VM_Operation {\n- private:\n-  bool _preserve_static_stubs;\n+class VM_SafepointALot: public VM_EmptyOperation {\n@@ -54,3 +52,1 @@\n-  VM_ClearICs(bool preserve_static_stubs) { _preserve_static_stubs = preserve_static_stubs; }\n-  void doit();\n-  VMOp_Type type() const { return VMOp_ClearICs; }\n+  VMOp_Type type() const { return VMOp_SafepointALot; }\n@@ -59,2 +55,1 @@\n-\/\/ empty vm op, evaluated just to force a safepoint\n-class VM_ForceSafepoint: public VM_Operation {\n+class VM_Cleanup: public VM_EmptyOperation {\n@@ -62,2 +57,1 @@\n-  void doit()         {}\n-  VMOp_Type type() const { return VMOp_ForceSafepoint; }\n+  VMOp_Type type() const { return VMOp_Cleanup; }\n@@ -66,2 +60,2 @@\n-\/\/ empty vm op, when forcing a safepoint to suspend a thread\n-class VM_ThreadSuspend: public VM_ForceSafepoint {\n+\/\/ empty vm op, evaluated just to force a safepoint\n+class VM_ForceSafepoint: public VM_EmptyOperation {\n@@ -69,1 +63,1 @@\n-  VMOp_Type type() const { return VMOp_ThreadSuspend; }\n+  VMOp_Type type() const { return VMOp_ForceSafepoint; }\n@@ -72,2 +66,2 @@\n-\/\/ empty vm op, when forcing a safepoint to suspend threads from jvmti\n-class VM_ThreadsSuspendJVMTI: public VM_ForceSafepoint {\n+\/\/ empty vm op, when forcing a safepoint due to inline cache buffers being full\n+class VM_ICBufferFull: public VM_EmptyOperation {\n@@ -75,1 +69,1 @@\n-  VMOp_Type type() const { return VMOp_ThreadsSuspendJVMTI; }\n+  VMOp_Type type() const { return VMOp_ICBufferFull; }\n@@ -78,2 +72,3 @@\n-\/\/ empty vm op, when forcing a safepoint due to inline cache buffers being full\n-class VM_ICBufferFull: public VM_ForceSafepoint {\n+class VM_ClearICs: public VM_Operation {\n+ private:\n+  bool _preserve_static_stubs;\n@@ -81,2 +76,3 @@\n-  VMOp_Type type() const { return VMOp_ICBufferFull; }\n-  virtual bool skip_thread_oop_barriers() const { return true; }\n+  VM_ClearICs(bool preserve_static_stubs) { _preserve_static_stubs = preserve_static_stubs; }\n+  void doit();\n+  VMOp_Type type() const { return VMOp_ClearICs; }\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":26,"deletions":30,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -663,1 +663,1 @@\n-  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         long)                                  \\\n+  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         int64_t)                               \\\n@@ -1202,0 +1202,1 @@\n+  declare_integer_type(int64_t)                                           \\\n@@ -1849,0 +1850,3 @@\n+  declare_c2_type(VectorUCastB2XNode, VectorNode)                         \\\n+  declare_c2_type(VectorUCastS2XNode, VectorNode)                         \\\n+  declare_c2_type(VectorUCastI2XNode, VectorNode)                         \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -99,2 +99,2 @@\n-static VM_None    safepointALot_op(\"SafepointALot\");\n-static VM_Cleanup cleanup_op;\n+static VM_SafepointALot safepointALot_op;\n+static VM_Cleanup       cleanup_op;\n@@ -150,1 +150,1 @@\n-static VM_None halt_op(\"Halt\");\n+static VM_Halt halt_op;\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/services\/attachListener.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -117,5 +118,1 @@\n-    ResourceMark rm;\n-\n-    char* buf = NEW_RESOURCE_ARRAY(char, len + 1);\n-    strncpy(buf, str, len);\n-    buf[len] = '\\0';\n+    const int maxprint = 64;\n@@ -123,1 +120,4 @@\n-      \"Integer parsing error in command argument '%s'. Could not parse: %s.\\n\", _name, buf);\n+      \"Integer parsing error in command argument '%s'. Could not parse: %.*s%s.\\n\", _name,\n+      MIN2((int)len, maxprint),\n+      (str == NULL ? \"<null>\" : str),\n+      (len > maxprint ? \"...\" : \"\"));\n","filename":"src\/hotspot\/share\/services\/diagnosticArgument.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_SERVICES_DTRACEATTACHER_HPP\n-#define SHARE_SERVICES_DTRACEATTACHER_HPP\n-\n-#define DTRACE_ALLOC_PROBES    0x1\n-#define DTRACE_METHOD_PROBES   0x2\n-#define DTRACE_MONITOR_PROBES  0x4\n-#define DTRACE_ALL_PROBES      (DTRACE_ALLOC_PROBES  | \\\n-                                DTRACE_METHOD_PROBES | \\\n-                                DTRACE_MONITOR_PROBES)\n-\n-class DTrace : public AllStatic {\n- private:\n-  \/\/ disable one or more probes - OR above constants\n-  static void disable_dprobes(int probe_types);\n-\n- public:\n-  \/\/ enable one or more probes - OR above constants\n-  static void enable_dprobes(int probe_types);\n-  \/\/ all clients detached, do any clean-up\n-  static void detach_all_clients();\n-  \/\/ set ExtendedDTraceProbes flag\n-  static void set_extended_dprobes(bool value);\n-  \/\/ set DTraceMonitorProbes flag\n-  static void set_monitor_dprobes(bool value);\n-};\n-\n-#endif \/\/ SHARE_SERVICES_DTRACEATTACHER_HPP\n","filename":"src\/hotspot\/share\/services\/dtraceAttacher.hpp","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/services\/gcNotifier.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -915,6 +915,4 @@\n-  \/\/ creates HPROF_GC_CLASS_DUMP record for the given class and each of its\n-  \/\/ array classes\n-  static void dump_class_and_array_classes(AbstractDumpWriter* writer, Klass* k);\n-  \/\/ creates HPROF_GC_CLASS_DUMP record for a given primitive array\n-  \/\/ class (and each multi-dimensional array class too)\n-  static void dump_basic_type_array_class(AbstractDumpWriter* writer, Klass* k);\n+  \/\/ creates HPROF_GC_CLASS_DUMP record for the given instance class\n+  static void dump_instance_class(AbstractDumpWriter* writer, Klass* k);\n+  \/\/ creates HPROF_GC_CLASS_DUMP record for a given array class\n+  static void dump_array_class(AbstractDumpWriter* writer, Klass* k);\n@@ -1246,3 +1244,2 @@\n-\/\/ creates HPROF_GC_CLASS_DUMP record for the given class and each of\n-\/\/ its array classes\n-void DumperSupport::dump_class_and_array_classes(AbstractDumpWriter* writer, Klass* k) {\n+\/\/ creates HPROF_GC_CLASS_DUMP record for the given instance class\n+void DumperSupport::dump_instance_class(AbstractDumpWriter* writer, Klass* k) {\n@@ -1301,0 +1298,1 @@\n+}\n@@ -1302,30 +1300,9 @@\n-  \/\/ array classes\n-  k = ik->array_klass_or_null();\n-  while (k != NULL) {\n-    assert(k->is_objArray_klass(), \"not an ObjArrayKlass\");\n-\n-    u4 size = 1 + sizeof(address) + 4 + 6 * sizeof(address) + 4 + 2 + 2 + 2;\n-    writer->start_sub_record(HPROF_GC_CLASS_DUMP, size);\n-    writer->write_classID(k);\n-    writer->write_u4(STACK_TRACE_ID);\n-\n-    \/\/ super class of array classes is java.lang.Object\n-    java_super = k->java_super();\n-    assert(java_super != NULL, \"checking\");\n-    writer->write_classID(java_super);\n-\n-    writer->write_objectID(ik->class_loader());\n-    writer->write_objectID(ik->signers());\n-    writer->write_objectID(ik->protection_domain());\n-\n-    writer->write_objectID(oop(NULL));    \/\/ reserved\n-    writer->write_objectID(oop(NULL));\n-    writer->write_u4(0);             \/\/ instance size\n-    writer->write_u2(0);             \/\/ constant pool\n-    writer->write_u2(0);             \/\/ static fields\n-    writer->write_u2(0);             \/\/ instance fields\n-\n-    writer->end_sub_record();\n-\n-    \/\/ get the array class for the next rank\n-    k = k->array_klass_or_null();\n+\/\/ creates HPROF_GC_CLASS_DUMP record for the given array class\n+void DumperSupport::dump_array_class(AbstractDumpWriter* writer, Klass* k) {\n+  InstanceKlass* ik = NULL; \/\/ bottom class for object arrays, NULL for primitive type arrays\n+  if (k->is_objArray_klass()) {\n+    Klass *bk = ObjArrayKlass::cast(k)->bottom_klass();\n+    assert(bk != NULL, \"checking\");\n+    if (bk->is_instance_klass()) {\n+      ik = InstanceKlass::cast(bk);\n+    }\n@@ -1333,1 +1310,0 @@\n-}\n@@ -1335,16 +1311,4 @@\n-\/\/ creates HPROF_GC_CLASS_DUMP record for a given primitive array\n-\/\/ class (and each multi-dimensional array class too)\n-void DumperSupport::dump_basic_type_array_class(AbstractDumpWriter* writer, Klass* k) {\n- \/\/ array classes\n- while (k != NULL) {\n-    Klass* klass = k;\n-\n-    u4 size = 1 + sizeof(address) + 4 + 6 * sizeof(address) + 4 + 2 + 2 + 2;\n-    writer->start_sub_record(HPROF_GC_CLASS_DUMP, size);\n-    writer->write_classID(klass);\n-    writer->write_u4(STACK_TRACE_ID);\n-\n-    \/\/ super class of array classes is java.lang.Object\n-    InstanceKlass* java_super = klass->java_super();\n-    assert(java_super != NULL, \"checking\");\n-    writer->write_classID(java_super);\n+  u4 size = 1 + sizeof(address) + 4 + 6 * sizeof(address) + 4 + 2 + 2 + 2;\n+  writer->start_sub_record(HPROF_GC_CLASS_DUMP, size);\n+  writer->write_classID(k);\n+  writer->write_u4(STACK_TRACE_ID);\n@@ -1352,3 +1316,4 @@\n-    writer->write_objectID(oop(NULL));    \/\/ loader\n-    writer->write_objectID(oop(NULL));    \/\/ signers\n-    writer->write_objectID(oop(NULL));    \/\/ protection domain\n+  \/\/ super class of array classes is java.lang.Object\n+  InstanceKlass* java_super = k->java_super();\n+  assert(java_super != NULL, \"checking\");\n+  writer->write_classID(java_super);\n@@ -1356,6 +1321,3 @@\n-    writer->write_objectID(oop(NULL));    \/\/ reserved\n-    writer->write_objectID(oop(NULL));\n-    writer->write_u4(0);             \/\/ instance size\n-    writer->write_u2(0);             \/\/ constant pool\n-    writer->write_u2(0);             \/\/ static fields\n-    writer->write_u2(0);             \/\/ instance fields\n+  writer->write_objectID(ik == NULL ? oop(NULL) : ik->class_loader());\n+  writer->write_objectID(ik == NULL ? oop(NULL) : ik->signers());\n+  writer->write_objectID(ik == NULL ? oop(NULL) : ik->protection_domain());\n@@ -1363,1 +1325,8 @@\n-    writer->end_sub_record();\n+  writer->write_objectID(oop(NULL));    \/\/ reserved\n+  writer->write_objectID(oop(NULL));\n+  writer->write_u4(0);             \/\/ instance size\n+  writer->write_u2(0);             \/\/ constant pool\n+  writer->write_u2(0);             \/\/ static fields\n+  writer->write_u2(0);             \/\/ instance fields\n+\n+  writer->end_sub_record();\n@@ -1365,3 +1334,0 @@\n-    \/\/ get the array class for the next rank\n-    k = klass->array_klass_or_null();\n-  }\n@@ -1939,1 +1905,0 @@\n-  class ClassesDo;\n@@ -1943,1 +1908,0 @@\n-  \/\/ (and each array class too)\n@@ -1946,4 +1910,0 @@\n-  \/\/ writes a HPROF_GC_CLASS_DUMP records for a given basic type\n-  \/\/ array (and each multi-dimensional array too)\n-  static void do_basic_type_array_class_dump(Klass* k);\n-\n@@ -2030,2 +1990,1 @@\n-\/\/ writes a HPROF_LOAD_CLASS record for the class (and each of its\n-\/\/ array classes)\n+\/\/ writes a HPROF_LOAD_CLASS record for the class\n@@ -2038,6 +1997,1 @@\n-  \/\/ write a HPROF_LOAD_CLASS for the class and each array class\n-  do {\n-    DumperSupport::write_header(writer(), HPROF_LOAD_CLASS, remaining);\n-\n-    \/\/ class serial number is just a number\n-    writer()->write_u4(++class_serial_num);\n+  DumperSupport::write_header(writer(), HPROF_LOAD_CLASS, remaining);\n@@ -2045,3 +1999,2 @@\n-    \/\/ class ID\n-    Klass* klass = k;\n-    writer()->write_classID(klass);\n+  \/\/ class serial number is just a number\n+  writer()->write_u4(++class_serial_num);\n@@ -2049,2 +2002,2 @@\n-    \/\/ add the Klass* and class serial number pair\n-    dumper()->add_class_serial_number(klass, class_serial_num);\n+  \/\/ class ID\n+  writer()->write_classID(k);\n@@ -2052,1 +2005,2 @@\n-    writer()->write_u4(STACK_TRACE_ID);\n+  \/\/ add the Klass* and class serial number pair\n+  dumper()->add_class_serial_number(k, class_serial_num);\n@@ -2054,3 +2008,1 @@\n-    \/\/ class name ID\n-    Symbol* name = klass->name();\n-    writer()->write_symbolID(name);\n+  writer()->write_u4(STACK_TRACE_ID);\n@@ -2058,3 +2010,3 @@\n-    \/\/ write a LOAD_CLASS record for the array type (if it exists)\n-    k = klass->array_klass_or_null();\n-  } while (k != NULL);\n+  \/\/ class name ID\n+  Symbol* name = k->name();\n+  writer()->write_symbolID(name);\n@@ -2066,1 +2018,3 @@\n-    DumperSupport::dump_class_and_array_classes(writer(), k);\n+    DumperSupport::dump_instance_class(writer(), k);\n+  } else {\n+    DumperSupport::dump_array_class(writer(), k);\n@@ -2070,6 +2024,0 @@\n-\/\/ writes a HPROF_GC_CLASS_DUMP records for a given basic type\n-\/\/ array (and each multi-dimensional array too)\n-void VM_HeapDumper::do_basic_type_array_class_dump(Klass* k) {\n-  DumperSupport::dump_basic_type_array_class(writer(), k);\n-}\n-\n@@ -2294,1 +2242,0 @@\n-    Universe::basic_type_classes_do(&do_load_class);\n@@ -2305,1 +2252,0 @@\n-    Universe::basic_type_classes_do(&do_basic_type_array_class_dump);\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":51,"deletions":105,"binary":false,"changes":156,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/services\/lowMemoryDetector.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,4 +28,0 @@\n-#include \"utilities\/macros.hpp\"\n-\n-#if INCLUDE_NMT\n-\n@@ -37,0 +33,1 @@\n+#include \"utilities\/macros.hpp\"\n@@ -202,1 +199,0 @@\n-#endif \/\/ INCLUDE_NMT\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#include \"runtime\/safefetch.inline.hpp\"\n@@ -34,0 +35,2 @@\n+#include \"jvm_io.h\"\n+\n@@ -118,1 +121,1 @@\n-  check_block_integrity();\n+  assert_block_integrity();\n@@ -156,0 +159,10 @@\n+void MallocHeader::assert_block_integrity() const {\n+  char msg[256];\n+  address corruption = NULL;\n+  if (!check_block_integrity(msg, sizeof(msg), &corruption)) {\n+    if (corruption != NULL) {\n+      print_block_on_error(tty, (address)this);\n+    }\n+    fatal(\"NMT corruption: Block at \" PTR_FORMAT \": %s\", p2i(this), msg);\n+  }\n+}\n@@ -157,6 +170,1 @@\n-\/\/ Check block integrity. If block is broken, print out a report\n-\/\/ to tty (optionally with hex dump surrounding the broken block),\n-\/\/ then trigger a fatal error.\n-void MallocHeader::check_block_integrity() const {\n-\n-#define PREFIX \"NMT corruption: \"\n+bool MallocHeader::check_block_integrity(char* msg, size_t msglen, address* p_corruption) const {\n@@ -170,1 +178,2 @@\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": invalid block address\", p2i(this));\n+    jio_snprintf(msg, msglen, \"invalid block address\");\n+    return false;\n@@ -189,2 +198,3 @@\n-    print_block_on_error(tty, (address)this);\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": block address is unaligned\", p2i(this));\n+    *p_corruption = (address)this;\n+    jio_snprintf(msg, msglen, \"block address is unaligned\");\n+    return false;\n@@ -195,2 +205,3 @@\n-    print_block_on_error(tty, (address)this);\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": header canary broken.\", p2i(this));\n+    *p_corruption = (address)this;\n+    jio_snprintf(msg, msglen, \"header canary broken\");\n+    return false;\n@@ -202,2 +213,3 @@\n-    print_block_on_error(tty, (address)this);\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": header alternate canary broken.\", p2i(this));\n+    *p_corruption = (address)this;\n+    jio_snprintf(msg, msglen, \"header canary broken\");\n+    return false;\n@@ -209,2 +221,3 @@\n-    print_block_on_error(tty, (address)this);\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": header looks invalid (weirdly large block size)\", p2i(this));\n+    *p_corruption = (address)this;\n+    jio_snprintf(msg, msglen, \"header looks invalid (weirdly large block size)\");\n+    return false;\n@@ -215,3 +228,4 @@\n-    print_block_on_error(tty, footer_address());\n-    fatal(PREFIX \"Block at \" PTR_FORMAT \": footer canary broken at \" PTR_FORMAT \" (buffer overflow?)\",\n-          p2i(this), p2i(footer_address()));\n+    *p_corruption = footer_address();\n+    jio_snprintf(msg, msglen, \"footer canary broken at \" PTR_FORMAT \" (buffer overflow?)\",\n+                p2i(footer_address()));\n+    return false;\n@@ -219,1 +233,1 @@\n-#undef PREFIX\n+  return true;\n@@ -279,0 +293,29 @@\n+\n+\/\/ Given a pointer, if it seems to point to the start of a valid malloced block,\n+\/\/ print the block. Note that since there is very low risk of memory looking\n+\/\/ accidentally like a valid malloc block header (canaries and all) this is not\n+\/\/ totally failproof. Only use this during debugging or when you can afford\n+\/\/ signals popping up, e.g. when writing an hs_err file.\n+bool MallocTracker::print_pointer_information(const void* p, outputStream* st) {\n+  assert(MemTracker::enabled(), \"NMT must be enabled\");\n+  if (CanUseSafeFetch32() && os::is_readable_pointer(p)) {\n+    const NMT_TrackingLevel tracking_level = MemTracker::tracking_level();\n+    const MallocHeader* mhdr = (const MallocHeader*)MallocTracker::get_base(const_cast<void*>(p), tracking_level);\n+    char msg[256];\n+    address p_corrupted;\n+    if (os::is_readable_pointer(mhdr) &&\n+        mhdr->check_block_integrity(msg, sizeof(msg), &p_corrupted)) {\n+      st->print_cr(PTR_FORMAT \" malloc'd \" SIZE_FORMAT \" bytes by %s\",\n+          p2i(p), mhdr->size(), NMTUtil::flag_to_name(mhdr->flags()));\n+      if (tracking_level == NMT_detail) {\n+        NativeCallStack ncs;\n+        if (mhdr->get_stack(ncs)) {\n+          ncs.print_on(st);\n+          st->cr();\n+        }\n+      }\n+      return true;\n+    }\n+  }\n+  return false;\n+}\n","filename":"src\/hotspot\/share\/services\/mallocTracker.cpp","additions":64,"deletions":21,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -36,0 +34,2 @@\n+class outputStream;\n+\n@@ -317,4 +317,3 @@\n-  \/\/ Check block integrity. If block is broken, print out a report\n-  \/\/ to tty (optionally with hex dump surrounding the broken block),\n-  \/\/ then trigger a fatal error.\n-  void check_block_integrity() const;\n+  \/\/ If block is broken, print out a report to tty (optionally with\n+  \/\/ hex dump surrounding the broken block), then trigger a fatal error\n+  void assert_block_integrity() const;\n@@ -366,0 +365,5 @@\n+  \/\/ If block is broken, fill in a short descriptive text in out,\n+  \/\/ an option pointer to the corruption in p_corruption, and return false.\n+  \/\/ Return true if block is fine.\n+  bool check_block_integrity(char* msg, size_t msglen, address* p_corruption) const;\n+\n@@ -439,0 +443,8 @@\n+\n+  \/\/ Given a pointer, if it seems to point to the start of a valid malloced block,\n+  \/\/ print the block. Note that since there is very low risk of memory looking\n+  \/\/ accidentally like a valid malloc block header (canaries and all) this is not\n+  \/\/ totally failproof. Only use this during debugging or when you can afford\n+  \/\/ signals popping up, e.g. when writing an hs_err file.\n+  static bool print_pointer_information(const void* p, outputStream* st);\n+\n@@ -447,3 +459,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n-\n","filename":"src\/hotspot\/share\/services\/mallocTracker.hpp","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -215,2 +213,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/services\/memBaseline.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -242,2 +240,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,56 +28,0 @@\n-#include \"services\/nmtCommon.hpp\"\n-#include \"utilities\/nativeCallStack.hpp\"\n-\n-\n-#if !INCLUDE_NMT\n-\n-#define CURRENT_PC   NativeCallStack::empty_stack()\n-#define CALLER_PC    NativeCallStack::empty_stack()\n-\n-class Tracker : public StackObj {\n- public:\n-  enum TrackerType {\n-     uncommit,\n-     release\n-  };\n-  Tracker(enum TrackerType type) : _type(type) { }\n-  void record(address addr, size_t size) { }\n- private:\n-  enum TrackerType  _type;\n-};\n-\n-class MemTracker : AllStatic {\n- public:\n-  static inline NMT_TrackingLevel tracking_level() { return NMT_off; }\n-  static inline bool enabled() { return false; }\n-  static inline void init() { }\n-  static bool check_launcher_nmt_support(const char* value) { return true; }\n-  static bool verify_nmt_option() { return true; }\n-\n-  static inline void* record_malloc(void* mem_base, size_t size, MEMFLAGS flag,\n-    const NativeCallStack& stack, NMT_TrackingLevel level) { return mem_base; }\n-  static inline size_t malloc_header_size(NMT_TrackingLevel level) { return 0; }\n-  static inline size_t malloc_header_size(void* memblock) { return 0; }\n-  static inline size_t malloc_footer_size(NMT_TrackingLevel level) { return 0; }\n-  static inline void* malloc_base(void* memblock) { return memblock; }\n-  static inline void* record_free(void* memblock, NMT_TrackingLevel level) { return memblock; }\n-\n-  static inline void record_new_arena(MEMFLAGS flag) { }\n-  static inline void record_arena_free(MEMFLAGS flag) { }\n-  static inline void record_arena_size_change(ssize_t diff, MEMFLAGS flag) { }\n-  static inline void record_virtual_memory_reserve(void* addr, size_t size, const NativeCallStack& stack,\n-                       MEMFLAGS flag = mtNone) { }\n-  static inline void record_virtual_memory_reserve_and_commit(void* addr, size_t size,\n-    const NativeCallStack& stack, MEMFLAGS flag = mtNone) { }\n-  static inline void record_virtual_memory_split_reserved(void* addr, size_t size, size_t split) { }\n-  static inline void record_virtual_memory_commit(void* addr, size_t size, const NativeCallStack& stack) { }\n-  static inline void record_virtual_memory_type(void* addr, MEMFLAGS flag) { }\n-  static inline void record_thread_stack(void* addr, size_t size) { }\n-  static inline void release_thread_stack(void* addr, size_t size) { }\n-\n-  static void final_report(outputStream*) { }\n-  static void error_report(outputStream*) { }\n-};\n-\n-#else\n-\n@@ -87,0 +31,1 @@\n+#include \"services\/nmtCommon.hpp\"\n@@ -89,0 +34,1 @@\n+#include \"utilities\/nativeCallStack.hpp\"\n@@ -312,2 +258,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":3,"deletions":59,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allocation.hpp\" \/\/ for MEMFLAGS only\n","filename":"src\/hotspot\/share\/services\/nmtCommon.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -74,2 +72,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/services\/nmtDCmd.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-#if INCLUDE_NMT\n-\n@@ -193,2 +191,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,0 @@\n-#if INCLUDE_NMT\n-\n@@ -356,2 +354,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.hpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/services\/threadIdTable.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -87,1 +85,0 @@\n-#endif \/\/ INCLUDE_NMT\n@@ -89,0 +86,1 @@\n+\n","filename":"src\/hotspot\/share\/services\/threadStackTracker.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -674,0 +674,30 @@\n+\n+class PrintRegionWalker : public VirtualMemoryWalker {\n+private:\n+  const address               _p;\n+  outputStream*               _st;\n+public:\n+  PrintRegionWalker(const void* p, outputStream* st) :\n+    _p((address)p), _st(st) { }\n+\n+  bool do_allocation_site(const ReservedMemoryRegion* rgn) {\n+    if (rgn->contain_address(_p)) {\n+      _st->print_cr(PTR_FORMAT \" in mmap'd memory region [\" PTR_FORMAT \" - \" PTR_FORMAT \"] by %s\",\n+        p2i(_p), p2i(rgn->base()), p2i(rgn->base() + rgn->size()), rgn->flag_name());\n+      if (MemTracker::tracking_level() == NMT_detail) {\n+        rgn->call_stack()->print_on(_st);\n+        _st->cr();\n+      }\n+      return false;\n+    }\n+    return true;\n+  }\n+};\n+\n+\/\/ If p is contained within a known memory region, print information about it to the\n+\/\/ given stream and return true; false otherwise.\n+bool VirtualMemoryTracker::print_containing_region(const void* p, outputStream* st) {\n+  PrintRegionWalker walker(p, st);\n+  return !walk_virtual_memory(&walker);\n+\n+}\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":31,"deletions":1,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#if INCLUDE_NMT\n-\n@@ -344,1 +342,1 @@\n-  const char* flag_name() { return NMTUtil::flag_to_name(_flag); }\n+  const char* flag_name() const { return NMTUtil::flag_to_name(_flag); }\n@@ -390,0 +388,4 @@\n+  \/\/ If p is contained within a known memory region, print information about it to the\n+  \/\/ given stream and return true; false otherwise.\n+  static bool print_containing_region(const void* p, outputStream* st);\n+\n@@ -397,2 +399,0 @@\n-#endif \/\/ INCLUDE_NMT\n-\n@@ -400,0 +400,1 @@\n+\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -89,0 +89,7 @@\n+  bool is_in_error() const {\n+    return is_unresolved_klass_in_error() ||\n+           is_method_handle_in_error()    ||\n+           is_method_type_in_error()      ||\n+           is_dynamic_constant_in_error();\n+  }\n+\n@@ -124,2 +131,7 @@\n-  static constantTag ofBasicType(BasicType bt) {\n-    if (is_subword_type(bt))  bt = T_INT;\n+  static jbyte type2tag(BasicType bt) {\n+    if (is_subword_type(bt)) {\n+      bt = T_INT;\n+    }\n+    if (bt == T_ARRAY) {\n+      bt = T_OBJECT;\n+    }\n@@ -127,6 +139,9 @@\n-      case T_OBJECT: return constantTag(JVM_CONSTANT_String);\n-      case T_INT:    return constantTag(JVM_CONSTANT_Integer);\n-      case T_LONG:   return constantTag(JVM_CONSTANT_Long);\n-      case T_FLOAT:  return constantTag(JVM_CONSTANT_Float);\n-      case T_DOUBLE: return constantTag(JVM_CONSTANT_Double);\n-      default:       break;\n+      case T_INT:    return JVM_CONSTANT_Integer;\n+      case T_LONG:   return JVM_CONSTANT_Long;\n+      case T_FLOAT:  return JVM_CONSTANT_Float;\n+      case T_DOUBLE: return JVM_CONSTANT_Double;\n+      case T_OBJECT: return JVM_CONSTANT_String;\n+\n+      default:\n+        assert(false, \"not supported: %s\", type2name(bt));\n+        return JVM_CONSTANT_Invalid;\n@@ -134,2 +149,0 @@\n-    assert(false, \"bad basic type for tag\");\n-    return constantTag();\n","filename":"src\/hotspot\/share\/utilities\/constantTag.hpp","additions":23,"deletions":10,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,1 @@\n+#include \"services\/mallocTracker.hpp\"\n@@ -55,0 +56,1 @@\n+#include \"services\/virtualMemoryTracker.hpp\"\n@@ -483,1 +485,17 @@\n-    tty->print(PTR_FORMAT, p2i(p));\n+    \/\/ Ask NMT about this pointer.\n+    \/\/ GDB note: We will be using SafeFetch to access the supposed malloc header. If the address is\n+    \/\/ not readable, this will generate a signal. That signal will trip up the debugger: gdb will\n+    \/\/ catch the signal and disable the pp() command for further use.\n+    \/\/ In order to avoid that, switch off SIGSEGV handling with \"handle SIGSEGV nostop\" before\n+    \/\/ invoking pp()\n+    if (MemTracker::enabled()) {\n+      \/\/ Does it point into a known mmaped region?\n+      if (VirtualMemoryTracker::print_containing_region(p, tty)) {\n+        return;\n+      }\n+      \/\/ Does it look like the start of a malloced block?\n+      if (MallocTracker::print_pointer_information(p, tty)) {\n+        return;\n+      }\n+    }\n+    tty->print_cr(PTR_FORMAT, p2i(p));\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/decoder.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/globalCounter.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,5 +130,0 @@\n-\/\/ Wide characters\n-\n-inline int wcslen(const jchar* x) { return wcslen((const wchar_t*)x); }\n-\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,4 +112,0 @@\n-\/\/ Wide characters\n-inline int wcslen(const jchar* x) { return wcslen((const wchar_t*)x); }\n-\n-\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_xlc.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,16 +244,0 @@\n-#ifndef INCLUDE_NMT\n-#define INCLUDE_NMT 1\n-#endif \/\/ INCLUDE_NMT\n-\n-#if INCLUDE_NMT\n-#define NOT_NMT_RETURN        \/* next token must be ; *\/\n-#define NOT_NMT_RETURN_(code) \/* next token must be ; *\/\n-#define NMT_ONLY(x) x\n-#define NOT_NMT(x)\n-#else\n-#define NOT_NMT_RETURN        {}\n-#define NOT_NMT_RETURN_(code) { return code; }\n-#define NMT_ONLY(x)\n-#define NOT_NMT(x) x\n-#endif \/\/ INCLUDE_NMT\n-\n","filename":"src\/hotspot\/share\/utilities\/macros.hpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-\/\/ the value of r may be NULL.\n+\/\/ the value of r may be nullptr.\n@@ -99,0 +99,1 @@\n+  \/\/ Subject to ABA behavior; callers must ensure usage is safe.\n@@ -102,0 +103,1 @@\n+  \/\/ Subject to ABA behavior; callers must ensure usage is safe.\n@@ -106,1 +108,1 @@\n-  \/\/ first object, or NULL if the queue was empty.  If unsuccessful, because\n+  \/\/ first object, or nullptr if the queue was empty.  If unsuccessful, because\n@@ -112,3 +114,3 @@\n-  \/\/ Thread-safe remove and return the first object in the queue, or NULL if\n-  \/\/ the queue was empty.  This just iterates on try_pop() until it\n-  \/\/ succeeds, returning the (possibly NULL) element obtained from that.\n+  \/\/ Thread-safe remove and return the first object in the queue, or nullptr\n+  \/\/ if the queue was empty.  This just iterates on try_pop() until it\n+  \/\/ succeeds, returning the (possibly nullptr) element obtained from that.\n","filename":"src\/hotspot\/share\/utilities\/nonblockingQueue.hpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-NonblockingQueue<T, next_ptr>::NonblockingQueue() : _head(NULL), _tail(NULL) {}\n+NonblockingQueue<T, next_ptr>::NonblockingQueue() : _head(nullptr), _tail(nullptr) {}\n@@ -48,2 +48,2 @@\n-  assert(_head == NULL, \"precondition\");\n-  assert(_tail == NULL, \"precondition\");\n+  assert(_head == nullptr, \"precondition\");\n+  assert(_tail == nullptr, \"precondition\");\n@@ -64,1 +64,1 @@\n-  return head == NULL ? end_marker() : head;\n+  return head == nullptr ? end_marker() : head;\n@@ -74,1 +74,1 @@\n-  return Atomic::load(&_head) == NULL;\n+  return Atomic::load(&_head) == nullptr;\n@@ -88,2 +88,2 @@\n-\/\/ appended. If the old tail is NULL then the queue was empty, then the head\n-\/\/ of the list being appended is instead stored in the queue head.\n+\/\/ appended. If the old tail is nullptr then the queue was empty, then the\n+\/\/ head of the list being appended is instead stored in the queue head.\n@@ -97,1 +97,1 @@\n-\/\/ with a NULL \"next\" value specially.\n+\/\/ differently depending on its \"next\" value.\n@@ -103,1 +103,4 @@\n-  assert(next(last) == NULL, \"precondition\");\n+  assert(next(last) == nullptr, \"precondition\");\n+  \/\/ Make last the new end of the queue.  Any further push\/appends will\n+  \/\/ extend after last.  We will try to extend from the previous end of\n+  \/\/ queue.\n@@ -106,11 +109,22 @@\n-  bool is_old_tail_null = (old_tail == NULL);\n-  if (is_old_tail_null ||\n-      \/\/ Try to install first as old_tail's next.\n-      !is_end(Atomic::cmpxchg(next_ptr(*old_tail), end_marker(), &first))) {\n-    \/\/ Install first as the new head if either\n-    \/\/ (1) the list was empty, or\n-    \/\/ (2) a concurrent try_pop claimed old_tail, so it is no longer in the list.\n-    \/\/ Note that multiple concurrent push\/append operations cannot modify\n-    \/\/ _head simultaneously, because the Atomic::xchg() above orders these\n-    \/\/ push\/append operations so they perform Atomic::cmpxchg() on different\n-    \/\/ old_tail. Thus, the cmpxchg can only fail because of a concurrent try_pop.\n+  if (old_tail == nullptr) {\n+    \/\/ If old_tail is nullptr then the queue was empty, and _head must also be\n+    \/\/ nullptr.  The correctness of this assertion depends on try_pop clearing\n+    \/\/ first _head then _tail when taking the last entry.\n+    assert(Atomic::load(&_head) == nullptr, \"invariant\");\n+    \/\/ Fall through to common update of _head.\n+  } else if (is_end(Atomic::cmpxchg(next_ptr(*old_tail), end_marker(), &first))) {\n+    \/\/ Successfully extended the queue list from old_tail to first.  No\n+    \/\/ other push\/append could have competed with us, because we claimed\n+    \/\/ old_tail for extension.  We won any races with try_pop by changing\n+    \/\/ away from end-marker.  So we're done.\n+    \/\/\n+    \/\/ Note that ABA is possible here.  A concurrent try_pop could take\n+    \/\/ old_tail before our update of old_tail's next_ptr, old_tail gets\n+    \/\/ recycled and re-added to the end of this queue, and then we\n+    \/\/ successfully cmpxchg, making the list in _tail circular.  Callers\n+    \/\/ must ensure this can't happen.\n+    return;\n+  } else {\n+    \/\/ A concurrent try_pop has claimed old_tail, so it is no longer in the\n+    \/\/ list.  The queue was logically empty.  _head is either nullptr or\n+    \/\/ old_tail, depending on how far try_pop operations have progressed.\n@@ -118,6 +132,2 @@\n-    \/\/ If old_tail is NULL, old_head could be NULL, or an unseen object\n-    \/\/ that is being popped.  Otherwise, old_head must be either NULL\n-    \/\/ or the same as old_tail.\n-    assert(is_old_tail_null ||\n-           old_head == NULL || old_head == old_tail, \"invariant\");\n-    Atomic::store(&_head, &first);\n+    assert((old_head == nullptr) || (old_head == old_tail), \"invariant\");\n+    \/\/ Fall through to common update of _head.\n@@ -125,0 +135,3 @@\n+  \/\/ The queue was empty, and first should become the new _head.  The queue\n+  \/\/ will appear to be empty to any further try_pops until done.\n+  Atomic::store(&_head, &first);\n@@ -131,3 +144,3 @@\n-  T* result = Atomic::load_acquire(&_head);\n-  if (result == NULL) {\n-    *node_ptr = NULL;\n+  T* old_head = Atomic::load_acquire(&_head);\n+  if (old_head == nullptr) {\n+    *node_ptr = nullptr;\n@@ -137,19 +150,18 @@\n-  T* next_node = Atomic::load_acquire(next_ptr(*result));\n-  if (next_node == NULL) {\n-    \/\/ A concurrent try_pop already claimed what was the last entry.  That\n-    \/\/ operation may not have cleared queue head yet, but we should still\n-    \/\/ treat the queue as empty until a push\/append operation changes head\n-    \/\/ to an entry with a non-NULL next value.\n-    *node_ptr = NULL;\n-    return true;\n-\n-  } else if (!is_end(next_node)) {\n-    \/\/ The next_node is not at the end of the queue's list.  Use the \"usual\"\n-    \/\/ lock-free pop from the head of a singly linked list to try to take it.\n-    if (result == Atomic::cmpxchg(&_head, result, next_node)) {\n-      \/\/ Former head successfully taken.\n-      set_next(*result, NULL);\n-      *node_ptr = result;\n-      return true;\n-    } else {\n-      \/\/ Lost race to take result from the head of the list.\n+  T* next_node = Atomic::load_acquire(next_ptr(*old_head));\n+  if (!is_end(next_node)) {\n+    \/\/ [Clause 1]\n+    \/\/ There are several cases for next_node.\n+    \/\/ (1) next_node is the extension of the queue's list.\n+    \/\/ (2) next_node is nullptr, because a competing try_pop took old_head.\n+    \/\/ (3) next_node is the extension of some unrelated list, because a\n+    \/\/ competing try_pop took old_head and put it in some other list.\n+    \/\/\n+    \/\/ Attempt to advance the list, replacing old_head with next_node in\n+    \/\/ _head.  The success or failure of that attempt, along with the value\n+    \/\/ of next_node, are used to partially determine which case we're in and\n+    \/\/ how to proceed.  In particular, advancement will fail for case (3).\n+    if (old_head != Atomic::cmpxchg(&_head, old_head, next_node)) {\n+      \/\/ [Clause 1a]\n+      \/\/ The cmpxchg to advance the list failed; a concurrent try_pop won\n+      \/\/ the race and claimed old_head.  This can happen for any of the\n+      \/\/ next_node cases.\n@@ -157,0 +169,20 @@\n+    } else if (next_node == nullptr) {\n+      \/\/ [Clause 1b]\n+      \/\/ The cmpxchg to advance the list succeeded, but a concurrent try_pop\n+      \/\/ has already claimed old_head (see [Clause 2] - old_head was the last\n+      \/\/ entry in the list) by nulling old_head's next field.  The advance set\n+      \/\/ _head to nullptr, \"helping\" the competing try_pop.  _head will remain\n+      \/\/ nullptr until a subsequent push\/append.  This is a lost race, and we\n+      \/\/ report it as such for consistency, though we could report the queue\n+      \/\/ was empty.  We don't attempt to further help [Clause 2] by also\n+      \/\/ trying to set _tail to nullptr, as that would just ensure that one or\n+      \/\/ the other cmpxchg is a wasted failure.\n+      return false;\n+    } else {\n+      \/\/ [Clause 1c]\n+      \/\/ Successfully advanced the list and claimed old_head.  next_node was\n+      \/\/ in the extension of the queue's list.  Return old_head after\n+      \/\/ unlinking it from next_node.\n+      set_next(*old_head, nullptr);\n+      *node_ptr = old_head;\n+      return true;\n@@ -159,3 +191,4 @@\n-  } else if (is_end(Atomic::cmpxchg(next_ptr(*result), end_marker(), (T*)NULL))) {\n-    \/\/ Result was the last entry and we've claimed it by setting its next\n-    \/\/ value to NULL.  However, this leaves the queue in disarray.  Fix up\n+  } else if (is_end(Atomic::cmpxchg(next_ptr(*old_head), next_node, (T*)nullptr))) {\n+    \/\/ [Clause 2]\n+    \/\/ Old_head was the last entry and we've claimed it by setting its next\n+    \/\/ value to nullptr.  However, this leaves the queue in disarray.  Fix up\n@@ -166,5 +199,8 @@\n-    \/\/ Attempt to change the queue tail from result to NULL.  Failure of the\n-    \/\/ cmpxchg indicates that a concurrent push\/append updated the tail first.\n-    \/\/ That operation will eventually recognize the old tail (our result) is\n-    \/\/ no longer in the list and update head from the list being appended.\n-    Atomic::cmpxchg(&_tail, result, (T*)NULL);\n+    \/\/ The order of the two cmpxchgs doesn't matter algorithmically, but\n+    \/\/ dealing with _head first gives a stronger invariant in append, and is\n+    \/\/ also consistent with [Clause 1b].\n+\n+    \/\/ Attempt to change the queue head from old_head to nullptr.  Failure of\n+    \/\/ the cmpxchg indicates a concurrent operation updated _head first.  That\n+    \/\/ could be either a push\/append or a try_pop in [Clause 1b].\n+    Atomic::cmpxchg(&_head, old_head, (T*)nullptr);\n@@ -172,3 +208,5 @@\n-    \/\/ Attempt to change the queue head from result to NULL.  Failure of the\n-    \/\/ cmpxchg indicates a concurrent push\/append updated the head first.\n-    Atomic::cmpxchg(&_head, result, (T*)NULL);\n+    \/\/ Attempt to change the queue tail from old_head to nullptr.  Failure of\n+    \/\/ the cmpxchg indicates that a concurrent push\/append updated _tail first.\n+    \/\/ That operation will eventually recognize the old tail (our old_head) is\n+    \/\/ no longer in the list and update _head from the list being appended.\n+    Atomic::cmpxchg(&_tail, old_head, (T*)nullptr);\n@@ -176,2 +214,2 @@\n-    \/\/ The queue has been restored to order, and we can return the result.\n-    *node_ptr = result;\n+    \/\/ The queue has been restored to order, and we can return old_head.\n+    *node_ptr = old_head;\n@@ -181,3 +219,4 @@\n-    \/\/ Result was the last entry in the list, but either a concurrent pop\n-    \/\/ claimed it first or a concurrent push\/append extended the list from\n-    \/\/ it.  Either way, we lost the race.\n+    \/\/ [Clause 3]\n+    \/\/ Old_head was the last entry in the list, but either a concurrent\n+    \/\/ try_pop claimed it first or a concurrent push\/append extended the\n+    \/\/ list from it.  Either way, we lost the race to claim it.\n@@ -190,1 +229,1 @@\n-  T* result = NULL;\n+  T* result = nullptr;\n@@ -202,1 +241,1 @@\n-  if (tail != NULL) set_next(*tail, NULL); \/\/ Clear end marker.\n+  if (tail != nullptr) set_next(*tail, nullptr); \/\/ Clear end marker.\n@@ -204,2 +243,2 @@\n-  Atomic::store(&_head, (T*)NULL);\n-  Atomic::store(&_tail, (T*)NULL);\n+  Atomic::store(&_head, (T*)nullptr);\n+  Atomic::store(&_tail, (T*)nullptr);\n","filename":"src\/hotspot\/share\/utilities\/nonblockingQueue.inline.hpp","additions":108,"deletions":69,"binary":false,"changes":177,"status":"modified"},{"patch":"@@ -1082,1 +1082,1 @@\n-  int result = os::socket(AF_INET, SOCK_STREAM, 0);\n+  int result = ::socket(AF_INET, SOCK_STREAM, 0);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/quickSort.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+#include <string.h>\n+\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"memory\/allStatic.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,3 @@\n+#include \"memory\/allocation.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -28,0 +31,1 @@\n+\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,3 @@\n-#include \"memory\/allocation.hpp\"\n+#include \"jni.h\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/utf8.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1657,1 +1657,1 @@\n-      os::close(fd_log);\n+      ::close(fd_log);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -948,1 +948,0 @@\n-            byte[] eAlgId = null;\n@@ -987,1 +986,0 @@\n-            Object bagItem = null;\n","filename":"src\/java.base\/macosx\/classes\/apple\/security\/KeychainStore.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        int i, j, count;\n+        int i, j;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/BlowfishCrypt.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -815,4 +815,7 @@\n-            \/\/ create temporary output buffer if the estimated size is larger\n-            \/\/ than the user-provided buffer.\n-            internalOutput = new byte[estOutSize];\n-            offset = 0;\n+            if (outputCapacity < estOutSize || padding != null) {\n+                \/\/ create temporary output buffer if the estimated size is larger\n+                \/\/ than the user-provided buffer or a padding needs to be removed\n+                \/\/ before copying the unpadded result to the output buffer\n+                internalOutput = new byte[estOutSize];\n+                offset = 0;\n+            }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/CipherCore.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.Objects;\n@@ -41,0 +42,1 @@\n+        private T strongReferent;\n@@ -45,0 +47,1 @@\n+            this.strongReferent = referent;\n@@ -50,0 +53,8 @@\n+\n+        T getStrong() {\n+            return strongReferent;\n+        }\n+\n+        void clearStrong() {\n+            strongReferent = null;\n+        }\n@@ -53,1 +64,1 @@\n-    private final ClassValue<SoftReference<T>> map;\n+    private final ClassValue<CacheRef<T>> map;\n@@ -61,2 +72,4 @@\n-            protected SoftReference<T> computeValue(Class<?> type) {\n-                return new CacheRef<>(ClassCache.this.computeValue(type), queue, type);\n+            protected CacheRef<T> computeValue(Class<?> type) {\n+                T v = ClassCache.this.computeValue(type);\n+                Objects.requireNonNull(v);\n+                return new CacheRef<>(v, queue, type);\n@@ -68,7 +81,20 @@\n-        processQueue();\n-        T val;\n-        do {\n-            SoftReference<T> ref = map.get(cl);\n-            val = ref.get();\n-            if (val == null) {\n-                map.remove(cl);\n+        while (true) {\n+            processQueue();\n+\n+            CacheRef<T> ref = map.get(cl);\n+\n+            \/\/ Case 1: A recently created CacheRef.\n+            \/\/ We might still have strong referent, and can return it.\n+            \/\/ This guarantees progress for at least one thread on every CacheRef.\n+            \/\/ Clear the strong referent before returning to make the cache soft.\n+            T strongVal = ref.getStrong();\n+            if (strongVal != null) {\n+                ref.clearStrong();\n+                return strongVal;\n+            }\n+\n+            \/\/ Case 2: Older or recently cleared CacheRef.\n+            \/\/ Check if its soft referent is still available, and return it.\n+            T val = ref.get();\n+            if (val != null) {\n+                return val;\n@@ -76,2 +102,5 @@\n-        } while (val == null);\n-        return val;\n+\n+            \/\/ Case 3: The reference was cleared.\n+            \/\/ Clear the mapping and retry.\n+            map.remove(cl);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/io\/ClassCache.java","additions":41,"deletions":12,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @see     java.awt.FileDialog#setFilenameFilter(java.io.FilenameFilter)\n+ * @see     java.desktop\/java.awt.FileDialog#setFilenameFilter(java.io.FilenameFilter)\n@@ -42,0 +42,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/io\/FilenameFilter.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,3 +152,1 @@\n-                if (b != null) {\n-                    b[off + i] = (byte)c;\n-                }\n+                b[off + i] = (byte)c;\n","filename":"src\/java.base\/share\/classes\/java\/io\/LineNumberInputStream.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1998,0 +1998,4 @@\n+        } catch (IllegalAccessError aie) {\n+            IOException ice = new InvalidClassException(aie.getMessage());\n+            ice.initCause(aie);\n+            throw ice;\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -659,1 +659,1 @@\n-     * {@code readClassDescriptor}, should then be overridden to\n+     * {@link ObjectInputStream#readClassDescriptor readClassDescriptor}, should then be overridden to\n@@ -662,1 +662,2 @@\n-     * defined in the Object Serialization specification.\n+     * defined in the <a href=\"{@docRoot}\/..\/specs\/serialization\/index.html\">\n+     * <cite>Java Object Serialization Specification<\/cite><\/a>.\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,2 @@\n- * <cite>Java Object Serialization Specification<\/cite>. This\n+ * <a href=\"{@docRoot}\/..\/specs\/serialization\/output.html\">\n+ * <cite>Java Object Serialization Specification<\/cite><\/a>. This\n","filename":"src\/java.base\/share\/classes\/java\/io\/Serial.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -10305,1 +10305,1 @@\n-     * @see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n+     * @see     java.compiler\/javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n@@ -10308,0 +10308,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -10334,1 +10335,1 @@\n-     * @see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n+     * @see     java.compiler\/javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n@@ -10337,0 +10338,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -10371,1 +10373,1 @@\n-     * @see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n+     * @see     java.compiler\/javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n@@ -10374,0 +10376,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -10404,1 +10407,1 @@\n-     * @see     javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n+     * @see     java.compiler\/javax.lang.model.SourceVersion#isIdentifier(CharSequence)\n@@ -10407,0 +10410,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Character.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1735,0 +1735,9 @@\n+     * The canonical name for a primitive class is the keyword for the\n+     * corresponding primitive type ({@code byte}, {@code short},\n+     * {@code char}, {@code int}, and so on).\n+     *\n+     * <p>An array type has a canonical name if and only if its\n+     * component type has a canonical name. When an array type has a\n+     * canonical name, it is equal to the canonical name of the\n+     * component type followed by \"{@code []}\".\n+     *\n@@ -1737,0 +1746,1 @@\n+     * @jls 6.7 Fully Qualified Names and Canonical Names\n@@ -4478,0 +4488,3 @@\n+     * @throws UnsupportedOperationException if this component type is {@linkplain\n+     *         Void#TYPE void} or if the number of dimensions of the resulting array\n+     *         type would exceed 255.\n@@ -4479,0 +4492,2 @@\n+     * @jvms 4.3.2 Field Descriptors\n+     * @jvms 4.4.1 The {@code CONSTANT_Class_info} Structure\n@@ -4483,1 +4498,5 @@\n-        return Array.newInstance(this, 0).getClass();\n+        try {\n+            return Array.newInstance(this, 0).getClass();\n+        } catch (IllegalArgumentException iae) {\n+            throw new UnsupportedOperationException(iae);\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1609,0 +1609,6 @@\n+     * <p>\n+     * In cases where this method is called from a context where the caller is\n+     * not a subclass of {@code ClassLoader} or there is no caller frame on the\n+     * stack (e.g. when called directly from a JNI attached thread),\n+     * {@code IllegalCallerException} is thrown.\n+     * <\/p>\n@@ -1612,0 +1618,1 @@\n+     * @throws IllegalCallerException if the caller is not a subclass of {@code ClassLoader}\n@@ -1625,0 +1632,3 @@\n+        if ((caller == null) || !ClassLoader.class.isAssignableFrom(caller)) {\n+            throw new IllegalCallerException(caller + \" not a subclass of ClassLoader\");\n+        }\n@@ -2388,1 +2398,1 @@\n-    private final NativeLibraries libraries = NativeLibraries.jniNativeLibraries(this);\n+    private final NativeLibraries libraries = NativeLibraries.newInstance(this);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,3 @@\n- * ignored, including {@code serialVersionUID}; see the <cite>Java\n- * Object Serialization Specification<\/cite> for details.\n+ * ignored, including {@code serialVersionUID}; see the\n+ * <a href=\"{@docRoot}\/..\/specs\/serialization\/index.html\"><cite>Java\n+ * Object Serialization Specification<\/cite><\/a> for details.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Enum.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,13 +104,0 @@\n-    \/**\n-     * Constant by which to multiply an angular value in degrees to obtain an\n-     * angular value in radians.\n-     *\/\n-    private static final double DEGREES_TO_RADIANS = 0.017453292519943295;\n-\n-    \/**\n-     * Constant by which to multiply an angular value in radians to obtain an\n-     * angular value in degrees.\n-     *\/\n-\n-    private static final double RADIANS_TO_DEGREES = 57.29577951308232;\n-\n@@ -400,1 +387,1 @@\n-     * @param increment value to add when the argument is non-integral\n+     * @param sign the sign of the result\n@@ -411,2 +398,2 @@\n-             * floorOrceil(-0.0) => -0.0\n-             * floorOrceil(+0.0) => +0.0\n+             * floorOrCeil(-0.0) => -0.0\n+             * floorOrCeil(+0.0) => +0.0\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StrictMath.java","additions":4,"deletions":17,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -233,1 +233,1 @@\n-     * Object Serialization Specification, Section 6.2, \"Stream Elements\"<\/a>\n+     * <cite>Java Object Serialization Specification<\/cite>, Section 6.2, \"Stream Elements\"<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,9 +32,3 @@\n- * Indicates that the named compiler warnings should be suppressed in the\n- * annotated element (and in all program elements contained in the annotated\n- * element).  Note that the set of warnings suppressed in a given element is\n- * a superset of the warnings suppressed in all containing elements.  For\n- * example, if you annotate a class to suppress one warning and annotate a\n- * method to suppress another, both warnings will be suppressed in the method.\n- * However, note that if a warning is suppressed in a {@code\n- * module-info} file, the suppression applies to elements within the\n- * file and <em>not<\/em> to types contained within the module.\n+ * Indicates the warnings to be suppressed at compile time in the\n+ * annotated element, and in all elements contained in the annotated\n+ * element.\n@@ -42,2 +36,5 @@\n- * <p>As a matter of style, programmers should always use this annotation\n- * on the most deeply nested element where it is effective.  If you want to\n+ * <p>The {@code SuppressWarnings} annotation interface is applicable\n+ * in all declaration contexts, so an {@code @SuppressWarnings}\n+ * annotation can be used on any element.  As a matter of style,\n+ * programmers should always use this annotation on the most deeply\n+ * nested element where it is effective. For example, if you want to\n@@ -47,0 +44,34 @@\n+ * <p>The set of warnings suppressed in a given element is a union of\n+ * the warnings suppressed in all containing elements.  For example,\n+ * if you annotate a class to suppress one warning and annotate a\n+ * method in the class to suppress another, both warnings will be\n+ * suppressed in the method.  However, note that if a warning is\n+ * suppressed in a {@code module-info} file, the suppression applies\n+ * to elements within the file and <em>not<\/em> to types contained\n+ * within the module.  Likewise, if a warning is suppressed in a\n+ * {@code package-info} file, the suppression applies to elements\n+ * within the file and <em>not<\/em> to types contained within the\n+ * package.\n+ *\n+ * <p>Java compilers must recognize all the kinds of warnings defined\n+ * in the <cite>Java Language Specification<\/cite> (JLS section {@jls\n+ * 9.6.4.5}) which include:\n+ *\n+ * <ul>\n+ * <li> Unchecked warnings, specified by the string {@code \"unchecked\"}.\n+ * <li> Deprecation warnings, specified by the string {@code \"deprecation\"}.\n+ * <li> Removal warnings, specified by the string {@code \"removal\"}.\n+ * <li> Preview warnings, specified by the string {@code \"preview\"}.\n+ * <\/ul>\n+ *\n+ * Whether or not a Java compiler recognizes other strings is a\n+ * quality of implementation concern.  Compiler vendors should\n+ * document the additional warning names they support.  Vendors are\n+ * encouraged to cooperate to ensure that the same names work across\n+ * multiple compilers.\n+ *\n+ * @implNote\n+ * In addition to the mandated suppression strings, the {@code javac}\n+ * reference implementation recognizes compilation-related warning\n+ * names documented in its {@code --help-lint} output.\n+ *\n@@ -55,1 +86,1 @@\n-@Target({TYPE, FIELD, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE, MODULE})\n+\/\/ Implicitly target all declaration contexts by omitting a @Target annotation\n@@ -66,6 +97,0 @@\n-     *\n-     * <p> The string {@code \"unchecked\"} is used to suppress\n-     * unchecked warnings. Compiler vendors should document the\n-     * additional warning names they support in conjunction with this\n-     * annotation type. They are encouraged to cooperate to ensure\n-     * that the same names work across multiple compilers.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/SuppressWarnings.java","additions":44,"deletions":19,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1210,1 +1210,1 @@\n-         * {@linkplain java.util.logging.Level  java.util.logging levels}\n+         * {@linkplain java.logging\/java.util.logging.Level  java.util.logging levels}\n@@ -1222,1 +1222,1 @@\n-         *     <td>{@link java.util.logging.Level#ALL ALL}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#ALL ALL}<\/td>\n@@ -1224,1 +1224,1 @@\n-         *     <td>{@link java.util.logging.Level#FINER FINER}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#FINER FINER}<\/td>\n@@ -1226,1 +1226,1 @@\n-         *     <td>{@link java.util.logging.Level#FINE FINE}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#FINE FINE}<\/td>\n@@ -1228,1 +1228,1 @@\n-         *     <td>{@link java.util.logging.Level#INFO INFO}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#INFO INFO}<\/td>\n@@ -1230,1 +1230,1 @@\n-         *     <td>{@link java.util.logging.Level#WARNING WARNING}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#WARNING WARNING}<\/td>\n@@ -1232,1 +1232,1 @@\n-         *     <td>{@link java.util.logging.Level#SEVERE SEVERE}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#SEVERE SEVERE}<\/td>\n@@ -1234,1 +1234,1 @@\n-         *     <td>{@link java.util.logging.Level#OFF OFF}<\/td>\n+         *     <td>{@link java.logging\/java.util.logging.Level#OFF OFF}<\/td>\n@@ -1243,0 +1243,1 @@\n+        @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -1545,1 +1546,1 @@\n-     * that will route log messages to a {@link java.util.logging.Logger\n+     * that will route log messages to a {@link java.logging\/java.util.logging.Logger\n@@ -1559,1 +1560,1 @@\n-     * {@link java.util.logging java.util.logging} for logging configuration.\n+     * {@link java.logging\/java.util.logging java.util.logging} for logging configuration.\n@@ -1594,1 +1595,1 @@\n-     * {@linkplain java.util.logging.Level java.util.logging} levels\n+     * {@linkplain java.logging\/java.util.logging.Level java.util.logging} levels\n@@ -1603,0 +1604,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,0 @@\n-import java.lang.ref.Reference;\n-import java.lang.ref.ReferenceQueue;\n-import java.lang.ref.WeakReference;\n@@ -36,2 +33,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n@@ -1675,2 +1670,0 @@\n-    \/* Replace with ConcurrentReferenceHashMap when\/if it appears in a future\n-     * release *\/\n@@ -1679,6 +1672,7 @@\n-        static final ConcurrentMap<WeakClassKey,Boolean> subclassAudits =\n-            new ConcurrentHashMap<>();\n-\n-        \/** queue for WeakReferences to audited subclasses *\/\n-        static final ReferenceQueue<Class<?>> subclassAuditsQueue =\n-            new ReferenceQueue<>();\n+        static final ClassValue<Boolean> subclassAudits =\n+            new ClassValue<>() {\n+                @Override\n+                protected Boolean computeValue(Class<?> type) {\n+                    return auditSubclass(type);\n+                }\n+            };\n@@ -1697,9 +1691,1 @@\n-        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n-        WeakClassKey key = new WeakClassKey(cl, Caches.subclassAuditsQueue);\n-        Boolean result = Caches.subclassAudits.get(key);\n-        if (result == null) {\n-            result = Boolean.valueOf(auditSubclass(cl));\n-            Caches.subclassAudits.putIfAbsent(key, result);\n-        }\n-\n-        return result.booleanValue();\n+        return Caches.subclassAudits.get(cl);\n@@ -1979,2 +1965,2 @@\n-        return uncaughtExceptionHandler != null ?\n-            uncaughtExceptionHandler : group;\n+        UncaughtExceptionHandler handler = this.uncaughtExceptionHandler;\n+        return handler != null ? handler : group;\n@@ -2011,63 +1997,0 @@\n-    \/**\n-     * Removes from the specified map any keys that have been enqueued\n-     * on the specified reference queue.\n-     *\/\n-    static void processQueue(ReferenceQueue<Class<?>> queue,\n-                             ConcurrentMap<? extends\n-                             WeakReference<Class<?>>, ?> map)\n-    {\n-        Reference<? extends Class<?>> ref;\n-        while((ref = queue.poll()) != null) {\n-            map.remove(ref);\n-        }\n-    }\n-\n-    \/**\n-     *  Weak key for Class objects.\n-     **\/\n-    static class WeakClassKey extends WeakReference<Class<?>> {\n-        \/**\n-         * saved value of the referent's identity hash code, to maintain\n-         * a consistent hash code after the referent has been cleared\n-         *\/\n-        private final int hash;\n-\n-        \/**\n-         * Create a new WeakClassKey to the given object, registered\n-         * with a queue.\n-         *\/\n-        WeakClassKey(Class<?> cl, ReferenceQueue<Class<?>> refQueue) {\n-            super(cl, refQueue);\n-            hash = System.identityHashCode(cl);\n-        }\n-\n-        \/**\n-         * Returns the identity hash code of the original referent.\n-         *\/\n-        @Override\n-        public int hashCode() {\n-            return hash;\n-        }\n-\n-        \/**\n-         * Returns true if the given object is this identical\n-         * WeakClassKey instance, or, if this object's referent has not\n-         * been cleared, if the given object is another WeakClassKey\n-         * instance with the identical non-null referent as this one.\n-         *\/\n-        @Override\n-        public boolean equals(Object obj) {\n-            if (obj == this)\n-                return true;\n-\n-            if (obj instanceof WeakClassKey) {\n-                Class<?> referent = get();\n-                return (referent != null) &&\n-                        (((WeakClassKey) obj).refersTo(referent));\n-            } else {\n-                return false;\n-            }\n-        }\n-    }\n-\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":11,"deletions":88,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,3 @@\n+\n+import jdk.internal.access.JavaLangReflectAccess;\n+import jdk.internal.access.SharedSecrets;\n@@ -33,1 +36,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n@@ -91,1 +93,1 @@\n-     * in the style of {@link java.awt.AWTEventMulticaster}.\n+     * in the style of {@link java.desktop\/java.awt.AWTEventMulticaster}.\n@@ -155,1 +157,2 @@\n-    @SuppressWarnings(\"removal\")\n+    @SuppressWarnings({\"removal\",\n+                       \"doclint:reference\"}) \/\/ cross-module links\n@@ -187,2 +190,0 @@\n-        final ConcurrentHashMap<Method, MethodHandle> defaultMethodMap =\n-                hasDefaultMethods(intfc) ? new ConcurrentHashMap<>() : null;\n@@ -205,1 +206,2 @@\n-                        return callDefaultMethod(defaultMethodMap, proxy, intfc, method, args);\n+                        \/\/ no additional access check is performed\n+                        return JLRA.invokeDefault(proxy, method, args, null);\n@@ -295,1 +297,1 @@\n-            case \"toString\" -> self.getClass().getName() + \"@\" + Integer.toHexString(self.hashCode());\n+            case \"toString\" -> java.util.Objects.toIdentityString(self);\n@@ -323,33 +325,1 @@\n-    private static boolean hasDefaultMethods(Class<?> intfc) {\n-        for (Method m : intfc.getMethods()) {\n-            if (!isObjectMethod(m) &&\n-                !Modifier.isAbstract(m.getModifiers())) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    private static Object callDefaultMethod(ConcurrentHashMap<Method, MethodHandle> defaultMethodMap,\n-                             Object self, Class<?> intfc, Method m, Object[] args) throws Throwable {\n-        assert(isDefaultMethod(m) && !isObjectMethod(m)) : m;\n-\n-        \/\/ Lazily compute the associated method handle from the method\n-        MethodHandle dmh = defaultMethodMap.computeIfAbsent(m, mk -> {\n-            try {\n-                \/\/ Look up the default method for special invocation thereby\n-                \/\/ avoiding recursive invocation back to the proxy\n-                MethodHandle mh = MethodHandles.Lookup.IMPL_LOOKUP.findSpecial(\n-                        intfc, mk.getName(),\n-                        MethodType.methodType(mk.getReturnType(), mk.getParameterTypes()),\n-                        self.getClass());\n-                return mh.asSpreader(Object[].class, mk.getParameterCount());\n-            } catch (NoSuchMethodException | IllegalAccessException e) {\n-                \/\/ The method is known to exist and should be accessible, this\n-                \/\/ method would not be called unless the invokeinterface to the\n-                \/\/ default (public) method passed access control checks\n-                throw new InternalError(e);\n-            }\n-        });\n-        return dmh.invoke(self, args);\n-    }\n+    private static final JavaLangReflectAccess JLRA = SharedSecrets.getJavaLangReflectAccess();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleProxies.java","additions":11,"deletions":41,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,0 +112,6 @@\n+     * In cases where {@code MethodHandles.lookup} is called from a context where\n+     * there is no caller frame on the stack (e.g. when called directly\n+     * from a JNI attached thread), {@code IllegalCallerException} is thrown.\n+     * To obtain a {@link Lookup lookup object} in such a context, use an auxiliary class that will\n+     * implicitly be identified as the caller, or use {@link MethodHandles#publicLookup()}\n+     * to obtain a low-privileged lookup instead.\n@@ -115,0 +121,1 @@\n+     * @throws IllegalCallerException if there is no caller frame on the stack.\n@@ -119,1 +126,5 @@\n-        return new Lookup(Reflection.getCallerClass());\n+        final Class<?> c = Reflection.getCallerClass();\n+        if (c == null) {\n+            throw new IllegalCallerException(\"no caller frame\");\n+        }\n+        return new Lookup(c);\n@@ -2005,1 +2016,1 @@\n-         * is not {@linkplain java.lang.instrument.Instrumentation#isModifiableClass(Class)\n+         * is not {@linkplain java.instrument\/java.lang.instrument.Instrumentation#isModifiableClass(Class)\n@@ -2108,0 +2119,1 @@\n+        @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -112,1 +112,3 @@\n-        MemberName mn = getMemberNameOrNull(mode);\n+        \/\/ Can be simplified by calling getMemberNameOrNull, but written in this\n+        \/\/ form to improve interpreter\/coldpath performance.\n+        MemberName mn = memberName_table[mode];\n@@ -114,1 +116,4 @@\n-            throw new UnsupportedOperationException();\n+            mn = resolveMemberName(mode);\n+            if (mn == null) {\n+                throw new UnsupportedOperationException();\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarForm.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,0 +171,9 @@\n+     * <p> This method may be used by <a href=\"{@docRoot}\/..\/specs\/jni\/index.html\">JNI code<\/a>\n+     * with no caller class on the stack to enable access to a {@link Member member}\n+     * of {@link Member#getDeclaringClass() declaring class} {@code D} if and only if:\n+     * <ul>\n+     *     <li> The member is {@code public} and {@code D} is {@code public} in\n+     *     a package that the module containing {@code D} {@link\n+     *     Module#isExported(String,Module) exports} unconditionally. <\/li>\n+     * <\/ul>\n+     *\n@@ -249,0 +258,5 @@\n+     * <p> If this method is invoked by <a href=\"{@docRoot}\/..\/specs\/jni\/index.html\">JNI code<\/a>\n+     * with no caller class on the stack, the {@code accessible} flag can\n+     * only be set if the member and the declaring class are public, and\n+     * the class is in a package that is exported unconditionally. <\/p>\n+     *\n@@ -307,0 +321,10 @@\n+        if (caller == null) {\n+            \/\/ No caller frame when a native thread attaches to the VM\n+            \/\/ only allow access to a public accessible member\n+            boolean canAccess = Reflection.verifyPublicMemberAccess(declaringClass, declaringClass.getModifiers());\n+            if (!canAccess && throwExceptionIfDenied) {\n+                throwInaccessibleObjectException(caller, declaringClass);\n+            }\n+            return canAccess;\n+        }\n+\n@@ -315,6 +339,1 @@\n-        int modifiers;\n-        if (this instanceof Executable) {\n-            modifiers = ((Executable) this).getModifiers();\n-        } else {\n-            modifiers = ((Field) this).getModifiers();\n-        }\n+        int modifiers = ((Member)this).getModifiers();\n@@ -344,15 +363,1 @@\n-            \/\/ not accessible\n-            String msg = \"Unable to make \";\n-            if (this instanceof Field)\n-                msg += \"field \";\n-            msg += this + \" accessible: \" + declaringModule + \" does not \\\"\";\n-            if (isClassPublic && Modifier.isPublic(modifiers))\n-                msg += \"exports\";\n-            else\n-                msg += \"opens\";\n-            msg += \" \" + pn + \"\\\" to \" + callerModule;\n-            InaccessibleObjectException e = new InaccessibleObjectException(msg);\n-            if (printStackTraceWhenAccessFails()) {\n-                e.printStackTrace(System.err);\n-            }\n-            throw e;\n+            throwInaccessibleObjectException(caller, declaringClass);\n@@ -363,0 +368,26 @@\n+    private void throwInaccessibleObjectException(Class<?> caller, Class<?> declaringClass) {\n+        boolean isClassPublic = Modifier.isPublic(declaringClass.getModifiers());\n+        String pn = declaringClass.getPackageName();\n+        int modifiers = ((Member)this).getModifiers();\n+\n+        \/\/ not accessible\n+        String msg = \"Unable to make \";\n+        if (this instanceof Field)\n+            msg += \"field \";\n+        msg += this + \" accessible\";\n+        msg += caller == null ? \" by JNI attached native thread with no caller frame: \" : \": \";\n+        msg += declaringClass.getModule() + \" does not \\\"\";\n+        if (isClassPublic && Modifier.isPublic(modifiers))\n+            msg += \"exports\";\n+        else\n+            msg += \"opens\";\n+        msg += \" \" + pn + \"\\\"\" ;\n+        if (caller != null)\n+            msg += \" to \" + caller.getModule();\n+        InaccessibleObjectException e = new InaccessibleObjectException(msg);\n+        if (printStackTraceWhenAccessFails()) {\n+            e.printStackTrace(System.err);\n+        }\n+        throw e;\n+    }\n+\n@@ -412,1 +443,5 @@\n-     * with the variation noted in the class description. <\/p>\n+     * with the variation noted in the class description.\n+     * If this method is invoked by <a href=\"{@docRoot}\/..\/specs\/jni\/index.html\">JNI code<\/a>\n+     * with no caller class on the stack, this method returns {@code true}\n+     * if the member and the declaring class are public, and the class is in\n+     * a package that is exported unconditionally. <\/p>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessibleObject.java","additions":58,"deletions":23,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.invoke.MethodHandle;\n@@ -265,28 +264,1 @@\n-\n-        \/\/ verify that the object is actually a proxy instance\n-        if (!Proxy.isProxyClass(proxy.getClass())) {\n-            throw new IllegalArgumentException(\"'proxy' is not a proxy instance\");\n-        }\n-        if (!method.isDefault()) {\n-            throw new IllegalArgumentException(\"\\\"\" + method + \"\\\" is not a default method\");\n-        }\n-        @SuppressWarnings(\"unchecked\")\n-        Class<? extends Proxy> proxyClass = (Class<? extends Proxy>)proxy.getClass();\n-\n-        Class<?> intf = method.getDeclaringClass();\n-        \/\/ access check on the default method\n-        method.checkAccess(Reflection.getCallerClass(), intf, proxyClass, method.getModifiers());\n-\n-        MethodHandle mh = Proxy.defaultMethodHandle(proxyClass, method);\n-        \/\/ invoke the super method\n-        try {\n-            \/\/ the args array can be null if the number of formal parameters required by\n-            \/\/ the method is zero (consistent with Method::invoke)\n-            Object[] params = args != null ? args : Proxy.EMPTY_ARGS;\n-            return mh.invokeExact(proxy, params);\n-        } catch (ClassCastException | NullPointerException e) {\n-            throw new IllegalArgumentException(e.getMessage(), e);\n-        } catch (Proxy.InvocationException e) {\n-            \/\/ unwrap and throw the exception thrown by the default method\n-            throw e.getCause();\n-        }\n+        return Proxy.invokeDefault(proxy, method, args, Reflection.getCallerClass());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/InvocationHandler.java","additions":1,"deletions":29,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1317,0 +1317,40 @@\n+    \/*\n+     * Invoke the default method of the given proxy with an explicit caller class.\n+     *\n+     * @throws IllegalAccessException if the proxy interface is inaccessible to the caller\n+     *         if caller is non-null\n+     *\/\n+    static Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller)\n+            throws Throwable {\n+        \/\/ verify that the object is actually a proxy instance\n+        if (!Proxy.isProxyClass(proxy.getClass())) {\n+            throw new IllegalArgumentException(\"'proxy' is not a proxy instance\");\n+        }\n+        if (!method.isDefault()) {\n+            throw new IllegalArgumentException(\"\\\"\" + method + \"\\\" is not a default method\");\n+        }\n+        @SuppressWarnings(\"unchecked\")\n+        Class<? extends Proxy> proxyClass = (Class<? extends Proxy>)proxy.getClass();\n+\n+        \/\/ skip access check if caller is null\n+        if (caller != null) {\n+            Class<?> intf = method.getDeclaringClass();\n+            \/\/ access check on the default method\n+            method.checkAccess(caller, intf, proxyClass, method.getModifiers());\n+        }\n+\n+        MethodHandle mh = Proxy.defaultMethodHandle(proxyClass, method);\n+        \/\/ invoke the super method\n+        try {\n+            \/\/ the args array can be null if the number of formal parameters required by\n+            \/\/ the method is zero (consistent with Method::invoke)\n+            Object[] params = args != null ? args : Proxy.EMPTY_ARGS;\n+            return mh.invokeExact(proxy, params);\n+        } catch (ClassCastException | NullPointerException e) {\n+            throw new IllegalArgumentException(e.getMessage(), e);\n+        } catch (Proxy.InvocationException e) {\n+            \/\/ unwrap and throw the exception thrown by the default method\n+            throw e.getCause();\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Proxy.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -130,0 +130,5 @@\n+\n+    public Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller)\n+            throws Throwable {\n+        return Proxy.invokeDefault(proxy, method, args, caller);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ReflectAccess.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.ForkJoinWorkerThread;\n+import java.util.concurrent.RecursiveTask;\n@@ -1584,1 +1587,24 @@\n-        return multiply(val, false);\n+        return multiply(val, false, false, 0);\n+    }\n+\n+    \/**\n+     * Returns a BigInteger whose value is {@code (this * val)}.\n+     * When both {@code this} and {@code val} are large, typically\n+     * in the thousands of bits, parallel multiply might be used.\n+     * This method returns the exact same mathematical result as\n+     * {@link #multiply}.\n+     *\n+     * @implNote This implementation may offer better algorithmic\n+     * performance when {@code val == this}.\n+     *\n+     * @implNote Compared to {@link #multiply}, an implementation's\n+     * parallel multiplication algorithm would typically use more\n+     * CPU resources to compute the result faster, and may do so\n+     * with a slight increase in memory consumption.\n+     *\n+     * @param  val value to be multiplied by this BigInteger.\n+     * @return {@code this * val}\n+     * @see #multiply\n+     *\/\n+    public BigInteger parallelMultiply(BigInteger val) {\n+        return multiply(val, false, true, 0);\n@@ -1593,0 +1619,1 @@\n+     * @param  parallel whether the multiply should be done in parallel\n@@ -1595,1 +1622,1 @@\n-    private BigInteger multiply(BigInteger val, boolean isRecursion) {\n+    private BigInteger multiply(BigInteger val, boolean isRecursion, boolean parallel, int depth) {\n@@ -1602,1 +1629,1 @@\n-            return square();\n+            return square(true, parallel, depth);\n@@ -1680,1 +1707,1 @@\n-                return multiplyToomCook3(this, val);\n+                return multiplyToomCook3(this, val, parallel, depth);\n@@ -1847,0 +1874,82 @@\n+    @SuppressWarnings(\"serial\")\n+    private abstract static sealed class RecursiveOp extends RecursiveTask<BigInteger> {\n+        \/**\n+         * The threshold until when we should continue forking recursive ops\n+         * if parallel is true. This threshold is only relevant for Toom Cook 3\n+         * multiply and square.\n+         *\/\n+        private static final int PARALLEL_FORK_DEPTH_THRESHOLD =\n+                calculateMaximumDepth(ForkJoinPool.getCommonPoolParallelism());\n+\n+        private static final int calculateMaximumDepth(int parallelism) {\n+            return 32 - Integer.numberOfLeadingZeros(parallelism);\n+        }\n+\n+        final boolean parallel;\n+        \/**\n+         * The current recursing depth. Since it is a logarithmic algorithm,\n+         * we do not need an int to hold the number.\n+         *\/\n+        final byte depth;\n+\n+        private RecursiveOp(boolean parallel, int depth) {\n+            this.parallel = parallel;\n+            this.depth = (byte) depth;\n+        }\n+\n+        private static int getParallelForkDepthThreshold() {\n+            if (Thread.currentThread() instanceof ForkJoinWorkerThread fjwt) {\n+                return calculateMaximumDepth(fjwt.getPool().getParallelism());\n+            }\n+            else {\n+                return PARALLEL_FORK_DEPTH_THRESHOLD;\n+            }\n+        }\n+\n+        protected RecursiveTask<BigInteger> forkOrInvoke() {\n+            if (parallel && depth <= getParallelForkDepthThreshold()) fork();\n+            else invoke();\n+            return this;\n+        }\n+\n+        @SuppressWarnings(\"serial\")\n+        private static final class RecursiveMultiply extends RecursiveOp {\n+            private final BigInteger a;\n+            private final BigInteger b;\n+\n+            public RecursiveMultiply(BigInteger a, BigInteger b, boolean parallel, int depth) {\n+                super(parallel, depth);\n+                this.a = a;\n+                this.b = b;\n+            }\n+\n+            @Override\n+            public BigInteger compute() {\n+                return a.multiply(b, true, parallel, depth);\n+            }\n+        }\n+\n+        @SuppressWarnings(\"serial\")\n+        private static final class RecursiveSquare extends RecursiveOp {\n+            private final BigInteger a;\n+\n+            public RecursiveSquare(BigInteger a, boolean parallel, int depth) {\n+                super(parallel, depth);\n+                this.a = a;\n+            }\n+\n+            @Override\n+            public BigInteger compute() {\n+                return a.square(true, parallel, depth);\n+            }\n+        }\n+\n+        private static RecursiveTask<BigInteger> multiply(BigInteger a, BigInteger b, boolean parallel, int depth) {\n+            return new RecursiveMultiply(a, b, parallel, depth).forkOrInvoke();\n+        }\n+\n+        private static RecursiveTask<BigInteger> square(BigInteger a, boolean parallel, int depth) {\n+            return new RecursiveSquare(a, parallel, depth).forkOrInvoke();\n+        }\n+    }\n+\n@@ -1875,1 +1984,1 @@\n-    private static BigInteger multiplyToomCook3(BigInteger a, BigInteger b) {\n+    private static BigInteger multiplyToomCook3(BigInteger a, BigInteger b, boolean parallel, int depth) {\n@@ -1899,1 +2008,2 @@\n-        v0 = a0.multiply(b0, true);\n+        depth++;\n+        var v0_task = RecursiveOp.multiply(a0, b0, parallel, depth);\n@@ -1902,1 +2012,1 @@\n-        vm1 = da1.subtract(a1).multiply(db1.subtract(b1), true);\n+        var vm1_task = RecursiveOp.multiply(da1.subtract(a1), db1.subtract(b1), parallel, depth);\n@@ -1905,1 +2015,1 @@\n-        v1 = da1.multiply(db1, true);\n+        var v1_task = RecursiveOp.multiply(da1, db1, parallel, depth);\n@@ -1907,2 +2017,5 @@\n-             db1.add(b2).shiftLeft(1).subtract(b0), true);\n-        vinf = a2.multiply(b2, true);\n+             db1.add(b2).shiftLeft(1).subtract(b0), true, parallel, depth);\n+        vinf = a2.multiply(b2, true, parallel, depth);\n+        v0 = v0_task.join();\n+        vm1 = vm1_task.join();\n+        v1 = v1_task.join();\n@@ -2074,1 +2187,1 @@\n-        return square(false);\n+        return square(false, false, 0);\n@@ -2084,1 +2197,1 @@\n-    private BigInteger square(boolean isRecursion) {\n+    private BigInteger square(boolean isRecursion, boolean parallel, int depth) {\n@@ -2106,1 +2219,1 @@\n-                return squareToomCook3();\n+                return squareToomCook3(parallel, depth);\n@@ -2240,1 +2353,1 @@\n-    private BigInteger squareToomCook3() {\n+    private BigInteger squareToomCook3(boolean parallel, int depth) {\n@@ -2257,1 +2370,2 @@\n-        v0 = a0.square(true);\n+        depth++;\n+        var v0_fork = RecursiveOp.square(a0, parallel, depth);\n@@ -2259,1 +2373,1 @@\n-        vm1 = da1.subtract(a1).square(true);\n+        var vm1_fork = RecursiveOp.square(da1.subtract(a1), parallel, depth);\n@@ -2261,3 +2375,6 @@\n-        v1 = da1.square(true);\n-        vinf = a2.square(true);\n-        v2 = da1.add(a2).shiftLeft(1).subtract(a0).square(true);\n+        var v1_fork = RecursiveOp.square(da1, parallel, depth);\n+        vinf = a2.square(true, parallel, depth);\n+        v2 = da1.add(a2).shiftLeft(1).subtract(a0).square(true, parallel, depth);\n+        v0 = v0_fork.join();\n+        vm1 = vm1_fork.join();\n+        v1 = v1_fork.join();\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":136,"deletions":19,"binary":false,"changes":155,"status":"modified"},{"patch":"@@ -948,1 +948,1 @@\n-                   (b.value[y+b.offset] & LONG_MASK) - ((int)-(diff>>32));\n+                   (b.value[y+b.offset] & LONG_MASK) + (diff >> 32);\n@@ -954,1 +954,1 @@\n-            diff = (a.value[x+a.offset] & LONG_MASK) - ((int)-(diff>>32));\n+            diff = (a.value[x+a.offset] & LONG_MASK) + (diff >> 32);\n@@ -989,1 +989,1 @@\n-                (b.value[b.offset+ y] & LONG_MASK) - ((int)-(diff>>32));\n+                (b.value[b.offset+ y] & LONG_MASK) + (diff >> 32);\n@@ -993,1 +993,1 @@\n-        while (x > 0) {\n+        while (diff < 0 && x > 0) {\n@@ -995,1 +995,1 @@\n-            diff = (a.value[a.offset+ x] & LONG_MASK) - ((int)-(diff>>32));\n+            diff = (a.value[a.offset+ x] & LONG_MASK) + (diff >> 32);\n","filename":"src\/java.base\/share\/classes\/java\/math\/MutableBigInteger.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -179,0 +179,10 @@\n+\t<LI><P><B>{@systemProperty http.keepAlive.time.server}<\/B> and\n+        <B>{@systemProperty http.keepAlive.time.proxy}<\/B> <\/P>\n+\t<P>These properties modify the behavior of the HTTP keepalive cache in the case\n+        where the server (or proxy) has not specified a keepalive time. If the\n+        property is set in this case, then idle connections will be closed after the \n+        specified number of seconds. If the property is set, and the server does\n+        specify a keepalive time in a \"Keep-Alive\" response header, then the time specified \n+        by the server is used. If the property is not set and also the server\n+        does not specify a keepalive time, then connections are kept alive for an\n+        implementation defined time, assuming {@code http.keepAlive} is {@code true}.<\/P>\n@@ -217,0 +227,16 @@\n+\t<LI><P><B>{@systemProperty jdk.https.negotiate.cbt}<\/B> (default: &lt;never&gt;)<BR>\n+\tThis controls the generation and sending of TLS channel binding tokens (CBT) when Kerberos \n+        or the Negotiate authentication scheme using Kerberos are employed over HTTPS with\n+        {@code HttpsURLConnection}. There are three possible settings:<\/P>\n+        <OL>\n+          <LI><P>\"never\". This is also the default value if the property is not set. In this case,\n+              CBTs are never sent.<\/P>\n+          <LI><P>\"always\". CBTs are sent for all Kerberos authentication attempts over HTTPS.<\/P>\n+          <LI><P>\"domain:&lt;comma separated domain list&gt;\" Each domain in the list specifies destination\n+          host or hosts for which a CBT is sent. Domains can be single hosts like foo, or foo.com,\n+          or literal IP addresses as specified in RFC 2732, or wildcards like *.foo.com which matches \n+          all hosts under foo.com and its sub-domains. CBTs are not sent to any destinations \n+          that don't match one of the list entries<\/P>\n+\t<\/OL>\n+\t<P>The channel binding tokens generated are of the type \"tls-server-end-point\" as defined in\n+           RFC 5929.<\/P>\n","filename":"src\/java.base\/share\/classes\/java\/net\/doc-files\/net-properties.html","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n- *            {@linkplain java.net.http HTTP Client API}.<\/li>\n+ *            {@linkplain java.net.http\/java.net.http HTTP Client API}.<\/li>\n@@ -160,0 +160,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/net\/package-info.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-\n@@ -47,0 +46,1 @@\n+#if[rw]\n@@ -56,1 +56,0 @@\n-#if[rw]\n@@ -59,1 +58,0 @@\n-#end[rw]\n@@ -61,0 +59,1 @@\n+#end[rw]\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-import java.io.*;\n+import java.io.IOException;\n@@ -32,1 +32,4 @@\n-import java.nio.file.*;\n+import java.nio.file.FileAlreadyExistsException;\n+import java.nio.file.OpenOption;\n+import java.nio.file.Path;\n+import java.nio.file.StandardOpenOption;\n@@ -34,1 +37,1 @@\n-import java.nio.file.spi.*;\n+import java.nio.file.spi.FileSystemProvider;\n@@ -406,0 +409,3 @@\n+     *\n+     * @throws  NonWritableChannelException\n+     *          If this channel was not opened for writing\n@@ -420,0 +426,3 @@\n+     *\n+     * @throws  NonWritableChannelException\n+     *          If this channel was not opened for writing\n@@ -434,0 +443,3 @@\n+     *\n+     * @throws  NonWritableChannelException\n+     *          If this channel was not opened for writing\n@@ -557,2 +569,5 @@\n-     * this channel's file via the methods defined in this class.  It may or\n-     * may not force changes that were made by modifying the content of a\n+     * this channel's file via the methods defined in this class, or the methods\n+     * defined by {@link java.io.FileOutputStream} or\n+     * {@link java.io.RandomAccessFile} when the channel was obtained with the\n+     * {@code getChannel} method. It may or may not force changes that were made\n+     * by modifying the content of a\n@@ -1033,1 +1048,1 @@\n-     *          If {@code shared} is {@code true} this channel was not\n+     *          If {@code shared} is {@code true} but this channel was not\n@@ -1151,0 +1166,8 @@\n+     * @throws  NonReadableChannelException\n+     *          If {@code shared} is {@code true} but this channel was not\n+     *          opened for reading\n+     *\n+     * @throws  NonWritableChannelException\n+     *          If {@code shared} is {@code false} but this channel was not\n+     *          opened for writing\n+     *\n@@ -1183,0 +1206,3 @@\n+     * @throws  NonWritableChannelException\n+     *          If this channel was not opened for writing\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":33,"deletions":7,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -358,1 +358,2 @@\n-     *          were updated by the selection operation\n+     *          now indicate readiness for at least one category of operations\n+     *          for which the channel was not previously detected to be ready\n@@ -386,2 +387,3 @@\n-     * @return  The number of keys, possibly zero,\n-     *          whose ready-operation sets were updated\n+     * @return  The number of keys, possibly zero, whose ready-operation sets\n+     *          now indicate readiness for at least one category of operations\n+     *          for which the channel was not previously detected to be ready\n@@ -409,2 +411,3 @@\n-     * @return  The number of keys, possibly zero,\n-     *          whose ready-operation sets were updated\n+     * @return  The number of keys, possibly zero, whose ready-operation sets\n+     *          now indicate readiness for at least one category of operations\n+     *          for which the channel was not previously detected to be ready\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/Selector.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -826,1 +826,3 @@\n-     * <p> The file may be opened using the {@link\n+     * <p> As with the {@code File.createTempFile} methods, this method is only\n+     * part of a temporary-file facility. Where used as a <em>work file<\/em>,\n+     * the resulting file may be opened using the {@link\n@@ -828,3 +830,2 @@\n-     * file is deleted when the appropriate {@code close} method is invoked\n-     * either explicitly or via a try-with-resources statement. Alternatively,\n-     * a {@link Runtime#addShutdownHook shutdown-hook}, or the\n+     * file is deleted when the appropriate {@code close} method is invoked.\n+     * Alternatively, a {@link Runtime#addShutdownHook shutdown-hook}, or the\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -919,1 +919,0 @@\n-        Permission thisPerm;\n","filename":"src\/java.base\/share\/classes\/java\/security\/AccessControlContext.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n- * of the Serialization Specification for more information.\n+ * of the <cite>Java Object Serialization Specification<\/cite> for more information.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Key.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n- * of the Serialization Specification for more information.\n+ * of the <cite>Java Object Serialization Specification<\/cite> for more information.\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyRep.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1119,5 +1119,0 @@\n-    \/\/ utility method for getting a String with service type and algorithm\n-    private static String getKey(Service s) {\n-        return s.getType() + \".\" + s.getAlgorithm();\n-    }\n-\n@@ -1547,1 +1542,0 @@\n-        private volatile Class<?> constructorParameterClass;\n@@ -1554,8 +1548,0 @@\n-        Class<?> getConstructorParameterClass() throws ClassNotFoundException {\n-            Class<?> clazz = constructorParameterClass;\n-            if (clazz == null) {\n-                clazz = Class.forName(constructorParameterClassName);\n-                constructorParameterClass = clazz;\n-            }\n-            return clazz;\n-        }\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n- * subclasses, such as {@link java.awt.font.TextAttribute}.\n+ * subclasses, such as {@link java.desktop\/java.awt.font.TextAttribute}.\n@@ -73,1 +73,1 @@\n- * @see java.awt.font.TextAttribute\n+ * @see java.desktop\/java.awt.font.TextAttribute\n@@ -78,1 +78,1 @@\n-\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/text\/AttributedCharacterIterator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -124,3 +124,3 @@\n-     * @see java.awt.font.TextAttribute#BIDI_EMBEDDING\n-     * @see java.awt.font.TextAttribute#NUMERIC_SHAPING\n-     * @see java.awt.font.TextAttribute#RUN_DIRECTION\n+     * @see java.desktop\/java.awt.font.TextAttribute#BIDI_EMBEDDING\n+     * @see java.desktop\/java.awt.font.TextAttribute#NUMERIC_SHAPING\n+     * @see java.desktop\/java.awt.font.TextAttribute#RUN_DIRECTION\n@@ -128,0 +128,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/text\/Bidi.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -592,0 +592,4 @@\n+            if (checkIncrement(iPart, compactDataIndex, divisor)) {\n+                divisor = (Long) divisors.get(++compactDataIndex);\n+                iPart = getIntegerPart(number, divisor);\n+            }\n@@ -661,0 +665,4 @@\n+            if (checkIncrement(iPart, compactDataIndex, divisor)) {\n+                divisor = (Long) divisors.get(++compactDataIndex);\n+                iPart = getIntegerPart(number, divisor);\n+            }\n@@ -756,0 +764,4 @@\n+            if (checkIncrement(iPart, compactDataIndex, divisor.doubleValue())) {\n+                divisor = divisors.get(++compactDataIndex);\n+                iPart = getIntegerPart(number.doubleValue(), divisor.doubleValue());\n+            }\n@@ -823,0 +835,4 @@\n+            if (checkIncrement(iPart, compactDataIndex, divisor.doubleValue())) {\n+                divisor = divisors.get(++compactDataIndex);\n+                iPart = getIntegerPart(number.doubleValue(), divisor.doubleValue());\n+            }\n@@ -878,1 +894,1 @@\n-     * @param result the resulting string, where the pefix is to be appended\n+     * @param result the resulting string, where the prefix is to be appended\n@@ -913,1 +929,1 @@\n-     * @param positions a list of {@code FieldPostion} in the given\n+     * @param positions a list of {@code FieldPosition} in the given\n@@ -959,1 +975,1 @@\n-     * Returns a list of {@code FieldPostion} in the given {@code pattern}.\n+     * Returns a list of {@code FieldPosition} in the given {@code pattern}.\n@@ -962,1 +978,1 @@\n-     * @return a list of {@code FieldPostion}\n+     * @return a list of {@code FieldPosition}\n@@ -1772,1 +1788,1 @@\n-                \/\/ Check if a double can be represeneted as a long\n+                \/\/ Check if a double can be represented as a long\n@@ -2399,0 +2415,13 @@\n+    \/\/ Checks whether the iPart is incremented by the BigDecimal division in\n+    \/\/ getIntegerPart(), and affects the compact number index.\n+    private boolean checkIncrement(int iPart, int index, double divisor) {\n+        if (index < compactPatterns.length - 1 &&\n+            !\"\".equals(compactPatterns[index])) { \/\/ ignore empty pattern\n+            var nextDiv = divisors.get(index + 1).doubleValue();\n+            if (divisor != nextDiv) {\n+                return Math.log10(iPart) == Math.log10(nextDiv) - Math.log10(divisor);\n+            }\n+        }\n+        return false;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/CompactNumberFormat.java","additions":35,"deletions":6,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -536,12 +536,8 @@\n-        if (field instanceof ChronoField) {\n-            ChronoField f = field;\n-            return switch (f) {\n-                case DAY_OF_MONTH -> ValueRange.of(1, 1, getMinimumMonthLength(), getMaximumMonthLength());\n-                case DAY_OF_YEAR -> ValueRange.of(1, getMaximumDayOfYear());\n-                case ALIGNED_WEEK_OF_MONTH -> ValueRange.of(1, 5);\n-                case YEAR, YEAR_OF_ERA -> ValueRange.of(getMinimumYear(), getMaximumYear());\n-                case ERA -> ValueRange.of(1, 1);\n-                default -> field.range();\n-            };\n-        }\n-        return field.range();\n+        return switch (field) {\n+            case DAY_OF_MONTH -> ValueRange.of(1, 1, getMinimumMonthLength(), getMaximumMonthLength());\n+            case DAY_OF_YEAR -> ValueRange.of(1, getMaximumDayOfYear());\n+            case ALIGNED_WEEK_OF_MONTH -> ValueRange.of(1, 5);\n+            case YEAR, YEAR_OF_ERA -> ValueRange.of(getMinimumYear(), getMaximumYear());\n+            case ERA -> ValueRange.of(1, 1);\n+            default -> field.range();\n+        };\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/HijrahChronology.java","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,0 @@\n-import java.time.chrono.ChronoZonedDateTime;\n@@ -721,0 +720,51 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/**\n+     * Creates a locale specific formatter derived from the requested template for\n+     * the ISO chronology. The requested template is a series of typical pattern\n+     * symbols in canonical order from the largest date or time unit to the smallest,\n+     * which can be expressed with the following regular expression:\n+     * {@snippet :\n+     *      \"G{0,5}\" +        \/\/ Era\n+     *      \"y*\" +            \/\/ Year\n+     *      \"Q{0,5}\" +        \/\/ Quarter\n+     *      \"M{0,5}\" +        \/\/ Month\n+     *      \"w*\" +            \/\/ Week of Week Based Year\n+     *      \"E{0,5}\" +        \/\/ Day of Week\n+     *      \"d{0,2}\" +        \/\/ Day of Month\n+     *      \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n+     *      \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm (refer to LDML for 'j' and 'C')\n+     *      \"m{0,2}\" +        \/\/ Minute of Hour\n+     *      \"s{0,2}\" +        \/\/ Second of Minute\n+     *      \"[vz]{0,4}\"       \/\/ Zone\n+     * }\n+     * All pattern symbols are optional, and each pattern symbol represents a field,\n+     * for example, 'M' represents the Month field. The number of the pattern symbol letters follows the\n+     * same presentation, such as \"number\" or \"text\" as in the <a href=\"#patterns\">Patterns for\n+     * Formatting and Parsing<\/a> section. Other pattern symbols in the requested template are\n+     * invalid.\n+     * <p>\n+     * The mapping of the requested template to the closest of the available localized formats\n+     * is defined by the\n+     * <a href=\"https:\/\/www.unicode.org\/reports\/tr35\/tr35-dates.html#availableFormats_appendItems\">\n+     * Unicode LDML specification<\/a>. For example, the formatter created from the requested template\n+     * {@code yMMM} will format the date '2020-06-16' to 'Jun 2020' in the {@link Locale#US US locale}.\n+     * <p>\n+     * The locale is determined from the formatter. The formatter returned directly by\n+     * this method uses the {@link Locale#getDefault() default FORMAT locale}.\n+     * The locale can be controlled using {@link DateTimeFormatter#withLocale(Locale) withLocale(Locale)}\n+     * on the result of this method.\n+     * <p>\n+     * The returned formatter has no override zone.\n+     * It uses {@link ResolverStyle#SMART SMART} resolver style.\n+     *\n+     * @param requestedTemplate the requested template, not null\n+     * @return the formatter based on the {@code requestedTemplate} pattern, not null\n+     * @throws IllegalArgumentException if {@code requestedTemplate} is invalid\n+     * @see #ofPattern(String)\n+     * @since 19\n+     *\/\n+    public static DateTimeFormatter ofLocalizedPattern(String requestedTemplate) {\n+        return new DateTimeFormatterBuilder().appendLocalized(requestedTemplate)\n+                .toFormatter(ResolverStyle.SMART, IsoChronology.INSTANCE);\n+    }\n+\n@@ -1526,1 +1576,1 @@\n-     * @return the locale of this formatter, not null\n+     * @return the DecimalStyle of this formatter, not null\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatter.java","additions":53,"deletions":3,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -230,0 +230,36 @@\n+    \/**\n+     * Returns the formatting pattern for the requested template for a locale and chronology.\n+     * The locale and chronology are used to lookup the locale specific format\n+     * for the requested template.\n+     * <p>\n+     * If the locale contains the \"rg\" (region override)\n+     * <a href=\"..\/..\/util\/Locale.html#def_locale_extension\">Unicode extensions<\/a>,\n+     * the formatting pattern is overridden with the one appropriate for the region.\n+     * <p>\n+     * Refer to {@link #appendLocalized(String)} for the detail of {@code requestedTemplate}\n+     * argument.\n+     *\n+     * @param requestedTemplate the requested template, not null\n+     * @param chrono  the Chronology, non-null\n+     * @param locale  the locale, non-null\n+     * @return the locale and Chronology specific formatting pattern\n+     * @throws IllegalArgumentException if {@code requestedTemplate} does not match\n+     *      the regular expression syntax described in {@link #appendLocalized(String)}.\n+     * @throws DateTimeException if a match for the localized pattern for\n+     *      {@code requestedTemplate} is not available\n+     * @see #appendLocalized(String)\n+     * @since 19\n+     *\/\n+    public static String getLocalizedDateTimePattern(String requestedTemplate,\n+                                                     Chronology chrono, Locale locale) {\n+        Objects.requireNonNull(requestedTemplate, \"requestedTemplate\");\n+        Objects.requireNonNull(chrono, \"chrono\");\n+        Objects.requireNonNull(locale, \"locale\");\n+        Locale override = CalendarDataUtility.findRegionOverride(locale);\n+        LocaleProviderAdapter adapter = LocaleProviderAdapter.getAdapter(JavaTimeDateTimePatternProvider.class, override);\n+        JavaTimeDateTimePatternProvider provider = adapter.getJavaTimeDateTimePatternProvider();\n+        return provider.getJavaTimeDateTimePattern(requestedTemplate,\n+                chrono.getCalendarType(),\n+                override);\n+    }\n+\n@@ -1426,0 +1462,78 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/\/ RegEx pattern for skeleton validity checking\n+    private static final Pattern VALID_TEMPLATE_PATTERN = Pattern.compile(\n+        \"G{0,5}\" +        \/\/ Era\n+        \"y*\" +            \/\/ Year\n+        \"Q{0,5}\" +        \/\/ Quarter\n+        \"M{0,5}\" +        \/\/ Month\n+        \"w*\" +            \/\/ Week of Week Based Year\n+        \"E{0,5}\" +        \/\/ Day of Week\n+        \"d{0,2}\" +        \/\/ Day of Month\n+        \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n+        \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm\n+        \"m{0,2}\" +        \/\/ Minute of Hour\n+        \"s{0,2}\" +        \/\/ Second of Minute\n+        \"[vz]{0,4}\");     \/\/ Zone\n+    \/**\n+     * Appends a localized pattern to the formatter using the requested template.\n+     * <p>\n+     * This appends a localized section to the builder, suitable for outputting\n+     * a date, time or date-time combination. The format of the localized\n+     * section is lazily looked up based on three items:\n+     * <ul>\n+     * <li>the {@code requestedTemplate} specified to this method\n+     * <li>the {@code Locale} of the {@code DateTimeFormatter}\n+     * <li>the {@code Chronology} of the {@code DateTimeFormatter} unless overridden\n+     * <\/ul>\n+     * During formatting, the chronology is obtained from the temporal object\n+     * being formatted, which may have been overridden by\n+     * {@link DateTimeFormatter#withChronology(Chronology)}.\n+     * <p>\n+     * During parsing, if a chronology has already been parsed, then it is used.\n+     * Otherwise the default from {@code DateTimeFormatter.withChronology(Chronology)}\n+     * is used, with {@code IsoChronology} as the fallback.\n+     * <p>\n+     * The requested template is a series of typical pattern\n+     * symbols in canonical order from the largest date or time unit to the smallest,\n+     * which can be expressed with the following regular expression:\n+     * {@snippet :\n+     *      \"G{0,5}\" +        \/\/ Era\n+     *      \"y*\" +            \/\/ Year\n+     *      \"Q{0,5}\" +        \/\/ Quarter\n+     *      \"M{0,5}\" +        \/\/ Month\n+     *      \"w*\" +            \/\/ Week of Week Based Year\n+     *      \"E{0,5}\" +        \/\/ Day of Week\n+     *      \"d{0,2}\" +        \/\/ Day of Month\n+     *      \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n+     *      \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm (refer to LDML for 'j' and 'C')\n+     *      \"m{0,2}\" +        \/\/ Minute of Hour\n+     *      \"s{0,2}\" +        \/\/ Second of Minute\n+     *      \"[vz]{0,4}\"       \/\/ Zone\n+     * }\n+     * All pattern symbols are optional, and each pattern symbol represents a field,\n+     * for example, 'M' represents the Month field. The number of the pattern symbol letters follows the\n+     * same presentation, such as \"number\" or \"text\" as in the\n+     * <a href=\".\/DateTimeFormatter.html#patterns\">Patterns for Formatting and Parsing<\/a> section.\n+     * Other pattern symbols in the requested template are invalid.\n+     * <p>\n+     * The mapping of the requested template to the closest of the available localized formats\n+     * is defined by the\n+     * <a href=\"https:\/\/www.unicode.org\/reports\/tr35\/tr35-dates.html#availableFormats_appendItems\">\n+     * Unicode LDML specification<\/a>. For example, the formatter created from the requested template\n+     * {@code yMMM} will format the date '2020-06-16' to 'Jun 2020' in the {@link Locale#US US locale}.\n+     *\n+     * @param requestedTemplate the requested template to use, not null\n+     * @return this, for chaining, not null\n+     * @throws IllegalArgumentException if {@code requestedTemplate} is invalid\n+     * @see #appendPattern(String)\n+     * @since 19\n+     *\/\n+    public DateTimeFormatterBuilder appendLocalized(String requestedTemplate) {\n+        Objects.requireNonNull(requestedTemplate, \"requestedTemplate\");\n+        if (!VALID_TEMPLATE_PATTERN.matcher(requestedTemplate).matches()) {\n+            throw new IllegalArgumentException(\"Requested template is invalid: \" + requestedTemplate);\n+        }\n+        appendInternal(new LocalizedPrinterParser(requestedTemplate));\n+        return this;\n+    }\n+\n@@ -2381,1 +2495,1 @@\n-        CompositePrinterParser(List<DateTimePrinterParser> printerParsers, boolean optional) {\n+        private CompositePrinterParser(List<DateTimePrinterParser> printerParsers, boolean optional) {\n@@ -2385,1 +2499,1 @@\n-        CompositePrinterParser(DateTimePrinterParser[] printerParsers, boolean optional) {\n+        private CompositePrinterParser(DateTimePrinterParser[] printerParsers, boolean optional) {\n@@ -2479,1 +2593,1 @@\n-        PadPrinterParserDecorator(DateTimePrinterParser printerParser, int padWidth, char padChar) {\n+        private PadPrinterParserDecorator(DateTimePrinterParser printerParser, int padWidth, char padChar) {\n@@ -2587,1 +2701,1 @@\n-        DefaultValueParser(TemporalField field, long value) {\n+        private DefaultValueParser(TemporalField field, long value) {\n@@ -2611,1 +2725,1 @@\n-        CharLiteralPrinterParser(char literal) {\n+        private CharLiteralPrinterParser(char literal) {\n@@ -2654,1 +2768,1 @@\n-        StringLiteralPrinterParser(String literal) {\n+        private StringLiteralPrinterParser(String literal) {\n@@ -2720,1 +2834,1 @@\n-        NumberPrinterParser(TemporalField field, int minWidth, int maxWidth, SignStyle signStyle) {\n+        private NumberPrinterParser(TemporalField field, int minWidth, int maxWidth, SignStyle signStyle) {\n@@ -3011,1 +3125,1 @@\n-        ReducedPrinterParser(TemporalField field, int minWidth, int maxWidth,\n+        private ReducedPrinterParser(TemporalField field, int minWidth, int maxWidth,\n@@ -3164,1 +3278,1 @@\n-        NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint) {\n+        private NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint) {\n@@ -3186,1 +3300,1 @@\n-        NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n+        private NanosPrinterParser(int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n@@ -3369,1 +3483,1 @@\n-        FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint) {\n+        private FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint) {\n@@ -3396,1 +3510,1 @@\n-        FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n+        private FractionPrinterParser(TemporalField field, int minWidth, int maxWidth, boolean decimalPoint, int subsequentWidth) {\n@@ -3586,1 +3700,1 @@\n-        TextPrinterParser(TemporalField field, TextStyle textStyle, DateTimeTextProvider provider) {\n+        private TextPrinterParser(TemporalField field, TextStyle textStyle, DateTimeTextProvider provider) {\n@@ -3684,1 +3798,1 @@\n-        InstantPrinterParser(int fractionalDigits) {\n+        private InstantPrinterParser(int fractionalDigits) {\n@@ -3833,1 +3947,1 @@\n-        OffsetIdPrinterParser(String pattern, String noOffsetText) {\n+        private OffsetIdPrinterParser(String pattern, String noOffsetText) {\n@@ -4315,1 +4429,1 @@\n-        ZoneTextPrinterParser(TextStyle textStyle, Set<ZoneId> preferredZones, boolean isGeneric) {\n+        private ZoneTextPrinterParser(TextStyle textStyle, Set<ZoneId> preferredZones, boolean isGeneric) {\n@@ -4487,1 +4601,1 @@\n-        ZoneIdPrinterParser(TemporalQuery<ZoneId> query, String description) {\n+        private ZoneIdPrinterParser(TemporalQuery<ZoneId> query, String description) {\n@@ -4906,1 +5020,1 @@\n-        ChronoPrinterParser(TextStyle textStyle) {\n+        private ChronoPrinterParser(TextStyle textStyle) {\n@@ -4981,0 +5095,1 @@\n+        private final String requestedTemplate;\n@@ -4988,2 +5103,2 @@\n-        LocalizedPrinterParser(FormatStyle dateStyle, FormatStyle timeStyle) {\n-            \/\/ validated by caller\n+        private LocalizedPrinterParser(FormatStyle dateStyle, FormatStyle timeStyle) {\n+            \/\/ params validated by caller\n@@ -4992,0 +5107,13 @@\n+            this.requestedTemplate = null;\n+        }\n+\n+        \/**\n+         * Constructor.\n+         *\n+         * @param requestedTemplate the requested template to use, not null\n+         *\/\n+        private LocalizedPrinterParser(String requestedTemplate) {\n+            \/\/ param validated by caller\n+            this.dateStyle = null;\n+            this.timeStyle = null;\n+            this.requestedTemplate = requestedTemplate;\n@@ -5009,1 +5137,2 @@\n-         * The formatter will be the most appropriate to use for the date and time style in the locale.\n+         * The formatter will be the most appropriate to use for the date and time style, or\n+         * the requested template for the locale.\n@@ -5018,11 +5147,9 @@\n-            String key = chrono.getId() + '|' + locale.toString() + '|' + dateStyle + timeStyle;\n-            DateTimeFormatter formatter = FORMATTER_CACHE.get(key);\n-            if (formatter == null) {\n-                String pattern = getLocalizedDateTimePattern(dateStyle, timeStyle, chrono, locale);\n-                formatter = new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter(locale);\n-                DateTimeFormatter old = FORMATTER_CACHE.putIfAbsent(key, formatter);\n-                if (old != null) {\n-                    formatter = old;\n-                }\n-            }\n-            return formatter;\n+            String key = chrono.getId() + '|' + locale.toString() + '|' +\n+                    (requestedTemplate != null ? requestedTemplate : Objects.toString(dateStyle) + timeStyle);\n+\n+            return FORMATTER_CACHE.computeIfAbsent(key, k ->\n+                new DateTimeFormatterBuilder()\n+                    .appendPattern(requestedTemplate != null ?\n+                        getLocalizedDateTimePattern(requestedTemplate, chrono, locale) :\n+                        getLocalizedDateTimePattern(dateStyle, timeStyle, chrono, locale))\n+                    .toFormatter(locale));\n@@ -5033,2 +5160,3 @@\n-            return \"Localized(\" + (dateStyle != null ? dateStyle : \"\") + \",\" +\n-                (timeStyle != null ? timeStyle : \"\") + \")\";\n+            return \"Localized(\" + (requestedTemplate != null ? requestedTemplate :\n+                (dateStyle != null ? dateStyle : \"\") + \",\" +\n+                (timeStyle != null ? timeStyle : \"\")) + \")\";\n@@ -5059,1 +5187,1 @@\n-        WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth) {\n+        private WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth) {\n@@ -5073,1 +5201,1 @@\n-        WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth,\n+        private WeekBasedFieldPrinterParser(char chr, int count, int minWidth, int maxWidth,\n@@ -5204,1 +5332,1 @@\n-        DayPeriodPrinterParser(TextStyle textStyle) {\n+        private DayPeriodPrinterParser(TextStyle textStyle) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DateTimeFormatterBuilder.java","additions":166,"deletions":38,"binary":false,"changes":204,"status":"modified"},{"patch":"@@ -1293,1 +1293,1 @@\n-        int length = (int)((elements + elements \/ 20) \/ lf) + 3;\n+        int length = (int)(elements * 1.05f \/ lf) + 3;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Hashtable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,0 +167,24 @@\n+    \/**\n+     * {@return a string equivalent to the string returned by {@code\n+     * Object.toString} if that method and {@code hashCode} are not\n+     * overridden}\n+     *\n+     * @implNote\n+     * This method constructs a string for an object without calling\n+     * any overridable methods of the object.\n+     *\n+     * @implSpec\n+     * The method returns a string equivalent to:<br>\n+     * {@code o.getClass().getName() + \"@\" + Integer.toHexString(System.identityHashCode(o))}\n+     *\n+     * @param o an object\n+     * @throws NullPointerException if the argument is null\n+     * @see Object#toString\n+     * @see System#identityHashCode(Object)\n+     * @since 19\n+     *\/\n+    public static String toIdentityString(Object o) {\n+        requireNonNull(o);\n+        return o.getClass().getName() + \"@\" + Integer.toHexString(System.identityHashCode(o));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/Objects.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n- * {@link java.beans} package.  For reliable and ordered\n+ * {@link java.desktop\/java.beans} package.  For reliable and ordered\n@@ -76,0 +76,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/util\/Observable.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1588,1 +1588,1 @@\n-     *   {@link java.lang.instrument.Instrumentation#redefineModule redefineModule})\n+     *   {@link java.instrument\/java.lang.instrument.Instrumentation#redefineModule redefineModule})\n@@ -1650,0 +1650,1 @@\n+    @SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.base\/share\/classes\/java\/util\/ServiceLoader.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2692,0 +2692,2 @@\n+                            if (curr == null)\n+                                throw error(\"Bad intersection syntax\");\n","filename":"src\/java.base\/share\/classes\/java\/util\/regex\/Pattern.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -923,3 +923,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -949,3 +949,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -971,4 +971,4 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list or might not\n-     * use the recommended name for a certain cipher suite.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification. Providers may support cipher suite\n+     * names not found in this list or might not use the recommended name\n+     * for a certain cipher suite.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLEngine.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,7 +29,1 @@\n-import java.util.Map;\n-import java.util.List;\n-import java.util.HashMap;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.LinkedHashMap;\n+import java.util.*;\n@@ -85,2 +79,2 @@\n-    private Map<Integer, SNIServerName> sniNames = null;\n-    private Map<Integer, SNIMatcher> sniMatchers = null;\n+    private List<SNIServerName> sniNames = null;        \/\/ immutable list\n+    private Collection<SNIMatcher> sniMatchers = null;  \/\/ immutable collection\n@@ -114,3 +108,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification.  Providers may support cipher suite\n+     * names not found in this list.\n@@ -134,3 +128,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification.  Providers may support cipher suite\n+     * names not found in this list.\n@@ -157,3 +151,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher suites\n+     * that the provider supports.\n@@ -174,4 +168,4 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list or might not\n-     * use the recommended name for a certain cipher suite.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification.  Providers may support cipher suite\n+     * names not found in this list or might not use the recommended name\n+     * for a certain cipher suite.\n@@ -335,8 +329,15 @@\n-        if (serverNames != null) {\n-            if (!serverNames.isEmpty()) {\n-                sniNames = new LinkedHashMap<>(serverNames.size());\n-                for (SNIServerName serverName : serverNames) {\n-                    if (sniNames.put(serverName.getType(),\n-                                                serverName) != null) {\n-                        throw new IllegalArgumentException(\n-                                    \"Duplicated server name of type \" +\n+        if (this.sniNames == serverNames) {\n+            return;\n+        }\n+\n+        if (serverNames == null) {\n+            sniNames = null;\n+        } else if (serverNames.isEmpty()) {\n+            sniNames = Collections.emptyList();\n+        } else {\n+            List<Integer> sniTypes = new ArrayList<>(serverNames.size());\n+            List<SNIServerName> sniValues = new ArrayList<>(serverNames.size());\n+            for (SNIServerName serverName : serverNames) {\n+                if (sniTypes.contains(serverName.getType())) {\n+                    throw new IllegalArgumentException(\n+                            \"Duplicated server name of type \" +\n@@ -344,1 +345,3 @@\n-                    }\n+                } else {\n+                    sniTypes.add(serverName.getType());\n+                    sniValues.add(serverName);\n@@ -346,2 +349,0 @@\n-            } else {\n-                sniNames = Collections.<Integer, SNIServerName>emptyMap();\n@@ -349,2 +350,2 @@\n-        } else {\n-            sniNames = null;\n+\n+            sniNames = Collections.unmodifiableList(sniValues);\n@@ -392,10 +393,1 @@\n-        if (sniNames != null) {\n-            if (!sniNames.isEmpty()) {\n-                return Collections.<SNIServerName>unmodifiableList(\n-                                        new ArrayList<>(sniNames.values()));\n-            } else {\n-                return Collections.<SNIServerName>emptyList();\n-            }\n-        }\n-\n-        return null;\n+        return sniNames;\n@@ -429,10 +421,19 @@\n-        if (matchers != null) {\n-            if (!matchers.isEmpty()) {\n-                sniMatchers = new HashMap<>(matchers.size());\n-                for (SNIMatcher matcher : matchers) {\n-                    if (sniMatchers.put(matcher.getType(),\n-                                                matcher) != null) {\n-                        throw new IllegalArgumentException(\n-                                    \"Duplicated server name of type \" +\n-                                    matcher.getType());\n-                    }\n+        if (this.sniMatchers == matchers) {\n+            return;\n+        }\n+\n+        if (matchers == null) {\n+            this.sniMatchers = null;\n+        } else if (matchers.isEmpty()) {\n+            sniMatchers = Collections.emptyList();\n+        } else {\n+            List<Integer> matcherTypes = new ArrayList<>(matchers.size());\n+            List<SNIMatcher> matcherValues = new ArrayList<>(matchers.size());\n+            for (SNIMatcher matcher : matchers) {\n+                if (matcherTypes.contains(matcher.getType())) {\n+                    throw new IllegalArgumentException(\n+                                \"Duplicated server name of type \" +\n+                                matcher.getType());\n+                } else {\n+                    matcherTypes.add(matcher.getType());\n+                    matcherValues.add(matcher);\n@@ -440,2 +441,0 @@\n-            } else {\n-                sniMatchers = Collections.<Integer, SNIMatcher>emptyMap();\n@@ -443,2 +442,2 @@\n-        } else {\n-            sniMatchers = null;\n+\n+            this.sniMatchers = Collections.unmodifiableList(matcherValues);\n@@ -467,10 +466,1 @@\n-        if (sniMatchers != null) {\n-            if (!sniMatchers.isEmpty()) {\n-                return Collections.<SNIMatcher>unmodifiableList(\n-                                        new ArrayList<>(sniMatchers.values()));\n-            } else {\n-                return Collections.<SNIMatcher>emptyList();\n-            }\n-        }\n-\n-        return null;\n+        return sniMatchers;\n@@ -620,1 +610,1 @@\n-     *         preference, with {@code protocols[0]} being the most preferred.\n+     *         preference, with the first entry being the most preferred.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLParameters.java","additions":61,"deletions":71,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,3 +200,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -226,4 +226,4 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list or might not\n-     * use the recommended name for a certain cipher suite.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification.  Providers  may support cipher suite\n+     * names not found in this list or might not use the recommended name\n+     * for a certain cipher suite.\n@@ -256,3 +256,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLServerSocket.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,3 +90,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -111,3 +111,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLServerSocketFactory.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -330,3 +330,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -356,3 +356,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher\n+     * suites that the provider supports.\n@@ -378,4 +378,4 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation.  Providers\n-     * may support cipher suite names not found in this list or might not\n-     * use the recommended name for a certain cipher suite.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification. Providers may support cipher suite\n+     * names not found in this list or might not use the recommended name\n+     * for a certain cipher suite.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLSocket.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,3 +116,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher suites\n+     * that the provider supports.\n@@ -135,3 +135,3 @@\n-     * JSSE Cipher Suite Names<\/a> section of the Java Cryptography\n-     * Architecture Standard Algorithm Name Documentation, and may also\n-     * include other cipher suites that the provider supports.\n+     * JSSE Cipher Suite Names<\/a> section of the Java Security Standard\n+     * Algorithm Names Specification, and may also include other cipher suites\n+     * that the provider supports.\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLSocketFactory.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -105,0 +105,7 @@\n+\n+    \/** Invokes the given default method if the method's declaring interface is\n+     *  accessible to the given caller.  Otherwise, IllegalAccessException will\n+     *  be thrown.  If the caller is null, no access check is performed.\n+     *\/\n+    public Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller)\n+        throws Throwable;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangReflectAccess.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        = NativeLibraries.jniNativeLibraries(null);\n+        = NativeLibraries.newInstance(null);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/BootLoader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.util.Objects;\n@@ -65,2 +64,0 @@\n-    \/\/ loading JNI native libraries\n-    private final boolean isJNI;\n@@ -84,2 +81,2 @@\n-    public static NativeLibraries jniNativeLibraries(ClassLoader loader) {\n-        return new NativeLibraries(loader);\n+    public static NativeLibraries newInstance(ClassLoader loader) {\n+        return new NativeLibraries(loader, loader != null ? null : NativeLibraries.class, loader != null);\n@@ -88,19 +85,1 @@\n-    \/**\n-     * Creates a raw NativeLibraries instance that has the following properties:\n-     * 1. Native libraries loaded in this raw NativeLibraries instance are\n-     *    not JNI native libraries.  Hence JNI_OnLoad and JNI_OnUnload will\n-     *    be ignored.  No support for linking of native method.\n-     * 2. Native libraries not auto-unloaded.  They may be explicitly unloaded\n-     *    via NativeLibraries::unload.\n-     * 3. No relationship with class loaders.\n-     *\n-     * This static factory method is restricted for JDK trusted class use.\n-     *\/\n-    public static NativeLibraries rawNativeLibraries(Class<?> trustedCaller,\n-                                                     boolean searchJavaLibraryPath) {\n-        return new NativeLibraries(trustedCaller, searchJavaLibraryPath);\n-    }\n-\n-    private NativeLibraries(ClassLoader loader) {\n-        \/\/ for null loader, default the caller to this class and\n-        \/\/ do not search java.library.path\n+    private NativeLibraries(ClassLoader loader, Class<?> caller, boolean searchJavaLibraryPath) {\n@@ -108,15 +87,0 @@\n-        this.caller = loader != null ? null : NativeLibraries.class;\n-        this.searchJavaLibraryPath = loader != null ? true : false;\n-        this.isJNI = true;\n-    }\n-\n-    \/*\n-     * Constructs a NativeLibraries instance of no relationship with class loaders\n-     * and disabled auto unloading.\n-     *\/\n-    private NativeLibraries(Class<?> caller, boolean searchJavaLibraryPath) {\n-        Objects.requireNonNull(caller);\n-        if (!VM.isSystemDomainLoader(caller.getClassLoader())) {\n-            throw new IllegalArgumentException(\"must be JDK trusted class\");\n-        }\n-        this.loader = caller.getClassLoader();\n@@ -125,1 +89,0 @@\n-        this.isJNI = false;\n@@ -230,1 +193,1 @@\n-            NativeLibraryImpl lib = new NativeLibraryImpl(fromClass, name, isBuiltin, isJNI);\n+            NativeLibraryImpl lib = new NativeLibraryImpl(fromClass, name, isBuiltin, true);\n@@ -240,2 +203,1 @@\n-                boolean autoUnload = isJNI && !VM.isSystemDomainLoader(loader)\n-                        && loader != ClassLoaders.appClassLoader();\n+                boolean autoUnload = !VM.isSystemDomainLoader(loader) && loader != ClassLoaders.appClassLoader();\n@@ -272,2 +234,0 @@\n-        assert caller != null;\n-\n@@ -296,23 +256,0 @@\n-    \/**\n-     * Unloads the given native library\n-     *\n-     * @param lib native library\n-     *\/\n-    public void unload(NativeLibrary lib) {\n-        if (isJNI) {\n-            throw new UnsupportedOperationException(\"explicit unloading cannot be used with auto unloading\");\n-        }\n-        Objects.requireNonNull(lib);\n-        acquireNativeLibraryLock(lib.name());\n-        try {\n-            NativeLibraryImpl nl = libraries.remove(lib.name());\n-            if (nl != lib) {\n-                throw new IllegalArgumentException(lib.name() + \" not loaded by this NativeLibraries instance\");\n-            }\n-            \/\/ unload the native library and also remove from the global name registry\n-            nl.unloader().run();\n-        } finally {\n-            releaseNativeLibraryLock(lib.name());\n-        }\n-    }\n-\n@@ -383,1 +320,5 @@\n-        Runnable unloader() {\n+        \/*\n+         * Unloader::run method is invoked to unload the native library\n+         * when this class loader becomes phantom reachable.\n+         *\/\n+        private Runnable unloader() {\n@@ -397,0 +338,7 @@\n+\n+        \/*\n+         * Close this native library.\n+         *\/\n+        void close() {\n+            unload(name, isBuiltin, isJNI, handle);\n+        }\n@@ -432,1 +380,1 @@\n-                if (!loadedLibraryNames.remove(name)) {\n+                if (isJNI && !loadedLibraryNames.remove(name)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/NativeLibraries.java","additions":19,"deletions":71,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.internal.loader;\n+\n+import jdk.internal.misc.VM;\n+\n+import java.io.IOException;\n+import java.lang.invoke.MethodHandles;\n+import java.nio.file.Path;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import static jdk.internal.loader.NativeLibraries.*;\n+\n+\n+\/**\n+ * RawNativeLibraries has the following properties:\n+ * 1. Native libraries loaded in this RawNativeLibraries instance are\n+ *    not JNI native libraries.  Hence JNI_OnLoad and JNI_OnUnload will\n+ *    be ignored.  No support for linking of native method.\n+ * 2. Native libraries not auto-unloaded.  They may be explicitly unloaded\n+ *    via NativeLibraries::unload.\n+ * 3. No relationship with class loaders.\n+ *\/\n+public final class RawNativeLibraries {\n+    final Map<String, NativeLibraryImpl> libraries = new ConcurrentHashMap<>();\n+    final Class<?> caller;\n+\n+    private RawNativeLibraries(MethodHandles.Lookup trustedCaller) {\n+        this.caller = trustedCaller.lookupClass();\n+    }\n+\n+    \/**\n+     * Creates a RawNativeLibraries instance that has no relationship with\n+     * any class loaders and disabled auto unloading.\n+     *\n+     * This static factory method is restricted for JDK trusted class use.\n+     *\/\n+    public static RawNativeLibraries newInstance(MethodHandles.Lookup trustedCaller) {\n+        if (!trustedCaller.hasFullPrivilegeAccess() ||\n+                !VM.isSystemDomainLoader(trustedCaller.lookupClass().getClassLoader())) {\n+            throw new InternalError(trustedCaller + \" does not have access to raw native library loading\");\n+        }\n+        return new RawNativeLibraries(trustedCaller);\n+    }\n+\n+    \/*\n+     * Load a native library from the given path.  Returns null if the given\n+     * library is determined to be non-loadable, which is system-dependent.\n+     *\n+     * @param path the path of the native library\n+     *\/\n+    @SuppressWarnings(\"removal\")\n+    public NativeLibrary load(Path path) {\n+        String name = AccessController.doPrivileged(new PrivilegedAction<>() {\n+            public String run() {\n+                try {\n+                    return path.toRealPath().toString();\n+                } catch (IOException e) {\n+                    return null;\n+                }\n+            }\n+        });\n+        if (name == null) {\n+            return null;\n+        }\n+        return load(name);\n+    }\n+\n+    \/**\n+     * Load a native library of the given pathname, which is platform-specific.\n+     * Returns null if it fails to load the given pathname.\n+     *\n+     * If the given pathname does not contain a name-separator character,\n+     * for example on Unix a slash character, the library search strategy\n+     * is system-dependent for example on Unix, see dlopen.\n+     *\n+     * @apiNote\n+     * The {@code pathname} argument is platform-specific.\n+     * {@link System#mapLibraryName} can be used to convert a name to\n+     * a platform-specific pathname:\n+     * {@snippet\n+     *     RawNativeLibraries libs = RawNativeLibraries.newInstance(MethodHandles.lookup());\n+     *     NativeLibrary lib = libs.load(System.mapLibraryName(\"blas\"));\n+     * }\n+     *\n+     * @param pathname the pathname of the native library\n+     * @see System#mapLibraryName(String)\n+     *\/\n+    public NativeLibrary load(String pathname) {\n+         return libraries.computeIfAbsent(pathname, this::get);\n+    }\n+\n+    private NativeLibraryImpl get(String pathname) {\n+        NativeLibraryImpl lib = new NativeLibraryImpl(caller, pathname, false, false);\n+        if (!lib.open()) {\n+            return null;    \/\/ fail to open the native library\n+        }\n+        return lib;\n+    }\n+\n+    \/*\n+     * Unloads the given native library.\n+     *\/\n+    public void unload(NativeLibrary lib) {\n+        Objects.requireNonNull(lib);\n+        if (!libraries.remove(lib.name(), lib)) {\n+            throw new IllegalArgumentException(lib.name() + \" not loaded by this RawNativeLibraries instance\");\n+        }\n+        NativeLibraryImpl nl = (NativeLibraryImpl)lib;\n+        nl.close();\n+    }\n+}\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/RawNativeLibraries.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -530,1 +530,0 @@\n-                .distinct()\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModulePath.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -382,1 +382,0 @@\n-\n@@ -384,3 +383,1 @@\n-            msg += \"a member of \" + memberClass + memberSuffix +\n-                    \" with modifiers \\\"\" + Modifier.toString(modifiers) + \"\\\"\";\n-\n+            msg += \"a member of \" + memberClass + memberSuffix + msgSuffix(modifiers);\n@@ -413,1 +410,0 @@\n-\n@@ -415,3 +411,1 @@\n-            msg += \"a member of \" + memberClass + memberSuffix +\n-                \" with modifiers \\\"\" + Modifier.toString(modifiers) + \"\\\"\";\n-\n+            msg += \"a member of \" + memberClass + memberSuffix + msgSuffix(modifiers);\n@@ -427,0 +421,10 @@\n+    private static String msgSuffix(int modifiers) {\n+        boolean packageAccess =\n+            ((Modifier.PRIVATE |\n+              Modifier.PROTECTED |\n+              Modifier.PUBLIC) & modifiers) == 0;\n+        return packageAccess ?\n+            \" with package access\" :\n+            \" with modifiers \\\"\" + Modifier.toString(modifiers) + \"\\\"\";\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/Reflection.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -648,1 +648,1 @@\n-                r = Double.longBitsToDouble(Double.doubleToLongBits(bound) - 1);\n+                r = Math.nextAfter(bound, origin);\n@@ -680,1 +680,1 @@\n-            r = Double.longBitsToDouble(Double.doubleToLongBits(bound) - 1);\n+            r = Math.nextDown(bound);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/random\/RandomSupport.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,1 +66,2 @@\n-    public static final int VECTOR_OP_REINTERPRET = 18;\n+    public static final int VECTOR_OP_UCAST       = 18;\n+    public static final int VECTOR_OP_REINTERPRET = 19;\n@@ -69,4 +70,4 @@\n-    public static final int VECTOR_OP_MASK_TRUECOUNT = 19;\n-    public static final int VECTOR_OP_MASK_FIRSTTRUE = 20;\n-    public static final int VECTOR_OP_MASK_LASTTRUE  = 21;\n-    public static final int VECTOR_OP_MASK_TOLONG    = 22;\n+    public static final int VECTOR_OP_MASK_TRUECOUNT = 20;\n+    public static final int VECTOR_OP_MASK_FIRSTTRUE = 21;\n+    public static final int VECTOR_OP_MASK_LASTTRUE  = 22;\n+    public static final int VECTOR_OP_MASK_TOLONG    = 23;\n@@ -75,2 +76,2 @@\n-    public static final int VECTOR_OP_LROTATE = 23;\n-    public static final int VECTOR_OP_RROTATE = 24;\n+    public static final int VECTOR_OP_LROTATE = 24;\n+    public static final int VECTOR_OP_RROTATE = 25;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -125,7 +125,7 @@\n-    \/**Idle timeout value, in milliseconds. Zero means infinity,\n-     * iff keepingAlive=true.\n-     * Unfortunately, we can't always believe this one.  If I'm connected\n-     * through a Netscape proxy to a server that sent me a keep-alive\n-     * time of 15 sec, the proxy unilaterally terminates my connection\n-     * after 5 sec.  So we have to hard code our effective timeout to\n-     * 4 sec for the case where we're using a proxy. *SIGH*\n+    \/*\n+     * The timeout if specified by the server. Following values possible\n+     *  0: the server specified no keep alive headers\n+     * -1: the server provided \"Connection: keep-alive\" but did not specify a\n+     *     a particular time in a \"Keep-Alive:\" headers\n+     * Positive values are the number of seconds specified by the server\n+     * in a \"Keep-Alive\" header\n@@ -147,0 +147,9 @@\n+    \/* \"jdk.https.negotiate.cbt\" property can be set to \"always\" (always sent), \"never\" (never sent) or\n+     * \"domain:a,c.d,*.e.f\" (sent to host a, or c.d or to the domain e.f and any of its subdomains). This is\n+     * a comma separated list of arbitrary length with no white-space allowed.\n+     * If enabled (for a particular destination) then Negotiate\/SPNEGO authentication requests will include\n+     * a channel binding token for the destination server. The default behavior and setting for the\n+     * property is \"never\"\n+     *\/\n+    private static final String spnegoCBT;\n+\n@@ -148,0 +157,1 @@\n+\n@@ -153,0 +163,5 @@\n+    private static void logError(String msg) {\n+        if (logger.isLoggable(PlatformLogger.Level.SEVERE)) {\n+            logger.severe(msg);\n+        }\n+    }\n@@ -168,0 +183,12 @@\n+    static String normalizeCBT(String s) {\n+        if (s == null || s.equals(\"never\")) {\n+            return \"never\";\n+        }\n+        if (s.equals(\"always\") || s.startsWith(\"domain:\")) {\n+            return s;\n+        } else {\n+            logError(\"Unexpected value for \\\"jdk.https.negotiate.cbt\\\" system property\");\n+            return \"never\";\n+        }\n+    }\n+\n@@ -175,0 +202,3 @@\n+        String s = props.getProperty(\"jdk.https.negotiate.cbt\");\n+        spnegoCBT = normalizeCBT(s);\n+\n@@ -208,0 +238,3 @@\n+    public String getSpnegoCBT() {\n+        return spnegoCBT;\n+    }\n@@ -867,1 +900,1 @@\n-                        keepAliveTimeout = p.findInt(\"timeout\", usingProxy?60:5);\n+                        keepAliveTimeout = p.findInt(\"timeout\", -1);\n@@ -1120,0 +1153,4 @@\n+    public boolean getUsingProxy() {\n+        return usingProxy;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/HttpClient.java","additions":45,"deletions":8,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+import sun.net.www.protocol.http.HttpURLConnection;\n+import sun.util.logging.PlatformLogger;\n@@ -57,0 +59,26 @@\n+    \/\/ Keep alive time set according to priority specified here:\n+    \/\/ 1. If server specifies a time with a Keep-Alive header\n+    \/\/ 2. If user specifies a time with system property below\n+    \/\/ 3. Default values which depend on proxy vs server and whether\n+    \/\/    a Connection: keep-alive header was sent by server\n+\n+    \/\/ name suffixed with \"server\" or \"proxy\"\n+    private static final String keepAliveProp = \"http.keepAlive.time.\";\n+\n+    private static final int userKeepAliveServer;\n+    private static final int userKeepAliveProxy;\n+\n+    static final PlatformLogger logger = HttpURLConnection.getHttpLogger();\n+\n+    @SuppressWarnings(\"removal\")\n+    static int getUserKeepAliveSeconds(String type) {\n+        int v = AccessController.doPrivileged(\n+            new GetIntegerAction(keepAliveProp+type, -1)).intValue();\n+        return v < -1 ? -1 : v;\n+    }\n+\n+    static {\n+        userKeepAliveServer = getUserKeepAliveSeconds(\"server\");\n+        userKeepAliveProxy = getUserKeepAliveSeconds(\"proxy\");\n+    }\n+\n@@ -130,4 +158,23 @@\n-                v = new ClientVector(keepAliveTimeout > 0 ?\n-                        keepAliveTimeout * 1000 : LIFETIME);\n-                v.put(http);\n-                super.put(key, v);\n+                if (keepAliveTimeout == 0) {\n+                    keepAliveTimeout = getUserKeepAlive(http.getUsingProxy());\n+                    if (keepAliveTimeout == -1) {\n+                        \/\/ same default for server and proxy\n+                        keepAliveTimeout = 5;\n+                    }\n+                } else if (keepAliveTimeout == -1) {\n+                    keepAliveTimeout = getUserKeepAlive(http.getUsingProxy());\n+                    if (keepAliveTimeout == -1) {\n+                        \/\/ different default for server and proxy\n+                        keepAliveTimeout = http.getUsingProxy() ? 60 : 5;\n+                    }\n+                }\n+                \/\/ at this point keepAliveTimeout is the number of seconds to keep\n+                \/\/ alive, which could be 0, if the user specified 0 for the property\n+                assert keepAliveTimeout >= 0;\n+                if (keepAliveTimeout == 0) {\n+                    http.closeServer();\n+                } else {\n+                    v = new ClientVector(keepAliveTimeout * 1000);\n+                    v.put(http);\n+                    super.put(key, v);\n+                }\n@@ -142,0 +189,5 @@\n+    \/\/ returns the keep alive set by user in system property or -1 if not set\n+    private static int getUserKeepAlive(boolean isProxy) {\n+        return isProxy ? userKeepAliveProxy : userKeepAliveServer;\n+    }\n+\n@@ -280,0 +332,5 @@\n+                    if (KeepAliveCache.logger.isLoggable(PlatformLogger.Level.FINEST)) {\n+                        String msg = \"cached HttpClient was idle for \"\n+                                + Long.toString(currentTime - e.idleStartTime);\n+                        KeepAliveCache.logger.finest(msg);\n+                    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/KeepAliveCache.java","additions":61,"deletions":4,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.security.cert.X509Certificate;\n@@ -54,0 +55,3 @@\n+    \/\/ Used to obtain server cert for SPNEGO CBT.\n+    \/\/ May be null in which case CBT is not set\n+    public final X509Certificate serverCert;\n@@ -68,0 +72,1 @@\n+        this.serverCert =  old.serverCert;\n@@ -74,0 +79,4 @@\n+        this(url, null, a);\n+    }\n+\n+    public HttpCallerInfo(URL url, X509Certificate serverCert, Authenticator a) {\n@@ -75,0 +84,1 @@\n+        this.serverCert= serverCert;\n@@ -103,0 +113,4 @@\n+        this(url, host, port, null, a);\n+    }\n+\n+    public HttpCallerInfo(URL url, String host, int port, X509Certificate serverCert, Authenticator a) {\n@@ -106,0 +120,1 @@\n+        this.serverCert = serverCert;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpCallerInfo.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -291,2 +291,1 @@\n-    static final String acceptString =\n-        \"text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2\";\n+    static final String acceptString = \"*\/*\";\n@@ -1743,1 +1742,1 @@\n-                            new HttpCallerInfo(url,\n+                            getHttpCallerInfo(url,\n@@ -1818,1 +1817,1 @@\n-                            new HttpCallerInfo(url, authenticator),\n+                            getHttpCallerInfo(url, authenticator),\n@@ -2214,1 +2213,1 @@\n-                            new HttpCallerInfo(url,\n+                            getHttpCallerInfo(url,\n@@ -2283,0 +2282,15 @@\n+    \/**\n+     * Overridden in https to also include the server certificate\n+     *\/\n+    protected HttpCallerInfo getHttpCallerInfo(URL url, String proxy, int port,\n+                                               Authenticator authenticator) {\n+        return new HttpCallerInfo(url, proxy, port, authenticator);\n+    }\n+\n+    \/**\n+     * Overridden in https to also include the server certificate\n+     *\/\n+    protected HttpCallerInfo getHttpCallerInfo(URL url, Authenticator authenticator) {\n+        return new HttpCallerInfo(url, authenticator);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/*\n+\/**\n@@ -28,0 +28,1 @@\n+import java.net.Authenticator;\n@@ -32,0 +33,2 @@\n+import java.security.cert.Certificate;\n+import java.security.cert.X509Certificate;\n@@ -39,0 +42,1 @@\n+import sun.net.www.protocol.http.HttpCallerInfo;\n@@ -312,0 +316,67 @@\n+\n+    \/*\n+     * If no SSL Session available or if the system config does not allow it\n+     * don't use the extended caller info (the server cert).\n+     * Otherwise return true to include the server cert\n+     *\/\n+    private boolean useExtendedCallerInfo(URL url) {\n+        HttpsClient https = (HttpsClient)http;\n+        if (https.getSSLSession() == null) {\n+            return false;\n+        }\n+        String prop = http.getSpnegoCBT();\n+        if (prop.equals(\"never\")) {\n+            return false;\n+        }\n+        String target = url.getHost();\n+        if (prop.startsWith(\"domain:\")) {\n+            String[] domains = prop.substring(7).split(\",\");\n+            for (String domain : domains) {\n+                if (target.equals(domain)) {\n+                    return true;\n+                }\n+                if (domain.startsWith(\"*.\") && target.endsWith(domain.substring(1))) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    @Override\n+    protected HttpCallerInfo getHttpCallerInfo(URL url, String proxy, int port,\n+                                               Authenticator authenticator)\n+    {\n+        if (!useExtendedCallerInfo(url)) {\n+            return super.getHttpCallerInfo(url, proxy, port, authenticator);\n+        }\n+        HttpsClient https = (HttpsClient)http;\n+        try {\n+            Certificate[] certs = https.getServerCertificates();\n+            if (certs[0] instanceof X509Certificate x509Cert) {\n+                return new HttpCallerInfo(url, proxy, port, x509Cert, authenticator);\n+            }\n+        } catch (SSLPeerUnverifiedException e) {\n+            \/\/ ignore\n+        }\n+        return super.getHttpCallerInfo(url, proxy, port, authenticator);\n+    }\n+\n+    @Override\n+    protected HttpCallerInfo getHttpCallerInfo(URL url, Authenticator authenticator)\n+    {\n+        if (!useExtendedCallerInfo(url)) {\n+            return super.getHttpCallerInfo(url, authenticator);\n+        }\n+        HttpsClient https = (HttpsClient)http;\n+        try {\n+            Certificate[] certs = https.getServerCertificates();\n+            if (certs[0] instanceof X509Certificate x509Cert) {\n+                return new HttpCallerInfo(url, x509Cert, authenticator);\n+            }\n+        } catch (SSLPeerUnverifiedException e) {\n+            \/\/ ignore\n+        }\n+        return super.getHttpCallerInfo(url, authenticator);\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/https\/AbstractDelegateHttpsURLConnection.java","additions":72,"deletions":1,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.FileNotFoundException;\n@@ -32,2 +29,3 @@\n-import java.net.URL;\n-import java.net.URLConnection;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n@@ -35,3 +33,2 @@\n-import java.net.UnknownServiceException;\n-import java.util.Enumeration;\n-import java.util.Map;\n+import java.net.URL;\n+import java.security.Permission;\n@@ -39,0 +36,1 @@\n+import java.util.Map;\n@@ -41,2 +39,0 @@\n-import java.util.jar.Manifest;\n-import java.security.Permission;\n@@ -50,2 +46,0 @@\n-    private static final boolean debug = false;\n-\n@@ -56,14 +50,0 @@\n-    \/* the url for the Jar file *\/\n-    private URL jarFileURL;\n-\n-    \/* the permission to get this JAR file. This is the actual, ultimate,\n-     * permission, returned by the jar file factory.\n-     *\/\n-    private Permission permission;\n-\n-    \/* the url connection for the JAR file *\/\n-    private URLConnection jarFileURLConnection;\n-\n-    \/* the entry name, if any *\/\n-    private String entryName;\n-\n@@ -83,2 +63,1 @@\n-        jarFileURL = getJarFileURL();\n-        jarFileURLConnection = jarFileURL.openConnection();\n+        jarFileURLConnection = getJarFileURL().openConnection();\n@@ -88,1 +67,0 @@\n-        entryName = getEntryName();\n@@ -123,1 +101,1 @@\n-            String entryName = this.entryName;\n+            String entryName = getEntryName();\n@@ -179,0 +157,1 @@\n+        String entryName = getEntryName();\n@@ -219,1 +198,1 @@\n-        if (entryName == null) {\n+        if (getEntryName() == null) {\n@@ -229,0 +208,1 @@\n+            String entryName = getEntryName();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/JarURLConnection.java","additions":11,"deletions":31,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,0 @@\n-import java.io.*;\n-import sun.net.www.*;\n-\/\/import sun.net.www.protocol.news.ArticlePoster;\n-import sun.net.smtp.SmtpClient;\n@@ -102,1 +98,1 @@\n-    public synchronized URLConnection openConnection(URL u) {\n+    public URLConnection openConnection(URL u) {\n@@ -129,12 +125,1 @@\n-        boolean nogood = false;\n-        if (file == null || file.isEmpty())\n-            nogood = true;\n-        else {\n-            boolean allwhites = true;\n-            for (int i = 0; i < file.length(); i++)\n-                if (!Character.isWhitespace(file.charAt(i)))\n-                    allwhites = false;\n-            if (allwhites)\n-                nogood = true;\n-        }\n-        if (nogood)\n+        if (file.isBlank())\n@@ -142,1 +127,1 @@\n-        setURLHandler(u, protocol, host, port, file, null);\n+        setURLHandler(u, protocol, host, port, file);\n@@ -147,6 +132,0 @@\n-     *\n-     * @param   u the URL to receive the result of parsing the spec\n-     * @param   spec the URL string to parse\n-     * @param   start the character position to start parsing at.  This is\n-     *          just past the ':'.\n-     * @param   limit the character position to stop parsing at.\n@@ -155,2 +134,2 @@\n-    private void setURLHandler(URL u, String protocol, String host, int port, String file, String ref) {\n-        setURL(u,protocol,host,port,file,null);\n+    private void setURLHandler(URL u, String protocol, String host, int port, String file) {\n+        setURL(u, protocol, host, port, file, null);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/mailto\/Handler.java","additions":6,"deletions":27,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,3 @@\n-        result.append(type.getName());\n+        \/\/ Guard against null canonical name; shouldn't happen\n+        result.append(Objects.toString(type.getCanonicalName(),\n+                                       \"<no canonical name>\"));\n@@ -192,0 +194,4 @@\n+            else if (value instanceof Enum<?> v)\n+                \/\/ Predicate above covers enum constants, including\n+                \/\/ those with specialized class bodies.\n+                return toSourceString(v);\n@@ -222,0 +228,4 @@\n+            else if (type.getComponentType().isEnum())\n+                stringStream =\n+                    Arrays.stream((Enum<?>[])value).\n+                    map(AnnotationInvocationHandler::toSourceString);\n@@ -234,9 +244,3 @@\n-        Class<?> finalComponent = clazz;\n-        StringBuilder arrayBrackets = new StringBuilder();\n-\n-        while(finalComponent.isArray()) {\n-            finalComponent = finalComponent.getComponentType();\n-            arrayBrackets.append(\"[]\");\n-        }\n-\n-        return finalComponent.getName() + arrayBrackets.toString() + \".class\";\n+        \/\/ Guard against null canonical name; shouldn't happen\n+        return Objects.toString(clazz.getCanonicalName(),\n+                                \"<no canonical name>\") + \".class\";\n@@ -310,0 +314,4 @@\n+    private static String toSourceString(Enum<?> enumConstant) {\n+        return enumConstant.name();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationInvocationHandler.java","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -135,1 +135,2 @@\n-                 (declaringClass.getModifiers() & Modifier.STATIC) == 0) ) {\n+                 (declaringClass.getModifiers() & Modifier.STATIC) == 0) &&\n+                 filter == TypeAnnotation.TypeAnnotationTarget.METHOD_FORMAL_PARAMETER) {\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/TypeAnnotationParser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,0 @@\n-    private ObjectIdentifier contentType;\n-\n@@ -170,1 +168,1 @@\n-        contentType = block.contentType;\n+        ObjectIdentifier contentType = block.contentType;\n@@ -243,1 +241,1 @@\n-            } catch (CertificateException ce) {\n+            } catch (CertificateException | IOException ce) {\n@@ -247,4 +245,0 @@\n-            } catch (IOException ioe) {\n-                ParsingException pe = new ParsingException(ioe.getMessage());\n-                pe.initCause(ioe);\n-                throw pe;\n@@ -333,1 +327,1 @@\n-                } catch (CertificateException ce) {\n+                } catch (CertificateException | IOException ce) {\n@@ -337,4 +331,0 @@\n-                } catch (IOException ioe) {\n-                    ParsingException pe = new ParsingException(ioe.getMessage());\n-                    pe.initCause(ioe);\n-                    throw pe;\n@@ -447,1 +437,1 @@\n-            } catch (CertificateException ce) {\n+            } catch (CertificateException | IOException ce) {\n@@ -451,4 +441,0 @@\n-            } catch (IOException ioe) {\n-                ParsingException pe = new ParsingException(ioe.getMessage());\n-                pe.initCause(ioe);\n-                throw pe;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":5,"deletions":19,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,0 @@\n-        DerValue        val;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -422,1 +422,1 @@\n-                        if (iterator.hasNext()) {\n+                        while (iterator.hasNext()) {\n@@ -425,1 +425,1 @@\n-                                entryNameSeparator;\n+                                    entryNameSeparator;\n@@ -427,2 +427,5 @@\n-                        } else {\n-                            return false;\n+                            if (aliases.hasMoreElements()) {\n+                                return true;\n+                            } else {\n+                                continue;\n+                            }\n@@ -430,0 +433,1 @@\n+                        return false;\n@@ -434,2 +438,0 @@\n-\n-                return aliases.hasMoreElements();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DomainKeyStore.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,93 +161,0 @@\n-    \/**\n-     * Step mapping Theta as defined in section 3.2.1 .\n-     *\/\n-    private static long[] smTheta(long[] a) {\n-        long c0 = a[0]^a[5]^a[10]^a[15]^a[20];\n-        long c1 = a[1]^a[6]^a[11]^a[16]^a[21];\n-        long c2 = a[2]^a[7]^a[12]^a[17]^a[22];\n-        long c3 = a[3]^a[8]^a[13]^a[18]^a[23];\n-        long c4 = a[4]^a[9]^a[14]^a[19]^a[24];\n-        long d0 = c4 ^ Long.rotateLeft(c1, 1);\n-        long d1 = c0 ^ Long.rotateLeft(c2, 1);\n-        long d2 = c1 ^ Long.rotateLeft(c3, 1);\n-        long d3 = c2 ^ Long.rotateLeft(c4, 1);\n-        long d4 = c3 ^ Long.rotateLeft(c0, 1);\n-        for (int y = 0; y < a.length; y += DM) {\n-            a[y] ^= d0;\n-            a[y+1] ^= d1;\n-            a[y+2] ^= d2;\n-            a[y+3] ^= d3;\n-            a[y+4] ^= d4;\n-        }\n-        return a;\n-    }\n-\n-    \/**\n-     * Merged Step mapping Rho (section 3.2.2) and Pi (section 3.2.3).\n-     * for performance. Optimization is achieved by precalculating\n-     * shift constants for the following loop\n-     *   int xNext, yNext;\n-     *   for (int t = 0, x = 1, y = 0; t <= 23; t++, x = xNext, y = yNext) {\n-     *        int numberOfShift = ((t + 1)*(t + 2)\/2) % 64;\n-     *        a[y][x] = Long.rotateLeft(a[y][x], numberOfShift);\n-     *        xNext = y;\n-     *        yNext = (2 * x + 3 * y) % DM;\n-     *   }\n-     * and with inplace permutation.\n-     *\/\n-    private static long[] smPiRho(long[] a) {\n-        long tmp = Long.rotateLeft(a[10], 3);\n-        a[10] = Long.rotateLeft(a[1], 1);\n-        a[1] = Long.rotateLeft(a[6], 44);\n-        a[6] = Long.rotateLeft(a[9], 20);\n-        a[9] = Long.rotateLeft(a[22], 61);\n-        a[22] = Long.rotateLeft(a[14], 39);\n-        a[14] = Long.rotateLeft(a[20], 18);\n-        a[20] = Long.rotateLeft(a[2], 62);\n-        a[2] = Long.rotateLeft(a[12], 43);\n-        a[12] = Long.rotateLeft(a[13], 25);\n-        a[13] = Long.rotateLeft(a[19], 8);\n-        a[19] = Long.rotateLeft(a[23], 56);\n-        a[23] = Long.rotateLeft(a[15], 41);\n-        a[15] = Long.rotateLeft(a[4], 27);\n-        a[4] = Long.rotateLeft(a[24], 14);\n-        a[24] = Long.rotateLeft(a[21], 2);\n-        a[21] = Long.rotateLeft(a[8], 55);\n-        a[8] = Long.rotateLeft(a[16], 45);\n-        a[16] = Long.rotateLeft(a[5], 36);\n-        a[5] = Long.rotateLeft(a[3], 28);\n-        a[3] = Long.rotateLeft(a[18], 21);\n-        a[18] = Long.rotateLeft(a[17], 15);\n-        a[17] = Long.rotateLeft(a[11], 10);\n-        a[11] = Long.rotateLeft(a[7], 6);\n-        a[7] = tmp;\n-        return a;\n-    }\n-\n-    \/**\n-     * Step mapping Chi as defined in section 3.2.4.\n-     *\/\n-    private static long[] smChi(long[] a) {\n-        for (int y = 0; y < a.length; y+=DM) {\n-            long ay0 = a[y];\n-            long ay1 = a[y+1];\n-            long ay2 = a[y+2];\n-            long ay3 = a[y+3];\n-            long ay4 = a[y+4];\n-            a[y] = ay0 ^ ((~ay1) & ay2);\n-            a[y+1] = ay1 ^ ((~ay2) & ay3);\n-            a[y+2] = ay2 ^ ((~ay3) & ay4);\n-            a[y+3] = ay3 ^ ((~ay4) & ay0);\n-            a[y+4] = ay4 ^ ((~ay0) & ay1);\n-        }\n-        return a;\n-    }\n-\n-    \/**\n-     * Step mapping Iota as defined in section 3.2.5.\n-     *\/\n-    private static long[] smIota(long[] a, int rndIndex) {\n-        a[0] ^= RC_CONSTANTS[rndIndex];\n-        return a;\n-    }\n-\n@@ -261,0 +168,10 @@\n+\n+        long a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12;\n+        long a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24;\n+        \/\/ move data into local variables\n+        a0 = lanes[0]; a1 = lanes[1]; a2 = lanes[2]; a3 = lanes[3]; a4 = lanes[4];\n+        a5 = lanes[5]; a6 = lanes[6]; a7 = lanes[7]; a8 = lanes[8]; a9 = lanes[9];\n+        a10 = lanes[10]; a11 = lanes[11]; a12 = lanes[12]; a13 = lanes[13]; a14 = lanes[14];\n+        a15 = lanes[15]; a16 = lanes[16]; a17 = lanes[17]; a18 = lanes[18]; a19 = lanes[19];\n+        a20 = lanes[20]; a21 = lanes[21]; a22 = lanes[22]; a23 = lanes[23]; a24 = lanes[24];\n+\n@@ -263,1 +180,98 @@\n-            smIota(smChi(smPiRho(smTheta(lanes))), ir);\n+            \/\/ Step mapping Theta as defined in section 3.2.1.\n+            long c0 = a0^a5^a10^a15^a20;\n+            long c1 = a1^a6^a11^a16^a21;\n+            long c2 = a2^a7^a12^a17^a22;\n+            long c3 = a3^a8^a13^a18^a23;\n+            long c4 = a4^a9^a14^a19^a24;\n+            long d0 = c4 ^ Long.rotateLeft(c1, 1);\n+            long d1 = c0 ^ Long.rotateLeft(c2, 1);\n+            long d2 = c1 ^ Long.rotateLeft(c3, 1);\n+            long d3 = c2 ^ Long.rotateLeft(c4, 1);\n+            long d4 = c3 ^ Long.rotateLeft(c0, 1);\n+            a0  ^= d0; a1  ^= d1; a2  ^= d2; a3  ^= d3; a4  ^= d4;\n+            a5  ^= d0; a6  ^= d1; a7  ^= d2; a8  ^= d3; a9  ^= d4;\n+            a10 ^= d0; a11 ^= d1; a12 ^= d2; a13 ^= d3; a14 ^= d4;\n+            a15 ^= d0; a16 ^= d1; a17 ^= d2; a18 ^= d3; a19 ^= d4;\n+            a20 ^= d0; a21 ^= d1; a22 ^= d2; a23 ^= d3; a24 ^= d4;\n+\n+            \/**\n+             * Merged Step mapping Rho (section 3.2.2) and Pi (section 3.2.3).\n+             * for performance. Optimization is achieved by precalculating\n+             * shift constants for the following loop\n+             *   int xNext, yNext;\n+             *   for (int t = 0, x = 1, y = 0; t <= 23; t++, x = xNext, y = yNext) {\n+             *        int numberOfShift = ((t + 1)*(t + 2)\/2) % 64;\n+             *        a[y][x] = Long.rotateLeft(a[y][x], numberOfShift);\n+             *        xNext = y;\n+             *        yNext = (2 * x + 3 * y) % DM;\n+             *   }\n+             * and with inplace permutation.\n+             *\/\n+            long ay = Long.rotateLeft(a10, 3);\n+            a10 = Long.rotateLeft(a1, 1);\n+            a1 = Long.rotateLeft(a6, 44);\n+            a6 = Long.rotateLeft(a9, 20);\n+            a9 = Long.rotateLeft(a22, 61);\n+            a22 = Long.rotateLeft(a14, 39);\n+            a14 = Long.rotateLeft(a20, 18);\n+            a20 = Long.rotateLeft(a2, 62);\n+            a2 = Long.rotateLeft(a12, 43);\n+            a12 = Long.rotateLeft(a13, 25);\n+            a13 = Long.rotateLeft(a19, 8);\n+            a19 = Long.rotateLeft(a23, 56);\n+            a23 = Long.rotateLeft(a15, 41);\n+            a15 = Long.rotateLeft(a4, 27);\n+            a4 = Long.rotateLeft(a24, 14);\n+            a24 = Long.rotateLeft(a21, 2);\n+            a21 = Long.rotateLeft(a8, 55);\n+            a8 = Long.rotateLeft(a16, 45);\n+            a16 = Long.rotateLeft(a5, 36);\n+            a5 = Long.rotateLeft(a3, 28);\n+            a3 = Long.rotateLeft(a18, 21);\n+            a18 = Long.rotateLeft(a17, 15);\n+            a17 = Long.rotateLeft(a11, 10);\n+            a11 = Long.rotateLeft(a7, 6);\n+            a7 = ay;\n+\n+            \/\/ Step mapping Chi as defined in section 3.2.4.\n+            long tmp0 = a0;\n+            long tmp1 = a1;\n+            long tmp2 = a2;\n+            long tmp3 = a3;\n+            long tmp4 = a4;\n+            a0 = tmp0 ^ ((~tmp1) & tmp2);\n+            a1 = tmp1 ^ ((~tmp2) & tmp3);\n+            a2 = tmp2 ^ ((~tmp3) & tmp4);\n+            a3 = tmp3 ^ ((~tmp4) & tmp0);\n+            a4 = tmp4 ^ ((~tmp0) & tmp1);\n+\n+            tmp0 = a5; tmp1 = a6; tmp2 = a7; tmp3 = a8; tmp4 = a9;\n+            a5 = tmp0 ^ ((~tmp1) & tmp2);\n+            a6 = tmp1 ^ ((~tmp2) & tmp3);\n+            a7 = tmp2 ^ ((~tmp3) & tmp4);\n+            a8 = tmp3 ^ ((~tmp4) & tmp0);\n+            a9 = tmp4 ^ ((~tmp0) & tmp1);\n+\n+            tmp0 = a10; tmp1 = a11; tmp2 = a12; tmp3 = a13; tmp4 = a14;\n+            a10 = tmp0 ^ ((~tmp1) & tmp2);\n+            a11 = tmp1 ^ ((~tmp2) & tmp3);\n+            a12 = tmp2 ^ ((~tmp3) & tmp4);\n+            a13 = tmp3 ^ ((~tmp4) & tmp0);\n+            a14 = tmp4 ^ ((~tmp0) & tmp1);\n+\n+            tmp0 = a15; tmp1 = a16; tmp2 = a17; tmp3 = a18; tmp4 = a19;\n+            a15 = tmp0 ^ ((~tmp1) & tmp2);\n+            a16 = tmp1 ^ ((~tmp2) & tmp3);\n+            a17 = tmp2 ^ ((~tmp3) & tmp4);\n+            a18 = tmp3 ^ ((~tmp4) & tmp0);\n+            a19 = tmp4 ^ ((~tmp0) & tmp1);\n+\n+            tmp0 = a20; tmp1 = a21; tmp2 = a22; tmp3 = a23; tmp4 = a24;\n+            a20 = tmp0 ^ ((~tmp1) & tmp2);\n+            a21 = tmp1 ^ ((~tmp2) & tmp3);\n+            a22 = tmp2 ^ ((~tmp3) & tmp4);\n+            a23 = tmp3 ^ ((~tmp4) & tmp0);\n+            a24 = tmp4 ^ ((~tmp0) & tmp1);\n+\n+            \/\/ Step mapping Iota as defined in section 3.2.5.\n+            a0 ^= RC_CONSTANTS[ir];\n@@ -265,0 +279,7 @@\n+\n+        lanes[0] = a0; lanes[1] = a1; lanes[2] = a2; lanes[3] = a3; lanes[4] = a4;\n+        lanes[5] = a5; lanes[6] = a6; lanes[7] = a7; lanes[8] = a8; lanes[9] = a9;\n+        lanes[10] = a10; lanes[11] = a11; lanes[12] = a12; lanes[13] = a13; lanes[14] = a14;\n+        lanes[15] = a15; lanes[16] = a16; lanes[17] = a17; lanes[18] = a18; lanes[19] = a19;\n+        lanes[20] = a20; lanes[21] = a21; lanes[22] = a22; lanes[23] = a23; lanes[24] = a24;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA3.java","additions":116,"deletions":95,"binary":false,"changes":211,"status":"modified"},{"patch":"@@ -258,1 +258,0 @@\n-        AlgorithmParameterSpec keyParams = rsaKey.getParams();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPSSSignature.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-        RSAPrivateKey key;\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateCrtKeyImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -447,1 +447,0 @@\n-            int tmp;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DHServerKeyExchange.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -361,1 +361,0 @@\n-        int srcLim = packet.limit();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineInputRecord.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -110,0 +110,5 @@\n+    \/*\n+     * Default timeout to skip bytes from the open socket\n+     *\/\n+    private static final int DEFAULT_SKIP_TIMEOUT = 1;\n+\n@@ -1784,0 +1789,1 @@\n+                    int soTimeout = getSoTimeout();\n@@ -1785,0 +1791,7 @@\n+                        \/\/ deplete could hang on the skip operation\n+                        \/\/ in case of infinite socket read timeout.\n+                        \/\/ Change read timeout to avoid deadlock.\n+                        \/\/ This workaround could be replaced later\n+                        \/\/ with the right synchronization\n+                        if (soTimeout == 0)\n+                            setSoTimeout(DEFAULT_SKIP_TIMEOUT);\n@@ -1786,0 +1799,2 @@\n+                    } catch (java.net.SocketTimeoutException stEx) {\n+                        \/\/ skip timeout exception during deplete\n@@ -1787,0 +1802,2 @@\n+                        if (soTimeout == 0)\n+                            setSoTimeout(soTimeout);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketImpl.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -104,1 +104,6 @@\n-        SNIHostName sniHostName = null;\n+        \/\/ Is it a Fully-Qualified Domain Names (FQDN) ending with a dot?\n+        if (hostname != null && hostname.endsWith(\".\")) {\n+            \/\/ Remove the ending dot, which is not allowed in SNIHostName.\n+            hostname = hostname.substring(0, hostname.length() - 1);\n+        }\n+\n@@ -111,1 +116,1 @@\n-                sniHostName = new SNIHostName(hostname);\n+                return new SNIHostName(hostname);\n@@ -121,1 +126,1 @@\n-        return sniHostName;\n+        return null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Utilities.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -407,0 +407,6 @@\n+        \/\/ Is it a Fully-Qualified Domain Names (FQDN) ending with a dot?\n+        if (peerHost != null && peerHost.endsWith(\".\")) {\n+            \/\/ Remove the ending dot, which is not allowed in SNIHostName.\n+            peerHost = peerHost.substring(0, peerHost.length() - 1);\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509TrustManagerImpl.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import java.security.cert.CertPathValidatorException;\n+import java.security.cert.CertPathValidatorException.BasicReason;\n@@ -38,0 +40,2 @@\n+import java.security.cert.CertificateParsingException;\n+import java.security.cert.TrustAnchor;\n@@ -63,0 +67,1 @@\n+import sun.security.provider.certpath.CertPathConstraintsParameters;\n@@ -86,0 +91,1 @@\n+import sun.security.validator.Validator;\n@@ -181,0 +187,2 @@\n+    private Set<X509Certificate> trustedCerts = new HashSet<>();\n+\n@@ -819,3 +827,1 @@\n-                String path = null;\n-                path = PathList.appendPath(\n-                        path, System.getProperty(\"java.class.path\"));\n+                String path = System.getProperty(\"java.class.path\");\n@@ -1121,0 +1127,1 @@\n+        KeyStore cakstore = buildTrustedCerts();\n@@ -1129,1 +1136,7 @@\n-            caks = KeyStoreUtil.getCacertsKeyStore();\n+            if (cakstore != null) {\n+                caks = cakstore;\n+            } else {\n+                \/\/ try to load cacerts again, and let exception propagate\n+                \/\/ if it cannot be loaded\n+                caks = KeyStoreUtil.getCacertsKeyStore();\n+            }\n@@ -1488,1 +1501,3 @@\n-        checkWeak(rb.getString(\"the.certificate.request\"), req);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                req.getSubjectPublicKeyInfo(), null, null, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate.request\"), req, cpcp);\n@@ -1545,2 +1560,5 @@\n-        checkWeak(rb.getString(\"the.issuer\"), keyStore.getCertificateChain(alias));\n-        checkWeak(rb.getString(\"the.generated.certificate\"), cert);\n+        checkWeakConstraint(rb.getString(\"the.issuer\"),\n+                keyStore.getCertificateChain(alias));\n+        cpcp = buildCertPathConstraint(cert, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate\"),\n+                cert, cpcp);\n@@ -1595,1 +1613,4 @@\n-        checkWeak(rb.getString(\"the.generated.crl\"), crl, privateKey);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                privateKey, null, null, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.crl\"), crl, privateKey,\n+                cpcp);\n@@ -1641,1 +1662,4 @@\n-        checkWeak(rb.getString(\"the.generated.certificate.request\"), request);\n+        CertPathConstraintsParameters cpcp = new CertPathConstraintsParameters(\n+                request.getSubjectPublicKeyInfo(), null, null, null);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate.request\"),\n+                request, cpcp);\n@@ -1686,1 +1710,3 @@\n-        checkWeak(rb.getString(\"the.certificate\"), cert);\n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate\"), cert, cpcp);\n@@ -2024,1 +2050,2 @@\n-        checkWeak(rb.getString(\"the.generated.certificate\"), finalChain);\n+        checkWeakConstraint(rb.getString(\"the.generated.certificate\"),\n+                finalChain);\n@@ -2117,0 +2144,1 @@\n+        CertPathConstraintsParameters cpcp;\n@@ -2173,0 +2201,4 @@\n+\n+                    X509Certificate[] xcerts = convertCerts(chain);\n+                    List<X509Certificate> certs = Arrays.asList(xcerts);\n+                    TrustAnchor anchor = findTrustAnchor(certs);\n@@ -2185,1 +2217,13 @@\n-                        checkWeak(label, chain[i]);\n+\n+                        if (i == 0 &&\n+                                ((X509Certificate)chain[0]).\n+                                getBasicConstraints() == -1) {\n+                            \/\/ this is an EE\n+                            cpcp = buildCertPathConstraint((X509Certificate) chain[i], anchor);\n+                        } else {\n+                            cpcp = new CertPathConstraintsParameters(\n+                                    (X509Certificate)chain[i], null, anchor,\n+                                    null);\n+                        }\n+\n+                        checkWeakConstraint(label, chain[i], cpcp);\n@@ -2192,1 +2236,1 @@\n-                    checkWeak(label, chain);\n+                    checkWeakConstraint(label, chain);\n@@ -2218,1 +2262,2 @@\n-            checkWeak(label, cert);\n+            cpcp = buildCertPathConstraint((X509Certificate)cert, null);\n+            checkWeakConstraint(label, cert, cpcp);\n@@ -2445,1 +2490,3 @@\n-                checkWeak(\"<\" + newAlias + \">\", c);\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)c, null);\n+                checkWeakConstraint(\"<\" + newAlias + \">\", c, cpcp);\n@@ -2642,0 +2689,3 @@\n+                    CertPathConstraintsParameters cpcp =\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n@@ -2646,1 +2696,1 @@\n-                            withWeak(signer.getPublicKey()));\n+                            withWeakConstraint(signer.getPublicKey(), cpcp));\n@@ -2654,0 +2704,3 @@\n+                    CertPathConstraintsParameters cpcp =\n+                            buildCertPathConstraint((X509Certificate)signer,\n+                            null);\n@@ -2658,1 +2711,1 @@\n-                            withWeak(signer.getPublicKey()));\n+                            withWeakConstraint(signer.getPublicKey(), cpcp));\n@@ -2675,1 +2728,9 @@\n-            checkWeak(rb.getString(\"the.crl\"), crl, signer == null ? null : signer.getPublicKey());\n+\n+            if (signer != null) {\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)signer, null);\n+                checkWeakConstraint(rb.getString(\"the.crl\"), crl,\n+                        signer.getPublicKey(), cpcp);\n+            } else {\n+                checkWeak(rb.getString(\"the.crl\"), crl, null);\n+            }\n@@ -2721,0 +2782,2 @@\n+        CertPathConstraintsParameters cpcp =\n+                new CertPathConstraintsParameters(pkey, null, null, null);\n@@ -2724,1 +2787,1 @@\n-                withWeak(pkey),\n+                withWeakConstraint(pkey, cpcp),\n@@ -2748,1 +2811,6 @@\n-        checkWeak(rb.getString(\"the.certificate.request\"), req);\n+\n+        CertPathConstraintsParameters cpcp1 =\n+                new CertPathConstraintsParameters(\n+                req.getSubjectPublicKeyInfo(), null, null, null);\n+        checkWeakConstraint(rb.getString(\"the.certificate.request\"), req,\n+                cpcp1);\n@@ -2768,0 +2836,3 @@\n+        X509Certificate[] xcerts = convertCerts(certs);\n+        List<X509Certificate> chain = Arrays.asList(xcerts);\n+        TrustAnchor anchor = findTrustAnchor(chain);\n@@ -2788,1 +2859,11 @@\n-            checkWeak(oneInMany(rb.getString(\"the.certificate\"), i, certs.length), x509Cert);\n+            CertPathConstraintsParameters cpcp;\n+            if (i == 0 &&\n+                    x509Cert.getBasicConstraints() == -1) {\n+                \/\/ this is an EE\n+                cpcp = buildCertPathConstraint(x509Cert, anchor);\n+            } else {\n+                cpcp = new CertPathConstraintsParameters(x509Cert,\n+                        null, anchor, null);\n+            }\n+            checkWeakConstraint(oneInMany(rb.getString(\"the.certificate\"),\n+                    i, certs.length), x509Cert, cpcp);\n@@ -2904,0 +2985,5 @@\n+                @SuppressWarnings(\"unchecked\")\n+                List<X509Certificate> chain =\n+                        (List<X509Certificate>)certs;\n+                TrustAnchor anchor = findTrustAnchor(chain);\n+                CertPathConstraintsParameters cpcp;\n@@ -2916,1 +3002,8 @@\n-                    checkWeak(oneInManys(rb.getString(\n+                    if (cc == 0 && x.getBasicConstraints() == -1) {\n+                        \/\/ this is an EE\n+                        cpcp = buildCertPathConstraint(x, anchor);\n+                    } else {\n+                        cpcp = new CertPathConstraintsParameters(\n+                                x, null, anchor, null);\n+                    }\n+                    checkWeakConstraint(oneInManys(rb.getString(\n@@ -2919,1 +3012,1 @@\n-                            ss.size()), x);\n+                            ss.size()), x, cpcp);\n@@ -2926,0 +3019,4 @@\n+                    @SuppressWarnings(\"unchecked\")\n+                    List<X509Certificate> tschain =\n+                            (List<X509Certificate>)certs;\n+                    anchor = findTrustAnchor(tschain);\n@@ -2938,1 +3035,9 @@\n-                        checkWeak(oneInManys(rb.getString(\n+                        if (cc == 0 &&\n+                                x.getBasicConstraints() == -1) {\n+                            \/\/ this is an EE\n+                            cpcp = buildCertPathConstraint(x, anchor);\n+                        } else {\n+                            cpcp = new CertPathConstraintsParameters(\n+                                    x, null, anchor, null);\n+                        }\n+                        checkWeakConstraint(oneInManys(rb.getString(\n@@ -2941,1 +3046,1 @@\n-                                ss.size()), x);\n+                                ss.size()), x, cpcp);\n@@ -2971,0 +3076,3 @@\n+            @SuppressWarnings(\"unchecked\")\n+            List<X509Certificate> xcerts = (List<X509Certificate>)chain;\n+            TrustAnchor anchor = findTrustAnchor(xcerts);\n@@ -2981,1 +3089,11 @@\n-                    checkWeak(oneInMany(rb.getString(\"the.certificate\"), i++, chain.size()), cert);\n+                    X509Certificate x = (X509Certificate)cert;\n+                    CertPathConstraintsParameters cpcp;\n+                    if (i == 0 && x.getBasicConstraints() == -1) {\n+                        \/\/ this is an EE\n+                        cpcp = buildCertPathConstraint(x, anchor);\n+                    } else {\n+                        cpcp = new CertPathConstraintsParameters(\n+                                x, null, anchor, null);\n+                    }\n+                    checkWeakConstraint(oneInMany(rb.getString(\n+                            \"the.certificate\"), i++, chain.size()), x, cpcp);\n@@ -3205,0 +3323,3 @@\n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n+\n@@ -3206,1 +3327,1 @@\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n@@ -3226,1 +3347,1 @@\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n@@ -3237,1 +3358,1 @@\n-                checkWeak(rb.getString(\"the.input\"), cert);\n+                checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n@@ -3246,1 +3367,1 @@\n-                checkWeak(rb.getString(\"the.input\"), cert);\n+                checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n@@ -3273,1 +3394,1 @@\n-            checkWeak(rb.getString(\"the.input\"), cert);\n+            checkWeakConstraint(rb.getString(\"the.input\"), cert, cpcp);\n@@ -3413,0 +3534,15 @@\n+    private String withWeakConstraint(String alg,\n+            CertPathConstraintsParameters cpcp) {\n+        try {\n+            DISABLED_CHECK.permits(alg, cpcp, false);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"with.disabled\"), alg);\n+        }\n+        try {\n+            LEGACY_CHECK.permits(alg, cpcp, false);\n+            return alg;\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"with.weak\"), alg);\n+        }\n+    }\n+\n@@ -3439,1 +3575,2 @@\n-    private String withWeak(Key key) {\n+    private String withWeakConstraint(Key key,\n+            CertPathConstraintsParameters cpcp) {\n@@ -3442,7 +3579,9 @@\n-        if (DISABLED_CHECK.permits(SIG_PRIMITIVE_SET, key)) {\n-            if (LEGACY_CHECK.permits(SIG_PRIMITIVE_SET, key)) {\n-                if (kLen >= 0) {\n-                    return String.format(rb.getString(\"key.bit\"), kLen, displayAlg);\n-                } else {\n-                    return String.format(rb.getString(\"unknown.size.1\"), displayAlg);\n-                }\n+        try {\n+            DISABLED_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"key.bit.disabled\"), kLen, displayAlg);\n+        }\n+        try {\n+            LEGACY_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+            if (kLen >= 0) {\n+                return String.format(rb.getString(\"key.bit\"), kLen, displayAlg);\n@@ -3450,1 +3589,1 @@\n-                return String.format(rb.getString(\"key.bit.weak\"), kLen, displayAlg);\n+                return String.format(rb.getString(\"unknown.size.1\"), displayAlg);\n@@ -3452,2 +3591,2 @@\n-        } else {\n-            return String.format(rb.getString(\"key.bit.disabled\"), kLen, displayAlg);\n+        } catch (CertPathValidatorException e) {\n+            return String.format(rb.getString(\"key.bit.weak\"), kLen, displayAlg);\n@@ -3468,0 +3607,2 @@\n+        CertPathConstraintsParameters cpcp =\n+                buildCertPathConstraint(cert, null);\n@@ -3470,1 +3611,1 @@\n-            sigName = withWeak(sigName);\n+            sigName = withWeakConstraint(sigName, cpcp);\n@@ -3480,1 +3621,1 @@\n-                        withWeak(pkey),\n+                        withWeakConstraint(pkey, cpcp),\n@@ -3804,1 +3945,1 @@\n-        checkWeak(rb.getString(\"reply\"), replyCerts);\n+        checkWeakConstraint(rb.getString(\"reply\"), replyCerts);\n@@ -3886,1 +4027,4 @@\n-                checkWeak(String.format(fromKeyStore\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint((X509Certificate)root.snd,\n+                        null);\n+                checkWeakConstraint(String.format(fromKeyStore\n@@ -3890,1 +4034,1 @@\n-                          root.snd);\n+                        root.snd, cpcp);\n@@ -3955,1 +4099,3 @@\n-                checkWeak(p.fst, p.snd);\n+                CertPathConstraintsParameters cpcp =\n+                        buildCertPathConstraint(p.snd, null);\n+                checkWeakConstraint(p.fst, p.snd, cpcp);\n@@ -4751,0 +4897,61 @@\n+    private void checkWeakConstraint(String label, String sigAlg, Key key,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        if (sigAlg != null) {\n+            try {\n+                DISABLED_CHECK.permits(sigAlg, cpcp, false);\n+                try {\n+                    LEGACY_CHECK.permits(sigAlg, cpcp, false);\n+                } catch (CertPathValidatorException e) {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.weak\"), label, sigAlg));\n+                }\n+            } catch (CertPathValidatorException e) {\n+                String eMessage = e.getMessage();\n+                if (eMessage.contains(\"denyAfter constraint check failed\") &&\n+                        e.getReason() == BasicReason.ALGORITHM_CONSTRAINED) {\n+                    String startSeparator = \"Constraint date: \";\n+                    int startSepPos = eMessage.indexOf(startSeparator);\n+                    String endSeparator = \"; params date\";\n+                    int endSepPos = eMessage.indexOf(endSeparator);\n+                    String denyAfterDate = null;\n+                    try {\n+                        denyAfterDate = eMessage.substring(startSepPos + startSeparator.length(),\n+                                endSepPos);\n+                    } catch (IndexOutOfBoundsException e1) {\n+                        throw new Exception(rb.getString(\n+                                \"Unable.to.parse.denyAfter.string.in.exception.message\"));\n+                    }\n+\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.usagesignedjar\"), label, sigAlg,\n+                            denyAfterDate));\n+                } else {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.sigalg.disabled\"), label, sigAlg));\n+                }\n+                if (debug) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+\n+        if (key != null) {\n+            try {\n+                DISABLED_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+                try {\n+                    LEGACY_CHECK.permits(key.getAlgorithm(), cpcp, true);\n+                } catch (CertPathValidatorException e) {\n+                    weakWarnings.add(String.format(\n+                            rb.getString(\"whose.key.weak\"), label,\n+                            String.format(rb.getString(\"key.bit\"),\n+                            KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+                }\n+            } catch (CertPathValidatorException e) {\n+                weakWarnings.add(String.format(\n+                        rb.getString(\"whose.key.disabled\"), label,\n+                        String.format(rb.getString(\"key.bit\"),\n+                        KeyUtil.getKeySize(key), fullDisplayAlgName(key))));\n+            }\n+        }\n+    }\n+\n@@ -4777,2 +4984,5 @@\n-    private void checkWeak(String label, Certificate[] certs)\n-            throws KeyStoreException {\n+    private void checkWeakConstraint(String label, Certificate[] certs)\n+            throws KeyStoreException, Exception {\n+        X509Certificate[] xcerts = convertCerts(certs);\n+        List<X509Certificate> chain = Arrays.asList(xcerts);\n+        TrustAnchor anchor = findTrustAnchor(chain);\n@@ -4787,1 +4997,10 @@\n-                checkWeak(fullLabel, xc);\n+\n+                CertPathConstraintsParameters cpcp = null;\n+                if (i == 0 && xc.getBasicConstraints() == -1) {\n+                    \/\/ this is an EE\n+                    cpcp = buildCertPathConstraint(xc, anchor);\n+                } else {\n+                    cpcp = new CertPathConstraintsParameters(\n+                            xc, null, anchor, null);\n+                }\n+                checkWeakConstraint(fullLabel, xc, cpcp);\n@@ -4792,2 +5011,3 @@\n-    private void checkWeak(String label, Certificate cert)\n-            throws KeyStoreException {\n+    private void checkWeakConstraint(String label, Certificate cert,\n+            CertPathConstraintsParameters cpcp)\n+            throws KeyStoreException, Exception {\n@@ -4798,1 +5018,1 @@\n-            checkWeak(label, sigAlg, xc.getPublicKey());\n+            checkWeakConstraint(label, sigAlg, xc.getPublicKey(), cpcp);\n@@ -4802,2 +5022,12 @@\n-    private void checkWeak(String label, PKCS10 p10) {\n-        checkWeak(label, p10.getSigAlg(), p10.getSubjectPublicKeyInfo());\n+    private void checkWeakConstraint(String label, PKCS10 p10,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        checkWeakConstraint(label, p10.getSigAlg(),\n+                p10.getSubjectPublicKeyInfo(), cpcp);\n+    }\n+\n+    private void checkWeakConstraint(String label, CRL crl, Key key,\n+            CertPathConstraintsParameters cpcp) throws Exception {\n+        if (crl instanceof X509CRLImpl) {\n+            X509CRLImpl impl = (X509CRLImpl)crl;\n+            checkWeakConstraint(label, impl.getSigAlgName(), key, cpcp);\n+        }\n@@ -4813,0 +5043,70 @@\n+    private KeyStore buildTrustedCerts() {\n+        KeyStore caks = null;\n+        try {\n+            caks = KeyStoreUtil.getCacertsKeyStore();\n+            if (caks != null) {\n+                Enumeration<String> aliases = caks.aliases();\n+                while (aliases.hasMoreElements()) {\n+                    String a = aliases.nextElement();\n+                    try {\n+                        trustedCerts.add((X509Certificate)caks.getCertificate(a));\n+                    } catch (Exception e2) {\n+                        \/\/ ignore, if the keystore has not been loaded\/initialized properly\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            \/\/ Ignore, if cacerts cannot be loaded\n+        }\n+        return caks;\n+    }\n+\n+    private TrustAnchor findTrustAnchor(List<X509Certificate> chain) {\n+        if (chain.isEmpty()) {\n+            return null;\n+        }\n+\n+        X509Certificate last = chain.get(chain.size() - 1);\n+        Optional<X509Certificate> trusted =\n+                trustedCerts.stream()\n+                        .filter(c -> c.getSubjectX500Principal().equals(last.getIssuerX500Principal()))\n+                        .findFirst();\n+        return trusted.isPresent() ? new TrustAnchor(trusted.get(), null) : null;\n+    }\n+\n+    private X509Certificate[] convertCerts(Certificate[] certs) {\n+        X509Certificate[] xcerts = new X509Certificate[certs.length];\n+\n+        for (int i = 0; i < certs.length; i++) {\n+            if (certs[i] instanceof X509Certificate) {\n+                xcerts[i] = (X509Certificate) certs[i];\n+            }\n+        }\n+        return xcerts;\n+    }\n+\n+    private CertPathConstraintsParameters buildCertPathConstraint(\n+        X509Certificate xcert, TrustAnchor anchor) throws Exception{\n+        List<String> eku = xcert.getExtendedKeyUsage();\n+        if (eku == null) {\n+            return new CertPathConstraintsParameters(xcert, null,\n+                    anchor, null);\n+        }\n+\n+        if (eku.contains(KnownOIDs.codeSigning.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_CODE_SIGNING, anchor, null);\n+        } else if (eku.contains(KnownOIDs.clientAuth.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TLS_CLIENT, anchor, null);\n+        } else if (eku.contains(KnownOIDs.serverAuth.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TLS_SERVER, anchor, null);\n+        } else if (eku.contains(KnownOIDs.KP_TimeStamping.value())) {\n+            return new CertPathConstraintsParameters(xcert,\n+                    Validator.VAR_TSA_SERVER, anchor, null);\n+        }\n+        return new CertPathConstraintsParameters(xcert, Validator.VAR_GENERIC,\n+                anchor, null);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":357,"deletions":57,"binary":false,"changes":414,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -486,0 +486,2 @@\n+        {\"whose.sigalg.usagesignedjar\", \"%1$s uses the %2$s signature algorithm which is considered a security risk and cannot be used to sign JARs after %3$s.\"},\n+        {\"Unable.to.parse.denyAfter.string.in.exception.message\", \"Unable to parse denyAfter date string in exception message\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.security.util;\n+\n+import java.security.GeneralSecurityException;\n+\n+\/**\n+ * Thrown by TlsChannelBinding if an error occurs\n+ *\/\n+public class ChannelBindingException extends GeneralSecurityException {\n+\n+    @java.io.Serial\n+    private static final long serialVersionUID = -5021387249782788460L;\n+\n+    \/**\n+     * Constructs a ChannelBindingException with no detail message. A detail\n+     * message is a String that describes this particular exception.\n+     *\/\n+    public ChannelBindingException() {\n+        super();\n+    }\n+\n+    \/**\n+     * Constructs a ChannelBindingException with a detail message and\n+     * specified cause.\n+     *\/\n+    public ChannelBindingException(String msg, Exception e) {\n+        super(msg, e);\n+    }\n+\n+    \/**\n+     * Constructs a ChannelBindingException with a detail message\n+     *\/\n+    public ChannelBindingException(String msg) {\n+        super(msg);\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ChannelBindingException.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,4 @@\n+import java.time.DateTimeException;\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.time.ZoneId;\n@@ -44,1 +48,0 @@\n-import java.util.Calendar;\n@@ -54,1 +57,0 @@\n-import java.util.TimeZone;\n@@ -689,1 +691,2 @@\n-        private Date denyAfterDate;\n+        private ZonedDateTime zdt;\n+        private Instant denyAfterDate;\n@@ -692,1 +695,0 @@\n-            Calendar c;\n@@ -697,1 +699,1 @@\n-                debug.println(\"DenyAfterConstraint read in as:  year \" +\n+                debug.println(\"DenyAfterConstraint read in as: year \" +\n@@ -701,15 +703,5 @@\n-            c = new Calendar.Builder().setTimeZone(TimeZone.getTimeZone(\"GMT\"))\n-                    .setDate(year, month - 1, day).build();\n-\n-            if (year > c.getActualMaximum(Calendar.YEAR) ||\n-                    year < c.getActualMinimum(Calendar.YEAR)) {\n-                throw new IllegalArgumentException(\n-                        \"Invalid year given in constraint: \" + year);\n-            }\n-            if ((month - 1) > c.getActualMaximum(Calendar.MONTH) ||\n-                    (month - 1) < c.getActualMinimum(Calendar.MONTH)) {\n-                throw new IllegalArgumentException(\n-                        \"Invalid month given in constraint: \" + month);\n-            }\n-            if (day > c.getActualMaximum(Calendar.DAY_OF_MONTH) ||\n-                    day < c.getActualMinimum(Calendar.DAY_OF_MONTH)) {\n+            try {\n+                zdt = ZonedDateTime\n+                    .of(year, month, day, 0, 0, 0, 0, ZoneId.of(\"GMT\"));\n+                denyAfterDate = zdt.toInstant();\n+            } catch (DateTimeException dte) {\n@@ -717,1 +709,1 @@\n-                        \"Invalid Day of Month given in constraint: \" + day);\n+                    \"Invalid denyAfter date\", dte);\n@@ -720,1 +712,0 @@\n-            denyAfterDate = c.getTime();\n@@ -723,1 +714,1 @@\n-                        denyAfterDate);\n+                        zdt.toLocalDate());\n@@ -738,2 +729,1 @@\n-            Date currentDate;\n-            String errmsg;\n+            Instant currentDate;\n@@ -742,1 +732,1 @@\n-                currentDate = cp.getDate();\n+                currentDate = cp.getDate().toInstant();\n@@ -744,1 +734,1 @@\n-                currentDate = new Date();\n+                currentDate = Instant.now();\n@@ -747,1 +737,1 @@\n-            if (!denyAfterDate.after(currentDate)) {\n+            if (!denyAfterDate.isAfter(currentDate)) {\n@@ -754,1 +744,1 @@\n-                        denyAfterDate + \"; params date: \" +\n+                        zdt.toLocalDate() + \"; params date: \" +\n@@ -773,1 +763,1 @@\n-            return denyAfterDate.after(new Date());\n+            return denyAfterDate.isAfter(Instant.now());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DisabledAlgorithmConstraints.java","additions":21,"deletions":31,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,2 +125,3 @@\n-            throw new InvalidParameterSpecException\n-                (\"Only ECParameterSpec and ECGenParameterSpec supported\");\n+            throw new InvalidParameterSpecException(\n+                \"Only ECParameterSpec, ECGenParameterSpec \" +\n+                \"and ECKeySizeParameterSpec supported\");\n@@ -216,1 +217,2 @@\n-            \"Only ECParameterSpec and ECGenParameterSpec supported\");\n+            \"Only ECParameterSpec, ECGenParameterSpec \" +\n+            \"and ECKeySizeParameterSpec supported\");\n@@ -236,1 +238,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ECParameters.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2020, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.security.util;\n+\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateEncodingException;\n+import java.security.cert.X509Certificate;\n+import java.util.Arrays;\n+import java.util.Hashtable;\n+\n+\/**\n+ * This class implements the Channel Binding for TLS as defined in\n+ * <a href=\"https:\/\/www.ietf.org\/rfc\/rfc5929.txt\">\n+ *     Channel Bindings for TLS<\/a>\n+ *\n+ * Format of the Channel Binding data is also defined in\n+ * <a href=\"https:\/\/www.ietf.org\/rfc\/rfc5056.txt\">\n+ *     On the Use of Channel Bindings to Secure Channels<\/a>\n+ * section 2.1.\n+ *\n+ *\/\n+\n+public class TlsChannelBinding {\n+\n+    public enum TlsChannelBindingType {\n+\n+        \/**\n+         * Channel binding on the basis of TLS Finished message.\n+         * TLS_UNIQUE is defined by RFC 5929 but is not supported\n+         * by the current LDAP stack.\n+         *\/\n+        TLS_UNIQUE(\"tls-unique\"),\n+\n+        \/**\n+         * Channel binding on the basis of TLS server certificate.\n+         *\/\n+        TLS_SERVER_END_POINT(\"tls-server-end-point\");\n+\n+        public String getName() {\n+            return name;\n+        }\n+\n+        private final String name;\n+        TlsChannelBindingType(String name) {\n+            this.name = name;\n+        }\n+    }\n+\n+    \/**\n+     * Parse given value to see if it is a recognized and supported channel binding type\n+     *\n+     * @param  cbType\n+     * @return TLS Channel Binding type or null if given string is null\n+     * @throws ChannelBindingException\n+     *\/\n+    public static TlsChannelBindingType parseType(String cbType) throws ChannelBindingException {\n+        if (cbType != null) {\n+            if (cbType.equals(TlsChannelBindingType.TLS_SERVER_END_POINT.getName())) {\n+                return TlsChannelBindingType.TLS_SERVER_END_POINT;\n+            } else {\n+                throw new ChannelBindingException(\"Illegal value for channel binding type: \" + cbType);\n+            }\n+        }\n+        return null;\n+    }\n+\n+    private final TlsChannelBindingType cbType;\n+    private final byte[] cbData;\n+\n+    \/**\n+     * Construct tls-server-end-point Channel Binding data\n+     * @param serverCertificate\n+     * @throws ChannelBindingException\n+     *\/\n+    public static TlsChannelBinding create(X509Certificate serverCertificate) throws ChannelBindingException {\n+        try {\n+            final byte[] prefix =\n+                TlsChannelBindingType.TLS_SERVER_END_POINT.getName().concat(\":\").getBytes();\n+            String hashAlg = serverCertificate.getSigAlgName().\n+                    replace(\"SHA\", \"SHA-\").toUpperCase();\n+            int ind = hashAlg.indexOf(\"WITH\");\n+            if (ind > 0) {\n+                hashAlg = hashAlg.substring(0, ind);\n+                if (hashAlg.equals(\"MD5\") || hashAlg.equals(\"SHA-1\")) {\n+                    hashAlg = \"SHA-256\";\n+                }\n+            } else {\n+                hashAlg = \"SHA-256\";\n+            }\n+            MessageDigest md = MessageDigest.getInstance(hashAlg);\n+            byte[] hash = md.digest(serverCertificate.getEncoded());\n+            byte[] cbData = Arrays.copyOf(prefix, prefix.length + hash.length );\n+            System.arraycopy(hash, 0, cbData, prefix.length, hash.length);\n+            return new TlsChannelBinding(TlsChannelBindingType.TLS_SERVER_END_POINT, cbData);\n+        } catch (NoSuchAlgorithmException | CertificateEncodingException e) {\n+            throw new ChannelBindingException(\"Cannot create TLS channel binding data\", e);\n+        }\n+    }\n+\n+    private TlsChannelBinding(TlsChannelBindingType cbType, byte[] cbData) {\n+        this.cbType = cbType;\n+        this.cbData = cbData;\n+    }\n+\n+    public TlsChannelBindingType getType() {\n+        return cbType;\n+    }\n+\n+    public byte[] getData() {\n+        return cbData;\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/TlsChannelBinding.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -202,1 +202,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,0 @@\n-import java.util.Enumeration;\n-\n-import sun.security.util.*;\n@@ -83,1 +80,1 @@\n-     * Creates a delta CRL indictor extension with the BigInteger value .\n+     * Creates a delta CRL indicator extension with the BigInteger value .\n@@ -113,1 +110,0 @@\n-       DerOutputStream  tmp = new DerOutputStream();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DeltaCRLIndicatorExtension.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,1 +133,1 @@\n-     * @param out the DerOutputStrean to encode this object to.\n+     * @param out the DerOutputStream to encode this object to.\n@@ -349,1 +349,0 @@\n-            boolean removeThisEntry = false;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1050,1 +1050,0 @@\n-     * @throws IOException on error\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -732,1 +732,0 @@\n-            SubjectAlternativeNameExtension extValue = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Properties;\n@@ -153,1 +152,1 @@\n-     * <P>This mechanism gurantees that keys (and algorithms) may be\n+     * <P>This mechanism guarantees that keys (and algorithms) may be\n@@ -156,1 +155,1 @@\n-     * handling, that specific need can be accomodated.\n+     * handling, that specific need can be accommodated.\n@@ -236,2 +235,0 @@\n-            Properties props;\n-            String keytype;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.time.DateTimeException;\n@@ -44,1 +45,1 @@\n-     * Gets the formatting pattern for a timeStyle\n+     * Returns the formatting pattern for a timeStyle\n@@ -47,1 +48,1 @@\n-     * a java.time specific dateTime Pattern from selected Locale Provider.\n+     * a java.time specific dateTime Pattern from the selected Locale Provider.\n@@ -61,0 +62,22 @@\n+\n+    \/**\n+     * Returns the formatting pattern for the requested template, calendarType, and locale.\n+     * Concrete implementation of this method will retrieve\n+     * a java.time specific pattern from selected Locale Provider.\n+     *\n+     * @param requestedTemplate the requested template, not null\n+     * @param calType a {@code String}, non-null representing CalendarType such as \"japanese\",\n+     * \"iso8601\"\n+     * @param locale {@code locale}, non-null\n+     * @throws IllegalArgumentException if {@code requestedTemplate} does not match\n+     *      the regular expression syntax described in\n+     *      {@link java.time.format.DateTimeFormatterBuilder#appendLocalized(String)}.\n+     * @throws DateTimeException if a match for the formatting pattern for\n+     *      {@code requestedTemplate} is not available\n+     * @return  formatting pattern {@code String}\n+     * @since 19\n+     *\/\n+    public String getJavaTimeDateTimePattern(String requestedTemplate, String calType, Locale locale) {\n+        \/\/ default implementation throws exception\n+        throw new DateTimeException(\"Formatting pattern is not available for the requested template: \" + requestedTemplate);\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/text\/spi\/JavaTimeDateTimePatternProvider.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.time.DateTimeException;\n@@ -28,0 +29,2 @@\n+import java.util.Objects;\n+import java.util.Optional;\n@@ -66,3 +69,2 @@\n-        String pattern = lr.getJavaTimeDateTimePattern(\n-                timeStyle, dateStyle, calType);\n-        return pattern;\n+        return lr.getJavaTimeDateTimePattern(timeStyle, dateStyle, calType);\n+    }\n@@ -70,0 +72,12 @@\n+    @Override\n+    public String getJavaTimeDateTimePattern(String requestedTemplate, String calType, Locale locale) {\n+        LocaleProviderAdapter lpa = LocaleProviderAdapter.getResourceBundleBased();\n+        return ((ResourceBundleBasedAdapter)lpa).getCandidateLocales(\"\", locale).stream()\n+                .map(lpa::getLocaleResources)\n+                .map(lr -> lr.getLocalizedPattern(requestedTemplate, calType))\n+                .filter(Objects::nonNull)\n+                .findFirst()\n+                .or(() -> calType.equals(\"generic\") ? Optional.empty():\n+                        Optional.of(getJavaTimeDateTimePattern(requestedTemplate, \"generic\", locale)))\n+                .orElseThrow(() -> new DateTimeException(\"Requested template \\\"\" + requestedTemplate +\n+                        \"\\\" cannot be resolved in the locale \\\"\" + locale + \"\\\"\"));\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/JavaTimeDateTimePatternImpl.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.util.HashMap;\n@@ -51,0 +52,1 @@\n+import java.util.List;\n@@ -52,0 +54,1 @@\n+import java.util.Map;\n@@ -58,0 +61,3 @@\n+import java.util.regex.Pattern;\n+import java.util.stream.Stream;\n+\n@@ -94,0 +100,4 @@\n+    private static final String SKELETON_PATTERN = \"SP.\";\n+\n+    \/\/ ResourceBundle key names for skeletons\n+    private static final String SKELETON_INPUT_REGIONS_KEY = \"DateFormatItemInputRegions\";\n@@ -101,0 +111,25 @@\n+    \/\/ RegEx pattern for skeleton validity checking\n+    private static final Pattern VALID_SKELETON_PATTERN = Pattern.compile(\n+        \"(?<date>\" +\n+        \"G{0,5}\" +        \/\/ Era\n+        \"y*\" +            \/\/ Year\n+        \"Q{0,5}\" +        \/\/ Quarter\n+        \"M{0,5}\" +        \/\/ Month\n+        \"w*\" +            \/\/ Week of Week Based Year\n+        \"E{0,5}\" +        \/\/ Day of Week\n+        \"d{0,2})\" +       \/\/ Day of Month\n+        \"(?<time>\" +\n+        \"B{0,5}\" +        \/\/ Period\/AmPm of Day\n+        \"[hHjC]{0,2}\" +   \/\/ Hour of Day\/AmPm\n+        \"m{0,2}\" +        \/\/ Minute of Hour\n+        \"s{0,2}\" +        \/\/ Second of Minute\n+        \"[vz]{0,4})\");    \/\/ Zone\n+\n+    \/\/ Input Skeleton map for \"preferred\" and \"allowed\"\n+    \/\/ Map<\"preferred\"\/\"allowed\", Map<\"region\", \"skeleton\">>\n+    private static Map<String, Map<String, String>> inputSkeletons;\n+\n+    \/\/ Skeletons for \"j\" and \"C\" input skeleton symbols for this locale\n+    private String jPattern;\n+    private String CPattern;\n+\n@@ -534,0 +569,196 @@\n+    \/**\n+     * Returns the actual format pattern string based on the requested template\n+     * and calendar type for this locale.\n+     *\n+     * @param requestedTemplate requested template\n+     * @param calType calendar type\n+     * @throws IllegalArgumentException if the requested template is invalid\n+     * @return format pattern string for this locale, null if not found\n+     *\/\n+    public String getLocalizedPattern(String requestedTemplate, String calType) {\n+        String pattern;\n+        String cacheKey = SKELETON_PATTERN + calType + \".\" + requestedTemplate;\n+\n+        removeEmptyReferences();\n+        ResourceReference data = cache.get(cacheKey);\n+\n+        if (data == null || ((pattern = (String) data.get()) == null)) {\n+            pattern = getLocalizedPatternImpl(requestedTemplate, calType);\n+            cache.put(cacheKey,\n+                new ResourceReference(cacheKey, pattern != null ? pattern : \"\", referenceQueue));\n+        } else if (\"\".equals(pattern)) {\n+            \/\/ non-existent pattern\n+            pattern = null;\n+        }\n+\n+        return pattern;\n+    }\n+\n+    private String getLocalizedPatternImpl(String requestedTemplate, String calType) {\n+        initSkeletonIfNeeded();\n+\n+        \/\/ input skeleton substitution\n+        var skeleton = substituteInputSkeletons(requestedTemplate);\n+\n+        \/\/ validity check\n+        var matcher = VALID_SKELETON_PATTERN.matcher(skeleton);\n+        if (!matcher.matches()) {\n+            throw new IllegalArgumentException(\"Requested template \\\"%s\\\" is invalid\".formatted(requestedTemplate) +\n+                    (requestedTemplate.equals(skeleton) ? \".\" : \", which translated into \\\"%s\\\"\".formatted(skeleton) +\n+                            \" after the 'j' or 'C' substitution.\"));\n+        }\n+\n+        \/\/ try to match entire requested template first\n+        String matched = matchSkeleton(skeleton, calType);\n+        if (matched == null) {\n+            \/\/ 2.6.2.2 Missing Skeleton Fields\n+            var dateMatched = matchSkeleton(matcher.group(\"date\"), calType);\n+            var timeMatched = matchSkeleton(matcher.group(\"time\"), calType);\n+            if (dateMatched != null && timeMatched != null) {\n+                \/\/ combine both matches\n+                var style = switch (requestedTemplate.replaceAll(\"[^M]+\", \"\").length()) {\n+                    case 4 -> requestedTemplate.indexOf('E') >= 0 ? 0 : 1;\n+                    case 3 -> 2;\n+                    default -> 3;\n+                };\n+                var dateTimePattern = getDateTimePattern(null, \"DateTimePatterns\", style, calType);\n+                matched = MessageFormat.format(dateTimePattern.replaceAll(\"'\", \"''\"), timeMatched, dateMatched);\n+            }\n+        }\n+\n+        trace(\"requested: %s, locale: %s, calType: %s, matched: %s\\n\", requestedTemplate, locale, calType, matched);\n+\n+        return matched;\n+    }\n+\n+    private String matchSkeleton(String skeleton, String calType) {\n+        \/\/ Expand it with possible inferred skeleton stream based on its priority\n+        var inferred = possibleInferred(skeleton);\n+\n+        \/\/ Search the closest format pattern string from the resource bundle\n+        ResourceBundle r = localeData.getDateFormatData(locale);\n+        return inferred\n+            .map(s -> (\"gregory\".equals(calType) ? \"\" : calType + \".\") + \"DateFormatItem.\" + s)\n+            .map(key -> r.containsKey(key) ? r.getString(key) : null)\n+            .filter(Objects::nonNull)\n+            .findFirst()\n+            .orElse(null);\n+    }\n+\n+    private void initSkeletonIfNeeded() {\n+        \/\/ \"preferred\"\/\"allowed\" input skeleton maps\n+        if (inputSkeletons == null) {\n+            inputSkeletons = new HashMap<>();\n+            Pattern p = Pattern.compile(\"([^:]+):([^;]+);\");\n+            ResourceBundle r = localeData.getDateFormatData(Locale.ROOT);\n+            Stream.of(\"preferred\", \"allowed\").forEach(type -> {\n+                var inputRegionsKey = SKELETON_INPUT_REGIONS_KEY + \".\" + type;\n+                Map<String, String> typeMap = new HashMap<>();\n+\n+                if (r.containsKey(inputRegionsKey)) {\n+                    p.matcher(r.getString(inputRegionsKey)).results()\n+                        .forEach(mr ->\n+                            Arrays.stream(mr.group(2).split(\" \"))\n+                                .forEach(region -> typeMap.put(region, mr.group(1))));\n+                }\n+                inputSkeletons.put(type, typeMap);\n+            });\n+        }\n+\n+        \/\/ j\/C patterns for this locale\n+        if (jPattern == null) {\n+            jPattern = resolveInputSkeleton(\"preferred\");\n+            CPattern = resolveInputSkeleton(\"allowed\");\n+            \/\/ hack: \"allowed\" contains reversed order for hour\/period, e.g, \"hB\" which should be \"Bh\" as a skeleton\n+            if (CPattern.length() == 2) {\n+                var ba = new byte[2];\n+                ba[0] = (byte)CPattern.charAt(1);\n+                ba[1] = (byte)CPattern.charAt(0);\n+                CPattern = new String(ba);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Resolve locale specific input skeletons. Fall back method is different from usual\n+     * resource bundle's, as it has to be \"lang-region\" -> \"region\" -> \"lang-001\" -> \"001\"\n+     * @param type type of the input skeleton\n+     * @return resolved skeletons for this locale, defaults to \"h\" if none found.\n+     *\/\n+    private String resolveInputSkeleton(String type) {\n+        var regionToSkeletonMap = inputSkeletons.get(type);\n+        return regionToSkeletonMap.getOrDefault(locale.getLanguage() + \"-\" + locale.getCountry(),\n+            regionToSkeletonMap.getOrDefault(locale.getCountry(),\n+                regionToSkeletonMap.getOrDefault(locale.getLanguage() + \"-001\",\n+                    regionToSkeletonMap.getOrDefault(\"001\", \"h\"))));\n+    }\n+\n+    \/**\n+     * Replace 'j' and 'C' input skeletons with locale specific patterns. Note that 'j'\n+     * is guaranteed to be replaced with one char [hkHK], while 'C' may be replaced with\n+     * multiple chars. Repeat each as much as 'C' count.\n+     * @param requestedTemplate requested skeleton\n+     * @return skeleton with j\/C substituted with concrete patterns\n+     *\/\n+    private String substituteInputSkeletons(String requestedTemplate) {\n+        var cCount = requestedTemplate.chars().filter(c -> c == 'C').count();\n+        return requestedTemplate.replaceAll(\"j\", jPattern)\n+                .replaceFirst(\"C+\", CPattern.replaceAll(\"([hkHK])\", \"$1\".repeat((int)cCount)));\n+    }\n+\n+    \/**\n+     * Returns a stream of possible skeletons, inferring standalone\/format (M\/L and\/or E\/c) patterns\n+     * and their styles. (cf. 2.6.2.1 Matching Skeletons)\n+     *\n+     * @param skeleton original skeleton\n+     * @return inferred Stream of skeletons in its priority order\n+     *\/\n+    private Stream<String> possibleInferred(String skeleton) {\n+        return priorityList(skeleton, \"M\", \"L\").stream()\n+                .flatMap(s -> priorityList(s, \"E\", \"c\").stream())\n+                .distinct();\n+    }\n+\n+    \/**\n+     * Inferring the possible format styles in priority order, based on the original\n+     * skeleton length.\n+     *\n+     * @param skeleton skeleton\n+     * @param pChar pattern character string\n+     * @param subChar substitute character string\n+     * @return list of skeletons\n+     *\/\n+    private List<String> priorityList(String skeleton, String pChar, String subChar) {\n+        int first = skeleton.indexOf(pChar);\n+        int last = skeleton.lastIndexOf(pChar);\n+\n+        if (first >= 0) {\n+            var prefix = skeleton.substring(0, first);\n+            var suffix = skeleton.substring(last + 1);\n+\n+            \/\/ Priority are based on this chart. First column is the original count of `pChar`,\n+            \/\/ then it is followed by inferred skeletons base on priority.\n+            \/\/\n+            \/\/ 1->2->3->4 (number form (1-digit) -> number form (2-digit) -> Abbr. form -> Full form)\n+            \/\/ 2->1->3->4\n+            \/\/ 3->4->2->1\n+            \/\/ 4->3->2->1\n+            var o1 = prefix + pChar + suffix;\n+            var o2 = prefix + pChar.repeat(2) + suffix;\n+            var o3 = prefix + pChar.repeat(3) + suffix;\n+            var o4 = prefix + pChar.repeat(4) + suffix;\n+            var s1 = prefix + subChar + suffix;\n+            var s2 = prefix + subChar.repeat(2) + suffix;\n+            var s3 = prefix + subChar.repeat(3) + suffix;\n+            var s4 = prefix + subChar.repeat(4) + suffix;\n+            return switch (last - first) {\n+                case 1 -> List.of(skeleton, o1, o2, o3, o4, s1, s2, s3, s4);\n+                case 2 -> List.of(skeleton, o2, o1, o3, o4, s2, s1, s3, s4);\n+                case 3 -> List.of(skeleton, o3, o4, o2, o1, s3, s4, s2, s1);\n+                default -> List.of(skeleton, o4, o3, o2, o1, s4, s3, s2, s1);\n+            };\n+        } else {\n+            return List.of(skeleton);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/provider\/LocaleResources.java","additions":232,"deletions":1,"binary":false,"changes":233,"status":"modified"},{"patch":"@@ -14,1 +14,1 @@\n-https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/cbbba1d234670453df9c930dfbf510c0474d4301\/public_suffix_list.dat.\n+https:\/\/raw.githubusercontent.com\/publicsuffix\/list\/3c213aab32b3c014f171b1673d4ce9b5cd72bf1c\/public_suffix_list.dat.\n","filename":"src\/java.base\/share\/legal\/public_suffix.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -515,0 +515,9 @@\n+.B \\f[CB]\\-\\-finalization=\\f[R]\\f[I]value\\f[R]\n+Controls whether the JVM performs finalization of objects.\n+Valid values are \"enabled\" and \"disabled\".\n+Finalization is enabled by default, so the value \"enabled\" does nothing.\n+The value \"disabled\" disables finalization, so that no finalizers are\n+invoked.\n+.RS\n+.RE\n+.TP\n@@ -1084,2 +1093,4 @@\n-purposes only and may cause intermittent failures due to the use of\n-address space layout randomization by the operation system.\n+purposes only.\n+It may cause the VM to unexpectedly exit during start\\-up when the CDS\n+archive cannot be used (for example, when certain VM parameters are\n+changed, or when a different JDK is used).\n@@ -1973,0 +1984,26 @@\n+.TP\n+.B \\f[CB]\\-XX:UseBranchProtection=\\f[R]\\f[I]mode\\f[R]\n+Specifies the branch protection mode. All options other than none require\n+the VM to have been built with branch protection enabled. In addition, for\n+full protection, any native libraries provided by applications should be\n+compiled with the same level of protection. (AArch64 Linux only).\n+.RS\n+.PP\n+Possible \\f[I]mode\\f[R] arguments for this option include the\n+following:\n+.RS\n+.TP\n+.B \\f[CB]none\\f[R]\n+Do not use branch protection. This is the default value.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]standard\\f[R]\n+Enables all branch protection modes available on the current platform.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]pac-ret\\f[R]\n+Enables protection against ROP based attacks. (AArch64 8.3+ only)\n+.RS\n+.RE\n@@ -2969,5 +3006,13 @@\n-.B \\f[CB]\\-XX:+ExtendedDTraceProbes\\f[R]\n-\\f[B]Linux and macOS:\\f[R] Enables additional \\f[CB]dtrace\\f[R] tool probes\n-that affect the performance.\n-By default, this option is disabled and \\f[CB]dtrace\\f[R] performs only\n-standard probes.\n+.B \\f[CB]\\-XX:+DTraceAllocProbes\\f[R]\n+\\f[B]Linux and macOS:\\f[R] Enable \\f[CB]dtrace\\f[R] tool probes for object allocation.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-XX:+DTraceMethodProbes\\f[R]\n+\\f[B]Linux and macOS:\\f[R] Enable \\f[CB]dtrace\\f[R] tool probes for method-entry\n+and method-exit.\n+.RS\n+.RE\n+.TP\n+.B \\f[CB]\\-XX:+DTraceMonitorProbes\\f[R]\n+\\f[B]Linux and macOS:\\f[R] Enable \\f[CB]dtrace\\f[R] tool probes for monitor events.\n@@ -4000,0 +4045,10 @@\n+.B \\f[CB]\\-XX:+ExtendedDTraceProbes\\f[R]\n+\\f[B]Linux and macOS:\\f[R] Enables additional \\f[CB]dtrace\\f[R] tool probes\n+that affect performance.\n+By default, this option is disabled and \\f[CB]dtrace\\f[R] performs only\n+standard probes.\n+Use the combination of these flags instead: \\f[CB]\\-XX:+DTraceMethodProbes\\f[R],\n+\\f[CB]\\-XX:+DTraceAllocProbes\\f[R], \\f[CB]\\-XX:+DTraceMonitorProbes\\f[R].\n+.RS\n+.RE\n+.TP\n@@ -5250,2 +5305,7 @@\n-Application Class Data Sharing (AppCDS) extends class data sharing (CDS)\n-to enable application classes to be placed in a shared archive.\n+Application Class Data Sharing (AppCDS) stores classes used by your\n+applications in an archive file.\n+Since these classes are stored in a format that can be loaded very\n+quickly (compared to classes stored in a JAR file), AppCDS can improve\n+the start\\-up time of your applications.\n+In addition, AppCDS can reduce the runtime memory footprint by sharing\n+parts of these classes across multiple processes.\n@@ -5253,12 +5313,9 @@\n-In addition to the core library classes, AppCDS supports \\f[B]Class Data\n-Sharing\\f[R]\n-[https:\/\/docs.oracle.com\/en\/java\/javase\/12\/vm\/class\\-data\\-sharing.html#GUID\\-7EAA3411\\-8CF0\\-4D19\\-BD05\\-DF5E1780AA91]\n-from the following locations:\n-.IP \\[bu] 2\n-Platform classes from the runtime image\n-.IP \\[bu] 2\n-Application classes from the runtime image\n-.IP \\[bu] 2\n-Application classes from the class path\n-.IP \\[bu] 2\n-Application classes from the module path\n+Classes in the CDS archive are stored in an optimized format that\\[aq]s\n+about 2 to 5 times larger than classes stored in JAR files or the JDK\n+runtime image.\n+Therefore, it\\[aq]s a good idea to archive only those classes that are\n+actually used by your application.\n+These usually are just a small portion of all available classes.\n+For example, your application may use only a few APIs provided by a\n+large library.\n+.SS Using CDS Archives\n@@ -5266,3 +5323,6 @@\n-Archiving application classes provides better start up time at runtime.\n-When running multiple JVM processes, AppCDS also reduces the runtime\n-footprint with memory sharing for read\\-only metadata.\n+By default, in most JDK distributions, unless \\f[CB]\\-Xshare:off\\f[R] is\n+specified, the JVM starts up with a default CDS archive, which is\n+usually located in \\f[CB]JAVA_HOME\/lib\/server\/classes.jsa\\f[R] (or\n+\\f[CB]JAVA_HOME\\\\bin\\\\server\\\\classes.jsa\\f[R] on Windows).\n+This archive contains about 1300 core library classes that are used by\n+most applications.\n@@ -5270,1 +5330,4 @@\n-CDS\/AppCDS supports archiving classes from JAR files only.\n+To use CDS for the exact set of classes used by your application, you\n+can use the \\f[CB]\\-XX:SharedArchiveFile\\f[R] option, which has the\n+general form:\n+.RS\n@@ -5272,5 +5335,2 @@\n-Prior to JDK 11, a non\\-empty directory was reported as a fatal error in\n-the following conditions:\n-.IP \\[bu] 2\n-For base CDS, a non\\-empty directory cannot exist in the\n-\\f[CB]\\-Xbootclasspath\/a\\f[R] path\n+\\f[CB]\\-XX:SharedArchiveFile=<static_archive>:<dynamic_archive>\\f[R]\n+.RE\n@@ -5278,8 +5338,1 @@\n-With \\f[CB]\\-XX:+UseAppCDS\\f[R], a non\\-empty directory could not exist in\n-the \\f[CB]\\-Xbootclasspath\/a\\f[R] path, class path, and module path.\n-.PP\n-In JDK 11 and later, \\f[CB]\\-XX:+UseAppCDS\\f[R] is obsolete and the\n-behavior for a non\\-empty directory is based on the class types in the\n-classlist.\n-A non\\-empty directory is reported as a fatal error in the following\n-conditions:\n+The \\f[CB]<static_archive>\\f[R] overrides the default CDS archive.\n@@ -5287,3 +5340,2 @@\n-If application classes or platform classes are not loaded, dump time\n-only reports an error if a non\\-empty directory exists in\n-\\f[CB]\\-Xbootclasspath\/a\\f[R] path\n+The \\f[CB]<dynamic_archive>\\f[R] provides additional classes that can be\n+loaded on top of those in the \\f[CB]<static_archive>\\f[R].\n@@ -5291,10 +5343,2 @@\n-If application classes or platform classes are loaded, dump time reports\n-an error for a non\\-empty directory that exists in\n-\\f[CB]\\-Xbootclasspath\/a\\f[R] path, class path, or module path\n-.PP\n-In JDK 11 and later, using\n-\\f[CB]\\-XX:DumpLoadedClassList=\\f[R]\\f[I]class_list_file\\f[R] results a\n-generated classlist with all classes (both system library classes and\n-application classes) included.\n-You no longer have to specify \\f[CB]\\-XX:+UseAppCDS\\f[R] with\n-\\f[CB]\\-XX:DumpLoadedClassList\\f[R] to produce a complete class list.\n+On Windows, the above path delimiter \\f[CB]:\\f[R] should be replaced with\n+\\f[CB];\\f[R]\n@@ -5302,4 +5346,3 @@\n-In JDK 11 and later, because \\f[CB]UseAppCDS\\f[R] is obsolete,\n-\\f[CB]SharedArchiveFile\\f[R] becomes a product flag by default.\n-Specifying \\f[CB]+UnlockDiagnosticVMOptions\\f[R] for\n-\\f[CB]SharedArchiveFile\\f[R] is no longer needed in any configuration.\n+(The names \"static\" and \"dyanmic\" are used for historical reasons.\n+The only significance is that the \"static\" archive is loaded first and\n+the \"dynamic\" archive is loaded second).\n@@ -5307,4 +5350,3 @@\n-Class Data Sharing (CDS)\/AppCDS does not support archiving array classes\n-in a class list.\n-When an array in the class list is encountered, CDS dump time gives the\n-explicit error message:\n+The JVM can use up to two archives.\n+To use only a single \\f[CB]<static_archive>\\f[R], you can omit the\n+\\f[CB]<dynamic_archive>\\f[R] portion:\n@@ -5313,1 +5355,1 @@\n-\\f[CB]Preload\\ Warning:\\ Cannot\\ find\\f[R] \\f[I]array_name\\f[R]\n+\\f[CB]\\-XX:SharedArchiveFile=<static_archive>\\f[R]\n@@ -5316,26 +5358,3 @@\n-Although an array in the class list is not allowed, some array classes\n-can still be created at CDS\/AppCDS dump time.\n-Those arrays are created during the execution of the Java code used by\n-the Java class loaders (\\f[CB]PlatformClassLoader\\f[R] and the system\n-class loader) to load classes at dump time.\n-The created arrays are archived with the rest of the loaded classes.\n-.SS Extending Class Data Sharing to Support the Module Path\n-.PP\n-In JDK 11, Class Data Sharing (CDS) has been improved to support\n-archiving classes from the module path.\n-.IP \\[bu] 2\n-To create a CDS archive using the \\f[CB]\\-\\-module\\-path\\f[R] VM option,\n-use the following command line syntax:\n-.RS 2\n-.RS\n-.PP\n-\\f[CB]java\\ \\-Xshare:dump\\ \\-XX:SharedClassListFile=\\f[R]\\f[I]class_list_file\\f[R]\n-\\f[CB]\\-XX:SharedArchiveFile=\\f[R]\\f[I]shared_archive_file\\f[R]\n-\\f[CB]\\-\\-module\\-path=\\f[R]\\f[I]path_to_modular_jar\\f[R] \\f[CB]\\-m\\f[R]\n-\\f[I]module_name\\f[R]\n-.RE\n-.RE\n-.IP \\[bu] 2\n-To run with a CDS archive using the \\f[CB]\\-\\-module\\-path\\f[R] VM option,\n-use the following the command line syntax:\n-.RS 2\n+For convenience, the \\f[CB]<dynamic_archive>\\f[R] records the location of\n+the \\f[CB]<static_archive>\\f[R].\n+Therefore, you can omit the \\f[CB]<static_archive>\\f[R] by saying only:\n@@ -5344,3 +5363,1 @@\n-\\f[CB]java\\ \\-XX:SharedArchiveFile=\\f[R]\\f[I]shared_archive_file\\f[R]\n-\\f[CB]\\-\\-module\\-path=\\f[R]\\f[I]path_to_modular_jar\\f[R] \\f[CB]\\-m\\f[R]\n-\\f[I]module_name\\f[R]\n+\\f[CB]\\-XX:SharedArchiveFile=<dynamic_archive>\\f[R]\n@@ -5348,63 +5365,1 @@\n-.RE\n-.PP\n-The following table describes how the VM options related to module paths\n-can be used along with the \\f[CB]\\-Xshare\\f[R] option.\n-.PP\n-.TS\n-tab(@);\n-l l l.\n-T{\n-Option\n-T}@T{\n-\\-Xshare:dump\n-T}@T{\n-\\-Xshare:{on,auto}\n-T}\n-_\n-T{\n-\\f[CB]\\-\\-module\\-path\\f[R][1] \\f[I]mp\\f[R]\n-T}@T{\n-Allowed\n-T}@T{\n-Allowed[2]\n-T}\n-T{\n-\\f[CB]\\-\\-module\\f[R]\n-T}@T{\n-Allowed\n-T}@T{\n-Allowed\n-T}\n-T{\n-\\f[CB]\\-\\-add\\-module\\f[R]\n-T}@T{\n-Allowed\n-T}@T{\n-Allowed\n-T}\n-T{\n-\\f[CB]\\-\\-upgrade\\-module\\-path\\f[R][3]\n-T}@T{\n-Disallowed (exits if specified)\n-T}@T{\n-Allowed (disables CDS)\n-T}\n-T{\n-\\f[CB]\\-\\-patch\\-module\\f[R][4]\n-T}@T{\n-Disallowed (exits if specified)\n-T}@T{\n-Allowed (disables CDS)\n-T}\n-T{\n-\\f[CB]\\-\\-limit\\-modules\\f[R][5]\n-T}@T{\n-Disallowed (exits if specified)\n-T}@T{\n-Allowed (disables CDS)\n-T}\n-.TE\n-.PP\n-[1] Although there are two ways of specifying a module in a\n-\\f[CB]\\-\\-module\\-path\\f[R], that is, modular JAR or exploded module, only\n-modular JARs are supported.\n+.SS Creating CDS Archives\n@@ -5412,57 +5367,1 @@\n-[2] Different \\f[I]mp\\f[R] can be specified during dump time versus run\n-time.\n-If an archived class K was loaded from \\f[CB]mp1.jar\\f[R] at dump time,\n-but changes in \\f[I]mp\\f[R] cause it to be available from a different\n-\\f[CB]mp2.jar\\f[R] at run time, then the archived version of K will be\n-disregarded at run time; K will be loaded dynamically.\n-.PP\n-[3] Currently, only two system modules are upgradeable\n-(\\f[CB]java.compiler\\f[R] and \\f[CB]jdk.internal.vm.compiler\\f[R]).\n-However, these modules are seldom upgraded in production software.\n-.PP\n-[4] As documented in JEP 261, using \\f[CB]\\-\\-patch\\-module\\f[R] is\n-strongly discouraged for production use.\n-.PP\n-[5] \\f[CB]\\-\\-limit\\-modules\\f[R] is intended for testing purposes.\n-It is seldom used in production software.\n-.PP\n-If \\f[CB]\\-\\-upgrade\\-module\\-path\\f[R], \\f[CB]\\-\\-patch\\-module\\f[R], or\n-\\f[CB]\\-\\-limit\\-modules\\f[R] is specified at dump time, an error will be\n-printed and the JVM will exit.\n-For example, if the \\f[CB]\\-\\-limit\\-modules\\f[R] option is specified at\n-dump time, the user will see the following error:\n-.IP\n-.nf\n-\\f[CB]\n-Error\\ occurred\\ during\\ initialization\\ of\\ VM\n-Cannot\\ use\\ the\\ following\\ option\\ when\\ dumping\\ the\\ shared\\ archive:\\ \\-\\-limit\\-modules\n-\\f[R]\n-.fi\n-.PP\n-If \\f[CB]\\-\\-upgrade\\-module\\-path\\f[R], \\f[CB]\\-\\-patch\\-module\\f[R], or\n-\\f[CB]\\-\\-limit\\-modules\\f[R] is specified at run time, a warning message\n-will be printed indicating that CDS is disabled.\n-For example, if the \\f[CB]\\-\\-limit\\-modules\\f[R] options is specified at\n-run time, the user will see the following warning:\n-.IP\n-.nf\n-\\f[CB]\n-Java\\ HotSpot(TM)\\ 64\\-Bit\\ Server\\ VM\\ warning:\\ CDS\\ is\\ disabled\\ when\\ the\\ \\-\\-limit\\-modules\\ option\\ is\\ specified.\n-\\f[R]\n-.fi\n-.PP\n-Several other noteworthy things include:\n-.IP \\[bu] 2\n-Any valid combinations of \\f[CB]\\-cp\\f[R] and \\f[CB]\\-\\-module\\-path\\f[R]\n-are supported.\n-.IP \\[bu] 2\n-A non\\-empty directory in the module path causes a fatal error.\n-The user will see the following error messages:\n-.RS 2\n-.IP\n-.nf\n-\\f[CB]\n-Error:\\ non\\-empty\\ directory\\ <directory>\\ Hint:\\ enable\\ \\-Xlog:class+path=info\\ to\\ diagnose\\ the\\ failure\\ Error\\ occurred\\ during\\ initialization\\ of\\ VM\\ Cannot\\ have\\ non\\-empty\\ directory\\ in\\ paths\n-\\f[R]\n-.fi\n-.RE\n+CDS archives can be created with several methods:\n@@ -5470,3 +5369,1 @@\n-Unlike the class path, there\\[aq]s no restriction that the module path\n-at dump time must be equal to or be a prefix of the module path at run\n-time.\n+\\f[CB]\\-Xshare:dump\\f[R]\n@@ -5474,2 +5371,1 @@\n-The archive is invalidated if an existing JAR in the module path is\n-updated after archive generation.\n+\\f[CB]\\-XX:ArchiveClassesAtExit\\f[R]\n@@ -5477,4 +5373,1 @@\n-Removing a JAR from the module path does not invalidate the shared\n-archive.\n-Archived classes from the removed JAR are not used at runtime.\n-.SS Dynamic CDS archive\n+\\f[CB]jcmd\\ VM.cds\\f[R]\n@@ -5482,7 +5375,4 @@\n-Dynamic CDS archive extends AppCDS to allow archiving of classes when a\n-Java application exits.\n-It improves the usability of AppCDS by eliminating the trial run step\n-for creating a class list for each application.\n-The archived classes include all loaded application classes and library\n-classes that are not present in the default CDS archive which is\n-included in the JDK.\n+One common operation in all these methods is a \"trial run\", where you\n+run the application once to determine the classes that should be stored\n+in the archive.\n+.SS Creating a Static CDS Archive File with \\-Xshare:dump\n@@ -5490,47 +5380,2 @@\n-A base archive is required when creating a dynamic archive.\n-If the base archive is not specified, the default CDS archive is used as\n-the base archive.\n-.PP\n-To create a dynamic CDS archive with the default CDS archive as the base\n-archive, just add the\n-\\f[CB]\\-XX:ArchiveClassesAtExit=<dynamic\\ archive>\\f[R] option to the\n-command line for running the Java application.\n-.PP\n-If the default CDS archive does not exist, the VM will exit with the\n-following error:\n-.IP\n-.nf\n-\\f[CB]\n-ArchiveClassesAtExit\\ not\\ supported\\ when\\ base\\ CDS\\ archive\\ is\\ not\\ loaded\n-\\f[R]\n-.fi\n-.PP\n-To run the Java application using a dynamic CDS archive, just add the\n-\\f[CB]\\-XX:SharedArchiveFile=<dynamic\\ archive>\\f[R] option to the command\n-line for running the Java application.\n-.PP\n-The base archive is not required to be specified in the command line.\n-The base archive information, including its name and full path, will be\n-retrieved from the dynamic archive header.\n-Note that the user could also use the \\f[CB]\\-XX:SharedArchiveFile\\f[R]\n-option for specifying a regular AppCDS archive.\n-Therefore, the specified archive in the \\f[CB]\\-XX:SharedArchiveFile\\f[R]\n-option could be either a regular or dynamic archive.\n-During VM start up the specified archive header will be read.\n-If \\f[CB]\\-XX:SharedArchiveFile\\f[R] refers to a regular archive, then the\n-behavior will be unchanged.\n-If \\f[CB]\\-XX:SharedArchiveFile\\f[R] refers to a dynamic archive, the VM\n-will retrieve the base archive location from the dynamic archive.\n-If the dynamic archive was created with the default CDS archive, then\n-the current default CDS archive will be used, and will be found relative\n-to the current run time environment.\n-.PP\n-Please refer to \\f[B]JDK\\-8221706\\f[R]\n-[https:\/\/bugs.openjdk.java.net\/browse\/JDK\\-8221706] for details on error\n-checking during dynamic CDS archive dump time and run time.\n-.SS Creating a Shared Archive File and Using It to Run an Application\n-.SS AppCDS archive\n-.PP\n-The following steps create a shared archive file that contains all the\n-classes used by the \\f[CB]test.Hello\\f[R] application.\n-The last step runs the application with the shared archive file.\n+The following steps create a static CDS archive file that contains all\n+the classes used by the \\f[CB]test.Hello\\f[R] application.\n@@ -5548,2 +5393,2 @@\n-Note that the classpath specified by the \\f[CB]\\-cp\\f[R] parameter must\n-contain only JAR files.\n+The classpath specified by the \\f[CB]\\-cp\\f[R] parameter must contain only\n+JAR files.\n@@ -5552,1 +5397,1 @@\n-Create a shared archive, named \\f[CB]hello.jsa\\f[R], that contains all the\n+Create a static archive, named \\f[CB]hello.jsa\\f[R], that contains all the\n@@ -5559,3 +5404,0 @@\n-.PP\n-Note that the classpath used at archive creation time must be the same\n-as (or a prefix of) the classpath used at run time.\n@@ -5564,1 +5406,1 @@\n-Run the application \\f[CB]test.Hello\\f[R] with the shared archive\n+Run the application \\f[CB]test.Hello\\f[R] with the archive\n@@ -5578,1 +5420,1 @@\n-\\f[CB]java\\ \\-XX:SharedArchiveFile=hello.jsa\\ \\-cp\\ hello.jar\\ \\-verbose:class\\ test.Hello\\f[R]\n+\\f[CB]java\\ \\-XX:SharedArchiveFile=hello.jsa\\ \\-cp\\ hello.jar\\ \\-Xlog:class+load\\ test.Hello\\f[R]\n@@ -5582,6 +5424,4 @@\n-.IP\n-.nf\n-\\f[CB]\n-Loaded\\ test.Hello\\ from\\ shared\\ objects\\ file\\ by\\ sun\/misc\/Launcher$AppClassLoader\n-\\f[R]\n-.fi\n+.RS\n+.PP\n+\\f[CB][info][class,load]\\ test.Hello\\ source:\\ shared\\ objects\\ file\\f[R]\n+.RE\n@@ -5589,1 +5429,8 @@\n-.SS Dynamic CDS archive\n+.SS Creating a Dynamic CDS Archive File with \\-XX:SharedArchiveFile\n+.PP\n+Advantages of dynamic CDS archives are:\n+.IP \\[bu] 2\n+They usually use less disk space, since they don\\[aq]t need to store the\n+classes that are already in the static archive.\n+.IP \\[bu] 2\n+They are created with one fewer step than the comparable static archive.\n@@ -5592,3 +5439,2 @@\n-classes used by the \\f[CB]test.Hello\\f[R] application and are not included\n-in the default CDS archive.\n-The second step runs the application with the dynamic CDS archive.\n+classes that are used by the \\f[CB]test.Hello\\f[R] application, excluding\n+those that are already in the default CDS archive.\n@@ -5604,3 +5450,0 @@\n-.PP\n-Note that the classpath used at archive creation time must be the same\n-as (or a prefix of) the classpath used at run time.\n@@ -5622,41 +5465,3 @@\n-To automate the above steps 1 and 2, one can write a script such as the\n-following:\n-.IP\n-.nf\n-\\f[CB]\n-\\ \\ \\ \\ ARCHIVE=hello.jsa\n-\\ \\ \\ \\ if\\ test\\ \\-f\\ $ARCHIVE;\\ then\n-\\ \\ \\ \\ \\ \\ \\ \\ FLAG=\"\\-XX:SharedArchiveFile=$ARCHIVE\"\n-\\ \\ \\ \\ else\n-\\ \\ \\ \\ \\ \\ \\ \\ FLAG=\"\\-XX:ArchiveClassesAtExit=$ARCHIVE\"\n-\\ \\ \\ \\ fi\n-\\ \\ \\ \\ $JAVA_HOME\/bin\/java\\ \\-cp\\ hello.jar\\ $FLAG\\ test.Hello\n-\\f[R]\n-.fi\n-.PP\n-Like an AppCDS archive, the archive needs to be re\\-generated if the\n-Java version has changed.\n-The above script could be adjusted to account for the Java version as\n-follows:\n-.IP\n-.nf\n-\\f[CB]\n-\\ \\ \\ \\ ARCHIVE=hello.jsa\n-\\ \\ \\ \\ VERSION=foo.version\n-\\ \\ \\ \\ if\\ test\\ \\-f\\ $ARCHIVE\\ \\-a\\ \\-f\\ $VERSION\\ &&\\ cmp\\ \\-s\\ $VERSION\\ $JAVA_HOME\/release;\\ then\n-\\ \\ \\ \\ \\ \\ \\ \\ FLAG=\"\\-XX:SharedArchiveFile=$ARCHIVE\"\n-\\ \\ \\ \\ else\n-\\ \\ \\ \\ \\ \\ \\ \\ FLAG=\"\\-XX:ArchiveClassesAtExit=$ARCHIVE\"\n-\\ \\ \\ \\ \\ \\ \\ \\ cp\\ \\-f\\ $JAVA_HOME\/release\\ $VERSION\n-\\ \\ \\ \\ fi\n-\\ \\ \\ \\ $JAVA_HOME\/bin\/java\\ \\-cp\\ hello.jar\\ $FLAG\\ test.Hello\n-\\f[R]\n-.fi\n-.PP\n-Currently, we don\\[aq]t support concurrent dumping operations to the\n-same CDS archive.\n-Care should be taken to avoid multiple writers to the same CDS archive.\n-.PP\n-The user could also create a dynamic CDS archive with a specific base\n-archive, e.g.\n-named as \\f[CB]base.jsa\\f[R] as follows:\n+It\\[aq]s also possible to create a dynamic CDS archive with a\n+non\\-default static CDS archive.\n+E.g.,\n@@ -5668,2 +5473,1 @@\n-To run the application using the dynamic CDS archive \\f[CB]hello.jsa\\f[R]\n-and a specific base CDS archive \\f[CB]base.jsa\\f[R]:\n+To run the application using this dynamic CDS archive:\n@@ -5675,8 +5479,2 @@\n-Note that on Windows, the above path delimiter \\f[CB]:\\f[R] should be\n-replaced with \\f[CB];\\f[R].\n-.PP\n-The above command for specifying a base archive is useful if the base\n-archive used for creating the dynamic archive has been moved.\n-Normally, just specifying the dynamic archive should be sufficient since\n-the base archive info can be retrieved from the dynamic archive header.\n-.SS Sharing a Shared Archive Across Multiple Application Processes\n+(On Windows, the above path delimiter \\f[CB]:\\f[R] should be replaced with\n+\\f[CB];\\f[R])\n@@ -5684,20 +5482,1 @@\n-You can share the same archive file across multiple applications\n-processes.\n-This reduces memory usage because the archive is memory\\-mapped into the\n-address space of the processes.\n-The operating system automatically shares the read\\-only pages across\n-these processes.\n-.PP\n-The following steps demonstrate how to create a common archive that can\n-be shared by different applications.\n-Classes from \\f[CB]common.jar\\f[R], \\f[CB]hello.jar\\f[R] and \\f[CB]hi.jar\\f[R]\n-are archived in the \\f[CB]common.jsa\\f[R] because they are all in the\n-classpath during the archiving step (step 3).\n-.PP\n-To include classes from \\f[CB]hello.jar\\f[R] and \\f[CB]hi.jar\\f[R], the\n-\\f[CB]\\&.jar\\f[R] files must be added to the classpath specified by the\n-\\f[CB]\\-cp\\f[R] parameter.\n-.IP \"1.\" 3\n-Create a list of all classes used by the \\f[CB]Hello\\f[R] application and\n-another list for the \\f[CB]Hi\\f[R] application:\n-.RS 4\n+As mention above, the name of the static archive can be skipped:\n@@ -5706,1 +5485,1 @@\n-\\f[CB]java\\ \\-XX:DumpLoadedClassList=hello.classlist\\ \\-cp\\ common.jar:hello.jar\\ Hello\\f[R]\n+\\f[CB]java\\ \\-XX:SharedArchiveFile=hello.jsa\\ \\-cp\\ hello.jar\\ Hello\\f[R]\n@@ -5708,1 +5487,1 @@\n-.RS\n+.SS Creating CDS Archive Files with jcmd\n@@ -5710,7 +5489,4 @@\n-\\f[CB]java\\ \\-XX:DumpLoadedClassList=hi.classlist\\ \\-cp\\ common.jar:hi.jar\\ Hi\\f[R]\n-.RE\n-.RE\n-.IP \"2.\" 3\n-Create a single list of classes used by all the applications that will\n-share the shared archive file.\n-.RS 4\n+The previous two sections require you to modify the application\\[aq]s\n+start\\-up script in order to create a CDS archive.\n+Sometimes this could be difficult, for example, if the application\\[aq]s\n+class path is set up by complex routines.\n@@ -5718,3 +5494,3 @@\n-\\f[B]Linux and macOS\\f[R] The following commands combine the files\n-\\f[CB]hello.classlist\\f[R] and \\f[CB]hi.classlist\\f[R] into one file,\n-\\f[CB]common.classlist\\f[R]:\n+The \\f[CB]jcmd\\ VM.cds\\f[R] command provides a less intrusive way for\n+creating a CDS archive by connecting to a running JVM process.\n+You can create either a static:\n@@ -5723,1 +5499,1 @@\n-\\f[CB]cat\\ hello.classlist\\ hi.classlist\\ >\\ common.classlist\\f[R]\n+\\f[CB]jcmd\\ <pid>\\ VM.cds\\ static_dump\\ my_static_archive.jsa\\f[R]\n@@ -5726,3 +5502,1 @@\n-\\f[B]Windows\\f[R] The following commands combine the files\n-\\f[CB]hello.classlist\\f[R] and \\f[CB]hi.classlist\\f[R] into one file,\n-\\f[CB]common.classlist\\f[R]:\n+or a dynamic archive:\n@@ -5731,2 +5505,1 @@\n-\\f[CB]type\\ hello.classlist\\ hi.classlist\\ >\\ common.classlist\\f[R]\n-.RE\n+\\f[CB]jcmd\\ <pid>\\ VM.cds\\ dynamic_dump\\ my_dynamic_archive.jsa\\f[R]\n@@ -5734,5 +5507,0 @@\n-.IP \"3.\" 3\n-Create a shared archive named \\f[CB]common.jsa\\f[R] that contains all the\n-classes in \\f[CB]common.classlist\\f[R]:\n-.RS 4\n-.RS\n@@ -5740,14 +5508,3 @@\n-\\f[CB]java\\ \\-Xshare:dump\\ \\-XX:SharedArchiveFile=common.jsa\\ \\-XX:SharedClassListFile=common.classlist\\ \\-cp\\ common.jar:hello.jar:hi.jar\\f[R]\n-.RE\n-.PP\n-The classpath parameter used is the common class path prefix shared by\n-the \\f[CB]Hello\\f[R] and \\f[CB]Hi\\f[R] applications.\n-.RE\n-.IP \"4.\" 3\n-Run the \\f[CB]Hello\\f[R] and \\f[CB]Hi\\f[R] applications with the same shared\n-archive:\n-.RS 4\n-.RS\n-.PP\n-\\f[CB]java\\ \\-XX:SharedArchiveFile=common.jsa\\ \\-cp\\ common.jar:hello.jar:hi.jar\\ Hello\\f[R]\n-.RE\n+To use the resulting archive file in a subsequent run of the application\n+without modifying the application\\[aq]s start\\-up script, you can use\n+the following technique:\n@@ -5756,2 +5513,1 @@\n-\\f[CB]java\\ \\-XX:SharedArchiveFile=common.jsa\\ \\-cp\\ common.jar:hello.jar:hi.jar\\ Hi\\f[R]\n-.RE\n+\\f[CB]env\\ JAVA_TOOL_OPTIONS=\\-XX:SharedArchiveFile=my_static_archive.jsa\\ bash\\ app_start.sh\\f[R]\n@@ -5759,1 +5515,0 @@\n-.SS Specifying Additional Shared Data Added to an Archive File\n@@ -5761,2 +5516,4 @@\n-The \\f[CB]SharedArchiveConfigFile\\f[R] option is used to specify\n-additional shared data to add to the archive file.\n+Note: to use \\f[CB]jcmd\\ <pid>\\ VM.cds\\ dynamic_dump\\f[R], the JVM process\n+identified by \\f[CB]<pid>\\f[R] must be started with\n+\\f[CB]\\-XX:+RecordDynamicDumpInfo\\f[R], which can also be passed to the\n+application start\\-up script with the same technique:\n@@ -5765,1 +5522,1 @@\n-\\f[CB]\\-XX:SharedArchiveConfigFile=\\f[R]\\f[I]shared_config_file\\f[R]\n+\\f[CB]env\\ JAVA_TOOL_OPTIONS=\\-XX:+RecordDynamicDumpInfo\\ bash\\ app_start.sh\\f[R]\n@@ -5767,67 +5524,22 @@\n-.PP\n-JDK 9 and later supports adding both symbols and string objects to an\n-archive for memory sharing when you have multiple JVM processes running\n-on the same host.\n-An example of this is having multiple JVM processes that use the same\n-set of Java EE classes.\n-When these common classes are loaded and used, new symbols and strings\n-may be created and added to the JVM\\[aq]s internal \"symbol\" and \"string\"\n-tables.\n-At runtime, the symbols or string objects mapped from the archive file\n-can be shared across multiple JVM processes, resulting in a reduction of\n-overall memory usage.\n-In addition, archiving strings also provides added performance benefits\n-in both startup time and runtime execution.\n-.PP\n-In JDK 10 and later, CONSTANT_String entries in archived classes are\n-resolved to interned String objects at dump time, and all interned\n-String objects are archived.\n-However, even though all CONSTANT_String literals in all archived\n-classes are resolved, it might still beneficial to add additional\n-strings that are not string literals in class files, but are likely to\n-be used by your application at run time.\n-.PP\n-Symbol data should be generated by the \\f[CB]jcmd\\f[R] tool attaching to a\n-running JVM process.\n-See \\f[B]jcmd\\f[R].\n-.PP\n-The following is an example of the symbol dumping command in\n-\\f[CB]jcmd\\f[R]:\n-.RS\n-.PP\n-\\f[CB]jcmd\\f[R] \\f[I]pid\\f[R] \\f[CB]VM.symboltable\\ \\-verbose\\f[R]\n-.RE\n-.RS\n-.PP\n-\\f[B]Note:\\f[R] The first line (process ID) and the second line\n-(\\f[CB]\\@VERSION\\ ...\\f[R]) of this \\f[CB]jcmd\\f[R] output should be\n-excluded from the configuration file.\n-.RE\n-.SS Example of a Configuration File\n-.PP\n-The following is an example of a configuration file:\n-.IP\n-.nf\n-\\f[CB]\n-VERSION:\\ 1.0\n-\\@SECTION:\\ Symbol\n-10\\ \\-1:\\ linkMethod\n-\\f[R]\n-.fi\n-.PP\n-In the configuration file example, the \\f[CB]\\@SECTION:\\ Symbol\\f[R] entry\n-uses the following format:\n-.RS\n-.PP\n-\\f[I]length\\f[R] \\f[I]refcount\\f[R]\\f[CB]:\\f[R] \\f[I]symbol\\f[R]\n-.RE\n-.PP\n-The \\f[I]refcount\\f[R] for a shared symbol is always \\f[CB]\\-1\\f[R].\n-.PP\n-\\f[CB]\\@SECTION\\f[R] specifies the type of the section that follows it.\n-All data within the section must be the same type that\\[aq]s specified\n-by \\f[CB]\\@SECTION\\f[R].\n-Different types of data can\\[aq]t be mixed.\n-Multiple separated data sections for the same type specified by\n-different \\f[CB]\\@SECTION\\f[R] are allowed within one\n-\\f[CB]shared_config_file\\f[R] .\n+.SS Restrictions on Class Path and Module Path\n+.IP \\[bu] 2\n+Neither the class path (\\f[CB]\\-classpath\\f[R] and\n+\\f[CB]\\-Xbootclasspath\/a\\f[R]) nor the module path\n+(\\f[CB]\\-\\-module\\-path\\f[R]) can contain non\\-empty directories.\n+.IP \\[bu] 2\n+Only modular JAR files are supported in \\f[CB]\\-\\-module\\-path\\f[R].\n+Exploded modules are not supported.\n+.IP \\[bu] 2\n+The class path used at archive creation time must be the same as (or a\n+prefix of) the class path used at run time.\n+(There\\[aq]s no such requirement for the module path.)\n+.IP \\[bu] 2\n+The CDS archive cannot be loaded if any JAR files in the class path or\n+module path are modified after the archive is generated.\n+.IP \\[bu] 2\n+If any of the VM options \\f[CB]\\-\\-upgrade\\-module\\-path\\f[R],\n+\\f[CB]\\-\\-patch\\-module\\f[R] or \\f[CB]\\-\\-limit\\-modules\\f[R] are specified,\n+CDS is disabled.\n+This means that the JVM will execute without loading any CDS archives.\n+In addition, if you try to create a CDS archive with any of these 3\n+options specified, the JVM will report an error.\n","filename":"src\/java.base\/share\/man\/java.1","additions":187,"deletions":475,"binary":false,"changes":662,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,0 +73,2 @@\n+.IP \\[bu] 2\n+\\f[CB]\\-version\\f[R]: Prints the program version\n@@ -222,0 +224,4 @@\n+.PP\n+\\f[B]Commands for Displaying Program Version\\f[R]:\n+.IP \\[bu] 2\n+\\f[CB]\\-version\\f[R]\n@@ -1317,0 +1323,4 @@\n+.SH COMMANDS FOR DISPLAYING PROGRAM VERSION\n+.PP\n+You can use \\f[CB]\\-version\\f[R] to print the program version of\n+\\f[CB]keytool\\f[R].\n","filename":"src\/java.base\/share\/man\/keytool.1","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"jvm.h\"\n@@ -60,13 +61,1 @@\n-    void *addr = NULL;\n-#ifdef WIN32\n-    HMODULE handle = GetModuleHandle(\"zip.dll\");\n-    if (handle == NULL) {\n-      handle = LoadLibrary(\"zip.dll\");\n-    }\n-    if (handle == NULL) {\n-      return NULL;\n-    }\n-    addr = (void*) GetProcAddress(handle, name);\n-    return addr;\n-#else\n-    addr = dlopen(JNI_LIB_PREFIX \"zip\" JNI_LIB_SUFFIX, RTLD_GLOBAL|RTLD_LAZY);\n+    void *addr = JVM_LoadZipLibrary();\n@@ -76,2 +65,4 @@\n-    addr = dlsym(addr, name);\n-    return addr;\n+#ifdef WIN32\n+    return (void*) GetProcAddress(static_cast<HMODULE>(addr), name);\n+#else\n+    return dlsym(addr, name);\n","filename":"src\/java.base\/share\/native\/libjimage\/imageDecompressor.cpp","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-import java.util.Properties;\n@@ -644,103 +643,0 @@\n-    \/\/ A FileInputStream that supports the deferment of the actual close\n-    \/\/ operation until the last pending I\/O operation on the stream has\n-    \/\/ finished.  This is required on Solaris because we must close the stdin\n-    \/\/ and stdout streams in the destroy method in order to reclaim the\n-    \/\/ underlying file descriptors.  Doing so, however, causes any thread\n-    \/\/ currently blocked in a read on one of those streams to receive an\n-    \/\/ IOException(\"Bad file number\"), which is incompatible with historical\n-    \/\/ behavior.  By deferring the close we allow any pending reads to see -1\n-    \/\/ (EOF) as they did before.\n-    \/\/\n-    private static class DeferredCloseInputStream extends PipeInputStream {\n-        DeferredCloseInputStream(FileDescriptor fd) {\n-            super(fd);\n-        }\n-\n-        private Object lock = new Object();     \/\/ For the following fields\n-        private boolean closePending = false;\n-        private int useCount = 0;\n-        private InputStream streamToClose;\n-\n-        private void raise() {\n-            synchronized (lock) {\n-                useCount++;\n-            }\n-        }\n-\n-        private void lower() throws IOException {\n-            synchronized (lock) {\n-                useCount--;\n-                if (useCount == 0 && closePending) {\n-                    streamToClose.close();\n-                }\n-            }\n-        }\n-\n-        \/\/ stc is the actual stream to be closed; it might be this object, or\n-        \/\/ it might be an upstream object for which this object is downstream.\n-        \/\/\n-        private void closeDeferred(InputStream stc) throws IOException {\n-            synchronized (lock) {\n-                if (useCount == 0) {\n-                    stc.close();\n-                } else {\n-                    closePending = true;\n-                    streamToClose = stc;\n-                }\n-            }\n-        }\n-\n-        public void close() throws IOException {\n-            synchronized (lock) {\n-                useCount = 0;\n-                closePending = false;\n-            }\n-            super.close();\n-        }\n-\n-        public int read() throws IOException {\n-            raise();\n-            try {\n-                return super.read();\n-            } finally {\n-                lower();\n-            }\n-        }\n-\n-        public int read(byte[] b) throws IOException {\n-            raise();\n-            try {\n-                return super.read(b);\n-            } finally {\n-                lower();\n-            }\n-        }\n-\n-        public int read(byte[] b, int off, int len) throws IOException {\n-            raise();\n-            try {\n-                return super.read(b, off, len);\n-            } finally {\n-                lower();\n-            }\n-        }\n-\n-        public long skip(long n) throws IOException {\n-            raise();\n-            try {\n-                return super.skip(n);\n-            } finally {\n-                lower();\n-            }\n-        }\n-\n-        public int available() throws IOException {\n-            raise();\n-            try {\n-                return super.available();\n-            } finally {\n-                lower();\n-            }\n-        }\n-    }\n-\n@@ -760,1 +656,1 @@\n-     * with the DeferredCloseInputStream approach used on Solaris. This means\n+     * with the deferring 'close' of InputStream. This means\n","filename":"src\/java.base\/unix\/classes\/java\/lang\/ProcessImpl.java","additions":2,"deletions":106,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.net.InetAddress;\n@@ -32,1 +31,0 @@\n-import java.net.MalformedURLException;\n@@ -34,1 +32,0 @@\n-import java.io.InputStream;\n@@ -45,8 +42,0 @@\n-    private String getHost(URL url) {\n-        String host = url.getHost();\n-        if (host == null)\n-            host = \"\";\n-        return host;\n-    }\n-\n-\n@@ -64,1 +53,1 @@\n-         * as a non-seperator character the damage of veering away from the\n+         * as a non-separator character the damage of veering away from the\n@@ -70,1 +59,1 @@\n-    public synchronized URLConnection openConnection(URL u)\n+    public URLConnection openConnection(URL u)\n@@ -75,1 +64,1 @@\n-    public synchronized URLConnection openConnection(URL u, Proxy p)\n+    public URLConnection openConnection(URL u, Proxy p)\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.net.InetAddress;\n@@ -32,1 +31,0 @@\n-import java.net.MalformedURLException;\n@@ -34,1 +32,0 @@\n-import java.io.InputStream;\n@@ -45,8 +42,0 @@\n-    private String getHost(URL url) {\n-        String host = url.getHost();\n-        if (host == null)\n-            host = \"\";\n-        return host;\n-    }\n-\n-\n@@ -64,1 +53,1 @@\n-         * as a non-seperator character the damage of veering away from the\n+         * as a non-separator character the damage of veering away from the\n@@ -70,1 +59,1 @@\n-    public synchronized URLConnection openConnection(URL url)\n+    public URLConnection openConnection(URL url)\n@@ -75,1 +64,1 @@\n-    public synchronized URLConnection openConnection(URL url, Proxy p)\n+    public URLConnection openConnection(URL url, Proxy p)\n","filename":"src\/java.base\/windows\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.net.UnixDomainSocketAddress;\n@@ -47,0 +48,1 @@\n+import static java.net.StandardProtocolFamily.UNIX;\n@@ -70,0 +72,1 @@\n+        private final boolean preferUnixDomain;\n@@ -74,1 +77,1 @@\n-        private Initializer(SelectorProvider sp) {\n+        private Initializer(SelectorProvider sp, boolean preferUnixDomain) {\n@@ -76,0 +79,1 @@\n+            this.preferUnixDomain = preferUnixDomain;\n@@ -123,1 +127,1 @@\n-                            ssc = createListener();\n+                            ssc = createListener(preferUnixDomain);\n@@ -165,0 +169,3 @@\n+                        if (sa instanceof UnixDomainSocketAddress uaddr) {\n+                            Files.deleteIfExists(uaddr.getPath());\n+                        }\n@@ -172,1 +179,1 @@\n-     * Creates a Pipe implementation that supports buffering.\n+     * Creates a (TCP) Pipe implementation that supports buffering.\n@@ -175,1 +182,1 @@\n-        this(sp, true);\n+        this(sp, true, false);\n@@ -179,1 +186,5 @@\n-     * Creates Pipe implementation that supports optionally buffering.\n+     * Creates Pipe implementation that supports optionally buffering\n+     * and is TCP by default, but if Unix domain is supported and\n+     * preferAfUnix is true, then Unix domain sockets are used.\n+     *\n+     * @param preferAfUnix use Unix domain sockets if supported\n@@ -181,2 +192,1 @@\n-     * @implNote Uses a loopback connection. When buffering is\n-     * disabled then it sets TCP_NODELAY on the sink channel.\n+     * @param buffering if false set TCP_NODELAY on TCP sockets\n@@ -185,2 +195,2 @@\n-    PipeImpl(SelectorProvider sp, boolean buffering) throws IOException {\n-        Initializer initializer = new Initializer(sp);\n+    PipeImpl(SelectorProvider sp, boolean preferAfUnix, boolean buffering) throws IOException {\n+        Initializer initializer = new Initializer(sp, preferAfUnix);\n@@ -208,2 +218,13 @@\n-    private static ServerSocketChannel createListener() throws IOException {\n-        ServerSocketChannel listener = ServerSocketChannel.open();\n+    private static ServerSocketChannel createListener(boolean preferUnixDomain) throws IOException {\n+        ServerSocketChannel listener = null;\n+        if (preferUnixDomain && UnixDomainSockets.isSupported()) {\n+            try {\n+                listener = ServerSocketChannel.open(UNIX);\n+                listener.bind(null);\n+                return listener;\n+            } catch (IOException | UnsupportedOperationException e) {\n+                if (listener != null)\n+                    listener.close();\n+            }\n+        }\n+        listener = ServerSocketChannel.open();\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/PipeImpl.java","additions":32,"deletions":11,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-            this.pipe = new PipeImpl(sp, \/*buffering*\/ false);\n+            this.pipe = new PipeImpl(sp, \/* AF_UNIX *\/ true, \/*buffering*\/ false);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WEPollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-        wakeupPipe = new PipeImpl(sp, false);\n+        wakeupPipe = new PipeImpl(sp, \/* AF_UNIX *\/ true, \/*buffering*\/ false);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -838,1 +838,1 @@\n-    CALTYPE isGenitive;\n+    CALTYPE isGenitive = 0;\n","filename":"src\/java.base\/windows\/native\/libjava\/HostLocaleProviderAdapter_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -107,1 +107,0 @@\n-    BOOL error = FALSE;\n@@ -119,1 +118,0 @@\n-        wchar_t *next_proxy = NULL;\n@@ -295,1 +293,0 @@\n-        wchar_t *context = NULL;\n@@ -318,0 +315,1 @@\n+            list_item *current = head;\n@@ -322,1 +320,1 @@\n-            while (head != NULL && index < nr_elems) {\n+            while (current != NULL && index < nr_elems) {\n@@ -327,1 +325,1 @@\n-                if (head->host != NULL && proxy_array != NULL) {\n+                if (current->host != NULL && proxy_array != NULL) {\n@@ -329,2 +327,2 @@\n-                    if (head->port == 0) {\n-                        head->port = defport;\n+                    if (current->port == 0) {\n+                        current->port = defport;\n@@ -332,1 +330,1 @@\n-                    jhost = (*env)->NewString(env, head->host, (jsize)wcslen(head->host));\n+                    jhost = (*env)->NewString(env, current->host, (jsize)wcslen(current->host));\n@@ -338,1 +336,1 @@\n-                                                         head->port);\n+                                                         current->port);\n@@ -352,1 +350,1 @@\n-                head = head->next;\n+                current = current->next;\n","filename":"src\/java.base\/windows\/native\/libnet\/DefaultProxySelector.c","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -218,1 +218,6 @@\n-    \/* TODO: properly check for IPv4 support on Windows *\/\n+    SOCKET s = socket(AF_INET, SOCK_STREAM, 0);\n+    if (s == INVALID_SOCKET) {\n+        return JNI_FALSE;\n+    }\n+    closesocket(s);\n+\n","filename":"src\/java.base\/windows\/native\/libnet\/net_util_md.c","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,0 +72,4 @@\n+    if (s == INVALID_SOCKET && WSAGetLastError() == WSAEAFNOSUPPORT) {\n+        \/* IPv4 unavailable... try IPv6 instead *\/\n+        s = socket(AF_INET6, SOCK_STREAM, 0);\n+    }\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsAsynchronousServerSocketChannelImpl.c","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,0 +69,4 @@\n+    if (s == INVALID_SOCKET && WSAGetLastError() == WSAEAFNOSUPPORT) {\n+        \/* IPv4 unavailable... try IPv6 instead *\/\n+        s = socket(AF_INET6, SOCK_STREAM, 0);\n+    }\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WindowsAsynchronousSocketChannelImpl.c","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,2 @@\n- * @see java.awt.Toolkit#getSystemClipboard\n- * @see java.awt.Toolkit#getSystemSelection\n+ * @see java.desktop\/java.awt.Toolkit#getSystemClipboard\n+ * @see java.desktop\/java.awt.Toolkit#getSystemSelection\n@@ -50,0 +50,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -84,1 +85,1 @@\n-     * @see java.awt.Toolkit#getSystemClipboard\n+     * @see java.desktop\/java.awt.Toolkit#getSystemClipboard\n@@ -94,1 +95,1 @@\n-     * @see java.awt.Toolkit#getSystemClipboard\n+     * @see java.desktop\/java.awt.Toolkit#getSystemClipboard\n@@ -121,1 +122,1 @@\n-     * @see java.awt.Toolkit#getSystemClipboard\n+     * @see java.desktop\/java.awt.Toolkit#getSystemClipboard\n@@ -148,1 +149,1 @@\n-     * @see java.awt.Toolkit#getSystemClipboard\n+     * @see java.desktop\/java.awt.Toolkit#getSystemClipboard\n","filename":"src\/java.datatransfer\/share\/classes\/java\/awt\/datatransfer\/Clipboard.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,1 +173,1 @@\n-            if (b.isFocusOwner()) {\n+            if (b.isFocusOwner() && b.isFocusPainted()) {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaButtonLabeledUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -381,3 +381,1 @@\n-        int h = inH;\n-\n-        h = metrics.titleBarHeight + inH;\n+        final int h = inH;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameBorder.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        painter.paint(g, c, newX - 1, newY - 1, newWidth + 1, newHeight);\n+        painter.paint(g, c, newX - 1, newY - 1, newWidth + 1, newHeight + 1);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableHeaderBorder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import java.text.Normalizer;\n-import java.text.Normalizer.Form;\n@@ -168,3 +166,0 @@\n-        } else if (format == CF_STRING) {\n-            String src = new String(bytes, UTF_8);\n-            bytes = Normalizer.normalize(src, Form.NFC).getBytes(UTF_8);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CDataTransferer.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,3 +171,3 @@\n-        int[] c = new int[1];\n-        double scale = fDevice.getScaleFactor();\n-        getScreenPixels(new Rectangle(x, y, (int) scale, (int) scale), c);\n+        int scale = fDevice.getScaleFactor();\n+        int[] c = new int[scale * scale];\n+        getScreenPixels(new Rectangle(x, y, scale, scale), c);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CRobot.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -549,0 +549,1 @@\n+        ((codePoint >= 0x900) && (codePoint <= 0x97F)) ||\n@@ -554,1 +555,1 @@\n-        \/\/ currency symbols unicode\n+        \/\/ currency symbols unicode or Devanagari script\n@@ -960,0 +961,3 @@\n+\n+    NSLog(@\"utf8Length %lu utf16Length %lu\", (unsigned long)utf8Length, (unsigned long)utf16Length);\n+    NSLog(@\"codePoint %x\", codePoint);\n@@ -965,0 +969,3 @@\n+#ifdef IM_DEBUG\n+        NSLog(@\"string complex \");\n+#endif\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTView.m","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -216,3 +216,3 @@\n-        if (IS(styleBits, CLOSEABLE))            type |= NSClosableWindowMask;\n-        if (IS(styleBits, RESIZABLE))            type |= NSResizableWindowMask;\n-        if (IS(styleBits, FULL_WINDOW_CONTENT))  type |= NSFullSizeContentViewWindowMask;\n+        if (IS(styleBits, CLOSEABLE))            type |= NSWindowStyleMaskClosable;\n+        if (IS(styleBits, RESIZABLE))            type |= NSWindowStyleMaskResizable;\n+        if (IS(styleBits, FULL_WINDOW_CONTENT))  type |= NSWindowStyleMaskFullSizeContentView;\n@@ -220,1 +220,1 @@\n-        type |= NSBorderlessWindowMask;\n+        type |= NSWindowStyleMaskBorderless;\n@@ -223,5 +223,5 @@\n-    if (IS(styleBits, MINIMIZABLE))   type |= NSMiniaturizableWindowMask;\n-    if (IS(styleBits, TEXTURED))      type |= NSTexturedBackgroundWindowMask;\n-    if (IS(styleBits, UNIFIED))       type |= NSUnifiedTitleAndToolbarWindowMask;\n-    if (IS(styleBits, UTILITY))       type |= NSUtilityWindowMask;\n-    if (IS(styleBits, HUD))           type |= NSHUDWindowMask;\n+    if (IS(styleBits, MINIMIZABLE))   type |= NSWindowStyleMaskMiniaturizable;\n+    if (IS(styleBits, TEXTURED))      type |= NSWindowStyleMaskTexturedBackground;\n+    if (IS(styleBits, UNIFIED))       type |= NSWindowStyleMaskUnifiedTitleAndToolbar;\n+    if (IS(styleBits, UTILITY))       type |= NSWindowStyleMaskUtilityWindow;\n+    if (IS(styleBits, HUD))           type |= NSWindowStyleMaskHUDWindow;\n@@ -229,1 +229,1 @@\n-    if (IS(styleBits, NONACTIVATING)) type |= NSNonactivatingPanelMask;\n+    if (IS(styleBits, NONACTIVATING)) type |= NSWindowStyleMaskNonactivatingPanel;\n@@ -272,1 +272,1 @@\n-            [self.nsWindow setCollectionBehavior:(1 << 7) \/*NSWindowCollectionBehaviorFullScreenPrimary*\/];\n+            [self.nsWindow setCollectionBehavior:NSWindowCollectionBehaviorFullScreenPrimary];\n@@ -346,1 +346,1 @@\n-        [self.nsWindow setCollectionBehavior:(1 << 8) \/*NSWindowCollectionBehaviorFullScreenAuxiliary*\/];\n+        [self.nsWindow setCollectionBehavior:NSWindowCollectionBehaviorFullScreenAuxiliary];\n@@ -1693,1 +1693,1 @@\n-            [nsWindow setStyleMask:(styleMask & ~NSTitledWindowMask) | NSBorderlessWindowMask];\n+            [nsWindow setStyleMask:(styleMask & ~NSTitledWindowMask) | NSWindowStyleMaskBorderless];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTWindow.m","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -324,0 +324,5 @@\n+    jsize size = (*env)->GetArrayLength(env, pixels);\n+    if (size < (long) picWidth * picHeight || picWidth < 0 || picHeight < 0) {\n+        JNU_ThrowInternalError(env, \"Invalid arguments to get screen pixels\");\n+        return;\n+    }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CRobot.m","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n-    [sActions setObject:NSAccessibilityShowMenuAction forKey:@\"togglePopup\"];\n-    [sActions setObject:NSAccessibilityPressAction forKey:@\"toggleExpand\"];\n+    [sActions setObject:NSAccessibilityShowMenuAction forKey:@\"toggle popup\"];\n+    [sActions setObject:NSAccessibilityPressAction forKey:@\"toggleexpand\"];\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaAccessibilityAction.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1143,1 +1143,1 @@\n-    \/\/ SIZE is settable in windows if [self styleMask] & NSResizableWindowMask - but windows are heavyweight so we're ok here\n+    \/\/ SIZE is settable in windows if [self styleMask] & NSWindowStyleMaskResizable - but windows are heavyweight so we're ok here\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CellAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CellAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ColumnAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ColumnAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComboBoxAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComboBoxAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComponentWrapperAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ComponentWrapperAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListRowAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ListRowAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/NavigableTextAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/NavigableTextAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineRowAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/OutlineRowAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabButtonAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabButtonAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabGroupAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TabGroupAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableRowAccessibility.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/TableRowAccessibility.m","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-                styleMask: NSBorderlessWindowMask\n+                styleMask: NSWindowStyleMaskBorderless\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/opengl\/CGLGraphicsConfig.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -437,1 +437,1 @@\n-                      styleMask: NSBorderlessWindowMask\n+                      styleMask: NSWindowStyleMaskBorderless\n","filename":"src\/java.desktop\/macosx\/native\/libsplashscreen\/splashscreen_sys.m","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,4 +101,1 @@\n-     * name and identical signatures appear next to each others. The methods are\n-     * sorted in such a way that methods which override each other will sit next\n-     * to each other, with the overridden method last - e.g. is Integer getFoo()\n-     * placed before Object getFoo().\n+     * name and identical signatures appear next to each others.\n@@ -135,12 +132,1 @@\n-            if (aret == bret) {\n-                return 0;\n-            }\n-\n-            \/\/ Super type comes last: Integer, Number, Object\n-            if (aret.isAssignableFrom(bret)) {\n-                return 1;\n-            }\n-            if (bret.isAssignableFrom(aret)) {\n-                return -1;\n-            }\n-            return aret.getName().compareTo(bret.getName());\n+            return aret == bret ? 0 : aret.getName().compareTo(bret.getName());\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/introspect\/MethodInfo.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-                                                            null,   \/\/ name\n+                                                            \"DataPusher\", \/\/ name\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DataPusher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1300,2 +1300,3 @@\n-                    if (newFramePosition >= 0) {\n-                        clipBytePosition = newFramePosition * frameSize;\n+                    int npf = newFramePosition; \/\/ copy into local variable\n+                    if (npf >= 0) {\n+                        clipBytePosition = npf * frameSize;\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DirectAudioDevice.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,0 @@\n-        String name = (threadName != null) ? threadName : \"JSSM Thread\";\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JSSecurityManager.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -66,0 +65,2 @@\n+     * Returns the image capabilities of the front (displayed) buffer.\n+     *\n@@ -73,0 +74,3 @@\n+     * Returns the image capabilities of all back buffers (intermediate buffers\n+     * are considered back buffers).\n+     *\n@@ -81,2 +85,2 @@\n-     * @return whether or not the buffer strategy uses page flipping; a set of\n-     * buffers that uses page flipping\n+     * Returns whether or not the buffer strategy uses page flipping.\n+     * A set of buffers that uses page flipping\n@@ -88,1 +92,3 @@\n-     * {@code null}\n+     * {@code null}.\n+     *\n+     * @return whether or not the buffer strategy uses page flipping\n@@ -95,1 +101,1 @@\n-     * @return the resulting contents of the back buffer after page-flipping.\n+     * Returns the resulting contents of the back buffer after page-flipping.\n@@ -102,0 +108,2 @@\n+     *\n+     * @return the resulting contents of the back buffer after page-flipping\n@@ -113,1 +121,1 @@\n-     * @return whether page flipping is only available in full-screen mode.  If this\n+     * Returns whether page flipping is only available in full-screen mode.  If this\n@@ -116,0 +124,2 @@\n+     *\n+     * @return whether page flipping is only available in full-screen mode\n@@ -124,1 +134,1 @@\n-     * @return whether or not\n+     * Returns whether or not\n@@ -127,0 +137,3 @@\n+     *\n+     * @return whether or not\n+     * page flipping can be performed using more than two buffers\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/BufferCapabilities.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -217,1 +217,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -4136,1 +4135,3 @@\n-         * @return direct access to the back buffer, as an image.\n+         * Provides direct access to the back buffer as an image.\n+         *\n+         * @return the back buffer as an image\n@@ -4696,1 +4697,1 @@\n-     * @return whether or not paint messages received from the operating system\n+     * Returns whether or not paint messages received from the operating system\n@@ -4699,0 +4700,3 @@\n+     * @return whether or not paint messages received from the operating system\n+     * should be ignored\n+     *\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Component.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -154,1 +154,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -653,1 +652,4 @@\n-    \/** @since 1.2 *\/\n+    \/**\n+     * Constant for the Dead Grave key.\n+     * @since 1.2\n+     *\/\n@@ -655,1 +657,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Acute key.\n+     * @since 1.2\n+     *\/\n@@ -657,1 +663,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Circumflex key.\n+     * @since 1.2\n+     *\/\n@@ -659,1 +669,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Tilde key.\n+     * @since 1.2\n+     *\/\n@@ -661,1 +675,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Macron key.\n+     * @since 1.2\n+     *\/\n@@ -663,1 +681,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Breve key.\n+     * @since 1.2\n+     *\/\n@@ -665,1 +687,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Above Dot key.\n+     * @since 1.2\n+     *\/\n@@ -667,1 +693,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Diaeresis key.\n+     * @since 1.2\n+     *\/\n@@ -669,1 +699,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Above Ring key.\n+     * @since 1.2\n+     *\/\n@@ -671,1 +705,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Double Acute key.\n+     * @since 1.2\n+     *\/\n@@ -673,1 +711,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Caron key.\n+     * @since 1.2\n+     *\/\n@@ -675,1 +717,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Cedilla key.\n+     * @since 1.2\n+     *\/\n@@ -677,1 +723,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Ogonek key.\n+     * @since 1.2\n+     *\/\n@@ -679,1 +729,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Iota key.\n+     * @since 1.2\n+     *\/\n@@ -681,1 +735,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Voiced Sound key.\n+     * @since 1.2\n+     *\/\n@@ -683,1 +741,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Dead Semivoiced Sound key.\n+     * @since 1.2\n+     *\/\n@@ -686,1 +748,4 @@\n-    \/** @since 1.2 *\/\n+    \/**\n+     * Constant for the \"&amp;\" key.\n+     * @since 1.2\n+     *\/\n@@ -688,1 +753,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the \"*\" key.\n+     * @since 1.2\n+     *\/\n@@ -690,1 +759,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the \"\"\"\" key.\n+     * @since 1.2\n+     *\/\n@@ -692,1 +765,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the \"&lt;\" key.\n+     * @since 1.2\n+     *\/\n@@ -695,1 +772,4 @@\n-    \/** @since 1.2 *\/\n+    \/**\n+     * Constant for the \"&gt;\" key.\n+     * @since 1.2\n+     *\/\n@@ -697,1 +777,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the \"{\" key.\n+     * @since 1.2\n+     *\/\n@@ -699,1 +783,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the \"}\" key.\n+     * @since 1.2\n+     *\/\n@@ -929,1 +1017,4 @@\n-    \/** @since 1.2 *\/\n+    \/**\n+     * Constant for the Cut key.\n+     * @since 1.2\n+     *\/\n@@ -931,1 +1022,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Copy key.\n+     * @since 1.2\n+     *\/\n@@ -933,1 +1028,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Paste key.\n+     * @since 1.2\n+     *\/\n@@ -935,1 +1034,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Undo key.\n+     * @since 1.2\n+     *\/\n@@ -937,1 +1040,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Again key.\n+     * @since 1.2\n+     *\/\n@@ -939,1 +1046,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Find key.\n+     * @since 1.2\n+     *\/\n@@ -941,1 +1052,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Props key.\n+     * @since 1.2\n+     *\/\n@@ -943,1 +1058,5 @@\n-    \/** @since 1.2 *\/\n+\n+    \/**\n+     * Constant for the Stop key.\n+     * @since 1.2\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/KeyEvent.java","additions":151,"deletions":32,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -160,0 +159,4 @@\n+    \/**\n+     * A protected nested class containing per-child information\n+     * in the {@code children} hashtable.\n+     *\/\n@@ -790,0 +793,4 @@\n+    \/**\n+     * Subclasses may subclass this nested class to represent a proxy for\n+     * each BeanContextServiceProvider.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextServicesSupport.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -308,2 +307,0 @@\n-    protected class BCSChild implements Serializable {\n-\n@@ -311,1 +308,2 @@\n-     * Use serialVersionUID from JDK 1.7 for interoperability.\n+     * A protected nested class containing per-child information\n+     * in the {@code children} hashtable.\n@@ -313,2 +311,7 @@\n-    @Serial\n-    private static final long serialVersionUID = -5815286101609939109L;\n+    protected class BCSChild implements Serializable {\n+\n+        \/**\n+         * Use serialVersionUID from JDK 1.7 for interoperability.\n+         *\/\n+        @Serial\n+        private static final long serialVersionUID = -5815286101609939109L;\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextSupport.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -53,2 +53,1 @@\n-@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\"}) \/\/ Same-version serialization only\n@@ -209,0 +208,5 @@\n+     * Notifies <code>ListSelectionListeners<\/code> that the value\n+     * of the selection, in the closed interval <code>firstIndex<\/code>,\n+     * <code>lastIndex<\/code>, has changed and if this is the final change\n+     * in the series of adjustments.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultListSelectionModel.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -102,2 +102,1 @@\n-@SuppressWarnings({\"serial\", \"removal\", \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\", \"removal\"}) \/\/ Same-version serialization only\n@@ -109,0 +108,3 @@\n+     * The <code>JRootPane<\/code> instance that manages the\n+     * <code>contentPane<\/code>.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JApplet.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\"}) \/\/ Same-version serialization only\n@@ -115,0 +114,3 @@\n+     * The <code>JRootPane<\/code> instance that manages the\n+     * <code>contentPane<\/code>.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JDialog.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,2 +86,1 @@\n-@SuppressWarnings({\"serial\",  \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\"})  \/\/ Same-version serialization only\n@@ -112,0 +111,2 @@\n+     * Orientation of this scrollBar.\n+     *\n@@ -118,0 +119,3 @@\n+     * Stores the amount by which the value of the scrollbar is changed\n+     * upon a unit up\/down request.\n+     *\n@@ -124,0 +128,3 @@\n+     * Stores the amount by which the value of the scrollbar is changed\n+     * upon a block (usually \"page\") up\/down request.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JScrollBar.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -68,1 +68,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -351,0 +350,4 @@\n+     * Returns a <code>File<\/code> object which is normally constructed with <code>new\n+     * File(parent, fileName)<\/code> except when the parent and child are both\n+     * special folders, in which case the <code>File<\/code> is a wrapper containing\n+     * a ShellFolder object.\n@@ -354,4 +357,1 @@\n-     * @return a File object. This is normally constructed with <code>new\n-     * File(parent, fileName)<\/code> except when parent and child are both\n-     * special folders, in which case the <code>File<\/code> is a wrapper containing\n-     * a <code>ShellFolder<\/code> object.\n+     * @return a File object.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/filechooser\/FileSystemView.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-     * any component in path is currently valid.\n+     * any component in path is currently invalid.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/TreeUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n@@ -240,1 +240,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n@@ -260,1 +260,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicDirectoryModel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,11 +28,15 @@\n-import javax.swing.*;\n-import javax.swing.filechooser.*;\n-import javax.swing.filechooser.FileFilter;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.awt.datatransfer.*;\n-import java.beans.*;\n-import java.io.*;\n-import java.util.*;\n+import java.awt.BorderLayout;\n+import java.awt.Toolkit;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.beans.PropertyChangeListener;\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Hashtable;\n@@ -40,1 +44,31 @@\n-import java.util.regex.*;\n+import java.util.Locale;\n+import java.util.regex.Pattern;\n+import java.util.regex.PatternSyntaxException;\n+\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ActionMap;\n+import javax.swing.Icon;\n+import javax.swing.InputMap;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFileChooser;\n+import javax.swing.JList;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JTable;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.TransferHandler;\n+import javax.swing.UIDefaults;\n+import javax.swing.UIManager;\n+import javax.swing.event.ListSelectionEvent;\n+import javax.swing.event.ListSelectionListener;\n+import javax.swing.filechooser.FileFilter;\n+import javax.swing.filechooser.FileSystemView;\n+import javax.swing.filechooser.FileView;\n+import javax.swing.plaf.ActionMapUIResource;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.FileChooserUI;\n+import javax.swing.plaf.UIResource;\n+\n@@ -42,1 +76,4 @@\n-import sun.swing.*;\n+import sun.swing.DefaultLookup;\n+import sun.swing.FilePane;\n+import sun.swing.SwingUtilities2;\n+import sun.swing.UIAction;\n@@ -726,0 +763,1 @@\n+\n@@ -727,2 +765,2 @@\n-         * Constucts a {@code DoubleClickListener}.\n-         * @param list the lsit\n+         * Constructs a {@code DoubleClickListener}.\n+         * @param list the list\n@@ -730,1 +768,1 @@\n-        public  DoubleClickListener(JList<?> list) {\n+        public DoubleClickListener(JList<?> list) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":55,"deletions":17,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -260,0 +259,1 @@\n+     * Registers the subcomponents of the menu.\n@@ -931,1 +931,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicMenuItemUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicMenuUI.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,38 @@\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseMotionListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.BoundedRangeModel;\n+import javax.swing.InputMap;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JList;\n+import javax.swing.JScrollBar;\n+import javax.swing.JScrollPane;\n+import javax.swing.JViewport;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingConstants;\n+import javax.swing.SwingUtilities;\n+import javax.swing.Timer;\n+import javax.swing.UIManager;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.ScrollBarUI;\n+import javax.swing.plaf.UIResource;\n+\n@@ -31,9 +69,0 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-\n-import java.beans.*;\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-\n@@ -757,1 +786,1 @@\n-     * Laysouts a  vertical scroll bar.\n+     * Lays out a vertical scroll bar.\n@@ -859,1 +888,1 @@\n-     * Laysouts a  vertical scroll bar.\n+     * Lays out a horizontal scroll bar.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicScrollBarUI.java","additions":41,"deletions":12,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -503,1 +503,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n@@ -537,1 +537,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n@@ -580,1 +580,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n@@ -789,1 +789,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicScrollPaneUI.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,10 +28,25 @@\n-import sun.swing.SwingUtilities2;\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import javax.swing.plaf.*;\n-import javax.swing.text.View;\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.beans.PropertyChangeListener;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Point;\n+import java.awt.Polygon;\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n@@ -39,1 +54,1 @@\n-import java.util.Vector;\n+import java.beans.PropertyChangeListener;\n@@ -41,0 +56,23 @@\n+import java.util.Vector;\n+\n+import javax.swing.Action;\n+import javax.swing.ActionMap;\n+import javax.swing.Icon;\n+import javax.swing.InputMap;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.JTabbedPane;\n+import javax.swing.JViewport;\n+import javax.swing.KeyStroke;\n+import javax.swing.LookAndFeel;\n+import javax.swing.SwingConstants;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import javax.swing.plaf.ComponentInputMapUIResource;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.TabbedPaneUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.text.View;\n@@ -43,0 +81,1 @@\n+import sun.swing.SwingUtilities2;\n@@ -219,1 +258,1 @@\n-     * Create a UI.\n+     * Creates a UI.\n@@ -389,1 +428,1 @@\n-     * Install the defaults.\n+     * Installs the defaults.\n@@ -426,1 +465,1 @@\n-     * Uninstall the defaults.\n+     * Uninstalls the defaults.\n@@ -441,1 +480,1 @@\n-     * Install the listeners.\n+     * Installs the listeners.\n@@ -464,1 +503,1 @@\n-     * Uninstall the listeners.\n+     * Uninstalls the listeners.\n@@ -919,1 +958,1 @@\n-     * @param rects rectangles\n+     * @param rects the tab rectangles\n@@ -1093,1 +1132,1 @@\n-     * Laysout a label.\n+     * Lays out a label.\n@@ -1095,1 +1134,1 @@\n-     * @param metrics the font metric\n+     * @param metrics the font metrics\n@@ -1265,1 +1304,1 @@\n-     * @param rects rectangles\n+     * @param rects the tab rectangles\n@@ -1310,3 +1349,3 @@\n-      * this function draws the border around each tab\n-      * note that this function does now draw the background of the tab.\n-      * that is done elsewhere\n+      * Paints the border around a tab.\n+      * Note that this function does not paint the background of the tab,\n+      * that is done elsewhere.\n@@ -1842,1 +1881,1 @@\n-     * Assure the rectangles are created.\n+     * Assures the tab rectangles are created.\n@@ -2147,1 +2186,1 @@\n-     * Navigate the selected tab.\n+     * Navigates the selected tab.\n@@ -2229,1 +2268,1 @@\n-     * Select the next tab in the run.\n+     * Selects the next tab in the run.\n@@ -2243,1 +2282,1 @@\n-     * Select the previous tab in the run.\n+     * Selects the previous tab in the run.\n@@ -2257,1 +2296,1 @@\n-     * Select the next tab.\n+     * Selects the next tab.\n@@ -2270,1 +2309,1 @@\n-     * Select the previous tab.\n+     * Selects the previous tab.\n@@ -2775,1 +2814,1 @@\n-         * @return the preferred tab area widty\n+         * @return the preferred tab area width\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTabbedPaneUI.java","additions":70,"deletions":31,"binary":false,"changes":101,"status":"modified"},{"patch":"@@ -554,1 +554,1 @@\n-    @Deprecated(since = \"17\")\n+    @Deprecated(since = \"17\", forRemoval = true)\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicToolBarUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -668,1 +668,1 @@\n-      * any component in path is currently valid.\n+      * any component in path is currently invalid.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicTreeUI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -929,1 +928,1 @@\n-     * The class represents the border of a {@code JTestField}.\n+     * Border for a {@code JTextField}.\n@@ -1030,0 +1029,2 @@\n+     * Border for a {@code JToggleButton}.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+ * Implementation of {@code Highlighter} interface to mark up the\n+ * background of leaf views with colored areas.\n@@ -36,1 +38,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -71,0 +72,2 @@\n+         * Paints a portion of a highlight.\n+         *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/LayeredHighlighter.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -63,1 +62,5 @@\n-        \/** @since 1.3 *\/\n+        \/**\n+         * Constructs a {@code Tag}.\n+         *\n+         * @since 1.3\n+         *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTML.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -219,2 +219,1 @@\n-@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\"}) \/\/ Same-version serialization only\n@@ -1687,0 +1686,2 @@\n+         * Returns <code>HTMLDocument<\/code> of the given <code>JEditorPane<\/code>.\n+         *\n@@ -1699,0 +1700,2 @@\n+         * Returns <code>HTMLEditorKit<\/code> of the given <code>JEditorPane<\/code>.\n+         *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLEditorKit.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -47,2 +47,1 @@\n-@SuppressWarnings({\"serial\", \/\/ Same-version serialization only\n-                   \"doclint:missing\"})\n+@SuppressWarnings({\"serial\"}) \/\/ Same-version serialization only\n@@ -114,1 +113,1 @@\n-     * @return attribute name\n+     * {@return the attribute name}\n@@ -121,1 +120,1 @@\n-     * @return attribute type\n+     * {@return the attribute type}\n@@ -129,1 +128,1 @@\n-     * @return attribute modifier\n+     * {@return the attribute modifier}\n@@ -137,1 +136,1 @@\n-     * @return possible attribute values\n+     * {@return possible attribute values}\n@@ -144,1 +143,1 @@\n-     * @return default attribute value\n+     * {@return default attribute value}\n@@ -151,1 +150,1 @@\n-     * @return the next attribute in the list\n+     * {@return the next attribute in the list}\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/parser\/AttributeList.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -78,1 +78,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -214,0 +213,2 @@\n+     * Returns the line number of the line currently being parsed.\n+     *\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/parser\/Parser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -165,40 +165,0 @@\n-\n-class NPrintWriter extends PrintWriter {\n-\n-    private int numLines = 5;\n-    private int numPrinted = 0;\n-\n-    public NPrintWriter (int numberOfLines) {\n-        super(System.out);\n-        numLines = numberOfLines;\n-    }\n-\n-    public void println(char[] array) {\n-        if (numPrinted >= numLines) {\n-            return;\n-        }\n-\n-        char[] partialArray = null;\n-\n-        for (int i = 0; i < array.length; i++) {\n-            if (array[i] == '\\n') {\n-                numPrinted++;\n-            }\n-\n-            if (numPrinted == numLines) {\n-                System.arraycopy(array, 0, partialArray, 0, i);\n-            }\n-        }\n-\n-        if (partialArray != null) {\n-            super.print(partialArray);\n-        }\n-\n-        if (numPrinted == numLines) {\n-            return;\n-        }\n-\n-        super.println(array);\n-        numPrinted++;\n-    }\n-}\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/parser\/TagStack.java","additions":0,"deletions":40,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-     * <code>askAllowsChildren<\/code> setting.\n+     * <code>asksAllowsChildren<\/code> setting.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/tree\/DefaultTreeModel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,2 +54,2 @@\n- *       ((DefaultMutableTreeNode)selectedPath.getLastPathComponent()).\n- *       getUserObject();\n+ *       ((DefaultMutableTreeNode)selectedPath.getLastPathComponent());\n+ *   Object myObject= selectedNode.getUserObject();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/tree\/TreePath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-@SuppressWarnings(\"doclint:missing\")\n@@ -151,1 +150,1 @@\n-     *\n+     * Starts a compound edit update.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/undo\/UndoableEditSupport.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2841,0 +2841,8 @@\n+\n+                    \/\/ Translate wRaster to start at (0, 0) and to contain\n+                    \/\/ only the relevent portion of the tile\n+                    wRaster = wRaster.createWritableChild(tileRect.x, tileRect.y,\n+                                                          tileRect.width,\n+                                                          tileRect.height,\n+                                                          0, 0,\n+                                                          null);\n@@ -2843,1 +2851,1 @@\n-                    \/\/ as the original raster.\n+                    \/\/ as the original raster, except origin which is (0,0).\n@@ -2850,8 +2858,0 @@\n-                \/\/ Translate wRaster to start at (0, 0) and to contain\n-                \/\/ only the relevent portion of the tile\n-                wRaster = wRaster.createWritableChild(tileRect.x, tileRect.y,\n-                                                      tileRect.width,\n-                                                      tileRect.height,\n-                                                      0, 0,\n-                                                      null);\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/SunGraphics2D.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -499,1 +499,2 @@\n-static void releaseILData(JNIEnv *env, void *pData, jint type, jobject data) {\n+static void releaseILData(JNIEnv *env, void *pData, jint type, jobject data,\n+                          jint mode) {\n@@ -502,1 +503,1 @@\n-            (*env)->ReleaseByteArrayElements(env, data, (jbyte *) pData, 0);\n+            (*env)->ReleaseByteArrayElements(env, data, (jbyte *) pData, mode);\n@@ -505,1 +506,1 @@\n-            (*env)->ReleaseShortArrayElements(env, data, (jshort *) pData, 0);\n+            (*env)->ReleaseShortArrayElements(env, data, (jshort *) pData, mode);\n@@ -508,1 +509,1 @@\n-            (*env)->ReleaseIntArrayElements(env, data, (jint *) pData, 0);\n+            (*env)->ReleaseIntArrayElements(env, data, (jint *) pData, mode);\n@@ -511,1 +512,1 @@\n-            (*env)->ReleaseDoubleArrayElements(env, data, (jdouble *) pData, 0);\n+            (*env)->ReleaseDoubleArrayElements(env, data, (jdouble *) pData, mode);\n@@ -545,1 +546,1 @@\n-        releaseILData(env, inputBuffer, srcDType, srcData);\n+        releaseILData(env, inputBuffer, srcDType, srcData, JNI_ABORT);\n@@ -563,2 +564,2 @@\n-    releaseILData(env, inputBuffer, srcDType, srcData);\n-    releaseILData(env, outputBuffer, dstDType, dstData);\n+    releaseILData(env, inputBuffer, srcDType, srcData, JNI_ABORT);\n+    releaseILData(env, outputBuffer, dstDType, dstData, 0);\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -337,1 +337,1 @@\n-                                            height, jwidth, dx, dy, 1);\n+                                            height, jwidth, dx, dy);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/awt_Robot.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2474,1 +2474,1 @@\n-     jint y, jint width, jint height, jint jwidth, int dx, int dy, jint scale) {\n+     jint y, jint width, jint height, jint jwidth, int dx, int dy) {\n@@ -2482,13 +2482,0 @@\n-    if (pixbuf && scale != 1) {\n-        GdkPixbuf *scaledPixbuf;\n-        x \/= scale;\n-        y \/= scale;\n-        width \/= scale;\n-        height \/= scale;\n-        dx \/= scale;\n-        dy \/= scale;\n-        scaledPixbuf = (*fp_gdk_pixbuf_scale_simple)(pixbuf, width, height,\n-                                                     GDK_INTERP_BILINEAR);\n-        (*fp_g_object_unref)(pixbuf);\n-        pixbuf = scaledPixbuf;\n-    }\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk2_interface.c","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+#include <math.h>\n@@ -41,0 +42,1 @@\n+#include \"debug_assert.h\"\n@@ -2864,0 +2866,8 @@\n+inline static int scale_down_ceiling(int what, int scale) {\n+    return (int)ceilf(what \/ (float)scale);\n+}\n+\n+inline static int scale_down_floor(int what, int scale) {\n+    return (int)floorf(what \/ (float)scale);\n+}\n+\n@@ -2865,2 +2875,1 @@\n-     int x, jint y, jint width, jint height, jint jwidth, int dx, int dy,\n-                                                                   jint scale) {\n+     int x, jint y, jint width, jint height, jint jwidth, int dx, int dy) {\n@@ -2870,0 +2879,2 @@\n+    int skip_left = 0;\n+    int skip_top = 0;\n@@ -2873,0 +2884,18 @@\n+\n+        \/\/ Scale the coordinate and size carefully such that the captured area\n+        \/\/ is at least as large as requested. We trim off excess later by\n+        \/\/ using the skip_* variables.\n+        const int x_scaled = scale_down_floor(x, win_scale);\n+        const int y_scaled = scale_down_floor(y, win_scale);\n+        skip_left = x - x_scaled*win_scale;\n+        skip_top  = y - y_scaled*win_scale;\n+        DASSERT(skip_left >= 0 && skip_top >= 0);\n+\n+        const int x_right_scaled = scale_down_ceiling(x + width, win_scale);\n+        const int width_scaled = x_right_scaled - x_scaled;\n+        DASSERT(width_scaled > 0);\n+\n+        const int y_bottom_scaled = scale_down_ceiling(y + height, win_scale);\n+        const int height_scaled = y_bottom_scaled - y_scaled;\n+        DASSERT(height_scaled > 0);\n+\n@@ -2874,1 +2903,1 @@\n-            root, x, y, (int) (width \/ (float) win_scale + 0.5), (int) (height \/ (float) win_scale + 0.5));\n+            root, x_scaled, y_scaled, width_scaled, height_scaled);\n@@ -2879,14 +2908,0 @@\n-    if (pixbuf && scale != 1) {\n-        GdkPixbuf *scaledPixbuf;\n-        x \/= scale;\n-        y \/= scale;\n-        width \/= scale;\n-        height \/= scale;\n-        dx \/= scale;\n-        dy \/= scale;\n-        scaledPixbuf = (*fp_gdk_pixbuf_scale_simple)(pixbuf, width, height,\n-                                                     GDK_INTERP_BILINEAR);\n-        (*fp_g_object_unref)(pixbuf);\n-        pixbuf = scaledPixbuf;\n-    }\n-\n@@ -2909,1 +2924,2 @@\n-                        p = pix + (intptr_t) _y * stride + _x * nchan;\n+                        p = pix + (intptr_t) (_y + skip_top) * stride\n+                                + (_x + skip_left) * nchan;\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":35,"deletions":19,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -513,1 +513,1 @@\n-                                       jint jwidth, int dx, int dy, jint scale);\n+                                       jint jwidth, int dx, int dy);\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk_interface.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -732,1 +732,1 @@\n-  LPTSTR printerName = NULL, printerPort = TEXT(\"LPT1\");\n+  LPTSTR printerName = NULL, printerPort = (LPTSTR)TEXT(\"LPT1\");\n@@ -748,1 +748,1 @@\n-    printerPort = TEXT(\"LPT1\");\n+    printerPort = (LPTSTR)TEXT(\"LPT1\");\n@@ -1113,1 +1113,1 @@\n-  DocInfo.pDatatype = TEXT(\"RAW\");\n+  DocInfo.pDatatype = (LPTSTR)TEXT(\"RAW\");\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/WPrinterJob.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3920,1 +3920,1 @@\n-        cf.dwStyle = CFS_POINT;\n+        cf.dwStyle = CFS_CANDIDATEPOS;\n@@ -3924,1 +3924,1 @@\n-            cf.dwStyle = CFS_POINT;\n+            cf.dwStyle = CFS_CANDIDATEPOS;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-        msgBuffer = \"<Could not get GetLastError() message text>\";\n+        msgBuffer = (LPSTR)\"<Could not get GetLastError() message text>\";\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Debug.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-static LPTSTR resolveShellDialogFont(LPTSTR fontName, HKEY handle) {\n+static LPTSTR resolveShellDialogFont(LPCTSTR fontName, HKEY handle) {\n@@ -167,1 +167,1 @@\n-    LPTSTR subKey = TEXT(\"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\FontSubstitutes\");\n+    LPCTSTR subKey = TEXT(\"Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\FontSubstitutes\");\n@@ -186,1 +186,1 @@\n-static LPTSTR getWindowsPropFromReg(LPTSTR subKey, LPTSTR valueName, DWORD *valueType) {\n+static LPTSTR getWindowsPropFromReg(LPCTSTR subKey, LPCTSTR valueName, DWORD *valueType) {\n@@ -224,1 +224,1 @@\n-static LPTSTR getXPStylePropFromReg(LPTSTR valueName) {\n+static LPTSTR getXPStylePropFromReg(LPCTSTR valueName) {\n@@ -654,1 +654,1 @@\n-    LPTSTR valueName = TEXT(\"PlaceN\");\n+    LPCTSTR valueName = TEXT(\"PlaceN\");\n@@ -658,1 +658,1 @@\n-    LPTSTR propKey = TEXT(\"win.comdlg.placesBarPlaceN\");\n+    LPCTSTR propKey = TEXT(\"win.comdlg.placesBarPlaceN\");\n@@ -675,1 +675,1 @@\n-        LPTSTR key = TEXT(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\comdlg32\\\\PlacesBar\");\n+        LPCTSTR key = TEXT(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\comdlg32\\\\PlacesBar\");\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DesktopProperties.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,1 +270,1 @@\n-    toolkit.isInDoDragDropLoop = TRUE;\n+    toolkit.isDnDSourceActive = TRUE;\n@@ -276,1 +276,1 @@\n-    toolkit.isInDoDragDropLoop = FALSE;\n+    toolkit.isDnDSourceActive = FALSE;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDS.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,1 +144,1 @@\n-    AwtToolkit::GetInstance().isInDoDragDropLoop = TRUE;\n+    AwtToolkit::GetInstance().isDnDTargetActive = TRUE;\n@@ -164,1 +164,1 @@\n-        AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+        AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n@@ -176,1 +176,1 @@\n-        AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+        AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n@@ -203,1 +203,1 @@\n-                AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+                AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n@@ -208,1 +208,1 @@\n-            AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+            AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n@@ -424,1 +424,1 @@\n-    AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+    AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n@@ -1139,1 +1139,1 @@\n-    AwtToolkit::GetInstance().isInDoDragDropLoop = FALSE;\n+    AwtToolkit::GetInstance().isDnDTargetActive = FALSE;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DnDDT.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -278,1 +278,1 @@\n-static char *const embeddedClassName = \"sun\/awt\/windows\/WEmbeddedFrame\";\n+static const char *const embeddedClassName = \"sun\/awt\/windows\/WEmbeddedFrame\";\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DrawingSurface.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -348,1 +348,1 @@\n-            WCHAR* wEName;\n+            LPCWSTR wEName;\n@@ -391,1 +391,1 @@\n-static void strip_tail(wchar_t* text, wchar_t* tail) { \/\/ strips tail and any possible whitespace before it from the end of text\n+static void strip_tail(wchar_t* text, const wchar_t* tail) { \/\/ strips tail and any possible whitespace before it from the end of text\n@@ -498,1 +498,1 @@\n-HFONT AwtFont::CreateHFont(WCHAR* name, int style, int height,\n+HFONT AwtFont::CreateHFont(LPCWSTR name, int style, int height,\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Font.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -158,1 +158,1 @@\n-    static HFONT CreateHFont(WCHAR* name, int style, int height,\n+    static HFONT CreateHFont(LPCWSTR name, int style, int height,\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Font.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1048,1 +1048,1 @@\n-        LPTSTR pbuf = (_tcslen(lpcNames + devnames->wDeviceOffset) == 0 ?\n+        LPCTSTR pbuf = (_tcslen(lpcNames + devnames->wDeviceOffset) == 0 ?\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintControl.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,2 +67,2 @@\n-static char *kJavaIntStr = \"I\";\n-static char *kJavaLongStr = \"J\";\n+static const char *kJavaIntStr = \"I\";\n+static const char *kJavaLongStr = \"J\";\n@@ -1356,1 +1356,1 @@\n-    LPTSTR docname = NULL;\n+    LPCTSTR docname = NULL;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -347,1 +347,2 @@\n-    isInDoDragDropLoop = FALSE;\n+    isDnDSourceActive = FALSE;\n+    isDnDTargetActive = FALSE;\n@@ -532,1 +533,1 @@\n-    attachArgs.name     = \"AWT-Windows\";\n+    attachArgs.name     = (char*)\"AWT-Windows\";\n@@ -3015,1 +3016,1 @@\n-        if (tk.isInDoDragDropLoop) {\n+        if (tk.isDnDSourceActive || tk.isDnDTargetActive) {\n@@ -3219,1 +3220,1 @@\n-    if (isInDoDragDropLoop) {\n+    if (isDnDSourceActive || isDnDTargetActive) {\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Toolkit.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -444,1 +444,2 @@\n-    volatile BOOL isInDoDragDropLoop;\n+    volatile BOOL isDnDSourceActive;\n+    volatile BOOL isDnDTargetActive;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Toolkit.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-    LPWSTR eudcKey = NULL;\n+    LPCWSTR eudcKey = NULL;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Win32GraphicsEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2559,1 +2559,1 @@\n-     * {@link javax.management.ObjectName} for the management interface\n+     * {@link java.management\/javax.management.ObjectName} for the management interface\n@@ -2562,1 +2562,1 @@\n-     * @see java.lang.management.PlatformLoggingMXBean\n+     * @see java.management\/java.lang.management.PlatformLoggingMXBean\n@@ -2566,0 +2566,1 @@\n+    @SuppressWarnings(\"doclint:reference\")\n@@ -2576,1 +2577,1 @@\n-     *      {@link java.lang.management.ManagementFactory#getPlatformMXBean(Class)\n+     *      {@link java.management\/java.lang.management.ManagementFactory#getPlatformMXBean(Class)\n@@ -2580,1 +2581,1 @@\n-     * @see java.lang.management.PlatformLoggingMXBean\n+     * @see java.management\/java.lang.management.PlatformLoggingMXBean\n@@ -2584,0 +2585,1 @@\n+    @SuppressWarnings(\"doclint:reference\")\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/LogManager.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * {@link java.lang.management.PlatformLoggingMXBean\n+ * {@link java.management\/java.lang.management.PlatformLoggingMXBean\n@@ -35,1 +35,1 @@\n- * java.lang.management.ManagementFactory#getPlatformMBeanServer()\n+ * java.management\/java.lang.management.ManagementFactory#getPlatformMBeanServer()\n@@ -38,1 +38,1 @@\n- * the {@link java.lang.management.ManagementFactory#getPlatformMXBean(Class)\n+ * the {@link java.management\/java.lang.management.ManagementFactory#getPlatformMXBean(Class)\n@@ -42,2 +42,2 @@\n- * java.lang.management.PlatformManagedObject platform MXBean} and is replaced\n- * with {@link java.lang.management.PlatformLoggingMXBean}.\n+ * java.management\/java.lang.management.PlatformManagedObject platform MXBean} and is replaced\n+ * with {@link java.management\/java.lang.management.PlatformLoggingMXBean}.\n@@ -52,1 +52,1 @@\n- * @see java.lang.management.PlatformLoggingMXBean\n+ * @see java.management\/java.lang.management.PlatformLoggingMXBean\n@@ -55,0 +55,1 @@\n+@SuppressWarnings(\"doclint:reference\")\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/LoggingMXBean.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,1 +179,1 @@\n- * <td> {@link java.util.logging.LogManager#LOGGING_MXBEAN_NAME\n+ * <td> {@link java.logging\/java.util.logging.LogManager#LOGGING_MXBEAN_NAME\n@@ -249,1 +249,2 @@\n-@SuppressWarnings(\"removal\")\n+@SuppressWarnings({\"removal\",\n+                   \"doclint:reference\"}) \/\/ cross-module links\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ManagementFactory.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * The management interface for the {@linkplain java.util.logging logging} facility.\n+ * The management interface for the {@linkplain java.logging\/java.util.logging logging} facility.\n@@ -44,1 +44,1 @@\n- *      {@link java.util.logging.LogManager#LOGGING_MXBEAN_NAME java.util.logging:type=Logging}\n+ *      {@link java.logging\/java.util.logging.LogManager#LOGGING_MXBEAN_NAME java.util.logging:type=Logging}\n@@ -49,0 +49,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n@@ -53,2 +54,2 @@\n-     * {@linkplain java.util.logging.Logger logger} names. This method\n-     * calls {@link java.util.logging.LogManager#getLoggerNames} and\n+     * {@linkplain java.logging\/java.util.logging.Logger logger} names. This method\n+     * calls {@link java.logging\/java.util.logging.LogManager#getLoggerNames} and\n@@ -63,1 +64,1 @@\n-     * Gets the name of the log {@linkplain java.util.logging.Logger#getLevel\n+     * Gets the name of the log {@linkplain java.logging\/java.util.logging.Logger#getLevel\n@@ -70,2 +71,2 @@\n-     *   {@link java.util.logging.Logger#getLevel\n-     *    Logger.getLevel()}.{@link java.util.logging.Level#getName getName()};\n+     *   {@link java.logging\/java.util.logging.Logger#getLevel\n+     *    Logger.getLevel()}.{@link java.logging\/java.util.logging.Level#getName getName()};\n@@ -86,1 +87,1 @@\n-     * @see java.util.logging.Logger#getLevel\n+     * @see java.logging\/java.util.logging.Logger#getLevel\n@@ -92,1 +93,1 @@\n-     * {@linkplain java.util.logging.Logger#setLevel level}.\n+     * {@linkplain java.logging\/java.util.logging.Logger#setLevel level}.\n@@ -95,1 +96,1 @@\n-     * {@link java.util.logging.Level Level}\n+     * {@link java.logging\/java.util.logging.Level Level}\n@@ -114,1 +115,1 @@\n-     * @see java.util.logging.Logger#setLevel\n+     * @see java.logging\/java.util.logging.Logger#setLevel\n@@ -120,1 +121,1 @@\n-     * {@linkplain java.util.logging.Logger#getParent parent}\n+     * {@linkplain java.logging\/java.util.logging.Logger#getParent parent}\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/PlatformLoggingMXBean.java","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * {@link javax.management.remote.rmi.RMIConnector RMIConnector} which\n+ * {@link java.management.rmi\/javax.management.remote.rmi.RMIConnector RMIConnector} which\n@@ -44,0 +44,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXAddressable.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n- * @see java.rmi.ServerError\n+ * @see java.rmi\/java.rmi.ServerError\n@@ -44,0 +44,1 @@\n+@SuppressWarnings(\"doclint:reference\") \/\/ cross-module links\n","filename":"src\/java.management\/share\/classes\/javax\/management\/remote\/JMXServerErrorException.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-            throw Util.newException(e);\n+            throw new RuntimeException(e);\n@@ -82,1 +82,1 @@\n-            throw Util.newException(e);\n+            throw new RuntimeException(e);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/LockInfoCompositeData.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -485,1 +485,1 @@\n-            throw Util.newException(e.getException());\n+            throw new RuntimeException(e.getException());\n@@ -543,1 +543,1 @@\n-            throw Util.newException(e.getException());\n+            throw new RuntimeException(e.getException());\n","filename":"src\/java.management\/share\/classes\/sun\/management\/ManagementFactoryHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,4 +37,0 @@\n-    static RuntimeException newException(Exception e) {\n-        throw new RuntimeException(e);\n-    }\n-\n","filename":"src\/java.management\/share\/classes\/sun\/management\/Util.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -68,0 +68,7 @@\n+    public PooledConnection createPooledConnection(PoolCallback pcb, long timeout)\n+        throws NamingException {\n+        return new LdapClient(host, port, socketFactory,\n+                guardedIntegerCast(timeout),\n+                readTimeout, trace, pcb);\n+    }\n+\n@@ -71,0 +78,9 @@\n+\n+    private int guardedIntegerCast(long timeout) {\n+        if (timeout < Integer.MIN_VALUE) {\n+            return Integer.MIN_VALUE;\n+        } else if (timeout > Integer.MAX_VALUE) {\n+            return Integer.MAX_VALUE;\n+        }\n+        return (int) timeout;\n+    }\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClientFactory.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.ReentrantLock;\n@@ -71,0 +74,1 @@\n+    final private int initSize;\n@@ -74,0 +78,1 @@\n+    final private PooledConnectionFactory factory;\n@@ -78,0 +83,4 @@\n+    private boolean initialized = false;\n+    private final ReentrantLock lock;\n+    private final Condition connectionsAvailable;\n+\n@@ -90,3 +99,2 @@\n-    Connections(Object id, int initSize, int prefSize, int maxSize,\n-        PooledConnectionFactory factory) throws NamingException {\n-\n+    Connections(Object id, int initSize, int prefSize, int maxSize, PooledConnectionFactory factory,\n+            ReentrantLock lock) throws NamingException {\n@@ -94,0 +102,4 @@\n+        this.lock = lock;\n+        this.connectionsAvailable = lock.newCondition();\n+        this.factory = factory;\n+\n@@ -97,1 +109,1 @@\n-            initSize = Math.min(initSize, maxSize);\n+            this.initSize = Math.min(initSize, maxSize);\n@@ -100,0 +112,1 @@\n+            this.initSize = initSize;\n@@ -101,1 +114,2 @@\n-        conns = new ArrayList<>(maxSize > 0 ? maxSize : DEFAULT_SIZE);\n+        this.conns = new ArrayList<>(maxSize > 0 ? maxSize : DEFAULT_SIZE);\n+        this.initialized = initSize <= 0;\n@@ -105,1 +119,1 @@\n-        ref = new SoftReference<>(id);\n+        this.ref = new SoftReference<>(id);\n@@ -110,0 +124,1 @@\n+    }\n@@ -111,6 +126,7 @@\n-        \/\/ Create initial connections\n-        PooledConnection conn;\n-        for (int i = 0; i < initSize; i++) {\n-            conn = factory.createPooledConnection(this);\n-            td(\"Create \", conn ,factory);\n-            conns.add(new ConnectionDesc(conn)); \/\/ Add new idle conn to pool\n+    void waitForAvailableConnection() throws InterruptedNamingException {\n+        try {\n+            d(\"get(): waiting\");\n+            connectionsAvailable.await();\n+        } catch (InterruptedException e) {\n+            throw new InterruptedNamingException(\n+                    \"Interrupted while waiting for a connection\");\n@@ -120,38 +136,6 @@\n-    \/**\n-     * Retrieves a PooledConnection from this list of connections.\n-     * Use an existing one if one is idle, or create one if the list's\n-     * max size hasn't been reached. If max size has been reached, wait\n-     * for a PooledConnection to be returned, or one to be removed (thus\n-     * not reaching the max size any longer).\n-     *\n-     * @param timeout if > 0, msec to wait until connection is available\n-     * @param factory creates the PooledConnection if one needs to be created\n-     *\n-     * @return A non-null PooledConnection\n-     * @throws NamingException PooledConnection cannot be created, because this\n-     * thread was interrupted while it waited for an available connection,\n-     * or if it timed out while waiting, or the creation of a connection\n-     * resulted in an error.\n-     *\/\n-    synchronized PooledConnection get(long timeout,\n-        PooledConnectionFactory factory) throws NamingException {\n-        PooledConnection conn;\n-        long start = (timeout > 0 ? System.currentTimeMillis() : 0);\n-        long waittime = timeout;\n-\n-        d(\"get(): before\");\n-        while ((conn = getOrCreateConnection(factory)) == null) {\n-            if (timeout > 0 && waittime <= 0) {\n-                throw new CommunicationException(\n-                    \"Timeout exceeded while waiting for a connection: \" +\n-                    timeout + \"ms\");\n-            }\n-            try {\n-                d(\"get(): waiting\");\n-                if (waittime > 0) {\n-                    wait(waittime);  \/\/ Wait until one is released or removed\n-                } else {\n-                    wait();\n-                }\n-            } catch (InterruptedException e) {\n-                throw new InterruptedNamingException(\n+    void waitForAvailableConnection(long waitTime) throws InterruptedNamingException {\n+        try {\n+            d(\"get(): waiting\");\n+            connectionsAvailable.await(waitTime, TimeUnit.MILLISECONDS);\n+        } catch (InterruptedException e) {\n+            throw new InterruptedNamingException(\n@@ -159,6 +143,0 @@\n-            }\n-            \/\/ Check whether we timed out\n-            if (timeout > 0) {\n-                long now = System.currentTimeMillis();\n-                waittime = timeout - (now - start);\n-            }\n@@ -166,3 +144,0 @@\n-\n-        d(\"get(): after\");\n-        return conn;\n@@ -173,3 +148,0 @@\n-     * If none is available, create a new one if maxSize hasn't been reached.\n-     * If maxSize has been reached, return null.\n-     * Always called from a synchronized method.\n@@ -177,3 +149,8 @@\n-    private PooledConnection getOrCreateConnection(\n-        PooledConnectionFactory factory) throws NamingException {\n-\n+    PooledConnection getAvailableConnection(long timeout) throws NamingException {\n+        if (!initialized) {\n+            PooledConnection conn = createConnection(factory, timeout);\n+            if (conns.size() >= initSize) {\n+                this.initialized = true;\n+            }\n+            return conn;\n+        }\n@@ -181,1 +158,0 @@\n-        PooledConnection conn = null;\n@@ -187,2 +163,3 @@\n-            for (int i = 0; i < size; i++) {\n-                entry = conns.get(i);\n+            for (ConnectionDesc connectionDesc : conns) {\n+                PooledConnection conn;\n+                entry = connectionDesc;\n@@ -196,0 +173,2 @@\n+        return null;\n+    }\n@@ -197,3 +176,13 @@\n-        \/\/ Check if list size already at maxSize specified\n-        if (maxSize > 0 && size >= maxSize) {\n-            return null;   \/\/ List size is at limit; cannot create any more\n+    \/*\n+     * Creates a new Connection if maxSize hasn't been reached.\n+     * If maxSize has been reached, return null.\n+     * Caller must hold the ReentrantLock.\n+     *\/\n+    PooledConnection createConnection(PooledConnectionFactory factory, long timeout)\n+            throws NamingException {\n+        int size = conns.size(); \/\/ Current number of idle\/non-idle connections\n+        if (maxSize == 0 || size < maxSize) {\n+            PooledConnection conn = factory.createPooledConnection(this, timeout);\n+            td(\"Create and use \", conn, factory);\n+            conns.add(new ConnectionDesc(conn, true)); \/\/ Add new conn to pool\n+            return conn;\n@@ -202,5 +191,1 @@\n-        conn = factory.createPooledConnection(this);\n-        td(\"Create and use \", conn, factory);\n-        conns.add(new ConnectionDesc(conn, true)); \/\/ Add new conn to pool\n-\n-        return conn;\n+        return null;\n@@ -214,1 +199,1 @@\n-     *\n+     * <p>\n@@ -217,8 +202,5 @@\n-    public synchronized boolean releasePooledConnection(PooledConnection conn) {\n-        ConnectionDesc entry;\n-        int loc = conns.indexOf(entry=new ConnectionDesc(conn));\n-\n-        d(\"release(): \", conn);\n-\n-        if (loc >= 0) {\n-            \/\/ Found entry\n+    public boolean releasePooledConnection(PooledConnection conn) {\n+        lock.lock();\n+        try {\n+            ConnectionDesc entry;\n+            int loc = conns.indexOf(entry = new ConnectionDesc(conn));\n@@ -226,2 +208,1 @@\n-            if (closed || (prefSize > 0 && conns.size() > prefSize)) {\n-                \/\/ If list size exceeds prefSize, close connection\n+            d(\"release(): \", conn);\n@@ -229,2 +210,2 @@\n-                d(\"release(): closing \", conn);\n-                td(\"Close \", conn);\n+            if (loc >= 0) {\n+                \/\/ Found entry\n@@ -232,3 +213,2 @@\n-                \/\/ size must be >= 2 so don't worry about empty list\n-                conns.remove(entry);\n-                conn.closeConnection();\n+                if (closed || (prefSize > 0 && conns.size() > prefSize)) {\n+                    \/\/ If list size exceeds prefSize, close connection\n@@ -236,3 +216,2 @@\n-            } else {\n-                d(\"release(): release \", conn);\n-                td(\"Release \", conn);\n+                    d(\"release(): closing \", conn);\n+                    td(\"Close \", conn);\n@@ -240,4 +219,14 @@\n-                \/\/ Get ConnectionDesc from list to get correct state info\n-                entry = conns.get(loc);\n-                \/\/ Return connection to list, ready for reuse\n-                entry.release();\n+                    \/\/ size must be >= 2 so don't worry about empty list\n+                    conns.remove(entry);\n+                    conn.closeConnection();\n+                } else {\n+                    d(\"release(): release \", conn);\n+                    td(\"Release \", conn);\n+                    \/\/ Get ConnectionDesc from list to get correct state info\n+                    entry = conns.get(loc);\n+                    \/\/ Return connection to list, ready for reuse\n+                    entry.release();\n+                }\n+                connectionsAvailable.signalAll();\n+                d(\"release(): notify\");\n+                return true;\n@@ -245,5 +234,2 @@\n-            notifyAll();\n-            d(\"release(): notify\");\n-            return true;\n-        } else {\n-            return false;\n+        } finally {\n+            lock.unlock();\n@@ -251,0 +237,1 @@\n+        return false;\n@@ -260,1 +247,1 @@\n-     *\n+     * <p>\n@@ -263,3 +250,5 @@\n-    public synchronized boolean removePooledConnection(PooledConnection conn) {\n-        if (conns.remove(new ConnectionDesc(conn))) {\n-            d(\"remove(): \", conn);\n+    public boolean removePooledConnection(PooledConnection conn) {\n+        lock.lock();\n+        try {\n+            if (conns.remove(new ConnectionDesc(conn))) {\n+                d(\"remove(): \", conn);\n@@ -267,1 +256,1 @@\n-            notifyAll();\n+                connectionsAvailable.signalAll();\n@@ -269,2 +258,2 @@\n-            d(\"remove(): notify\");\n-            td(\"Remove \", conn);\n+                d(\"remove(): notify\");\n+                td(\"Remove \", conn);\n@@ -272,5 +261,5 @@\n-            if (conns.isEmpty()) {\n-                \/\/ Remove softref to make pool entry eligible for GC.\n-                \/\/ Once ref has been removed, it cannot be reinstated.\n-                ref = null;\n-            }\n+                if (conns.isEmpty()) {\n+                    \/\/ Remove softref to make pool entry eligible for GC.\n+                    \/\/ Once ref has been removed, it cannot be reinstated.\n+                    ref = null;\n+                }\n@@ -278,4 +267,6 @@\n-            return true;\n-        } else {\n-            d(\"remove(): not found \", conn);\n-            return false;\n+                return true;\n+            } else {\n+                d(\"remove(): not found \", conn);\n+            }\n+        } finally {\n+            lock.unlock();\n@@ -283,0 +274,1 @@\n+        return false;\n@@ -294,1 +286,2 @@\n-        synchronized(this) {\n+        lock.lock();\n+        try {\n@@ -296,0 +289,2 @@\n+        } finally {\n+            lock.unlock();\n@@ -307,1 +302,2 @@\n-        synchronized (this) {\n+        lock.lock();\n+        try {\n@@ -313,0 +309,2 @@\n+        } finally {\n+            lock.unlock();\n@@ -358,0 +356,23 @@\n+    boolean grabLock(long timeout) throws InterruptedNamingException {\n+        final long start = System.nanoTime();\n+        long current = start;\n+        long remaining = timeout;\n+        boolean locked = false;\n+        while (!locked && remaining > 0) {\n+            try {\n+                locked = lock.tryLock(remaining, TimeUnit.MILLISECONDS);\n+                remaining -= TimeUnit.NANOSECONDS.toMillis(current - start);\n+            } catch (InterruptedException ignore) {\n+                throw new InterruptedNamingException(\n+                        \"Interrupted while waiting for the connection pool lock\");\n+            }\n+            current = System.nanoTime();\n+            remaining -= TimeUnit.NANOSECONDS.toMillis(current - start);\n+        }\n+        return locked;\n+    }\n+\n+    void unlock() {\n+        lock.unlock();\n+    }\n+\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/pool\/Connections.java","additions":143,"deletions":122,"binary":false,"changes":265,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.locks.ReentrantLock;\n@@ -38,0 +40,1 @@\n+import javax.naming.CommunicationException;\n@@ -120,0 +123,3 @@\n+        final long start = System.nanoTime();\n+        long remaining = timeout;\n+\n@@ -125,0 +131,1 @@\n+            remaining = checkRemaining(start, remaining);\n@@ -129,0 +136,25 @@\n+        Connections conns = getOrCreateConnections(factory, id);\n+        d(\"get(): size after: \", map.size());\n+        remaining = checkRemaining(start, remaining);\n+\n+        if (!conns.grabLock(remaining)) {\n+            throw new CommunicationException(\"Timed out waiting for lock\");\n+        }\n+\n+        try {\n+            remaining = checkRemaining(start, remaining);\n+            PooledConnection conn = null;\n+            while (remaining > 0 && conn == null) {\n+                conn = getOrCreatePooledConnection(factory, conns, start, remaining);\n+                \/\/ don't loop if the timeout has expired\n+                remaining = checkRemaining(start, timeout);\n+            }\n+            return conn;\n+        } finally {\n+            conns.unlock();\n+        }\n+    }\n+\n+    private Connections getOrCreateConnections(PooledConnectionFactory factory, Object id)\n+            throws NamingException {\n+\n@@ -131,16 +163,3 @@\n-            conns = getConnections(id);\n-            if (conns == null) {\n-                d(\"get(): creating new connections list for \", id);\n-\n-                \/\/ No connections for this id so create a new list\n-                conns = new Connections(id, initSize, prefSize, maxSize,\n-                    factory);\n-                ConnectionsRef connsRef = new ConnectionsRef(conns);\n-                map.put(id, connsRef);\n-\n-                \/\/ Create a weak reference to ConnectionsRef\n-                Reference<ConnectionsRef> weakRef =\n-                        new ConnectionsWeakRef(connsRef, queue);\n-\n-                \/\/ Keep the weak reference through the element of a linked list\n-                weakRefs.add(weakRef);\n+            ConnectionsRef ref = map.get(id);\n+            if (ref != null) {\n+                return ref.getConnections();\n@@ -148,1 +167,15 @@\n-            d(\"get(): size after: \", map.size());\n+\n+            d(\"get(): creating new connections list for \", id);\n+\n+            \/\/ No connections for this id so create a new list\n+            conns = new Connections(id, initSize, prefSize, maxSize,\n+                    factory, new ReentrantLock());\n+\n+            ConnectionsRef connsRef = new ConnectionsRef(conns);\n+            map.put(id, connsRef);\n+\n+            \/\/ Create a weak reference to ConnectionsRef\n+            Reference<ConnectionsRef> weakRef = new ConnectionsWeakRef(connsRef, queue);\n+\n+            \/\/ Keep the weak reference through the element of a linked list\n+            weakRefs.add(weakRef);\n@@ -150,0 +183,2 @@\n+        return conns;\n+    }\n@@ -151,1 +186,22 @@\n-        return conns.get(timeout, factory); \/\/ get one connection from list\n+    private PooledConnection getOrCreatePooledConnection(\n+            PooledConnectionFactory factory, Connections conns, long start, long timeout)\n+            throws NamingException {\n+        PooledConnection conn = conns.getAvailableConnection(timeout);\n+        if (conn != null) {\n+            return conn;\n+        }\n+        \/\/ no available cached connection\n+        \/\/ check if list size already at maxSize before creating a new one\n+        conn = conns.createConnection(factory, timeout);\n+        if (conn != null) {\n+            return conn;\n+        }\n+        \/\/ max number of connections already created,\n+        \/\/ try waiting around for one to become available\n+        if (timeout <= 0) {\n+            conns.waitForAvailableConnection();\n+        } else {\n+            long remaining = checkRemaining(start, timeout);\n+            conns.waitForAvailableConnection(remaining);\n+        }\n+        return null;\n@@ -154,3 +210,13 @@\n-    private Connections getConnections(Object id) {\n-        ConnectionsRef ref = map.get(id);\n-        return (ref != null) ? ref.getConnections() : null;\n+    \/\/ Check whether we timed out\n+    private long checkRemaining(long start, long timeout) throws CommunicationException {\n+        if (timeout > 0) {\n+            long current = System.nanoTime();\n+            long remaining = timeout - TimeUnit.NANOSECONDS.toMillis(current - start);\n+            if (remaining <= 0) {\n+                throw new CommunicationException(\n+                        \"Timeout exceeded while waiting for a connection: \" +\n+                                timeout + \"ms\");\n+            }\n+            return remaining;\n+        }\n+        return Long.MAX_VALUE;\n@@ -159,0 +225,1 @@\n+\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/pool\/Pool.java","additions":88,"deletions":21,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -47,0 +47,9 @@\n+\n+    \/**\n+     * Creates a pooled connection.\n+     * @param pcb callback responsible for removing and releasing the pooled\n+     * connection from the pool.\n+     * @param timeout the connection timeout\n+     *\/\n+    public abstract PooledConnection createPooledConnection(PoolCallback pcb, long timeout)\n+        throws NamingException;\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/pool\/PooledConnectionFactory.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,1 +45,3 @@\n-import com.sun.jndi.ldap.sasl.TlsChannelBinding.TlsChannelBindingType;\n+import sun.security.util.ChannelBindingException;\n+import sun.security.util.TlsChannelBinding;\n+import sun.security.util.TlsChannelBinding.TlsChannelBindingType;\n@@ -65,0 +67,8 @@\n+    \/\/ TLS channel binding type property\n+    private static final String CHANNEL_BINDING_TYPE =\n+            \"com.sun.jndi.ldap.tls.cbtype\";\n+\n+    \/\/ internal TLS channel binding property\n+    private static final String CHANNEL_BINDING =\n+            \"jdk.internal.sasl.tlschannelbinding\";\n+\n@@ -116,2 +126,2 @@\n-        if (env.get(TlsChannelBinding.CHANNEL_BINDING) != null) {\n-            throw new NamingException(TlsChannelBinding.CHANNEL_BINDING +\n+        if (env.get(CHANNEL_BINDING) != null) {\n+            throw new NamingException(CHANNEL_BINDING +\n@@ -126,3 +136,6 @@\n-                TlsChannelBindingType cbType =\n-                        TlsChannelBinding.parseType(\n-                                (String)env.get(TlsChannelBinding.CHANNEL_BINDING_TYPE));\n+                TlsChannelBindingType cbType;\n+                try {\n+                    cbType = TlsChannelBinding.parseType((String)env.get(CHANNEL_BINDING_TYPE));\n+                } catch (ChannelBindingException e) {\n+                    throw wrapInNamingException(e);\n+                }\n@@ -133,2 +146,6 @@\n-                        TlsChannelBinding tlsCB =\n-                                TlsChannelBinding.create(cert);\n+                        TlsChannelBinding tlsCB;\n+                        try {\n+                            tlsCB = TlsChannelBinding.create(cert);\n+                        } catch (ChannelBindingException e) {\n+                            throw wrapInNamingException(e);\n+                        }\n@@ -136,1 +153,1 @@\n-                        envProps.put(TlsChannelBinding.CHANNEL_BINDING, tlsCB.getData());\n+                        envProps.put(CHANNEL_BINDING, tlsCB.getData());\n@@ -230,0 +247,6 @@\n+    private static NamingException wrapInNamingException(Exception e) {\n+        NamingException ne = new NamingException();\n+        ne.setRootCause(e);\n+        return ne;\n+    }\n+\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/LdapSasl.java","additions":32,"deletions":9,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1,146 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Azul Systems, Inc. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package com.sun.jndi.ldap.sasl;\n-\n-import javax.naming.NamingException;\n-import javax.security.sasl.SaslException;\n-import java.security.MessageDigest;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.cert.CertificateEncodingException;\n-import java.security.cert.X509Certificate;\n-import java.util.Arrays;\n-import java.util.Hashtable;\n-\n-\/**\n- * This class implements the Channel Binding for TLS as defined in\n- * <a href=\"https:\/\/www.ietf.org\/rfc\/rfc5929.txt\">\n- *     Channel Bindings for TLS<\/a>\n- *\n- * Format of the Channel Binding data is also defined in\n- * <a href=\"https:\/\/www.ietf.org\/rfc\/rfc5056.txt\">\n- *     On the Use of Channel Bindings to Secure Channels<\/a>\n- * section 2.1.\n- *\n- *\/\n-\n-public class TlsChannelBinding {\n-\n-    \/\/ TLS channel binding type property\n-    public static final String CHANNEL_BINDING_TYPE =\n-            \"com.sun.jndi.ldap.tls.cbtype\";\n-\n-    \/\/ internal TLS channel binding property\n-    public static final String CHANNEL_BINDING =\n-            \"jdk.internal.sasl.tlschannelbinding\";\n-\n-    public enum TlsChannelBindingType {\n-\n-        \/**\n-         * Channel binding on the basis of TLS Finished message.\n-         * TLS_UNIQUE is defined by RFC 5929 but is not supported\n-         * by the current LDAP stack.\n-         *\/\n-        TLS_UNIQUE(\"tls-unique\"),\n-\n-        \/**\n-         * Channel binding on the basis of TLS server certificate.\n-         *\/\n-        TLS_SERVER_END_POINT(\"tls-server-end-point\");\n-\n-        public String getName() {\n-            return name;\n-        }\n-\n-        private final String name;\n-        TlsChannelBindingType(String name) {\n-            this.name = name;\n-        }\n-    }\n-\n-    \/**\n-     * Parse value of \"com.sun.jndi.ldap.tls.cbtype\" property\n-     * @param  cbType\n-     * @return TLS Channel Binding type or null if\n-     *         \"com.sun.jndi.ldap.tls.cbtype\" property has not been set.\n-     * @throws NamingException\n-     *\/\n-    public static TlsChannelBindingType parseType(String cbType) throws NamingException {\n-        if (cbType != null) {\n-            if (cbType.equals(TlsChannelBindingType.TLS_SERVER_END_POINT.getName())) {\n-                return TlsChannelBindingType.TLS_SERVER_END_POINT;\n-            } else {\n-                throw new NamingException(\"Illegal value for \" +\n-                        CHANNEL_BINDING_TYPE + \" property.\");\n-            }\n-        }\n-        return null;\n-    }\n-\n-    private final TlsChannelBindingType cbType;\n-    private final byte[] cbData;\n-\n-    \/**\n-     * Construct tls-server-end-point Channel Binding data\n-     * @param serverCertificate\n-     * @throws SaslException\n-     *\/\n-    public static TlsChannelBinding create(X509Certificate serverCertificate) throws SaslException {\n-        try {\n-            final byte[] prefix =\n-                TlsChannelBindingType.TLS_SERVER_END_POINT.getName().concat(\":\").getBytes();\n-            String hashAlg = serverCertificate.getSigAlgName().\n-                    replace(\"SHA\", \"SHA-\").toUpperCase();\n-            int ind = hashAlg.indexOf(\"WITH\");\n-            if (ind > 0) {\n-                hashAlg = hashAlg.substring(0, ind);\n-                if (hashAlg.equals(\"MD5\") || hashAlg.equals(\"SHA-1\")) {\n-                    hashAlg = \"SHA-256\";\n-                }\n-            } else {\n-                hashAlg = \"SHA-256\";\n-            }\n-            MessageDigest md = MessageDigest.getInstance(hashAlg);\n-            byte[] hash = md.digest(serverCertificate.getEncoded());\n-            byte[] cbData = Arrays.copyOf(prefix, prefix.length + hash.length );\n-            System.arraycopy(hash, 0, cbData, prefix.length, hash.length);\n-            return new TlsChannelBinding(TlsChannelBindingType.TLS_SERVER_END_POINT, cbData);\n-        } catch (NoSuchAlgorithmException | CertificateEncodingException e) {\n-            throw new SaslException(\"Cannot create TLS channel binding data\", e);\n-        }\n-    }\n-\n-    private TlsChannelBinding(TlsChannelBindingType cbType, byte[] cbData) {\n-        this.cbType = cbType;\n-        this.cbData = cbData;\n-    }\n-\n-    public TlsChannelBindingType getType() {\n-        return cbType;\n-    }\n-\n-    public byte[] getData() {\n-        return cbData;\n-    }\n-}\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/TlsChannelBinding.java","additions":0,"deletions":146,"binary":false,"changes":146,"status":"deleted"},{"patch":"@@ -308,1 +308,1 @@\n-            if (!exchange.client().authenticator().isPresent()) return null;\n+            if (exchange.client().authenticator().isEmpty()) return null;\n@@ -334,1 +334,1 @@\n-            if (!exchange.client().authenticator().isPresent()) return null;\n+            if (exchange.client().authenticator().isEmpty()) return null;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/AuthenticationFilter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-        if (!userHeaders.firstValue(\"User-Agent\").isPresent()) {\n+        if (userHeaders.firstValue(\"User-Agent\").isEmpty()) {\n@@ -185,1 +185,1 @@\n-        if (!userHeaders.firstValue(\"User-Agent\").isPresent()) {\n+        if (userHeaders.firstValue(\"User-Agent\").isEmpty()) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpRequestImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-        return (k, v) -> !client.authenticator().isPresent() ||\n+        return (k, v) -> client.authenticator().isEmpty() ||\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-        assert !client.proxy().isPresent()\n+        assert client.proxy().isEmpty()\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/BuilderImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.net.http.HttpRequest;\n@@ -65,1 +64,0 @@\n-import java.util.stream.Collectors;\n@@ -284,1 +282,1 @@\n-        if (!opt.isPresent()) {\n+        if (opt.isEmpty()) {\n@@ -366,1 +364,1 @@\n-        if (!selector.isPresent()) {\n+        if (selector.isEmpty()) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/OpeningHandshake.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,0 +43,3 @@\n+import sun.security.jgss.krb5.internal.TlsChannelBindingImpl;\n+import sun.security.util.ChannelBindingException;\n+import sun.security.util.TlsChannelBinding;\n@@ -68,1 +71,1 @@\n-    private void init(HttpCallerInfo hci) throws GSSException {\n+    private void init(HttpCallerInfo hci) throws GSSException, ChannelBindingException {\n@@ -103,0 +106,8 @@\n+        if (hci.serverCert != null) {\n+            if (DEBUG) {\n+                System.out.println(\"Negotiate: Setting CBT\");\n+            }\n+            \/\/ set the channel binding token\n+            TlsChannelBinding b = TlsChannelBinding.create(hci.serverCert);\n+            context.setChannelBinding(new TlsChannelBindingImpl(b.getData()));\n+        }\n@@ -113,1 +124,1 @@\n-        } catch (GSSException e) {\n+        } catch (GSSException | ChannelBindingException e) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/net\/www\/protocol\/http\/spnego\/NegotiatorImpl.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1046,0 +1046,4 @@\n+    if (output_token) {\n+        output_token->length = 0;\n+        output_token->value = NULL;\n+    }\n","filename":"src\/java.security.jgss\/windows\/native\/libsspi_bridge\/sspi.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = Invalid column index\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = Ung\\u00FCltiger Spaltenindex\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_de.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\u00CDndice de columnas no v\\u00E1lido\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_es.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = Index de colonne non valide\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_fr.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = Indice di colonna non valido\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_it.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\u7121\\u52B9\\u306A\\u5217\\u7D22\\u5F15\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_ja.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\uC5F4 \\uC778\\uB371\\uC2A4\\uAC00 \\uBD80\\uC801\\uD569\\uD569\\uB2C8\\uB2E4.\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_ko.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\u00CDndice de coluna inv\\u00E1lido\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_pt_BR.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = Ogiltigt kolumnindex\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_sv.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\u5217\\u7D22\\u5F15\\u65E0\\u6548\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_zh_CN.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-cachedrowsetimpl.invalidcol = \\u6B04\\u7D22\\u5F15\\u7121\\u6548\n","filename":"src\/java.sql.rowset\/share\/classes\/com\/sun\/rowset\/RowSetResourceBundle_zh_TW.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,2 +2,1 @@\n- * reserved comment block\n- * DO NOT REMOVE OR ALTER!\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,0 +44,2 @@\n+ *\n+ * @LastModified: Jan 2022\n@@ -285,1 +286,1 @@\n-    if (base == null)\n+    if (base == null || base.length() == 0)\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/utils\/SystemIDResolver.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-void initializeFileLogger(char * fileName) {\n+void initializeFileLogger(const char * fileName) {\n@@ -86,1 +86,1 @@\n-char *printError(char *msg) {\n+char *printError(const char *msg) {\n@@ -122,1 +122,1 @@\n-    void PrintDebugString(char *msg, ...) {\n+    void PrintDebugString(const char *msg, ...) {\n@@ -150,1 +150,1 @@\n-    void PrintJavaDebugString2(char *msg, ...) {\n+    void PrintJavaDebugString2(const char *msg, ...) {\n@@ -177,1 +177,1 @@\n-    void wPrintDebugString(wchar_t *msg, ...) {\n+    void wPrintDebugString(const wchar_t *msg, ...) {\n@@ -207,1 +207,1 @@\n-    void wPrintJavaDebugString(wchar_t *msg, ...) {\n+    void wPrintJavaDebugString(const wchar_t *msg, ...) {\n","filename":"src\/jdk.accessibility\/windows\/native\/common\/AccessBridgeDebug.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -52,6 +52,6 @@\n-    char *printError(char *msg);\n-    void PrintDebugString(char *msg, ...);\n-    void PrintJavaDebugString(char *msg, ...);\n-    void wPrintJavaDebugString(wchar_t *msg, ...);\n-    void wPrintDebugString(wchar_t *msg, ...);\n-    void initializeFileLogger(char * fileName);\n+    char *printError(const char *msg);\n+    void PrintDebugString(const char *msg, ...);\n+    void PrintJavaDebugString(const char *msg, ...);\n+    void wPrintJavaDebugString(const wchar_t *msg, ...);\n+    void wPrintDebugString(const wchar_t *msg, ...);\n+    void initializeFileLogger(const char * fileName);\n","filename":"src\/jdk.accessibility\/windows\/native\/common\/AccessBridgeDebug.h","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -208,1 +208,1 @@\n-                                     char *announcement) {\n+                                     const char *announcement) {\n","filename":"src\/jdk.accessibility\/windows\/native\/jaccessinspector\/jaccessinspector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-DEBUG_CODE(void AppendToCallInfo(char *s));\n+DEBUG_CODE(void AppendToCallInfo(const char *s));\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeEventHandler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    DEBUG_CODE(void AppendToCallInfo(char *s));\n+    DEBUG_CODE(void AppendToCallInfo(const char *s));\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeJavaVMInstance.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    DEBUG_CODE(void AppendToCallInfo(char *s));\n+    DEBUG_CODE(void AppendToCallInfo(const char *s));\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/AccessBridgeMessageQueue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-    void AppendToCallInfo(char *s) {\n+    void AppendToCallInfo(const char *s) {\n","filename":"src\/jdk.accessibility\/windows\/native\/libwindowsaccessbridge\/WinAccessBridge.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-void logString(FILE *logfile, char *msg, ...) {\n+void logString(FILE *logfile, const char *msg, ...) {\n@@ -108,1 +108,1 @@\n-BOOL appendToBuffer(char *buf, size_t buflen, char *msg, ...) {\n+BOOL appendToBuffer(char *buf, size_t buflen, const char *msg, ...) {\n","filename":"src\/jdk.accessibility\/windows\/native\/toolscommon\/AccessInfo.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-void logString(FILE *logfile, char *msg, ...);\n+void logString(FILE *logfile, const char *msg, ...);\n","filename":"src\/jdk.accessibility\/windows\/native\/toolscommon\/AccessInfo.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-        if (sym.isDeprecated()) {\n+        if (sym.isDeprecated() && sym.isDeprecatableViaAnnotation()) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Lint.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -670,1 +670,1 @@\n-     *  See JLS 8.4.6.1 (without transitivity) and 8.4.6.4\n+     *  See JLS 8.4.8.1 (without transitivity) and 8.4.8.4\n@@ -2063,1 +2063,1 @@\n-         *  See JLS 8.4.6.1 (without transitivity) and 8.4.6.4\n+         *  See JLS 8.4.8.1 (without transitivity) and 8.4.8.4\n@@ -2080,1 +2080,1 @@\n-         *  See JLS 8.4.6.1 (without transitivity) and 8.4.6.4\n+         *  See JLS 8.4.8.1 (without transitivity) and 8.4.8.4\n@@ -2118,1 +2118,1 @@\n-            \/\/ JLS 8.4.6.1\n+            \/\/ JLS 8.4.8.1\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1041,2 +1041,10 @@\n-                appendAnnotationsString(buf);\n-                buf.append(className(tsym, true));\n+                if (isAnnotated()) {\n+                    if (!tsym.packge().isUnnamed()) {\n+                        buf.append(tsym.packge());\n+                        buf.append(\".\");\n+                    }\n+                    appendAnnotationsString(buf);\n+                    buf.append(tsym.name);\n+                } else {\n+                    buf.append(className(tsym, true));\n+                }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.function.Consumer;\n@@ -5191,2 +5192,2 @@\n-        Env<AttrContext> env = typeEnvs.get(p);\n-        chk.checkDeprecatedAnnotation(((JCPackageDecl) env.tree).pid.pos(), p);\n+        attribWithLint(p,\n+                       env -> chk.checkDeprecatedAnnotation(((JCPackageDecl) env.tree).pid.pos(), p));\n@@ -5205,3 +5206,22 @@\n-        \/\/ Get environment current at the point of module definition.\n-        Env<AttrContext> env = enter.typeEnvs.get(m);\n-        attribStat(env.tree, env);\n+        attribWithLint(m, env -> attribStat(env.tree, env));\n+    }\n+\n+    private void attribWithLint(TypeSymbol sym, Consumer<Env<AttrContext>> attrib) {\n+        Env<AttrContext> env = typeEnvs.get(sym);\n+\n+        Env<AttrContext> lintEnv = env;\n+        while (lintEnv.info.lint == null)\n+            lintEnv = lintEnv.next;\n+\n+        Lint lint = lintEnv.info.lint.augment(sym);\n+\n+        Lint prevLint = chk.setLint(lint);\n+        JavaFileObject prev = log.useSource(env.toplevel.sourcefile);\n+\n+        try {\n+            deferredLintHandler.flush(env.tree.pos());\n+            attrib.accept(env);\n+        } finally {\n+            log.useSource(prev);\n+            chk.setLint(prevLint);\n+        }\n@@ -5473,1 +5493,1 @@\n-            \/\/ yet different return types).  (JLS 8.4.6.3)\n+            \/\/ yet different return types).  (JLS 8.4.8.3)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1793,1 +1793,1 @@\n-        \/\/ Error if static method overrides instance method (JLS 8.4.6.2).\n+        \/\/ Error if static method overrides instance method (JLS 8.4.8.2).\n@@ -1803,1 +1803,1 @@\n-        \/\/ method (JLS 8.4.6.1).\n+        \/\/ method (JLS 8.4.8.1).\n@@ -1819,1 +1819,1 @@\n-        \/\/ Error if overriding method has weaker access (JLS 8.4.6.3).\n+        \/\/ Error if overriding method has weaker access (JLS 8.4.8.3).\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -667,4 +667,1 @@\n-            boolean exhaustiveSwitch = tree.patternSwitch ||\n-                                       tree.cases.stream()\n-                                                 .flatMap(c -> c.labels.stream())\n-                                                 .anyMatch(l -> TreeInfo.isNull(l));\n+            boolean exhaustiveSwitch = TreeInfo.expectedExhaustive(tree);\n@@ -692,4 +689,7 @@\n-            if (!tree.hasTotalPattern && exhaustiveSwitch &&\n-                !TreeInfo.isErrorEnumSwitch(tree.selector, tree.cases) &&\n-                (constants == null || !isExhaustive(tree.selector.pos(), tree.selector.type, constants))) {\n-                log.error(tree, Errors.NotExhaustiveStatement);\n+            tree.isExhaustive = tree.hasTotalPattern ||\n+                                TreeInfo.isErrorEnumSwitch(tree.selector, tree.cases);\n+            if (exhaustiveSwitch) {\n+                tree.isExhaustive |= isExhaustive(tree.selector.pos(), tree.selector.type, constants);\n+                if (!tree.isExhaustive) {\n+                    log.error(tree, Errors.NotExhaustiveStatement);\n+                }\n@@ -728,2 +728,4 @@\n-            if (!tree.hasTotalPattern && !TreeInfo.isErrorEnumSwitch(tree.selector, tree.cases) &&\n-                !isExhaustive(tree.selector.pos(), tree.selector.type, constants)) {\n+            tree.isExhaustive = tree.hasTotalPattern ||\n+                                TreeInfo.isErrorEnumSwitch(tree.selector, tree.cases) ||\n+                                isExhaustive(tree.selector.pos(), tree.selector.type, constants);\n+            if (!tree.isExhaustive) {\n@@ -2435,1 +2437,1 @@\n-            handleSwitch(tree, tree.selector, tree.cases, tree.hasTotalPattern);\n+            handleSwitch(tree, tree.selector, tree.cases, tree.isExhaustive);\n@@ -2439,1 +2441,1 @@\n-            handleSwitch(tree, tree.selector, tree.cases, tree.hasTotalPattern);\n+            handleSwitch(tree, tree.selector, tree.cases, tree.isExhaustive);\n@@ -2443,1 +2445,1 @@\n-                                  List<JCCase> cases, boolean hasTotalPattern) {\n+                                  List<JCCase> cases, boolean isExhaustive) {\n@@ -2481,1 +2483,1 @@\n-            if (!hasTotalPattern) {\n+            if (!isExhaustive) {\n@@ -2484,1 +2486,1 @@\n-                } else {\n+                } else if (tree.hasTag(SWITCH) && !TreeInfo.expectedExhaustive((JCSwitch) tree)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -374,2 +374,7 @@\n-                    \/\/check @Deprecated:\n-                    markDeprecated(decl.sym, decl.mods.annotations, env);\n+                    DiagnosticPosition prevCheckDeprecatedLintPos = deferredLintHandler.setPos(decl.pos());\n+                    try {\n+                        \/\/check @Deprecated:\n+                        markDeprecated(decl.sym, decl.mods.annotations, env);\n+                    } finally {\n+                        deferredLintHandler.setPos(prevCheckDeprecatedLintPos);\n+                    }\n@@ -377,1 +382,1 @@\n-                    annotate.annotateLater(decl.mods.annotations, env, env.toplevel.modle, null);\n+                    annotate.annotateLater(decl.mods.annotations, env, env.toplevel.modle, decl.pos());\n@@ -405,1 +410,1 @@\n-            annotate.annotateLater(tree.annotations, env, env.toplevel.packge, null);\n+            annotate.annotateLater(tree.annotations, env, env.toplevel.packge, tree.pos());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -672,1 +672,1 @@\n-                    if (Code.truncate(typecode) == INTcode)\n+                    if (Code.truncate(typecode) == INTcode && typecode != CHARcode)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Items.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2038,1 +2038,1 @@\n-            accept(RPAREN);\n+            accept(RPAREN, tk -> Errors.Expected2(RPAREN, COMMA));\n@@ -2126,1 +2126,1 @@\n-                    args.append(syntaxError(token.pos, Errors.Expected(GT)));\n+                    args.append(syntaxError(token.pos, Errors.Expected2(GT, COMMA)));\n@@ -3382,1 +3382,1 @@\n-            accept(RBRACE);\n+            accept(RBRACE, tk -> Errors.AnnotationMissingElementValue);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -121,0 +121,3 @@\n+compiler.err.annotation.missing.element.value=\\\n+    annotation is missing element value\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1288,0 +1288,1 @@\n+        public boolean isExhaustive;\n@@ -1374,0 +1375,1 @@\n+        public boolean isExhaustive;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/JCTree.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1387,0 +1387,6 @@\n+    public static boolean expectedExhaustive(JCSwitch tree) {\n+        return tree.patternSwitch ||\n+               tree.cases.stream()\n+                         .flatMap(c -> c.labels.stream())\n+                         .anyMatch(l -> TreeInfo.isNull(l));\n+    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeInfo.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -192,1 +192,1 @@\n-                    depsByKind.put(depKind, new ArrayList<Node>());\n+                    depsByKind.put(depKind, new ArrayList<>());\n@@ -219,1 +219,1 @@\n-            public java.util.Collection<? extends Node> getDependenciesByKind(DependencyKind dk) {\n+            public Collection<? extends Node> getDependenciesByKind(DependencyKind dk) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Dependencies.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-         * visitor method.\n+         * Visitor method.\n@@ -108,1 +108,1 @@\n-         * Get all dependencies of a given kind\n+         * Get all dependencies of a given kind.\n@@ -129,1 +129,1 @@\n-     * This class specialized Node, by adding elements that are required in order\n+     * This class specializes Node, by adding elements that are required in order\n@@ -144,0 +144,1 @@\n+        @Override\n@@ -145,1 +146,1 @@\n-            return (index < o.index) ? -1 : (index == o.index) ? 0 : 1;\n+            return Integer.compare(index, o.index);\n@@ -150,1 +151,1 @@\n-     * Tarjan's algorithm to determine strongly connected components of a\n+     * Tarjan's algorithm to determine strongly connected components (SCCs) of a\n@@ -163,1 +164,1 @@\n-        \/** List of SCCs found fso far. *\/\n+        \/** List of SCCs found so far. *\/\n@@ -166,1 +167,1 @@\n-        \/** Stack of all reacheable nodes from given root. *\/\n+        \/** Stack of all reachable nodes from given root. *\/\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/GraphUtils.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,3 @@\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"javac\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code javac} tool.\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,0 +147,10 @@\n+    if (rv == CKR_BUFFER_TOO_SMALL) {\n+        bufP = (CK_BYTE_PTR) malloc(ckSignatureLength);\n+        if (bufP == NULL) {\n+            throwOutOfMemoryError(env, 0);\n+            goto cleanup;\n+        }\n+        rv = (*ckpFunctions->C_Sign)(ckSessionHandle, ckpData, ckDataLength,\n+            bufP, &ckSignatureLength);\n+    }\n+\n@@ -152,0 +162,1 @@\n+cleanup:\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_sign.c","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,3 +138,11 @@\n-        loc.blob = c.findBlobUnsafe(a);\n-        if (Assert.ASSERTS_ENABLED) {\n-          Assert.that(loc.blob != null, \"Should have found CodeBlob\");\n+        try {\n+            loc.blob = c.findBlobUnsafe(a);\n+        } catch (Exception e) {\n+            \/\/ Since we potentially have a random address in the codecache and therefore could\n+            \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+        }\n+        if (loc.blob == null) {\n+            \/\/ It's possible that there is no CodeBlob for this address. Let\n+            \/\/ PointerLocation deal with it.\n+            loc.inBlobUnknownLocation = true;\n+            return loc;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -304,4 +304,1 @@\n-        if (Assert.ASSERTS_ENABLED) {\n-          Assert.that(isInBlobUnknownLocation(), \"Should have known location in CodeBlob\");\n-        }\n-        tty.print(\"unknown location\");\n+        tty.print(\"unknown CodeCache location\");\n@@ -309,3 +306,2 @@\n-      tty.print(\" in \");\n-      if (verbose) {\n-          b.printOn(tty); \/\/ includes \"\\n\"\n+      if (b == null) {\n+          tty.println();\n@@ -313,1 +309,13 @@\n-          tty.println(b.toString());\n+          tty.print(\" in \");\n+          \/\/ Since we potentially have a random address in the codecache and therefore could\n+          \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+          \/\/ One known case is an NMethod where the method is still null, resulting in an NPE.\n+          try {\n+              if (verbose) {\n+                  b.printOn(tty); \/\/ includes \"\\n\"\n+              } else {\n+                  tty.println(b.toString());\n+              }\n+          } catch (Exception e) {\n+              tty.println(\"<unknown>\");\n+          }\n@@ -315,1 +323,0 @@\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/SimpleFileServer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n@@ -228,0 +230,3 @@\n+                if (!URIPathSegment.isSupported(segment)) {\n+                    return null;  \/\/ stop resolution, null results in 404 response\n+                }\n@@ -230,1 +235,1 @@\n-                    return null;  \/\/ stop resolution, null results in 404 response\n+                    return null;  \/\/ stop resolution\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/FileServerHandler.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/JWebServer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/Main.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/OutputFilter.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/ResourceBundleHelper.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -7,1 +7,3 @@\n- * published by the Free Software Foundation.\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/simpleserver\/SimpleFileServerImpl.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.net.httpserver.simpleserver;\n+\n+\/**\n+ * A class that represents a URI path segment.\n+ *\/\n+final class URIPathSegment {\n+\n+    private URIPathSegment() { throw new AssertionError(); }\n+\n+    \/**\n+     * Checks if the segment of a URI path is supported.\n+     *\n+     * @param segment the segment string\n+     * @return true\n+     *\/\n+    static boolean isSupported(String segment) {\n+        return true;\n+    }\n+}\n","filename":"src\/jdk.httpserver\/unix\/classes\/sun\/net\/httpserver\/simpleserver\/URIPathSegment.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.net.httpserver.simpleserver;\n+\n+\/**\n+ * A class that represents a URI path segment.\n+ *\/\n+final class URIPathSegment {\n+\n+    private URIPathSegment() { throw new AssertionError(); }\n+\n+    \/**\n+     * Checks if the segment of a URI path is supported. For example,\n+     * \"C:\" is supported as a drive on Windows only.\n+     *\n+     * @param segment the segment string\n+     * @return true if the segment is supported\n+     *\/\n+    static boolean isSupported(String segment) {\n+        \/\/ apply same logic as WindowsPathParser\n+        if (segment.length() >= 2 && isLetter(segment.charAt(0)) && segment.charAt(1) == ':') {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    private static boolean isLetter(char c) {\n+        return ((c >= 'a') && (c <= 'z')) || ((c >= 'A') && (c <= 'Z'));\n+    }\n+}\n","filename":"src\/jdk.httpserver\/windows\/classes\/sun\/net\/httpserver\/simpleserver\/URIPathSegment.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -43,2 +43,1 @@\n-     * Returns the memory address associated with this addressable.\n-     * @return The memory address associated with this addressable.\n+     * {@return the {@linkplain MemoryAddress memory address} associated with this addressable}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/Addressable.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,2 +57,1 @@\n-     * Returns the return layout associated with this function.\n-     * @return the return layout.\n+     * {@return the return layout (if any) associated with this function descriptor}\n@@ -65,2 +64,1 @@\n-     * Returns the argument layouts associated with this function.\n-     * @return the argument layouts.\n+     * {@return the argument layouts associated with this function descriptor}.\n@@ -169,2 +167,1 @@\n-     * Returns a string representation of this function descriptor.\n-     * @return a string representation of this function descriptor.\n+     * {@return the string representation of this function descriptor}\n@@ -204,2 +201,1 @@\n-     * Returns the hash code value for this function descriptor.\n-     * @return the hash code value for this function descriptor.\n+     * {@return the hash code value for this function descriptor}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/FunctionDescriptor.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -136,3 +136,1 @@\n-     * Is this group layout a <em>struct<\/em>?\n-     *\n-     * @return true, if this group layout is a <em>struct<\/em>.\n+     * {@return {@code true}, if this group layout is a <em>struct<\/em>}\n@@ -145,3 +143,1 @@\n-     * Is this group layout a <em>union<\/em>?\n-     *\n-     * @return true, if this group layout is a <em>union<\/em>.\n+     * {@return {@code true}, if this group layout is a <em>union<\/em>}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/GroupLayout.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,2 +81,1 @@\n-     * Returns the raw long value associated with this memory address.\n-     * @return The raw long value associated with this memory address.\n+     * {@return the raw long value associated with this memory address}\n@@ -144,2 +143,1 @@\n-     * Returns the hash code value for this address.\n-     * @return the hash code value for this address.\n+     * {@return the hash code value for this address}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-     * Returns an {@link Optional} containing the nominal descriptor for this\n+     * {@return an {@link Optional} containing the nominal descriptor for this\n@@ -200,4 +200,1 @@\n-     * if one cannot be constructed.\n-     *\n-     * @return An {@link Optional} containing the resulting nominal descriptor,\n-     * or an empty {@link Optional} if one cannot be constructed.\n+     * if one cannot be constructed}\n@@ -209,1 +206,1 @@\n-     * Does this layout have a specified size? A layout does not have a specified size if it is (or contains) a sequence layout whose\n+     * Returns {@code true} if this layout has a specified size. A layout does not have a specified size if it is (or contains) a sequence layout whose\n@@ -220,3 +217,1 @@\n-     * Computes the layout size, in bits.\n-     *\n-     * @return the layout size, in bits.\n+     * {@return the layout size, in bits}\n@@ -228,3 +223,1 @@\n-     * Computes the layout size, in bytes.\n-     *\n-     * @return the layout size, in bytes.\n+     * {@return the layout size, in bytes}\n@@ -237,3 +230,1 @@\n-     * Return the <em>name<\/em> (if any) associated with this layout.\n-     *\n-     * @return the layout <em>name<\/em> (if any).\n+     * {@return the <em>name<\/em> (if any) associated with this layout}\n@@ -537,2 +528,1 @@\n-     * Is this a {@linkplain #paddingLayout(long) padding layout} ?\n-     * @return true, if this layout is a padding layout.\n+     * {@return true, if this layout is a padding layout}\n@@ -654,3 +644,1 @@\n-     * Returns the hash code value for this layout.\n-     *\n-     * @return the hash code value for this layout.\n+     * {@return the hash code value for this layout}\n@@ -661,3 +649,1 @@\n-     * Returns a string representation of this layout.\n-     *\n-     * @return a string representation of this layout.\n+     * {@return the string representation of this layout}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java","additions":9,"deletions":23,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -253,1 +253,1 @@\n-     * The base memory address associated with this native memory segment.\n+     * {@return the base memory address associated with this native memory segment}\n@@ -257,1 +257,0 @@\n-     * @return The base memory address.\n@@ -302,2 +301,1 @@\n-     * Returns the resource scope associated with this memory segment.\n-     * @return the resource scope associated with this memory segment.\n+     * {@return the resource scope associated with this memory segment}\n@@ -308,2 +306,1 @@\n-     * The size (in bytes) of this memory segment.\n-     * @return The size (in bytes) of this memory segment.\n+     * {@return the size (in bytes) of this memory segment}\n@@ -346,2 +343,1 @@\n-     * Is this segment read-only?\n-     * @return {@code true}, if this segment is read-only.\n+     * {@return {@code true}, if this segment is read-only}\n@@ -361,1 +357,1 @@\n-     * Is this a native segment? Returns true if this segment is a native memory segment,\n+     * Returns {@code true} if this segment is a native segment. A native memory segment is\n@@ -370,1 +366,1 @@\n-     * Is this a mapped segment? Returns true if this segment is a mapped memory segment,\n+     * Returns {@code true} if this segment is a mapped segment. A mapped memory segment is\n@@ -487,1 +483,1 @@\n-     * Tells whether the contents of this mapped segment is resident in physical\n+     * Determines whether the contents of this mapped segment is resident in physical\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemorySegment.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,2 +46,1 @@\n-     * Returns the name of this symbol.\n-     * @return the name of this symbol.\n+     * {@return the name of this symbol}\n@@ -52,2 +51,1 @@\n-     * Returns the resource scope associated with this symbol.\n-     * @return the resource scope associated with this symbol.\n+     * {@return the resource scope associated with this symbol}\n@@ -58,1 +56,1 @@\n-     * Returns the memory address associated with this symbol.\n+     * {@return the memory address associated with this symbol}\n@@ -61,1 +59,0 @@\n-     * @return The memory address associated with this symbol.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/NativeSymbol.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -150,2 +150,1 @@\n-     * Is this resource scope alive?\n-     * @return true, if this resource scope is alive.\n+     * {@return {@code true}, if this resource scope is alive}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ResourceScope.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -85,3 +85,1 @@\n-     * Returns the element layout associated with this sequence layout.\n-     *\n-     * @return The element layout associated with this sequence layout.\n+     * {@return the element layout associated with this sequence layout}\n@@ -94,3 +92,1 @@\n-     * Returns the element count of this sequence layout (if any).\n-     *\n-     * @return the element count of this sequence layout (if any).\n+     * {@return the element count of this sequence layout (if any)}\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SequenceLayout.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -135,2 +135,1 @@\n-     * Returns the resource scope associated with this variable argument list.\n-     * @return the resource scope associated with this variable argument list.\n+     * {@return the resource scope associated with this variable argument list}\n@@ -156,1 +155,1 @@\n-     * Returns the memory address associated with this variable argument list.\n+     * {@return the {@linkplain MemoryAddress memory address} associated with this variable argument list}\n@@ -159,1 +158,0 @@\n-     * @return The memory address associated with this variable argument list.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/VaList.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n- * (either signed or unsigned) and <em>floating-point<\/em> types. Each value layout has a size, an alignment, a {@linkplain ByteOrder byte order})\n- * and a <em>carrier<\/em>, that is, the Java type that should be used when {@linkplain MemorySegment#get(OfInt, long) accessing}\n- * a memory region using the value layout.\n+ * (either signed or unsigned) and <em>floating-point<\/em> types. Each value layout has a size, an alignment (in bits),\n+ * a {@linkplain ByteOrder byte order}, and a <em>carrier<\/em>, that is, the Java type that should be used when\n+ * {@linkplain MemorySegment#get(OfInt, long) accessing} a memory region using the value layout.\n@@ -85,3 +85,1 @@\n-     * Returns the value's byte order.\n-     *\n-     * @return the value's  byte order.\n+     * {@return the value's byte order}\n@@ -128,2 +126,1 @@\n-     * Returns the carrier associated with this value layout.\n-     * @return the carrier associated with this value layout.\n+     * {@return the carrier associated with this value layout}\n@@ -516,2 +513,2 @@\n-     * A value layout constant whose size is the same as that of a machine address (e.g. {@code size_t}),\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * A value layout constant whose size is the same as that of a machine address ({@code size_t}),\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -527,1 +524,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -537,1 +534,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -547,1 +544,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -557,1 +554,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -567,1 +564,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -577,1 +574,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -588,1 +585,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n@@ -598,1 +595,1 @@\n-     * bit-alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n+     * bit alignment set to 8, and byte order set to {@link ByteOrder#nativeOrder()}.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/ValueLayout.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * The main abstractions introduced to support foreign memory access is {@link jdk.incubator.foreign.MemorySegment}, which\n+ * The main abstraction introduced to support foreign memory access is {@link jdk.incubator.foreign.MemorySegment}, which\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import jdk.internal.loader.NativeLibraries;\n@@ -35,0 +34,1 @@\n+import jdk.internal.loader.RawNativeLibraries;\n@@ -36,0 +36,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -42,0 +43,2 @@\n+import sun.security.action.GetPropertyAction;\n+\n@@ -55,1 +58,1 @@\n-        case SysV, LinuxAArch64, MacOsAArch64 -> libLookup(libs -> libs.loadLibrary(\"syslookup\"));\n+        case SysV, LinuxAArch64, MacOsAArch64 -> libLookup(libs -> libs.load(jdkLibraryPath(\"syslookup\")));\n@@ -66,1 +69,1 @@\n-        SymbolLookup lookup = libLookup(libs -> libs.loadLibrary(null, stdLib.toFile()));\n+        SymbolLookup lookup = libLookup(libs -> libs.load(stdLib));\n@@ -70,2 +73,1 @@\n-\n-            SymbolLookup fallbackLibLookup = libLookup(libs -> libs.loadLibrary(\"WinFallbackLookup\"));\n+            SymbolLookup fallbackLibLookup = libLookup(libs -> libs.load(jdkLibraryPath(\"WinFallbackLookup\")));\n@@ -87,2 +89,2 @@\n-    private static SymbolLookup libLookup(Function<NativeLibraries, NativeLibrary> loader) {\n-        NativeLibrary lib = loader.apply(NativeLibraries.rawNativeLibraries(SystemLookup.class, false));\n+    private static SymbolLookup libLookup(Function<RawNativeLibraries, NativeLibrary> loader) {\n+        NativeLibrary lib = loader.apply(RawNativeLibraries.newInstance(MethodHandles.lookup()));\n@@ -102,0 +104,13 @@\n+    \/*\n+     * Returns the path of the given library name from JDK\n+     *\/\n+    private static Path jdkLibraryPath(String name) {\n+        Path javahome = Path.of(GetPropertyAction.privilegedGetProperty(\"java.home\"));\n+        String lib = switch (CABI.current()) {\n+            case SysV, LinuxAArch64, MacOsAArch64 -> \"lib\";\n+            case Win64 -> \"bin\";\n+        };\n+        String libname = System.mapLibraryName(name);\n+        return javahome.resolve(lib).resolve(libname);\n+    }\n+\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/SystemLookup.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -642,0 +642,19 @@\n+    \/**\n+     * Helper function for all sorts of lane-wise unsigned conversions.\n+     * This function kicks in after intrinsic failure.\n+     *\/\n+    \/*package-private*\/\n+    @ForceInline\n+    final <F>\n+    AbstractVector<F> defaultUCast(AbstractSpecies<F> dsp) {\n+        AbstractSpecies<?> vsp = this.vspecies();\n+        if (vsp.elementSize() >= dsp.elementSize()) {\n+            \/\/ clip in place\n+            return this.convert0('C', dsp);\n+        } else {\n+            \/\/ extend in place, but remove unwanted sign extension\n+            long mask = -1L >>> -vsp.elementSize();\n+            return (AbstractVector<F>) this.convert0('C', dsp).lanewise(AND, dsp.broadcast(mask));\n+        }\n+    }\n+\n@@ -661,0 +680,1 @@\n+        Class<?> vtype;\n@@ -668,1 +688,0 @@\n-            \/\/ Maybe this should be an intrinsic also.\n@@ -670,1 +689,15 @@\n-            AbstractVector<?> bitv = resizeLanes0(this, rspi);\n+            AbstractSpecies<?> vsp = this.vspecies();\n+            AbstractSpecies<?> vspi = vsp.asIntegral();\n+            AbstractVector<?> biti = vspi == vsp ? this : this.convert0('X', vspi);\n+            rtype = rspi.elementType();\n+            rlength = rspi.laneCount();\n+            etype = vspi.elementType();\n+            vlength = vspi.laneCount();\n+            rvtype = rspi.dummyVector().getClass();\n+            vtype = vspi.dummyVector().getClass();\n+            int opc = vspi.elementSize() < rspi.elementSize() ? VectorSupport.VECTOR_OP_UCAST : VectorSupport.VECTOR_OP_CAST;\n+            AbstractVector<?> bitv = VectorSupport.convert(opc,\n+                    vtype, etype, vlength,\n+                    rvtype, rtype, rlength,\n+                    biti, rspi,\n+                    AbstractVector::defaultUCast);\n@@ -678,0 +711,1 @@\n+            vtype = this.getClass();\n@@ -679,1 +713,1 @@\n-                    this.getClass(), etype, vlength,\n+                    vtype, etype, vlength,\n@@ -689,0 +723,1 @@\n+            vtype = this.getClass();\n@@ -690,1 +725,1 @@\n-                    this.getClass(), etype, vlength,\n+                    vtype, etype, vlength,\n@@ -698,18 +733,0 @@\n-    @ForceInline\n-    private static <F>\n-    AbstractVector<F>\n-    resizeLanes0(AbstractVector<?> v, AbstractSpecies<F> rspi) {\n-        AbstractSpecies<?> dsp = v.vspecies();\n-        int sizeChange = rspi.elementSize() - dsp.elementSize();\n-        AbstractSpecies<?> dspi = dsp.asIntegral();\n-        if (dspi != dsp)  v = v.convert0('R', dspi);\n-        if (sizeChange <= 0) {  \/\/ clip in place\n-            return v.convert0('C', rspi);\n-        }\n-        \/\/ extend in place, but remove unwanted sign extension\n-        long mask = -1L >>> -dsp.elementSize();\n-        return (AbstractVector<F>)\n-            v.convert0('C', rspi)\n-            .lanewise(AND, rspi.broadcast(mask));\n-    }\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":39,"deletions":22,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2598,1 +2598,2 @@\n-            ByteVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            ByteVector v = broadcast((byte) 0).blend(this, m);\n@@ -2613,1 +2614,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2616,1 +2617,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (byte) 0;\n@@ -2649,28 +2651,0 @@\n-    private\n-    @ForceInline\n-    ByteVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<ByteVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                case VECTOR_OP_OR:\n-                case VECTOR_OP_XOR:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_AND:\n-                    return v -> v.broadcast(-1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<ByteVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, ByteVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2422,1 +2422,2 @@\n-            DoubleVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            DoubleVector v = broadcast((double) 0).blend(this, m);\n@@ -2437,1 +2438,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2440,1 +2441,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (double) 0;\n@@ -2467,24 +2469,0 @@\n-    private\n-    @ForceInline\n-    DoubleVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<DoubleVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<DoubleVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, DoubleVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":5,"deletions":27,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2442,1 +2442,2 @@\n-            FloatVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            FloatVector v = broadcast((float) 0).blend(this, m);\n@@ -2457,1 +2458,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2460,1 +2461,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (float) 0;\n@@ -2487,24 +2489,0 @@\n-    private\n-    @ForceInline\n-    FloatVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<FloatVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<FloatVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, FloatVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":5,"deletions":27,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2597,1 +2597,2 @@\n-            IntVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            IntVector v = broadcast((int) 0).blend(this, m);\n@@ -2612,1 +2613,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2615,1 +2616,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (int) 0;\n@@ -2648,28 +2650,0 @@\n-    private\n-    @ForceInline\n-    IntVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<IntVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                case VECTOR_OP_OR:\n-                case VECTOR_OP_XOR:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_AND:\n-                    return v -> v.broadcast(-1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<IntVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, IntVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -98,0 +98,1 @@\n+    @ForceInline\n@@ -102,0 +103,1 @@\n+    @ForceInline\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LaneType.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2463,1 +2463,2 @@\n-            LongVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            LongVector v = broadcast((long) 0).blend(this, m);\n@@ -2478,1 +2479,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2481,1 +2482,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (long) 0;\n@@ -2514,28 +2516,0 @@\n-    private\n-    @ForceInline\n-    LongVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<LongVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                case VECTOR_OP_OR:\n-                case VECTOR_OP_XOR:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_AND:\n-                    return v -> v.broadcast(-1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<LongVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, LongVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2598,1 +2598,2 @@\n-            ShortVector v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            ShortVector v = broadcast((short) 0).blend(this, m);\n@@ -2613,1 +2614,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -2616,1 +2617,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : (short) 0;\n@@ -2649,28 +2651,0 @@\n-    private\n-    @ForceInline\n-    ShortVector reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<ShortVector> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-                case VECTOR_OP_OR:\n-                case VECTOR_OP_XOR:\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-                case VECTOR_OP_AND:\n-                    return v -> v.broadcast(-1);\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<ShortVector>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, ShortVector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":5,"deletions":31,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -3024,1 +3024,2 @@\n-            $abstractvectortype$ v = reduceIdentityVector(op).blend(this, m);\n+            \/\/ FIXME:  The JIT should handle this.\n+            $abstractvectortype$ v = broadcast(($type$) 0).blend(this, m);\n@@ -3039,1 +3040,1 @@\n-            \/\/ FIXME:  The JIT should handle this, and other scan ops alos.\n+            \/\/ FIXME:  The JIT should handle this.\n@@ -3042,1 +3043,2 @@\n-            return this.lane(thisNZ.firstTrue());\n+            int ft = thisNZ.firstTrue();\n+            return ft < length() ? this.lane(ft) : ($type$) 0;\n@@ -3077,32 +3079,0 @@\n-    private\n-    @ForceInline\n-    $abstractvectortype$ reduceIdentityVector(VectorOperators.Associative op) {\n-        int opc = opCode(op);\n-        UnaryOperator<$abstractvectortype$> fn\n-            = REDUCE_ID_IMPL.find(op, opc, (opc_) -> {\n-                switch (opc_) {\n-                case VECTOR_OP_ADD:\n-#if[BITWISE]\n-                case VECTOR_OP_OR:\n-                case VECTOR_OP_XOR:\n-#end[BITWISE]\n-                    return v -> v.broadcast(0);\n-                case VECTOR_OP_MUL:\n-                    return v -> v.broadcast(1);\n-#if[BITWISE]\n-                case VECTOR_OP_AND:\n-                    return v -> v.broadcast(-1);\n-#end[BITWISE]\n-                case VECTOR_OP_MIN:\n-                    return v -> v.broadcast(MAX_OR_INF);\n-                case VECTOR_OP_MAX:\n-                    return v -> v.broadcast(MIN_OR_INF);\n-                default: return null;\n-                }\n-            });\n-        return fn.apply(this);\n-    }\n-    private static final\n-    ImplCache<Associative,UnaryOperator<$abstractvectortype$>> REDUCE_ID_IMPL\n-        = new ImplCache<>(Associative.class, $Type$Vector.class);\n-\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":5,"deletions":35,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,0 +180,1 @@\n+        PACA,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,5 @@\n+ * @provides java.util.spi.ToolProvider\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"jar\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code jar} tool.\n+ *\n","filename":"src\/jdk.jartool\/share\/classes\/module-info.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.net.URLClassLoader;\n@@ -62,0 +63,1 @@\n+import sun.security.tools.PathList;\n@@ -155,0 +157,1 @@\n+    String pathlist = null;\n@@ -249,1 +252,12 @@\n-                ClassLoader cl = ClassLoader.getSystemClassLoader();\n+                ClassLoader cl;\n+                if (pathlist != null) {\n+                    String path = System.getProperty(\"java.class.path\");\n+                    path = PathList.appendPath(\n+                            path, System.getProperty(\"env.class.path\"));\n+                    path = PathList.appendPath(path, pathlist);\n+\n+                    URL[] urls = PathList.pathToURLs(path);\n+                    cl = new URLClassLoader(urls);\n+                } else {\n+                    cl = ClassLoader.getSystemClassLoader();\n+                }\n@@ -437,0 +451,3 @@\n+            } else if (collator.compare(flags, \"-providerpath\") == 0) {\n+                if (++n == args.length) usageNoArg();\n+                pathlist = args[n];\n@@ -708,0 +725,3 @@\n+        System.out.println(rb.getString\n+                (\".providerPath.option\"));\n+        System.out.println();\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":22,"deletions":2,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,0 +122,2 @@\n+        {\".providerPath.option\",\n+                \"[-providerPath <list>]      provider classpath\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -430,1 +430,1 @@\n-            ee.printStackTrace();\n+            ee.printStackTrace(err);\n@@ -433,1 +433,1 @@\n-            t.printStackTrace();\n+            t.printStackTrace(err);\n@@ -464,1 +464,6 @@\n-                    Files.move(path, Paths.get(fname), StandardCopyOption.REPLACE_EXISTING);\n+                    Path target = Paths.get(fname);\n+                    Path parent = target.getParent();\n+                    if (parent != null) {\n+                        Files.createDirectories(parent);\n+                    }\n+                    Files.move(path, target, StandardCopyOption.REPLACE_EXISTING);\n@@ -1656,1 +1661,1 @@\n-        e.printStackTrace();\n+        e.printStackTrace(err);\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-\\ \\   -c  create new archive\\n\\\n+\\ \\   -c  create new archive (including missing parent directories)\\n\\\n@@ -230,1 +230,3 @@\n-\\  -c, --create               Create the archive\n+\\  -c, --create               Create the archive. When the archive file name specified\\n\\\n+\\                             by -f or --file contains a path, missing parent directories\\n\\\n+\\                             will also be created\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+.PP\n+\\f[CB]jarsigner\\f[R] \\f[CB]\\-version\\f[R]\n@@ -72,0 +74,6 @@\n+.TP\n+.B \\f[CB]\\-version\\f[R]\n+The \\f[CB]\\-version\\f[R] option prints the program version of\n+\\f[CB]jarsigner\\f[R].\n+.RS\n+.RE\n@@ -1082,0 +1090,5 @@\n+.TP\n+.B \\f[CB]\\-version\\f[R]\n+Prints the program version.\n+.RS\n+.RE\n","filename":"src\/jdk.jartool\/share\/man\/jarsigner.1","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -299,2 +299,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n+        HtmlTree ul = HtmlTree.UL(HtmlStyle.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassUseWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,2 +108,1 @@\n-        HtmlTree div = new HtmlTree(TagName.DIV);\n-        div.setStyle(HtmlStyle.header);\n+        HtmlTree div = HtmlTree.DIV(HtmlStyle.header);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,3 +168,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ConstantsSummaryWriterImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,3 +131,1 @@\n-        HtmlTree mainTOC = new HtmlTree(TagName.UL).setStyle(HtmlStyle.helpTOC);\n-\n-\n+        HtmlTree mainTOC = HtmlTree.UL(HtmlStyle.helpTOC);\n@@ -188,1 +186,1 @@\n-        HtmlTree subTOC = new HtmlTree(TagName.UL).setStyle(HtmlStyle.helpSubTOC);\n+        HtmlTree subTOC = HtmlTree.UL(HtmlStyle.helpSubTOC);\n@@ -196,1 +194,1 @@\n-            Content searchExamples = new HtmlTree(TagName.UL).setStyle(HtmlStyle.helpSectionList);\n+            Content searchExamples = HtmlTree.UL(HtmlStyle.helpSectionList);\n@@ -243,1 +241,1 @@\n-        HtmlTree subTOC = new HtmlTree(TagName.UL).setStyle(HtmlStyle.helpSubTOC);\n+        HtmlTree subTOC = HtmlTree.UL(HtmlStyle.helpSubTOC);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HelpWriter.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.time.ZonedDateTime;\n@@ -169,0 +170,5 @@\n+    \/**\n+     * The build date, to be recorded in generated files.\n+     *\/\n+    private ZonedDateTime buildDate;\n+\n@@ -218,0 +224,1 @@\n+\n@@ -226,1 +233,0 @@\n-    public final Date startTime = new Date();\n@@ -262,0 +268,4 @@\n+\n+        ZonedDateTime zdt = options.date();\n+        buildDate = zdt != null ? zdt : ZonedDateTime.now();\n+\n@@ -282,0 +292,7 @@\n+    \/**\n+     * {@return the date to be recorded in generated files}\n+     *\/\n+    public ZonedDateTime getBuildDate() {\n+        return buildDate;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.Comparator;\n@@ -266,1 +267,1 @@\n-            buf.append(htmlstr.substring(prevEnd, match));\n+            buf.append(htmlstr, prevEnd, match);\n@@ -455,1 +456,1 @@\n-        Head head = new Head(path, configuration.getDocletVersion(), configuration.startTime)\n+        Head head = new Head(path, configuration.getDocletVersion(), configuration.getBuildDate())\n@@ -552,2 +553,1 @@\n-        Content li = HtmlTree.LI(mainTreeContent);\n-        return li;\n+        return HtmlTree.LI(mainTreeContent);\n@@ -626,1 +626,1 @@\n-        DocLink targetLink = null;\n+        DocLink targetLink;\n@@ -1534,12 +1534,5 @@\n-                    String quote;\n-                    switch (node.getValueKind()) {\n-                        case DOUBLE:\n-                            quote = \"\\\"\";\n-                            break;\n-                        case SINGLE:\n-                            quote = \"'\";\n-                            break;\n-                        default:\n-                            quote = \"\";\n-                            break;\n-                    }\n+                    String quote = switch (node.getValueKind()) {\n+                        case DOUBLE -> \"\\\"\";\n+                        case SINGLE -> \"'\";\n+                        default -> \"\";\n+                    };\n@@ -1797,3 +1790,3 @@\n-        return new HtmlTree(TagName.DETAILS).addStyle(HtmlStyle.invalidTag)\n-                .add(new HtmlTree(TagName.SUMMARY).add(Text.of(summary)))\n-                .add(new HtmlTree(TagName.PRE).add(detail.get()));\n+        return HtmlTree.DETAILS(HtmlStyle.invalidTag)\n+                .add(HtmlTree.SUMMARY(Text.of(summary)))\n+                .add(HtmlTree.PRE(detail.get()));\n@@ -2229,2 +2222,1 @@\n-                case MODULE:\n-                case PACKAGE:\n+                case MODULE, PACKAGE -> {\n@@ -2235,5 +2227,2 @@\n-                    break;\n-\n-                default:\n-                    name = e.getSimpleName().toString();\n-                    break;\n+                }\n+                default -> name = e.getSimpleName().toString();\n@@ -2383,2 +2372,1 @@\n-                HtmlTree ul = new HtmlTree(TagName.UL);\n-                ul.setStyle(HtmlStyle.previewComment);\n+                HtmlTree ul = HtmlTree.UL(HtmlStyle.previewComment);\n@@ -2448,2 +2436,1 @@\n-        features.stream()\n-                .forEach(c -> {\n+        features.forEach(c -> {\n@@ -2464,1 +2451,1 @@\n-                .sorted((te1, te2) -> te1.getSimpleName().toString().compareTo(te2.getSimpleName().toString()))\n+                .sorted(Comparator.comparing(te -> te.getSimpleName().toString()))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":20,"deletions":33,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        Element target;\n+        Element previewTarget;\n@@ -96,1 +96,1 @@\n-            target = typeElement;\n+            previewTarget = typeElement;\n@@ -100,1 +100,12 @@\n-            target = classLinkInfo.targetMember;\n+            TypeElement enclosing = utils.getEnclosingTypeElement(classLinkInfo.targetMember);\n+            Set<ElementFlag> enclosingFlags = utils.elementFlags(enclosing);\n+            if (flags.contains(ElementFlag.PREVIEW) && enclosingFlags.contains(ElementFlag.PREVIEW)) {\n+                if (enclosing.equals(m_writer.getCurrentPageElement())) {\n+                    \/\/skip the PREVIEW tag:\n+                    flags = EnumSet.copyOf(flags);\n+                    flags.remove(ElementFlag.PREVIEW);\n+                }\n+                previewTarget = enclosing;\n+            } else {\n+                previewTarget = classLinkInfo.targetMember;\n+            }\n@@ -103,1 +114,1 @@\n-            target = null;\n+            previewTarget = null;\n@@ -118,1 +129,1 @@\n-                                    filename.fragment(m_writer.htmlIds.forPreviewSection(target).name()),\n+                                    filename.fragment(m_writer.htmlIds.forPreviewSection(previewTarget).name()),\n@@ -133,1 +144,1 @@\n-                        m_writer.htmlIds.forPreviewSection(target).name(),\n+                        m_writer.htmlIds.forPreviewSection(previewTarget).name(),\n@@ -195,1 +206,1 @@\n-                ((HtmlLinkInfo) linkInfo).getContext(), typeParam).skipPreview(true);\n+                ((HtmlLinkInfo) linkInfo).getContext(), typeParam);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkFactory.java","additions":19,"deletions":8,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -74,3 +74,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n@@ -87,3 +85,1 @@\n-        HtmlTree li = new HtmlTree(TagName.LI);\n-        li.setStyle(HtmlStyle.blockList);\n-        return li;\n+        return new HtmlTree(TagName.LI).setStyle(HtmlStyle.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,3 +63,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n@@ -76,3 +74,1 @@\n-        HtmlTree li = new HtmlTree(TagName.LI);\n-        li.setStyle(HtmlStyle.blockList);\n-        return li;\n+        return new HtmlTree(TagName.LI);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialMethodWriter.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,1 @@\n-        Head head = new Head(path, configuration.getDocletVersion(), configuration.startTime)\n+        Head head = new Head(path, configuration.getDocletVersion(), configuration.getBuildDate())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -295,2 +295,1 @@\n-        HtmlTree div = new HtmlTree(TagName.DIV);\n-        div.setStyle(HtmlStyle.deprecationBlock);\n+        HtmlTree div = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,2 +183,1 @@\n-        HtmlTree div = new HtmlTree(TagName.DIV);\n-        div.setStyle(HtmlStyle.header);\n+        HtmlTree div = HtmlTree.DIV(HtmlStyle.header);\n@@ -225,1 +224,1 @@\n-        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyle.summaryList);\n@@ -802,2 +801,1 @@\n-            HtmlTree deprDiv = new HtmlTree(TagName.DIV);\n-            deprDiv.setStyle(HtmlStyle.deprecationBlock);\n+            HtmlTree deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n@@ -862,2 +860,1 @@\n-            HtmlTree deprDiv = new HtmlTree(TagName.DIV);\n-            deprDiv.setStyle(HtmlStyle.deprecationBlock);\n+            HtmlTree deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import javax.lang.model.element.ElementKind;\n@@ -638,1 +637,1 @@\n-        HtmlTree ulNavSummaryRight = new HtmlTree(TagName.UL).setStyle(HtmlStyle.subNavListSmall);\n+        HtmlTree ulNavSummaryRight = HtmlTree.UL(HtmlStyle.subNavListSmall);\n@@ -644,1 +643,1 @@\n-        HtmlTree subDiv = new HtmlTree(TagName.DIV).setStyle(HtmlStyle.subNav);\n+        HtmlTree subDiv = HtmlTree.DIV(HtmlStyle.subNav);\n@@ -648,1 +647,1 @@\n-        HtmlTree ulNavSummary = new HtmlTree(TagName.UL).setStyle(HtmlStyle.subNavList);\n+        HtmlTree ulNavSummary = HtmlTree.UL(HtmlStyle.subNavList);\n@@ -652,1 +651,1 @@\n-        HtmlTree ulNavDetail = new HtmlTree(TagName.UL).setStyle(HtmlStyle.subNavList);\n+        HtmlTree ulNavDetail = HtmlTree.UL(HtmlStyle.subNavList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,2 +150,1 @@\n-        HtmlTree ul = new HtmlTree (TagName.UL);\n-        ul.setStyle(HtmlStyle.horizontal);\n+        HtmlTree ul = HtmlTree.UL(HtmlStyle.horizontal);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageTreeWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -184,2 +184,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n+        HtmlTree ul = HtmlTree.UL(HtmlStyle.blockList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageUseWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,2 +114,1 @@\n-        HtmlTree div = new HtmlTree(TagName.DIV);\n-        div.setStyle(HtmlStyle.header);\n+        HtmlTree div = HtmlTree.DIV(HtmlStyle.header);\n@@ -215,2 +214,1 @@\n-            HtmlTree deprDiv = new HtmlTree(TagName.DIV);\n-            deprDiv.setStyle(HtmlStyle.deprecationBlock);\n+            HtmlTree deprDiv = HtmlTree.DIV(HtmlStyle.deprecationBlock);\n@@ -231,1 +229,1 @@\n-        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyle.summaryList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n@@ -93,3 +92,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n@@ -130,3 +127,2 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n+\n@@ -223,3 +219,2 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SerializedFormWriterImpl.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -235,1 +235,1 @@\n-        Head head = new Head(path, configuration.getDocletVersion(), configuration.startTime)\n+        Head head = new Head(path, configuration.getDocletVersion(), configuration.getBuildDate())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SourceToHTMLConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n@@ -210,3 +209,1 @@\n-        HtmlTree ul = new HtmlTree(TagName.UL);\n-        ul.setStyle(HtmlStyle.blockList);\n-        return ul;\n+        return HtmlTree.UL(HtmlStyle.blockList);\n@@ -221,1 +218,1 @@\n-        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.summaryList);\n+        return HtmlTree.UL(HtmlStyle.summaryList);\n@@ -241,1 +238,1 @@\n-        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.detailsList);\n+        return HtmlTree.UL(HtmlStyle.detailsList);\n@@ -260,1 +257,1 @@\n-        return new HtmlTree(TagName.UL).setStyle(HtmlStyle.memberList);\n+        return HtmlTree.UL(HtmlStyle.memberList);\n@@ -274,3 +271,1 @@\n-        HtmlTree div = new HtmlTree(TagName.DIV);\n-        div.setStyle(HtmlStyle.inheritedList);\n-        return div;\n+        return HtmlTree.DIV(HtmlStyle.inheritedList);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -389,1 +389,1 @@\n-        HtmlTree table = new HtmlTree(TagName.DIV).setStyle(tableStyle).addStyle(columnStyle);\n+        HtmlTree table = HtmlTree.DIV(tableStyle).addStyle(columnStyle);\n@@ -399,1 +399,1 @@\n-            HtmlTree tablist = new HtmlTree(TagName.DIV).setStyle(tabListStyle)\n+            HtmlTree tablist = HtmlTree.DIV(tabListStyle)\n@@ -484,3 +484,1 @@\n-        return new HtmlTree(TagName.DIV)\n-                .setStyle(HtmlStyle.caption)\n-                .add(HtmlTree.SPAN(title));\n+        return HtmlTree.DIV(HtmlStyle.caption, HtmlTree.SPAN(title));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.Utils.PreviewFlagProvider;\n@@ -355,2 +356,1 @@\n-        HtmlTree seeList = new HtmlTree(TagName.UL)\n-                .setStyle(hasLongLabels ? HtmlStyle.seeListLong : HtmlStyle.seeList);\n+        HtmlTree seeList = HtmlTree.UL(hasLongLabels ? HtmlStyle.seeListLong : HtmlStyle.seeList);\n@@ -439,6 +439,12 @@\n-                    \/\/ If the leading whitespace is not excluded from the link,\n-                    \/\/ browsers might exhibit unwanted behavior. For example, a\n-                    \/\/ browser might display hand-click cursor while user hovers\n-                    \/\/ over that whitespace portion of the line; or use\n-                    \/\/ underline decoration.\n-                    c = new ContentBuilder(whitespace, htmlWriter.linkToContent(element, e, t, strippedLine));\n+                    \/\/disable preview tagging inside the snippets:\n+                    PreviewFlagProvider prevPreviewProvider = utils.setPreviewFlagProvider(el -> false);\n+                    try {\n+                        \/\/ If the leading whitespace is not excluded from the link,\n+                        \/\/ browsers might exhibit unwanted behavior. For example, a\n+                        \/\/ browser might display hand-click cursor while user hovers\n+                        \/\/ over that whitespace portion of the line; or use\n+                        \/\/ underline decoration.\n+                        c = new ContentBuilder(whitespace, htmlWriter.linkToContent(element, e, t, strippedLine));\n+                    } finally {\n+                        utils.setPreviewFlagProvider(prevPreviewProvider);\n+                    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n@@ -38,1 +37,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.Text;\n@@ -138,2 +136,1 @@\n-            HtmlTree ul = new HtmlTree(TagName.UL);\n-            ul.setStyle(HtmlStyle.horizontal);\n+            HtmlTree ul = HtmlTree.UL(HtmlStyle.horizontal);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TreeWriter.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,2 @@\n-import java.text.SimpleDateFormat;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n@@ -36,0 +37,1 @@\n+import java.util.Locale;\n@@ -53,1 +55,1 @@\n-    private final Date generatedDate;\n+    private final ZonedDateTime generatedDate;\n@@ -81,1 +83,1 @@\n-    public Head(DocPath path, Runtime.Version docletVersion, Date generatedDate) {\n+    public Head(DocPath path, Runtime.Version docletVersion, ZonedDateTime generatedDate) {\n@@ -282,2 +284,2 @@\n-            SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n-            tree.add(HtmlTree.META(\"dc.created\", dateFormat.format(generatedDate)));\n+            DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n+            tree.add(HtmlTree.META(\"dc.created\", generatedDate.format(dateFormat)));\n@@ -312,1 +314,2 @@\n-    private Comment getGeneratedBy(boolean timestamp, Date now) {\n+\n+    private Comment getGeneratedBy(boolean timestamp, ZonedDateTime buildDate) {\n@@ -316,1 +319,3 @@\n-            text += \" on \" + now;\n+            DateTimeFormatter fmt =\n+                    DateTimeFormatter.ofPattern(\"EEE MMM dd HH:mm:ss zzz yyyy\").withLocale(Locale.US);\n+            text += \" on \" + buildDate.format(fmt);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -51,0 +51,4 @@\n+ * @apiNote\n+ * The stylized use of {@code editor-fold} comments and line comments (beginning {@code \/\/})\n+ * is to support extracting details of declarations with external tools.  Edit with care!\n+ *\n@@ -55,10 +59,0 @@\n-    \/**\n-     * The class of the {@code div} element containing a snippet element.\n-     *\/\n-    snippetContainer,\n-\n-    \/**\n-     * The class of the {@code a} element to copy snippet content to the clipboard.\n-     *\/\n-    snippetCopy,\n-\n@@ -327,11 +321,0 @@\n-    \/**\n-     * The class for the list containing the {@code @see} tags of an element.\n-     *\/\n-    seeList,\n-\n-    \/**\n-     * The class for the list containing the {@code @see} tags of an element\n-     * when some of the tags have longer labels.\n-     *\/\n-    seeListLong,\n-\n@@ -394,0 +377,11 @@\n+    \/**\n+     * The class for the list containing the {@code @see} tags of an element.\n+     *\/\n+    seeList,\n+\n+    \/**\n+     * The class for the list containing the {@code @see} tags of an element\n+     * when some of the tags have longer labels.\n+     *\/\n+    seeListLong,\n+\n@@ -847,0 +841,38 @@\n+    \/\/<editor-fold desc=\"snippets\">\n+    \/\/\n+    \/\/ The following constants are used for the contents of snippets.\n+    \/\/ In addition, the translation of a snippet may use the class\n+    \/\/ {@code language-LANG} where LANG is either specified explicitly\n+    \/\/ by the \"lang\" attribute in a snippet tag, or can be inferred\n+    \/\/ from the kind of an external snippet.\n+\n+    \/**\n+     * The class of the {@code pre} element presenting a snippet.\n+     *\/\n+    snippet,\n+\n+    \/**\n+     * The class of the {@code div} element containing a snippet element.\n+     *\/\n+    snippetContainer,\n+\n+    \/**\n+     * The class of the UI element to copy snippet content to the clipboard.\n+     *\/\n+    snippetCopy,\n+\n+    \/**\n+     * The class of text highlighted with the type {@code bold}.\n+     *\/\n+    bold,\n+\n+    \/**\n+     * The class of text highlighted with the type {@code italic}.\n+     *\/\n+    italic,\n+\n+    \/**\n+     * The class of text highlighted with the type {@code highlighted}.\n+     *\/\n+    highlighted,\n+\n@@ -911,1 +943,2 @@\n-     * The class of an element that acts as a notification for an invalid tag.\n+     * The class of an element that acts as a notification for an invalid tag\n+     * or other invalid items.\n@@ -926,1 +959,1 @@\n-     * The class for a {@code dl} element containing serial UID information in\n+     * The class of a {@code dl} element containing serial UID information in\n@@ -967,5 +1000,0 @@\n-    \/**\n-     * The class of the {@code pre} element presenting a snippet.\n-     *\/\n-    snippet,\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlStyle.java","additions":56,"deletions":28,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.net.URI;\n@@ -33,0 +34,1 @@\n+import java.util.Collection;\n@@ -38,0 +40,1 @@\n+import java.util.function.Function;\n@@ -225,0 +228,14 @@\n+    \/**\n+     * Adds each of a collection of items, using a map function to create the content for each item.\n+     *\n+     * @param items  the items\n+     * @param mapper the map function to generate the content for each item\n+     *\n+     * @return this object\n+     *\/\n+    @Override\n+    public <T> HtmlTree addAll(Collection<T> items, Function<T, Content> mapper) {\n+        items.forEach(item -> add(mapper.apply(item)));\n+        return this;\n+    }\n+\n@@ -304,0 +321,1 @@\n+     * The {@code ref} argument will be URL-encoded for use as the attribute value.\n@@ -315,0 +333,16 @@\n+    \/**\n+     * Creates an HTML {@code A} element.\n+     * The {@code ref} argument is assumed to be already suitably encoded,\n+     * and will <i>not<\/i> be additionally URL-encoded, but will be\n+     * {@link URI#toASCIIString() converted} to ASCII for use as the attribute value.\n+     *\n+     * @param ref the value for the {@code href} attribute}\n+     * @param body the content for element\n+     * @return the element\n+     *\/\n+    public static HtmlTree A(URI ref, Content body) {\n+        return new HtmlTree(TagName.A)\n+                .put(HtmlAttr.HREF, ref.toASCIIString())\n+                .add(body);\n+    }\n+\n@@ -348,0 +382,10 @@\n+    \/**\n+     * Creates an HTML {@code DETAILS} element.\n+     *\n+     * @return the element\n+     *\/\n+    public static HtmlTree DETAILS(HtmlStyle style) {\n+        return new HtmlTree(TagName.DETAILS)\n+                .setStyle(style);\n+    }\n+\n@@ -498,6 +542,4 @@\n-        switch (headingTag) {\n-            case H1: case H2: case H3: case H4: case H5: case H6:\n-                return headingTag;\n-            default:\n-                throw new IllegalArgumentException(headingTag.toString());\n-        }\n+        return switch (headingTag) {\n+            case H1, H2, H3, H4, H5, H6 -> headingTag;\n+            default -> throw new IllegalArgumentException(headingTag.toString());\n+        };\n@@ -685,0 +727,10 @@\n+    \/**\n+     * Creates an HTML {@code PRE} element with some content.\n+     *\n+     * @param body  the content\n+     * @return the element\n+     *\/\n+    public static HtmlTree PRE(Content body) {\n+        return new HtmlTree(TagName.PRE).add(body);\n+    }\n+\n@@ -785,0 +837,11 @@\n+    \/**\n+     * Creates an HTML {@code SUMMARY} element with the given content.\n+     *\n+     * @param body the content\n+     * @return the element\n+     *\/\n+    public static HtmlTree SUMMARY(Content body) {\n+        return new HtmlTree(TagName.SUMMARY)\n+                .add(body);\n+    }\n+\n@@ -848,0 +911,11 @@\n+    \/**\n+     * Creates an HTML {@code UL} element with the given style.\n+     *\n+     * @param style the style\n+     * @return the element\n+     *\/\n+    public static HtmlTree UL(HtmlStyle style) {\n+        return new HtmlTree(TagName.UL)\n+                .setStyle(style);\n+    }\n+\n@@ -866,0 +940,15 @@\n+    \/**\n+     * Creates an HTML {@code UL} element with the given style and content generated\n+     * from a collection of items..\n+     *\n+     * @param style the style\n+     * @param items the items to be added to the list\n+     * @param mapper a mapper to create the content for each item\n+     * @return the element\n+     *\/\n+    public static <T> HtmlTree UL(HtmlStyle style, Collection<T> items, Function<T,Content> mapper) {\n+        return new HtmlTree(TagName.UL)\n+                .setStyle(style)\n+                .addAll(items, mapper);\n+    }\n+\n@@ -908,24 +997,23 @@\n-        switch (tagName) {\n-            case A:\n-                return (hasAttr(HtmlAttr.ID) || (hasAttr(HtmlAttr.HREF) && hasContent()));\n-            case BR:\n-                return (!hasContent() && (!hasAttrs() || hasAttr(HtmlAttr.CLEAR)));\n-            case HR:\n-            case INPUT:\n-                return (!hasContent());\n-            case IMG:\n-                return (hasAttr(HtmlAttr.SRC) && hasAttr(HtmlAttr.ALT) && !hasContent());\n-            case LINK:\n-                return (hasAttr(HtmlAttr.HREF) && !hasContent());\n-            case META:\n-                return (hasAttr(HtmlAttr.CONTENT) && !hasContent());\n-            case SCRIPT:\n-                return ((hasAttr(HtmlAttr.TYPE) && hasAttr(HtmlAttr.SRC) && !hasContent()) ||\n-                        (hasAttr(HtmlAttr.TYPE) && hasContent()));\n-            case SPAN:\n-                return (hasAttr(HtmlAttr.ID) || hasContent());\n-            case WBR:\n-                return (!hasContent());\n-            default :\n-                return hasContent();\n-        }\n+        return switch (tagName) {\n+            case A ->\n+                    hasAttr(HtmlAttr.ID) || (hasAttr(HtmlAttr.HREF) && hasContent());\n+            case BR ->\n+                    !hasContent() && (!hasAttrs() || hasAttr(HtmlAttr.CLEAR));\n+            case HR, INPUT ->\n+                    !hasContent();\n+            case IMG ->\n+                    hasAttr(HtmlAttr.SRC) && hasAttr(HtmlAttr.ALT) && !hasContent();\n+            case LINK ->\n+                    hasAttr(HtmlAttr.HREF) && !hasContent();\n+            case META ->\n+                    hasAttr(HtmlAttr.CONTENT) && !hasContent();\n+            case SCRIPT ->\n+                    (hasAttr(HtmlAttr.TYPE) && hasAttr(HtmlAttr.SRC) && !hasContent())\n+                            || (hasAttr(HtmlAttr.TYPE) && hasContent());\n+            case SPAN ->\n+                    hasAttr(HtmlAttr.ID) || hasContent();\n+            case WBR ->\n+                    !hasContent();\n+            default ->\n+                    hasContent();\n+        };\n@@ -942,8 +1030,4 @@\n-        switch (tagName) {\n-            case A: case BUTTON: case BR: case CODE: case EM: case I: case IMG:\n-            case LABEL: case SMALL: case SPAN: case STRONG: case SUB: case SUP:\n-            case WBR:\n-                return true;\n-            default:\n-                return false;\n-        }\n+        return switch (tagName) {\n+            case A, BUTTON, BR, CODE, EM, I, IMG, LABEL, SMALL, SPAN, STRONG, SUB, SUP, WBR -> true;\n+            default -> false;\n+        };\n@@ -960,6 +1044,4 @@\n-        switch (tagName) {\n-            case BR: case HR: case IMG: case INPUT: case LINK: case META: case WBR:\n-                return true;\n-            default:\n-                return false;\n-        }\n+        return switch (tagName) {\n+            case BR, HR, IMG, INPUT, LINK, META, WBR -> true;\n+            default -> false;\n+        };\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/HtmlTree.java","additions":127,"deletions":45,"binary":false,"changes":172,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,0 +172,6 @@\n+# 0: a date\n+doclet.Option_date_out_of_range=value for ''--date'' out of range: {0}\n+\n+# 0: a date\n+doclet.Option_date_not_valid=value for ''--date'' not valid: {0}\n+\n@@ -423,0 +429,6 @@\n+doclet.usage.date.parameters=\\\n+    <date-and-time>\n+doclet.usage.date.description=\\\n+    Specifies the value to be used to timestamp the generated\\n\\\n+    pages, in ISO 8601 format\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,7 @@\n+import java.time.Instant;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+import java.time.temporal.ChronoUnit;\n+import java.time.temporal.TemporalUnit;\n@@ -35,0 +42,1 @@\n+import java.util.Calendar;\n@@ -85,0 +93,6 @@\n+    \/**\n+     * Argument for command-line option {@code --date}.\n+     * {@code null} if option not given.\n+     *\/\n+    private ZonedDateTime date;\n+\n@@ -341,0 +355,27 @@\n+                new XOption(resources, \"--date\", 1) {\n+                    \/\/ Valid --date range: within ten years of now\n+                    private static final ZonedDateTime now = ZonedDateTime.now();\n+                    static final ZonedDateTime DATE_MIN = now.minusYears(10);\n+                    static final ZonedDateTime DATE_MAX = now.plusYears(10);\n+\n+                    @Override\n+                    public boolean process(String opt,  List<String> args) {\n+                        if (noTimestamp) {\n+                            messages.error(\"doclet.Option_conflict\", \"--date\", \"-notimestamp\");\n+                            return false;\n+                        }\n+                        String arg = args.get(0);\n+                        try {\n+                            date = ZonedDateTime.parse(arg, DateTimeFormatter.ISO_ZONED_DATE_TIME);\n+                            if (date.isBefore(DATE_MIN) || date.isAfter(DATE_MAX)) {\n+                                messages.error(\"doclet.Option_date_out_of_range\", arg);\n+                                return false;\n+                            }\n+                            return true;\n+                        } catch (DateTimeParseException x) {\n+                            messages.error(\"doclet.Option_date_not_valid\", arg);\n+                            return false;\n+                        }\n+                    }\n+                },\n+\n@@ -474,0 +515,4 @@\n+                        if (date != null) {\n+                            messages.error(\"doclet.Option_conflict\", \"--date\", \"-notimestamp\");\n+                            return false;\n+                        }\n@@ -742,0 +787,7 @@\n+    \/**\n+     * Argument for command-line option {@code --date}.\n+     *\/\n+    public ZonedDateTime date() {\n+        return date;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":53,"deletions":1,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import java.util.Collection;\n+import java.util.function.Function;\n@@ -92,0 +94,19 @@\n+    \/**\n+     * Adds content to the existing content, generated from a collection of items\n+     * This is an optional operation.\n+     *\n+     * @implSpec This implementation delegates to {@link #add(Content)}.\n+     *\n+     * @param items  the items to be added\n+     * @param mapper the function to create content for each item\n+     *\n+     * @return this object\n+     * @throws UnsupportedOperationException if this operation is not supported by\n+     *                                       a particular implementation\n+     * @throws IllegalArgumentException      if the content is not suitable to be added\n+     *\/\n+    public <T> Content addAll(Collection<T> items, Function<T, Content> mapper) {\n+        items.forEach(item -> add(mapper.apply(item)));\n+        return this;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Content.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -168,13 +168,1 @@\n-        Set<String> alreadyDocumented = new HashSet<>();\n-        if (!paramTags.isEmpty()) {\n-            result.add(\n-                processParamTags(holder, kind, paramTags,\n-                getRankMap(writer.configuration().utils, formalParameters), writer, alreadyDocumented)\n-            );\n-        }\n-        if (alreadyDocumented.size() != formalParameters.size()) {\n-            \/\/Some parameters are missing corresponding @param tags.\n-            \/\/Try to inherit them.\n-            result.add(getInheritedTagletOutput(kind, holder,\n-                writer, formalParameters, alreadyDocumented));\n-        }\n+        result.add(processParamTags(holder, kind, paramTags, formalParameters, writer));\n@@ -185,2 +173,1 @@\n-     * Loop through each individual parameter, despite not having a\n-     * corresponding param tag, try to inherit it.\n+     * Try to get the inherited taglet documentation for a specific parameter.\n@@ -189,2 +176,2 @@\n-            TagletWriter writer, List<? extends Element> formalParameters,\n-            Set<String> alreadyDocumented) {\n+                                             TagletWriter writer, Element param, int rank,\n+                                             boolean isFirst) {\n@@ -193,23 +180,11 @@\n-        if ((!alreadyDocumented.contains(null)) && utils.isExecutableElement(holder)) {\n-            for (int i = 0; i < formalParameters.size(); i++) {\n-                if (alreadyDocumented.contains(String.valueOf(i))) {\n-                    continue;\n-                }\n-                \/\/ This parameter does not have any @param documentation.\n-                \/\/ Try to inherit it.\n-                Input input = new DocFinder.Input(writer.configuration().utils, holder, this,\n-                        Integer.toString(i), kind == ParamKind.TYPE_PARAMETER);\n-                DocFinder.Output inheritedDoc = DocFinder.search(writer.configuration(), input);\n-                if (inheritedDoc.inlineTags != null && !inheritedDoc.inlineTags.isEmpty()) {\n-                    Element e = formalParameters.get(i);\n-                    String lname = kind != ParamKind.TYPE_PARAMETER\n-                            ? utils.getSimpleName(e)\n-                            : utils.getTypeName(e.asType(), false);\n-                    Content content = processParamTag(inheritedDoc.holder, kind, writer,\n-                            (ParamTree) inheritedDoc.holderTag,\n-                            lname,\n-                            alreadyDocumented.isEmpty());\n-                    result.add(content);\n-                }\n-                alreadyDocumented.add(String.valueOf(i));\n-            }\n+        Input input = new DocFinder.Input(writer.configuration().utils, holder, this,\n+                Integer.toString(rank), kind == ParamKind.TYPE_PARAMETER);\n+        DocFinder.Output inheritedDoc = DocFinder.search(writer.configuration(), input);\n+        if (inheritedDoc.inlineTags != null && !inheritedDoc.inlineTags.isEmpty()) {\n+            String lname = kind != ParamKind.TYPE_PARAMETER\n+                    ? utils.getSimpleName(param)\n+                    : utils.getTypeName(param.asType(), false);\n+            Content content = processParamTag(inheritedDoc.holder, kind, writer,\n+                    (ParamTree) inheritedDoc.holderTag,\n+                    lname, isFirst);\n+            result.add(content);\n@@ -228,8 +203,0 @@\n-     * @param alreadyDocumented the set of exceptions that have already\n-     *        been documented.\n-     * @param rankMap a {@link java.util.Map} which holds ordering\n-     *                    information about the parameters.\n-     * @param rankMap a {@link java.util.Map} which holds a mapping\n-                of a rank of a parameter to its name.  This is\n-                used to ensure that the right name is used\n-                when parameter documentation is inherited.\n@@ -238,3 +205,3 @@\n-    private Content processParamTags(Element e, ParamKind kind,\n-            List<? extends ParamTree> paramTags, Map<String, String> rankMap, TagletWriter writer,\n-            Set<String> alreadyDocumented) {\n+    private Content processParamTags(Element e, ParamKind kind, List<? extends ParamTree> paramTags,\n+                                     List<? extends Element> formalParameters, TagletWriter writer) {\n+        Map<String, ParamTree> documented = new HashMap<>();\n@@ -242,1 +209,1 @@\n-        Content result = writer.getOutputInstance();\n+        CommentHelper ch = writer.configuration().utils.getCommentHelper(e);\n@@ -244,1 +211,1 @@\n-            CommentHelper ch = writer.configuration().utils.getCommentHelper(e);\n+            Map<String,String> rankMap = getRankMap(writer.configuration().utils, formalParameters);\n@@ -253,1 +220,0 @@\n-                        default -> throw new IllegalArgumentException(kind.toString());\n@@ -258,8 +224,11 @@\n-                if (rank != null && alreadyDocumented.contains(rank)) {\n-                    String key = switch (kind) {\n-                        case PARAMETER        -> \"doclet.Parameters_dup_warn\";\n-                        case TYPE_PARAMETER   -> \"doclet.TypeParameters_dup_warn\";\n-                        case RECORD_COMPONENT -> \"doclet.RecordComponents_dup_warn\";\n-                        default -> throw new IllegalArgumentException(kind.toString());\n-                    };\n-                    messages.warning(ch.getDocTreePath(dt), key, paramName);\n+                if (rank != null) {\n+                    if (documented.containsKey(rank)) {\n+                        String key = switch (kind) {\n+                            case PARAMETER -> \"doclet.Parameters_dup_warn\";\n+                            case TYPE_PARAMETER -> \"doclet.TypeParameters_dup_warn\";\n+                            case RECORD_COMPONENT -> \"doclet.RecordComponents_dup_warn\";\n+                        };\n+                        messages.warning(ch.getDocTreePath(dt), key, paramName);\n+                    } else {\n+                        documented.put(rank, dt);\n+                    }\n@@ -267,0 +236,8 @@\n+            }\n+        }\n+        \/\/ Document declared parameters for which taglet documentation is available\n+        \/\/ (either directly or inherited) in order of their declaration.\n+        Content result = writer.getOutputInstance();\n+        for (int i = 0; i < formalParameters.size(); i++) {\n+            ParamTree dt = documented.get(String.valueOf(i));\n+            if (dt != null) {\n@@ -268,2 +245,14 @@\n-                        name, alreadyDocumented.isEmpty()));\n-                alreadyDocumented.add(rank);\n+                        ch.getParameterName(dt), result.isEmpty()));\n+            } else if (writer.configuration().utils.isExecutableElement(e)) {\n+                result.add(getInheritedTagletOutput(kind, e, writer,\n+                        formalParameters.get(i), i, result.isEmpty()));\n+            }\n+        }\n+        if (paramTags.size() > documented.size()) {\n+            \/\/ Generate documentation for remaining taglets that do not match a declared parameter.\n+            \/\/ These are erroneous but we generate them anyway.\n+            for (ParamTree dt : paramTags) {\n+                if (!documented.containsValue(dt)) {\n+                    result.add(processParamTag(e, kind, writer, dt,\n+                            ch.getParameterName(dt), result.isEmpty()));\n+                }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":53,"deletions":64,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -3056,3 +3056,5 @@\n-        Element enclosing = el.getEnclosingElement();\n-        if (enclosing != null && (enclosing.getKind().isClass() || enclosing.getKind().isInterface())) {\n-            parentPreviewAPI = configuration.workArounds.isPreviewAPI(enclosing);\n+        if (!isClassOrInterface(el)) {\n+            Element enclosing = el.getEnclosingElement();\n+            if (isClassOrInterface(enclosing)) {\n+                parentPreviewAPI = configuration.workArounds.isPreviewAPI(enclosing);\n+            }\n@@ -3085,1 +3087,0 @@\n-        PreviewSummary previewAPIs = declaredUsingPreviewAPIs(el);\n@@ -3091,6 +3092,1 @@\n-        if ((!previewLanguageFeaturesUsed(el).isEmpty() ||\n-             configuration.workArounds.isPreviewAPI(el) ||\n-             !previewAPIs.previewAPI.isEmpty() ||\n-             !previewAPIs.reflectivePreviewAPI.isEmpty() ||\n-             !previewAPIs.declaredUsingPreviewFeature.isEmpty()) &&\n-            !hasNoProviewAnnotation(el)) {\n+        if (previewFlagProvider.isPreview(el)) {\n@@ -3112,1 +3108,5 @@\n-    private boolean hasNoProviewAnnotation(Element el) {\n+    private boolean isClassOrInterface(Element el) {\n+        return el != null && (el.getKind().isClass() || el.getKind().isInterface());\n+    }\n+\n+    private boolean hasNoPreviewAnnotation(Element el) {\n@@ -3117,0 +3117,29 @@\n+\n+    private PreviewFlagProvider previewFlagProvider = new PreviewFlagProvider() {\n+        @Override\n+        public boolean isPreview(Element el) {\n+            PreviewSummary previewAPIs = declaredUsingPreviewAPIs(el);\n+            Element enclosing = el.getEnclosingElement();\n+\n+            return    (   !previewLanguageFeaturesUsed(el).isEmpty()\n+                       || configuration.workArounds.isPreviewAPI(el)\n+                       || (   !isClassOrInterface(el) && isClassOrInterface(enclosing)\n+                           && configuration.workArounds.isPreviewAPI(enclosing))\n+                       || !previewAPIs.previewAPI.isEmpty()\n+                       || !previewAPIs.reflectivePreviewAPI.isEmpty()\n+                       || !previewAPIs.declaredUsingPreviewFeature.isEmpty())\n+                   && !hasNoPreviewAnnotation(el);\n+        }\n+    };\n+\n+    public PreviewFlagProvider setPreviewFlagProvider(PreviewFlagProvider provider) {\n+        Objects.requireNonNull(provider);\n+        PreviewFlagProvider old = previewFlagProvider;\n+        previewFlagProvider = provider;\n+        return old;\n+    }\n+\n+    public interface PreviewFlagProvider {\n+        public boolean isPreview(Element el);\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":41,"deletions":12,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import javax.lang.model.SourceVersion;\n@@ -955,2 +956,3 @@\n-        if (e == null)\n-            env.messages.error(REFERENCE, tree, \"dc.ref.not.found\");\n+        if (e == null) {\n+            reportBadReference(tree);\n+        }\n@@ -960,0 +962,19 @@\n+    private void reportBadReference(ReferenceTree tree) {\n+        if (!env.strictReferenceChecks) {\n+            String refSig = tree.getSignature();\n+            int sep = refSig.indexOf(\"\/\");\n+            if (sep > 0) {\n+                String moduleName = refSig.substring(0, sep);\n+                if (SourceVersion.isName(moduleName)) {\n+                    Element m = env.elements.getModuleElement(moduleName);\n+                    if (m == null) {\n+                        env.messages.warning(REFERENCE, tree, \"dc.ref.in.missing.module\", moduleName);\n+                        return;\n+                    }\n+                }\n+            }\n+        }\n+\n+        env.messages.error(REFERENCE, tree, \"dc.ref.not.found\");\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":23,"deletions":2,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -277,0 +277,8 @@\n+    \/**\n+     * Initialize DocLint for use with a {@code JavacTask}.\n+     * {@link Env#strictReferenceChecks Strict reference checks} are <em>not<\/em> enabled by default.\n+     *\n+     * @param task            the task\n+     * @param args            arguments to configure DocLint\n+     * @param addTaskListener whether or not to register a {@code TaskListener} to invoke DocLint\n+     *\/\n@@ -322,0 +330,9 @@\n+    \/**\n+     * Initialize DocLint with the given utility objects and arguments.\n+     * {@link Env#strictReferenceChecks Strict reference checks} <em>are<\/em> enabled by default.\n+     *\n+     * @param trees    the {@code DocTrees} utility class\n+     * @param elements the {@code Elements} utility class\n+     * @param types    the {@code Types} utility class\n+     * @param args     arguments to configure DocLint\n+     *\/\n@@ -325,0 +342,1 @@\n+        env.strictReferenceChecks = true;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/DocLint.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -111,0 +111,14 @@\n+    \/**\n+     * How to handle bad references.\n+     *\n+     * If {@code false}, a reference into a module that is not\n+     * in the module graph will just be reported as a warning.\n+     * All other bad references will be reported as errors.\n+     * This is the desired behavior for javac.\n+     *\n+     * If {@code true}, all bad references will be reported as\n+     * errors. This is the desired behavior for javadoc.\n+     *\n+     *\/\n+    boolean strictReferenceChecks = false;\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Env.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+dc.ref.in.missing.module = module for reference not found: {0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/resources\/doclint.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- *  The implementation of the javadoc tool, and associated doclets.\n+ *  The implementation of the <em>javadoc<\/em> tool and associated doclets.\n@@ -29,1 +29,1 @@\n- *  <p>Internally, javadoc is composed of two primary parts:\n+ *  <p>Internally, <em>javadoc<\/em> is composed of two primary parts:\n@@ -33,2 +33,2 @@\n- *  The tool provides a common infrastructure for command-line processing,\n- *  and for reading the documentation comments in Java source files,\n+ *  <p>The tool provides a common infrastructure for command-line processing,\n+ *  and for reading the declarations and documentation comments in Java source files,\n@@ -36,1 +36,122 @@\n- *  how to process the documentation comments.\n+ *  how to process the declarations and their documentation comments.\n+ *\n+ * <p>The following provides a top-down description of the overall <em>javadoc<\/em>\n+ * software stack.\n+ *\n+ * <dl>\n+ *   <dt>Doclets\n+ *   <dd>\n+ *      <dl>\n+ *        <dt id=\"std-doclet\">The Standard Doclet\n+ *        <dd><p>\n+ *          The {@link jdk.javadoc.doclet.StandardDoclet} is a thin public wrapper\n+ *          around the internal HTML doclet.\n+ *\n+ *        <dt id=\"html-doclet\">The HTML Doclet\n+ *        <dd><p>\n+ *          The {@link jdk.javadoc.internal.doclets.formats.html.HtmlDoclet} class\n+ *          and other classes in the\n+ *          {@link jdk.javadoc.internal.doclets.formats.html formats.html} package\n+ *          customize the abstract pages generated by the toolkit layer to generate\n+ *          HTML pages.  Some pages are specific to the HTML output format,\n+ *          and do not have an abstract builder in the toolkit layer.\n+ *\n+ *          <p>Individual pages of output are generated by page-specific subtypes of\n+ *          {@link jdk.javadoc.internal.doclets.formats.html.HtmlDocletWriter}.\n+ *\n+ *          <p>The {@link jdk.javadoc.internal.doclets.formats.html.HtmlConfiguration} class\n+ *          provides configuration information that is relevant to all the generated pages.\n+ *          The class extends the {@link jdk.javadoc.internal.doclets.toolkit.BaseConfiguration}\n+ *          class provided by the toolkit layer.\n+ *\n+ *          <p>The classes in the {@code formats.html} package use an internal\n+ *          library in the\n+ *          {@link jdk.javadoc.internal.doclets.formats.html.markup formats.html.markup} package,\n+ *          to create trees (or acyclic graphs) of\n+ *          {@linkplain jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree HTML tree nodes}.\n+ *          Apart from using a common format-neutral supertype,\n+ *          {@link jdk.javadoc.internal.doclets.toolkit.Content}, the {@code markup} library\n+ *          is mostly independent of the rest of the javadoc software stack.\n+ *\n+ *        <dt id=\"toolkit\">Toolkit\n+ *        <dd><p>\n+ *          The {@link jdk.javadoc.internal.doclets.toolkit toolkit} package provides\n+ *          support for a format-neutral\n+ *          {@linkplain jdk.javadoc.internal.doclets.toolkit.AbstractDoclet abstract doclet},\n+ *          which uses\n+ *          {@linkplain jdk.javadoc.internal.doclets.toolkit.builders.AbstractBuilder builders}\n+ *          to generate pages of abstract\n+ *          {@linkplain jdk.javadoc.internal.doclets.toolkit.Content content}.\n+ *\n+ *          <p>The format-specific content for each page is provided by implementations\n+ *          of various <em>writer<\/em> interfaces, created by a format-specific\n+ *          {@linkplain jdk.javadoc.internal.doclets.toolkit.WriterFactory writer factory}.\n+ *\n+ *          <p>The {@link jdk.javadoc.internal.doclets.toolkit.BaseConfiguration} provides\n+ *          configuration information that is relevant to all the generated pages.\n+ *          Some of the information is provided by abstract methods which are implemented\n+ *          in format-specific subtypes of the class.\n+ *\n+ *          <p>The toolkit layer also provides\n+ *          {@linkplain jdk.javadoc.internal.doclets.toolkit.util utility classes}\n+ *          used by this layer and by format-specific layers.\n+ *\n+ *          <p id=\"workarounds\">Generally, it is intended that doclets should use the\n+ *          {@link javax.lang.model Language Model API} to navigate the structure of a Java program,\n+ *          without needing to access any internal details of the underlying <em>javac<\/em> implementation.\n+ *          However, there are still some shortcomings of the Language Model API,\n+ *          and so it is still necessary to provide limited access to some of those internal details.\n+ *          Although not enforceable by the module system, by design the access to <em>javac<\/em>\n+ *          internal details by doclets based on {@code AbstractDoclet} is restricted to the aptly-named\n+ *          {@link jdk.javadoc.internal.doclets.toolkit.WorkArounds} class.\n+ *\n+ *        <dt>Other Doclets\n+ *        <dd><p>\n+ *          Doclets are obviously not required to use\n+ *          {@link jdk.javadoc.internal.doclets.toolkit.AbstractDoclet} and other classes in\n+ *          the toolkit layer. In times past, it was common to write doclets to analyze\n+ *          code using the then-current API as an early version of a Java language model.\n+ *          That old API has been replaced by the {@link javax.lang.model Language Model API},\n+ *          and tools that wish to use that API to analyze Java programs have a choice of\n+ *          how to invoke it, using the <em>javac<\/em> support for\n+ *          {@linkplain javax.annotation.processing annotation processing},\n+ *          or {@linkplain com.sun.source.util.Plugin plugins}, as well as doclets.\n+ *          Which is best for any application will depend of the circumstances, but\n+ *          if a tool does not need access to the documentation comments in a program,\n+ *          it is possible that one of the other invocation mechanisms will be more convenient.\n+ *\n+ *      <\/dl>\n+ *\n+ *   <dt>The Doclet Interface\n+ *   <dd><p>\n+ *     The {@linkplain jdk.javadoc.doclet Doclet API} is the interface layer between\n+ *     the <em>javadoc<\/em> tool and the code to process the elements specified to the tool.\n+ *\n+ *     <p>Above this layer, in any doclet, the code is expected to use the\n+ *     {@linkplain javax.lang.model Language Model API} to navigate around the specified\n+ *     elements, and\/or the {@linkplain com.sun.source.doctree DocTree API} to examine\n+ *     the corresponding documentation comments.\n+ *\n+ *   <dt>The <em>javadoc<\/em> Tool\n+ *   <dd><p>\n+ *       After reading the command-line options, the tool uses a modified <em>javac<\/em>\n+ *       front end to read the necessary files and thus instantiate the\n+ *       {@linkplain javax.lang.model.element.Element elements} to be made available to\n+ *       the doclet that will be used to process them.\n+ *\n+ *       The tool uses an internal feature of the <em>javac<\/em> architecture, which\n+ *       allows various components to be replaced by subtypes with modified behavior.\n+ *       This is done by pre-registering the desired components in the <em>javac<\/em>\n+ *       {@code Context}.\n+ *       The tool uses this mechanism to do the following:\n+ *       <ul>\n+ *         <li>although source files are parsed in their entirety, the\n+ *           content of method bodies is quickly discarded as unnecessary;\n+ *         <li>the class reader is updated to handle {@code package.html}\n+ *           files in any package directories that are read; and\n+ *         <li>the compilation pipeline for each source file is terminated\n+ *           after the <em>parse<\/em> and <em>enter<\/em> phases, meaning that\n+ *           the files are processed enough to instantiate the elements to\n+ *           be made available to the doclet, but no more.\n+ *       <\/ul>\n+ * <\/dl>\n@@ -43,0 +164,4 @@\n+ *\n+ * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/javadoc-architecture.html\">JavaDoc Architecture<\/a>\n+ * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/using-new-doclet.html\">Using the new Doclet API<\/a>\n+ * @see <a href=\"https:\/\/openjdk.java.net\/groups\/compiler\/processing-code.html\">Processing Code<\/a>\n@@ -44,1 +169,1 @@\n-package jdk.javadoc.internal;\n+package jdk.javadoc.internal;\n\\ No newline at end of file\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/package-info.java","additions":132,"deletions":7,"binary":false,"changes":139,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,3 @@\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"javadoc\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code javadoc} tool.\n","filename":"src\/jdk.javadoc\/share\/classes\/module-info.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -805,1 +805,2 @@\n-Dump a static or dynamic shared archive including all shareable classes.\n+Dumps a static or dynamic shared archive that includes all currently\n+loaded classes.\n@@ -814,2 +815,2 @@\n-\\f[CB]subcmd\\f[R]: \\f[CB]static_dump\\f[R] | \\f[CB]dynamic_dump\\f[R] (STRING,\n-no default value)\n+\\f[CB]subcmd\\f[R]: must be either \\f[CB]static_dump\\f[R] or\n+\\f[CB]dynamic_dump\\f[R] (STRING, no default value)\n@@ -819,0 +820,11 @@\n+.PP\n+If \\f[CB]filename\\f[R] is not specified, a default file name is chosen\n+using the pid of the target JVM process.\n+For example, java_pid1234_static.jsa, java_pid5678_dynamic.jsa, etc.\n+.PP\n+If \\f[CB]filename\\f[R] is not specified as an absolute path, the archive\n+file is created in a directory relative to the current directory of the\n+target JVM process.\n+.PP\n+If \\f[CB]dynamic_dump\\f[R] is specified, the target JVM must be started\n+with the JVM option \\f[CB]\\-XX:+RecordDynamicDumpInfo\\f[R].\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-                   .sorted()\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/ModuleDotGraph.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,0 +244,1 @@\n+err.invalid.filters=Only one of --package (-p), --regex (-e), --require option can be specified\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/resources\/jdeps.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -52,0 +52,4 @@\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"javap\")}\n+ *     or {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"jdeps\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code javap} or {@code jdeps} tool.\n","filename":"src\/jdk.jdeps\/share\/classes\/module-info.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -416,1 +416,1 @@\n-     * or superinterfaces that that have been hidden or overridden\n+     * or superinterfaces that have been hidden or overridden\n@@ -422,1 +422,1 @@\n-     * See JLS section 8.4.6 for details.\n+     * See JLS section 8.4.8 for details.\n@@ -457,1 +457,1 @@\n-     * See JLS (8.4.6) for details.\n+     * See JLS (8.4.8) for details.\n@@ -481,1 +481,1 @@\n-     * in the JLS (8.4.6) to determine visibility.\n+     * in the JLS (8.4.8) to determine visibility.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ReferenceType.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,8 @@\n+\/* Returns true if this is a strong reference, meaning that either or both of\n+   isPinAll and isCommonPin are true. *\/\n+static jboolean\n+isStrong(RefNode* node)\n+{\n+    return node->isPinAll || node->isCommonPin;\n+}\n+\n@@ -92,1 +100,1 @@\n-    jboolean   pin = gdata->pinAllCount != 0;\n+    jboolean   pinAll = gdata->pinAllCount != 0;\n@@ -100,1 +108,1 @@\n-    if (pin) {\n+    if (pinAll) {\n@@ -119,1 +127,1 @@\n-        if (pin) {\n+        if (pinAll) {\n@@ -131,1 +139,2 @@\n-    node->strongCount = pin ? 1 : 0;\n+    node->isPinAll    = pinAll;\n+    node->isCommonPin = JNI_FALSE;\n@@ -149,1 +158,1 @@\n-        if (node->strongCount != 0) {\n+        if (isStrong(node)) {\n@@ -161,1 +170,1 @@\n-strengthenNode(JNIEnv *env, RefNode *node)\n+strengthenNode(JNIEnv *env, RefNode *node, jboolean isPinAll)\n@@ -163,1 +172,1 @@\n-    if (node->strongCount == 0) {\n+    if (!isStrong(node)) {\n@@ -179,1 +188,2 @@\n-            node->strongCount = 1;\n+        } else {\n+          return NULL;\n@@ -181,1 +191,3 @@\n-        return strongRef;\n+    }\n+    if (isPinAll) {\n+        node->isPinAll = JNI_TRUE;\n@@ -183,2 +195,1 @@\n-        node->strongCount++;\n-        return node->ref;\n+        node->isCommonPin = JNI_TRUE;\n@@ -186,0 +197,1 @@\n+    return node->ref;\n@@ -190,1 +202,1 @@\n-weakenNode(JNIEnv *env, RefNode *node)\n+weakenNode(JNIEnv *env, RefNode *node, jboolean isUnpinAll)\n@@ -192,1 +204,5 @@\n-    if (node->strongCount == 1) {\n+    jboolean willStillBeStrong = (node->isPinAll && !isUnpinAll) || (node->isCommonPin && isUnpinAll);\n+\n+    \/\/ If the node is strong, but the reason(s) for it being strong\n+    \/\/ will no longer exist, then weaken it.\n+    if (isStrong(node) && !willStillBeStrong) {\n@@ -203,2 +219,3 @@\n-            node->ref         = weakRef;\n-            node->strongCount = 0;\n+            node->ref      = weakRef;\n+        } else {\n+          return NULL;\n@@ -206,1 +223,4 @@\n-        return weakRef;\n+    }\n+\n+    if (isUnpinAll) {\n+        node->isPinAll = JNI_FALSE;\n@@ -208,4 +228,1 @@\n-        if (node->strongCount > 0) {\n-            node->strongCount--;\n-        }\n-        return node->ref;\n+        node->isCommonPin = JNI_FALSE;\n@@ -213,0 +230,1 @@\n+    return node->ref;\n@@ -473,1 +491,1 @@\n-            if (node->strongCount != 0) {\n+          if (isStrong(node)) {\n@@ -525,1 +543,1 @@\n-            strongRef = strengthenNode(env, node);\n+            strongRef = strengthenNode(env, node, JNI_FALSE \/* isPinAll *\/);\n@@ -554,1 +572,1 @@\n-            weakRef = weakenNode(env, node);\n+            weakRef = weakenNode(env, node, JNI_FALSE \/* isUnpinAll *\/);\n@@ -588,1 +606,1 @@\n-                    strongRef = strengthenNode(env, node);\n+                    strongRef = strengthenNode(env, node, JNI_TRUE \/* isPinAll *\/);\n@@ -631,1 +649,1 @@\n-                    weakRef = weakenNode(env, node);\n+                    weakRef = weakenNode(env, node, JNI_TRUE \/* isUnpinAll *\/);\n@@ -679,2 +697,1 @@\n-                    if ( (node->strongCount == 0) &&\n-                          isSameObject(env, node->ref, NULL)) {\n+                  if (!isStrong(node) && isSameObject(env, node->ref, NULL)) {\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/commonRef.c","additions":45,"deletions":28,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -235,0 +235,1 @@\n+    JDI_ASSERT_MSG(request->methodSignature == NULL, \"Request methodSignature not null\");\n@@ -778,0 +779,4 @@\n+    JDI_ASSERT_MSG(request->methodSignature != NULL, \"methodSignature is NULL\");\n+    jvmtiDeallocate(request->methodSignature);\n+    request->methodSignature = NULL;\n+\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/invoker.c","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,2 @@\n-    unsigned     strongCount;   \/* count of strong reference *\/\n+    jboolean     isPinAll;      \/* true if this is a strong reference due to a commonRef_pinAll() *\/\n+    jboolean     isCommonPin;   \/* true if this is a strong reference due to a commonRef_pin() *\/\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,16 +49,1 @@\n- * <pre>{@literal\n- *   List<AnnotationElement> typeAnnotations = new ArrayList<>();\n- *   typeAnnotations.add(new AnnotationElement(Name.class, \"com.example.HelloWorld\"));\n- *   typeAnnotations.add(new AnnotationElement(Label.class, \"Hello World\"));\n- *   typeAnnotations.add(new AnnotationElement(Description.class, \"Helps programmer getting started\"));\n- *\n- *   List<AnnotationElement> fieldAnnotations = new ArrayList<>();\n- *   fieldAnnotations.add(new AnnotationElement(Label.class, \"Message\"));\n- *\n- *   List<ValueDescriptor> fields = new ArrayList<>();\n- *   fields.add(new ValueDescriptor(String.class, \"message\", fieldAnnotations));\n- *\n- *   EventFactory f = EventFactory.create(typeAnnotations, fields);\n- *   Event event = f.newEvent();\n- *   event.commit();\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"AnnotationElementOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/AnnotationElement.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -36,0 +36,16 @@\n+ * <p>\n+ * The following example shows how a temperature content type can be created and\n+ * used.\n+ * <p>\n+ * First declare a temperature annotation using the {@code ContentType}\n+ * annotation:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeDeclaration\"}\n+ *\n+ * Then declare an event, annotate a field and commit the data:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeEvent\"}\n+ *\n+ * Finally, inspect the annotation when displaying event data:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeConsumption\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/ContentType.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,21 +34,1 @@\n- * <pre>{@literal\n- * import jdk.jfr.Event;\n- * import jdk.jfr.Description;\n- * import jdk.jfr.Label;\n- *\n- * public class Example {\n- *\n- *   @Label(\"Hello World\")\n- *   @Description(\"Helps programmer getting started\")\n- *   static class HelloWorld extends Event {\n- *       @Label(\"Message\")\n- *       String message;\n- *   }\n- *\n- *   public static void main(String... args) {\n- *       HelloWorld event = new HelloWorld();\n- *       event.message = \"hello, world!\";\n- *       event.commit();\n- *   }\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"EventOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Event.java","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,23 +55,1 @@\n- * <pre>\n- * {@code\n- * List<ValueDescriptor> fields = new ArrayList<>();\n- * List<AnnotationElement> messageAnnotations = Collections.singletonList(new AnnotationElement(Label.class, \"Message\"));\n- * fields.add(new ValueDescriptor(String.class, \"message\", messageAnnotations));\n- * List<AnnotationElement> numberAnnotations = Collections.singletonList(new AnnotationElement(Label.class, \"Number\"));\n- * fields.add(new ValueDescriptor(int.class, \"number\", numberAnnotations));\n- *\n- * String[] category = { \"Example\", \"Getting Started\" };\n- * List<AnnotationElement> eventAnnotations = new ArrayList<>();\n- * eventAnnotations.add(new AnnotationElement(Name.class, \"com.example.HelloWorld\"));\n- * eventAnnotations.add(new AnnotationElement(Label.class, \"Hello World\"));\n- * eventAnnotations.add(new AnnotationElement(Description.class, \"Helps programmer getting started\"));\n- * eventAnnotations.add(new AnnotationElement(Category.class, category));\n- *\n- * EventFactory f = EventFactory.create(eventAnnotations, fields);\n- *\n- * Event event = f.newEvent();\n- * event.set(0, \"hello, world!\");\n- * event.set(1, 4711);\n- * event.commit();\n- * }\n- * <\/pre>\n+ * {@snippet class=\"Snippets\" region=\"EventFactoryOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventFactory.java","additions":1,"deletions":23,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -41,12 +41,0 @@\n- * <pre>\n- * {@code\n- * Recording r = new Recording();\n- * r.enable(\"jdk.CPULoad\")\n- *    .withPeriod(Duration.ofSeconds(1));\n- * r.enable(\"jdk.FileWrite\")\n- *    .withoutStackTrace()\n- *    .withThreshold(Duration.ofNanos(10));\n- * r.start();\n- * Thread.sleep(10_000);\n- * r.stop();\n- * r.dump(Files.createTempFile(\"recording\", \".jfr\"));\n@@ -54,2 +42,2 @@\n- * }\n- * <\/pre>\n+ * {@snippet class=\"Snippets\" region=\"EventSettingOverview\"}\n+ *\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventSettings.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -95,9 +95,1 @@\n-     * <pre>{@literal\n-     * try (Recording snapshot = FlightRecorder.getFlightRecorder().takeSnapshot()) {\n-     *   if (snapshot.getSize() > 0) {\n-     *     snapshot.setMaxSize(100_000_000);\n-     *     snapshot.setMaxAge(Duration.ofMinutes(5));\n-     *     snapshot.dump(Paths.get(\"snapshot.jfr\"));\n-     *   }\n-     * }\n-     * }<\/pre>\n+     * {@snippet class=\"Snippets\" region=\"FlightRecorderTakeSnapshot\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/FlightRecorder.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,30 +39,1 @@\n- * <pre>{@literal\n- * @MetadataDefinition\n- * @Label(\"Severity\")\n- * @Description(\"Value between 0 and 100 that indicates severity. 100 is most severe.\")\n- * @Retention(RetentionPolicy.RUNTIME)\n- * @Target({ElementType.TYPE})\n- * public @interface Severity {\n- *     int value() default 50;\n- * }\n- *\n- * @MetadataDefinition\n- * @Label(\"Transaction Id\")\n- * @Relational\n- * @Retention(RetentionPolicy.RUNTIME)\n- * @Target({ElementType.FIELD})\n- * public @interface TransactionId {\n- * }\n- *\n- * @Severity(80)\n- * @Label(\"Transaction Blocked\")\n- * class TransactionBlocked extends Event {\n- *     @TransactionId\n- *     @Label(\"Transaction\")\n- *     long transactionId1;\n- *\n- *     @TransactionId\n- *     @Label(\"Transaction Blocker\")\n- *     long transactionId2;\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"MetadataDefinitionOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/MetadataDefinition.java","additions":1,"deletions":30,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -49,9 +49,1 @@\n- * <pre>{@literal\n- *   Configuration c = Configuration.getConfiguration(\"default\");\n- *   Recording r = new Recording(c);\n- *   r.start();\n- *   System.gc();\n- *   Thread.sleep(5000);\n- *   r.stop();\n- *   r.dump(Files.createTempFile(\"my-recording\", \".jfr\"));\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"RecordingOverview\"}\n@@ -146,1 +138,1 @@\n-     * <pre>{@literal\n+     * {@snippet :\n@@ -148,1 +140,1 @@\n-     * }<\/pre>\n+     * }\n@@ -310,1 +302,1 @@\n-     * <pre>{@literal\n+     * {@snippet :\n@@ -316,1 +308,1 @@\n-     * }<\/pre>\n+     * }\n@@ -320,1 +312,1 @@\n-     * <pre>{@literal\n+     * {@snippet :\n@@ -324,1 +316,1 @@\n-     * }<\/pre>\n+     * }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,7 @@\n+ * <p>\n+ * The following example shows how a relational annotation can be created and\n+ * used. The {@code Orderid} annotation indicates there is a relation between\n+ * {@code OrderEvent} and {@code OrderLineEvent}. if they have the same ID,\n+ * the order line belongs to the order.\n+ *\n+ * {@snippet class=\"Snippets\" region=\"RelationalOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Relational.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -40,24 +40,1 @@\n- * <pre>{@literal\n- * final class RegExpControl extends SettingControl {\n- *   private Pattern pattern = Pattern.compile(\".*\");\n- *\n- *   @Override\n- *   public void setValue(String value) {\n- *     this.pattern = Pattern.compile(value);\n- *   }\n- *\n- *   @Override\n- *   public String combine(Set<String> values) {\n- *     return String.join(\"|\", values);\n- *   }\n- *\n- *   @Override\n- *   public String getValue() {\n- *     return pattern.toString();\n- *   }\n- *\n- *   public boolean matches(String s) {\n- *     return pattern.matcher(s).find();\n- *   }\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"SettingControlOverview1\"}\n@@ -88,38 +65,1 @@\n- * <pre>{@literal\n- * abstract class HTTPRequest extends Event {\n- *   @Label(\"Request URI\")\n- *   protected String uri;\n- *\n- *   @Label(\"Servlet URI Filter\")\n- *   @SettingDefinition\n- *   protected boolean uriFilter(RegExpControl regExp) {\n- *     return regExp.matches(uri);\n- *   }\n- * }\n- *\n- * @Label(\"HTTP Get Request\")\n- * class HTTPGetRequest extends HTTPRequest {\n- * }\n- *\n- * @Label(\"HTTP Post Request\")\n- * class HTTPPostRequest extends HTTPRequest {\n- * }\n- *\n- * class ExampleServlet extends HttpServlet {\n- *   protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n- *     HTTPGetRequest request = new HTTPGetRequest();\n- *     request.begin();\n- *     request.uri = req.getRequestURI();\n- *     ...\n- *     request.commit();\n- *   }\n- *\n- *   protected void doPost(HttpServletRequest req, HttpServletResponse resp) {\n- *     HTTPPostRequest request = new HTTPPostRequest();\n- *     request.begin();\n- *     request.uri = req.getRequestURI();\n- *     ...\n- *     request.commit();\n- *   }\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"SettingControlOverview2\"}\n@@ -131,6 +71,1 @@\n- * <pre>{@literal\n- * Recording r = new Recording();\n- * r.enable(\"HTTPGetRequest\").with(\"uriFilter\", \"https:\/\/www.example.com\/list\/.*\");\n- * r.enable(\"HTTPPostRequest\").with(\"uriFilter\", \"https:\/\/www.example.com\/login\/.*\");\n- * r.start();\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"SettingControlOverview3\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/SettingControl.java","additions":3,"deletions":68,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -98,19 +98,1 @@\n- * <pre>{@literal\n- * try (var es = EventStream.openRepository()) {\n- *   es.onEvent(\"jdk.CPULoad\", event -> {\n- *     System.out.println(\"CPU Load \" + event.getEndTime());\n- *     System.out.println(\" Machine total: \" + 100 * event.getFloat(\"machineTotal\") + \"%\");\n- *     System.out.println(\" JVM User: \" + 100 * event.getFloat(\"jvmUser\") + \"%\");\n- *     System.out.println(\" JVM System: \" + 100 * event.getFloat(\"jvmSystem\") + \"%\");\n- *     System.out.println();\n- *   });\n- *   es.onEvent(\"jdk.GarbageCollection\", event -> {\n- *     System.out.println(\"Garbage collection: \" + event.getLong(\"gcId\"));\n- *     System.out.println(\" Cause: \" + event.getString(\"cause\"));\n- *     System.out.println(\" Total pause: \" + event.getDuration(\"sumOfPauses\"));\n- *     System.out.println(\" Longest pause: \" + event.getDuration(\"longestPause\"));\n- *     System.out.println();\n- *   });\n- *   es.start();\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"EventStreamOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/EventStream.java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -228,17 +228,1 @@\n-     *\n-     * <pre>{@literal\n-     * if (event.hasField(\"intValue\")) {\n-     *   int intValue = event.getValue(\"intValue\");\n-     *   System.out.println(\"Int value: \" + intValue);\n-     * }\n-     *\n-     * if (event.hasField(\"objectClass\")) {\n-     *   RecordedClass clazz = event.getValue(\"objectClass\");\n-     *   System.out.println(\"Class name: \" + clazz.getName());\n-     * }\n-     *\n-     * if (event.hasField(\"sampledThread\")) {\n-     *   RecordedThread sampledThread = event.getValue(\"sampledThread\");\n-     *   System.out.println(\"Sampled thread: \" + sampledThread.getJavaName());\n-     * }\n-     * }<\/pre>\n+     * {@snippet class=\"Snippets\" region=\"RecordedObjectGetValue\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -52,8 +52,1 @@\n- * <pre>{@literal\n- * try (RecordingFile recordingFile = new RecordingFile(Paths.get(\"recording.jfr\"))) {\n- *   while (recordingFile.hasMoreEvents()) {\n- *     RecordedEvent event = recordingFile.readEvent();\n- *     System.out.println(event);\n- *   }\n- * }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"RecordingFileOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingFile.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -59,9 +59,2 @@\n- * <pre>{@literal\n- * Configuration c = Configuration.getConfiguration(\"default\");\n- * try (var rs = new RecordingStream(c)) {\n- *     rs.onEvent(\"jdk.GarbageCollection\", System.out::println);\n- *     rs.onEvent(\"jdk.CPULoad\", System.out::println);\n- *     rs.onEvent(\"jdk.JVMInformation\", System.out::println);\n- *     rs.start();\n- * }\n- * }<\/pre>\n+ *\n+ * {@snippet class=\"Snippets\" region=\"RecordingStreamOverview\"}\n@@ -143,7 +136,1 @@\n-     * <pre>{@literal\n-     * var c = Configuration.getConfiguration(\"default\");\n-     * try (var rs = new RecordingStream(c)) {\n-     *   rs.onEvent(System.out::println);\n-     *   rs.start();\n-     * }\n-     * }<\/pre>\n+     * {@snippet class=\"Snippets\" region=\"RecordingStreamConstructor\"}\n@@ -192,11 +179,1 @@\n-     * <pre>{@literal\n-     * Configuration defaultConfiguration = Configuration.getConfiguration(\"default\");\n-     * Configuration profileConfiguration = Configuration.getConfiguration(\"profile\");\n-     * try (var rs = new RecordingStream(defaultConfiguration)) {\n-     *    rs.onEvent(System.out::println);\n-     *    rs.startAsync();\n-     *    Thread.sleep(20_000);\n-     *    rs.setSettings(profileConfiguration.getSettings());\n-     *    Thread.sleep(20_000);\n-     * }\n-     * }<\/pre>\n+     * {@snippet class=\"Snippets\" region=\"RecordingStreamSetSettings\"}\n@@ -387,10 +364,2 @@\n-     * <pre>{@literal\n-     * try (var stream = new RecordingStream()) {\n-     *   stream.enable(\"jdk.CPULoad\").withPeriod(Duration.ofSeconds(1));\n-     *   stream.onEvent(\"jdk.CPULoad\", event -> {\n-     *     System.out.println(event);\n-     *   });\n-     *   stream.startAsync();\n-     *   Thread.sleep(10_000);\n-     * }\n-     * }<\/pre>\n+     *\n+     * {@snippet class=\"Snippets\" region=\"RecordingStreamStartAsync\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingStream.java","additions":6,"deletions":37,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -30,6 +30,0 @@\n- * <pre>{@literal\n- * public static void main(String[] args) throws IOException {\n- *     if (args.length != 1) {\n- *         System.err.println(\"Must specify a recording file.\");\n- *         return;\n- *     }\n@@ -37,16 +31,1 @@\n- *     RecordingFile.readAllEvents(Path.of(args[0])).stream()\n- *         .filter(e -> e.getEventType().getName().equals(\"jdk.ExecutionSample\"))\n- *         .map(e -> e.getStackTrace())\n- *         .filter(s -> s != null)\n- *         .map(s -> s.getFrames().get(0))\n- *         .filter(f -> f.isJavaFrame())\n- *         .map(f -> f.getMethod())\n- *         .collect(\n- *             Collectors.groupingBy(m -> m.getType().getName() + \".\" + m.getName() + \" \" + m.getDescriptor(),\n- *             Collectors.counting()))\n- *         .entrySet()\n- *         .stream()\n- *         .sorted((a, b) -> b.getValue().compareTo(a.getValue()))\n- *         .forEach(e -> System.out.printf(\"%8d %s\\n\", e.getValue(), e.getKey()));\n- *     }\n- * }<\/pre>\n+ * {@snippet class=\"Snippets\" region=\"PackageOverview\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/package-info.java","additions":1,"deletions":22,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -0,0 +1,169 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package example2;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.stream.Collectors;\n+import jdk.jfr.consumer.EventStream;\n+import jdk.jfr.consumer.RecordingFile;\n+import jdk.jfr.consumer.RecordedClass;\n+import jdk.jfr.consumer.RecordedThread;\n+import jdk.jfr.consumer.RecordingStream;\n+import jdk.jfr.Configuration;\n+import jdk.jfr.consumer.RecordedEvent;\n+\n+public class Snippets {\n+\n+    class PackageOveriview {\n+        \/\/ @start region=\"PackageOverview\"\n+        public static void main(String[] args) throws IOException {\n+            if (args.length != 1) {\n+                System.err.println(\"Must specify a recording file.\");\n+                return;\n+            }\n+\n+            RecordingFile.readAllEvents(Path.of(args[0])).stream()\n+                .filter(e -> e.getEventType().getName().equals(\"jdk.ExecutionSample\"))\n+                .map(e -> e.getStackTrace())\n+                .filter(s -> s != null)\n+                .map(s -> s.getFrames().get(0))\n+                .filter(f -> f.isJavaFrame())\n+                .map(f -> f.getMethod())\n+                .collect(\n+                    Collectors.groupingBy(m -> m.getType().getName() + \".\" + m.getName() + \" \" + m.getDescriptor(),\n+                    Collectors.counting()))\n+                .entrySet()\n+                .stream()\n+                .sorted((a, b) -> b.getValue().compareTo(a.getValue()))\n+                .forEach(e -> System.out.printf(\"%8d %s\\n\", e.getValue(), e.getKey()));\n+        }\n+        \/\/ @end\n+    }\n+\n+    void EventStreamOverview() throws Exception {\n+        \/\/ @start region=\"EventStreamOverview\"\n+        try (var es = EventStream.openRepository()) {\n+            es.onEvent(\"jdk.CPULoad\", event -> {\n+                System.out.println(\"CPU Load \" + event.getEndTime());\n+                System.out.println(\" Machine total: \" + 100 * event.getFloat(\"machineTotal\") + \"%\");\n+                System.out.println(\" JVM User: \" + 100 * event.getFloat(\"jvmUser\") + \"%\");\n+                System.out.println(\" JVM System: \" + 100 * event.getFloat(\"jvmSystem\") + \"%\");\n+                System.out.println();\n+            });\n+            es.onEvent(\"jdk.GarbageCollection\", event -> {\n+                System.out.println(\"Garbage collection: \" + event.getLong(\"gcId\"));\n+                System.out.println(\" Cause: \" + event.getString(\"cause\"));\n+                System.out.println(\" Total pause: \" + event.getDuration(\"sumOfPauses\"));\n+                System.out.println(\" Longest pause: \" + event.getDuration(\"longestPause\"));\n+                System.out.println();\n+            });\n+            es.start();\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordingFileOverview() throws Exception {\n+        \/\/ @start region=\"RecordingFileOverview\"\n+        try (RecordingFile recordingFile = new RecordingFile(Paths.get(\"recording.jfr\"))) {\n+            while (recordingFile.hasMoreEvents()) {\n+                RecordedEvent event = recordingFile.readEvent();\n+                System.out.println(event);\n+            }\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordedObjectGetValue() {\n+        RecordedEvent event = null;\n+        \/\/ @start region=\"RecordedObjectGetValue\"\n+        if (event.hasField(\"intValue\")) {\n+            int intValue = event.getValue(\"intValue\");\n+            System.out.println(\"Int value: \" + intValue);\n+        }\n+\n+        if (event.hasField(\"objectClass\")) {\n+            RecordedClass clazz = event.getValue(\"objectClass\");\n+            System.out.println(\"Class name: \" + clazz.getName());\n+        }\n+\n+        if (event.hasField(\"sampledThread\")) {\n+            RecordedThread sampledThread = event.getValue(\"sampledThread\");\n+            System.out.println(\"Sampled thread: \" + sampledThread.getJavaName());\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordingStreamOverview() throws Exception {\n+        \/\/ @start region=\"RecordingStreamOverview\"\n+        Configuration c = Configuration.getConfiguration(\"default\");\n+        try (var rs = new RecordingStream(c)) {\n+            rs.onEvent(\"jdk.GarbageCollection\", System.out::println);\n+            rs.onEvent(\"jdk.CPULoad\", System.out::println);\n+            rs.onEvent(\"jdk.JVMInformation\", System.out::println);\n+            rs.start();\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordingStreamConstructor() throws Exception {\n+        \/\/ @start region=\"RecordingStreamConstructor\"\n+        var c = Configuration.getConfiguration(\"default\");\n+        try (var rs = new RecordingStream(c)) {\n+            rs.onEvent(System.out::println);\n+            rs.start();\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordingStreamSetSettings() throws Exception {\n+        \/\/ @start region=\"RecordingStreamSetSettings\"\n+        Configuration defaultConfiguration = Configuration.getConfiguration(\"default\");\n+        Configuration profileConfiguration = Configuration.getConfiguration(\"profile\");\n+        try (var rs = new RecordingStream(defaultConfiguration)) {\n+            rs.onEvent(System.out::println);\n+            rs.startAsync();\n+            Thread.sleep(20_000);\n+            rs.setSettings(profileConfiguration.getSettings());\n+            Thread.sleep(20_000);\n+        }\n+        \/\/ @end\n+    }\n+\n+    void RecordingStreamStartAsync() throws Exception {\n+        \/\/ @start region=\"RecordingStreamStartAsync\"\n+        try (var stream = new RecordingStream()) {\n+            stream.enable(\"jdk.CPULoad\").withPeriod(Duration.ofSeconds(1));\n+            stream.onEvent(\"jdk.CPULoad\", event -> {\n+                System.out.println(event);\n+            });\n+            stream.startAsync();\n+            Thread.sleep(10_000);\n+        }\n+        \/\/ @end\n+    }\n+}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/snippet-files\/Snippets.java","additions":169,"deletions":0,"binary":false,"changes":169,"status":"added"},{"patch":"@@ -273,1 +273,1 @@\n-            input.skipBytes(Float.SIZE);\n+            input.skipBytes(Float.BYTES);\n@@ -285,1 +285,1 @@\n-            input.skipBytes(Double.SIZE);\n+            input.skipBytes(Double.BYTES);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ParserFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,413 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package example1;\n+\n+import jdk.jfr.AnnotationElement;\n+import jdk.jfr.ValueDescriptor;\n+import jdk.jfr.EventFactory;\n+import jdk.jfr.Event;\n+import jdk.jfr.Name;\n+import jdk.jfr.Label;\n+import jdk.jfr.Description;\n+import jdk.jfr.Category;\n+import jdk.jfr.ContentType;\n+import jdk.jfr.Period;\n+import jdk.jfr.Recording;\n+import jdk.jfr.StackTrace;\n+import jdk.jfr.MetadataDefinition;\n+import jdk.jfr.Relational;\n+import jdk.jfr.consumer.RecordingFile;\n+import jdk.jfr.Configuration;\n+import jdk.jfr.SettingDefinition;\n+import jdk.jfr.SettingControl;\n+import jdk.jfr.Timestamp;\n+import jdk.jfr.FlightRecorder;\n+import jdk.jfr.consumer.RecordedEvent;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.time.Duration;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+import java.lang.annotation.ElementType;\n+\n+public class Snippets {\n+\n+    void AnnotationElementOverview() {\n+        \/\/ @start region=\"AnnotationElementOverview\"\n+        List<AnnotationElement> typeAnnotations = new ArrayList<>();\n+        typeAnnotations.add(new AnnotationElement(Name.class, \"com.example.HelloWorld\"));\n+        typeAnnotations.add(new AnnotationElement(Label.class, \"Hello World\"));\n+        typeAnnotations.add(new AnnotationElement(Description.class, \"Helps programmer getting started\"));\n+\n+        List<AnnotationElement> fieldAnnotations = new ArrayList<>();\n+        fieldAnnotations.add(new AnnotationElement(Label.class, \"Message\"));\n+\n+        List<ValueDescriptor> fields = new ArrayList<>();\n+        fields.add(new ValueDescriptor(String.class, \"message\", fieldAnnotations));\n+\n+        EventFactory f = EventFactory.create(typeAnnotations, fields);\n+        Event event = f.newEvent();\n+        event.commit();\n+        \/\/ @end\n+    }\n+\n+    record CPU(String id, float temperature) {\n+    }\n+\n+    private static List<CPU> listCPUs() {\n+        return List.of();\n+    }\n+\n+    \/\/ @start region=\"ContentTypeDeclaration\"\n+    @MetadataDefinition\n+    @ContentType\n+    @Name(\"com.example.Temperature\")\n+    @Label(\"Temperature\")\n+    @Target(ElementType.FIELD)\n+    @Retention(RetentionPolicy.RUNTIME)\n+    public @interface Temperature {\n+        public final static String KELVIN = \"KELVIN\";\n+        public final static String CELSIUS = \"CELSIUS\";\n+        public final static String FAHRENEHIT = \"FAHRENHEIT\";\n+\n+        String value() default CELSIUS;\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"ContentTypeEvent\"\n+    @Name(\"com.example.CPU\")\n+    @Label(\"CPU\")\n+    @Category({ \"Hardware\", \"CPU\" })\n+    @Period(\"1 s\")\n+    @StackTrace(false)\n+    static public class CPUEvent extends Event {\n+        @Label(\"ID\")\n+        String id;\n+\n+        @Temperature(Temperature.KELVIN)\n+        @Label(\"Temperature\")\n+        float temperature;\n+    }\n+\n+    public static void main(String... args) throws InterruptedException {\n+        FlightRecorder.addPeriodicEvent(CPUEvent.class, () -> {\n+            for (var cpu : listCPUs()) {\n+                CPUEvent event = new CPUEvent();\n+                event.id = cpu.id();\n+                event.temperature = cpu.temperature(); \/\/ in Kelvin\n+                event.commit();\n+            }\n+        });\n+        Thread.sleep(10_000);\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"ContentTypeConsumption\"\n+    void printTemperaturesInCelsius(Path file) throws IOException {\n+        for (RecordedEvent event : RecordingFile.readAllEvents(file)) {\n+            for (ValueDescriptor field : event.getEventType().getFields()) {\n+                for (AnnotationElement ae : field.getAnnotationElements()) {\n+                    ContentType type = ae.getAnnotation(ContentType.class);\n+                    if (type != null) {\n+                        if (ae.getTypeName().equals(\"com.example.Temperature\")) {\n+                            double value = event.getDouble(field.getName());\n+                            String unit = (String) ae.getValue(\"value\");\n+                            double celsius = switch (unit) {\n+                                case \"CELSIUS\" -> value;\n+                                case \"KELVIN\" -> value - 273.15;\n+                                case \"FAHRENHEIT\" -> (value - 32) \/ 1.8;\n+                                default -> throw new IllegalStateException(\"Unknown temperature unit '\" + unit + \"'\");\n+                            };\n+                            System.out.println(celsius + \" C\");\n+                        } else {\n+                            System.err.println(\"Can't format content type \" + ae.getTypeName() + \" for field \" + field.getName());\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"EventOverview\"\n+    public class Example {\n+\n+        @Label(\"Hello World\")\n+        @Description(\"Helps programmer getting started\")\n+        static class HelloWorld extends Event {\n+            @Label(\"Message\")\n+            String message;\n+        }\n+\n+        public static void main(String... args) {\n+            HelloWorld event = new HelloWorld();\n+            event.message = \"hello, world!\";\n+            event.commit();\n+        }\n+    }\n+    \/\/ @end\n+\n+    void EventFactoryOverview() {\n+        \/\/ @start region=\"EventFactoryOverview\"\n+        List<ValueDescriptor> fields = new ArrayList<>();\n+        List<AnnotationElement> messageAnnotations = Collections.singletonList(new AnnotationElement(Label.class, \"Message\"));\n+        fields.add(new ValueDescriptor(String.class, \"message\", messageAnnotations));\n+        List<AnnotationElement> numberAnnotations = Collections.singletonList(new AnnotationElement(Label.class, \"Number\"));\n+        fields.add(new ValueDescriptor(int.class, \"number\", numberAnnotations));\n+\n+        String[] category = { \"Example\", \"Getting Started\" };\n+        List<AnnotationElement> eventAnnotations = new ArrayList<>();\n+        eventAnnotations.add(new AnnotationElement(Name.class, \"com.example.HelloWorld\"));\n+        eventAnnotations.add(new AnnotationElement(Label.class, \"Hello World\"));\n+        eventAnnotations.add(new AnnotationElement(Description.class, \"Helps programmer getting started\"));\n+        eventAnnotations.add(new AnnotationElement(Category.class, category));\n+\n+        EventFactory f = EventFactory.create(eventAnnotations, fields);\n+\n+        Event event = f.newEvent();\n+        event.set(0, \"hello, world!\");\n+        event.set(1, 4711);\n+        event.commit();\n+        \/\/ @end\n+    }\n+\n+    void EventSettingOverview() throws Exception {\n+        \/\/ @start region=\"EventSettingOverview\"\n+        Recording r = new Recording();\n+        r.enable(\"jdk.CPULoad\")\n+         .withPeriod(Duration.ofSeconds(1));\n+        r.enable(\"jdk.FileWrite\")\n+         .withoutStackTrace()\n+         .withThreshold(Duration.ofNanos(10));\n+        r.start();\n+        Thread.sleep(10_000);\n+        r.stop();\n+        r.dump(Files.createTempFile(\"recording\", \".jfr\"));\n+        \/\/ @end\n+    }\n+\n+    void FlightRecorderTakeSnapshot() throws Exception {\n+        \/\/ @start region=\"FlightRecorderTakeSnapshot\"\n+        try (Recording snapshot = FlightRecorder.getFlightRecorder().takeSnapshot()) {\n+            if (snapshot.getSize() > 0) {\n+                snapshot.setMaxSize(100_000_000);\n+                snapshot.setMaxAge(Duration.ofMinutes(5));\n+                snapshot.dump(Paths.get(\"snapshot.jfr\"));\n+            }\n+        }\n+        \/\/ @end\n+    }\n+\n+    \/\/ @start region=\"MetadataDefinitionOverview\"\n+    @MetadataDefinition\n+    @Label(\"Severity\")\n+    @Description(\"Value between 0 and 100 that indicates severity. 100 is most severe.\")\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @Target({ ElementType.TYPE })\n+    public @interface Severity {\n+        int value() default 50;\n+    }\n+\n+    @MetadataDefinition\n+    @Label(\"Transaction Id\")\n+    @Relational\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @Target({ ElementType.FIELD })\n+    public @interface TransactionId {\n+    }\n+\n+    @Severity(80)\n+    @Label(\"Transaction Blocked\")\n+    class TransactionBlocked extends Event {\n+        @TransactionId\n+        @Label(\"Transaction\")\n+        long transactionId1;\n+\n+        @TransactionId\n+        @Label(\"Transaction Blocker\")\n+        long transactionId2;\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"RelationalOverview\"\n+    @MetadataDefinition\n+    @Relational\n+    @Name(\"com.example.OrderId\")\n+    @Label(\"Order ID\")\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @Target(ElementType.FIELD)\n+    public @interface OrderId {\n+    }\n+\n+    @Name(\"com.example.Order\")\n+    @Label(\"Order\")\n+    @Category(\"Orders\")\n+    class OrderEvent extends Event {\n+        @Label(\"Order ID\")\n+        @OrderId\n+        long orderId;\n+\n+        @Label(\"Order Date\")\n+        @Timestamp\n+        long orderDate;\n+    }\n+\n+    @Name(\"com.example.OrderLine\")\n+    @Label(\"Order Line\")\n+    @Category(\"Orders\")\n+    class OrderLineEvent extends Event {\n+        @Label(\"Order ID\")\n+        @OrderId\n+        long orderId;\n+\n+        @Label(\"Quantity\")\n+        long quantity;\n+\n+        @Label(\"Product\")\n+        String product;\n+    }\n+    \/\/ @end\n+\n+ void RecordingnOverview() throws Exception {\n+     \/\/ @start region=\"RecordingOverview\"\n+     Configuration c = Configuration.getConfiguration(\"default\");\n+     Recording r = new Recording(c);\n+     r.start();\n+     System.gc();\n+     Thread.sleep(5000);\n+     r.stop();\n+     r.dump(Files.createTempFile(\"my-recording\", \".jfr\"));\n+     \/\/ @end\n+ }\n+\n+ \/\/ @start region=\"SettingControlOverview1\"\n+ final class RegExpControl extends SettingControl {\n+     private Pattern pattern = Pattern.compile(\".*\");\n+\n+     @Override\n+     public void setValue(String value) {\n+         this.pattern = Pattern.compile(value);\n+     }\n+\n+     @Override\n+     public String combine(Set<String> values) {\n+         return String.join(\"|\", values);\n+     }\n+\n+     @Override\n+     public String getValue() {\n+         return pattern.toString();\n+     }\n+\n+     public boolean matches(String s) {\n+         return pattern.matcher(s).find();\n+     }\n+ }\n+ \/\/ @end\n+\n+ class HttpServlet {\n+ }\n+\n+ class HttpServletRequest {\n+     public String getRequestURI() {\n+         return null;\n+     }\n+ }\n+\n+ class HttpServletResponse {\n+ }\n+\n+ \/\/ @start region=\"SettingControlOverview2\"\n+ abstract class HTTPRequest extends Event {\n+     @Label(\"Request URI\")\n+     protected String uri;\n+\n+     @Label(\"Servlet URI Filter\")\n+     @SettingDefinition\n+     protected boolean uriFilter(RegExpControl regExp) {\n+         return regExp.matches(uri);\n+     }\n+ }\n+\n+ @Label(\"HTTP Get Request\")\n+ class HTTPGetRequest extends HTTPRequest {\n+ }\n+\n+ @Label(\"HTTP Post Request\")\n+ class HTTPPostRequest extends HTTPRequest {\n+ }\n+\n+ class ExampleServlet extends HttpServlet {\n+     protected void doGet(HttpServletRequest req, HttpServletResponse resp) {\n+         HTTPGetRequest request = new HTTPGetRequest();\n+         request.begin();\n+         request.uri = req.getRequestURI();\n+         code: \/\/ @replace regex='code:' replacement=\"...\"\n+         request.commit();\n+     }\n+\n+     protected void doPost(HttpServletRequest req, HttpServletResponse resp) {\n+         HTTPPostRequest request = new HTTPPostRequest();\n+         request.begin();\n+         request.uri = req.getRequestURI();\n+         code: \/\/ @replace regex='code:' replacement=\"...\"\n+         request.commit();\n+     }\n+ }\n+ \/\/ @end\n+\n+ void SettingControlOverview3() {\n+     \/\/ @start region=\"SettingControlOverview3\"\n+     Recording r = new Recording();\n+     r.enable(\"HTTPGetRequest\").with(\"uriFilter\", \"https:\/\/www.example.com\/list\/.*\");\n+     r.enable(\"HTTPPostRequest\").with(\"uriFilter\", \"https:\/\/www.example.com\/login\/.*\");\n+     r.start();\n+     \/\/ @end\n+ }\n+\n+ \/\/ @start region=\"SettingDefinitionOverview\"\n+ class HelloWorld extends Event {\n+\n+     @Label(\"Message\")\n+     String message;\n+\n+     @SettingDefinition\n+     @Label(\"Message Filter\")\n+     public boolean filter(RegExpControl regExp) {\n+         return regExp.matches(message);\n+     }\n+ }\n+ \/\/ @end\n+}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/snippet-files\/Snippets.java","additions":413,"deletions":0,"binary":false,"changes":413,"status":"added"},{"patch":"@@ -693,1 +693,0 @@\n-                        .distinct()\n@@ -708,1 +707,0 @@\n-                     .distinct()\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodTask.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,3 @@\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"jlink\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code jlink} tool.\n","filename":"src\/jdk.jlink\/share\/classes\/module-info.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,4 @@\n+ * @provides java.util.spi.ToolProvider\n+ *     Use {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst(\"jpackage\")}\n+ *     to obtain an instance of a {@code ToolProvider} that provides the equivalent\n+ *     of command-line access to the {@code jpackage} tool.\n","filename":"src\/jdk.jpackage\/share\/classes\/module-info.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.ObjectInputFilter;\n@@ -50,0 +51,2 @@\n+    private static final String rmiFilterPattern = \"sun.jvmstat.monitor.remote.RemoteVm;com.sun.proxy.jdk.proxy*;java.lang.reflect.Proxy;java.rmi.server.RemoteObjectInvocationHandler;java.rmi.server.RemoteObject;!*\";\n+\n@@ -75,1 +78,0 @@\n-    @SuppressWarnings({\"removal\",\"deprecation\"}) \/\/ Use of RMISecurityManager\n@@ -135,4 +137,0 @@\n-        if (System.getSecurityManager() == null) {\n-            System.setSecurityManager(new RMISecurityManager());\n-        }\n-\n@@ -152,2 +150,0 @@\n-            \/\/ use 1.5.0 dynamically generated subs.\n-            System.setProperty(\"java.rmi.server.ignoreSubClasses\", \"true\");\n@@ -155,0 +151,1 @@\n+            ObjectInputFilter filter = ObjectInputFilter.Config.createFilter(rmiFilterPattern);\n@@ -156,1 +153,1 @@\n-                    remoteHost, rmiPort);\n+                    remoteHost, rmiPort, filter);\n","filename":"src\/jdk.jstatd\/share\/classes\/sun\/tools\/jstatd\/Jstatd.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -123,5 +123,2 @@\n-The \\f[CB]jstatd\\f[R] server installs an instance of\n-\\f[CB]RMISecurityPolicy\\f[R] when no other security manager is installed,\n-and therefore, requires a security policy file to be specified.\n-The policy file must conform to Default Policy Implementation and Policy\n-File Syntax.\n+For security purposes, the \\f[CB]jstatd\\f[R] server uses an RMI\n+ObjectInputFilter to allow only essential classes to be deserialized.\n@@ -129,3 +126,3 @@\n-If your security concerns can\\[aq]t be addressed with a customized\n-policy file, then the safest action is to not run the \\f[CB]jstatd\\f[R]\n-server and use the \\f[CB]jstat\\f[R] and \\f[CB]jps\\f[R] tools locally.\n+If your security concerns can\\[aq]t be addressed, then the safest action\n+is to not run the \\f[CB]jstatd\\f[R] server and use the \\f[CB]jstat\\f[R] and\n+\\f[CB]jps\\f[R] tools locally.\n@@ -152,1 +149,1 @@\n-\\f[CB]jstatd\\ \\-J\\-Djava.security.policy=all.policy\\f[R]\n+\\f[CB]jstatd\\f[R]\n@@ -162,1 +159,1 @@\n-jstatd\\ \\-J\\-Djava.security.policy=all.policy\n+jstatd\n@@ -172,1 +169,1 @@\n-jstatd\\ \\-J\\-Djava.security.policy=all.policy\\ \\-p\\ 2020\n+jstatd\\ \\-p\\ 2020\n@@ -183,1 +180,1 @@\n-jstatd\\ \\-J\\-Djava.security.policy=all.policy\\ \\-p\\ 2020\\ \\-r\\ 2021\n+jstatd\\ \\-p\\ 2020\\ \\-r\\ 2021\n@@ -194,1 +191,1 @@\n-jstatd\\ \\-J\\-Djava.security.policy=all.policy\\ \\-p\\ 2020\\ \\-n\\ AlternateJstatdServerName\n+jstatd\\ \\-p\\ 2020\\ \\-n\\ AlternateJstatdServerName\n@@ -206,1 +203,1 @@\n-\\f[CB]jstatd\\ \\-J\\-Djava.security.policy=all.policy\\ \\-nr\\f[R]\n+\\f[CB]jstatd\\ \\-nr\\f[R]\n@@ -216,1 +213,1 @@\n-\\f[CB]jstatd\\ \\-J\\-Djava.security.policy=all.policy\\ \\-J\\-Djava.rmi.server.logCalls=true\\f[R]\n+\\f[CB]jstatd\\ \\-J\\-Djava.rmi.server.logCalls=true\\f[R]\n","filename":"src\/jdk.jstatd\/share\/man\/jstatd.1","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.io.UncheckedIOException;\n@@ -33,0 +34,1 @@\n+import java.net.PortUnreachableException;\n@@ -278,1 +280,10 @@\n-\n+                    } catch (UncheckedIOException | PortUnreachableException ex) {\n+                        \/\/ DatagramSocket.connect in doUdpQuery can throw UncheckedIOException\n+                        \/\/ DatagramSocket.send in doUdpQuery can throw PortUnreachableException\n+                        if (debug) {\n+                            dprint(\"Caught Exception:\" + ex);\n+                        }\n+                        if (caughtException == null) {\n+                            caughtException = ex;\n+                        }\n+                        doNotRetry[i] = true;\n@@ -286,6 +297,0 @@\n-                        \/\/ Use reflection to allow pre-1.4 compilation.\n-                        \/\/ This won't be needed much longer.\n-                        if (e.getClass().getName().equals(\n-                                \"java.net.PortUnreachableException\")) {\n-                            doNotRetry[i] = true;\n-                        }\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsClient.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -128,0 +128,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,0 +97,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Data\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,0 +98,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Difference\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-                    <version>15.2<\/version>\n+                    <version>15.3<\/version>\n@@ -137,0 +137,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/pom.xml","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,0 +148,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,0 +98,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,0 +99,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,0 +88,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/HierarchicalLayout\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Layout\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/NetworkConnection\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n-between 8 and 15 (the latest JDK supported by the current NetBeans Platform).\n+between 11 and 17 (the JDKs supported by the current NetBeans Platform).\n","filename":"src\/utils\/IdealGraphVisualizer\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,0 +88,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/SelectionCoordinator\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,5 @@\n+        <dependency>\n+            <groupId>com.ibm.wala<\/groupId>\n+            <artifactId>com.ibm.wala.util<\/artifactId>\n+            <version>${wala.version}<\/version>\n+        <\/dependency>\n@@ -93,0 +98,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/pom.xml","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,3 @@\n+import com.ibm.wala.util.graph.Graph;\n+import com.ibm.wala.util.graph.impl.SlowSparseNumberedGraph;\n+import com.ibm.wala.util.graph.dominators.Dominators;\n@@ -365,13 +368,0 @@\n-    private class BlockIntermediate {\n-\n-        InputBlock block;\n-        int index;\n-        int dominator;\n-        int semi;\n-        int parent;\n-        int label;\n-        int ancestor;\n-        List<Integer> pred;\n-        List<Integer> bucket;\n-    }\n-\n@@ -415,23 +405,0 @@\n-        Vector<BlockIntermediate> intermediate = new Vector<>(graph.getBlocks().size());\n-        Map<InputBlock, BlockIntermediate> map = new HashMap<>(graph.getBlocks().size());\n-        int z = 0;\n-        for (InputBlock b : blocks) {\n-            BlockIntermediate bi = new BlockIntermediate();\n-            bi.block = b;\n-            bi.index = z;\n-            bi.dominator = -1;\n-            bi.semi = -1;\n-            bi.parent = -1;\n-            bi.label = z;\n-            bi.ancestor = -1;\n-            bi.pred = new ArrayList<>();\n-            bi.bucket = new ArrayList<>();\n-            intermediate.add(bi);\n-            map.put(b, bi);\n-            z++;\n-        }\n-        Stack<Integer> stack = new Stack<>();\n-        stack.add(0);\n-\n-        Vector<BlockIntermediate> array = new Vector<>();\n-        intermediate.get(0).dominator = 0;\n@@ -439,72 +406,3 @@\n-        int n = 0;\n-        while (!stack.isEmpty()) {\n-            int index = stack.pop();\n-            BlockIntermediate ib = intermediate.get(index);\n-            ib.semi = n;\n-            array.add(ib);\n-            n = n + 1;\n-            for (InputBlock b : ib.block.getSuccessors()) {\n-                BlockIntermediate succ = map.get(b);\n-                if (succ.semi == -1) {\n-                    succ.parent = index;\n-                    stack.push(succ.index); \/\/ TODO: check if same node could be pushed twice\n-                }\n-                succ.pred.add(index);\n-            }\n-        }\n-\n-        for (int i = n - 1; i > 0; i--) {\n-            BlockIntermediate block = array.get(i);\n-            int block_index = block.index;\n-            for (int predIndex : block.pred) {\n-                int curIndex = eval(predIndex, intermediate);\n-                BlockIntermediate curBlock = intermediate.get(curIndex);\n-                if (curBlock.semi < block.semi) {\n-                    block.semi = curBlock.semi;\n-                }\n-            }\n-\n-\n-            int semiIndex = block.semi;\n-            BlockIntermediate semiBlock = array.get(semiIndex);\n-            semiBlock.bucket.add(block_index);\n-\n-            link(block.parent, block_index, intermediate);\n-            BlockIntermediate parentBlock = intermediate.get(block.parent);\n-\n-            for (int j = 0; j < parentBlock.bucket.size(); j++) {\n-                for (int curIndex : parentBlock.bucket) {\n-                    int newIndex = eval(curIndex, intermediate);\n-                    BlockIntermediate curBlock = intermediate.get(curIndex);\n-                    BlockIntermediate newBlock = intermediate.get(newIndex);\n-                    int dom = block.parent;\n-                    if (newBlock.semi < curBlock.semi) {\n-                        dom = newIndex;\n-                    }\n-\n-                    curBlock.dominator = dom;\n-                }\n-            }\n-\n-\n-            parentBlock.bucket.clear();\n-        }\n-\n-        for (int i = 1; i < n; i++) {\n-\n-            BlockIntermediate block = array.get(i);\n-            int block_index = block.index;\n-\n-            int semi_index = block.semi;\n-            BlockIntermediate semi_block = array.get(semi_index);\n-\n-            if (block.dominator != semi_block.index) {\n-                int new_dom = intermediate.get(block.dominator).dominator;\n-                block.dominator = new_dom;\n-            }\n-        }\n-\n-        for (BlockIntermediate ib : intermediate) {\n-            if (ib.dominator == -1) {\n-                ib.dominator = 0;\n-            }\n+        Graph<InputBlock> CFG = SlowSparseNumberedGraph.make();\n+        for (InputBlock b : blocks) {\n+            CFG.addNode(b);\n@@ -512,11 +410,3 @@\n-\n-        for (BlockIntermediate bi : intermediate) {\n-            InputBlock b = bi.block;\n-            int dominator = bi.dominator;\n-            InputBlock dominatorBlock = null;\n-            if (dominator != -1) {\n-                dominatorBlock = intermediate.get(dominator).block;\n-            }\n-\n-            if (dominatorBlock == b) {\n-                dominatorBlock = null;\n+        for (InputBlock p : blocks) {\n+            for (InputBlock s : p.getSuccessors()) {\n+                CFG.addEdge(p, s);\n@@ -524,1 +414,0 @@\n-            this.dominatorMap.put(b, dominatorBlock);\n@@ -526,7 +415,0 @@\n-    }\n-\n-    private void compress(int index, Vector<BlockIntermediate> blocks) {\n-        BlockIntermediate block = blocks.get(index);\n-\n-        int ancestor = block.ancestor;\n-        assert ancestor != -1;\n@@ -534,3 +416,2 @@\n-        BlockIntermediate ancestor_block = blocks.get(ancestor);\n-        if (ancestor_block.ancestor != -1) {\n-            compress(ancestor, blocks);\n+        InputBlock root = findRoot().block;\n+        Dominators<InputBlock> D = Dominators.make(CFG, root);\n@@ -538,7 +419,5 @@\n-            int label = block.label;\n-            BlockIntermediate label_block = blocks.get(label);\n-\n-            int ancestor_label = ancestor_block.label;\n-            BlockIntermediate ancestor_label_block = blocks.get(label);\n-            if (ancestor_label_block.semi < label_block.semi) {\n-                block.label = ancestor_label;\n+        for (InputBlock b : blocks) {\n+            InputBlock idom = D.getIdom(b);\n+            if (idom == null && b != root) {\n+                \/\/ getCommonDominator expects a single root node.\n+                idom = root;\n@@ -546,2 +425,1 @@\n-\n-            block.ancestor = ancestor_block.ancestor;\n+            dominatorMap.put(b, idom);\n@@ -551,15 +429,0 @@\n-    private int eval(int index, Vector<BlockIntermediate> blocks) {\n-        BlockIntermediate block = blocks.get(index);\n-        if (block.ancestor == -1) {\n-            return index;\n-        } else {\n-            compress(index, blocks);\n-            return block.label;\n-        }\n-    }\n-\n-    private void link(int index1, int index2, Vector<BlockIntermediate> blocks) {\n-        BlockIntermediate block2 = blocks.get(index2);\n-        block2.ancestor = index1;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/java\/com\/sun\/hotspot\/igv\/servercompiler\/ServerCompilerScheduler.java","additions":18,"deletions":155,"binary":false,"changes":173,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,0 +113,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Settings\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -118,0 +118,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,0 +198,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,0 +156,3 @@\n+                <configuration>\n+                    <etcConfFile>src\/main\/resources\/${brandingToken}.conf<\/etcConfFile>\n+                <\/configuration>\n","filename":"src\/utils\/IdealGraphVisualizer\/application\/pom.xml","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,24 @@\n+# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+# Open\/export modules still accessed by the NetBeans Platform.\n+# All options must be passed in a single line for multi-platform support.\n+default_options=\"-J--add-opens=java.base\/java.net=ALL-UNNAMED -J--add-opens=java.desktop\/javax.swing.plaf.synth=ALL-UNNAMED -J--add-opens=java.desktop\/com.sun.java.swing.plaf.gtk=ALL-UNNAMED -J--add-opens=java.desktop\/javax.swing=ALL-UNNAMED -J--add-exports=java.desktop\/sun.awt=ALL-UNNAMED\"\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/application\/src\/main\/resources\/idealgraphvisualizer.conf","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,4 @@\n+            <plugin>\n+                <groupId>org.apache.maven.plugins<\/groupId>\n+                <artifactId>maven-enforcer-plugin<\/artifactId>\n+            <\/plugin>\n","filename":"src\/utils\/IdealGraphVisualizer\/branding\/pom.xml","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,21 @@\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins<\/groupId>\n+                    <artifactId>maven-enforcer-plugin<\/artifactId>\n+                    <version>${mvnenforcerplugin.version}<\/version>\n+                    <executions>\n+                        <execution>\n+                            <id>enforce-java<\/id>\n+                            <goals>\n+                                <goal>enforce<\/goal>\n+                            <\/goals>\n+                            <configuration>\n+                                <rules>\n+                                    <requireJavaVersion>\n+                                      <version>[11,18)<\/version>\n+                                      <message>IGV requires a JDK version between 11 and 17<\/message>\n+                                    <\/requireJavaVersion>\n+                                <\/rules>\n+                            <\/configuration>\n+                        <\/execution>\n+                    <\/executions>\n+                <\/plugin>\n@@ -92,1 +113,1 @@\n-        <netbeans.version>RELEASE123<\/netbeans.version>\n+        <netbeans.version>RELEASE126<\/netbeans.version>\n@@ -97,0 +118,1 @@\n+        <mvnenforcerplugin.version>3.0.0<\/mvnenforcerplugin.version>\n@@ -100,0 +122,1 @@\n+        <wala.version>1.5.7<\/wala.version>\n","filename":"src\/utils\/IdealGraphVisualizer\/pom.xml","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -1,102 +0,0 @@\n-Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n-DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-The Universal Permissive License (UPL), Version 1.0\n-\n-Subject to the condition set forth below, permission is hereby granted to\n-any person obtaining a copy of this software, associated documentation\n-and\/or data (collectively the \"Software\"), free of charge and under any\n-and all copyright rights in the Software, and any and all patent rights\n-owned or freely licensable by each licensor hereunder covering either (i)\n-the unmodified Software as contributed to or provided by such licensor,\n-or (ii) the Larger Works (as defined below), to deal in both\n-\n-(a) the Software, and\n-\n-(b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n-if one is included with the Software (each a \"Larger Work\" to which the\n-Software is contributed by such licensors),\n-\n-without restriction, including without limitation the rights to copy,\n-create derivative works of, display, perform, and distribute the Software\n-and make, use, sell, offer for sale, import, export, have made, and have\n-sold the Software and the Larger Work(s), and to sublicense the foregoing\n-rights on either these or other terms.\n-\n-This license is subject to the following condition:\n-\n-The above copyright notice and either this complete permission notice or\n-at a minimum a reference to the UPL must be included in all copies or\n-substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n-OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n-NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n-DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n-OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n-USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-or visit www.oracle.com if you need additional information or have any\n-questions.\n-\n-________________________________________________________________________\n-\n-'hsdis': A HotSpot plugin for disassembling dynamically generated code.\n-\n-The files in this directory are built independently of the HotSpot JVM.\n-\n-* Building\n-\n-To build this project you need a copy of GNU binutils to build against. It is\n-known to work with binutils 2.37. Building against versions older than 2.29 is\n-not supported. Download a copy of the software from\n-http:\/\/directory.fsf.org\/project\/binutils or one of its mirrors.\n-\n-To build this library, you must enable building in configure by \"bash configure\n---with-hsdis=binutils\".\n-\n-You must also specify where binutils is located. To facilitate building, you can\n-point to a place where the (unpacked) binutils sources are located using\n-\"--with-binutils-src=<location>\", and configure will build binutils for you. On\n-repeated runs, you can keep this command line option, since configure will\n-figure out that the binutils binaries are already present and skip building, or\n-you can replace it with \"--with-binutils=<location>\".\n-\n-If you have pre-built binutils binaries, you can point to them directly using\n-\"--with-binutils=<location>\".\n-\n-If you want to build hsdis with binutils provided by system\n-(e.g. binutils-devel from Fedora, binutils-dev from Ubuntu), you can pass\n-\"--with-binutils=system\". \"system\" is available on Linux only.\n-\n-When you have created a proper configuration, you can then build the hsdis\n-library using \"make build-hsdis\".\n-\n-* Building on Windows\n-\n-On Windows, the normal Microsoft Visual Studio toolchain cannot build binutils.\n-Instead we need to use the mingw compiler. This is available as a cygwin\n-package. You need to install the \"gcc-core\" and \"mingw64-x86_64-gcc-core\"\n-packages (or \"mingw64-i686-gcc-core\", if you want the 32-bit version) and\n-\"mingw64-x86_64-glib2.0\".\n-\n-* Installing\n-\n-To build the hsdis library, run \"make build-hsdis\". This will build the library\n-in a separate directory, but not make it available to the JDK in the\n-configuration. To actually install it in the JDK, run \"make install-hsdis\".\n-\n-Note: The resulting build may not be distributable. Please get legal advice if\n-you intend to distribute the result of your build.\n-\n-* Using the library\n-\n-The hsdis library will be automatically loaded by Hotspot when you use the\n-diagnostic option \"-XX:+PrintAssembly\". Note that since this is a diagnostic\n-option, you need to unlock these first, so in practice you activate it using\n-\"-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly\".\n-\n-More information is available at the wiki\n-[https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintAssembly].\n","filename":"src\/utils\/hsdis\/README","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -0,0 +1,191 @@\n+```\n+Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+The Universal Permissive License (UPL), Version 1.0\n+\n+Subject to the condition set forth below, permission is hereby granted to\n+any person obtaining a copy of this software, associated documentation\n+and\/or data (collectively the \"Software\"), free of charge and under any\n+and all copyright rights in the Software, and any and all patent rights\n+owned or freely licensable by each licensor hereunder covering either (i)\n+the unmodified Software as contributed to or provided by such licensor,\n+or (ii) the Larger Works (as defined below), to deal in both\n+\n+(a) the Software, and\n+\n+(b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n+if one is included with the Software (each a \"Larger Work\" to which the\n+Software is contributed by such licensors),\n+\n+without restriction, including without limitation the rights to copy,\n+create derivative works of, display, perform, and distribute the Software\n+and make, use, sell, offer for sale, import, export, have made, and have\n+sold the Software and the Larger Work(s), and to sublicense the foregoing\n+rights on either these or other terms.\n+\n+This license is subject to the following condition:\n+\n+The above copyright notice and either this complete permission notice or\n+at a minimum a reference to the UPL must be included in all copies or\n+substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n+NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n+DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n+OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n+USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+or visit www.oracle.com if you need additional information or have any\n+questions.\n+```\n+\n+---\n+\n+# hsdis - a HotSpot plugin for disassembling dynamically generated code\n+\n+The files in this directory are built independently of the HotSpot JVM.\n+\n+hsdis is an interface exposed by Hotspot. There are several backends that\n+implement this interface, using different disassembly engines. Included in the\n+JDK is support for building hsdis with Capstone, LLVM or GNU binutils. The\n+interface is fairly straightforward and easy to implement using other backends.\n+\n+## Building and installing\n+\n+To compile hsdis, you need to activate hsdis support, and select the proper\n+backend to use. This is done with the configure switch `--with-hsdis=<backend>`,\n+where `<backend>` is either `capstone`, `llvm` or `binutils`. For details, see\n+the sections on the respective backends below.\n+\n+To build the hsdis library, run `make build-hsdis`. This will build the library\n+in a separate directory, but not make it available to the JDK in the\n+configuration. To actually install it in the JDK, run `make install-hsdis`.\n+\n+**NOTE:** If you do this using the binutils backend, the resulting build may not\n+be distributable. Please get legal advice if you intend to distribute the result\n+of your build.\n+\n+## Using the library\n+\n+The hsdis library will be automatically loaded by Hotspot when you use the\n+diagnostic option `-XX:+PrintAssembly`. Note that since this is a diagnostic\n+option, you need to unlock these first, so in practice you activate it using\n+`-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly`.\n+\n+If using the LLVM backend on Windows, you need to be sure that the LLVM DLL file\n+(or files) can be found by hsdis. In practice, this means that you either need\n+to copy `LLVM-C.DLL` to a place on your `PATH` or the JDK `bin` directory, or\n+you need to augment your `PATH` variable to also point to where you installed\n+LLVM (like `C:\\LLVM\\bin`).\n+\n+More information is available at the [HotSpot\n+wiki](https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintAssembly).\n+\n+## Building with Capstone\n+\n+To build this project using Capstone you need to have Capstone installed.\n+Typical ways of installation can be `sudo apt install libcapstone-dev` (on\n+Debian and derivatives), or `brew install capstone` (on macOS with Homebrew).\n+For Windows, you need to download the \"Core Engine\", and unzip it. See the\n+[Capstone Download\n+page](https:\/\/www.capstone-engine.org\/download.html#windows---core-engine-) for\n+up-to-date download links.\n+\n+This has been tested with Capstone v4.0.2, but earlier (and later) versions are\n+also likely to work.\n+\n+To build hsdis using Capstone, you must enable it in configure by `bash\n+configure --with-hsdis=capstone`.\n+\n+On Linux and macOS, the location Capstone can most often be auto-detected. If\n+this fails, or if you are building on Windows, you need to specify where\n+Capstone is located using `--with-capstone=<path>`. This path should point to\n+where you have extracted the Core Engine zip file.\n+\n+## Building with LLVM\n+\n+To build this project using LLVM you need to have LLVM installed. Typical ways\n+of installation can be `sudo apt install llvm` (on Debian and derivatives), or\n+`brew install llvm` (on macOS with Homebrew). For Windows, see below.\n+\n+This has been tested with LLVM v13.0.0, but earlier (and later) versions are\n+also likely to work.\n+\n+To build hsdis using LLVM, you must enable it in configure by `bash configure\n+--with-hsdis=llvm`.\n+\n+If `llvm-config` is not in your path, you will need to specify the LLVM home using\n+`--with-llvm=<LLVM home>`. Example: If your `llvm-config` is in `~\/my-llvm\/bin`,\n+then you should use `--with-llvm=~\/my-llvm`.\n+\n+### Building with LLVM on Windows\n+\n+Getting a usable installation on Windows is trickier than on the other\n+platforms. You can download (and patch) the official distribution, or you can\n+build it yourself.\n+\n+Links to the latest version of the official build is available at [LLVMs\n+download page](https:\/\/releases.llvm.org\/download.html). Download the file\n+*LLVM-nn.n.n-win64.exe*, and run it to let it install itself. The default\n+installation location is `C:\\Program Files\\LLVM`. This is not ideal due to the\n+spaces in the path, so it is recommended to put it elsewhere (e.g. `C:\\LLVM`).\n+\n+For very unclear reasons, the official Windows build is missing almost all LLVM\n+include files. (At least this was the case up to and including LLVM 13.) You\n+will need to complement your installation with the proper include files. One way\n+to do this is to install LLVM in Cygwin. This will give you (apart from the Cygwin-based dll\n+files which are unusable with Visual Studio) a complete set of the\n+headers. These are located in `\/usr\/include\/llvm` and `\/usr\/include\/llvm-c`. Copy\n+these directories, with all their content, into `$LLVM_HOME\/include`.\n+\n+Alternatively, you can build LLVM yourself from source. This process is\n+documented at the [LLVM Visual Studio\n+page](https:\/\/llvm.org\/docs\/GettingStartedVS.html).\n+\n+Either which way, you must tell configure the location of your LLVM installation\n+using `--with-llvm=<path to LLVM home>`.\n+\n+The `llvm-config` tool, which configure uses on other platforms to get the\n+proper compile and link flags to use, is unfortunately not usable on Windows. In\n+the official distribution, it is just missing. And the self-built version tend\n+to give broken and unusable output. Therefore configure uses heuristics to setup\n+proper flags to the compiler and linker. This was verified to work for LLVM v13,\n+but might be incorrect for other versions. Manual override of `HSDIS_CFLAGS`,\n+`HSDIS_LDFLAGS` and\/or `HSDIS_LIBS` on the make command line might be needed in\n+that case.\n+\n+## Building with binutils\n+\n+To build this project using binutils you need a copy of GNU binutils to build\n+against. It is known to work with binutils 2.37. Building against versions older\n+than 2.29 is not supported. Download a copy of the software from [FSF binutils\n+page](http:\/\/directory.fsf.org\/project\/binutils) or one of its mirrors.\n+\n+To build this library, you must enable building in configure by `bash configure\n+--with-hsdis=binutils`.\n+\n+You must also specify where binutils is located. To facilitate building, you can\n+point to a place where the (unpacked) binutils sources are located using\n+`--with-binutils-src=<location>`, and configure will build binutils for you. On\n+repeated runs, you can keep this command line option, since configure will\n+figure out that the binutils binaries are already present and skip building, or\n+you can replace it with `--with-binutils=<location>`.\n+\n+If you have pre-built binutils binaries, you can point to them directly using\n+`--with-binutils=<location>`.\n+\n+If you want to build hsdis with binutils provided by system (e.g. binutils-devel\n+from Fedora, binutils-dev from Ubuntu), you can pass `--with-binutils=system`.\n+`system` is available on Linux only.\n+\n+### Building with binutils on Windows\n+\n+On Windows, the normal Microsoft Visual Studio toolchain cannot build binutils.\n+Instead we need to use the mingw compiler. This is available as a cygwin\n+package. You need to install the `gcc-core` and `mingw64-x86_64-gcc-core`\n+packages (or `mingw64-i686-gcc-core`, if you want the 32-bit version) and\n+`mingw64-x86_64-glib2.0`.\n","filename":"src\/utils\/hsdis\/README.md","additions":191,"deletions":0,"binary":false,"changes":191,"status":"added"},{"patch":"","filename":"src\/utils\/hsdis\/binutils\/hsdis-binutils.c","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/utils\/hsdis\/hsdis.c","status":"renamed"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to\n+ * any person obtaining a copy of this software, associated documentation\n+ * and\/or data (collectively the \"Software\"), free of charge and under any\n+ * and all copyright rights in the Software, and any and all patent rights\n+ * owned or freely licensable by each licensor hereunder covering either (i)\n+ * the unmodified Software as contributed to or provided by such licensor,\n+ * or (ii) the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n+ * if one is included with the Software (each a \"Larger Work\" to which the\n+ * Software is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy,\n+ * create derivative works of, display, perform, and distribute the Software\n+ * and make, use, sell, offer for sale, import, export, have made, and have\n+ * sold the Software and the Larger Work(s), and to sublicense the foregoing\n+ * rights on either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or\n+ * at a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n+ * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n+ * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n+ * USE OR OTHER DEALINGS IN THE SOFTWARE.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/* hsdis.c -- dump a range of addresses as native instructions\n+   This implements the plugin protocol required by the\n+   HotSpot PrintAssembly option.\n+*\/\n+\n+#include <inttypes.h>\n+\n+#include <capstone.h>\n+\n+#include \"hsdis.h\"\n+\n+\/* short names for stuff in hsdis.h *\/\n+typedef decode_instructions_event_callback_ftype  event_callback_t;\n+typedef decode_instructions_printf_callback_ftype printf_callback_t;\n+\n+#define print(...) (*printf_callback) (printf_stream, __VA_ARGS__)\n+\n+#ifdef _WIN32\n+__declspec(dllexport)\n+#endif\n+void* decode_instructions_virtual(uintptr_t start_va, uintptr_t end_va,\n+                                  unsigned char* buffer, uintptr_t length,\n+                                  void* (*event_callback)(void*, const char*, void*),\n+                                  void* event_stream,\n+                                  int (*printf_callback)(void*, const char*, ...),\n+                                  void* printf_stream,\n+                                  const char* options,\n+                                  int newline \/* bool value for nice new line *\/) {\n+  csh cs_handle;\n+\n+  if (cs_open(CAPSTONE_ARCH, CAPSTONE_MODE, &cs_handle) != CS_ERR_OK) {\n+    print(\"Could not open cs_handle\");\n+    return NULL;\n+  }\n+\n+  \/\/ TODO: Support intel syntax\n+  cs_option(cs_handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);\n+\n+  cs_insn *insn;\n+  size_t count = cs_disasm(cs_handle, buffer, length, (uintptr_t) buffer, 0 , &insn);\n+  if (count) {\n+    for (unsigned int j = 0; j < count; j++) {\n+      print(\"  0x%\" PRIx64 \":\\t%s\\t\\t%s\\n\", insn[j].address, insn[j].mnemonic, insn[j].op_str);\n+    }\n+    cs_free(insn, count);\n+  }\n+\n+  cs_close(&cs_handle);\n+\n+  return NULL;\n+}\n","filename":"src\/utils\/hsdis\/capstone\/hsdis-capstone.c","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +75,5 @@\n+#ifdef __cplusplus\n+extern \"C\"\n+{\n+#endif\n+\n@@ -76,2 +81,2 @@\n-#ifdef DLL_EXPORT\n-  DLL_EXPORT\n+#ifdef _WIN32\n+__declspec(dllexport)\n@@ -90,2 +95,2 @@\n-#ifdef DLL_ENTRY\n-  DLL_ENTRY\n+#ifdef _WIN32\n+__declspec(dllexport)\n@@ -118,0 +123,5 @@\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n","filename":"src\/utils\/hsdis\/hsdis.h","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -0,0 +1,358 @@\n+\/*\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to\n+ * any person obtaining a copy of this software, associated documentation\n+ * and\/or data (collectively the \"Software\"), free of charge and under any\n+ * and all copyright rights in the Software, and any and all patent rights\n+ * owned or freely licensable by each licensor hereunder covering either (i)\n+ * the unmodified Software as contributed to or provided by such licensor,\n+ * or (ii) the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n+ * if one is included with the Software (each a \"Larger Work\" to which the\n+ * Software is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy,\n+ * create derivative works of, display, perform, and distribute the Software\n+ * and make, use, sell, offer for sale, import, export, have made, and have\n+ * sold the Software and the Larger Work(s), and to sublicense the foregoing\n+ * rights on either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or\n+ * at a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n+ * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n+ * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n+ * USE OR OTHER DEALINGS IN THE SOFTWARE.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/* hsdis.cpp -- dump a range of addresses as native instructions\n+   This implements the plugin protocol required by the\n+   HotSpot PrintAssembly option.\n+*\/\n+\n+#include <stdlib.h>\n+#include <stdio.h>\n+#include <errno.h>\n+#include <inttypes.h>\n+#include <string.h>\n+\n+#include <llvm-c\/Disassembler.h>\n+#include <llvm-c\/DisassemblerTypes.h>\n+#include <llvm-c\/Target.h>\n+#include <llvm-c\/TargetMachine.h>\n+\n+#include \"hsdis.h\"\n+\n+\/* short names for stuff in hsdis.h *\/\n+typedef decode_instructions_event_callback_ftype  event_callback_t;\n+typedef decode_instructions_printf_callback_ftype printf_callback_t;\n+\n+class hsdis_backend_base {\n+ protected:\n+  uintptr_t         _start_va;\n+  uintptr_t         _end_va;\n+  unsigned char*    _buffer;\n+  uintptr_t         _length;\n+  event_callback_t  _event_callback;\n+  void*             _event_stream;\n+  printf_callback_t _printf_callback;\n+  void*             _printf_stream;\n+  int               _do_newline;\n+\n+  bool              _losing;\n+  const char*       _arch_name;\n+\n+  virtual void print_help(const char* msg, const char* arg) = 0;\n+  virtual void print_insns_config() = 0;\n+  virtual size_t decode_instruction(uintptr_t p, uintptr_t start, uintptr_t end) = 0;\n+  virtual const char* format_insn_close(const char* close, char* buf, size_t bufsize) = 0;\n+\n+ private:\n+  \/* ignore all events, return a null *\/\n+  static void* null_event_callback(void* ignore_stream, const char* ignore_event, void* arg) {\n+    return NULL;\n+  }\n+\n+  \/* print all events as XML markup *\/\n+  static void* xml_event_callback(void* stream, const char* event, void* arg) {\n+    FILE* fp = (FILE*) stream;\n+#define NS_PFX \"dis:\"\n+    if (event[0] != '\/') {\n+      \/* issue the tag, with or without a formatted argument *\/\n+      fprintf(fp, \"<\" NS_PFX);\n+      fprintf(fp, event, arg);\n+      fprintf(fp, \">\");\n+    } else {\n+      ++event;                    \/* skip slash *\/\n+      const char* argp = strchr(event, ' ');\n+      if (argp == NULL) {\n+        \/* no arguments; just issue the closing tag *\/\n+        fprintf(fp, \"<\/\" NS_PFX \"%s>\", event);\n+      } else {\n+        \/* split out the closing attributes as <dis:foo_done attr='val'\/> *\/\n+        size_t event_prefix =(argp - event);\n+        fprintf(fp, \"<\" NS_PFX \"%.*s_done\", (int) event_prefix, event);\n+        fprintf(fp, argp, arg);\n+        fprintf(fp, \"\/><\/\" NS_PFX \"%.*s>\", (int) event_prefix, event);\n+      }\n+    }\n+#undef NS_PFX\n+    return NULL;\n+  }\n+\n+protected:\n+  hsdis_backend_base(uintptr_t start_va, uintptr_t end_va,\n+                     unsigned char* buffer, uintptr_t length,\n+                     event_callback_t  event_callback,  void* event_stream,\n+                     printf_callback_t printf_callback, void* printf_stream,\n+                     int do_newline) :\n+      _start_va(start_va), _end_va(end_va),\n+      _buffer(buffer), _length(length),\n+      _event_callback(event_callback), _event_stream(event_stream),\n+      _printf_callback(printf_callback), _printf_stream(printf_stream),\n+      _do_newline(do_newline),\n+      _losing(false), _arch_name(NULL)\n+  {\n+    \/* Make reasonable defaults for null callbacks.\n+      A non-null stream for a null callback is assumed to be a FILE* for output.\n+      Events are rendered as XML.\n+    *\/\n+    if (_printf_callback == NULL) {\n+      int (*fprintf_callback)(FILE*, const char*, ...) = &fprintf;\n+      FILE* fprintf_stream = stdout;\n+      _printf_callback = (printf_callback_t) fprintf_callback;\n+      if (_printf_stream == NULL)\n+        _printf_stream   = (void*)           fprintf_stream;\n+    }\n+    if (_event_callback == NULL) {\n+      if (_event_stream == NULL)\n+        _event_callback = (event_callback_t)&null_event_callback;\n+      else\n+        _event_callback = (event_callback_t)&xml_event_callback;\n+    }\n+  }\n+\n+ public:\n+  void* decode() {\n+    uintptr_t start = _start_va;\n+    uintptr_t end   = _end_va;\n+    uintptr_t p     = start;\n+\n+    (*_event_callback)(_event_stream, \"insns\", (void*)start);\n+\n+    print_insns_config();\n+\n+    while (p < end && !_losing) {\n+      (*_event_callback)(_event_stream, \"insn\", (void*) p);\n+\n+      size_t size = decode_instruction(p, start, end);\n+      if (size > 0)  p += size;\n+      else           _losing = true;\n+\n+      if (!_losing) {\n+        char buf[128];\n+        const char* insn_close = format_insn_close(\"\/insn\", buf, sizeof(buf));\n+        (*_event_callback)(_event_stream, insn_close, (void*) p);\n+\n+        if (_do_newline) {\n+          \/* follow each complete insn by a nice newline *\/\n+          (*_printf_callback)(_printf_stream, \"\\n\");\n+        }\n+      }\n+    }\n+\n+    if (_losing) (*_event_callback)(_event_stream, \"\/insns\", (void*) p);\n+    return (void*) p;\n+  }\n+};\n+\n+\n+class hsdis_backend : public hsdis_backend_base {\n+ private:\n+  LLVMDisasmContextRef      _dcontext;\n+  char                      _target_triple[128];\n+\n+  void parse_caller_options(const char* options) {\n+    memset(&_target_triple, 0, sizeof(_target_triple));\n+    const char* p;\n+    for (p = options; p != NULL; ) {\n+      const char* q = strchr(p, ',');\n+      size_t plen = (q == NULL) ? strlen(p) : ((q++) - p);\n+      if (plen == 4 && strncmp(p, \"help\", plen) == 0) {\n+        print_help(NULL, NULL);\n+      } else if (plen > 6 && strncmp(p, \"hsdis-\", 6) == 0) {\n+        \/\/ do not pass these to the next level\n+      } else if (plen >= 14 && strncmp(p, \"target_triple=\", 14) == 0) {\n+        char*  target_triple = _target_triple;\n+        size_t target_triple_size   = sizeof(_target_triple);\n+        target_triple_size -= 1;           \/*leave room for the null*\/\n+        if (plen > target_triple_size)  plen = target_triple_size;\n+        strncpy(target_triple, p, plen);\n+        target_triple[plen] = '\\0';\n+      }\n+      p = q;\n+    }\n+  }\n+\n+  const char* native_target_triple() {\n+    return LLVM_DEFAULT_TRIPLET;\n+  }\n+\n+ public:\n+  hsdis_backend(uintptr_t start_va, uintptr_t end_va,\n+                unsigned char* buffer, uintptr_t length,\n+                event_callback_t  event_callback,  void* event_stream,\n+                printf_callback_t printf_callback, void* printf_stream,\n+                const char* options, int newline)\n+    : hsdis_backend_base(start_va, end_va,\n+                         buffer, length,\n+                         event_callback, event_stream,\n+                         printf_callback, printf_stream,\n+                         newline),\n+      _dcontext(NULL) {\n+    \/* Look into _options for anything interesting. *\/\n+    if (options != NULL)\n+      parse_caller_options(options);\n+\n+    \/* Discover which architecture we are going to disassemble. *\/\n+    _arch_name = &_target_triple[0];\n+    if (_arch_name[0] == '\\0')\n+      _arch_name = native_target_triple();\n+\n+    if (LLVMInitializeNativeTarget() != 0) {\n+      static bool complained = false;\n+      if (!complained)\n+        (*_printf_callback)(_printf_stream, \"failed to initialize LLVM native target\\n\");\n+      complained = true;\n+      \/* must bail out *\/\n+      _losing = true;\n+      return;\n+    }\n+    if (LLVMInitializeNativeAsmPrinter() != 0) {\n+      static bool complained = false;\n+      if (!complained)\n+        (*_printf_callback)(_printf_stream, \"failed to initialize LLVM native asm printer\\n\");\n+      complained = true;\n+      \/* must bail out *\/\n+      _losing = true;\n+      return;\n+    }\n+    if (LLVMInitializeNativeDisassembler() != 0) {\n+      static bool complained = false;\n+      if (!complained)\n+        (*_printf_callback)(_printf_stream, \"failed to initialize LLVM native disassembler\\n\");\n+      complained = true;\n+      \/* must bail out *\/\n+      _losing = true;\n+      return;\n+    }\n+    if ((_dcontext = LLVMCreateDisasm(_arch_name, NULL, 0, NULL, NULL)) == NULL) {\n+      static bool complained = false;\n+      const char* bad = _arch_name;\n+      if (bad == &_target_triple[0])\n+        print_help(\"bad target_triple=%s\", bad);\n+      else if (!complained)\n+        print_help(\"bad native target_triple=%s; please port hsdis to this platform\", bad);\n+      complained = true;\n+      \/* must bail out *\/\n+      _losing = true;\n+      return;\n+    }\n+\n+    LLVMSetDisasmOptions(_dcontext, LLVMDisassembler_Option_PrintImmHex);\n+  }\n+\n+  ~hsdis_backend() {\n+    if (_dcontext != NULL) {\n+      LLVMDisasmDispose(_dcontext);\n+    }\n+  }\n+\n+ protected:\n+  virtual void print_help(const char* msg, const char* arg) {\n+    if (msg != NULL) {\n+      (*_printf_callback)(_printf_stream, \"hsdis: \");\n+      (*_printf_callback)(_printf_stream, msg, arg);\n+      (*_printf_callback)(_printf_stream, \"\\n\");\n+    }\n+    (*_printf_callback)(_printf_stream, \"hsdis output options:\\n\");\n+    (*_printf_callback)(_printf_stream, \"  target_triple=<triple> select disassembly target\\n\");\n+    (*_printf_callback)(_printf_stream, \"  help          print this message\\n\");\n+  }\n+\n+  virtual void print_insns_config() {\n+    (*_event_callback)(_event_stream, \"target_triple name='%s'\",\n+                      (void*) _arch_name);\n+  }\n+\n+  virtual size_t decode_instruction(uintptr_t p, uintptr_t start, uintptr_t end) {\n+    char buf[128];\n+    size_t size = LLVMDisasmInstruction(_dcontext, (uint8_t*)p, (uint64_t)(end - start), (uint64_t)p, buf, sizeof(buf));\n+    if (size > 0) {\n+      (*_printf_callback)(_printf_stream, \"%s\", buf);\n+    } else {\n+      \/\/ LLVM encountered an unknown instruction\n+      if (end - start >= 4) {\n+        \/\/ Print the following word and skip past it\n+        snprintf(buf, sizeof(buf), \"\\t.inst\\t#0x%08x ; undefined\", *(uint32_t*)p);\n+        size = 4;\n+      } else {\n+        snprintf(buf, sizeof(buf), \"\\t<invalid instruction, aborting hsdis>\");\n+      }\n+    }\n+    return size;\n+  }\n+\n+  virtual const char* format_insn_close(const char* close, char* buf, size_t bufsize) {\n+    return close;\n+  }\n+};\n+\n+\n+void* decode_instructions_virtual(uintptr_t start_va, uintptr_t end_va,\n+                            unsigned char* buffer, uintptr_t length,\n+                            event_callback_t  event_callback_arg,  void* event_stream_arg,\n+                            printf_callback_t printf_callback_arg, void* printf_stream_arg,\n+                            const char* options, int newline) {\n+  return hsdis_backend(start_va, end_va,\n+                       buffer, length,\n+                       event_callback_arg, event_stream_arg,\n+                       printf_callback_arg, printf_stream_arg,\n+                       options, newline == 0 ? false : true)\n+          .decode();\n+}\n+\n+\/* This is the compatability interface for older version of hotspot *\/\n+void* decode_instructions(void* start_pv, void* end_pv,\n+                    event_callback_t  event_callback_arg,  void* event_stream_arg,\n+                    printf_callback_t printf_callback_arg, void* printf_stream_arg,\n+                    const char* options) {\n+  return decode_instructions_virtual((uintptr_t)start_pv,\n+                                     (uintptr_t)end_pv,\n+                                     (unsigned char*)start_pv,\n+                                     (uintptr_t)end_pv - (uintptr_t)start_pv,\n+                                     event_callback_arg,\n+                                     event_stream_arg,\n+                                     printf_callback_arg,\n+                                     printf_stream_arg,\n+                                     options, false);\n+}\n","filename":"src\/utils\/hsdis\/llvm\/hsdis-llvm.cpp","additions":358,"deletions":0,"binary":false,"changes":358,"status":"added"},{"patch":"@@ -212,0 +212,1 @@\n+        self.isPostfixException = False\n@@ -214,1 +215,3 @@\n-        if (self._name.endswith(\"wi\")):\n+        if self.isPostfixException:\n+            return self._name\n+        elif (self._name.endswith(\"wi\")):\n@@ -216,0 +219,2 @@\n+        elif (self._name.endswith(\"i\") | self._name.endswith(\"w\")):\n+            return self._name[:len(self._name)-1]\n@@ -217,4 +222,1 @@\n-            if (self._name.endswith(\"i\") | self._name.endswith(\"w\")):\n-                return self._name[:len(self._name)-1]\n-            else:\n-                return self._name\n+            return self._name\n@@ -351,0 +353,6 @@\n+class PostfixExceptionOneRegOp(OneRegOp):\n+\n+    def __init__(self, op):\n+        OneRegOp.__init__(self, op)\n+        self.isPostfixException=True\n+\n@@ -600,0 +608,7 @@\n+\n+class PostfixExceptionOp(Op):\n+\n+    def __init__(self, op):\n+        Op.__init__(self, op)\n+        self.isPostfixException=True\n+\n@@ -1338,1 +1353,7 @@\n-generate (Op, [\"nop\", \"eret\", \"drps\", \"isb\"])\n+generate (Op, [\"nop\", \"yield\", \"wfe\", \"sev\", \"sevl\",\n+               \"autia1716\", \"autiasp\", \"autiaz\", \"autib1716\", \"autibsp\", \"autibz\",\n+               \"pacia1716\", \"paciasp\", \"paciaz\", \"pacib1716\", \"pacibsp\", \"pacibz\",\n+               \"eret\", \"drps\", \"isb\",])\n+\n+# Ensure the \"i\" is not stripped off the end of the instruction\n+generate (PostfixExceptionOp, [\"wfi\", \"xpaclri\"])\n@@ -1345,1 +1366,7 @@\n-generate (OneRegOp, [\"br\", \"blr\"])\n+generate (OneRegOp, [\"br\", \"blr\",\n+                     \"paciza\", \"pacizb\", \"pacdza\", \"pacdzb\",\n+                     \"autiza\", \"autizb\", \"autdza\", \"autdzb\", \"xpacd\",\n+                     \"braaz\", \"brabz\", \"blraaz\", \"blrabz\"])\n+\n+# Ensure the \"i\" is not stripped off the end of the instruction\n+generate (PostfixExceptionOneRegOp, [\"xpaci\"])\n@@ -1390,1 +1417,4 @@\n-          \"rev16\", \"rev32\", \"rev\", \"clz\", \"cls\"])\n+          \"rev16\", \"rev32\", \"rev\", \"clz\", \"cls\",\n+          \"pacia\",  \"pacib\", \"pacda\", \"pacdb\", \"autia\", \"autib\", \"autda\", \"autdb\",\n+          \"braa\", \"brab\", \"blraa\", \"blrab\"])\n+\n@@ -1795,0 +1825,1 @@\n+                       [\"bic\", \"ZPZ\", \"m\", \"dn\"],\n@@ -1841,2 +1872,2 @@\n-# compile for sve with 8.2 and sha3 because of SHA3 crypto extension.\n-subprocess.check_call([AARCH64_AS, \"-march=armv8.2-a+sha3+sve\", \"aarch64ops.s\", \"-o\", \"aarch64ops.o\"])\n+# compile for sve with 8.3 and sha3 because of SHA3 crypto extension.\n+subprocess.check_call([AARCH64_AS, \"-march=armv8.3-a+sha3+sve\", \"aarch64ops.s\", \"-o\", \"aarch64ops.o\"])\n","filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py","additions":41,"deletions":10,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -171,0 +171,16 @@\n+    __ yield();                                        \/\/       yield\n+    __ wfe();                                          \/\/       wfe\n+    __ sev();                                          \/\/       sev\n+    __ sevl();                                         \/\/       sevl\n+    __ autia1716();                                    \/\/       autia1716\n+    __ autiasp();                                      \/\/       autiasp\n+    __ autiaz();                                       \/\/       autiaz\n+    __ autib1716();                                    \/\/       autib1716\n+    __ autibsp();                                      \/\/       autibsp\n+    __ autibz();                                       \/\/       autibz\n+    __ pacia1716();                                    \/\/       pacia1716\n+    __ paciasp();                                      \/\/       paciasp\n+    __ paciaz();                                       \/\/       paciaz\n+    __ pacib1716();                                    \/\/       pacib1716\n+    __ pacibsp();                                      \/\/       pacibsp\n+    __ pacibz();                                       \/\/       pacibz\n@@ -175,0 +191,4 @@\n+\/\/ PostfixExceptionOp\n+    __ wfi();                                          \/\/       wfi\n+    __ xpaclri();                                      \/\/       xpaclri\n+\n@@ -182,0 +202,16 @@\n+    __ paciza(r10);                                    \/\/       paciza  x10\n+    __ pacizb(r27);                                    \/\/       pacizb  x27\n+    __ pacdza(r8);                                     \/\/       pacdza  x8\n+    __ pacdzb(r0);                                     \/\/       pacdzb  x0\n+    __ autiza(r1);                                     \/\/       autiza  x1\n+    __ autizb(r21);                                    \/\/       autizb  x21\n+    __ autdza(r17);                                    \/\/       autdza  x17\n+    __ autdzb(r29);                                    \/\/       autdzb  x29\n+    __ xpacd(r29);                                     \/\/       xpacd   x29\n+    __ braaz(r28);                                     \/\/       braaz   x28\n+    __ brabz(r1);                                      \/\/       brabz   x1\n+    __ blraaz(r23);                                    \/\/       blraaz  x23\n+    __ blrabz(r21);                                    \/\/       blrabz  x21\n+\n+\/\/ PostfixExceptionOneRegOp\n+    __ xpaci(r20);                                     \/\/       xpaci   x20\n@@ -184,6 +220,6 @@\n-    __ stxr(r10, r27, r8);                             \/\/       stxr    w10, x27, [x8]\n-    __ stlxr(r0, r1, r21);                             \/\/       stlxr   w0, x1, [x21]\n-    __ ldxr(r17, r29);                                 \/\/       ldxr    x17, [x29]\n-    __ ldaxr(r29, r28);                                \/\/       ldaxr   x29, [x28]\n-    __ stlr(r1, r23);                                  \/\/       stlr    x1, [x23]\n-    __ ldar(r21, r20);                                 \/\/       ldar    x21, [x20]\n+    __ stxr(r22, r27, r19);                            \/\/       stxr    w22, x27, [x19]\n+    __ stlxr(r11, r16, r6);                            \/\/       stlxr   w11, x16, [x6]\n+    __ ldxr(r17, r0);                                  \/\/       ldxr    x17, [x0]\n+    __ ldaxr(r4, r10);                                 \/\/       ldaxr   x4, [x10]\n+    __ stlr(r24, r22);                                 \/\/       stlr    x24, [x22]\n+    __ ldar(r10, r19);                                 \/\/       ldar    x10, [x19]\n@@ -192,6 +228,6 @@\n-    __ stxrw(r22, r27, r19);                           \/\/       stxr    w22, w27, [x19]\n-    __ stlxrw(r11, r16, r6);                           \/\/       stlxr   w11, w16, [x6]\n-    __ ldxrw(r17, r0);                                 \/\/       ldxr    w17, [x0]\n-    __ ldaxrw(r4, r10);                                \/\/       ldaxr   w4, [x10]\n-    __ stlrw(r24, r22);                                \/\/       stlr    w24, [x22]\n-    __ ldarw(r10, r19);                                \/\/       ldar    w10, [x19]\n+    __ stxrw(r1, r5, r30);                             \/\/       stxr    w1, w5, [x30]\n+    __ stlxrw(r8, r12, r17);                           \/\/       stlxr   w8, w12, [x17]\n+    __ ldxrw(r9, r14);                                 \/\/       ldxr    w9, [x14]\n+    __ ldaxrw(r7, r1);                                 \/\/       ldaxr   w7, [x1]\n+    __ stlrw(r5, r16);                                 \/\/       stlr    w5, [x16]\n+    __ ldarw(r2, r12);                                 \/\/       ldar    w2, [x12]\n@@ -200,6 +236,6 @@\n-    __ stxrh(r1, r5, r30);                             \/\/       stxrh   w1, w5, [x30]\n-    __ stlxrh(r8, r12, r17);                           \/\/       stlxrh  w8, w12, [x17]\n-    __ ldxrh(r9, r14);                                 \/\/       ldxrh   w9, [x14]\n-    __ ldaxrh(r7, r1);                                 \/\/       ldaxrh  w7, [x1]\n-    __ stlrh(r5, r16);                                 \/\/       stlrh   w5, [x16]\n-    __ ldarh(r2, r12);                                 \/\/       ldarh   w2, [x12]\n+    __ stxrh(r10, r12, r3);                            \/\/       stxrh   w10, w12, [x3]\n+    __ stlxrh(r28, r14, r26);                          \/\/       stlxrh  w28, w14, [x26]\n+    __ ldxrh(r30, r10);                                \/\/       ldxrh   w30, [x10]\n+    __ ldaxrh(r14, r21);                               \/\/       ldaxrh  w14, [x21]\n+    __ stlrh(r13, r9);                                 \/\/       stlrh   w13, [x9]\n+    __ ldarh(r22, r27);                                \/\/       ldarh   w22, [x27]\n@@ -208,6 +244,6 @@\n-    __ stxrb(r10, r12, r3);                            \/\/       stxrb   w10, w12, [x3]\n-    __ stlxrb(r28, r14, r26);                          \/\/       stlxrb  w28, w14, [x26]\n-    __ ldxrb(r30, r10);                                \/\/       ldxrb   w30, [x10]\n-    __ ldaxrb(r14, r21);                               \/\/       ldaxrb  w14, [x21]\n-    __ stlrb(r13, r9);                                 \/\/       stlrb   w13, [x9]\n-    __ ldarb(r22, r27);                                \/\/       ldarb   w22, [x27]\n+    __ stxrb(r28, r19, r11);                           \/\/       stxrb   w28, w19, [x11]\n+    __ stlxrb(r30, r19, r2);                           \/\/       stlxrb  w30, w19, [x2]\n+    __ ldxrb(r2, r23);                                 \/\/       ldxrb   w2, [x23]\n+    __ ldaxrb(r1, r0);                                 \/\/       ldaxrb  w1, [x0]\n+    __ stlrb(r12, r16);                                \/\/       stlrb   w12, [x16]\n+    __ ldarb(r13, r15);                                \/\/       ldarb   w13, [x15]\n@@ -216,4 +252,4 @@\n-    __ ldxp(r28, r19, r11);                            \/\/       ldxp    x28, x19, [x11]\n-    __ ldaxp(r30, r19, r2);                            \/\/       ldaxp   x30, x19, [x2]\n-    __ stxp(r2, r23, r1, r0);                          \/\/       stxp    w2, x23, x1, [x0]\n-    __ stlxp(r12, r16, r13, r15);                      \/\/       stlxp   w12, x16, x13, [x15]\n+    __ ldxp(r17, r21, r13);                            \/\/       ldxp    x17, x21, [x13]\n+    __ ldaxp(r11, r30, r8);                            \/\/       ldaxp   x11, x30, [x8]\n+    __ stxp(r24, r13, r11, r1);                        \/\/       stxp    w24, x13, x11, [x1]\n+    __ stlxp(r26, r21, r27, r13);                      \/\/       stlxp   w26, x21, x27, [x13]\n@@ -222,4 +258,4 @@\n-    __ ldxpw(r17, r21, r13);                           \/\/       ldxp    w17, w21, [x13]\n-    __ ldaxpw(r11, r30, r8);                           \/\/       ldaxp   w11, w30, [x8]\n-    __ stxpw(r24, r13, r11, r1);                       \/\/       stxp    w24, w13, w11, [x1]\n-    __ stlxpw(r26, r21, r27, r13);                     \/\/       stlxp   w26, w21, w27, [x13]\n+    __ ldxpw(r20, r3, r12);                            \/\/       ldxp    w20, w3, [x12]\n+    __ ldaxpw(r6, r1, r29);                            \/\/       ldaxp   w6, w1, [x29]\n+    __ stxpw(r6, r4, r11, r16);                        \/\/       stxp    w6, w4, w11, [x16]\n+    __ stlxpw(r4, r30, r12, r21);                      \/\/       stlxp   w4, w30, w12, [x21]\n@@ -229,16 +265,16 @@\n-    __ str(r11, Address(r20, -103));                   \/\/       str     x11, [x20, -103]\n-    __ strw(r28, Address(r16, 62));                    \/\/       str     w28, [x16, 62]\n-    __ strb(r27, Address(r9, -9));                     \/\/       strb    w27, [x9, -9]\n-    __ strh(r2, Address(r25, -50));                    \/\/       strh    w2, [x25, -50]\n-    __ ldr(r4, Address(r2, -241));                     \/\/       ldr     x4, [x2, -241]\n-    __ ldrw(r30, Address(r20, -31));                   \/\/       ldr     w30, [x20, -31]\n-    __ ldrb(r17, Address(r23, -23));                   \/\/       ldrb    w17, [x23, -23]\n-    __ ldrh(r29, Address(r26, -1));                    \/\/       ldrh    w29, [x26, -1]\n-    __ ldrsb(r1, Address(r9, 6));                      \/\/       ldrsb   x1, [x9, 6]\n-    __ ldrsh(r11, Address(r12, 19));                   \/\/       ldrsh   x11, [x12, 19]\n-    __ ldrshw(r11, Address(r1, -50));                  \/\/       ldrsh   w11, [x1, -50]\n-    __ ldrsw(r19, Address(r24, 41));                   \/\/       ldrsw   x19, [x24, 41]\n-    __ ldrd(v24, Address(r24, 95));                    \/\/       ldr     d24, [x24, 95]\n-    __ ldrs(v15, Address(r5, -43));                    \/\/       ldr     s15, [x5, -43]\n-    __ strd(v21, Address(r27, 1));                     \/\/       str     d21, [x27, 1]\n-    __ strs(v23, Address(r13, -107));                  \/\/       str     s23, [x13, -107]\n+    __ str(r6, Address(r27, 97));                      \/\/       str     x6, [x27, 97]\n+    __ strw(r17, Address(r10, 45));                    \/\/       str     w17, [x10, 45]\n+    __ strb(r26, Address(r22, -29));                   \/\/       strb    w26, [x22, -29]\n+    __ strh(r21, Address(r10, -50));                   \/\/       strh    w21, [x10, -50]\n+    __ ldr(r14, Address(r24, 125));                    \/\/       ldr     x14, [x24, 125]\n+    __ ldrw(r7, Address(r24, -16));                    \/\/       ldr     w7, [x24, -16]\n+    __ ldrb(r8, Address(r2, 13));                      \/\/       ldrb    w8, [x2, 13]\n+    __ ldrh(r30, Address(r25, -61));                   \/\/       ldrh    w30, [x25, -61]\n+    __ ldrsb(r3, Address(r12, -14));                   \/\/       ldrsb   x3, [x12, -14]\n+    __ ldrsh(r10, Address(r17, -28));                  \/\/       ldrsh   x10, [x17, -28]\n+    __ ldrshw(r21, Address(r3, -5));                   \/\/       ldrsh   w21, [x3, -5]\n+    __ ldrsw(r2, Address(r25, 23));                    \/\/       ldrsw   x2, [x25, 23]\n+    __ ldrd(v25, Address(r1, -69));                    \/\/       ldr     d25, [x1, -69]\n+    __ ldrs(v29, Address(r27, 6));                     \/\/       ldr     s29, [x27, 6]\n+    __ strd(v29, Address(r12, 41));                    \/\/       str     d29, [x12, 41]\n+    __ strs(v2, Address(r22, -115));                   \/\/       str     s2, [x22, -115]\n@@ -248,16 +284,16 @@\n-    __ str(r10, Address(__ pre(r0, 8)));               \/\/       str     x10, [x0, 8]!\n-    __ strw(r3, Address(__ pre(r0, 29)));              \/\/       str     w3, [x0, 29]!\n-    __ strb(r10, Address(__ pre(r14, 9)));             \/\/       strb    w10, [x14, 9]!\n-    __ strh(r29, Address(__ pre(r25, -3)));            \/\/       strh    w29, [x25, -3]!\n-    __ ldr(r12, Address(__ pre(r16, -144)));           \/\/       ldr     x12, [x16, -144]!\n-    __ ldrw(r12, Address(__ pre(r22, -6)));            \/\/       ldr     w12, [x22, -6]!\n-    __ ldrb(r13, Address(__ pre(r11, -10)));           \/\/       ldrb    w13, [x11, -10]!\n-    __ ldrh(r0, Address(__ pre(r21, -21)));            \/\/       ldrh    w0, [x21, -21]!\n-    __ ldrsb(r23, Address(__ pre(r6, 4)));             \/\/       ldrsb   x23, [x6, 4]!\n-    __ ldrsh(r3, Address(__ pre(r7, -53)));            \/\/       ldrsh   x3, [x7, -53]!\n-    __ ldrshw(r28, Address(__ pre(r4, -7)));           \/\/       ldrsh   w28, [x4, -7]!\n-    __ ldrsw(r24, Address(__ pre(r8, -18)));           \/\/       ldrsw   x24, [x8, -18]!\n-    __ ldrd(v14, Address(__ pre(r11, 12)));            \/\/       ldr     d14, [x11, 12]!\n-    __ ldrs(v19, Address(__ pre(r12, -67)));           \/\/       ldr     s19, [x12, -67]!\n-    __ strd(v20, Address(__ pre(r0, -253)));           \/\/       str     d20, [x0, -253]!\n-    __ strs(v8, Address(__ pre(r0, 64)));              \/\/       str     s8, [x0, 64]!\n+    __ str(r26, Address(__ pre(r5, 3)));               \/\/       str     x26, [x5, 3]!\n+    __ strw(r20, Address(__ pre(r5, -103)));           \/\/       str     w20, [x5, -103]!\n+    __ strb(r8, Address(__ pre(r12, -25)));            \/\/       strb    w8, [x12, -25]!\n+    __ strh(r20, Address(__ pre(r2, -57)));            \/\/       strh    w20, [x2, -57]!\n+    __ ldr(r14, Address(__ pre(r29, -234)));           \/\/       ldr     x14, [x29, -234]!\n+    __ ldrw(r13, Address(__ pre(r29, 4)));             \/\/       ldr     w13, [x29, 4]!\n+    __ ldrb(r24, Address(__ pre(r19, -9)));            \/\/       ldrb    w24, [x19, -9]!\n+    __ ldrh(r3, Address(__ pre(r27, -19)));            \/\/       ldrh    w3, [x27, -19]!\n+    __ ldrsb(r17, Address(__ pre(r1, -5)));            \/\/       ldrsb   x17, [x1, -5]!\n+    __ ldrsh(r17, Address(__ pre(r19, -13)));          \/\/       ldrsh   x17, [x19, -13]!\n+    __ ldrshw(r21, Address(__ pre(r11, -26)));         \/\/       ldrsh   w21, [x11, -26]!\n+    __ ldrsw(r1, Address(__ pre(r9, -60)));            \/\/       ldrsw   x1, [x9, -60]!\n+    __ ldrd(v26, Address(__ pre(r23, -247)));          \/\/       ldr     d26, [x23, -247]!\n+    __ ldrs(v22, Address(__ pre(r21, -127)));          \/\/       ldr     s22, [x21, -127]!\n+    __ strd(v13, Address(__ pre(r7, -216)));           \/\/       str     d13, [x7, -216]!\n+    __ strs(v12, Address(__ pre(r13, -104)));          \/\/       str     s12, [x13, -104]!\n@@ -267,16 +303,16 @@\n-    __ str(r3, Address(__ post(r28, -94)));            \/\/       str     x3, [x28], -94\n-    __ strw(r11, Address(__ post(r7, -54)));           \/\/       str     w11, [x7], -54\n-    __ strb(r27, Address(__ post(r10, -24)));          \/\/       strb    w27, [x10], -24\n-    __ strh(r6, Address(__ post(r7, 27)));             \/\/       strh    w6, [x7], 27\n-    __ ldr(r13, Address(__ post(r10, -202)));          \/\/       ldr     x13, [x10], -202\n-    __ ldrw(r15, Address(__ post(r5, -41)));           \/\/       ldr     w15, [x5], -41\n-    __ ldrb(r2, Address(__ post(r13, 9)));             \/\/       ldrb    w2, [x13], 9\n-    __ ldrh(r28, Address(__ post(r13, -20)));          \/\/       ldrh    w28, [x13], -20\n-    __ ldrsb(r9, Address(__ post(r13, -31)));          \/\/       ldrsb   x9, [x13], -31\n-    __ ldrsh(r3, Address(__ post(r24, -36)));          \/\/       ldrsh   x3, [x24], -36\n-    __ ldrshw(r20, Address(__ post(r3, 6)));           \/\/       ldrsh   w20, [x3], 6\n-    __ ldrsw(r7, Address(__ post(r19, -1)));           \/\/       ldrsw   x7, [x19], -1\n-    __ ldrd(v30, Address(__ post(r8, -130)));          \/\/       ldr     d30, [x8], -130\n-    __ ldrs(v25, Address(__ post(r15, 21)));           \/\/       ldr     s25, [x15], 21\n-    __ strd(v14, Address(__ post(r23, 90)));           \/\/       str     d14, [x23], 90\n-    __ strs(v8, Address(__ post(r0, -33)));            \/\/       str     s8, [x0], -33\n+    __ str(r20, Address(__ post(r5, -237)));           \/\/       str     x20, [x5], -237\n+    __ strw(r29, Address(__ post(r28, -74)));          \/\/       str     w29, [x28], -74\n+    __ strb(r4, Address(__ post(r24, -22)));           \/\/       strb    w4, [x24], -22\n+    __ strh(r13, Address(__ post(r9, -21)));           \/\/       strh    w13, [x9], -21\n+    __ ldr(r26, Address(__ post(r7, -55)));            \/\/       ldr     x26, [x7], -55\n+    __ ldrw(r13, Address(__ post(r3, -115)));          \/\/       ldr     w13, [x3], -115\n+    __ ldrb(r1, Address(__ post(r5, 12)));             \/\/       ldrb    w1, [x5], 12\n+    __ ldrh(r8, Address(__ post(r13, -34)));           \/\/       ldrh    w8, [x13], -34\n+    __ ldrsb(r23, Address(__ post(r20, -27)));         \/\/       ldrsb   x23, [x20], -27\n+    __ ldrsh(r20, Address(__ post(r6, -2)));           \/\/       ldrsh   x20, [x6], -2\n+    __ ldrshw(r9, Address(__ post(r17, -42)));         \/\/       ldrsh   w9, [x17], -42\n+    __ ldrsw(r21, Address(__ post(r6, -30)));          \/\/       ldrsw   x21, [x6], -30\n+    __ ldrd(v16, Address(__ post(r22, -29)));          \/\/       ldr     d16, [x22], -29\n+    __ ldrs(v9, Address(__ post(r11, -3)));            \/\/       ldr     s9, [x11], -3\n+    __ strd(v22, Address(__ post(r26, 60)));           \/\/       str     d22, [x26], 60\n+    __ strs(v16, Address(__ post(r29, -2)));           \/\/       str     s16, [x29], -2\n@@ -286,16 +322,16 @@\n-    __ str(r10, Address(r17, r21, Address::sxtw(3)));  \/\/       str     x10, [x17, w21, sxtw #3]\n-    __ strw(r4, Address(r13, r22, Address::sxtw(2)));  \/\/       str     w4, [x13, w22, sxtw #2]\n-    __ strb(r13, Address(r0, r19, Address::uxtw(0)));  \/\/       strb    w13, [x0, w19, uxtw #0]\n-    __ strh(r12, Address(r27, r6, Address::sxtw(0)));  \/\/       strh    w12, [x27, w6, sxtw #0]\n-    __ ldr(r0, Address(r8, r16, Address::lsl(0)));     \/\/       ldr     x0, [x8, x16, lsl #0]\n-    __ ldrw(r0, Address(r4, r26, Address::sxtx(0)));   \/\/       ldr     w0, [x4, x26, sxtx #0]\n-    __ ldrb(r14, Address(r25, r5, Address::sxtw(0)));  \/\/       ldrb    w14, [x25, w5, sxtw #0]\n-    __ ldrh(r9, Address(r4, r17, Address::uxtw(0)));   \/\/       ldrh    w9, [x4, w17, uxtw #0]\n-    __ ldrsb(r27, Address(r4, r7, Address::lsl(0)));   \/\/       ldrsb   x27, [x4, x7, lsl #0]\n-    __ ldrsh(r15, Address(r17, r30, Address::sxtw(0))); \/\/      ldrsh   x15, [x17, w30, sxtw #0]\n-    __ ldrshw(r16, Address(r0, r22, Address::sxtw(0))); \/\/      ldrsh   w16, [x0, w22, sxtw #0]\n-    __ ldrsw(r22, Address(r10, r30, Address::sxtx(2))); \/\/      ldrsw   x22, [x10, x30, sxtx #2]\n-    __ ldrd(v29, Address(r21, r10, Address::sxtx(3))); \/\/       ldr     d29, [x21, x10, sxtx #3]\n-    __ ldrs(v3, Address(r11, r19, Address::uxtw(0)));  \/\/       ldr     s3, [x11, w19, uxtw #0]\n-    __ strd(v13, Address(r28, r29, Address::uxtw(3))); \/\/       str     d13, [x28, w29, uxtw #3]\n-    __ strs(v23, Address(r29, r5, Address::sxtx(2)));  \/\/       str     s23, [x29, x5, sxtx #2]\n+    __ str(r1, Address(r22, r4, Address::sxtw(0)));    \/\/       str     x1, [x22, w4, sxtw #0]\n+    __ strw(r23, Address(r30, r13, Address::lsl(2)));  \/\/       str     w23, [x30, x13, lsl #2]\n+    __ strb(r12, Address(r11, r12, Address::uxtw(0))); \/\/       strb    w12, [x11, w12, uxtw #0]\n+    __ strh(r25, Address(r12, r0, Address::lsl(1)));   \/\/       strh    w25, [x12, x0, lsl #1]\n+    __ ldr(r17, Address(r7, r0, Address::uxtw(3)));    \/\/       ldr     x17, [x7, w0, uxtw #3]\n+    __ ldrw(r1, Address(r19, r14, Address::uxtw(2)));  \/\/       ldr     w1, [x19, w14, uxtw #2]\n+    __ ldrb(r12, Address(r2, r9, Address::lsl(0)));    \/\/       ldrb    w12, [x2, x9, lsl #0]\n+    __ ldrh(r22, Address(r9, r27, Address::sxtw(0)));  \/\/       ldrh    w22, [x9, w27, sxtw #0]\n+    __ ldrsb(r21, Address(r12, r15, Address::sxtx(0))); \/\/      ldrsb   x21, [x12, x15, sxtx #0]\n+    __ ldrsh(r28, Address(r6, r16, Address::lsl(1)));  \/\/       ldrsh   x28, [x6, x16, lsl #1]\n+    __ ldrshw(r25, Address(r17, r22, Address::sxtw(0))); \/\/     ldrsh   w25, [x17, w22, sxtw #0]\n+    __ ldrsw(r4, Address(r17, r29, Address::sxtx(0))); \/\/       ldrsw   x4, [x17, x29, sxtx #0]\n+    __ ldrd(v5, Address(r1, r3, Address::sxtx(3)));    \/\/       ldr     d5, [x1, x3, sxtx #3]\n+    __ ldrs(v24, Address(r17, r13, Address::uxtw(2))); \/\/       ldr     s24, [x17, w13, uxtw #2]\n+    __ strd(v17, Address(r17, r23, Address::sxtx(3))); \/\/       str     d17, [x17, x23, sxtx #3]\n+    __ strs(v17, Address(r30, r5, Address::sxtw(2)));  \/\/       str     s17, [x30, w5, sxtw #2]\n@@ -305,16 +341,16 @@\n-    __ str(r5, Address(r8, 12600));                    \/\/       str     x5, [x8, 12600]\n-    __ strw(r29, Address(r24, 7880));                  \/\/       str     w29, [x24, 7880]\n-    __ strb(r19, Address(r17, 1566));                  \/\/       strb    w19, [x17, 1566]\n-    __ strh(r13, Address(r19, 3984));                  \/\/       strh    w13, [x19, 3984]\n-    __ ldr(r19, Address(r23, 13632));                  \/\/       ldr     x19, [x23, 13632]\n-    __ ldrw(r23, Address(r29, 6264));                  \/\/       ldr     w23, [x29, 6264]\n-    __ ldrb(r22, Address(r11, 2012));                  \/\/       ldrb    w22, [x11, 2012]\n-    __ ldrh(r3, Address(r10, 3784));                   \/\/       ldrh    w3, [x10, 3784]\n-    __ ldrsb(r8, Address(r16, 1951));                  \/\/       ldrsb   x8, [x16, 1951]\n-    __ ldrsh(r23, Address(r20, 3346));                 \/\/       ldrsh   x23, [x20, 3346]\n-    __ ldrshw(r2, Address(r1, 3994));                  \/\/       ldrsh   w2, [x1, 3994]\n-    __ ldrsw(r4, Address(r17, 7204));                  \/\/       ldrsw   x4, [x17, 7204]\n-    __ ldrd(v20, Address(r27, 14400));                 \/\/       ldr     d20, [x27, 14400]\n-    __ ldrs(v25, Address(r14, 8096));                  \/\/       ldr     s25, [x14, 8096]\n-    __ strd(v26, Address(r10, 15024));                 \/\/       str     d26, [x10, 15024]\n-    __ strs(v9, Address(r3, 6936));                    \/\/       str     s9, [x3, 6936]\n+    __ str(r29, Address(r11, 14160));                  \/\/       str     x29, [x11, 14160]\n+    __ strw(r28, Address(r21, 7752));                  \/\/       str     w28, [x21, 7752]\n+    __ strb(r28, Address(r2, 1746));                   \/\/       strb    w28, [x2, 1746]\n+    __ strh(r0, Address(r28, 3296));                   \/\/       strh    w0, [x28, 3296]\n+    __ ldr(r25, Address(r7, 15408));                   \/\/       ldr     x25, [x7, 15408]\n+    __ ldrw(r0, Address(r3, 6312));                    \/\/       ldr     w0, [x3, 6312]\n+    __ ldrb(r30, Address(r5, 1992));                   \/\/       ldrb    w30, [x5, 1992]\n+    __ ldrh(r14, Address(r23, 3194));                  \/\/       ldrh    w14, [x23, 3194]\n+    __ ldrsb(r10, Address(r19, 1786));                 \/\/       ldrsb   x10, [x19, 1786]\n+    __ ldrsh(r29, Address(r17, 3482));                 \/\/       ldrsh   x29, [x17, 3482]\n+    __ ldrshw(r25, Address(r30, 3362));                \/\/       ldrsh   w25, [x30, 3362]\n+    __ ldrsw(r17, Address(r2, 7512));                  \/\/       ldrsw   x17, [x2, 7512]\n+    __ ldrd(v15, Address(r16, 15176));                 \/\/       ldr     d15, [x16, 15176]\n+    __ ldrs(v12, Address(r30, 6220));                  \/\/       ldr     s12, [x30, 6220]\n+    __ strd(v1, Address(r1, 15216));                   \/\/       str     d1, [x1, 15216]\n+    __ strs(v5, Address(r11, 7832));                   \/\/       str     s5, [x11, 7832]\n@@ -324,2 +360,2 @@\n-    __ ldr(r27, forth);                                \/\/       ldr     x27, forth\n-    __ ldrw(r11, __ pc());                             \/\/       ldr     w11, .\n+    __ ldr(r17, back);                                 \/\/       ldr     x17, back\n+    __ ldrw(r2, back);                                 \/\/       ldr     w2, back\n@@ -328,1 +364,1 @@\n-    __ prfm(Address(r3, -187));                        \/\/       prfm    PLDL1KEEP, [x3, -187]\n+    __ prfm(Address(r25, 111));                        \/\/       prfm    PLDL1KEEP, [x25, 111]\n@@ -331,1 +367,1 @@\n-    __ prfm(__ pc());                                  \/\/       prfm    PLDL1KEEP, .\n+    __ prfm(back);                                     \/\/       prfm    PLDL1KEEP, back\n@@ -334,1 +370,1 @@\n-    __ prfm(Address(r29, r14, Address::lsl(0)));       \/\/       prfm    PLDL1KEEP, [x29, x14, lsl #0]\n+    __ prfm(Address(r14, r27, Address::uxtw(0)));      \/\/       prfm    PLDL1KEEP, [x14, w27, uxtw #0]\n@@ -337,1 +373,1 @@\n-    __ prfm(Address(r4, 13312));                       \/\/       prfm    PLDL1KEEP, [x4, 13312]\n+    __ prfm(Address(r14, 12328));                      \/\/       prfm    PLDL1KEEP, [x14, 12328]\n@@ -340,8 +376,8 @@\n-    __ adcw(r21, r1, r7);                              \/\/       adc     w21, w1, w7\n-    __ adcsw(r8, r5, r7);                              \/\/       adcs    w8, w5, w7\n-    __ sbcw(r7, r27, r14);                             \/\/       sbc     w7, w27, w14\n-    __ sbcsw(r27, r4, r17);                            \/\/       sbcs    w27, w4, w17\n-    __ adc(r0, r28, r0);                               \/\/       adc     x0, x28, x0\n-    __ adcs(r12, r24, r30);                            \/\/       adcs    x12, x24, x30\n-    __ sbc(r0, r25, r15);                              \/\/       sbc     x0, x25, x15\n-    __ sbcs(r1, r24, r3);                              \/\/       sbcs    x1, x24, x3\n+    __ adcw(r0, r25, r15);                             \/\/       adc     w0, w25, w15\n+    __ adcsw(r1, r24, r3);                             \/\/       adcs    w1, w24, w3\n+    __ sbcw(r17, r24, r20);                            \/\/       sbc     w17, w24, w20\n+    __ sbcsw(r11, r0, r13);                            \/\/       sbcs    w11, w0, w13\n+    __ adc(r28, r10, r7);                              \/\/       adc     x28, x10, x7\n+    __ adcs(r4, r15, r16);                             \/\/       adcs    x4, x15, x16\n+    __ sbc(r2, r12, r20);                              \/\/       sbc     x2, x12, x20\n+    __ sbcs(r29, r13, r13);                            \/\/       sbcs    x29, x13, x13\n@@ -350,8 +386,8 @@\n-    __ addw(r17, r24, r20, ext::uxtb, 2);              \/\/       add     w17, w24, w20, uxtb #2\n-    __ addsw(r13, r28, r10, ext::uxth, 1);             \/\/       adds    w13, w28, w10, uxth #1\n-    __ sub(r15, r16, r2, ext::sxth, 2);                \/\/       sub     x15, x16, x2, sxth #2\n-    __ subsw(r29, r13, r13, ext::uxth, 2);             \/\/       subs    w29, w13, w13, uxth #2\n-    __ add(r12, r20, r12, ext::sxtw, 3);               \/\/       add     x12, x20, x12, sxtw #3\n-    __ adds(r30, r27, r11, ext::sxtb, 1);              \/\/       adds    x30, x27, x11, sxtb #1\n-    __ sub(r14, r7, r1, ext::sxtw, 2);                 \/\/       sub     x14, x7, x1, sxtw #2\n-    __ subs(r29, r3, r27, ext::sxth, 1);               \/\/       subs    x29, x3, x27, sxth #1\n+    __ addw(r14, r6, r12, ext::uxtx, 3);               \/\/       add     w14, w6, w12, uxtx #3\n+    __ addsw(r17, r25, r30, ext::uxtw, 4);             \/\/       adds    w17, w25, w30, uxtw #4\n+    __ sub(r0, r17, r14, ext::uxtb, 1);                \/\/       sub     x0, x17, x14, uxtb #1\n+    __ subsw(r9, r24, r29, ext::sxtx, 1);              \/\/       subs    w9, w24, w29, sxtx #1\n+    __ add(r1, r22, r0, ext::sxtw, 2);                 \/\/       add     x1, x22, x0, sxtw #2\n+    __ adds(r12, r28, r22, ext::uxth, 3);              \/\/       adds    x12, x28, x22, uxth #3\n+    __ sub(r10, r12, r17, ext::uxtw, 4);               \/\/       sub     x10, x12, x17, uxtw #4\n+    __ subs(r15, r28, r10, ext::sxtw, 3);              \/\/       subs    x15, x28, x10, sxtw #3\n@@ -360,4 +396,4 @@\n-    __ ccmnw(r0, r13, 14u, Assembler::MI);             \/\/       ccmn    w0, w13, #14, MI\n-    __ ccmpw(r22, r17, 6u, Assembler::CC);             \/\/       ccmp    w22, w17, #6, CC\n-    __ ccmn(r17, r30, 14u, Assembler::VS);             \/\/       ccmn    x17, x30, #14, VS\n-    __ ccmp(r10, r19, 12u, Assembler::HI);             \/\/       ccmp    x10, x19, #12, HI\n+    __ ccmnw(r19, r23, 2u, Assembler::LE);             \/\/       ccmn    w19, w23, #2, LE\n+    __ ccmpw(r17, r9, 6u, Assembler::LO);              \/\/       ccmp    w17, w9, #6, LO\n+    __ ccmn(r21, r8, 2u, Assembler::CC);               \/\/       ccmn    x21, x8, #2, CC\n+    __ ccmp(r19, r5, 1u, Assembler::MI);               \/\/       ccmp    x19, x5, #1, MI\n@@ -366,4 +402,4 @@\n-    __ ccmnw(r6, 18, 2, Assembler::LE);                \/\/       ccmn    w6, #18, #2, LE\n-    __ ccmpw(r9, 13, 4, Assembler::HI);                \/\/       ccmp    w9, #13, #4, HI\n-    __ ccmn(r21, 11, 11, Assembler::LO);               \/\/       ccmn    x21, #11, #11, LO\n-    __ ccmp(r4, 13, 2, Assembler::VC);                 \/\/       ccmp    x4, #13, #2, VC\n+    __ ccmnw(r22, 17, 12, Assembler::HI);              \/\/       ccmn    w22, #17, #12, HI\n+    __ ccmpw(r17, 7, 3, Assembler::HS);                \/\/       ccmp    w17, #7, #3, HS\n+    __ ccmn(r16, 28, 5, Assembler::LT);                \/\/       ccmn    x16, #28, #5, LT\n+    __ ccmp(r22, 3, 5, Assembler::LS);                 \/\/       ccmp    x22, #3, #5, LS\n@@ -372,8 +408,8 @@\n-    __ cselw(r12, r2, r22, Assembler::HI);             \/\/       csel    w12, w2, w22, HI\n-    __ csincw(r24, r16, r17, Assembler::HS);           \/\/       csinc   w24, w16, w17, HS\n-    __ csinvw(r6, r7, r16, Assembler::LT);             \/\/       csinv   w6, w7, w16, LT\n-    __ csnegw(r11, r27, r22, Assembler::LS);           \/\/       csneg   w11, w27, w22, LS\n-    __ csel(r10, r3, r29, Assembler::LT);              \/\/       csel    x10, x3, x29, LT\n-    __ csinc(r12, r26, r27, Assembler::CC);            \/\/       csinc   x12, x26, x27, CC\n-    __ csinv(r15, r10, r21, Assembler::GT);            \/\/       csinv   x15, x10, x21, GT\n-    __ csneg(r30, r23, r9, Assembler::GT);             \/\/       csneg   x30, x23, x9, GT\n+    __ cselw(r29, r26, r12, Assembler::LT);            \/\/       csel    w29, w26, w12, LT\n+    __ csincw(r27, r10, r15, Assembler::CC);           \/\/       csinc   w27, w10, w15, CC\n+    __ csinvw(r21, r28, r30, Assembler::LS);           \/\/       csinv   w21, w28, w30, LS\n+    __ csnegw(r9, r27, r30, Assembler::CC);            \/\/       csneg   w9, w27, w30, CC\n+    __ csel(r29, r15, r29, Assembler::LE);             \/\/       csel    x29, x15, x29, LE\n+    __ csinc(r25, r21, r4, Assembler::EQ);             \/\/       csinc   x25, x21, x4, EQ\n+    __ csinv(r17, r21, r29, Assembler::VS);            \/\/       csinv   x17, x21, x29, VS\n+    __ csneg(r21, r20, r6, Assembler::HI);             \/\/       csneg   x21, x20, x6, HI\n@@ -382,11 +418,23 @@\n-    __ rbitw(r30, r10);                                \/\/       rbit    w30, w10\n-    __ rev16w(r29, r15);                               \/\/       rev16   w29, w15\n-    __ revw(r29, r30);                                 \/\/       rev     w29, w30\n-    __ clzw(r25, r21);                                 \/\/       clz     w25, w21\n-    __ clsw(r4, r0);                                   \/\/       cls     w4, w0\n-    __ rbit(r17, r21);                                 \/\/       rbit    x17, x21\n-    __ rev16(r29, r16);                                \/\/       rev16   x29, x16\n-    __ rev32(r21, r20);                                \/\/       rev32   x21, x20\n-    __ rev(r6, r19);                                   \/\/       rev     x6, x19\n-    __ clz(r30, r3);                                   \/\/       clz     x30, x3\n-    __ cls(r21, r19);                                  \/\/       cls     x21, x19\n+    __ rbitw(r30, r3);                                 \/\/       rbit    w30, w3\n+    __ rev16w(r21, r19);                               \/\/       rev16   w21, w19\n+    __ revw(r11, r24);                                 \/\/       rev     w11, w24\n+    __ clzw(r0, r27);                                  \/\/       clz     w0, w27\n+    __ clsw(r25, r14);                                 \/\/       cls     w25, w14\n+    __ rbit(r3, r14);                                  \/\/       rbit    x3, x14\n+    __ rev16(r17, r7);                                 \/\/       rev16   x17, x7\n+    __ rev32(r15, r24);                                \/\/       rev32   x15, x24\n+    __ rev(r28, r17);                                  \/\/       rev     x28, x17\n+    __ clz(r25, r2);                                   \/\/       clz     x25, x2\n+    __ cls(r26, r28);                                  \/\/       cls     x26, x28\n+    __ pacia(r5, r25);                                 \/\/       pacia   x5, x25\n+    __ pacib(r26, r27);                                \/\/       pacib   x26, x27\n+    __ pacda(r16, r17);                                \/\/       pacda   x16, x17\n+    __ pacdb(r6, r21);                                 \/\/       pacdb   x6, x21\n+    __ autia(r12, r0);                                 \/\/       autia   x12, x0\n+    __ autib(r4, r12);                                 \/\/       autib   x4, x12\n+    __ autda(r27, r17);                                \/\/       autda   x27, x17\n+    __ autdb(r28, r28);                                \/\/       autdb   x28, x28\n+    __ braa(r2, r17);                                  \/\/       braa    x2, x17\n+    __ brab(r10, r15);                                 \/\/       brab    x10, x15\n+    __ blraa(r14, r14);                                \/\/       blraa   x14, x14\n+    __ blrab(r3, r25);                                 \/\/       blrab   x3, x25\n@@ -395,14 +443,14 @@\n-    __ udivw(r11, r24, r0);                            \/\/       udiv    w11, w24, w0\n-    __ sdivw(r27, r25, r14);                           \/\/       sdiv    w27, w25, w14\n-    __ lslvw(r3, r14, r17);                            \/\/       lslv    w3, w14, w17\n-    __ lsrvw(r7, r15, r24);                            \/\/       lsrv    w7, w15, w24\n-    __ asrvw(r28, r17, r25);                           \/\/       asrv    w28, w17, w25\n-    __ rorvw(r2, r26, r28);                            \/\/       rorv    w2, w26, w28\n-    __ udiv(r5, r25, r26);                             \/\/       udiv    x5, x25, x26\n-    __ sdiv(r27, r16, r17);                            \/\/       sdiv    x27, x16, x17\n-    __ lslv(r6, r21, r12);                             \/\/       lslv    x6, x21, x12\n-    __ lsrv(r0, r4, r12);                              \/\/       lsrv    x0, x4, x12\n-    __ asrv(r27, r17, r28);                            \/\/       asrv    x27, x17, x28\n-    __ rorv(r28, r2, r17);                             \/\/       rorv    x28, x2, x17\n-    __ umulh(r10, r15, r14);                           \/\/       umulh   x10, x15, x14\n-    __ smulh(r14, r3, r25);                            \/\/       smulh   x14, x3, x25\n+    __ udivw(r15, r19, r14);                           \/\/       udiv    w15, w19, w14\n+    __ sdivw(r5, r16, r4);                             \/\/       sdiv    w5, w16, w4\n+    __ lslvw(r26, r25, r4);                            \/\/       lslv    w26, w25, w4\n+    __ lsrvw(r2, r2, r12);                             \/\/       lsrv    w2, w2, w12\n+    __ asrvw(r29, r17, r8);                            \/\/       asrv    w29, w17, w8\n+    __ rorvw(r7, r3, r4);                              \/\/       rorv    w7, w3, w4\n+    __ udiv(r25, r4, r26);                             \/\/       udiv    x25, x4, x26\n+    __ sdiv(r25, r4, r17);                             \/\/       sdiv    x25, x4, x17\n+    __ lslv(r0, r26, r17);                             \/\/       lslv    x0, x26, x17\n+    __ lsrv(r23, r15, r21);                            \/\/       lsrv    x23, x15, x21\n+    __ asrv(r28, r17, r27);                            \/\/       asrv    x28, x17, x27\n+    __ rorv(r10, r3, r0);                              \/\/       rorv    x10, x3, x0\n+    __ umulh(r7, r25, r9);                             \/\/       umulh   x7, x25, x9\n+    __ smulh(r6, r15, r29);                            \/\/       smulh   x6, x15, x29\n@@ -411,8 +459,8 @@\n-    __ maddw(r15, r19, r14, r5);                       \/\/       madd    w15, w19, w14, w5\n-    __ msubw(r16, r4, r26, r25);                       \/\/       msub    w16, w4, w26, w25\n-    __ madd(r4, r2, r2, r12);                          \/\/       madd    x4, x2, x2, x12\n-    __ msub(r29, r17, r8, r7);                         \/\/       msub    x29, x17, x8, x7\n-    __ smaddl(r3, r4, r25, r4);                        \/\/       smaddl  x3, w4, w25, x4\n-    __ smsubl(r26, r25, r4, r17);                      \/\/       smsubl  x26, w25, w4, x17\n-    __ umaddl(r0, r26, r17, r23);                      \/\/       umaddl  x0, w26, w17, x23\n-    __ umsubl(r15, r21, r28, r17);                     \/\/       umsubl  x15, w21, w28, x17\n+    __ maddw(r15, r10, r2, r17);                       \/\/       madd    w15, w10, w2, w17\n+    __ msubw(r7, r11, r11, r23);                       \/\/       msub    w7, w11, w11, w23\n+    __ madd(r7, r29, r23, r14);                        \/\/       madd    x7, x29, x23, x14\n+    __ msub(r27, r11, r11, r4);                        \/\/       msub    x27, x11, x11, x4\n+    __ smaddl(r24, r12, r15, r14);                     \/\/       smaddl  x24, w12, w15, x14\n+    __ smsubl(r20, r11, r28, r13);                     \/\/       smsubl  x20, w11, w28, x13\n+    __ umaddl(r11, r12, r23, r30);                     \/\/       umaddl  x11, w12, w23, x30\n+    __ umsubl(r26, r14, r9, r13);                      \/\/       umsubl  x26, w14, w9, x13\n@@ -421,10 +469,10 @@\n-    __ fabds(v27, v10, v3);                            \/\/       fabd    s27, s10, s3\n-    __ fmuls(v0, v7, v25);                             \/\/       fmul    s0, s7, s25\n-    __ fdivs(v9, v6, v15);                             \/\/       fdiv    s9, s6, s15\n-    __ fadds(v29, v15, v10);                           \/\/       fadd    s29, s15, s10\n-    __ fsubs(v2, v17, v7);                             \/\/       fsub    s2, s17, s7\n-    __ fabdd(v11, v11, v23);                           \/\/       fabd    d11, d11, d23\n-    __ fmuld(v7, v29, v23);                            \/\/       fmul    d7, d29, d23\n-    __ fdivd(v14, v27, v11);                           \/\/       fdiv    d14, d27, d11\n-    __ faddd(v11, v4, v24);                            \/\/       fadd    d11, d4, d24\n-    __ fsubd(v12, v15, v14);                           \/\/       fsub    d12, d15, d14\n+    __ fabds(v10, v7, v5);                             \/\/       fabd    s10, s7, s5\n+    __ fmuls(v29, v15, v3);                            \/\/       fmul    s29, s15, s3\n+    __ fdivs(v11, v12, v15);                           \/\/       fdiv    s11, s12, s15\n+    __ fadds(v30, v30, v17);                           \/\/       fadd    s30, s30, s17\n+    __ fsubs(v19, v20, v15);                           \/\/       fsub    s19, s20, s15\n+    __ fabdd(v15, v9, v21);                            \/\/       fabd    d15, d9, d21\n+    __ fmuld(v2, v9, v27);                             \/\/       fmul    d2, d9, d27\n+    __ fdivd(v7, v29, v30);                            \/\/       fdiv    d7, d29, d30\n+    __ faddd(v17, v1, v2);                             \/\/       fadd    d17, d1, d2\n+    __ fsubd(v6, v10, v3);                             \/\/       fsub    d6, d10, d3\n@@ -433,8 +481,8 @@\n-    __ fmadds(v20, v11, v28, v13);                     \/\/       fmadd   s20, s11, s28, s13\n-    __ fmsubs(v11, v12, v23, v30);                     \/\/       fmsub   s11, s12, s23, s30\n-    __ fnmadds(v26, v14, v9, v13);                     \/\/       fnmadd  s26, s14, s9, s13\n-    __ fnmadds(v10, v7, v5, v29);                      \/\/       fnmadd  s10, s7, s5, s29\n-    __ fmaddd(v15, v3, v11, v12);                      \/\/       fmadd   d15, d3, d11, d12\n-    __ fmsubd(v15, v30, v30, v17);                     \/\/       fmsub   d15, d30, d30, d17\n-    __ fnmaddd(v19, v20, v15, v15);                    \/\/       fnmadd  d19, d20, d15, d15\n-    __ fnmaddd(v9, v21, v2, v9);                       \/\/       fnmadd  d9, d21, d2, d9\n+    __ fmadds(v24, v11, v7, v1);                       \/\/       fmadd   s24, s11, s7, s1\n+    __ fmsubs(v11, v0, v3, v17);                       \/\/       fmsub   s11, s0, s3, s17\n+    __ fnmadds(v28, v6, v22, v6);                      \/\/       fnmadd  s28, s6, s22, s6\n+    __ fnmadds(v0, v27, v26, v2);                      \/\/       fnmadd  s0, s27, s26, s2\n+    __ fmaddd(v5, v7, v28, v11);                       \/\/       fmadd   d5, d7, d28, d11\n+    __ fmsubd(v25, v13, v11, v23);                     \/\/       fmsub   d25, d13, d11, d23\n+    __ fnmaddd(v19, v8, v17, v21);                     \/\/       fnmadd  d19, d8, d17, d21\n+    __ fnmaddd(v25, v20, v19, v17);                    \/\/       fnmadd  d25, d20, d19, d17\n@@ -443,10 +491,10 @@\n-    __ fmovs(v27, v7);                                 \/\/       fmov    s27, s7\n-    __ fabss(v29, v30);                                \/\/       fabs    s29, s30\n-    __ fnegs(v17, v1);                                 \/\/       fneg    s17, s1\n-    __ fsqrts(v2, v6);                                 \/\/       fsqrt   s2, s6\n-    __ fcvts(v10, v3);                                 \/\/       fcvt    d10, s3\n-    __ fmovd(v24, v11);                                \/\/       fmov    d24, d11\n-    __ fabsd(v7, v1);                                  \/\/       fabs    d7, d1\n-    __ fnegd(v11, v0);                                 \/\/       fneg    d11, d0\n-    __ fsqrtd(v3, v17);                                \/\/       fsqrt   d3, d17\n-    __ fcvtd(v28, v6);                                 \/\/       fcvt    s28, d6\n+    __ fmovs(v2, v29);                                 \/\/       fmov    s2, s29\n+    __ fabss(v22, v8);                                 \/\/       fabs    s22, s8\n+    __ fnegs(v21, v19);                                \/\/       fneg    s21, s19\n+    __ fsqrts(v20, v11);                               \/\/       fsqrt   s20, s11\n+    __ fcvts(v17, v20);                                \/\/       fcvt    d17, s20\n+    __ fmovd(v6, v15);                                 \/\/       fmov    d6, d15\n+    __ fabsd(v3, v3);                                  \/\/       fabs    d3, d3\n+    __ fnegd(v28, v3);                                 \/\/       fneg    d28, d3\n+    __ fsqrtd(v27, v14);                               \/\/       fsqrt   d27, d14\n+    __ fcvtd(v14, v10);                                \/\/       fcvt    s14, d10\n@@ -455,12 +503,12 @@\n-    __ fcvtzsw(r22, v6);                               \/\/       fcvtzs  w22, s6\n-    __ fcvtzs(r0, v27);                                \/\/       fcvtzs  x0, s27\n-    __ fcvtzdw(r26, v2);                               \/\/       fcvtzs  w26, d2\n-    __ fcvtzd(r5, v7);                                 \/\/       fcvtzs  x5, d7\n-    __ scvtfws(v28, r11);                              \/\/       scvtf   s28, w11\n-    __ scvtfs(v25, r13);                               \/\/       scvtf   s25, x13\n-    __ scvtfwd(v11, r23);                              \/\/       scvtf   d11, w23\n-    __ scvtfd(v19, r8);                                \/\/       scvtf   d19, x8\n-    __ fmovs(r17, v21);                                \/\/       fmov    w17, s21\n-    __ fmovd(r25, v20);                                \/\/       fmov    x25, d20\n-    __ fmovs(v19, r17);                                \/\/       fmov    s19, w17\n-    __ fmovd(v2, r29);                                 \/\/       fmov    d2, x29\n+    __ fcvtzsw(r12, v11);                              \/\/       fcvtzs  w12, s11\n+    __ fcvtzs(r17, v10);                               \/\/       fcvtzs  x17, s10\n+    __ fcvtzdw(r25, v7);                               \/\/       fcvtzs  w25, d7\n+    __ fcvtzd(r7, v14);                                \/\/       fcvtzs  x7, d14\n+    __ scvtfws(v28, r0);                               \/\/       scvtf   s28, w0\n+    __ scvtfs(v22, r0);                                \/\/       scvtf   s22, x0\n+    __ scvtfwd(v12, r23);                              \/\/       scvtf   d12, w23\n+    __ scvtfd(v13, r13);                               \/\/       scvtf   d13, x13\n+    __ fmovs(r7, v14);                                 \/\/       fmov    w7, s14\n+    __ fmovd(r7, v8);                                  \/\/       fmov    x7, d8\n+    __ fmovs(v20, r17);                                \/\/       fmov    s20, w17\n+    __ fmovd(v28, r30);                                \/\/       fmov    d28, x30\n@@ -469,2 +517,2 @@\n-    __ fcmps(v22, v8);                                 \/\/       fcmp    s22, s8\n-    __ fcmpd(v21, v19);                                \/\/       fcmp    d21, d19\n+    __ fcmps(v16, v2);                                 \/\/       fcmp    s16, s2\n+    __ fcmpd(v9, v16);                                 \/\/       fcmp    d9, d16\n@@ -472,1 +520,1 @@\n-    __ fcmpd(v11, 0.0);                                \/\/       fcmp    d11, #0.0\n+    __ fcmpd(v29, 0.0);                                \/\/       fcmp    d29, #0.0\n@@ -475,5 +523,5 @@\n-    __ stpw(r20, r6, Address(r15, -32));               \/\/       stp     w20, w6, [x15, #-32]\n-    __ ldpw(r27, r14, Address(r3, -208));              \/\/       ldp     w27, w14, [x3, #-208]\n-    __ ldpsw(r16, r10, Address(r11, -80));             \/\/       ldpsw   x16, x10, [x11, #-80]\n-    __ stp(r7, r7, Address(r14, 64));                  \/\/       stp     x7, x7, [x14, #64]\n-    __ ldp(r12, r23, Address(r0, 112));                \/\/       ldp     x12, x23, [x0, #112]\n+    __ stpw(r1, r26, Address(r24, -208));              \/\/       stp     w1, w26, [x24, #-208]\n+    __ ldpw(r5, r11, Address(r12, 48));                \/\/       ldp     w5, w11, [x12, #48]\n+    __ ldpsw(r21, r15, Address(r27, 48));              \/\/       ldpsw   x21, x15, [x27, #48]\n+    __ stp(r5, r28, Address(r22, 32));                 \/\/       stp     x5, x28, [x22, #32]\n+    __ ldp(r27, r17, Address(r19, -32));               \/\/       ldp     x27, x17, [x19, #-32]\n@@ -482,5 +530,5 @@\n-    __ stpw(r13, r7, Address(__ pre(r6, -80)));        \/\/       stp     w13, w7, [x6, #-80]!\n-    __ ldpw(r30, r15, Address(__ pre(r2, -144)));      \/\/       ldp     w30, w15, [x2, #-144]!\n-    __ ldpsw(r4, r1, Address(__ pre(r27, -144)));      \/\/       ldpsw   x4, x1, [x27, #-144]!\n-    __ stp(r23, r14, Address(__ pre(r11, 64)));        \/\/       stp     x23, x14, [x11, #64]!\n-    __ ldp(r29, r27, Address(__ pre(r21, -192)));      \/\/       ldp     x29, x27, [x21, #-192]!\n+    __ stpw(r13, r7, Address(__ pre(r26, -176)));      \/\/       stp     w13, w7, [x26, #-176]!\n+    __ ldpw(r13, r21, Address(__ pre(r6, -48)));       \/\/       ldp     w13, w21, [x6, #-48]!\n+    __ ldpsw(r20, r30, Address(__ pre(r27, 16)));      \/\/       ldpsw   x20, x30, [x27, #16]!\n+    __ stp(r21, r5, Address(__ pre(r10, -128)));       \/\/       stp     x21, x5, [x10, #-128]!\n+    __ ldp(r14, r4, Address(__ pre(r23, -96)));        \/\/       ldp     x14, x4, [x23, #-96]!\n@@ -489,5 +537,5 @@\n-    __ stpw(r22, r5, Address(__ post(r21, -48)));      \/\/       stp     w22, w5, [x21], #-48\n-    __ ldpw(r27, r17, Address(__ post(r6, -32)));      \/\/       ldp     w27, w17, [x6], #-32\n-    __ ldpsw(r16, r5, Address(__ post(r1, -80)));      \/\/       ldpsw   x16, x5, [x1], #-80\n-    __ stp(r13, r20, Address(__ post(r22, -208)));     \/\/       stp     x13, x20, [x22], #-208\n-    __ ldp(r30, r27, Address(__ post(r10, 80)));       \/\/       ldp     x30, x27, [x10], #80\n+    __ stpw(r29, r12, Address(__ post(r16, 32)));      \/\/       stp     w29, w12, [x16], #32\n+    __ ldpw(r26, r17, Address(__ post(r27, 96)));      \/\/       ldp     w26, w17, [x27], #96\n+    __ ldpsw(r4, r20, Address(__ post(r14, -96)));     \/\/       ldpsw   x4, x20, [x14], #-96\n+    __ stp(r16, r2, Address(__ post(r14, -112)));      \/\/       stp     x16, x2, [x14], #-112\n+    __ ldp(r23, r24, Address(__ post(r7, -256)));      \/\/       ldp     x23, x24, [x7], #-256\n@@ -496,4 +544,4 @@\n-    __ stnpw(r5, r17, Address(r11, 16));               \/\/       stnp    w5, w17, [x11, #16]\n-    __ ldnpw(r14, r4, Address(r26, -96));              \/\/       ldnp    w14, w4, [x26, #-96]\n-    __ stnp(r23, r29, Address(r12, 32));               \/\/       stnp    x23, x29, [x12, #32]\n-    __ ldnp(r0, r6, Address(r21, -80));                \/\/       ldnp    x0, x6, [x21, #-80]\n+    __ stnpw(r0, r26, Address(r15, 128));              \/\/       stnp    w0, w26, [x15, #128]\n+    __ ldnpw(r26, r6, Address(r8, -208));              \/\/       ldnp    w26, w6, [x8, #-208]\n+    __ stnp(r15, r10, Address(r25, -112));             \/\/       stnp    x15, x10, [x25, #-112]\n+    __ ldnp(r16, r1, Address(r19, -160));              \/\/       ldnp    x16, x1, [x19, #-160]\n@@ -502,22 +550,22 @@\n-    __ ld1(v15, __ T8B, Address(r26));                 \/\/       ld1     {v15.8B}, [x26]\n-    __ ld1(v23, v24, __ T16B, Address(__ post(r11, 32))); \/\/    ld1     {v23.16B, v24.16B}, [x11], 32\n-    __ ld1(v8, v9, v10, __ T1D, Address(__ post(r23, r7))); \/\/  ld1     {v8.1D, v9.1D, v10.1D}, [x23], x7\n-    __ ld1(v19, v20, v21, v22, __ T8H, Address(__ post(r25, 64))); \/\/   ld1     {v19.8H, v20.8H, v21.8H, v22.8H}, [x25], 64\n-    __ ld1r(v29, __ T8B, Address(r17));                \/\/       ld1r    {v29.8B}, [x17]\n-    __ ld1r(v24, __ T4S, Address(__ post(r23, 4)));    \/\/       ld1r    {v24.4S}, [x23], 4\n-    __ ld1r(v10, __ T1D, Address(__ post(r5, r25)));   \/\/       ld1r    {v10.1D}, [x5], x25\n-    __ ld2(v17, v18, __ T2D, Address(r10));            \/\/       ld2     {v17.2D, v18.2D}, [x10]\n-    __ ld2(v12, v13, __ T4H, Address(__ post(r15, 16))); \/\/     ld2     {v12.4H, v13.4H}, [x15], 16\n-    __ ld2r(v25, v26, __ T16B, Address(r17));          \/\/       ld2r    {v25.16B, v26.16B}, [x17]\n-    __ ld2r(v1, v2, __ T2S, Address(__ post(r30, 8))); \/\/       ld2r    {v1.2S, v2.2S}, [x30], 8\n-    __ ld2r(v16, v17, __ T2D, Address(__ post(r17, r9))); \/\/    ld2r    {v16.2D, v17.2D}, [x17], x9\n-    __ ld3(v25, v26, v27, __ T4S, Address(__ post(r12, r2))); \/\/        ld3     {v25.4S, v26.4S, v27.4S}, [x12], x2\n-    __ ld3(v26, v27, v28, __ T2S, Address(r19));       \/\/       ld3     {v26.2S, v27.2S, v28.2S}, [x19]\n-    __ ld3r(v15, v16, v17, __ T8H, Address(r21));      \/\/       ld3r    {v15.8H, v16.8H, v17.8H}, [x21]\n-    __ ld3r(v25, v26, v27, __ T4S, Address(__ post(r13, 12))); \/\/       ld3r    {v25.4S, v26.4S, v27.4S}, [x13], 12\n-    __ ld3r(v14, v15, v16, __ T1D, Address(__ post(r28, r29))); \/\/      ld3r    {v14.1D, v15.1D, v16.1D}, [x28], x29\n-    __ ld4(v17, v18, v19, v20, __ T8H, Address(__ post(r29, 64))); \/\/   ld4     {v17.8H, v18.8H, v19.8H, v20.8H}, [x29], 64\n-    __ ld4(v27, v28, v29, v30, __ T8B, Address(__ post(r7, r0))); \/\/    ld4     {v27.8B, v28.8B, v29.8B, v30.8B}, [x7], x0\n-    __ ld4r(v24, v25, v26, v27, __ T8B, Address(r17)); \/\/       ld4r    {v24.8B, v25.8B, v26.8B, v27.8B}, [x17]\n-    __ ld4r(v0, v1, v2, v3, __ T4H, Address(__ post(r26, 8))); \/\/       ld4r    {v0.4H, v1.4H, v2.4H, v3.4H}, [x26], 8\n-    __ ld4r(v12, v13, v14, v15, __ T2S, Address(__ post(r25, r2))); \/\/  ld4r    {v12.2S, v13.2S, v14.2S, v15.2S}, [x25], x2\n+    __ ld1(v27, __ T8B, Address(r30));                 \/\/       ld1     {v27.8B}, [x30]\n+    __ ld1(v25, v26, __ T16B, Address(__ post(r3, 32))); \/\/     ld1     {v25.16B, v26.16B}, [x3], 32\n+    __ ld1(v30, v31, v0, __ T1D, Address(__ post(r16, r10))); \/\/        ld1     {v30.1D, v31.1D, v0.1D}, [x16], x10\n+    __ ld1(v16, v17, v18, v19, __ T8H, Address(__ post(r19, 64))); \/\/   ld1     {v16.8H, v17.8H, v18.8H, v19.8H}, [x19], 64\n+    __ ld1r(v23, __ T8B, Address(r24));                \/\/       ld1r    {v23.8B}, [x24]\n+    __ ld1r(v8, __ T4S, Address(__ post(r10, 4)));     \/\/       ld1r    {v8.4S}, [x10], 4\n+    __ ld1r(v9, __ T1D, Address(__ post(r20, r23)));   \/\/       ld1r    {v9.1D}, [x20], x23\n+    __ ld2(v2, v3, __ T2D, Address(r3));               \/\/       ld2     {v2.2D, v3.2D}, [x3]\n+    __ ld2(v8, v9, __ T4H, Address(__ post(r30, 16))); \/\/       ld2     {v8.4H, v9.4H}, [x30], 16\n+    __ ld2r(v4, v5, __ T16B, Address(r26));            \/\/       ld2r    {v4.16B, v5.16B}, [x26]\n+    __ ld2r(v3, v4, __ T2S, Address(__ post(r17, 8))); \/\/       ld2r    {v3.2S, v4.2S}, [x17], 8\n+    __ ld2r(v29, v30, __ T2D, Address(__ post(r11, r16))); \/\/   ld2r    {v29.2D, v30.2D}, [x11], x16\n+    __ ld3(v1, v2, v3, __ T4S, Address(__ post(r0, r23))); \/\/   ld3     {v1.4S, v2.4S, v3.4S}, [x0], x23\n+    __ ld3(v0, v1, v2, __ T2S, Address(r21));          \/\/       ld3     {v0.2S, v1.2S, v2.2S}, [x21]\n+    __ ld3r(v5, v6, v7, __ T8H, Address(r7));          \/\/       ld3r    {v5.8H, v6.8H, v7.8H}, [x7]\n+    __ ld3r(v1, v2, v3, __ T4S, Address(__ post(r7, 12))); \/\/   ld3r    {v1.4S, v2.4S, v3.4S}, [x7], 12\n+    __ ld3r(v2, v3, v4, __ T1D, Address(__ post(r5, r15))); \/\/  ld3r    {v2.1D, v3.1D, v4.1D}, [x5], x15\n+    __ ld4(v27, v28, v29, v30, __ T8H, Address(__ post(r29, 64))); \/\/   ld4     {v27.8H, v28.8H, v29.8H, v30.8H}, [x29], 64\n+    __ ld4(v24, v25, v26, v27, __ T8B, Address(__ post(r4, r7))); \/\/    ld4     {v24.8B, v25.8B, v26.8B, v27.8B}, [x4], x7\n+    __ ld4r(v15, v16, v17, v18, __ T8B, Address(r23)); \/\/       ld4r    {v15.8B, v16.8B, v17.8B, v18.8B}, [x23]\n+    __ ld4r(v14, v15, v16, v17, __ T4H, Address(__ post(r21, 8))); \/\/   ld4r    {v14.4H, v15.4H, v16.4H, v17.4H}, [x21], 8\n+    __ ld4r(v20, v21, v22, v23, __ T2S, Address(__ post(r9, r25))); \/\/  ld4r    {v20.2S, v21.2S, v22.2S, v23.2S}, [x9], x25\n@@ -526,26 +574,26 @@\n-    __ addv(v22, __ T8B, v23);                         \/\/       addv    b22, v23.8B\n-    __ addv(v27, __ T16B, v28);                        \/\/       addv    b27, v28.16B\n-    __ addv(v4, __ T4H, v5);                           \/\/       addv    h4, v5.4H\n-    __ addv(v7, __ T8H, v8);                           \/\/       addv    h7, v8.8H\n-    __ addv(v6, __ T4S, v7);                           \/\/       addv    s6, v7.4S\n-    __ smaxv(v1, __ T8B, v2);                          \/\/       smaxv   b1, v2.8B\n-    __ smaxv(v26, __ T16B, v27);                       \/\/       smaxv   b26, v27.16B\n-    __ smaxv(v15, __ T4H, v16);                        \/\/       smaxv   h15, v16.4H\n-    __ smaxv(v2, __ T8H, v3);                          \/\/       smaxv   h2, v3.8H\n-    __ smaxv(v13, __ T4S, v14);                        \/\/       smaxv   s13, v14.4S\n-    __ fmaxv(v13, __ T4S, v14);                        \/\/       fmaxv   s13, v14.4S\n-    __ sminv(v24, __ T8B, v25);                        \/\/       sminv   b24, v25.8B\n-    __ uminv(v23, __ T8B, v24);                        \/\/       uminv   b23, v24.8B\n-    __ sminv(v4, __ T16B, v5);                         \/\/       sminv   b4, v5.16B\n-    __ uminv(v19, __ T16B, v20);                       \/\/       uminv   b19, v20.16B\n-    __ sminv(v15, __ T4H, v16);                        \/\/       sminv   h15, v16.4H\n-    __ uminv(v0, __ T4H, v1);                          \/\/       uminv   h0, v1.4H\n-    __ sminv(v4, __ T8H, v5);                          \/\/       sminv   h4, v5.8H\n-    __ uminv(v20, __ T8H, v21);                        \/\/       uminv   h20, v21.8H\n-    __ sminv(v11, __ T4S, v12);                        \/\/       sminv   s11, v12.4S\n-    __ uminv(v29, __ T4S, v30);                        \/\/       uminv   s29, v30.4S\n-    __ fminv(v15, __ T4S, v16);                        \/\/       fminv   s15, v16.4S\n-    __ fmaxp(v21, v22, __ S);                          \/\/       fmaxp   s21, v22.2S\n-    __ fmaxp(v4, v5, __ D);                            \/\/       fmaxp   d4, v5.2D\n-    __ fminp(v14, v15, __ S);                          \/\/       fminp   s14, v15.2S\n-    __ fminp(v22, v23, __ D);                          \/\/       fminp   d22, v23.2D\n+    __ addv(v23, __ T8B, v24);                         \/\/       addv    b23, v24.8B\n+    __ addv(v26, __ T16B, v27);                        \/\/       addv    b26, v27.16B\n+    __ addv(v5, __ T4H, v6);                           \/\/       addv    h5, v6.4H\n+    __ addv(v6, __ T8H, v7);                           \/\/       addv    h6, v7.8H\n+    __ addv(v15, __ T4S, v16);                         \/\/       addv    s15, v16.4S\n+    __ smaxv(v15, __ T8B, v16);                        \/\/       smaxv   b15, v16.8B\n+    __ smaxv(v25, __ T16B, v26);                       \/\/       smaxv   b25, v26.16B\n+    __ smaxv(v16, __ T4H, v17);                        \/\/       smaxv   h16, v17.4H\n+    __ smaxv(v27, __ T8H, v28);                        \/\/       smaxv   h27, v28.8H\n+    __ smaxv(v24, __ T4S, v25);                        \/\/       smaxv   s24, v25.4S\n+    __ fmaxv(v15, __ T4S, v16);                        \/\/       fmaxv   s15, v16.4S\n+    __ sminv(v25, __ T8B, v26);                        \/\/       sminv   b25, v26.8B\n+    __ uminv(v14, __ T8B, v15);                        \/\/       uminv   b14, v15.8B\n+    __ sminv(v10, __ T16B, v11);                       \/\/       sminv   b10, v11.16B\n+    __ uminv(v13, __ T16B, v14);                       \/\/       uminv   b13, v14.16B\n+    __ sminv(v14, __ T4H, v15);                        \/\/       sminv   h14, v15.4H\n+    __ uminv(v20, __ T4H, v21);                        \/\/       uminv   h20, v21.4H\n+    __ sminv(v1, __ T8H, v2);                          \/\/       sminv   h1, v2.8H\n+    __ uminv(v22, __ T8H, v23);                        \/\/       uminv   h22, v23.8H\n+    __ sminv(v30, __ T4S, v31);                        \/\/       sminv   s30, v31.4S\n+    __ uminv(v14, __ T4S, v15);                        \/\/       uminv   s14, v15.4S\n+    __ fminv(v2, __ T4S, v3);                          \/\/       fminv   s2, v3.4S\n+    __ fmaxp(v6, v7, __ S);                            \/\/       fmaxp   s6, v7.2S\n+    __ fmaxp(v3, v4, __ D);                            \/\/       fmaxp   d3, v4.2D\n+    __ fminp(v7, v8, __ S);                            \/\/       fminp   s7, v8.2S\n+    __ fminp(v24, v25, __ D);                          \/\/       fminp   d24, v25.2D\n@@ -554,7 +602,7 @@\n-    __ absr(v25, __ T8B, v26);                         \/\/       abs     v25.8B, v26.8B\n-    __ absr(v6, __ T16B, v7);                          \/\/       abs     v6.16B, v7.16B\n-    __ absr(v12, __ T4H, v13);                         \/\/       abs     v12.4H, v13.4H\n-    __ absr(v14, __ T8H, v15);                         \/\/       abs     v14.8H, v15.8H\n-    __ absr(v13, __ T2S, v14);                         \/\/       abs     v13.2S, v14.2S\n-    __ absr(v14, __ T4S, v15);                         \/\/       abs     v14.4S, v15.4S\n-    __ absr(v9, __ T2D, v10);                          \/\/       abs     v9.2D, v10.2D\n+    __ absr(v0, __ T8B, v1);                           \/\/       abs     v0.8B, v1.8B\n+    __ absr(v27, __ T16B, v28);                        \/\/       abs     v27.16B, v28.16B\n+    __ absr(v29, __ T4H, v30);                         \/\/       abs     v29.4H, v30.4H\n+    __ absr(v5, __ T8H, v6);                           \/\/       abs     v5.8H, v6.8H\n+    __ absr(v5, __ T2S, v6);                           \/\/       abs     v5.2S, v6.2S\n+    __ absr(v29, __ T4S, v30);                         \/\/       abs     v29.4S, v30.4S\n+    __ absr(v11, __ T2D, v12);                         \/\/       abs     v11.2D, v12.2D\n@@ -562,10 +610,10 @@\n-    __ fabs(v28, __ T4S, v29);                         \/\/       fabs    v28.4S, v29.4S\n-    __ fabs(v10, __ T2D, v11);                         \/\/       fabs    v10.2D, v11.2D\n-    __ fneg(v19, __ T2S, v20);                         \/\/       fneg    v19.2S, v20.2S\n-    __ fneg(v11, __ T4S, v12);                         \/\/       fneg    v11.4S, v12.4S\n-    __ fneg(v17, __ T2D, v18);                         \/\/       fneg    v17.2D, v18.2D\n-    __ fsqrt(v21, __ T2S, v22);                        \/\/       fsqrt   v21.2S, v22.2S\n-    __ fsqrt(v15, __ T4S, v16);                        \/\/       fsqrt   v15.4S, v16.4S\n-    __ fsqrt(v20, __ T2D, v21);                        \/\/       fsqrt   v20.2D, v21.2D\n-    __ notr(v23, __ T8B, v24);                         \/\/       not     v23.8B, v24.8B\n-    __ notr(v26, __ T16B, v27);                        \/\/       not     v26.16B, v27.16B\n+    __ fabs(v0, __ T4S, v1);                           \/\/       fabs    v0.4S, v1.4S\n+    __ fabs(v30, __ T2D, v31);                         \/\/       fabs    v30.2D, v31.2D\n+    __ fneg(v0, __ T2S, v1);                           \/\/       fneg    v0.2S, v1.2S\n+    __ fneg(v17, __ T4S, v18);                         \/\/       fneg    v17.4S, v18.4S\n+    __ fneg(v28, __ T2D, v29);                         \/\/       fneg    v28.2D, v29.2D\n+    __ fsqrt(v25, __ T2S, v26);                        \/\/       fsqrt   v25.2S, v26.2S\n+    __ fsqrt(v9, __ T4S, v10);                         \/\/       fsqrt   v9.4S, v10.4S\n+    __ fsqrt(v25, __ T2D, v26);                        \/\/       fsqrt   v25.2D, v26.2D\n+    __ notr(v12, __ T8B, v13);                         \/\/       not     v12.8B, v13.8B\n+    __ notr(v15, __ T16B, v16);                        \/\/       not     v15.16B, v16.16B\n@@ -574,14 +622,14 @@\n-    __ andr(v5, __ T8B, v6, v7);                       \/\/       and     v5.8B, v6.8B, v7.8B\n-    __ andr(v6, __ T16B, v7, v8);                      \/\/       and     v6.16B, v7.16B, v8.16B\n-    __ orr(v15, __ T8B, v16, v17);                     \/\/       orr     v15.8B, v16.8B, v17.8B\n-    __ orr(v15, __ T16B, v16, v17);                    \/\/       orr     v15.16B, v16.16B, v17.16B\n-    __ eor(v25, __ T8B, v26, v27);                     \/\/       eor     v25.8B, v26.8B, v27.8B\n-    __ eor(v16, __ T16B, v17, v18);                    \/\/       eor     v16.16B, v17.16B, v18.16B\n-    __ addv(v27, __ T8B, v28, v29);                    \/\/       add     v27.8B, v28.8B, v29.8B\n-    __ addv(v24, __ T16B, v25, v26);                   \/\/       add     v24.16B, v25.16B, v26.16B\n-    __ addv(v15, __ T4H, v16, v17);                    \/\/       add     v15.4H, v16.4H, v17.4H\n-    __ addv(v25, __ T8H, v26, v27);                    \/\/       add     v25.8H, v26.8H, v27.8H\n-    __ addv(v14, __ T2S, v15, v16);                    \/\/       add     v14.2S, v15.2S, v16.2S\n-    __ addv(v10, __ T4S, v11, v12);                    \/\/       add     v10.4S, v11.4S, v12.4S\n-    __ addv(v13, __ T2D, v14, v15);                    \/\/       add     v13.2D, v14.2D, v15.2D\n-    __ fadd(v14, __ T2S, v15, v16);                    \/\/       fadd    v14.2S, v15.2S, v16.2S\n+    __ andr(v11, __ T8B, v12, v13);                    \/\/       and     v11.8B, v12.8B, v13.8B\n+    __ andr(v10, __ T16B, v11, v12);                   \/\/       and     v10.16B, v11.16B, v12.16B\n+    __ orr(v17, __ T8B, v18, v19);                     \/\/       orr     v17.8B, v18.8B, v19.8B\n+    __ orr(v24, __ T16B, v25, v26);                    \/\/       orr     v24.16B, v25.16B, v26.16B\n+    __ eor(v21, __ T8B, v22, v23);                     \/\/       eor     v21.8B, v22.8B, v23.8B\n+    __ eor(v23, __ T16B, v24, v25);                    \/\/       eor     v23.16B, v24.16B, v25.16B\n+    __ addv(v0, __ T8B, v1, v2);                       \/\/       add     v0.8B, v1.8B, v2.8B\n+    __ addv(v16, __ T16B, v17, v18);                   \/\/       add     v16.16B, v17.16B, v18.16B\n+    __ addv(v10, __ T4H, v11, v12);                    \/\/       add     v10.4H, v11.4H, v12.4H\n+    __ addv(v6, __ T8H, v7, v8);                       \/\/       add     v6.8H, v7.8H, v8.8H\n+    __ addv(v28, __ T2S, v29, v30);                    \/\/       add     v28.2S, v29.2S, v30.2S\n+    __ addv(v6, __ T4S, v7, v8);                       \/\/       add     v6.4S, v7.4S, v8.4S\n+    __ addv(v5, __ T2D, v6, v7);                       \/\/       add     v5.2D, v6.2D, v7.2D\n+    __ fadd(v5, __ T2S, v6, v7);                       \/\/       fadd    v5.2S, v6.2S, v7.2S\n@@ -589,75 +637,75 @@\n-    __ fadd(v1, __ T2D, v2, v3);                       \/\/       fadd    v1.2D, v2.2D, v3.2D\n-    __ subv(v22, __ T8B, v23, v24);                    \/\/       sub     v22.8B, v23.8B, v24.8B\n-    __ subv(v30, __ T16B, v31, v0);                    \/\/       sub     v30.16B, v31.16B, v0.16B\n-    __ subv(v14, __ T4H, v15, v16);                    \/\/       sub     v14.4H, v15.4H, v16.4H\n-    __ subv(v2, __ T8H, v3, v4);                       \/\/       sub     v2.8H, v3.8H, v4.8H\n-    __ subv(v6, __ T2S, v7, v8);                       \/\/       sub     v6.2S, v7.2S, v8.2S\n-    __ subv(v3, __ T4S, v4, v5);                       \/\/       sub     v3.4S, v4.4S, v5.4S\n-    __ subv(v7, __ T2D, v8, v9);                       \/\/       sub     v7.2D, v8.2D, v9.2D\n-    __ fsub(v24, __ T2S, v25, v26);                    \/\/       fsub    v24.2S, v25.2S, v26.2S\n-    __ fsub(v0, __ T4S, v1, v2);                       \/\/       fsub    v0.4S, v1.4S, v2.4S\n-    __ fsub(v27, __ T2D, v28, v29);                    \/\/       fsub    v27.2D, v28.2D, v29.2D\n-    __ mulv(v29, __ T8B, v30, v31);                    \/\/       mul     v29.8B, v30.8B, v31.8B\n-    __ mulv(v5, __ T16B, v6, v7);                      \/\/       mul     v5.16B, v6.16B, v7.16B\n-    __ mulv(v5, __ T4H, v6, v7);                       \/\/       mul     v5.4H, v6.4H, v7.4H\n-    __ mulv(v29, __ T8H, v30, v31);                    \/\/       mul     v29.8H, v30.8H, v31.8H\n-    __ mulv(v11, __ T2S, v12, v13);                    \/\/       mul     v11.2S, v12.2S, v13.2S\n-    __ mulv(v25, __ T4S, v26, v27);                    \/\/       mul     v25.4S, v26.4S, v27.4S\n-    __ fabd(v0, __ T2S, v1, v2);                       \/\/       fabd    v0.2S, v1.2S, v2.2S\n-    __ fabd(v30, __ T4S, v31, v0);                     \/\/       fabd    v30.4S, v31.4S, v0.4S\n-    __ fabd(v0, __ T2D, v1, v2);                       \/\/       fabd    v0.2D, v1.2D, v2.2D\n-    __ fmul(v17, __ T2S, v18, v19);                    \/\/       fmul    v17.2S, v18.2S, v19.2S\n-    __ fmul(v28, __ T4S, v29, v30);                    \/\/       fmul    v28.4S, v29.4S, v30.4S\n-    __ fmul(v25, __ T2D, v26, v27);                    \/\/       fmul    v25.2D, v26.2D, v27.2D\n-    __ mlav(v9, __ T4H, v10, v11);                     \/\/       mla     v9.4H, v10.4H, v11.4H\n-    __ mlav(v25, __ T8H, v26, v27);                    \/\/       mla     v25.8H, v26.8H, v27.8H\n-    __ mlav(v12, __ T2S, v13, v14);                    \/\/       mla     v12.2S, v13.2S, v14.2S\n-    __ mlav(v15, __ T4S, v16, v17);                    \/\/       mla     v15.4S, v16.4S, v17.4S\n-    __ fmla(v11, __ T2S, v12, v13);                    \/\/       fmla    v11.2S, v12.2S, v13.2S\n-    __ fmla(v10, __ T4S, v11, v12);                    \/\/       fmla    v10.4S, v11.4S, v12.4S\n-    __ fmla(v17, __ T2D, v18, v19);                    \/\/       fmla    v17.2D, v18.2D, v19.2D\n-    __ mlsv(v24, __ T4H, v25, v26);                    \/\/       mls     v24.4H, v25.4H, v26.4H\n-    __ mlsv(v21, __ T8H, v22, v23);                    \/\/       mls     v21.8H, v22.8H, v23.8H\n-    __ mlsv(v23, __ T2S, v24, v25);                    \/\/       mls     v23.2S, v24.2S, v25.2S\n-    __ mlsv(v0, __ T4S, v1, v2);                       \/\/       mls     v0.4S, v1.4S, v2.4S\n-    __ fmls(v16, __ T2S, v17, v18);                    \/\/       fmls    v16.2S, v17.2S, v18.2S\n-    __ fmls(v10, __ T4S, v11, v12);                    \/\/       fmls    v10.4S, v11.4S, v12.4S\n-    __ fmls(v6, __ T2D, v7, v8);                       \/\/       fmls    v6.2D, v7.2D, v8.2D\n-    __ fdiv(v28, __ T2S, v29, v30);                    \/\/       fdiv    v28.2S, v29.2S, v30.2S\n-    __ fdiv(v6, __ T4S, v7, v8);                       \/\/       fdiv    v6.4S, v7.4S, v8.4S\n-    __ fdiv(v5, __ T2D, v6, v7);                       \/\/       fdiv    v5.2D, v6.2D, v7.2D\n-    __ maxv(v5, __ T8B, v6, v7);                       \/\/       smax    v5.8B, v6.8B, v7.8B\n-    __ maxv(v20, __ T16B, v21, v22);                   \/\/       smax    v20.16B, v21.16B, v22.16B\n-    __ maxv(v17, __ T4H, v18, v19);                    \/\/       smax    v17.4H, v18.4H, v19.4H\n-    __ maxv(v15, __ T8H, v16, v17);                    \/\/       smax    v15.8H, v16.8H, v17.8H\n-    __ maxv(v17, __ T2S, v18, v19);                    \/\/       smax    v17.2S, v18.2S, v19.2S\n-    __ maxv(v29, __ T4S, v30, v31);                    \/\/       smax    v29.4S, v30.4S, v31.4S\n-    __ smaxp(v26, __ T8B, v27, v28);                   \/\/       smaxp   v26.8B, v27.8B, v28.8B\n-    __ smaxp(v28, __ T16B, v29, v30);                  \/\/       smaxp   v28.16B, v29.16B, v30.16B\n-    __ smaxp(v1, __ T4H, v2, v3);                      \/\/       smaxp   v1.4H, v2.4H, v3.4H\n-    __ smaxp(v27, __ T8H, v28, v29);                   \/\/       smaxp   v27.8H, v28.8H, v29.8H\n-    __ smaxp(v0, __ T2S, v1, v2);                      \/\/       smaxp   v0.2S, v1.2S, v2.2S\n-    __ smaxp(v20, __ T4S, v21, v22);                   \/\/       smaxp   v20.4S, v21.4S, v22.4S\n-    __ fmax(v28, __ T2S, v29, v30);                    \/\/       fmax    v28.2S, v29.2S, v30.2S\n-    __ fmax(v15, __ T4S, v16, v17);                    \/\/       fmax    v15.4S, v16.4S, v17.4S\n-    __ fmax(v12, __ T2D, v13, v14);                    \/\/       fmax    v12.2D, v13.2D, v14.2D\n-    __ minv(v10, __ T8B, v11, v12);                    \/\/       smin    v10.8B, v11.8B, v12.8B\n-    __ minv(v28, __ T16B, v29, v30);                   \/\/       smin    v28.16B, v29.16B, v30.16B\n-    __ minv(v28, __ T4H, v29, v30);                    \/\/       smin    v28.4H, v29.4H, v30.4H\n-    __ minv(v19, __ T8H, v20, v21);                    \/\/       smin    v19.8H, v20.8H, v21.8H\n-    __ minv(v22, __ T2S, v23, v24);                    \/\/       smin    v22.2S, v23.2S, v24.2S\n-    __ minv(v10, __ T4S, v11, v12);                    \/\/       smin    v10.4S, v11.4S, v12.4S\n-    __ sminp(v4, __ T8B, v5, v6);                      \/\/       sminp   v4.8B, v5.8B, v6.8B\n-    __ sminp(v30, __ T16B, v31, v0);                   \/\/       sminp   v30.16B, v31.16B, v0.16B\n-    __ sminp(v20, __ T4H, v21, v22);                   \/\/       sminp   v20.4H, v21.4H, v22.4H\n-    __ sminp(v8, __ T8H, v9, v10);                     \/\/       sminp   v8.8H, v9.8H, v10.8H\n-    __ sminp(v30, __ T2S, v31, v0);                    \/\/       sminp   v30.2S, v31.2S, v0.2S\n-    __ sminp(v17, __ T4S, v18, v19);                   \/\/       sminp   v17.4S, v18.4S, v19.4S\n-    __ fmin(v10, __ T2S, v11, v12);                    \/\/       fmin    v10.2S, v11.2S, v12.2S\n-    __ fmin(v27, __ T4S, v28, v29);                    \/\/       fmin    v27.4S, v28.4S, v29.4S\n-    __ fmin(v2, __ T2D, v3, v4);                       \/\/       fmin    v2.2D, v3.2D, v4.2D\n-    __ cmeq(v24, __ T8B, v25, v26);                    \/\/       cmeq    v24.8B, v25.8B, v26.8B\n-    __ cmeq(v4, __ T16B, v5, v6);                      \/\/       cmeq    v4.16B, v5.16B, v6.16B\n-    __ cmeq(v3, __ T4H, v4, v5);                       \/\/       cmeq    v3.4H, v4.4H, v5.4H\n-    __ cmeq(v8, __ T8H, v9, v10);                      \/\/       cmeq    v8.8H, v9.8H, v10.8H\n-    __ cmeq(v22, __ T2S, v23, v24);                    \/\/       cmeq    v22.2S, v23.2S, v24.2S\n+    __ fadd(v17, __ T2D, v18, v19);                    \/\/       fadd    v17.2D, v18.2D, v19.2D\n+    __ subv(v15, __ T8B, v16, v17);                    \/\/       sub     v15.8B, v16.8B, v17.8B\n+    __ subv(v17, __ T16B, v18, v19);                   \/\/       sub     v17.16B, v18.16B, v19.16B\n+    __ subv(v29, __ T4H, v30, v31);                    \/\/       sub     v29.4H, v30.4H, v31.4H\n+    __ subv(v26, __ T8H, v27, v28);                    \/\/       sub     v26.8H, v27.8H, v28.8H\n+    __ subv(v28, __ T2S, v29, v30);                    \/\/       sub     v28.2S, v29.2S, v30.2S\n+    __ subv(v1, __ T4S, v2, v3);                       \/\/       sub     v1.4S, v2.4S, v3.4S\n+    __ subv(v27, __ T2D, v28, v29);                    \/\/       sub     v27.2D, v28.2D, v29.2D\n+    __ fsub(v0, __ T2S, v1, v2);                       \/\/       fsub    v0.2S, v1.2S, v2.2S\n+    __ fsub(v20, __ T4S, v21, v22);                    \/\/       fsub    v20.4S, v21.4S, v22.4S\n+    __ fsub(v28, __ T2D, v29, v30);                    \/\/       fsub    v28.2D, v29.2D, v30.2D\n+    __ mulv(v15, __ T8B, v16, v17);                    \/\/       mul     v15.8B, v16.8B, v17.8B\n+    __ mulv(v12, __ T16B, v13, v14);                   \/\/       mul     v12.16B, v13.16B, v14.16B\n+    __ mulv(v10, __ T4H, v11, v12);                    \/\/       mul     v10.4H, v11.4H, v12.4H\n+    __ mulv(v28, __ T8H, v29, v30);                    \/\/       mul     v28.8H, v29.8H, v30.8H\n+    __ mulv(v28, __ T2S, v29, v30);                    \/\/       mul     v28.2S, v29.2S, v30.2S\n+    __ mulv(v19, __ T4S, v20, v21);                    \/\/       mul     v19.4S, v20.4S, v21.4S\n+    __ fabd(v22, __ T2S, v23, v24);                    \/\/       fabd    v22.2S, v23.2S, v24.2S\n+    __ fabd(v10, __ T4S, v11, v12);                    \/\/       fabd    v10.4S, v11.4S, v12.4S\n+    __ fabd(v4, __ T2D, v5, v6);                       \/\/       fabd    v4.2D, v5.2D, v6.2D\n+    __ fmul(v30, __ T2S, v31, v0);                     \/\/       fmul    v30.2S, v31.2S, v0.2S\n+    __ fmul(v20, __ T4S, v21, v22);                    \/\/       fmul    v20.4S, v21.4S, v22.4S\n+    __ fmul(v8, __ T2D, v9, v10);                      \/\/       fmul    v8.2D, v9.2D, v10.2D\n+    __ mlav(v30, __ T4H, v31, v0);                     \/\/       mla     v30.4H, v31.4H, v0.4H\n+    __ mlav(v17, __ T8H, v18, v19);                    \/\/       mla     v17.8H, v18.8H, v19.8H\n+    __ mlav(v10, __ T2S, v11, v12);                    \/\/       mla     v10.2S, v11.2S, v12.2S\n+    __ mlav(v27, __ T4S, v28, v29);                    \/\/       mla     v27.4S, v28.4S, v29.4S\n+    __ fmla(v2, __ T2S, v3, v4);                       \/\/       fmla    v2.2S, v3.2S, v4.2S\n+    __ fmla(v24, __ T4S, v25, v26);                    \/\/       fmla    v24.4S, v25.4S, v26.4S\n+    __ fmla(v4, __ T2D, v5, v6);                       \/\/       fmla    v4.2D, v5.2D, v6.2D\n+    __ mlsv(v3, __ T4H, v4, v5);                       \/\/       mls     v3.4H, v4.4H, v5.4H\n+    __ mlsv(v8, __ T8H, v9, v10);                      \/\/       mls     v8.8H, v9.8H, v10.8H\n+    __ mlsv(v22, __ T2S, v23, v24);                    \/\/       mls     v22.2S, v23.2S, v24.2S\n+    __ mlsv(v17, __ T4S, v18, v19);                    \/\/       mls     v17.4S, v18.4S, v19.4S\n+    __ fmls(v13, __ T2S, v14, v15);                    \/\/       fmls    v13.2S, v14.2S, v15.2S\n+    __ fmls(v4, __ T4S, v5, v6);                       \/\/       fmls    v4.4S, v5.4S, v6.4S\n+    __ fmls(v28, __ T2D, v29, v30);                    \/\/       fmls    v28.2D, v29.2D, v30.2D\n+    __ fdiv(v23, __ T2S, v24, v25);                    \/\/       fdiv    v23.2S, v24.2S, v25.2S\n+    __ fdiv(v21, __ T4S, v22, v23);                    \/\/       fdiv    v21.4S, v22.4S, v23.4S\n+    __ fdiv(v25, __ T2D, v26, v27);                    \/\/       fdiv    v25.2D, v26.2D, v27.2D\n+    __ maxv(v24, __ T8B, v25, v26);                    \/\/       smax    v24.8B, v25.8B, v26.8B\n+    __ maxv(v3, __ T16B, v4, v5);                      \/\/       smax    v3.16B, v4.16B, v5.16B\n+    __ maxv(v23, __ T4H, v24, v25);                    \/\/       smax    v23.4H, v24.4H, v25.4H\n+    __ maxv(v26, __ T8H, v27, v28);                    \/\/       smax    v26.8H, v27.8H, v28.8H\n+    __ maxv(v23, __ T2S, v24, v25);                    \/\/       smax    v23.2S, v24.2S, v25.2S\n+    __ maxv(v14, __ T4S, v15, v16);                    \/\/       smax    v14.4S, v15.4S, v16.4S\n+    __ smaxp(v21, __ T8B, v22, v23);                   \/\/       smaxp   v21.8B, v22.8B, v23.8B\n+    __ smaxp(v3, __ T16B, v4, v5);                     \/\/       smaxp   v3.16B, v4.16B, v5.16B\n+    __ smaxp(v23, __ T4H, v24, v25);                   \/\/       smaxp   v23.4H, v24.4H, v25.4H\n+    __ smaxp(v8, __ T8H, v9, v10);                     \/\/       smaxp   v8.8H, v9.8H, v10.8H\n+    __ smaxp(v24, __ T2S, v25, v26);                   \/\/       smaxp   v24.2S, v25.2S, v26.2S\n+    __ smaxp(v19, __ T4S, v20, v21);                   \/\/       smaxp   v19.4S, v20.4S, v21.4S\n+    __ fmax(v15, __ T2S, v16, v17);                    \/\/       fmax    v15.2S, v16.2S, v17.2S\n+    __ fmax(v16, __ T4S, v17, v18);                    \/\/       fmax    v16.4S, v17.4S, v18.4S\n+    __ fmax(v2, __ T2D, v3, v4);                       \/\/       fmax    v2.2D, v3.2D, v4.2D\n+    __ minv(v1, __ T8B, v2, v3);                       \/\/       smin    v1.8B, v2.8B, v3.8B\n+    __ minv(v0, __ T16B, v1, v2);                      \/\/       smin    v0.16B, v1.16B, v2.16B\n+    __ minv(v24, __ T4H, v25, v26);                    \/\/       smin    v24.4H, v25.4H, v26.4H\n+    __ minv(v4, __ T8H, v5, v6);                       \/\/       smin    v4.8H, v5.8H, v6.8H\n+    __ minv(v3, __ T2S, v4, v5);                       \/\/       smin    v3.2S, v4.2S, v5.2S\n+    __ minv(v11, __ T4S, v12, v13);                    \/\/       smin    v11.4S, v12.4S, v13.4S\n+    __ sminp(v30, __ T8B, v31, v0);                    \/\/       sminp   v30.8B, v31.8B, v0.8B\n+    __ sminp(v27, __ T16B, v28, v29);                  \/\/       sminp   v27.16B, v28.16B, v29.16B\n+    __ sminp(v9, __ T4H, v10, v11);                    \/\/       sminp   v9.4H, v10.4H, v11.4H\n+    __ sminp(v25, __ T8H, v26, v27);                   \/\/       sminp   v25.8H, v26.8H, v27.8H\n+    __ sminp(v2, __ T2S, v3, v4);                      \/\/       sminp   v2.2S, v3.2S, v4.2S\n+    __ sminp(v12, __ T4S, v13, v14);                   \/\/       sminp   v12.4S, v13.4S, v14.4S\n+    __ fmin(v17, __ T2S, v18, v19);                    \/\/       fmin    v17.2S, v18.2S, v19.2S\n+    __ fmin(v30, __ T4S, v31, v0);                     \/\/       fmin    v30.4S, v31.4S, v0.4S\n+    __ fmin(v1, __ T2D, v2, v3);                       \/\/       fmin    v1.2D, v2.2D, v3.2D\n+    __ cmeq(v12, __ T8B, v13, v14);                    \/\/       cmeq    v12.8B, v13.8B, v14.8B\n+    __ cmeq(v28, __ T16B, v29, v30);                   \/\/       cmeq    v28.16B, v29.16B, v30.16B\n+    __ cmeq(v0, __ T4H, v1, v2);                       \/\/       cmeq    v0.4H, v1.4H, v2.4H\n+    __ cmeq(v17, __ T8H, v18, v19);                    \/\/       cmeq    v17.8H, v18.8H, v19.8H\n+    __ cmeq(v12, __ T2S, v13, v14);                    \/\/       cmeq    v12.2S, v13.2S, v14.2S\n@@ -665,15 +713,15 @@\n-    __ cmeq(v13, __ T2D, v14, v15);                    \/\/       cmeq    v13.2D, v14.2D, v15.2D\n-    __ fcmeq(v4, __ T2S, v5, v6);                      \/\/       fcmeq   v4.2S, v5.2S, v6.2S\n-    __ fcmeq(v28, __ T4S, v29, v30);                   \/\/       fcmeq   v28.4S, v29.4S, v30.4S\n-    __ fcmeq(v23, __ T2D, v24, v25);                   \/\/       fcmeq   v23.2D, v24.2D, v25.2D\n-    __ cmgt(v21, __ T8B, v22, v23);                    \/\/       cmgt    v21.8B, v22.8B, v23.8B\n-    __ cmgt(v25, __ T16B, v26, v27);                   \/\/       cmgt    v25.16B, v26.16B, v27.16B\n-    __ cmgt(v24, __ T4H, v25, v26);                    \/\/       cmgt    v24.4H, v25.4H, v26.4H\n-    __ cmgt(v3, __ T8H, v4, v5);                       \/\/       cmgt    v3.8H, v4.8H, v5.8H\n-    __ cmgt(v23, __ T2S, v24, v25);                    \/\/       cmgt    v23.2S, v24.2S, v25.2S\n-    __ cmgt(v26, __ T4S, v27, v28);                    \/\/       cmgt    v26.4S, v27.4S, v28.4S\n-    __ cmgt(v23, __ T2D, v24, v25);                    \/\/       cmgt    v23.2D, v24.2D, v25.2D\n-    __ cmhi(v14, __ T8B, v15, v16);                    \/\/       cmhi    v14.8B, v15.8B, v16.8B\n-    __ cmhi(v21, __ T16B, v22, v23);                   \/\/       cmhi    v21.16B, v22.16B, v23.16B\n-    __ cmhi(v3, __ T4H, v4, v5);                       \/\/       cmhi    v3.4H, v4.4H, v5.4H\n-    __ cmhi(v23, __ T8H, v24, v25);                    \/\/       cmhi    v23.8H, v24.8H, v25.8H\n+    __ cmeq(v21, __ T2D, v22, v23);                    \/\/       cmeq    v21.2D, v22.2D, v23.2D\n+    __ fcmeq(v12, __ T2S, v13, v14);                   \/\/       fcmeq   v12.2S, v13.2S, v14.2S\n+    __ fcmeq(v27, __ T4S, v28, v29);                   \/\/       fcmeq   v27.4S, v28.4S, v29.4S\n+    __ fcmeq(v29, __ T2D, v30, v31);                   \/\/       fcmeq   v29.2D, v30.2D, v31.2D\n+    __ cmgt(v30, __ T8B, v31, v0);                     \/\/       cmgt    v30.8B, v31.8B, v0.8B\n+    __ cmgt(v1, __ T16B, v2, v3);                      \/\/       cmgt    v1.16B, v2.16B, v3.16B\n+    __ cmgt(v25, __ T4H, v26, v27);                    \/\/       cmgt    v25.4H, v26.4H, v27.4H\n+    __ cmgt(v27, __ T8H, v28, v29);                    \/\/       cmgt    v27.8H, v28.8H, v29.8H\n+    __ cmgt(v4, __ T2S, v5, v6);                       \/\/       cmgt    v4.2S, v5.2S, v6.2S\n+    __ cmgt(v29, __ T4S, v30, v31);                    \/\/       cmgt    v29.4S, v30.4S, v31.4S\n+    __ cmgt(v3, __ T2D, v4, v5);                       \/\/       cmgt    v3.2D, v4.2D, v5.2D\n+    __ cmhi(v6, __ T8B, v7, v8);                       \/\/       cmhi    v6.8B, v7.8B, v8.8B\n+    __ cmhi(v29, __ T16B, v30, v31);                   \/\/       cmhi    v29.16B, v30.16B, v31.16B\n+    __ cmhi(v25, __ T4H, v26, v27);                    \/\/       cmhi    v25.4H, v26.4H, v27.4H\n+    __ cmhi(v17, __ T8H, v18, v19);                    \/\/       cmhi    v17.8H, v18.8H, v19.8H\n@@ -681,19 +729,19 @@\n-    __ cmhi(v24, __ T4S, v25, v26);                    \/\/       cmhi    v24.4S, v25.4S, v26.4S\n-    __ cmhi(v19, __ T2D, v20, v21);                    \/\/       cmhi    v19.2D, v20.2D, v21.2D\n-    __ cmhs(v15, __ T8B, v16, v17);                    \/\/       cmhs    v15.8B, v16.8B, v17.8B\n-    __ cmhs(v16, __ T16B, v17, v18);                   \/\/       cmhs    v16.16B, v17.16B, v18.16B\n-    __ cmhs(v2, __ T4H, v3, v4);                       \/\/       cmhs    v2.4H, v3.4H, v4.4H\n-    __ cmhs(v1, __ T8H, v2, v3);                       \/\/       cmhs    v1.8H, v2.8H, v3.8H\n-    __ cmhs(v0, __ T2S, v1, v2);                       \/\/       cmhs    v0.2S, v1.2S, v2.2S\n-    __ cmhs(v24, __ T4S, v25, v26);                    \/\/       cmhs    v24.4S, v25.4S, v26.4S\n-    __ cmhs(v4, __ T2D, v5, v6);                       \/\/       cmhs    v4.2D, v5.2D, v6.2D\n-    __ fcmgt(v3, __ T2S, v4, v5);                      \/\/       fcmgt   v3.2S, v4.2S, v5.2S\n-    __ fcmgt(v11, __ T4S, v12, v13);                   \/\/       fcmgt   v11.4S, v12.4S, v13.4S\n-    __ fcmgt(v30, __ T2D, v31, v0);                    \/\/       fcmgt   v30.2D, v31.2D, v0.2D\n-    __ cmge(v27, __ T8B, v28, v29);                    \/\/       cmge    v27.8B, v28.8B, v29.8B\n-    __ cmge(v9, __ T16B, v10, v11);                    \/\/       cmge    v9.16B, v10.16B, v11.16B\n-    __ cmge(v25, __ T4H, v26, v27);                    \/\/       cmge    v25.4H, v26.4H, v27.4H\n-    __ cmge(v2, __ T8H, v3, v4);                       \/\/       cmge    v2.8H, v3.8H, v4.8H\n-    __ cmge(v12, __ T2S, v13, v14);                    \/\/       cmge    v12.2S, v13.2S, v14.2S\n-    __ cmge(v17, __ T4S, v18, v19);                    \/\/       cmge    v17.4S, v18.4S, v19.4S\n-    __ cmge(v30, __ T2D, v31, v0);                     \/\/       cmge    v30.2D, v31.2D, v0.2D\n+    __ cmhi(v7, __ T4S, v8, v9);                       \/\/       cmhi    v7.4S, v8.4S, v9.4S\n+    __ cmhi(v12, __ T2D, v13, v14);                    \/\/       cmhi    v12.2D, v13.2D, v14.2D\n+    __ cmhs(v0, __ T8B, v1, v2);                       \/\/       cmhs    v0.8B, v1.8B, v2.8B\n+    __ cmhs(v19, __ T16B, v20, v21);                   \/\/       cmhs    v19.16B, v20.16B, v21.16B\n+    __ cmhs(v1, __ T4H, v2, v3);                       \/\/       cmhs    v1.4H, v2.4H, v3.4H\n+    __ cmhs(v23, __ T8H, v24, v25);                    \/\/       cmhs    v23.8H, v24.8H, v25.8H\n+    __ cmhs(v2, __ T2S, v3, v4);                       \/\/       cmhs    v2.2S, v3.2S, v4.2S\n+    __ cmhs(v0, __ T4S, v1, v2);                       \/\/       cmhs    v0.4S, v1.4S, v2.4S\n+    __ cmhs(v8, __ T2D, v9, v10);                      \/\/       cmhs    v8.2D, v9.2D, v10.2D\n+    __ fcmgt(v23, __ T2S, v24, v25);                   \/\/       fcmgt   v23.2S, v24.2S, v25.2S\n+    __ fcmgt(v25, __ T4S, v26, v27);                   \/\/       fcmgt   v25.4S, v26.4S, v27.4S\n+    __ fcmgt(v15, __ T2D, v16, v17);                   \/\/       fcmgt   v15.2D, v16.2D, v17.2D\n+    __ cmge(v29, __ T8B, v30, v31);                    \/\/       cmge    v29.8B, v30.8B, v31.8B\n+    __ cmge(v3, __ T16B, v4, v5);                      \/\/       cmge    v3.16B, v4.16B, v5.16B\n+    __ cmge(v10, __ T4H, v11, v12);                    \/\/       cmge    v10.4H, v11.4H, v12.4H\n+    __ cmge(v22, __ T8H, v23, v24);                    \/\/       cmge    v22.8H, v23.8H, v24.8H\n+    __ cmge(v10, __ T2S, v11, v12);                    \/\/       cmge    v10.2S, v11.2S, v12.2S\n+    __ cmge(v4, __ T4S, v5, v6);                       \/\/       cmge    v4.4S, v5.4S, v6.4S\n+    __ cmge(v17, __ T2D, v18, v19);                    \/\/       cmge    v17.2D, v18.2D, v19.2D\n@@ -701,2 +749,2 @@\n-    __ fcmge(v12, __ T4S, v13, v14);                   \/\/       fcmge   v12.4S, v13.4S, v14.4S\n-    __ fcmge(v28, __ T2D, v29, v30);                   \/\/       fcmge   v28.2D, v29.2D, v30.2D\n+    __ fcmge(v11, __ T4S, v12, v13);                   \/\/       fcmge   v11.4S, v12.4S, v13.4S\n+    __ fcmge(v7, __ T2D, v8, v9);                      \/\/       fcmge   v7.2D, v8.2D, v9.2D\n@@ -930,9 +978,9 @@\n-    __ swp(Assembler::xword, r0, r19, r12);            \/\/       swp     x0, x19, [x12]\n-    __ ldadd(Assembler::xword, r17, r22, r13);         \/\/       ldadd   x17, x22, [x13]\n-    __ ldbic(Assembler::xword, r28, r30, sp);          \/\/       ldclr   x28, x30, [sp]\n-    __ ldeor(Assembler::xword, r1, r26, r28);          \/\/       ldeor   x1, x26, [x28]\n-    __ ldorr(Assembler::xword, r4, r30, r4);           \/\/       ldset   x4, x30, [x4]\n-    __ ldsmin(Assembler::xword, r6, r30, r26);         \/\/       ldsmin  x6, x30, [x26]\n-    __ ldsmax(Assembler::xword, r16, r9, r8);          \/\/       ldsmax  x16, x9, [x8]\n-    __ ldumin(Assembler::xword, r12, r0, r20);         \/\/       ldumin  x12, x0, [x20]\n-    __ ldumax(Assembler::xword, r1, r24, r2);          \/\/       ldumax  x1, x24, [x2]\n+    __ swp(Assembler::xword, r10, r15, r17);           \/\/       swp     x10, x15, [x17]\n+    __ ldadd(Assembler::xword, r2, r10, r12);          \/\/       ldadd   x2, x10, [x12]\n+    __ ldbic(Assembler::xword, r12, r15, r13);         \/\/       ldclr   x12, x15, [x13]\n+    __ ldeor(Assembler::xword, r2, r7, r20);           \/\/       ldeor   x2, x7, [x20]\n+    __ ldorr(Assembler::xword, r26, r16, r4);          \/\/       ldset   x26, x16, [x4]\n+    __ ldsmin(Assembler::xword, r2, r4, r12);          \/\/       ldsmin  x2, x4, [x12]\n+    __ ldsmax(Assembler::xword, r16, r21, r16);        \/\/       ldsmax  x16, x21, [x16]\n+    __ ldumin(Assembler::xword, r16, r11, r21);        \/\/       ldumin  x16, x11, [x21]\n+    __ ldumax(Assembler::xword, r23, r12, r26);        \/\/       ldumax  x23, x12, [x26]\n@@ -941,9 +989,9 @@\n-    __ swpa(Assembler::xword, r0, r9, r24);            \/\/       swpa    x0, x9, [x24]\n-    __ ldadda(Assembler::xword, r26, r16, r30);        \/\/       ldadda  x26, x16, [x30]\n-    __ ldbica(Assembler::xword, r3, r10, r23);         \/\/       ldclra  x3, x10, [x23]\n-    __ ldeora(Assembler::xword, r10, r4, r15);         \/\/       ldeora  x10, x4, [x15]\n-    __ ldorra(Assembler::xword, r2, r11, r8);          \/\/       ldseta  x2, x11, [x8]\n-    __ ldsmina(Assembler::xword, r10, r15, r17);       \/\/       ldsmina x10, x15, [x17]\n-    __ ldsmaxa(Assembler::xword, r2, r10, r12);        \/\/       ldsmaxa x2, x10, [x12]\n-    __ ldumina(Assembler::xword, r12, r15, r13);       \/\/       ldumina x12, x15, [x13]\n-    __ ldumaxa(Assembler::xword, r2, r7, r20);         \/\/       ldumaxa x2, x7, [x20]\n+    __ swpa(Assembler::xword, r23, r28, r14);          \/\/       swpa    x23, x28, [x14]\n+    __ ldadda(Assembler::xword, r11, r24, r1);         \/\/       ldadda  x11, x24, [x1]\n+    __ ldbica(Assembler::xword, r12, zr, r10);         \/\/       ldclra  x12, xzr, [x10]\n+    __ ldeora(Assembler::xword, r16, r7, r2);          \/\/       ldeora  x16, x7, [x2]\n+    __ ldorra(Assembler::xword, r3, r13, r19);         \/\/       ldseta  x3, x13, [x19]\n+    __ ldsmina(Assembler::xword, r17, r16, r3);        \/\/       ldsmina x17, x16, [x3]\n+    __ ldsmaxa(Assembler::xword, r1, r11, r30);        \/\/       ldsmaxa x1, x11, [x30]\n+    __ ldumina(Assembler::xword, r5, r8, r15);         \/\/       ldumina x5, x8, [x15]\n+    __ ldumaxa(Assembler::xword, r29, r30, r0);        \/\/       ldumaxa x29, x30, [x0]\n@@ -952,9 +1000,9 @@\n-    __ swpal(Assembler::xword, r26, r16, r4);          \/\/       swpal   x26, x16, [x4]\n-    __ ldaddal(Assembler::xword, r2, r4, r12);         \/\/       ldaddal x2, x4, [x12]\n-    __ ldbical(Assembler::xword, r16, r21, r16);       \/\/       ldclral x16, x21, [x16]\n-    __ ldeoral(Assembler::xword, r16, r11, r21);       \/\/       ldeoral x16, x11, [x21]\n-    __ ldorral(Assembler::xword, r23, r12, r26);       \/\/       ldsetal x23, x12, [x26]\n-    __ ldsminal(Assembler::xword, r23, r28, r14);      \/\/       ldsminal        x23, x28, [x14]\n-    __ ldsmaxal(Assembler::xword, r11, r24, r1);       \/\/       ldsmaxal        x11, x24, [x1]\n-    __ lduminal(Assembler::xword, r12, zr, r10);       \/\/       lduminal        x12, xzr, [x10]\n-    __ ldumaxal(Assembler::xword, r16, r7, r2);        \/\/       ldumaxal        x16, x7, [x2]\n+    __ swpal(Assembler::xword, r20, r7, r20);          \/\/       swpal   x20, x7, [x20]\n+    __ ldaddal(Assembler::xword, r23, r28, r21);       \/\/       ldaddal x23, x28, [x21]\n+    __ ldbical(Assembler::xword, r27, r25, r5);        \/\/       ldclral x27, x25, [x5]\n+    __ ldeoral(Assembler::xword, r1, r23, r16);        \/\/       ldeoral x1, x23, [x16]\n+    __ ldorral(Assembler::xword, zr, r5, r12);         \/\/       ldsetal xzr, x5, [x12]\n+    __ ldsminal(Assembler::xword, r9, r28, r15);       \/\/       ldsminal        x9, x28, [x15]\n+    __ ldsmaxal(Assembler::xword, r29, r22, sp);       \/\/       ldsmaxal        x29, x22, [sp]\n+    __ lduminal(Assembler::xword, r19, zr, r5);        \/\/       lduminal        x19, xzr, [x5]\n+    __ ldumaxal(Assembler::xword, r14, r16, sp);       \/\/       ldumaxal        x14, x16, [sp]\n@@ -963,9 +1011,9 @@\n-    __ swpl(Assembler::xword, r3, r13, r19);           \/\/       swpl    x3, x13, [x19]\n-    __ ldaddl(Assembler::xword, r17, r16, r3);         \/\/       ldaddl  x17, x16, [x3]\n-    __ ldbicl(Assembler::xword, r1, r11, r30);         \/\/       ldclrl  x1, x11, [x30]\n-    __ ldeorl(Assembler::xword, r5, r8, r15);          \/\/       ldeorl  x5, x8, [x15]\n-    __ ldorrl(Assembler::xword, r29, r30, r0);         \/\/       ldsetl  x29, x30, [x0]\n-    __ ldsminl(Assembler::xword, r20, r7, r20);        \/\/       ldsminl x20, x7, [x20]\n-    __ ldsmaxl(Assembler::xword, r23, r28, r21);       \/\/       ldsmaxl x23, x28, [x21]\n-    __ lduminl(Assembler::xword, r27, r25, r5);        \/\/       lduminl x27, x25, [x5]\n-    __ ldumaxl(Assembler::xword, r1, r23, r16);        \/\/       ldumaxl x1, x23, [x16]\n+    __ swpl(Assembler::xword, r16, r27, r20);          \/\/       swpl    x16, x27, [x20]\n+    __ ldaddl(Assembler::xword, r16, r12, r11);        \/\/       ldaddl  x16, x12, [x11]\n+    __ ldbicl(Assembler::xword, r9, r6, r30);          \/\/       ldclrl  x9, x6, [x30]\n+    __ ldeorl(Assembler::xword, r17, r27, r28);        \/\/       ldeorl  x17, x27, [x28]\n+    __ ldorrl(Assembler::xword, r30, r7, r10);         \/\/       ldsetl  x30, x7, [x10]\n+    __ ldsminl(Assembler::xword, r20, r10, r4);        \/\/       ldsminl x20, x10, [x4]\n+    __ ldsmaxl(Assembler::xword, r24, r17, r17);       \/\/       ldsmaxl x24, x17, [x17]\n+    __ lduminl(Assembler::xword, r22, r3, r29);        \/\/       lduminl x22, x3, [x29]\n+    __ ldumaxl(Assembler::xword, r15, r22, r19);       \/\/       ldumaxl x15, x22, [x19]\n@@ -974,9 +1022,9 @@\n-    __ swp(Assembler::word, zr, r5, r12);              \/\/       swp     wzr, w5, [x12]\n-    __ ldadd(Assembler::word, r9, r28, r15);           \/\/       ldadd   w9, w28, [x15]\n-    __ ldbic(Assembler::word, r29, r22, sp);           \/\/       ldclr   w29, w22, [sp]\n-    __ ldeor(Assembler::word, r19, zr, r5);            \/\/       ldeor   w19, wzr, [x5]\n-    __ ldorr(Assembler::word, r14, r16, sp);           \/\/       ldset   w14, w16, [sp]\n-    __ ldsmin(Assembler::word, r16, r27, r20);         \/\/       ldsmin  w16, w27, [x20]\n-    __ ldsmax(Assembler::word, r16, r12, r11);         \/\/       ldsmax  w16, w12, [x11]\n-    __ ldumin(Assembler::word, r9, r6, r30);           \/\/       ldumin  w9, w6, [x30]\n-    __ ldumax(Assembler::word, r17, r27, r28);         \/\/       ldumax  w17, w27, [x28]\n+    __ swp(Assembler::word, r19, r22, r2);             \/\/       swp     w19, w22, [x2]\n+    __ ldadd(Assembler::word, r15, r6, r12);           \/\/       ldadd   w15, w6, [x12]\n+    __ ldbic(Assembler::word, r16, r11, r13);          \/\/       ldclr   w16, w11, [x13]\n+    __ ldeor(Assembler::word, r23, r1, r30);           \/\/       ldeor   w23, w1, [x30]\n+    __ ldorr(Assembler::word, r19, r5, r17);           \/\/       ldset   w19, w5, [x17]\n+    __ ldsmin(Assembler::word, r2, r16, r22);          \/\/       ldsmin  w2, w16, [x22]\n+    __ ldsmax(Assembler::word, r13, r10, r21);         \/\/       ldsmax  w13, w10, [x21]\n+    __ ldumin(Assembler::word, r29, r27, r12);         \/\/       ldumin  w29, w27, [x12]\n+    __ ldumax(Assembler::word, r27, r3, r1);           \/\/       ldumax  w27, w3, [x1]\n@@ -985,9 +1033,9 @@\n-    __ swpa(Assembler::word, r30, r7, r10);            \/\/       swpa    w30, w7, [x10]\n-    __ ldadda(Assembler::word, r20, r10, r4);          \/\/       ldadda  w20, w10, [x4]\n-    __ ldbica(Assembler::word, r24, r17, r17);         \/\/       ldclra  w24, w17, [x17]\n-    __ ldeora(Assembler::word, r22, r3, r29);          \/\/       ldeora  w22, w3, [x29]\n-    __ ldorra(Assembler::word, r15, r22, r19);         \/\/       ldseta  w15, w22, [x19]\n-    __ ldsmina(Assembler::word, r19, r22, r2);         \/\/       ldsmina w19, w22, [x2]\n-    __ ldsmaxa(Assembler::word, r15, r6, r12);         \/\/       ldsmaxa w15, w6, [x12]\n-    __ ldumina(Assembler::word, r16, r11, r13);        \/\/       ldumina w16, w11, [x13]\n-    __ ldumaxa(Assembler::word, r23, r1, r30);         \/\/       ldumaxa w23, w1, [x30]\n+    __ swpa(Assembler::word, zr, r24, r19);            \/\/       swpa    wzr, w24, [x19]\n+    __ ldadda(Assembler::word, r17, r9, r28);          \/\/       ldadda  w17, w9, [x28]\n+    __ ldbica(Assembler::word, r27, r15, r7);          \/\/       ldclra  w27, w15, [x7]\n+    __ ldeora(Assembler::word, r21, r23, sp);          \/\/       ldeora  w21, w23, [sp]\n+    __ ldorra(Assembler::word, r25, r2, sp);           \/\/       ldseta  w25, w2, [sp]\n+    __ ldsmina(Assembler::word, r27, r16, r10);        \/\/       ldsmina w27, w16, [x10]\n+    __ ldsmaxa(Assembler::word, r23, r19, r3);         \/\/       ldsmaxa w23, w19, [x3]\n+    __ ldumina(Assembler::word, r16, r0, r25);         \/\/       ldumina w16, w0, [x25]\n+    __ ldumaxa(Assembler::word, r26, r23, r2);         \/\/       ldumaxa w26, w23, [x2]\n@@ -996,9 +1044,9 @@\n-    __ swpal(Assembler::word, r19, r5, r17);           \/\/       swpal   w19, w5, [x17]\n-    __ ldaddal(Assembler::word, r2, r16, r22);         \/\/       ldaddal w2, w16, [x22]\n-    __ ldbical(Assembler::word, r13, r10, r21);        \/\/       ldclral w13, w10, [x21]\n-    __ ldeoral(Assembler::word, r29, r27, r12);        \/\/       ldeoral w29, w27, [x12]\n-    __ ldorral(Assembler::word, r27, r3, r1);          \/\/       ldsetal w27, w3, [x1]\n-    __ ldsminal(Assembler::word, zr, r24, r19);        \/\/       ldsminal        wzr, w24, [x19]\n-    __ ldsmaxal(Assembler::word, r17, r9, r28);        \/\/       ldsmaxal        w17, w9, [x28]\n-    __ lduminal(Assembler::word, r27, r15, r7);        \/\/       lduminal        w27, w15, [x7]\n-    __ ldumaxal(Assembler::word, r21, r23, sp);        \/\/       ldumaxal        w21, w23, [sp]\n+    __ swpal(Assembler::word, r16, r12, r4);           \/\/       swpal   w16, w12, [x4]\n+    __ ldaddal(Assembler::word, r28, r30, r29);        \/\/       ldaddal w28, w30, [x29]\n+    __ ldbical(Assembler::word, r16, r27, r6);         \/\/       ldclral w16, w27, [x6]\n+    __ ldeoral(Assembler::word, r9, r29, r15);         \/\/       ldeoral w9, w29, [x15]\n+    __ ldorral(Assembler::word, r7, r4, r7);           \/\/       ldsetal w7, w4, [x7]\n+    __ ldsminal(Assembler::word, r15, r9, r23);        \/\/       ldsminal        w15, w9, [x23]\n+    __ ldsmaxal(Assembler::word, r8, r2, r28);         \/\/       ldsmaxal        w8, w2, [x28]\n+    __ lduminal(Assembler::word, r21, zr, r5);         \/\/       lduminal        w21, wzr, [x5]\n+    __ ldumaxal(Assembler::word, r27, r0, r17);        \/\/       ldumaxal        w27, w0, [x17]\n@@ -1007,9 +1055,9 @@\n-    __ swpl(Assembler::word, r25, r2, sp);             \/\/       swpl    w25, w2, [sp]\n-    __ ldaddl(Assembler::word, r27, r16, r10);         \/\/       ldaddl  w27, w16, [x10]\n-    __ ldbicl(Assembler::word, r23, r19, r3);          \/\/       ldclrl  w23, w19, [x3]\n-    __ ldeorl(Assembler::word, r16, r0, r25);          \/\/       ldeorl  w16, w0, [x25]\n-    __ ldorrl(Assembler::word, r26, r23, r2);          \/\/       ldsetl  w26, w23, [x2]\n-    __ ldsminl(Assembler::word, r16, r12, r4);         \/\/       ldsminl w16, w12, [x4]\n-    __ ldsmaxl(Assembler::word, r28, r30, r29);        \/\/       ldsmaxl w28, w30, [x29]\n-    __ lduminl(Assembler::word, r16, r27, r6);         \/\/       lduminl w16, w27, [x6]\n-    __ ldumaxl(Assembler::word, r9, r29, r15);         \/\/       ldumaxl w9, w29, [x15]\n+    __ swpl(Assembler::word, r15, r4, r26);            \/\/       swpl    w15, w4, [x26]\n+    __ ldaddl(Assembler::word, r8, r28, r22);          \/\/       ldaddl  w8, w28, [x22]\n+    __ ldbicl(Assembler::word, r27, r27, r25);         \/\/       ldclrl  w27, w27, [x25]\n+    __ ldeorl(Assembler::word, r23, r0, r4);           \/\/       ldeorl  w23, w0, [x4]\n+    __ ldorrl(Assembler::word, r6, r16, r0);           \/\/       ldsetl  w6, w16, [x0]\n+    __ ldsminl(Assembler::word, r4, r15, r1);          \/\/       ldsminl w4, w15, [x1]\n+    __ ldsmaxl(Assembler::word, r10, r7, r5);          \/\/       ldsmaxl w10, w7, [x5]\n+    __ lduminl(Assembler::word, r10, r28, r7);         \/\/       lduminl w10, w28, [x7]\n+    __ ldumaxl(Assembler::word, r20, r23, r21);        \/\/       ldumaxl w20, w23, [x21]\n@@ -1018,4 +1066,4 @@\n-    __ bcax(v7, __ T16B, v4, v7, v15);                 \/\/       bcax            v7.16B, v4.16B, v7.16B, v15.16B\n-    __ eor3(v9, __ T16B, v22, v8, v2);                 \/\/       eor3            v9.16B, v22.16B, v8.16B, v2.16B\n-    __ rax1(v27, __ T2D, v20, v30);                    \/\/       rax1            v27.2D, v20.2D, v30.2D\n-    __ xar(v5, __ T2D, v26, v0, 34);                   \/\/       xar             v5.2D, v26.2D, v0.2D, #34\n+    __ bcax(v5, __ T16B, v10, v8, v16);                \/\/       bcax            v5.16B, v10.16B, v8.16B, v16.16B\n+    __ eor3(v30, __ T16B, v6, v17, v2);                \/\/       eor3            v30.16B, v6.16B, v17.16B, v2.16B\n+    __ rax1(v11, __ T2D, v29, v28);                    \/\/       rax1            v11.2D, v29.2D, v28.2D\n+    __ xar(v2, __ T2D, v26, v22, 58);                  \/\/       xar             v2.2D, v26.2D, v22.2D, #58\n@@ -1024,4 +1072,4 @@\n-    __ sha512h(v14, __ T2D, v3, v25);                  \/\/       sha512h         q14, q3, v25.2D\n-    __ sha512h2(v8, __ T2D, v27, v21);                 \/\/       sha512h2                q8, q27, v21.2D\n-    __ sha512su0(v26, __ T2D, v26);                    \/\/       sha512su0               v26.2D, v26.2D\n-    __ sha512su1(v24, __ T2D, v22, v0);                \/\/       sha512su1               v24.2D, v22.2D, v0.2D\n+    __ sha512h(v14, __ T2D, v13, v27);                 \/\/       sha512h         q14, q13, v27.2D\n+    __ sha512h2(v16, __ T2D, v23, v5);                 \/\/       sha512h2                q16, q23, v5.2D\n+    __ sha512su0(v2, __ T2D, v13);                     \/\/       sha512su0               v2.2D, v13.2D\n+    __ sha512su1(v10, __ T2D, v15, v10);               \/\/       sha512su1               v10.2D, v15.2D, v10.2D\n@@ -1030,5 +1078,5 @@\n-    __ sve_add(z4, __ B, 147u);                        \/\/       add     z4.b, z4.b, #0x93\n-    __ sve_sub(z0, __ B, 124u);                        \/\/       sub     z0.b, z0.b, #0x7c\n-    __ sve_and(z1, __ H, 508u);                        \/\/       and     z1.h, z1.h, #0x1fc\n-    __ sve_eor(z9, __ D, 18374686479671656447u);       \/\/       eor     z9.d, z9.d, #0xff00000000007fff\n-    __ sve_orr(z22, __ S, 251662080u);                 \/\/       orr     z22.s, z22.s, #0xf000f00\n+    __ sve_add(z26, __ S, 98u);                        \/\/       add     z26.s, z26.s, #0x62\n+    __ sve_sub(z3, __ S, 138u);                        \/\/       sub     z3.s, z3.s, #0x8a\n+    __ sve_and(z4, __ B, 131u);                        \/\/       and     z4.b, z4.b, #0x83\n+    __ sve_eor(z17, __ H, 16368u);                     \/\/       eor     z17.h, z17.h, #0x3ff0\n+    __ sve_orr(z2, __ S, 4164941887u);                 \/\/       orr     z2.s, z2.s, #0xf83ff83f\n@@ -1037,5 +1085,5 @@\n-    __ sve_add(z8, __ S, 248u);                        \/\/       add     z8.s, z8.s, #0xf8\n-    __ sve_sub(z6, __ S, 16u);                         \/\/       sub     z6.s, z6.s, #0x10\n-    __ sve_and(z11, __ D, 4160749568u);                \/\/       and     z11.d, z11.d, #0xf8000000\n-    __ sve_eor(z26, __ S, 1610637312u);                \/\/       eor     z26.s, z26.s, #0x60006000\n-    __ sve_orr(z13, __ D, 18446181398634037247u);      \/\/       orr     z13.d, z13.d, #0xfffe003fffffffff\n+    __ sve_add(z23, __ B, 51u);                        \/\/       add     z23.b, z23.b, #0x33\n+    __ sve_sub(z7, __ S, 104u);                        \/\/       sub     z7.s, z7.s, #0x68\n+    __ sve_and(z27, __ S, 7864320u);                   \/\/       and     z27.s, z27.s, #0x780000\n+    __ sve_eor(z2, __ D, 68719476224u);                \/\/       eor     z2.d, z2.d, #0xffffffe00\n+    __ sve_orr(z6, __ S, 1056980736u);                 \/\/       orr     z6.s, z6.s, #0x3f003f00\n@@ -1044,5 +1092,5 @@\n-    __ sve_add(z5, __ B, 112u);                        \/\/       add     z5.b, z5.b, #0x70\n-    __ sve_sub(z10, __ S, 88u);                        \/\/       sub     z10.s, z10.s, #0x58\n-    __ sve_and(z26, __ S, 253952u);                    \/\/       and     z26.s, z26.s, #0x3e000\n-    __ sve_eor(z22, __ S, 496u);                       \/\/       eor     z22.s, z22.s, #0x1f0\n-    __ sve_orr(z19, __ S, 536870910u);                 \/\/       orr     z19.s, z19.s, #0x1ffffffe\n+    __ sve_add(z12, __ S, 67u);                        \/\/       add     z12.s, z12.s, #0x43\n+    __ sve_sub(z24, __ S, 154u);                       \/\/       sub     z24.s, z24.s, #0x9a\n+    __ sve_and(z0, __ H, 511u);                        \/\/       and     z0.h, z0.h, #0x1ff\n+    __ sve_eor(z19, __ D, 9241386433220968447u);       \/\/       eor     z19.d, z19.d, #0x803fffff803fffff\n+    __ sve_orr(z6, __ B, 128u);                        \/\/       orr     z6.b, z6.b, #0x80\n@@ -1051,5 +1099,5 @@\n-    __ sve_add(z14, __ H, 22u);                        \/\/       add     z14.h, z14.h, #0x16\n-    __ sve_sub(z16, __ B, 172u);                       \/\/       sub     z16.b, z16.b, #0xac\n-    __ sve_and(z23, __ B, 62u);                        \/\/       and     z23.b, z23.b, #0x3e\n-    __ sve_eor(z17, __ H, 33279u);                     \/\/       eor     z17.h, z17.h, #0x81ff\n-    __ sve_orr(z16, __ B, 254u);                       \/\/       orr     z16.b, z16.b, #0xfe\n+    __ sve_add(z17, __ D, 74u);                        \/\/       add     z17.d, z17.d, #0x4a\n+    __ sve_sub(z10, __ S, 170u);                       \/\/       sub     z10.s, z10.s, #0xaa\n+    __ sve_and(z22, __ D, 17179852800u);               \/\/       and     z22.d, z22.d, #0x3ffffc000\n+    __ sve_eor(z15, __ S, 8388600u);                   \/\/       eor     z15.s, z15.s, #0x7ffff8\n+    __ sve_orr(z4, __ D, 8064u);                       \/\/       orr     z4.d, z4.d, #0x1f80\n@@ -1058,5 +1106,5 @@\n-    __ sve_add(z3, __ B, 49u);                         \/\/       add     z3.b, z3.b, #0x31\n-    __ sve_sub(z17, __ S, 110u);                       \/\/       sub     z17.s, z17.s, #0x6e\n-    __ sve_and(z12, __ S, 4290777087u);                \/\/       and     z12.s, z12.s, #0xffc00fff\n-    __ sve_eor(z19, __ S, 134217216u);                 \/\/       eor     z19.s, z19.s, #0x7fffe00\n-    __ sve_orr(z23, __ B, 254u);                       \/\/       orr     z23.b, z23.b, #0xfe\n+    __ sve_add(z8, __ S, 162u);                        \/\/       add     z8.s, z8.s, #0xa2\n+    __ sve_sub(z22, __ B, 130u);                       \/\/       sub     z22.b, z22.b, #0x82\n+    __ sve_and(z9, __ S, 4292870159u);                 \/\/       and     z9.s, z9.s, #0xffe0000f\n+    __ sve_eor(z5, __ D, 1150687262887383032u);        \/\/       eor     z5.d, z5.d, #0xff80ff80ff80ff8\n+    __ sve_orr(z22, __ H, 32256u);                     \/\/       orr     z22.h, z22.h, #0x7e00\n@@ -1065,5 +1113,5 @@\n-    __ sve_add(z13, __ S, 54u);                        \/\/       add     z13.s, z13.s, #0x36\n-    __ sve_sub(z0, __ B, 120u);                        \/\/       sub     z0.b, z0.b, #0x78\n-    __ sve_and(z17, __ D, 18014398509481728u);         \/\/       and     z17.d, z17.d, #0x3fffffffffff00\n-    __ sve_eor(z22, __ S, 4294709247u);                \/\/       eor     z22.s, z22.s, #0xfffc0fff\n-    __ sve_orr(z2, __ B, 225u);                        \/\/       orr     z2.b, z2.b, #0xe1\n+    __ sve_add(z8, __ S, 134u);                        \/\/       add     z8.s, z8.s, #0x86\n+    __ sve_sub(z25, __ H, 39u);                        \/\/       sub     z25.h, z25.h, #0x27\n+    __ sve_and(z4, __ S, 4186112u);                    \/\/       and     z4.s, z4.s, #0x3fe000\n+    __ sve_eor(z29, __ B, 131u);                       \/\/       eor     z29.b, z29.b, #0x83\n+    __ sve_orr(z29, __ D, 4611685469745315712u);       \/\/       orr     z29.d, z29.d, #0x3fffff803fffff80\n@@ -1072,45 +1120,46 @@\n-    __ sve_add(z20, __ D, z7, z4);                     \/\/       add     z20.d, z7.d, z4.d\n-    __ sve_sub(z7, __ S, z0, z8);                      \/\/       sub     z7.s, z0.s, z8.s\n-    __ sve_fadd(z19, __ D, z22, z4);                   \/\/       fadd    z19.d, z22.d, z4.d\n-    __ sve_fmul(z9, __ D, z22, z11);                   \/\/       fmul    z9.d, z22.d, z11.d\n-    __ sve_fsub(z5, __ S, z30, z16);                   \/\/       fsub    z5.s, z30.s, z16.s\n-    __ sve_abs(z22, __ H, p3, z1);                     \/\/       abs     z22.h, p3\/m, z1.h\n-    __ sve_add(z8, __ D, p5, z16);                     \/\/       add     z8.d, p5\/m, z8.d, z16.d\n-    __ sve_and(z15, __ S, p1, z4);                     \/\/       and     z15.s, p1\/m, z15.s, z4.s\n-    __ sve_asr(z8, __ B, p1, z29);                     \/\/       asr     z8.b, p1\/m, z8.b, z29.b\n-    __ sve_cnt(z28, __ D, p4, z29);                    \/\/       cnt     z28.d, p4\/m, z29.d\n-    __ sve_eor(z9, __ H, p3, z2);                      \/\/       eor     z9.h, p3\/m, z9.h, z2.h\n-    __ sve_lsl(z28, __ B, p0, z7);                     \/\/       lsl     z28.b, p0\/m, z28.b, z7.b\n-    __ sve_lsr(z26, __ H, p5, z17);                    \/\/       lsr     z26.h, p5\/m, z26.h, z17.h\n-    __ sve_mul(z8, __ D, p4, z21);                     \/\/       mul     z8.d, p4\/m, z8.d, z21.d\n-    __ sve_neg(z5, __ S, p5, z21);                     \/\/       neg     z5.s, p5\/m, z21.s\n-    __ sve_not(z22, __ S, p4, z29);                    \/\/       not     z22.s, p4\/m, z29.s\n-    __ sve_orr(z19, __ S, p0, z4);                     \/\/       orr     z19.s, p0\/m, z19.s, z4.s\n-    __ sve_smax(z23, __ B, p1, z19);                   \/\/       smax    z23.b, p1\/m, z23.b, z19.b\n-    __ sve_smin(z23, __ B, p6, z19);                   \/\/       smin    z23.b, p6\/m, z23.b, z19.b\n-    __ sve_sub(z8, __ D, p2, z14);                     \/\/       sub     z8.d, p2\/m, z8.d, z14.d\n-    __ sve_fabs(z17, __ S, p7, z21);                   \/\/       fabs    z17.s, p7\/m, z21.s\n-    __ sve_fadd(z30, __ D, p0, z10);                   \/\/       fadd    z30.d, p0\/m, z30.d, z10.d\n-    __ sve_fdiv(z12, __ S, p0, z9);                    \/\/       fdiv    z12.s, p0\/m, z12.s, z9.s\n-    __ sve_fmax(z24, __ D, p4, z4);                    \/\/       fmax    z24.d, p4\/m, z24.d, z4.d\n-    __ sve_fmin(z6, __ D, p2, z27);                    \/\/       fmin    z6.d, p2\/m, z6.d, z27.d\n-    __ sve_fmul(z13, __ D, p4, z30);                   \/\/       fmul    z13.d, p4\/m, z13.d, z30.d\n-    __ sve_fneg(z22, __ D, p5, z30);                   \/\/       fneg    z22.d, p5\/m, z30.d\n-    __ sve_frintm(z9, __ S, p3, z19);                  \/\/       frintm  z9.s, p3\/m, z19.s\n-    __ sve_frintn(z20, __ S, p7, z9);                  \/\/       frintn  z20.s, p7\/m, z9.s\n-    __ sve_frintp(z13, __ S, p3, z19);                 \/\/       frintp  z13.s, p3\/m, z19.s\n-    __ sve_fsqrt(z24, __ S, p2, z19);                  \/\/       fsqrt   z24.s, p2\/m, z19.s\n-    __ sve_fsub(z17, __ S, p4, z16);                   \/\/       fsub    z17.s, p4\/m, z17.s, z16.s\n-    __ sve_fmad(z0, __ S, p0, z11, z7);                \/\/       fmad    z0.s, p0\/m, z11.s, z7.s\n-    __ sve_fmla(z14, __ D, p4, z4, z15);               \/\/       fmla    z14.d, p4\/m, z4.d, z15.d\n-    __ sve_fmls(z5, __ D, p0, z10, z21);               \/\/       fmls    z5.d, p0\/m, z10.d, z21.d\n-    __ sve_fnmla(z3, __ D, p0, z9, z19);               \/\/       fnmla   z3.d, p0\/m, z9.d, z19.d\n-    __ sve_fnmls(z10, __ S, p6, z3, z19);              \/\/       fnmls   z10.s, p6\/m, z3.s, z19.s\n-    __ sve_mla(z23, __ H, p7, z13, z21);               \/\/       mla     z23.h, p7\/m, z13.h, z21.h\n-    __ sve_mls(z26, __ S, p3, z17, z30);               \/\/       mls     z26.s, p3\/m, z17.s, z30.s\n-    __ sve_and(z14, z2, z29);                          \/\/       and     z14.d, z2.d, z29.d\n-    __ sve_eor(z21, z20, z7);                          \/\/       eor     z21.d, z20.d, z7.d\n-    __ sve_orr(z2, z1, z26);                           \/\/       orr     z2.d, z1.d, z26.d\n-    __ sve_bic(z9, z16, z17);                          \/\/       bic     z9.d, z16.d, z17.d\n-    __ sve_uzp1(z0, __ D, z4, z2);                     \/\/       uzp1    z0.d, z4.d, z2.d\n-    __ sve_uzp2(z14, __ S, z6, z11);                   \/\/       uzp2    z14.s, z6.s, z11.s\n+    __ sve_add(z2, __ B, z11, z28);                    \/\/       add     z2.b, z11.b, z28.b\n+    __ sve_sub(z7, __ S, z1, z26);                     \/\/       sub     z7.s, z1.s, z26.s\n+    __ sve_fadd(z17, __ D, z14, z8);                   \/\/       fadd    z17.d, z14.d, z8.d\n+    __ sve_fmul(z21, __ D, z24, z5);                   \/\/       fmul    z21.d, z24.d, z5.d\n+    __ sve_fsub(z21, __ D, z17, z22);                  \/\/       fsub    z21.d, z17.d, z22.d\n+    __ sve_abs(z29, __ B, p5, z19);                    \/\/       abs     z29.b, p5\/m, z19.b\n+    __ sve_add(z4, __ B, p4, z23);                     \/\/       add     z4.b, p4\/m, z4.b, z23.b\n+    __ sve_and(z19, __ D, p1, z23);                    \/\/       and     z19.d, p1\/m, z19.d, z23.d\n+    __ sve_asr(z19, __ H, p0, z8);                     \/\/       asr     z19.h, p0\/m, z19.h, z8.h\n+    __ sve_bic(z14, __ D, p6, z17);                    \/\/       bic     z14.d, p6\/m, z14.d, z17.d\n+    __ sve_cnt(z21, __ B, p1, z30);                    \/\/       cnt     z21.b, p1\/m, z30.b\n+    __ sve_eor(z10, __ B, p5, z12);                    \/\/       eor     z10.b, p5\/m, z10.b, z12.b\n+    __ sve_lsl(z9, __ S, p1, z24);                     \/\/       lsl     z9.s, p1\/m, z9.s, z24.s\n+    __ sve_lsr(z4, __ H, p6, z6);                      \/\/       lsr     z4.h, p6\/m, z4.h, z6.h\n+    __ sve_mul(z27, __ S, p6, z13);                    \/\/       mul     z27.s, p6\/m, z27.s, z13.s\n+    __ sve_neg(z30, __ S, p5, z22);                    \/\/       neg     z30.s, p5\/m, z22.s\n+    __ sve_not(z30, __ H, p7, z9);                     \/\/       not     z30.h, p7\/m, z9.h\n+    __ sve_orr(z19, __ D, p1, z20);                    \/\/       orr     z19.d, p1\/m, z19.d, z20.d\n+    __ sve_smax(z9, __ H, p2, z13);                    \/\/       smax    z9.h, p2\/m, z9.h, z13.h\n+    __ sve_smin(z19, __ H, p0, z24);                   \/\/       smin    z19.h, p0\/m, z19.h, z24.h\n+    __ sve_sub(z19, __ S, p3, z17);                    \/\/       sub     z19.s, p3\/m, z19.s, z17.s\n+    __ sve_fabs(z16, __ S, p1, z0);                    \/\/       fabs    z16.s, p1\/m, z0.s\n+    __ sve_fadd(z11, __ S, p2, z15);                   \/\/       fadd    z11.s, p2\/m, z11.s, z15.s\n+    __ sve_fdiv(z15, __ D, p1, z15);                   \/\/       fdiv    z15.d, p1\/m, z15.d, z15.d\n+    __ sve_fmax(z5, __ D, p0, z10);                    \/\/       fmax    z5.d, p0\/m, z5.d, z10.d\n+    __ sve_fmin(z26, __ S, p0, z0);                    \/\/       fmin    z26.s, p0\/m, z26.s, z0.s\n+    __ sve_fmul(z19, __ D, p7, z10);                   \/\/       fmul    z19.d, p7\/m, z19.d, z10.d\n+    __ sve_fneg(z3, __ D, p5, z7);                     \/\/       fneg    z3.d, p5\/m, z7.d\n+    __ sve_frintm(z28, __ S, p3, z21);                 \/\/       frintm  z28.s, p3\/m, z21.s\n+    __ sve_frintn(z26, __ D, p3, z17);                 \/\/       frintn  z26.d, p3\/m, z17.d\n+    __ sve_frintp(z17, __ D, p3, z2);                  \/\/       frintp  z17.d, p3\/m, z2.d\n+    __ sve_fsqrt(z16, __ S, p5, z20);                  \/\/       fsqrt   z16.s, p5\/m, z20.s\n+    __ sve_fsub(z19, __ D, p0, z1);                    \/\/       fsub    z19.d, p0\/m, z19.d, z1.d\n+    __ sve_fmad(z17, __ D, p2, z16, z17);              \/\/       fmad    z17.d, p2\/m, z16.d, z17.d\n+    __ sve_fmla(z0, __ S, p1, z2, z23);                \/\/       fmla    z0.s, p1\/m, z2.s, z23.s\n+    __ sve_fmls(z6, __ D, p2, z20, z14);               \/\/       fmls    z6.d, p2\/m, z20.d, z14.d\n+    __ sve_fnmla(z29, __ D, p3, z3, z3);               \/\/       fnmla   z29.d, p3\/m, z3.d, z3.d\n+    __ sve_fnmls(z9, __ S, p0, z24, z27);              \/\/       fnmls   z9.s, p0\/m, z24.s, z27.s\n+    __ sve_mla(z19, __ S, p5, z7, z25);                \/\/       mla     z19.s, p5\/m, z7.s, z25.s\n+    __ sve_mls(z13, __ B, p1, z7, z25);                \/\/       mls     z13.b, p1\/m, z7.b, z25.b\n+    __ sve_and(z21, z17, z17);                         \/\/       and     z21.d, z17.d, z17.d\n+    __ sve_eor(z3, z9, z19);                           \/\/       eor     z3.d, z9.d, z19.d\n+    __ sve_orr(z7, z11, z14);                          \/\/       orr     z7.d, z11.d, z14.d\n+    __ sve_bic(z17, z11, z13);                         \/\/       bic     z17.d, z11.d, z13.d\n+    __ sve_uzp1(z17, __ H, z30, z17);                  \/\/       uzp1    z17.h, z30.h, z17.h\n+    __ sve_uzp2(z15, __ S, z14, z26);                  \/\/       uzp2    z15.s, z14.s, z26.s\n@@ -1119,9 +1168,9 @@\n-    __ sve_andv(v14, __ H, p4, z29);                   \/\/       andv h14, p4, z29.h\n-    __ sve_orv(v3, __ H, p0, z22);                     \/\/       orv h3, p0, z22.h\n-    __ sve_eorv(v3, __ B, p6, z27);                    \/\/       eorv b3, p6, z27.b\n-    __ sve_smaxv(v19, __ D, p5, z7);                   \/\/       smaxv d19, p5, z7.d\n-    __ sve_sminv(v21, __ H, p3, z5);                   \/\/       sminv h21, p3, z5.h\n-    __ sve_fminv(v25, __ D, p1, z21);                  \/\/       fminv d25, p1, z21.d\n-    __ sve_fmaxv(v17, __ S, p0, z3);                   \/\/       fmaxv s17, p0, z3.s\n-    __ sve_fadda(v19, __ S, p3, z7);                   \/\/       fadda s19, p3, s19, z7.s\n-    __ sve_uaddv(v14, __ H, p4, z17);                  \/\/       uaddv d14, p4, z17.h\n+    __ sve_andv(v27, __ H, p5, z7);                    \/\/       andv h27, p5, z7.h\n+    __ sve_orv(v5, __ H, p7, z27);                     \/\/       orv h5, p7, z27.h\n+    __ sve_eorv(v0, __ S, p3, z24);                    \/\/       eorv s0, p3, z24.s\n+    __ sve_smaxv(v20, __ S, p0, z3);                   \/\/       smaxv s20, p0, z3.s\n+    __ sve_sminv(v25, __ D, p1, z25);                  \/\/       sminv d25, p1, z25.d\n+    __ sve_fminv(v17, __ S, p4, z1);                   \/\/       fminv s17, p4, z1.s\n+    __ sve_fmaxv(v14, __ S, p7, z13);                  \/\/       fmaxv s14, p7, z13.s\n+    __ sve_fadda(v17, __ D, p0, z30);                  \/\/       fadda d17, p0, d17, z30.d\n+    __ sve_uaddv(v22, __ H, p5, z29);                  \/\/       uaddv d22, p5, z29.h\n@@ -1146,7 +1195,7 @@\n-    0x14000000,     0x17ffffd7,     0x140003a5,     0x94000000,\n-    0x97ffffd4,     0x940003a2,     0x3400000a,     0x34fffa2a,\n-    0x340073ea,     0x35000008,     0x35fff9c8,     0x35007388,\n-    0xb400000b,     0xb4fff96b,     0xb400732b,     0xb500001d,\n-    0xb5fff91d,     0xb50072dd,     0x10000013,     0x10fff8b3,\n-    0x10007273,     0x90000013,     0x36300016,     0x3637f836,\n-    0x363071f6,     0x3758000c,     0x375ff7cc,     0x3758718c,\n+    0x14000000,     0x17ffffd7,     0x140003d2,     0x94000000,\n+    0x97ffffd4,     0x940003cf,     0x3400000a,     0x34fffa2a,\n+    0x3400798a,     0x35000008,     0x35fff9c8,     0x35007928,\n+    0xb400000b,     0xb4fff96b,     0xb40078cb,     0xb500001d,\n+    0xb5fff91d,     0xb500787d,     0x10000013,     0x10fff8b3,\n+    0x10007813,     0x90000013,     0x36300016,     0x3637f836,\n+    0x36307796,     0x3758000c,     0x375ff7cc,     0x3758772c,\n@@ -1157,13 +1206,13 @@\n-    0x54006f60,     0x54000001,     0x54fff541,     0x54006f01,\n-    0x54000002,     0x54fff4e2,     0x54006ea2,     0x54000002,\n-    0x54fff482,     0x54006e42,     0x54000003,     0x54fff423,\n-    0x54006de3,     0x54000003,     0x54fff3c3,     0x54006d83,\n-    0x54000004,     0x54fff364,     0x54006d24,     0x54000005,\n-    0x54fff305,     0x54006cc5,     0x54000006,     0x54fff2a6,\n-    0x54006c66,     0x54000007,     0x54fff247,     0x54006c07,\n-    0x54000008,     0x54fff1e8,     0x54006ba8,     0x54000009,\n-    0x54fff189,     0x54006b49,     0x5400000a,     0x54fff12a,\n-    0x54006aea,     0x5400000b,     0x54fff0cb,     0x54006a8b,\n-    0x5400000c,     0x54fff06c,     0x54006a2c,     0x5400000d,\n-    0x54fff00d,     0x540069cd,     0x5400000e,     0x54ffefae,\n-    0x5400696e,     0x5400000f,     0x54ffef4f,     0x5400690f,\n+    0x54007500,     0x54000001,     0x54fff541,     0x540074a1,\n+    0x54000002,     0x54fff4e2,     0x54007442,     0x54000002,\n+    0x54fff482,     0x540073e2,     0x54000003,     0x54fff423,\n+    0x54007383,     0x54000003,     0x54fff3c3,     0x54007323,\n+    0x54000004,     0x54fff364,     0x540072c4,     0x54000005,\n+    0x54fff305,     0x54007265,     0x54000006,     0x54fff2a6,\n+    0x54007206,     0x54000007,     0x54fff247,     0x540071a7,\n+    0x54000008,     0x54fff1e8,     0x54007148,     0x54000009,\n+    0x54fff189,     0x540070e9,     0x5400000a,     0x54fff12a,\n+    0x5400708a,     0x5400000b,     0x54fff0cb,     0x5400702b,\n+    0x5400000c,     0x54fff06c,     0x54006fcc,     0x5400000d,\n+    0x54fff00d,     0x54006f6d,     0x5400000e,     0x54ffefae,\n+    0x54006f0e,     0x5400000f,     0x54ffef4f,     0x54006eaf,\n@@ -1171,113 +1220,124 @@\n-    0xd44cad80,     0xd503201f,     0xd69f03e0,     0xd6bf03e0,\n-    0xd5033fdf,     0xd5033e9f,     0xd50332bf,     0xd61f0200,\n-    0xd63f0280,     0xc80a7d1b,     0xc800fea1,     0xc85f7fb1,\n-    0xc85fff9d,     0xc89ffee1,     0xc8dffe95,     0x88167e7b,\n-    0x880bfcd0,     0x885f7c11,     0x885ffd44,     0x889ffed8,\n-    0x88dffe6a,     0x48017fc5,     0x4808fe2c,     0x485f7dc9,\n-    0x485ffc27,     0x489ffe05,     0x48dffd82,     0x080a7c6c,\n-    0x081cff4e,     0x085f7d5e,     0x085ffeae,     0x089ffd2d,\n-    0x08dfff76,     0xc87f4d7c,     0xc87fcc5e,     0xc8220417,\n-    0xc82cb5f0,     0x887f55b1,     0x887ff90b,     0x88382c2d,\n-    0x883aedb5,     0xf819928b,     0xb803e21c,     0x381f713b,\n-    0x781ce322,     0xf850f044,     0xb85e129e,     0x385e92f1,\n-    0x785ff35d,     0x39801921,     0x7881318b,     0x78dce02b,\n-    0xb8829313,     0xfc45f318,     0xbc5d50af,     0xfc001375,\n-    0xbc1951b7,     0xf8008c0a,     0xb801dc03,     0x38009dca,\n-    0x781fdf3d,     0xf8570e0c,     0xb85faecc,     0x385f6d6d,\n-    0x785ebea0,     0x38804cd7,     0x789cbce3,     0x78df9c9c,\n-    0xb89eed18,     0xfc40cd6e,     0xbc5bdd93,     0xfc103c14,\n-    0xbc040c08,     0xf81a2783,     0xb81ca4eb,     0x381e855b,\n-    0x7801b4e6,     0xf853654d,     0xb85d74af,     0x384095a2,\n-    0x785ec5bc,     0x389e15a9,     0x789dc703,     0x78c06474,\n-    0xb89ff667,     0xfc57e51e,     0xbc4155f9,     0xfc05a6ee,\n-    0xbc1df408,     0xf835da2a,     0xb836d9a4,     0x3833580d,\n-    0x7826cb6c,     0xf8706900,     0xb87ae880,     0x3865db2e,\n-    0x78714889,     0x38a7789b,     0x78beca2f,     0x78f6c810,\n-    0xb8bef956,     0xfc6afabd,     0xbc734963,     0xfc3d5b8d,\n-    0xbc25fbb7,     0xf9189d05,     0xb91ecb1d,     0x39187a33,\n-    0x791f226d,     0xf95aa2f3,     0xb9587bb7,     0x395f7176,\n-    0x795d9143,     0x399e7e08,     0x799a2697,     0x79df3422,\n-    0xb99c2624,     0xfd5c2374,     0xbd5fa1d9,     0xfd1d595a,\n-    0xbd1b1869,     0x5800595b,     0x1800000b,     0xf8945060,\n-    0xd8000000,     0xf8ae6ba0,     0xf99a0080,     0x1a070035,\n-    0x3a0700a8,     0x5a0e0367,     0x7a11009b,     0x9a000380,\n-    0xba1e030c,     0xda0f0320,     0xfa030301,     0x0b340b11,\n-    0x2b2a278d,     0xcb22aa0f,     0x6b2d29bd,     0x8b2cce8c,\n-    0xab2b877e,     0xcb21c8ee,     0xeb3ba47d,     0x3a4d400e,\n-    0x7a5132c6,     0xba5e622e,     0xfa53814c,     0x3a52d8c2,\n-    0x7a4d8924,     0xba4b3aab,     0xfa4d7882,     0x1a96804c,\n-    0x1a912618,     0x5a90b0e6,     0x5a96976b,     0x9a9db06a,\n-    0x9a9b374c,     0xda95c14f,     0xda89c6fe,     0x5ac0015e,\n-    0x5ac005fd,     0x5ac00bdd,     0x5ac012b9,     0x5ac01404,\n-    0xdac002b1,     0xdac0061d,     0xdac00a95,     0xdac00e66,\n-    0xdac0107e,     0xdac01675,     0x1ac00b0b,     0x1ace0f3b,\n-    0x1ad121c3,     0x1ad825e7,     0x1ad92a3c,     0x1adc2f42,\n-    0x9ada0b25,     0x9ad10e1b,     0x9acc22a6,     0x9acc2480,\n-    0x9adc2a3b,     0x9ad12c5c,     0x9bce7dea,     0x9b597c6e,\n-    0x1b0e166f,     0x1b1ae490,     0x9b023044,     0x9b089e3d,\n-    0x9b391083,     0x9b24c73a,     0x9bb15f40,     0x9bbcc6af,\n-    0x7ea3d55b,     0x1e3908e0,     0x1e2f18c9,     0x1e2a29fd,\n-    0x1e273a22,     0x7ef7d56b,     0x1e770ba7,     0x1e6b1b6e,\n-    0x1e78288b,     0x1e6e39ec,     0x1f1c3574,     0x1f17f98b,\n-    0x1f2935da,     0x1f2574ea,     0x1f4b306f,     0x1f5ec7cf,\n-    0x1f6f3e93,     0x1f6226a9,     0x1e2040fb,     0x1e20c3dd,\n-    0x1e214031,     0x1e21c0c2,     0x1e22c06a,     0x1e604178,\n-    0x1e60c027,     0x1e61400b,     0x1e61c223,     0x1e6240dc,\n-    0x1e3800d6,     0x9e380360,     0x1e78005a,     0x9e7800e5,\n-    0x1e22017c,     0x9e2201b9,     0x1e6202eb,     0x9e620113,\n-    0x1e2602b1,     0x9e660299,     0x1e270233,     0x9e6703a2,\n-    0x1e2822c0,     0x1e7322a0,     0x1e202288,     0x1e602168,\n-    0x293c19f4,     0x2966387b,     0x69762970,     0xa9041dc7,\n-    0xa9475c0c,     0x29b61ccd,     0x29ee3c5e,     0x69ee0764,\n-    0xa9843977,     0xa9f46ebd,     0x28ba16b6,     0x28fc44db,\n-    0x68f61430,     0xa8b352cd,     0xa8c56d5e,     0x28024565,\n-    0x2874134e,     0xa8027597,     0xa87b1aa0,     0x0c40734f,\n-    0x4cdfa177,     0x0cc76ee8,     0x4cdf2733,     0x0d40c23d,\n-    0x4ddfcaf8,     0x0dd9ccaa,     0x4c408d51,     0x0cdf85ec,\n-    0x4d60c239,     0x0dffcbc1,     0x4de9ce30,     0x4cc24999,\n-    0x0c404a7a,     0x4d40e6af,     0x4ddfe9b9,     0x0dddef8e,\n-    0x4cdf07b1,     0x0cc000fb,     0x0d60e238,     0x0dffe740,\n-    0x0de2eb2c,     0x0e31baf6,     0x4e31bb9b,     0x0e71b8a4,\n-    0x4e71b907,     0x4eb1b8e6,     0x0e30a841,     0x4e30ab7a,\n-    0x0e70aa0f,     0x4e70a862,     0x4eb0a9cd,     0x6e30f9cd,\n-    0x0e31ab38,     0x2e31ab17,     0x4e31a8a4,     0x6e31aa93,\n-    0x0e71aa0f,     0x2e71a820,     0x4e71a8a4,     0x6e71aab4,\n-    0x4eb1a98b,     0x6eb1abdd,     0x6eb0fa0f,     0x7e30fad5,\n-    0x7e70f8a4,     0x7eb0f9ee,     0x7ef0faf6,     0x0e20bb59,\n-    0x4e20b8e6,     0x0e60b9ac,     0x4e60b9ee,     0x0ea0b9cd,\n-    0x4ea0b9ee,     0x4ee0b949,     0x0ea0fb59,     0x4ea0fbbc,\n-    0x4ee0f96a,     0x2ea0fa93,     0x6ea0f98b,     0x6ee0fa51,\n-    0x2ea1fad5,     0x6ea1fa0f,     0x6ee1fab4,     0x2e205b17,\n-    0x6e205b7a,     0x0e271cc5,     0x4e281ce6,     0x0eb11e0f,\n-    0x4eb11e0f,     0x2e3b1f59,     0x6e321e30,     0x0e3d879b,\n-    0x4e3a8738,     0x0e71860f,     0x4e7b8759,     0x0eb085ee,\n-    0x4eac856a,     0x4eef85cd,     0x0e30d5ee,     0x4e36d6b4,\n-    0x4e63d441,     0x2e3886f6,     0x6e2087fe,     0x2e7085ee,\n-    0x6e648462,     0x2ea884e6,     0x6ea58483,     0x6ee98507,\n-    0x0ebad738,     0x4ea2d420,     0x4efdd79b,     0x0e3f9fdd,\n-    0x4e279cc5,     0x0e679cc5,     0x4e7f9fdd,     0x0ead9d8b,\n-    0x4ebb9f59,     0x2ea2d420,     0x6ea0d7fe,     0x6ee2d420,\n-    0x2e33de51,     0x6e3edfbc,     0x6e7bdf59,     0x0e6b9549,\n-    0x4e7b9759,     0x0eae95ac,     0x4eb1960f,     0x0e2dcd8b,\n-    0x4e2ccd6a,     0x4e73ce51,     0x2e7a9738,     0x6e7796d5,\n-    0x2eb99717,     0x6ea29420,     0x0eb2ce30,     0x4eaccd6a,\n-    0x4ee8cce6,     0x2e3effbc,     0x6e28fce6,     0x6e67fcc5,\n-    0x0e2764c5,     0x4e3666b4,     0x0e736651,     0x4e71660f,\n-    0x0eb36651,     0x4ebf67dd,     0x0e3ca77a,     0x4e3ea7bc,\n-    0x0e63a441,     0x4e7da79b,     0x0ea2a420,     0x4eb6a6b4,\n-    0x0e3ef7bc,     0x4e31f60f,     0x4e6ef5ac,     0x0e2c6d6a,\n-    0x4e3e6fbc,     0x0e7e6fbc,     0x4e756e93,     0x0eb86ef6,\n-    0x4eac6d6a,     0x0e26aca4,     0x4e20affe,     0x0e76aeb4,\n-    0x4e6aad28,     0x0ea0affe,     0x4eb3ae51,     0x0eacf56a,\n-    0x4ebdf79b,     0x4ee4f462,     0x2e3a8f38,     0x6e268ca4,\n-    0x2e658c83,     0x6e6a8d28,     0x2eb88ef6,     0x6eb38e51,\n-    0x6eef8dcd,     0x0e26e4a4,     0x4e3ee7bc,     0x4e79e717,\n-    0x0e3736d5,     0x4e3b3759,     0x0e7a3738,     0x4e653483,\n-    0x0eb93717,     0x4ebc377a,     0x4ef93717,     0x2e3035ee,\n-    0x6e3736d5,     0x2e653483,     0x6e793717,     0x2eaa3528,\n-    0x6eba3738,     0x6ef53693,     0x2e313e0f,     0x6e323e30,\n-    0x2e643c62,     0x6e633c41,     0x2ea23c20,     0x6eba3f38,\n-    0x6ee63ca4,     0x2ea5e483,     0x6eade58b,     0x6ee0e7fe,\n-    0x0e3d3f9b,     0x4e2b3d49,     0x0e7b3f59,     0x4e643c62,\n-    0x0eae3dac,     0x4eb33e51,     0x4ee03ffe,     0x2e23e441,\n-    0x6e2ee5ac,     0x6e7ee7bc,     0xba5fd3e3,     0x3a5f03e5,\n+    0xd44cad80,     0xd503201f,     0xd503203f,     0xd503205f,\n+    0xd503209f,     0xd50320bf,     0xd503219f,     0xd50323bf,\n+    0xd503239f,     0xd50321df,     0xd50323ff,     0xd50323df,\n+    0xd503211f,     0xd503233f,     0xd503231f,     0xd503215f,\n+    0xd503237f,     0xd503235f,     0xd69f03e0,     0xd6bf03e0,\n+    0xd5033fdf,     0xd503207f,     0xd50320ff,     0xd5033e9f,\n+    0xd50332bf,     0xd61f0200,     0xd63f0280,     0xdac123ea,\n+    0xdac127fb,     0xdac12be8,     0xdac12fe0,     0xdac133e1,\n+    0xdac137f5,     0xdac13bf1,     0xdac13ffd,     0xdac147fd,\n+    0xd61f0b9f,     0xd61f0c3f,     0xd63f0aff,     0xd63f0ebf,\n+    0xdac143f4,     0xc8167e7b,     0xc80bfcd0,     0xc85f7c11,\n+    0xc85ffd44,     0xc89ffed8,     0xc8dffe6a,     0x88017fc5,\n+    0x8808fe2c,     0x885f7dc9,     0x885ffc27,     0x889ffe05,\n+    0x88dffd82,     0x480a7c6c,     0x481cff4e,     0x485f7d5e,\n+    0x485ffeae,     0x489ffd2d,     0x48dfff76,     0x081c7d73,\n+    0x081efc53,     0x085f7ee2,     0x085ffc01,     0x089ffe0c,\n+    0x08dffded,     0xc87f55b1,     0xc87ff90b,     0xc8382c2d,\n+    0xc83aedb5,     0x887f0d94,     0x887f87a6,     0x88262e04,\n+    0x8824b2be,     0xf8061366,     0xb802d151,     0x381e32da,\n+    0x781ce155,     0xf847d30e,     0xb85f0307,     0x39403448,\n+    0x785c333e,     0x389f2183,     0x789e422a,     0x78dfb075,\n+    0xb8817322,     0xfc5bb039,     0xbc40637d,     0xfc02919d,\n+    0xbc18d2c2,     0xf8003cba,     0xb8199cb4,     0x381e7d88,\n+    0x781c7c54,     0xf8516fae,     0xb8404fad,     0x385f7e78,\n+    0x785edf63,     0x389fbc31,     0x789f3e71,     0x78de6d75,\n+    0xb89c4d21,     0xfc509efa,     0xbc581eb6,     0xfc128ced,\n+    0xbc198dac,     0xf81134b4,     0xb81b679d,     0x381ea704,\n+    0x781eb52d,     0xf85c94fa,     0xb858d46d,     0x3840c4a1,\n+    0x785de5a8,     0x389e5697,     0x789fe4d4,     0x78dd6629,\n+    0xb89e24d5,     0xfc5e36d0,     0xbc5fd569,     0xfc03c756,\n+    0xbc1fe7b0,     0xf824cac1,     0xb82d7bd7,     0x382c596c,\n+    0x78207999,     0xf86058f1,     0xb86e5a61,     0x3869784c,\n+    0x787bc936,     0x38aff995,     0x78b078dc,     0x78f6ca39,\n+    0xb8bdea24,     0xfc63f825,     0xbc6d5a38,     0xfc37fa31,\n+    0xbc25dbd1,     0xf91ba97d,     0xb91e4abc,     0x391b485c,\n+    0x7919c380,     0xf95e18f9,     0xb958a860,     0x395f20be,\n+    0x7958f6ee,     0x399bea6a,     0x799b363d,     0x79da47d9,\n+    0xb99d5851,     0xfd5da60f,     0xbd584fcc,     0xfd1db821,\n+    0xbd1e9965,     0x58ffdb71,     0x18ffdb42,     0xf886f320,\n+    0xd8ffdb00,     0xf8bb49c0,     0xf99815c0,     0x1a0f0320,\n+    0x3a030301,     0x5a140311,     0x7a0d000b,     0x9a07015c,\n+    0xba1001e4,     0xda140182,     0xfa0d01bd,     0x0b2c6cce,\n+    0x2b3e5331,     0xcb2e0620,     0x6b3de709,     0x8b20cac1,\n+    0xab362f8c,     0xcb31518a,     0xeb2acf8f,     0x3a57d262,\n+    0x7a493226,     0xba4832a2,     0xfa454261,     0x3a518acc,\n+    0x7a472a23,     0xba5cba05,     0xfa439ac5,     0x1a8cb35d,\n+    0x1a8f355b,     0x5a9e9395,     0x5a9e3769,     0x9a9dd1fd,\n+    0x9a8406b9,     0xda9d62b1,     0xda868695,     0x5ac0007e,\n+    0x5ac00675,     0x5ac00b0b,     0x5ac01360,     0x5ac015d9,\n+    0xdac001c3,     0xdac004f1,     0xdac00b0f,     0xdac00e3c,\n+    0xdac01059,     0xdac0179a,     0xdac10325,     0xdac1077a,\n+    0xdac10a30,     0xdac10ea6,     0xdac1100c,     0xdac11584,\n+    0xdac11a3b,     0xdac11f9c,     0xd71f0851,     0xd71f0d4f,\n+    0xd73f09ce,     0xd73f0c79,     0x1ace0a6f,     0x1ac40e05,\n+    0x1ac4233a,     0x1acc2442,     0x1ac82a3d,     0x1ac42c67,\n+    0x9ada0899,     0x9ad10c99,     0x9ad12340,     0x9ad525f7,\n+    0x9adb2a3c,     0x9ac02c6a,     0x9bc97f27,     0x9b5d7de6,\n+    0x1b02454f,     0x1b0bdd67,     0x9b173ba7,     0x9b0b917b,\n+    0x9b2f3998,     0x9b3cb574,     0x9bb7798b,     0x9ba9b5da,\n+    0x7ea5d4ea,     0x1e2309fd,     0x1e2f198b,     0x1e312bde,\n+    0x1e2f3a93,     0x7ef5d52f,     0x1e7b0922,     0x1e7e1ba7,\n+    0x1e622831,     0x1e633946,     0x1f070578,     0x1f03c40b,\n+    0x1f3618dc,     0x1f3a0b60,     0x1f5c2ce5,     0x1f4bddb9,\n+    0x1f715513,     0x1f734699,     0x1e2043a2,     0x1e20c116,\n+    0x1e214275,     0x1e21c174,     0x1e22c291,     0x1e6041e6,\n+    0x1e60c063,     0x1e61407c,     0x1e61c1db,     0x1e62414e,\n+    0x1e38016c,     0x9e380151,     0x1e7800f9,     0x9e7801c7,\n+    0x1e22001c,     0x9e220016,     0x1e6202ec,     0x9e6201ad,\n+    0x1e2601c7,     0x9e660107,     0x1e270234,     0x9e6703dc,\n+    0x1e222200,     0x1e702120,     0x1e202288,     0x1e6023a8,\n+    0x29266b01,     0x29462d85,     0x69463f75,     0xa90272c5,\n+    0xa97e467b,     0x29aa1f4d,     0x29fa54cd,     0x69c27b74,\n+    0xa9b81555,     0xa9fa12ee,     0x2884321d,     0x28cc477a,\n+    0x68f451c4,     0xa8b909d0,     0xa8f060f7,     0x281069e0,\n+    0x2866191a,     0xa8392b2f,     0xa8760670,     0x0c4073db,\n+    0x4cdfa079,     0x0cca6e1e,     0x4cdf2670,     0x0d40c317,\n+    0x4ddfc948,     0x0dd7ce89,     0x4c408c62,     0x0cdf87c8,\n+    0x4d60c344,     0x0dffca23,     0x4df0cd7d,     0x4cd74801,\n+    0x0c404aa0,     0x4d40e4e5,     0x4ddfe8e1,     0x0dcfeca2,\n+    0x4cdf07bb,     0x0cc70098,     0x0d60e2ef,     0x0dffe6ae,\n+    0x0df9e934,     0x0e31bb17,     0x4e31bb7a,     0x0e71b8c5,\n+    0x4e71b8e6,     0x4eb1ba0f,     0x0e30aa0f,     0x4e30ab59,\n+    0x0e70aa30,     0x4e70ab9b,     0x4eb0ab38,     0x6e30fa0f,\n+    0x0e31ab59,     0x2e31a9ee,     0x4e31a96a,     0x6e31a9cd,\n+    0x0e71a9ee,     0x2e71aab4,     0x4e71a841,     0x6e71aaf6,\n+    0x4eb1abfe,     0x6eb1a9ee,     0x6eb0f862,     0x7e30f8e6,\n+    0x7e70f883,     0x7eb0f907,     0x7ef0fb38,     0x0e20b820,\n+    0x4e20bb9b,     0x0e60bbdd,     0x4e60b8c5,     0x0ea0b8c5,\n+    0x4ea0bbdd,     0x4ee0b98b,     0x0ea0fb59,     0x4ea0f820,\n+    0x4ee0fbfe,     0x2ea0f820,     0x6ea0fa51,     0x6ee0fbbc,\n+    0x2ea1fb59,     0x6ea1f949,     0x6ee1fb59,     0x2e2059ac,\n+    0x6e205a0f,     0x0e2d1d8b,     0x4e2c1d6a,     0x0eb31e51,\n+    0x4eba1f38,     0x2e371ed5,     0x6e391f17,     0x0e228420,\n+    0x4e328630,     0x0e6c856a,     0x4e6884e6,     0x0ebe87bc,\n+    0x4ea884e6,     0x4ee784c5,     0x0e27d4c5,     0x4e36d6b4,\n+    0x4e73d651,     0x2e31860f,     0x6e338651,     0x2e7f87dd,\n+    0x6e7c877a,     0x2ebe87bc,     0x6ea38441,     0x6efd879b,\n+    0x0ea2d420,     0x4eb6d6b4,     0x4efed7bc,     0x0e319e0f,\n+    0x4e2e9dac,     0x0e6c9d6a,     0x4e7e9fbc,     0x0ebe9fbc,\n+    0x4eb59e93,     0x2eb8d6f6,     0x6eacd56a,     0x6ee6d4a4,\n+    0x2e20dffe,     0x6e36deb4,     0x6e6add28,     0x0e6097fe,\n+    0x4e739651,     0x0eac956a,     0x4ebd979b,     0x0e24cc62,\n+    0x4e3acf38,     0x4e66cca4,     0x2e659483,     0x6e6a9528,\n+    0x2eb896f6,     0x6eb39651,     0x0eafcdcd,     0x4ea6cca4,\n+    0x4efecfbc,     0x2e39ff17,     0x6e37fed5,     0x6e7bff59,\n+    0x0e3a6738,     0x4e256483,     0x0e796717,     0x4e7c677a,\n+    0x0eb96717,     0x4eb065ee,     0x0e37a6d5,     0x4e25a483,\n+    0x0e79a717,     0x4e6aa528,     0x0ebaa738,     0x4eb5a693,\n+    0x0e31f60f,     0x4e32f630,     0x4e64f462,     0x0e236c41,\n+    0x4e226c20,     0x0e7a6f38,     0x4e666ca4,     0x0ea56c83,\n+    0x4ead6d8b,     0x0e20affe,     0x4e3daf9b,     0x0e6bad49,\n+    0x4e7baf59,     0x0ea4ac62,     0x4eaeadac,     0x0eb3f651,\n+    0x4ea0f7fe,     0x4ee3f441,     0x2e2e8dac,     0x6e3e8fbc,\n+    0x2e628c20,     0x6e738e51,     0x2eae8dac,     0x6eb38e51,\n+    0x6ef78ed5,     0x0e2ee5ac,     0x4e3de79b,     0x4e7fe7dd,\n+    0x0e2037fe,     0x4e233441,     0x0e7b3759,     0x4e7d379b,\n+    0x0ea634a4,     0x4ebf37dd,     0x4ee53483,     0x2e2834e6,\n+    0x6e3f37dd,     0x2e7b3759,     0x6e733651,     0x2eaa3528,\n+    0x6ea93507,     0x6eee35ac,     0x2e223c20,     0x6e353e93,\n+    0x2e633c41,     0x6e793f17,     0x2ea43c62,     0x6ea23c20,\n+    0x6eea3d28,     0x2eb9e717,     0x6ebbe759,     0x6ef1e60f,\n+    0x0e3f3fdd,     0x4e253c83,     0x0e6c3d6a,     0x4e783ef6,\n+    0x0eac3d6a,     0x4ea63ca4,     0x4ef33e51,     0x2e23e441,\n+    0x6e2de58b,     0x6e69e507,     0xba5fd3e3,     0x3a5f03e5,\n@@ -1338,42 +1398,43 @@\n-    0x1e7c3000,     0x1e7e1000,     0x1e7e3000,     0xf8208193,\n-    0xf83101b6,     0xf83c13fe,     0xf821239a,     0xf824309e,\n-    0xf826535e,     0xf8304109,     0xf82c7280,     0xf8216058,\n-    0xf8a08309,     0xf8ba03d0,     0xf8a312ea,     0xf8aa21e4,\n-    0xf8a2310b,     0xf8aa522f,     0xf8a2418a,     0xf8ac71af,\n-    0xf8a26287,     0xf8fa8090,     0xf8e20184,     0xf8f01215,\n-    0xf8f022ab,     0xf8f7334c,     0xf8f751dc,     0xf8eb4038,\n-    0xf8ec715f,     0xf8f06047,     0xf863826d,     0xf8710070,\n-    0xf86113cb,     0xf86521e8,     0xf87d301e,     0xf8745287,\n-    0xf87742bc,     0xf87b70b9,     0xf8616217,     0xb83f8185,\n-    0xb82901fc,     0xb83d13f6,     0xb83320bf,     0xb82e33f0,\n-    0xb830529b,     0xb830416c,     0xb82973c6,     0xb831639b,\n-    0xb8be8147,     0xb8b4008a,     0xb8b81231,     0xb8b623a3,\n-    0xb8af3276,     0xb8b35056,     0xb8af4186,     0xb8b071ab,\n-    0xb8b763c1,     0xb8f38225,     0xb8e202d0,     0xb8ed12aa,\n-    0xb8fd219b,     0xb8fb3023,     0xb8ff5278,     0xb8f14389,\n-    0xb8fb70ef,     0xb8f563f7,     0xb87983e2,     0xb87b0150,\n-    0xb8771073,     0xb8702320,     0xb87a3057,     0xb870508c,\n-    0xb87c43be,     0xb87070db,     0xb86961fd,     0xce273c87,\n-    0xce080ac9,     0xce7e8e9b,     0xce808b45,     0xce79806e,\n-    0xce758768,     0xcec0835a,     0xce608ad8,     0x2520d264,\n-    0x2521cf80,     0x058074c1,     0x054242c9,     0x05004476,\n-    0x25a0df08,     0x25a1c206,     0x0583288b,     0x05401c3a,\n-    0x05027e8d,     0x2520ce05,     0x25a1cb0a,     0x0580989a,\n-    0x0540e096,     0x0500fb73,     0x2560c2ce,     0x2521d590,\n-    0x05803e97,     0x05400d31,     0x05003ed0,     0x2520c623,\n-    0x25a1cdd1,     0x058052ac,     0x0540ba33,     0x05003ed7,\n-    0x25a0c6cd,     0x2521cf00,     0x0583c5b1,     0x05407336,\n-    0x05001e62,     0x04e400f4,     0x04a80407,     0x65c402d3,\n-    0x65cb0ac9,     0x659007c5,     0x0456ac36,     0x04c01608,\n-    0x049a048f,     0x041087a8,     0x04dab3bc,     0x04590c49,\n-    0x041380fc,     0x0451963a,     0x04d012a8,     0x0497b6a5,\n-    0x049eb3b6,     0x04980093,     0x04080677,     0x040a1a77,\n-    0x04c109c8,     0x049cbeb1,     0x65c0815e,     0x658d812c,\n-    0x65c69098,     0x65c78b66,     0x65c293cd,     0x04ddb7d6,\n-    0x6582ae69,     0x6580bd34,     0x6581ae6d,     0x658daa78,\n-    0x65819211,     0x65a78160,     0x65ef108e,     0x65f52145,\n-    0x65f34123,     0x65b3786a,     0x04555db7,     0x049e6e3a,\n-    0x043d304e,     0x04a73295,     0x047a3022,     0x04f13209,\n-    0x05e26880,     0x05ab6cce,     0x045a33ae,     0x045822c3,\n-    0x04193b63,     0x04c834f3,     0x044a2cb5,     0x65c726b9,\n-    0x65862071,     0x65982cf3,     0x0441322e,\n+    0x1e7c3000,     0x1e7e1000,     0x1e7e3000,     0xf82a822f,\n+    0xf822018a,     0xf82c11af,     0xf8222287,     0xf83a3090,\n+    0xf8225184,     0xf8304215,     0xf83072ab,     0xf837634c,\n+    0xf8b781dc,     0xf8ab0038,     0xf8ac115f,     0xf8b02047,\n+    0xf8a3326d,     0xf8b15070,     0xf8a143cb,     0xf8a571e8,\n+    0xf8bd601e,     0xf8f48287,     0xf8f702bc,     0xf8fb10b9,\n+    0xf8e12217,     0xf8ff3185,     0xf8e951fc,     0xf8fd43f6,\n+    0xf8f370bf,     0xf8ee63f0,     0xf870829b,     0xf870016c,\n+    0xf86913c6,     0xf871239b,     0xf87e3147,     0xf874508a,\n+    0xf8784231,     0xf87673a3,     0xf86f6276,     0xb8338056,\n+    0xb82f0186,     0xb83011ab,     0xb83723c1,     0xb8333225,\n+    0xb82252d0,     0xb82d42aa,     0xb83d719b,     0xb83b6023,\n+    0xb8bf8278,     0xb8b10389,     0xb8bb10ef,     0xb8b523f7,\n+    0xb8b933e2,     0xb8bb5150,     0xb8b74073,     0xb8b07320,\n+    0xb8ba6057,     0xb8f0808c,     0xb8fc03be,     0xb8f010db,\n+    0xb8e921fd,     0xb8e730e4,     0xb8ef52e9,     0xb8e84382,\n+    0xb8f570bf,     0xb8fb6220,     0xb86f8344,     0xb86802dc,\n+    0xb87b133b,     0xb8772080,     0xb8663010,     0xb864502f,\n+    0xb86a40a7,     0xb86a70fc,     0xb87462b7,     0xce284145,\n+    0xce1108de,     0xce7c8fab,     0xce96eb42,     0xce7b81ae,\n+    0xce6586f0,     0xcec081a2,     0xce6a89ea,     0x25a0cc5a,\n+    0x25a1d143,     0x05800e44,     0x05406531,     0x05002d42,\n+    0x2520c677,     0x25a1cd07,     0x0580687b,     0x0543bb42,\n+    0x050044a6,     0x25a0c86c,     0x25a1d358,     0x05800500,\n+    0x05400ad3,     0x05000e06,     0x25e0c951,     0x25a1d54a,\n+    0x05839276,     0x0540ea6f,     0x0503c8a4,     0x25a0d448,\n+    0x2521d056,     0x058059c9,     0x05406d05,     0x05003cb6,\n+    0x25a0d0c8,     0x2561c4f9,     0x05809904,     0x05400e5d,\n+    0x0500cadd,     0x043c0162,     0x04ba0427,     0x65c801d1,\n+    0x65c50b15,     0x65d60635,     0x0416b67d,     0x040012e4,\n+    0x04da06f3,     0x04508113,     0x04db1a2e,     0x041aa7d5,\n+    0x0419158a,     0x04938709,     0x045198c4,     0x049019bb,\n+    0x0497b6de,     0x045ebd3e,     0x04d80693,     0x044809a9,\n+    0x044a0313,     0x04810e33,     0x049ca410,     0x658089eb,\n+    0x65cd85ef,     0x65c68145,     0x6587801a,     0x65c29d53,\n+    0x04ddb4e3,     0x6582aebc,     0x65c0ae3a,     0x65c1ac51,\n+    0x658db690,     0x65c18033,     0x65f18a11,     0x65b70440,\n+    0x65ee2a86,     0x65e34c7d,     0x65bb6309,     0x049954f3,\n+    0x041964ed,     0x04313235,     0x04b33123,     0x046e3167,\n+    0x04ed3171,     0x05716bd1,     0x05ba6dcf,     0x045a34fb,\n+    0x04583f65,     0x04992f00,     0x04882074,     0x04ca2739,\n+    0x65873031,     0x65863dae,     0x65d823d1,     0x044137b6,\n+\n","filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h","additions":835,"deletions":774,"binary":false,"changes":1609,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"test\/hotspot\/gtest\/classfile\/test_AltHashing.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -362,0 +362,23 @@\n+\n+#ifdef _WINDOWS\n+  \/\/ We need to test the special-case parsing for drive letters in\n+  \/\/ log file paths e.g. c:\\log.txt and c:\/log.txt. Our temp directory\n+  \/\/ based TestLogFileName should already be the \\ format (we print it\n+  \/\/ below to visually verify) so we only need to convert to \/.\n+  printf(\"Checked: %s\\n\", buf);\n+  \/\/ First disable logging so the current log file will be closed and we\n+  \/\/ can delete it, so that UL won't try to perform log file rotation.\n+  \/\/ The rotated file would not be auto-deleted.\n+  set_log_config(TestLogFileName, \"all=off\");\n+  delete_file(TestLogFileName);\n+\n+  \/\/ now convert \\ to \/\n+  char* current_pos = strchr(buf,'\\\\');\n+  while (current_pos != nullptr) {\n+    *current_pos = '\/';\n+    current_pos = strchr(current_pos + 1, '\\\\');\n+  }\n+  printf(\"Checking: %s\\n\", buf);\n+  EXPECT_TRUE(LogConfiguration::parse_command_line_arguments(buf));\n+#endif\n+\n","filename":"test\/hotspot\/gtest\/logging\/test_logConfiguration.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-#if INCLUDE_NMT\n-\n@@ -40,2 +38,0 @@\n-\n-\n@@ -168,2 +164,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmt_buffer_overflow_detection.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,0 @@\n-#if INCLUDE_NMT\n-\n@@ -130,2 +128,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmtpreinit.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022 SAP SE. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-#if INCLUDE_NMT\n-\n@@ -135,2 +133,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/nmt\/test_nmtpreinitmap.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-#if INCLUDE_NMT\n-\n@@ -226,2 +224,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/runtime\/test_committed_virtualmemory.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -444,1 +444,1 @@\n-  TEST_VM(os, release_multi_mappings) {\n+TEST_VM(os, release_multi_mappings) {\n@@ -452,2 +452,20 @@\n-  const size_t stripe_len = 4 * M;\n-  const int num_stripes = 4;\n+  \/\/ What we do:\n+  \/\/ A) we reserve 6 small segments (stripes) adjacent to each other. We commit\n+  \/\/    them with alternating permissions to prevent the kernel from folding them into\n+  \/\/    a single segment.\n+  \/\/    -stripe-stripe-stripe-stripe-stripe-stripe-\n+  \/\/ B) we release the middle four stripes with a single os::release_memory call. This\n+  \/\/    tests that os::release_memory indeed works across multiple segments created with\n+  \/\/    multiple os::reserve calls.\n+  \/\/    -stripe-___________________________-stripe-\n+  \/\/ C) Into the now vacated address range between the first and the last stripe, we\n+  \/\/    re-reserve a new memory range. We expect this to work as a proof that the address\n+  \/\/    range was really released by the single release call (B).\n+  \/\/\n+  \/\/ Note that this is inherently racy. Between (B) and (C), some other thread may have\n+  \/\/  reserved something into the hole in the meantime. Therefore we keep that range small and\n+  \/\/  entrenched between the first and last stripe, which reduces the chance of some concurrent\n+  \/\/  thread grabbing that memory.\n+\n+  const size_t stripe_len = os::vm_allocation_granularity();\n+  const int num_stripes = 6;\n@@ -461,1 +479,3 @@\n-  \/\/ .. release it...\n+  \/\/ .. release the middle stripes...\n+  address p_middle_stripes = p + stripe_len;\n+  const size_t middle_stripe_len = (num_stripes - 2) * stripe_len;\n@@ -463,3 +483,2 @@\n-    \/\/ On Windows, use UseNUMAInterleaving=1 which makes\n-    \/\/  os::release_memory accept multi-map-ranges.\n-    \/\/  Otherwise we would assert (see below for death test).\n+    \/\/ On Windows, temporarily switch on UseNUMAInterleaving to allow release_memory to release\n+    \/\/  multiple mappings in one go (otherwise we assert, which we test too, see death test below).\n@@ -467,1 +486,1 @@\n-    ASSERT_TRUE(os::release_memory((char*)p, total_range_len));\n+    ASSERT_TRUE(os::release_memory((char*)p_middle_stripes, middle_stripe_len));\n@@ -471,3 +490,3 @@\n-  \/\/ re-reserve it. This should work unless release failed.\n-  address p2 = (address)os::attempt_reserve_memory_at((char*)p, total_range_len);\n-  ASSERT_EQ(p2, p);\n+  \/\/ ...re-reserve the middle stripes. This should work unless release silently failed.\n+  address p2 = (address)os::attempt_reserve_memory_at((char*)p_middle_stripes, middle_stripe_len);\n+  ASSERT_EQ(p2, p_middle_stripes);\n@@ -476,1 +495,5 @@\n-  ASSERT_TRUE(os::release_memory((char*)p, total_range_len));\n+  \/\/ Clean up. Release all mappings.\n+  {\n+    WINDOWS_ONLY(NUMASwitcher b(true);) \/\/ allow release_memory to release multiple regions\n+    ASSERT_TRUE(os::release_memory((char*)p, total_range_len));\n+  }\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":35,"deletions":12,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,5 +35,0 @@\n-\/\/ Included early because the NMT flags don't include it.\n-#include \"utilities\/macros.hpp\"\n-\n-#if INCLUDE_NMT\n-\n@@ -44,0 +39,1 @@\n+#include \"utilities\/macros.hpp\"\n@@ -45,0 +41,1 @@\n+\n@@ -569,2 +566,0 @@\n-\n-#endif \/\/ INCLUDE_NMT\n","filename":"test\/hotspot\/gtest\/runtime\/test_virtualMemoryTracker.cpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-class VM_StopSafepoint : public VM_Operation {\n+class VM_GTestStopSafepoint : public VM_Operation {\n@@ -56,1 +56,1 @@\n-  VM_StopSafepoint(Semaphore* running, Semaphore* wait_for) :\n+  VM_GTestStopSafepoint(Semaphore* running, Semaphore* wait_for) :\n@@ -58,1 +58,1 @@\n-  VMOp_Type type() const          { return VMOp_None; }\n+  VMOp_Type type() const          { return VMOp_GTestStopSafepoint; }\n@@ -70,1 +70,1 @@\n-    VM_StopSafepoint ss(&t->_ready, &t->_unblock);\n+    VM_GTestStopSafepoint ss(&t->_ready, &t->_unblock);\n","filename":"test\/hotspot\/gtest\/threadHelper.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-compiler\/intrinsics\/bmi\/verifycode\/BzhiTestI2L.java 8268033 generic-x64\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,3 +70,3 @@\n-compiler\/whitebox\/ClearMethodStateTest.java 8265360 macosx-aarch64\n-compiler\/whitebox\/EnqueueMethodForCompilationTest.java 8265360 macosx-aarch64\n-compiler\/whitebox\/MakeMethodNotCompilableTest.java 8265360 macosx-aarch64\n+compiler\/whitebox\/ClearMethodStateTest.java 8265360 macosx-all\n+compiler\/whitebox\/EnqueueMethodForCompilationTest.java 8265360 macosx-all\n+compiler\/whitebox\/MakeMethodNotCompilableTest.java 8265360 macosx-all\n@@ -74,1 +74,1 @@\n-compiler\/codecache\/jmx\/PoolsIndependenceTest.java 8264632 macosx-generic\n+compiler\/codecache\/jmx\/PoolsIndependenceTest.java 8264632 macosx-all\n@@ -124,1 +124,1 @@\n-serviceability\/sa\/ClhsdbPmap.java#core 8267433 macosx-x64\n+serviceability\/sa\/ClhsdbPmap.java#core 8269982,8267433 macosx-aarch64,macosx-x64\n@@ -126,2 +126,2 @@\n-serviceability\/sa\/TestJmapCore.java 8267433 macosx-x64\n-serviceability\/sa\/TestJmapCoreMetaspace.java 8267433 macosx-x64\n+serviceability\/sa\/TestJmapCore.java 8269982,8267433 macosx-aarch64,macosx-x64\n+serviceability\/sa\/TestJmapCoreMetaspace.java 8269982,8267433 macosx-aarch64,macosx-x64\n@@ -148,1 +148,0 @@\n-vmTestbase\/nsk\/monitoring\/ThreadMXBean\/ThreadInfo\/Deadlock\/JavaDeadlock001\/TestDescription.java 8060733 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+    vm.hasDTrace \\\n","filename":"test\/hotspot\/jtreg\/TEST.ROOT","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,0 +49,4 @@\n+hotspot_runtime_no_cds = \\\n+  runtime \\\n+  -runtime\/cds\n+\n@@ -387,0 +391,2 @@\n+hotspot_cds_only = \\\n+  runtime\/cds\/\n@@ -408,0 +414,1 @@\n+ -runtime\/cds\/appcds\/DumpingWithNoCoops.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8279125\n+ * @summary fatal error: no reachable node should have no use\n+ * @requires vm.flavor == \"server\"\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-DoEscapeAnalysis TestAllocArrayAfterAllocNoUse\n+ *\n+ *\/\n+\n+public class TestAllocArrayAfterAllocNoUse {\n+    private static Object field;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test();\n+        }\n+    }\n+\n+    private static void test() {\n+        try {\n+            final TestAllocArrayAfterAllocNoUse o = new TestAllocArrayAfterAllocNoUse();\n+        } catch (Exception e) {\n+            final int[] array = new int[100];\n+            field = array;\n+        }\n+\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/allocation\/TestAllocArrayAfterAllocNoUse.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8279062\n+ * @summary C2: assert(t->meet(t0) == t) failed: Not monotonic after JDK-8278413\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation TestCCPAllocateArray\n+ *\n+ *\/\n+\n+public class TestCCPAllocateArray {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            try {\n+                test();\n+            } catch (OutOfMemoryError e) {\n+            }\n+            length(42);\n+        }\n+    }\n+\n+    private static int[] test() {\n+        int i = 2;\n+        for (; i < 4; i *= 2);\n+        return new int[length(i)];\n+    }\n+\n+    private static int length(int i) {\n+        return i == 4 ? Integer.MAX_VALUE : 0;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/allocation\/TestCCPAllocateArray.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8279219\n+ * @summary C2 crash when allocating array of size too large\n+ * @library \/test\/lib \/\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm  -ea -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:-BackgroundCompilation TestFailedAllocationBadGraph\n+ *\/\n+\n+import sun.hotspot.WhiteBox;\n+import java.lang.reflect.Method;\n+import compiler.whitebox.CompilerWhiteBoxTest;\n+\n+public class TestFailedAllocationBadGraph {\n+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+\n+    private static long[] array;\n+    private static int field;\n+    private static volatile int barrier;\n+\n+    public static void main(String[] args) throws Exception {\n+        run(\"test1\");\n+        run(\"test2\");\n+    }\n+\n+    private static void run(String method) throws Exception {\n+        Method m = TestFailedAllocationBadGraph.class.getDeclaredMethod(method);\n+        WHITE_BOX.enqueueMethodForCompilation(m, CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION);\n+        if (!WHITE_BOX.isMethodCompiled(m) || WHITE_BOX.getMethodCompilationLevel(m) != CompilerWhiteBoxTest.COMP_LEVEL_FULL_OPTIMIZATION) {\n+            throw new RuntimeException(\"should still be compiled\");\n+        }\n+    }\n+\n+    private static int test1() {\n+        int length = Integer.MAX_VALUE;\n+        try {\n+            array = new long[length];\n+        } catch (OutOfMemoryError outOfMemoryError) {\n+            barrier = 0x42;\n+            length = field;\n+        }\n+        return length;\n+    }\n+\n+    private static int test2() {\n+        int length = -1;\n+        try {\n+            array = new long[length];\n+        } catch (OutOfMemoryError outOfMemoryError) {\n+            barrier = 0x42;\n+            length = field;\n+        }\n+        return length;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/allocation\/TestFailedAllocationBadGraph.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib \/\n+ * @bug 8281467\n+ * @requires vm.flagless\n+ * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n+ *\n+ * @summary Test large CodeEntryAlignments are accepted\n+ * @run driver compiler.arguments.TestCodeEntryAlignment\n+ *\/\n+\n+package compiler.arguments;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Arrays;\n+import java.util.ArrayList;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestCodeEntryAlignment {\n+\n+    public static void main(String[] args) throws IOException {\n+        if (args.length == 0) {\n+            driver();\n+        } else {\n+            System.out.println(\"Pass\");\n+        }\n+    }\n+\n+    private static List<String> cmdline(String[] args) {\n+        List<String> r = new ArrayList();\n+        r.addAll(Arrays.asList(args));\n+        r.add(\"compiler.arguments.TestCodeEntryAlignment\");\n+        r.add(\"run\");\n+        return r;\n+    }\n+\n+    public static void shouldPass(String... args) throws IOException {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+    }\n+\n+    public static void driver() throws IOException {\n+        for (int align = 16; align < 256; align *= 2) {\n+            shouldPass(\n+                \"-XX:+UnlockExperimentalVMOptions\",\n+                \"-XX:CodeEntryAlignment=\" + align\n+            );\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCodeEntryAlignment.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib \/\n+ * @bug 8281467\n+ * @requires vm.flagless\n+ * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n+ *\n+ * @summary Test large OptoLoopAlignments are accepted\n+ * @run driver compiler.arguments.TestOptoLoopAlignment\n+ *\/\n+\n+package compiler.arguments;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Arrays;\n+import java.util.ArrayList;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestOptoLoopAlignment {\n+\n+    public static void main(String[] args) throws IOException {\n+        if (args.length == 0) {\n+            driver();\n+        } else {\n+            System.out.println(\"Pass\");\n+        }\n+    }\n+\n+    private static final String MSG = \"must be less or equal to CodeEntryAlignment\";\n+\n+    private static List<String> cmdline(String[] args) {\n+        List<String> r = new ArrayList();\n+        r.addAll(Arrays.asList(args));\n+        r.add(\"compiler.arguments.TestOptoLoopAlignment\");\n+        r.add(\"run\");\n+        return r;\n+    }\n+\n+    public static void shouldFail(String... args) throws IOException {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldNotHaveExitValue(0);\n+        output.shouldContain(MSG);\n+    }\n+\n+    public static void shouldPass(String... args) throws IOException {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(cmdline(args));\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        output.shouldNotContain(MSG);\n+    }\n+\n+    public static void driver() throws IOException {\n+        for (int align = 1; align < 64; align *= 2) {\n+            shouldPass(\n+                \"-XX:OptoLoopAlignment=\" + align\n+            );\n+        }\n+        for (int align = 64; align <= 128; align *= 2) {\n+            shouldFail(\n+                \"-XX:OptoLoopAlignment=\" + align\n+            );\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestOptoLoopAlignment.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8275337\n+ * @run main\/othervm -Xcomp -XX:TieredStopAtLevel=1 compiler.c1.Test8275337\n+ *\/\n+\n+\n+package compiler.c1;\n+\n+public class Test8275337 {\n+    public static final int N = 400;\n+\n+    public static void mainTest() {\n+        int iArr1[] = new int[N];\n+        float fArr1[][] = new float[N][N];\n+\n+        for (int i = 9; i < 171; i++) {\n+            int z;\n+            try {\n+                z = i % i;\n+            } catch (ArithmeticException a_e) {}\n+            for (int j = 1; j < 155; ++j) {\n+                fArr1[j - 1][i] -= 1;\n+                iArr1[i - 1] = 1;\n+            }\n+            for (int j = 4; j < 155; j++) {\n+                for (int k = 1; k < 2; ++k) {\n+                    iArr1[i - 1] += 1;\n+                    fArr1[k - 1][j] -= 2;\n+                }\n+            }\n+        }\n+    }\n+    public static void main(String[] strArr) {\n+\n+        try {\n+            for (int i = 0; i < 10; i++) {\n+                mainTest();\n+            }\n+         } catch (Exception ex) {\n+         }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/Test8275337.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @bug 8280123\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,compiler.c2.TestCMoveInfiniteGVN::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=43739875\n+ *                   compiler.c2.TestCMoveInfiniteGVN\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation\n+ *                   -XX:CompileCommand=compileonly,compiler.c2.TestCMoveInfiniteGVN::test\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN\n+ *                   compiler.c2.TestCMoveInfiniteGVN\n+ *\/\n+\n+package compiler.c2;\n+\n+public class TestCMoveInfiniteGVN {\n+\n+    static int test(boolean b, int i) {\n+        int iArr[] = new int[2];\n+\n+        double d = Math.max(i, i);\n+        for (int i1 = 1; i1 < 2; i1++) {\n+            if (i1 != 0) {\n+                return (b ? 1 : 0); \/\/ CMoveI\n+            }\n+            for (int i2 = 1; i2 < 2; i2++) {\n+                switch (i2) {\n+                    case 1: d -= Math.max(i1, i2); break;\n+                }\n+                d -= iArr[i1 - 1];\n+            }\n+        }\n+        return 0;\n+    }\n+\n+    static void test() {\n+        test(true, 234);\n+    }\n+\n+    public static void main(String[] strArr) {\n+        test(); \/\/ compilation, then nmethod invalidation during execution\n+        test(); \/\/ trigger crashing recompilation\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestCMoveInfiniteGVN.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2.irTests;\n+\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8262721\n+ * @summary Add Tests to verify single iteration loops are properly optimized\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.TestFewIterationsCountedLoop\n+ *\/\n+\n+public class TestFewIterationsCountedLoop {\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"-XX:LoopUnrollLimit=0\");\n+        TestFramework.run();\n+    }\n+\n+    static volatile int barrier;\n+    static final Object object = new Object();\n+\n+    @Test\n+    @IR(failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void singleIterationFor() {\n+        for (int i = 0; i < 1; i++) {\n+            barrier = 0x42; \/\/ something that can't be optimized out\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void singleIterationWhile() {\n+        int i = 0;\n+        while (i < 1) {\n+            barrier = 0x42;\n+            i++;\n+        }\n+    }\n+\n+    @Test\n+    @IR(failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    @Warmup(1) \/\/ So C2 can't rely on profile data\n+    public static void singleIterationDoWhile() {\n+        int i = 0;\n+        do {\n+            synchronized(object) {} \/\/ so loop head is not cloned by ciTypeFlow\n+            barrier = 0x42;\n+            i++;\n+        } while (i < 1);\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void twoIterationsFor() {\n+        for (int i = 0; i < 2; i++) {\n+            barrier = 0x42; \/\/ something that can't be optimized out\n+        }\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void twoIterationsWhile() {\n+        int i = 0;\n+        while (i < 2) {\n+            barrier = 0x42;\n+            i++;\n+        }\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void twoIterationsDoWhile() {\n+        int i = 0;\n+        do {\n+            synchronized(object) {} \/\/ so loop head is not cloned by ciTypeFlow\n+            barrier = 0x42;\n+            i++;\n+        } while (i < 2);\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void threadIterationsFor() {\n+        for (int i = 0; i < 2; i++) {\n+            barrier = 0x42; \/\/ something that can't be optimized out\n+        }\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void threeIterationsWhile() {\n+        int i = 0;\n+        while (i < 2) {\n+            barrier = 0x42;\n+            i++;\n+        }\n+    }\n+\n+    @Test\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"0\" }, counts = { IRNode.COUNTEDLOOP, \"1\" })\n+    @IR(applyIf = { \"LoopUnrollLimit\", \"> 0\" }, failOn = { IRNode.COUNTEDLOOP, IRNode.LOOP })\n+    public static void threeIterationsDoWhile() {\n+        int i = 0;\n+        do {\n+            synchronized(object) {} \/\/ so loop head is not cloned by ciTypeFlow\n+            barrier = 0x42;\n+            i++;\n+        } while (i < 2);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestFewIterationsCountedLoop.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2.irTests;\n+\n+import compiler.lib.ir_framework.*;\n+\n+\/*\n+ * @test\n+ * @bug 8278784\n+ * @summary C2: Refactor PhaseIdealLoop::remix_address_expressions() so it operates on longs\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.TestRemixAddressExpressions\n+ *\/\n+\n+public class TestRemixAddressExpressions {\n+    public static void main(String[] args) {\n+        TestFramework.run();\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_I, \"1\", IRNode.LSHIFT_I, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float invPlusVarLshiftInt(int inv, int scale) {\n+        float res = 0;\n+        for (int i = 1; i < 100; i *= 11) {\n+            res += (i + inv) << scale;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_L, \"1\", IRNode.LSHIFT_L, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float invPlusVarLshiftLong(long inv, int scale) {\n+        float res = 0;\n+        for (long i = 1; i < 100; i *= 11) {\n+            res += (i + inv) << scale;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_I, \"1\", IRNode.SUB_I, \"1\", IRNode.LSHIFT_I, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float invMinusVarLshiftInt(int inv, int scale) {\n+        float res = 0;\n+        for (int i = 1; i < 100; i *= 11) {\n+            res += (inv - i) << scale;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_L, \"1\", IRNode.SUB_L, \"1\", IRNode.LSHIFT_L, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float invMinusVarLshiftLong(long inv, int scale) {\n+        float res = 0;\n+        for (long i = 1; i < 100; i *= 11) {\n+            res += (inv - i) << scale;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_I, \"1\", IRNode.SUB_I, \"1\", IRNode.LSHIFT_I, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float varMinusInvLshiftInt(int inv, int scale) {\n+        float res = 0;\n+        for (int i = 1; i < 100; i *= 11) {\n+            res += (i - inv) << scale;\n+        }\n+        return res;\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.ADD_L, \"1\", IRNode.SUB_L, \"1\", IRNode.LSHIFT_L, \"2\" })\n+    @Arguments({Argument.RANDOM_EACH, Argument.RANDOM_EACH})\n+    public static float varMinusInvLshiftLong(long inv, int scale) {\n+        float res = 0;\n+        for (long i = 1; i < 100; i *= 11) {\n+            res += (i - inv) << scale;\n+        }\n+        return res;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestRemixAddressExpressions.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -27,0 +27,1 @@\n+ * @requires (vm.opt.TieredStopAtLevel == null | vm.opt.TieredStopAtLevel == 4)\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/CompilationModeHighOnlyTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler\/interpreter;\n+\n+\/* JASM simplified from the following Java pattern:\n+ *\n+ * public class Custom {\n+ *\n+ *  static void test(int v) {\n+ *      int i8 = 1;\n+ *      try {\n+ *          v += 1;\n+ *      } catch (ArithmeticException exc1) {\n+ *      } finally {\n+ *          for (; i8 < 100; i8++) {\n+ *          }\n+ *      }\n+ *  }\n+ *\n+ *\/\n+\n+super public class Custom {\n+\n+    public static Method test:\"(I)V\" stack 2 locals 3 {\n+        iconst_1;\n+        istore_1;\n+    try t0;\n+        iinc          0, 1;\n+    endtry t0;\n+Loop:\n+        iload_1;\n+        bipush        100;\n+        if_icmpge     Lexit;\n+        iinc          1, 1;\n+        goto          Loop;                 \/\/ deoptimize here on backwards branch\n+    catch t0 java\/lang\/ArithmeticException; \/\/ unreachable block\n+        astore_2;\n+Lexit:\n+        return\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/interpreter\/Custom.jasm","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test VerifyStackWithUnreachableBlock\n+ * @bug 8271055\n+ * @compile Custom.jasm VerifyStackWithUnreachableBlock.java\n+ * @summary Using VerifyStack for method that contains unreachable basic blocks\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+VerifyStack compiler.interpreter.VerifyStackWithUnreachableBlock\n+ *\/\n+\n+package compiler.interpreter;\n+\n+public class VerifyStackWithUnreachableBlock {\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10000; i++) {\n+            Custom.test(i);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/interpreter\/VerifyStackWithUnreachableBlock.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -34,0 +34,1 @@\n+ *      -XX:CompileCommand=compileonly,compiler.intrinsics.bmi.*::*\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BzhiTestI2L.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+    protected final Architecture arch;\n@@ -64,1 +65,2 @@\n-        config = new TestHotSpotVMConfig(HotSpotJVMCIRuntime.runtime().getConfigStore());\n+        arch = codeCache.getTarget().arch;\n+        config = new TestHotSpotVMConfig(HotSpotJVMCIRuntime.runtime().getConfigStore(), arch);\n@@ -73,1 +75,0 @@\n-        Architecture arch = codeCache.getTarget().arch;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/CodeInstallationTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,2 @@\n+import jdk.vm.ci.aarch64.AArch64;\n+import jdk.vm.ci.code.Architecture;\n@@ -30,1 +32,1 @@\n-    public TestHotSpotVMConfig(HotSpotVMConfigStore config) {\n+    public TestHotSpotVMConfig(HotSpotVMConfigStore config, Architecture arch) {\n@@ -32,0 +34,1 @@\n+        ropProtection = (arch instanceof AArch64) ? getFieldValue(\"VM_Version::_rop_protection\", Boolean.class) : false;\n@@ -51,0 +54,2 @@\n+\n+    public final boolean ropProtection;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, Arm Limited. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Arm Limited. All rights reserved.\n@@ -257,0 +257,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac103be);  \/\/ pacia x30, x29\n+        }\n@@ -472,0 +475,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac113be);  \/\/ autia x30, x29\n+        }\n@@ -480,0 +486,3 @@\n+        if (config.ropProtection) {\n+            code.emitInt(0xdac113be);  \/\/ autia x30, x29\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -166,0 +166,3 @@\n+    public static final String VECTOR_UCAST_B2X = START + \"VectorUCastB2X\" + MID + END;\n+    public static final String VECTOR_UCAST_S2X = START + \"VectorUCastS2X\" + MID + END;\n+    public static final String VECTOR_UCAST_I2X = START + \"VectorUCastI2X\" + MID + END;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280600\n+ * @summary C2: assert(!had_error) failed: bad dominance\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestCastIIMakesMainLoopPhiDead TestCastIIMakesMainLoopPhiDead\n+ *\/\n+\n+public class TestCastIIMakesMainLoopPhiDead {\n+    int iArr[] = new int[0];\n+\n+    void test() {\n+        int x = 8;\n+        try {\n+            for (int i = 0; i < 8; i++) {\n+                iArr[1] = 9;\n+                for (int j = -400; 1 > j; j++) {\n+                    iArr[j] = 4;\n+                    x -= 2;\n+                }\n+            }\n+        } catch (ArrayIndexOutOfBoundsException e) {\n+        }\n+    }\n+    public static void main(String[] k) {\n+        TestCastIIMakesMainLoopPhiDead t = new TestCastIIMakesMainLoopPhiDead();\n+        for (int i = 0; i < 3; i++) {\n+            t.test();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCastIIMakesMainLoopPhiDead.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280600\n+ * @summary C2: assert(!had_error) failed: bad dominance\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=TestCastIIMakesMainLoopPhiDead2 TestCastIIMakesMainLoopPhiDead2\n+ *\/\n+\n+public class TestCastIIMakesMainLoopPhiDead2 {\n+    static int zero = 0;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 100000; i++) {\n+            test();\n+        }\n+    }\n+\n+    static void test() {\n+        int h[] = new int[zero];\n+        for (int m = 0; m < 5; m++) {\n+            try {\n+                for (int f = -400; f < 1; f++) {\n+                    h[f] = 1; \/\/ Out of bounds store.\n+                }\n+            } catch (ArrayIndexOutOfBoundsException i) {\n+                \/\/ Expected\n+            }\n+        }\n+    }\n+}\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCastIIMakesMainLoopPhiDead2.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,268 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280799\n+ * @summary С2: assert(false) failed: cyclic dependency prevents range check elimination\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:-UseCountedLoopSafepoints TestPredicateInputBelowLoopPredicate\n+ *\/\n+\n+public class TestPredicateInputBelowLoopPredicate {\n+    private static final Object object = new Object();\n+    private static int fieldStop = 100;\n+    private static int[] array = new int[200];\n+    private static int[] array2 = new int[200];\n+    private static int fieldStart = 0;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test(true);\n+            test(false);\n+        }\n+    }\n+\n+    private static void test(boolean flag) {\n+        if (array == null) {\n+        }\n+        int start = fieldStart;\n+        int i = start;\n+        for(;;) {\n+            int j;\n+            for (j = -10; j < 0; j++) {\n+            }\n+            int stop = fieldStop;\n+             \/\/ bound check becomes candidate for predication once\n+             \/\/ loop above is optimized out\n+            array[stop - i + j] = 0;\n+\n+            \/\/ A bunch of stuff to grow loop body size and prevent peeling:\n+            array2[0] = 0;\n+            array2[1] = 0;\n+            array2[2] = 0;\n+            array2[3] = 0;\n+            array2[4] = 0;\n+            array2[5] = 0;\n+            array2[6] = 0;\n+            array2[7] = 0;\n+            array2[8] = 0;\n+            array2[9] = 0;\n+            array2[10] = 0;\n+            array2[11] = 0;\n+            array2[12] = 0;\n+            array2[13] = 0;\n+            array2[14] = 0;\n+            array2[15] = 0;\n+            array2[16] = 0;\n+            array2[17] = 0;\n+            array2[18] = 0;\n+            array2[19] = 0;\n+            array2[20] = 0;\n+            array2[21] = 0;\n+            array2[22] = 0;\n+            array2[23] = 0;\n+            array2[24] = 0;\n+            array2[25] = 0;\n+            array2[26] = 0;\n+            array2[27] = 0;\n+            array2[28] = 0;\n+            array2[29] = 0;\n+            array2[30] = 0;\n+            array2[31] = 0;\n+            array2[32] = 0;\n+            array2[33] = 0;\n+            array2[34] = 0;\n+            array2[35] = 0;\n+            array2[36] = 0;\n+            array2[37] = 0;\n+            array2[38] = 0;\n+            array2[39] = 0;\n+            array2[40] = 0;\n+            array2[41] = 0;\n+            array2[42] = 0;\n+            array2[43] = 0;\n+            array2[44] = 0;\n+            array2[45] = 0;\n+            array2[46] = 0;\n+            array2[47] = 0;\n+            array2[48] = 0;\n+            array2[49] = 0;\n+            array2[50] = 0;\n+            array2[51] = 0;\n+            array2[52] = 0;\n+            array2[53] = 0;\n+            array2[54] = 0;\n+            array2[55] = 0;\n+            array2[56] = 0;\n+            array2[57] = 0;\n+            array2[58] = 0;\n+            array2[59] = 0;\n+            array2[60] = 0;\n+            array2[61] = 0;\n+            array2[62] = 0;\n+            array2[63] = 0;\n+            array2[64] = 0;\n+            array2[65] = 0;\n+            array2[66] = 0;\n+            array2[67] = 0;\n+            array2[68] = 0;\n+            array2[69] = 0;\n+            array2[70] = 0;\n+            array2[71] = 0;\n+            array2[72] = 0;\n+            array2[73] = 0;\n+            array2[74] = 0;\n+            array2[75] = 0;\n+            array2[76] = 0;\n+            array2[77] = 0;\n+            array2[78] = 0;\n+            array2[79] = 0;\n+            array2[80] = 0;\n+            array2[81] = 0;\n+            array2[82] = 0;\n+            array2[83] = 0;\n+            array2[84] = 0;\n+            array2[85] = 0;\n+            array2[86] = 0;\n+            array2[87] = 0;\n+            array2[88] = 0;\n+            array2[89] = 0;\n+            array2[90] = 0;\n+            array2[91] = 0;\n+            array2[92] = 0;\n+            array2[93] = 0;\n+            array2[94] = 0;\n+            array2[95] = 0;\n+            array2[96] = 0;\n+            array2[97] = 0;\n+            array2[98] = 0;\n+            array2[99] = 0;\n+\n+            array2[100] = 0;\n+            array2[101] = 0;\n+            array2[102] = 0;\n+            array2[103] = 0;\n+            array2[104] = 0;\n+            array2[105] = 0;\n+            array2[106] = 0;\n+            array2[107] = 0;\n+            array2[108] = 0;\n+            array2[109] = 0;\n+            array2[110] = 0;\n+            array2[111] = 0;\n+            array2[112] = 0;\n+            array2[113] = 0;\n+            array2[114] = 0;\n+            array2[115] = 0;\n+            array2[116] = 0;\n+            array2[117] = 0;\n+            array2[118] = 0;\n+            array2[119] = 0;\n+            array2[120] = 0;\n+            array2[121] = 0;\n+            array2[122] = 0;\n+            array2[123] = 0;\n+            array2[124] = 0;\n+            array2[125] = 0;\n+            array2[126] = 0;\n+            array2[127] = 0;\n+            array2[128] = 0;\n+            array2[129] = 0;\n+            array2[130] = 0;\n+            array2[131] = 0;\n+            array2[132] = 0;\n+            array2[133] = 0;\n+            array2[134] = 0;\n+            array2[135] = 0;\n+            array2[136] = 0;\n+            array2[137] = 0;\n+            array2[138] = 0;\n+            array2[139] = 0;\n+            array2[140] = 0;\n+            array2[141] = 0;\n+            array2[142] = 0;\n+            array2[143] = 0;\n+            array2[144] = 0;\n+            array2[145] = 0;\n+            array2[146] = 0;\n+            array2[147] = 0;\n+            array2[148] = 0;\n+            array2[149] = 0;\n+            array2[150] = 0;\n+            array2[151] = 0;\n+            array2[152] = 0;\n+            array2[153] = 0;\n+            array2[154] = 0;\n+            array2[155] = 0;\n+            array2[156] = 0;\n+            array2[157] = 0;\n+            array2[158] = 0;\n+            array2[159] = 0;\n+            array2[160] = 0;\n+            array2[161] = 0;\n+            array2[162] = 0;\n+            array2[163] = 0;\n+            array2[164] = 0;\n+            array2[165] = 0;\n+            array2[166] = 0;\n+            array2[167] = 0;\n+            array2[168] = 0;\n+            array2[169] = 0;\n+            array2[170] = 0;\n+            array2[171] = 0;\n+            array2[172] = 0;\n+            array2[173] = 0;\n+            array2[174] = 0;\n+            array2[175] = 0;\n+            array2[176] = 0;\n+            array2[177] = 0;\n+            array2[178] = 0;\n+            array2[179] = 0;\n+            array2[180] = 0;\n+            array2[181] = 0;\n+            array2[182] = 0;\n+            array2[183] = 0;\n+            array2[184] = 0;\n+            array2[185] = 0;\n+            array2[186] = 0;\n+            array2[187] = 0;\n+            array2[188] = 0;\n+            array2[189] = 0;\n+            array2[190] = 0;\n+            array2[191] = 0;\n+            array2[192] = 0;\n+            array2[193] = 0;\n+            array2[194] = 0;\n+            array2[195] = 0;\n+            array2[196] = 0;\n+            array2[197] = 0;\n+            array2[198] = 0;\n+            array2[199] = 0;\n+            i++;\n+\n+            if (i == stop) { \/\/ requires a loop limit predicate\n+                break;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPredicateInputBelowLoopPredicate.java","additions":268,"deletions":0,"binary":false,"changes":268,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test PrintIdealPhaseTest\n+ * @summary Checks that -XX:CompileCommand=PrintIdealPhase,... works\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @requires vm.debug == true & vm.compiler2.enabled & vm.compMode != \"Xcomp\"\n+ * @run driver compiler.oracle.PrintIdealPhaseTest\n+ *\/\n+\n+package compiler.oracle;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class PrintIdealPhaseTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        new PrintIdealPhaseTest();\n+    }\n+\n+    PrintIdealPhaseTest() throws Exception {\n+        \/\/ The Phases specified here will be exchanged for the enum Phase in compiler.lib.ir_framework when it's done\n+\n+        \/\/ Test -XX:CompileCommand=PrintIdealPhase,*::test,CCP1\n+        List<String> expectedPhases = new ArrayList<String>();\n+        expectedPhases.add(\"CCP1\");\n+        runTest(\"CCP1\", expectedPhases, \"hotspot_log_1.log\", true);\n+        runTest(\"FISH\", expectedPhases, \"hotspot_log_1f.log\", false);\n+\n+        \/\/ Test -XX:CompileCommand=PrintIdealPhase,*::test,MATCHING\n+        expectedPhases.clear();\n+        expectedPhases.add(\"MATCHING\");\n+        runTest(\"MATCHING\", expectedPhases, \"hotspot_log_2.log\", true);\n+\n+        \/\/ Test -XX:CompileCommand=PrintIdealPhase,*::test,CCP_1,AFTER_MATCHING\n+        expectedPhases.add(\"CCP1\");\n+        runTest(\"MATCHING,CCP1\", expectedPhases, \"hotspot_log_3.log\", true);\n+    }\n+\n+    private void runTest(String cmdPhases, List<String> expectedPhases, String logFile, boolean valid) throws Exception {\n+        List<String> options = new ArrayList<String>();\n+        options.add(\"-Xbatch\");\n+        options.add(\"-XX:+PrintCompilation\");\n+        options.add(\"-XX:LogFile=\"+logFile);\n+        options.add(\"-XX:+IgnoreUnrecognizedVMOptions\");\n+        options.add(\"-XX:CompileCommand=dontinline,\" + getTestClass() + \"::test\");\n+        options.add(\"-XX:CompileCommand=PrintIdealPhase,\" + getTestClass() + \"::test,\" + cmdPhases);\n+        options.add(getTestClass());\n+\n+        OutputAnalyzer oa = ProcessTools.executeTestJvm(options);\n+        if (valid) {\n+            oa.shouldHaveExitValue(0)\n+            .shouldContain(\"CompileCommand: PrintIdealPhase compiler\/oracle\/PrintIdealPhaseTest$TestMain.test const char* PrintIdealPhase = '\"+cmdPhases.replace(',', ' ')+\"'\")\n+            .shouldNotContain(\"CompileCommand: An error occurred during parsing\")\n+            .shouldNotContain(\"Error: Unrecognized phase name in PrintIdealPhase:\")\n+            .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+             \/\/ Check that all the expected phases matches what can be found in the compilation log file\n+             HashSet<String> loggedPhases = parseLogFile(logFile);\n+             System.out.println(\"Logged phases:\");\n+             for (String loggedPhase : loggedPhases) {\n+                 System.out.println(\"loggedPhase: \"+ loggedPhase);\n+             }\n+             for (String expectedPhase : expectedPhases) {\n+                 System.out.println(\"Looking for phase: \" + expectedPhase);\n+\n+                 Asserts.assertTrue(loggedPhases.contains(expectedPhase), \"Must find specified phase: \" + expectedPhase);\n+                 loggedPhases.remove(expectedPhase);\n+             }\n+             Asserts.assertTrue(loggedPhases.isEmpty(), \"Expect no other phases\");\n+        } else {\n+            \/\/ Check that we don't pass even though bad phase names where given\n+            oa.shouldHaveExitValue(0)\n+            .shouldContain(\"CompileCommand: An error occurred during parsing\")\n+            .shouldContain(\"Error: Unrecognized phase name in PrintIdealPhase:\");\n+        }\n+    }\n+\n+    private HashSet<String> parseLogFile(String logFile) {\n+        String printIdealTag = \"<ideal\";\n+        Pattern compilePhasePattern = Pattern.compile(\"compile_phase='([a-zA-Z0-9 ]+)'\");\n+        HashSet<String> phasesFound = new HashSet<>();\n+\n+        try (var br = Files.newBufferedReader(Paths.get(logFile))) {\n+            String line;\n+            while ((line = br.readLine()) != null) {\n+                if (line.startsWith(printIdealTag)) {\n+                    Matcher matcher = compilePhasePattern.matcher(line);\n+                    if (matcher.find()) {\n+                        phasesFound.add(matcher.group(1));\n+                    } else {\n+                        throw new Error(\"Failed to match compile_phase in file: \" + logFile);\n+                    }\n+                }\n+            }\n+        } catch (IOException e) {\n+            throw new Error(\"Failed to read \" + logFile + \" data: \" + e, e);\n+        }\n+        return phasesFound;\n+    }\n+\n+    \/\/ Test class that is invoked by the sub process\n+    public String getTestClass() {\n+        return TestMain.class.getName();\n+    }\n+\n+    public static class TestMain {\n+        public static void main(String[] args) {\n+            for (int i = 0; i < 20_000; i++) {\n+                test(i);\n+            }\n+        }\n+\n+        static void test(int i) {\n+            if ((i % 1000) == 0) {\n+                System.out.println(\"Hello World!\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/oracle\/PrintIdealPhaseTest.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280842\n+ * @summary Access violation in ciTypeFlow::profiled_count\n+ * @run main\/othervm -XX:-BackgroundCompilation TestSharedHeadExceptionBackedges\n+ *\/\n+\n+public class TestSharedHeadExceptionBackedges {\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test();\n+        }\n+    }\n+\n+    static class MyException extends Exception {\n+    }\n+\n+    private static void test() {\n+        int i = 0;\n+        while (i < 10) {\n+            try {\n+                int j = 0;\n+                i++;\n+                if (i % 2 == 0) {\n+                    throw new MyException();\n+                }\n+                do {\n+                    j++;\n+                } while (j < 100);\n+\n+                throw new MyException();\n+\n+            } catch (MyException me) {\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/profiling\/TestSharedHeadExceptionBackedges.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.jvmti\n+ * @requires vm.jvmti & (vm.opt.TieredStopAtLevel == null | vm.opt.TieredStopAtLevel == 4)\n","filename":"test\/hotspot\/jtreg\/compiler\/profiling\/spectrapredefineclass\/Launcher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @requires vm.jvmti\n+ * @requires vm.jvmti & (vm.opt.TieredStopAtLevel == null | vm.opt.TieredStopAtLevel == 4)\n","filename":"test\/hotspot\/jtreg\/compiler\/profiling\/spectrapredefineclass_classloaders\/Launcher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * @test\n+ * @test id=with-dtrace\n@@ -27,0 +27,1 @@\n+ * @requires vm.hasDTrace\n@@ -29,1 +30,18 @@\n- * @run main\/othervm -XX:CompileCommand=compileonly,Test8168712.* -XX:CompileCommand=compileonly,*Object.* -XX:+DTraceMethodProbes -XX:-UseOnStackReplacement -XX:+DeoptimizeRandom compiler.runtime.Test8168712\n+ * @run main\/othervm -XX:CompileCommand=compileonly,Test8168712.*\n+ *                   -XX:CompileCommand=compileonly,*Object.*\n+ *                   -XX:+DTraceMethodProbes\n+ *                   -XX:-UseOnStackReplacement\n+ *                   -XX:+DeoptimizeRandom\n+ *                   compiler.runtime.Test8168712\n+ *\/\n+\n+\/**\n+ * @test id=without-dtrace\n+ * @requires vm.debug\n+ * @bug 8168712\n+ *\n+ * @run main\/othervm -XX:CompileCommand=compileonly,Test8168712.*\n+ *                   -XX:CompileCommand=compileonly,*Object.*\n+ *                   -XX:-UseOnStackReplacement\n+ *                   -XX:+DeoptimizeRandom\n+ *                   compiler.runtime.Test8168712\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/Test8168712.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,254 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8280473\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.org.objectweb.asm\n+ *\n+ * @run main\/othervm -XX:+TieredCompilation -XX:TieredStopAtLevel=1\n+ *                   -Xbatch -XX:CompileThreshold=100 -XX:CompileCommand=compileonly,*::test\n+ *                   -XX:CompileCommand=quiet -XX:+PrintCompilation\n+ *                     compiler.runtime.TestConstantDynamic\n+ * @run main\/othervm -XX:-TieredCompilation\n+ *                   -Xbatch -XX:CompileThreshold=100 -XX:CompileCommand=compileonly,*::test\n+ *                   -XX:CompileCommand=quiet -XX:+PrintCompilation\n+ *                     compiler.runtime.TestConstantDynamic\n+ *\/\n+\n+package compiler.runtime;\n+\n+import jdk.internal.org.objectweb.asm.*;\n+\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.lang.constant.ConstantDescs;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandleProxies;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.lang.reflect.Method;\n+\n+import static jdk.internal.org.objectweb.asm.ClassWriter.*;\n+import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+public class TestConstantDynamic {\n+    static final Class<TestConstantDynamic> THIS_CLASS = TestConstantDynamic.class;\n+\n+    static final String THIS_CLASS_NAME = THIS_CLASS.getName().replace('.', '\/');\n+    static final String CLASS_NAME = THIS_CLASS_NAME + \"$Test\";\n+\n+    public interface Test {\n+        Object run(boolean b);\n+    }\n+\n+    public static final String PATH = System.getProperty(\"test.classes\", \".\") + java.io.File.separator;\n+    private static int ID = 0;\n+\n+    \/* =================================================================================================== *\/\n+\n+    static final String BSM_DESC = \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)Ljava\/lang\/Object;\";\n+    static final Handle BSM = new Handle(H_INVOKESTATIC, THIS_CLASS_NAME, \"bsm\", BSM_DESC, false);\n+\n+    static Object bsm(MethodHandles.Lookup lookup, String name, Class c) throws IllegalAccessException {\n+        Object[] classData = MethodHandles.classData(lookup, ConstantDescs.DEFAULT_NAME, Object[].class);\n+        Object value = classData[0];\n+        System.out.printf(\"BSM: lookup=%s name=\\\"%s\\\" class=%s => \\\"%s\\\"\\n\", lookup, name, c, classData[0]);\n+        return value;\n+    }\n+\n+    static final Handle THROWING_BSM = new Handle(H_INVOKESTATIC, THIS_CLASS_NAME, \"throwingBSM\", BSM_DESC, false);\n+\n+    static Object throwingBSM(MethodHandles.Lookup lookup, String name, Class c) throws IllegalAccessException {\n+        Object[] classData = (Object[])MethodHandles.classData(lookup, ConstantDescs.DEFAULT_NAME, Object[].class);\n+        Object value = classData[0];\n+        System.out.printf(\"BSM: lookup=%s name=\\\"%s\\\" class=%s value=\\\"%s\\\" => Exception\\n\", lookup, name, c, value);\n+        throw new IllegalArgumentException(lookup.lookupClass().getName() + \": \" + c.getName() + \" \" + name + \" \" + value);\n+    }\n+\n+    \/* =================================================================================================== *\/\n+\n+    static byte[] generateClassFile(String suffix, String desc, int retOpcode, Handle bsm) throws IOException {\n+        var cw = new ClassWriter(COMPUTE_MAXS | COMPUTE_FRAMES);\n+        String name = CLASS_NAME + \"_\" + suffix + \"_\" + (++ID);\n+        cw.visit(V19, ACC_PUBLIC | ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n+\n+        Handle localBSM = new Handle(H_INVOKESTATIC, name, \"bsm\", BSM_DESC, false);\n+\n+        {\n+            var mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"bsm\", BSM_DESC, null, null);\n+\n+            mv.visitLdcInsn(bsm);\n+            mv.visitIntInsn(ALOAD, 0);\n+            mv.visitIntInsn(ALOAD, 1);\n+            mv.visitIntInsn(ALOAD, 2);\n+            mv.visitMethodInsn(INVOKEVIRTUAL, \"java\/lang\/invoke\/MethodHandle\", \"invokeExact\", BSM_DESC, false);\n+            mv.visitInsn(ARETURN);\n+            mv.visitMaxs(0, 0);\n+        }\n+\n+        {\n+            var mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"test\", \"(Z)\" + desc, null, null);\n+            mv.visitCode();\n+\n+            Label endL = new Label();\n+            Label falseL = new Label();\n+\n+            mv.visitIntInsn(ILOAD, 0);\n+            mv.visitJumpInsn(Opcodes.IFNE, falseL);\n+\n+            mv.visitLdcInsn(new ConstantDynamic(\"first\", desc, localBSM)); \/\/ is resolved on b = false\n+\n+            mv.visitJumpInsn(GOTO, endL);\n+\n+            mv.visitLabel(falseL);\n+\n+            mv.visitLdcInsn(new ConstantDynamic(\"second\", desc, localBSM)); \/\/ is resolved on b = true\n+\n+            mv.visitLabel(endL);\n+            mv.visitInsn(retOpcode);\n+            mv.visitMaxs(0, 0);\n+        }\n+        byte[] classFile = cw.toByteArray();\n+\n+        try (FileOutputStream fos = new FileOutputStream(PATH + name + \".class\")) {\n+            fos.write(classFile);\n+        }\n+\n+        return classFile;\n+    }\n+\n+    static Test generate(String desc, int retOpcode, Object value, Handle bsm, boolean shouldThrow) {\n+        try {\n+            byte[] classFile = generateClassFile(\"CD\", desc, retOpcode, bsm);\n+            Object[] classData = new Object[] { value };\n+            MethodHandles.Lookup testLookup = MethodHandles.lookup().defineHiddenClassWithClassData(classFile, classData, true);\n+            Method testMethod = testLookup.lookupClass().getDeclaredMethod(\"test\", boolean.class);\n+            MethodHandle testMH = testLookup.unreflect(testMethod);\n+\n+            if (shouldThrow) {\n+                \/\/ Install empty handler for linkage errors, but throw an error on successful invocation.\n+                \/\/ try { Test.test(b); throw AssertionError(); } catch (LinkageError e) { \/* expected *\/ }\n+                testMH = MethodHandles.filterReturnValue(testMH,\n+                        MethodHandles.dropArguments(\n+                            MethodHandles.insertArguments(\n+                                    MethodHandles.throwException(testMH.type().returnType(), AssertionError.class),\n+                                    0, new AssertionError(\"no exception thrown\")),\n+                            0, testMH.type().returnType()));\n+\n+                testMH = MethodHandles.catchException(testMH, LinkageError.class,\n+                        MethodHandles.empty(MethodType.methodType(testMH.type().returnType(), LinkageError.class)));\n+            } else {\n+                Class<?> type = testMH.type().returnType();\n+                testMH = MethodHandles.filterReturnValue(testMH,\n+                                MethodHandles.insertArguments(VALIDATE_MH, 0, value)\n+                                        .asType(MethodType.methodType(type, type)));\n+            }\n+\n+            return MethodHandleProxies.asInterfaceInstance(Test.class, testMH);\n+        } catch (Throwable e) {\n+            throw new InternalError(e);\n+        }\n+    }\n+\n+    static final MethodHandle VALIDATE_MH;\n+    static {\n+        try {\n+            VALIDATE_MH = MethodHandles.lookup().findStatic(THIS_CLASS, \"validateResult\",\n+                                                            MethodType.methodType(Object.class, Object.class, Object.class));\n+        } catch (ReflectiveOperationException e) {\n+            throw new InternalError(e);\n+        }\n+    }\n+    static Object validateResult(Object expected, Object actual) {\n+        if ((expected == null && actual != null) ||\n+            (expected != null && !expected.equals(actual))) {\n+            throw new AssertionError(String.format(\"expected=%s != actual=%s\", expected.toString(), actual.toString()));\n+        }\n+        return actual;\n+    }\n+\n+    private Handle bsm;\n+    private boolean shouldThrow;\n+\n+    TestConstantDynamic(Handle bsm, boolean shouldThrow) {\n+        this.bsm = bsm;\n+        this.shouldThrow = shouldThrow;\n+    }\n+\n+    static TestConstantDynamic shouldNotThrow() {\n+        return new TestConstantDynamic(BSM, false);\n+    }\n+\n+    static TestConstantDynamic shouldThrow() {\n+        return new TestConstantDynamic(THROWING_BSM, true);\n+    }\n+\n+    static void shouldThrow(Handle bsm, String desc, int retOpcode, Object value) {\n+        (new TestConstantDynamic(bsm, true)).test(desc, retOpcode, value);\n+    }\n+\n+    void test(String desc, int retOpcode, Object value) {\n+        Test test = generate(desc, retOpcode, value, bsm, shouldThrow);\n+\n+        for (int i = 0; i < 200; i++) {\n+            test.run(false);\n+        }\n+        for (int i = 0; i < 200; i++) {\n+            test.run(true);\n+        }\n+    }\n+\n+    static void run(TestConstantDynamic t) {\n+        t.test(\"Z\", IRETURN, Boolean.TRUE);\n+        t.test(\"B\", IRETURN, Byte.MAX_VALUE);\n+        t.test(\"S\", IRETURN, Short.MAX_VALUE);\n+        t.test(\"C\", IRETURN, Character.MAX_VALUE);\n+        t.test(\"I\", IRETURN, Integer.MAX_VALUE);\n+        t.test(\"J\", LRETURN, Long.MAX_VALUE);\n+        t.test(\"F\", FRETURN, Float.MAX_VALUE);\n+        t.test(\"D\", DRETURN, Double.MAX_VALUE);\n+\n+        t.test(\"Ljava\/lang\/Object;\", ARETURN, new Object());\n+        t.test(\"Ljava\/lang\/Object;\", ARETURN, null);\n+\n+        t.test(\"[Ljava\/lang\/Object;\", ARETURN, new Object[0]);\n+        t.test(\"[Ljava\/lang\/Object;\", ARETURN, null);\n+\n+        t.test(\"[I\", ARETURN, new int[0]);\n+        t.test(\"[I\", ARETURN, null);\n+\n+        t.test(\"Ljava\/lang\/Runnable;\", ARETURN, (Runnable)(() -> {}));\n+        t.test(\"Ljava\/lang\/Runnable;\", ARETURN, null);\n+    }\n+\n+    public static void main(String[] args) {\n+        run(shouldNotThrow());\n+\n+        run(shouldThrow()); \/\/ use error-throwing BSM\n+\n+        shouldThrow(BSM, \"Ljava\/lang\/Runnable;\", ARETURN, new Object()); \/\/ not a Runnable\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/TestConstantDynamic.java","additions":254,"deletions":0,"binary":false,"changes":254,"status":"added"},{"patch":"@@ -0,0 +1,285 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8279822\n+ * @requires vm.flagless\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.org.objectweb.asm\n+ *\n+ * @run main compiler.runtime.TestConstantsInError\n+ *\/\n+package compiler.runtime;\n+\n+import jdk.internal.org.objectweb.asm.*;\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandleProxies;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static jdk.internal.org.objectweb.asm.ClassWriter.*;\n+import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+interface OutputProcessor {\n+    default void process(OutputAnalyzer output, boolean isC1) {}\n+}\n+\n+public abstract class TestConstantsInError implements OutputProcessor {\n+    static final String TEST_PREFIX = class2desc(TestConstantsInError.class) + \"$Test\";\n+\n+    public interface Test extends Runnable {}\n+\n+\n+    interface Generator {\n+        void generate(MethodVisitor mv);\n+    }\n+\n+    static String class2desc(Class<?> cls) {\n+        return cls.getName().replace('.', '\/');\n+    }\n+\n+    public static final String PATH = System.getProperty(\"test.classes\", \".\") + java.io.File.separator;\n+\n+    static byte[] generateClassFile(String suffix, Generator g) throws IOException {\n+        var cw = new ClassWriter(COMPUTE_MAXS | COMPUTE_FRAMES);\n+        String name = TEST_PREFIX + \"_\" + suffix;\n+        cw.visit(V19, ACC_PUBLIC | ACC_SUPER, name, null, \"java\/lang\/Object\", null);\n+\n+        {\n+            var mv = cw.visitMethod(ACC_PUBLIC | ACC_STATIC, \"test\", \"()V\", null, null);\n+            mv.visitCode();\n+            g.generate(mv);\n+            mv.visitInsn(RETURN);\n+            mv.visitMaxs(0, 0);\n+        }\n+        byte[] classFile = cw.toByteArray();\n+\n+        try (FileOutputStream fos = new FileOutputStream(PATH + name + \".class\")) {\n+            fos.write(classFile);\n+        }\n+\n+        return classFile;\n+    }\n+\n+    static Test generate(String suffix, Class<? extends LinkageError> expectedError, Generator g) {\n+        try {\n+            byte[] classFile = generateClassFile(suffix, g);\n+            MethodHandles.Lookup testLookup = MethodHandles.lookup().defineHiddenClass(classFile, true);\n+            MethodHandle testMH = testLookup.findStatic(testLookup.lookupClass(), \"test\", MethodType.methodType(void.class));\n+\n+            testMH = MethodHandles.filterReturnValue(testMH,\n+                    MethodHandles.insertArguments(\n+                            MethodHandles.throwException(void.class, AssertionError.class),\n+                            0, new AssertionError(\"no exception thrown\")));\n+\n+            \/\/ Install empty handler for linkage exceptions.\n+            testMH = MethodHandles.catchException(testMH, expectedError,\n+                     MethodHandles.empty(MethodType.methodType(void.class, expectedError)));\n+\n+            return MethodHandleProxies.asInterfaceInstance(Test.class, testMH);\n+        } catch (Throwable e) {\n+            throw new InternalError(e);\n+        }\n+    }\n+\n+    static void run(String name, Class<? extends LinkageError> expectedError, Generator g) {\n+        Test test = generate(name, expectedError, g);\n+        for (int i = 0; i < 1000; i++) {\n+            test.run();\n+        }\n+    }\n+\n+    static class TestConstantClass extends TestConstantsInError {\n+        public static void main(String[] args) {\n+            run(\"C1\", NoClassDefFoundError.class, mv -> mv.visitLdcInsn(Type.getType(\"LUnknownClass;\")));                \/\/ non-existent class\n+            run(\"C2\",   IllegalAccessError.class, mv -> mv.visitLdcInsn(Type.getType(\"Ljava\/lang\/invoke\/LambdaForm;\"))); \/\/ inaccessible\n+\n+            \/\/ class loader constraints?\n+        }\n+\n+        public void process(OutputAnalyzer results, boolean isC1) {\n+            results.shouldMatch(\"Test_C1\/.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_C2\/.*::test \\\\(3 bytes\\\\)$\");\n+\n+            if (isC1 && Platform.isAArch64()) { \/\/ no code patching\n+                results.shouldMatch(\"Test_C1\/.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_C2\/.*::test \\\\(3 bytes\\\\)   made not entrant\");\n+            } else {\n+                results.shouldNotContain(\"made not entrant\");\n+            }\n+        }\n+\n+        public void processC2(OutputAnalyzer results) {\n+            results.shouldNotContain(\"made not entrant\");\n+        }\n+    }\n+\n+    static class TestConstantMethodHandle extends TestConstantsInError {\n+        public static void main(String[] args) {\n+            \/\/ Non-existent holder class\n+            run(\"MH1\", NoClassDefFoundError.class,\n+                mv -> mv.visitLdcInsn(new Handle(H_INVOKESTATIC, \"UnknownClass\", \"ignored\", \"()V\", false)));\n+\n+            \/\/ Inaccessible holder class\n+            run(\"MH2\", IllegalAccessError.class,\n+                    mv -> mv.visitLdcInsn(new Handle(H_INVOKESTATIC, \"java\/lang\/invoke\/LambdaForm\", \"ignored\", \"()V\", false)));\n+\n+            \/\/ Method vs InterfaceMethod mismatch\n+            run(\"MH3\", IncompatibleClassChangeError.class,\n+                mv -> mv.visitLdcInsn(new Handle(H_INVOKESTATIC, \"java\/lang\/Object\", \"ignored\", \"()V\", true)));\n+\n+            \/\/ Non-existent method\n+            run(\"MH4\", NoSuchMethodError.class,\n+                mv -> mv.visitLdcInsn(new Handle(H_INVOKESTATIC, \"java\/lang\/Object\", \"cast\", \"()V\", false)));\n+        }\n+\n+        public void process(OutputAnalyzer results, boolean isC1) {\n+            results.shouldMatch(\"Test_MH1\/.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_MH2\/.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_MH3\/.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_MH4\/.*::test \\\\(3 bytes\\\\)$\");\n+\n+            if (isC1 && Platform.isAArch64()) { \/\/ no code patching\n+                results.shouldMatch(\"Test_MH1\/.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_MH2\/.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_MH3\/.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_MH4\/.*::test \\\\(3 bytes\\\\)   made not entrant\");\n+            } else {\n+                results.shouldNotContain(\"made not entrant\");\n+            }\n+        }\n+    }\n+\n+    static class TestConstantMethodType extends TestConstantsInError {\n+        public static void main(String[] args) {\n+            run(\"MT1\", NoClassDefFoundError.class,\n+                mv -> mv.visitLdcInsn(Type.getMethodType(\"(LUnknownClass;)V\")));\n+            run(\"MT2\", NoClassDefFoundError.class,\n+                mv -> mv.visitLdcInsn(Type.getMethodType(\"()LUnknownClass;\")));\n+        }\n+\n+        public void process(OutputAnalyzer results, boolean isC1) {\n+            results.shouldMatch(\"Test_MT1\/.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_MT2\/.*::test \\\\(3 bytes\\\\)$\");\n+\n+            if (isC1 && Platform.isAArch64()) { \/\/ no code patching\n+                results.shouldMatch(\"Test_MT1\/.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_MT2\/.*::test \\\\(3 bytes\\\\)   made not entrant\");\n+            } else {\n+                results.shouldNotContain(\"made not entrant\");\n+            }\n+        }\n+    }\n+\n+    static class TestConstantDynamic extends TestConstantsInError {\n+        static int bsm1() throws Exception {\n+            throw new AssertionError(\"should not be invoked\");\n+        }\n+\n+        static int bsm2(MethodHandles.Lookup lookup, String name, Class c) throws Exception {\n+            throw new Exception(\"expected\");\n+        }\n+\n+        static final Handle BSM1 = new Handle(H_INVOKESTATIC, class2desc(TestConstantDynamic.class), \"bsm1\", \"()I\", false);\n+        static final Handle BSM2 = new Handle(H_INVOKESTATIC, class2desc(TestConstantDynamic.class), \"bsm2\",\n+                \"(Ljava\/lang\/invoke\/MethodHandles$Lookup;Ljava\/lang\/String;Ljava\/lang\/Class;)I\",\n+                false);\n+\n+        public static void main(String[] args) {\n+            run(\"CD1\", NoClassDefFoundError.class,\n+                    mv -> {\n+                        Handle bsm = new Handle(H_INVOKESTATIC, \"UnknownClass\", \"unknown\", \"()LUnknownClass;\", false);\n+                        mv.visitLdcInsn(new ConstantDynamic(\"tmp\", \"LUnknownClass;\", bsm));\n+                    });\n+            run(\"CD2\", NoSuchMethodError.class,\n+                    mv -> {\n+                        Handle bsm = new Handle(H_INVOKESTATIC, class2desc(TestConstantDynamic.class), \"unknown\", \"()I\", false);\n+                        mv.visitLdcInsn(new ConstantDynamic(\"tmp\", \"LUnknownClass;\", bsm));\n+                    });\n+            run(\"CD3\", BootstrapMethodError.class, mv -> mv.visitLdcInsn(new ConstantDynamic(\"tmp\", \"I\", BSM1)));\n+            run(\"CD4\", BootstrapMethodError.class, mv -> mv.visitLdcInsn(new ConstantDynamic(\"tmp\", \"I\", BSM2)));\n+        }\n+\n+        public void process(OutputAnalyzer results, boolean isC1) {\n+            results.shouldMatch(\"Test_CD1.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_CD2.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_CD3.*::test \\\\(3 bytes\\\\)$\")\n+                   .shouldMatch(\"Test_CD4.*::test \\\\(3 bytes\\\\)$\");\n+\n+            if (isC1 && Platform.isAArch64()) { \/\/ no code patching\n+                results.shouldMatch(\"Test_CD1.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_CD2.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_CD3.*::test \\\\(3 bytes\\\\)   made not entrant\")\n+                       .shouldMatch(\"Test_CD4.*::test \\\\(3 bytes\\\\)   made not entrant\");\n+            } else {\n+                results.shouldNotContain(\"made not entrant\");\n+            }\n+        }\n+    }\n+\n+    static void run(TestConstantsInError test) throws Exception {\n+        List<String> commonArgs = List.of(\n+                \"--add-exports\", \"java.base\/jdk.internal.org.objectweb.asm=ALL-UNNAMED\",\n+                \"-Xbatch\", \"-XX:CompileThreshold=100\",\n+                \"-XX:CompileCommand=quiet\", \"-XX:CompileCommand=compileonly,*::test\",\n+                \"-XX:+PrintCompilation\",\n+                \"-XX:CompileCommand=print,*::test\",\n+                \"-Dtest.classes=\" + System.getProperty(\"test.classes\", \".\"),\n+                \"-XX:+IgnoreUnrecognizedVMOptions\",\n+                test.getClass().getName());\n+\n+        ArrayList<String> c1Args = new ArrayList<>();\n+        c1Args.addAll(List.of(\"-XX:+TieredCompilation\", \"-XX:TieredStopAtLevel=1\", \"-XX:+TracePatching\"));\n+        c1Args.addAll(commonArgs);\n+\n+        OutputAnalyzer outputC1 = ProcessTools.executeTestJvm(c1Args)\n+                .shouldHaveExitValue(0);\n+\n+        test.process(outputC1, true);\n+\n+        ArrayList<String> c2Args = new ArrayList<>();\n+        c2Args.add(\"-XX:-TieredCompilation\");\n+        c2Args.addAll(commonArgs);\n+\n+        OutputAnalyzer outputC2 = ProcessTools.executeTestJvm(c2Args)\n+                .shouldHaveExitValue(0);\n+\n+        test.process(outputC2, false);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        run(new TestConstantClass());\n+        run(new TestConstantMethodType());\n+        run(new TestConstantMethodHandle());\n+        run(new TestConstantDynamic());\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/runtime\/TestConstantsInError.java","additions":285,"deletions":0,"binary":false,"changes":285,"status":"added"},{"patch":"@@ -1365,0 +1365,264 @@\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toS64(byte[] input, short[] output) {\n+        vectorCast(ZERO_EXTEND_B2S, BSPEC64, SSPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toS64\")\n+    public static void runUB64toS64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2S, BSPEC64, SSPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toS128(byte[] input, short[] output) {\n+        vectorCast(ZERO_EXTEND_B2S, BSPEC64, SSPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toS128\")\n+    public static void runUB64toS128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2S, BSPEC64, SSPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB128toS256(byte[] input, short[] output) {\n+        vectorCast(ZERO_EXTEND_B2S, BSPEC128, SSPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUB128toS256\")\n+    public static void runUB128toS256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2S, BSPEC128, SSPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB256toS512(byte[] input, short[] output) {\n+        vectorCast(ZERO_EXTEND_B2S, BSPEC256, SSPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUB256toS512\")\n+    public static void runUB256toS512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2S, BSPEC256, SSPEC512);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toI64(byte[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_B2I, BSPEC64, ISPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toI64\")\n+    public static void runUB64toI64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2I, BSPEC64, ISPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toI128(byte[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_B2I, BSPEC64, ISPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toI128\")\n+    public static void runUB64toI128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2I, BSPEC64, ISPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toI256(byte[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_B2I, BSPEC64, ISPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toI256\")\n+    public static void runUB64toI256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2I, BSPEC64, ISPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB128toI512(byte[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_B2I, BSPEC128, ISPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUB128toI512\")\n+    public static void runUB128toI512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2I, BSPEC128, ISPEC512);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toL64(byte[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_B2L, BSPEC64, LSPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toL64\")\n+    public static void runUB64toL64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2L, BSPEC64, LSPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toL128(byte[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_B2L, BSPEC64, LSPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toL128\")\n+    public static void runUB64toL128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2L, BSPEC64, LSPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toL256(byte[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_B2L, BSPEC64, LSPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toL256\")\n+    public static void runUB64toL256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2L, BSPEC64, LSPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {UB2X_NODE, \"1\"})\n+    public static void testUB64toL512(byte[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_B2L, BSPEC64, LSPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUB64toL512\")\n+    public static void runUB64toL512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_B2L, BSPEC64, LSPEC512);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS64toI64(short[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_S2I, SSPEC64, ISPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUS64toI64\")\n+    public static void runUS64toI64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2I, SSPEC64, ISPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS64toI128(short[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_S2I, SSPEC64, ISPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUS64toI128\")\n+    public static void runUS64toI128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2I, SSPEC64, ISPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS128toI256(short[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_S2I, SSPEC128, ISPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUS128toI256\")\n+    public static void runUS128toI256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2I, SSPEC128, ISPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS256toI512(short[] input, int[] output) {\n+        vectorCast(ZERO_EXTEND_S2I, SSPEC256, ISPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUS256toI512\")\n+    public static void runUS256toI512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2I, SSPEC256, ISPEC512);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS64toL64(short[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_S2L, SSPEC64, LSPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUS64toL64\")\n+    public static void runUS64toL64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2L, SSPEC64, LSPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS64toL128(short[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_S2L, SSPEC64, LSPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUS64toL128\")\n+    public static void runUS64toL128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2L, SSPEC64, LSPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS64toL256(short[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_S2L, SSPEC64, LSPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUS64toL256\")\n+    public static void runUS64toL256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2L, SSPEC64, LSPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {US2X_NODE, \"1\"})\n+    public static void testUS128toL512(short[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_S2L, SSPEC128, LSPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUS128toL512\")\n+    public static void runUS128toL512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_S2L, SSPEC128, LSPEC512);\n+    }\n+\n+    @Test\n+    @IR(counts = {UI2X_NODE, \"1\"})\n+    public static void testUI64toL64(int[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_I2L, ISPEC64, LSPEC64, input, output);\n+    }\n+\n+    @Run(test = \"testUI64toL64\")\n+    public static void runUI64toL64() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_I2L, ISPEC64, LSPEC64);\n+    }\n+\n+    @Test\n+    @IR(counts = {UI2X_NODE, \"1\"})\n+    public static void testUI64toL128(int[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_I2L, ISPEC64, LSPEC128, input, output);\n+    }\n+\n+    @Run(test = \"testUI64toL128\")\n+    public static void runUI64toL128() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_I2L, ISPEC64, LSPEC128);\n+    }\n+\n+    @Test\n+    @IR(counts = {UI2X_NODE, \"1\"})\n+    public static void testUI128toL256(int[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_I2L, ISPEC128, LSPEC256, input, output);\n+    }\n+\n+    @Run(test = \"testUI128toL256\")\n+    public static void runUI128toL256() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_I2L, ISPEC128, LSPEC256);\n+    }\n+\n+    @Test\n+    @IR(counts = {UI2X_NODE, \"1\"})\n+    public static void testUI256toL512(int[] input, long[] output) {\n+        vectorCast(ZERO_EXTEND_I2L, ISPEC256, LSPEC512, input, output);\n+    }\n+\n+    @Run(test = \"testUI256toL512\")\n+    public static void runUI256toL512() throws Throwable {\n+        runCastHelper(ZERO_EXTEND_I2L, ISPEC256, LSPEC512);\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/tests\/TestVectorCast.java","additions":264,"deletions":0,"binary":false,"changes":264,"status":"modified"},{"patch":"@@ -66,1 +66,8 @@\n-            makePair(DSPEC256, FSPEC128)\n+            makePair(DSPEC256, FSPEC128),\n+            makePair(BSPEC64, SSPEC64, true),\n+            makePair(BSPEC64, SSPEC128, true),\n+            makePair(BSPEC64, ISPEC128, true),\n+            makePair(SSPEC64, ISPEC64, true),\n+            makePair(SSPEC64, ISPEC128, true),\n+            makePair(SSPEC64, LSPEC128, true),\n+            makePair(ISPEC64, LSPEC128, true)\n@@ -85,1 +92,7 @@\n-            makePair(FSPEC256, ISPEC256)\n+            makePair(FSPEC256, ISPEC256),\n+            makePair(BSPEC128, SSPEC256, true),\n+            makePair(BSPEC64, ISPEC256, true),\n+            makePair(BSPEC64, LSPEC256, true),\n+            makePair(SSPEC128, ISPEC256, true),\n+            makePair(SSPEC64, LSPEC256, true),\n+            makePair(ISPEC128, LSPEC256, true)\n@@ -107,1 +120,6 @@\n-            makePair(DSPEC512, FSPEC256)\n+            makePair(DSPEC512, FSPEC256),\n+            makePair(BSPEC128, ISPEC512, true),\n+            makePair(BSPEC64, LSPEC512, true),\n+            makePair(SSPEC256, ISPEC512, true),\n+            makePair(SSPEC128, LSPEC512, true),\n+            makePair(ISPEC256, LSPEC512, true)\n@@ -112,1 +130,2 @@\n-            makePair(SSPEC512, BSPEC256)\n+            makePair(SSPEC512, BSPEC256),\n+            makePair(BSPEC256, SSPEC512, true)\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/TestCastMethods.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -78,0 +78,3 @@\n+    public static final String UB2X_NODE = IRNode.VECTOR_UCAST_B2X;\n+    public static final String US2X_NODE = IRNode.VECTOR_UCAST_S2X;\n+    public static final String UI2X_NODE = IRNode.VECTOR_UCAST_I2X;\n@@ -107,1 +110,1 @@\n-        String testMethodName = VectorSpeciesPair.makePair(isp, osp).format();\n+        String testMethodName = VectorSpeciesPair.makePair(isp, osp, isUnsignedCast).format();\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/utils\/VectorReshapeHelper.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+            testPrintContainerInfoActiveProcessorCount();\n@@ -95,0 +96,9 @@\n+    private static void testPrintContainerInfoActiveProcessorCount() throws Exception {\n+        Common.logNewTestCase(\"Test print_container_info()\");\n+\n+        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\").addJavaOpts(\"-XX:ActiveProcessorCount=2\");\n+        Common.addWhiteBoxOpts(opts);\n+\n+        OutputAnalyzer out = Common.run(opts);\n+        out.shouldContain(\"but overridden by -XX:ActiveProcessorCount 2\");\n+    }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import jdk.test.lib.JDKToolFinder;\n@@ -37,2 +36,0 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAt.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import jdk.test.lib.JDKToolFinder;\n","filename":"test\/hotspot\/jtreg\/gc\/TestAllocateHeapAtMultiple.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import jdk.test.lib.Platform;\n","filename":"test\/hotspot\/jtreg\/gc\/TestCardTablePageCommits.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,0 @@\n-import java.util.LinkedList;\n-\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestAggressiveHeap.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestArrayAllocatorMallocLimit.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestCompressedClassFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcMarkStepDurationMillis.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1ConcRefinementThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1HeapRegionSize.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1PercentageOptions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,0 @@\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n-\n@@ -44,1 +41,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestG1RemSetFlags.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestHeapFreeRatio.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestInitialTenuringThreshold.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxHeapSizeTools.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxMinHeapFreeRatioFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,1 +77,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxNewSize.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMaxRAMFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestMinAndInitialSurvivorRatioFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewRatioFlag.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestNewSizeThreadIncrease.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestObjectTenuringFlags.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestParallelGCThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSelectDefaultGC.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSmallInitialHeapWithLargePageAndNUMA.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestSurvivorRatioFlag.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUnrecognizedVMOptionsHandling.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseCompressedOopsErgoTools.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import jdk.test.lib.process.ProcessTools;\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestUseNUMAInterleaving.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,0 @@\n-import jdk.test.lib.process.ProcessTools;\n-\n","filename":"test\/hotspot\/jtreg\/gc\/arguments\/TestVerifyBeforeAndAfterGCFlags.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,5 +43,0 @@\n-import java.util.*;\n-import java.io.*;\n-import java.nio.*;\n-import java.nio.file.*;\n-\n","filename":"test\/hotspot\/jtreg\/gc\/epsilon\/TestClasses.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-import jdk.test.lib.Platform;\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestEvacuationFailure.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+package gc.g1;\n+\n@@ -32,1 +34,1 @@\n- * @run main\/othervm -Xms256m -Xmx256m TestG1SkipCompaction\n+ * @run main\/othervm -Xms256m -Xmx256m gc.g1.TestG1SkipCompaction\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestG1SkipCompaction.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.io.IOException;\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestShrinkAuxiliaryData.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,3 +37,0 @@\n-import java.util.regex.Pattern;\n-import java.util.regex.Matcher;\n-\n@@ -42,1 +39,0 @@\n-import jdk.test.lib.Asserts;\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestSkipRebuildRemsetPhase.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-package gc.g1;\n+package gc.g1.numa;\n@@ -36,1 +36,3 @@\n- * @run main\/othervm -XX:+UseG1GC -Xbootclasspath\/a:. -XX:+UseNUMA -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI gc.g1.TestG1NUMATouchRegions\n+ * @run main\/othervm -XX:+UseG1GC -Xbootclasspath\/a:. -XX:+UseNUMA\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   gc.g1.numa.TestG1NUMATouchRegions\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/numa\/TestG1NUMATouchRegions.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8280885\n+ * @summary Shenandoah: Some tests failed with \"EA: missing allocation reference path\"\n+ * @requires vm.gc.Shenandoah\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+UseShenandoahGC -XX:+UnlockExperimentalVMOptions -XX:ShenandoahGCMode=iu\n+ *                   -XX:CompileCommand=dontinline,TestUnexpectedIUBarrierEA::notInlined TestUnexpectedIUBarrierEA\n+ *\/\n+\n+public class TestUnexpectedIUBarrierEA {\n+\n+    private static Object field;\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 20_000; i++) {\n+            test(false);\n+        }\n+    }\n+\n+    private static void test(boolean flag) {\n+        A a = new A();\n+        B b = new B();\n+        b.field = a;\n+        notInlined();\n+        Object o = b.field;\n+        if (!(o instanceof A)) {\n+\n+        }\n+        C c = new C();\n+        c.field = o;\n+        if (flag) {\n+            field = c.field;\n+        }\n+    }\n+\n+    private static void notInlined() {\n+\n+    }\n+\n+    private static class A {\n+    }\n+\n+    private static class B {\n+        public Object field;\n+    }\n+\n+    private static class C {\n+        public Object field;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/TestUnexpectedIUBarrierEA.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,0 @@\n-import jdk.test.lib.Asserts;\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/gclocker\/TestExcessGCLockerCollections.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+package gc.z;\n+\n@@ -29,2 +31,2 @@\n- * @run main\/othervm -XX:+UseZGC -Xms256M -Xmx512M -Xlog:gc TestGarbageCollectorMXBean 256 512\n- * @run main\/othervm -XX:+UseZGC -Xms512M -Xmx512M -Xlog:gc TestGarbageCollectorMXBean 512 512\n+ * @run main\/othervm -XX:+UseZGC -Xms256M -Xmx512M -Xlog:gc gc.z.TestGarbageCollectorMXBean 256 512\n+ * @run main\/othervm -XX:+UseZGC -Xms512M -Xmx512M -Xlog:gc gc.z.TestGarbageCollectorMXBean 512 512\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestGarbageCollectorMXBean.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+package gc.z;\n+\n@@ -29,2 +31,2 @@\n- * @run main\/othervm -XX:+UseZGC -Xms128M -Xmx256M -Xlog:gc* TestMemoryMXBean 128 256\n- * @run main\/othervm -XX:+UseZGC -Xms256M -Xmx256M -Xlog:gc* TestMemoryMXBean 256 256\n+ * @run main\/othervm -XX:+UseZGC -Xms128M -Xmx256M -Xlog:gc* gc.z.TestMemoryMXBean 128 256\n+ * @run main\/othervm -XX:+UseZGC -Xms256M -Xmx256M -Xlog:gc* gc.z.TestMemoryMXBean 256 256\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestMemoryMXBean.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,2 @@\n+package gc.z;\n+\n@@ -29,1 +31,1 @@\n- * @run main\/othervm -XX:+UseZGC -Xmx128M TestMemoryManagerMXBean\n+ * @run main\/othervm -XX:+UseZGC -Xmx128M gc.z.TestMemoryManagerMXBean\n","filename":"test\/hotspot\/jtreg\/gc\/z\/TestMemoryManagerMXBean.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,0 @@\n-                \"Survivor\",\n","filename":"test\/hotspot\/jtreg\/resourcehogs\/serviceability\/sa\/ClhsdbRegionDetailsScanOopsForG1.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.lang.ref.Reference;\n+\n@@ -30,0 +32,1 @@\n+        Reference.reachabilityFence(hugeArray);\n","filename":"test\/hotspot\/jtreg\/resourcehogs\/serviceability\/sa\/LingeredAppWithLargeArray.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+import java.lang.ref.Reference;\n+\n@@ -34,0 +36,1 @@\n+        Reference.reachabilityFence(hugeArray);\n","filename":"test\/hotspot\/jtreg\/resourcehogs\/serviceability\/sa\/LingeredAppWithLargeStringArray.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,0 +82,1 @@\n+    public static final String USER_DIR = System.getProperty(\"user.dir\");\n@@ -190,1 +191,0 @@\n-\n@@ -192,2 +192,3 @@\n-        System.out.println(\"using command: \" + command[0] + \" \" + command[1]);\n-        return run(command[0], command[1], \"\" + pid).collect(toList());\n+        \/\/ Only search the directory in which the VM is running (user.dir property).\n+        System.out.println(\"using command: \" + command[0] + \" -a +d \" + USER_DIR + \" \" + command[1] + \" \" + pid);\n+        return run(command[0], \"-a\", \"+d\", USER_DIR, command[1], \"\" + pid).collect(toList());\n","filename":"test\/hotspot\/jtreg\/runtime\/8176717\/TestInheritFD.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/VMDeprecatedOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.security.ProtectionDomain;\n+\n+\n+public class ClassListWithCustomClassNoSource {\n+    private static byte[] helloBytes;\n+    private static final String HELLO = \"Hello\";\n+    static class CL extends ClassLoader {\n+        private ProtectionDomain pd;\n+        public CL(String name, ClassLoader parent, ProtectionDomain protD) {\n+            super(name, parent);\n+            pd = protD;\n+        }\n+\n+        @Override\n+        protected Class<?> findClass(String name) throws ClassNotFoundException {\n+            if (pd == null) {\n+                pd = new ProtectionDomain(null, null);\n+            }\n+            return defineClass(name, helloBytes, 0, helloBytes.length, pd);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length != 1) {\n+            throw new RuntimeException(\"Invalid arg, Use 1, 2, or 3\");\n+        }\n+\n+        ClassLoader thisLoader = ClassListWithCustomClassNoSource.class.getClassLoader();\n+        helloBytes = thisLoader.getResourceAsStream(HELLO + \".class\").readAllBytes();\n+\n+        switch(args[0]) {\n+        case \"1\":\n+            Class<?> cls1 = (new CL(\"HelloLoader\", null, null)).loadClass(HELLO);\n+            System.out.println(HELLO + \" was successfully loaded by \" + cls1.getClassLoader().getName());\n+            break;\n+        case \"2\":\n+            ProtectionDomain p = ClassListWithCustomClassNoSource.class.getProtectionDomain();\n+            Class<?> cls2 = (new CL(\"HelloLoader\", null, p)).loadClass(HELLO);\n+            System.out.println(HELLO + \" was successfully loaded by \" + cls2.getClassLoader().getName());\n+            break;\n+        case \"3\":\n+            URL url = ClassListWithCustomClassNoSource.class.getProtectionDomain().getCodeSource().getLocation();\n+            URLClassLoader urlLoader = new URLClassLoader(\"HelloClassLoader\", new URL[] {url}, null);\n+            Class<?> cls = urlLoader.loadClass(HELLO);\n+            if (cls != null) {\n+                System.out.println(HELLO + \" was loaded by \" + cls.getClassLoader().getName());\n+                if (urlLoader != cls.getClassLoader()) {\n+                    System.out.println(HELLO + \" was not loaded by \" + urlLoader.getName());\n+                }\n+            } else {\n+                System.out.println(HELLO + \" is not loaded\");\n+            }\n+            break;\n+        default:\n+            throw new RuntimeException(\"Should have one argument,  1, 2 or 3\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassListWithCustomClassNoSource.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+\n+\/\/ When this class is executed, the following classes will be generated by\n+\/\/ java.lang.invoke.ClassSpecializer with the code source\n+\/\/ \"_ClassSpecializer_generateConcreteSpeciesCode\".\n+\/\/\n+\/\/   - java.lang.invoke.BoundMethodHandle$Species_LFDIIL\n+\/\/   - java.lang.invoke.BoundMethodHandle$Species_LFDIILJ\n+\/\/   - java.lang.invoke.BoundMethodHandle$Species_LFDIILJD\n+\/\/   - ...\n+\/\/\n+\/\/ The TestDumpClassListSource test case checks that these classes are not\n+\/\/ written into the classlist, as they cannot be handled by -Xshare:dump\n+public class ClassSpecializerTestApp {\n+    public static void main(String args[]) throws Throwable {\n+\n+        MethodHandles.Lookup lookup = MethodHandles.lookup();\n+        MethodType mt = MethodType.methodType(void.class, float.class, double.class, int.class,\n+                                              boolean.class, Object.class, long.class, double.class);\n+        MethodHandle mh = lookup.findStatic(ClassSpecializerTestApp.class, \"callme\", mt);\n+        invoke(mh, 4.0f, 5.0, 6, true, null, 7L, 8.0);\n+    }\n+\n+    private static Object invoke(MethodHandle mh, Object ... args) throws Throwable {\n+        try {\n+            for (Object o : args) {\n+                mh = MethodHandles.insertArguments(mh, 0, o);\n+            }\n+            return mh.invoke();\n+        } catch (Throwable t) {\n+            System.out.println(\"Failed to find, link and\/or invoke \" + mh.toString() + \": \" + t.getMessage());\n+            throw t;\n+        }\n+    }\n+\n+    private static void callme(float f, double d, int i, boolean b, Object o, long l, double d2) {}\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/ClassSpecializerTestApp.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import java.io.File;\n+\n@@ -43,0 +45,1 @@\n+import jdk.test.lib.process.ProcessTools;\n@@ -50,0 +53,1 @@\n+    private static String HELLO_WORLD = \"Hello World\";\n@@ -86,1 +90,1 @@\n-                TestCommon.checkExec(execOutput, \"Hello World\");\n+                TestCommon.checkExec(execOutput, HELLO_WORLD);\n@@ -108,1 +112,1 @@\n-            TestCommon.checkExec(execOutput, \"Hello World\");\n+            TestCommon.checkExec(execOutput, HELLO_WORLD);\n@@ -110,0 +114,2 @@\n+\n+        testExtraCase(appJar, classList);\n@@ -131,0 +137,37 @@\n+\n+    \/\/ { -Xshare:dump, -XX:ArchiveClassesAtExit} x { -XX:DumpLoadedClassList }\n+    private static void testExtraCase(String jarFile, String[] classList) throws Exception {\n+        \/\/ 1. -Xshare:dump -XX:-XX:DumpLoadedClassFile\n+        String dumpedListName = \"tmpClassList.list\";\n+        File listFile = new File(dumpedListName);\n+        if (listFile.exists()) {\n+            listFile.delete();\n+        }\n+        OutputAnalyzer dumpOutput = TestCommon.dump(jarFile, classList, \"-XX:DumpLoadedClassList=\" + dumpedListName);\n+        TestCommon.checkDump(dumpOutput, \"Loading classes to share\");\n+        if (!listFile.exists()) {\n+            throw new RuntimeException(\"ClassList file \" + dumpedListName + \" should be created\");\n+        }\n+\n+        \/\/ 2. -XX:ArchiveClassesAtExit -XX:DumpLoadedClassFile\n+        String dynName = \"tmpDyn.jsa\";\n+        File dynFile = new File(dynName);\n+        if (dynFile.exists()) {\n+            dynFile.delete();\n+        }\n+        if (listFile.exists()) {\n+            listFile.delete();\n+        }\n+        String[] args = new String[] {\n+            \"-cp\", jarFile, \"-XX:ArchiveClassesAtExit=\" + dynName, \"-XX:DumpLoadedClassList=\" + dumpedListName, \"Hello\"};\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(args);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"combo\");\n+        output.shouldHaveExitValue(0)\n+              .shouldContain(HELLO_WORLD);\n+        if (!dynFile.exists()) {\n+            throw new RuntimeException(\"Dynamic archive file \" + dynName + \" should be created\");\n+        }\n+        if (!listFile.exists()) {\n+            throw new RuntimeException(\"ClassList file \" + dumpedListName + \" should be created\");\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CommandLineFlagCombo.java","additions":46,"deletions":3,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8255495\n+ * @summary Test CDS with UseCompressedOops disable with various heap sizes.\n+ * @requires vm.cds.write.archived.java.heap\n+ * @requires vm.gc.G1\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/Hello.java\n+ * @run driver DumpingWithNoCoops\n+ *\/\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class DumpingWithNoCoops {\n+    static class HeapArgs {\n+        int initialSize, minSize, maxSize;\n+        HeapArgs(int initial, int min, int max) {\n+            initialSize = initial;\n+            minSize = min;\n+            maxSize = max;\n+        }\n+        String heapArgsString(HeapArgs ha) {\n+            String heapArgs = \"\";\n+            if (ha.initialSize > 0) {\n+                heapArgs += \"-XX:InitialHeapSize=\" + ha.initialSize + \"g\";\n+            }\n+            if (ha.minSize > 0) {\n+                if (heapArgs.length() > 0) {\n+                    heapArgs += \" \";\n+                }\n+                heapArgs += \"-XX:MinHeapSize=\" + ha.minSize + \"g\";\n+            }\n+            if (ha.maxSize > 0) {\n+                if (heapArgs.length() > 0) {\n+                    heapArgs += \" \";\n+                }\n+                heapArgs += \"-XX:MaxHeapSize=\" + ha.maxSize + \"g\";\n+            }\n+            return heapArgs;\n+        }\n+    }\n+\n+    static HeapArgs[] heapArgsCases = {\n+        \/\/ InitialHeapSize, MinHeapSize, MaxHeapSize\n+        \/\/ all sizes are in the unit of GB\n+        \/\/ size of 0 means don't set the heap size\n+        new HeapArgs( 0, 0, 0),\n+        new HeapArgs( 5, 3, 5),\n+        new HeapArgs( 3, 3, 5),\n+        new HeapArgs( 5, 5, 5),\n+        new HeapArgs( 2, 1, 33),\n+    };\n+\n+    static void checkExpectedMessages(HeapArgs ha, OutputAnalyzer output) throws Exception {\n+        final int DUMPTIME_MAX_HEAP = 4; \/\/ 4 GB\n+        if (ha.minSize > DUMPTIME_MAX_HEAP) {\n+            output.shouldContain(\"Setting MinHeapSize to 4G for CDS dumping\");\n+        }\n+        if (ha.initialSize > DUMPTIME_MAX_HEAP) {\n+            output.shouldContain(\"Setting InitialHeapSize to 4G for CDS dumping\");\n+        }\n+        if (ha.maxSize > DUMPTIME_MAX_HEAP) {\n+            output.shouldContain(\"Setting MaxHeapSize to 4G for CDS dumping\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        final String noCoops = \"-XX:-UseCompressedOops\";\n+        final String logArg = \"-Xlog:gc+heap=trace,cds=debug\";\n+        JarBuilder.getOrCreateHelloJar();\n+        String appJar = TestCommon.getTestJar(\"hello.jar\");\n+        String appClasses[] = TestCommon.list(\"Hello\");\n+\n+        for (HeapArgs ha : heapArgsCases) {\n+            String heapArg = ha.heapArgsString(ha);\n+            List<String> dumptimeArgs = new ArrayList<String>();\n+            \/\/ UseCompressedOops is ergonomically disabled for MaxHeapSize > 32g.\n+            if (ha.maxSize < 32) {\n+                dumptimeArgs.add(noCoops);\n+            }\n+            dumptimeArgs.add(logArg);\n+            OutputAnalyzer output;\n+            if (heapArg.length() == 0) {\n+                System.out.println(\"\\n    Test without heap args\\n\");\n+                output = TestCommon.dump(appJar, appClasses, dumptimeArgs.toArray(new String[0]));\n+            } else {\n+                System.out.println(\"\\n    Test with heap args: \" + heapArg + \"\\n\");\n+                String[] heapSizes = heapArg.split(\" \");\n+                for (String heapSize : heapSizes) {\n+                    dumptimeArgs.add(heapSize);\n+                }\n+                output = TestCommon.dump(appJar, appClasses, dumptimeArgs.toArray(new String[0]));\n+                checkExpectedMessages(ha, output);\n+            }\n+\n+            TestCommon.checkDump(output);\n+            TestCommon.run(\"-cp\", appJar,\n+                        logArg, \"-Xlog:class+load\", noCoops, \"Hello\")\n+                .assertNormalExit(\"Hello source: shared objects file\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpingWithNoCoops.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,7 @@\n+    static final String outDir = CDSTestUtils.getOutputDir();\n+    static final String newFile = \"non-exist.jar\";\n+    static final String nonExistPath = outDir + File.separator + newFile;\n+    static final String emptyJarPath = outDir + File.separator + \"empty.jar\";\n+    static final String errorMessage1 = \"Unable to use shared archive\";\n+    static final String errorMessage2 = \"shared class paths mismatch\";\n+\n@@ -50,5 +57,0 @@\n-        String outDir = CDSTestUtils.getOutputDir();\n-        String newFile = \"non-exist.jar\";\n-        String nonExistPath = outDir + File.separator + newFile;\n-        final String errorMessage1 = \"Unable to use shared archive\";\n-        final String errorMessage2 = \"shared class paths mismatch\";\n@@ -56,1 +58,0 @@\n-\n@@ -103,0 +104,75 @@\n+\n+        if (bootcp) {\n+            doMoreBCPTests(appJar, errorMessage3);\n+        }\n+    }\n+\n+    static void doMoreBCPTests(String appJar, String errorMessage3) throws Exception {\n+\n+        \/\/ Dump an archive with non-existent boot class path.\n+        (new File(nonExistPath)).delete();\n+        TestCommon.testDump(\"foobar\", TestCommon.list(\"Hello\"), make_args(true, nonExistPath, \"-cp\", appJar));\n+\n+        \/\/ Run with non-existent boot class path, test should pass.\n+        TestCommon.run(make_args(true,\n+                                 nonExistPath,\n+                                 \"-cp\", appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertNormalExit();\n+\n+        \/\/ Run with existent boot class path, test should fail.\n+        TestCommon.run(make_args(true,\n+                                 appJar,\n+                                 \"-cp\", appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertAbnormalExit(errorMessage1, errorMessage2, errorMessage3);\n+\n+        \/\/ Dump an archive with existent boot class path.\n+        TestCommon.testDump(\"foobar\", TestCommon.list(\"Hello\"), make_args(true, appJar));\n+\n+        \/\/ Run with non-existent boot class path, test should fail.\n+        TestCommon.run(make_args(true,\n+                                 nonExistPath,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertAbnormalExit(errorMessage1, errorMessage2, errorMessage3);\n+\n+        \/\/ Run with existent boot class path, test should pass.\n+        TestCommon.run(make_args(true,\n+                                 appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertNormalExit();\n+\n+        \/\/ Test with empty jar file.\n+        (new File(emptyJarPath)).delete();\n+        (new File(emptyJarPath)).createNewFile();\n+\n+        \/\/ Dump an archive with an empty jar in the boot class path.\n+        TestCommon.testDump(\"foobar\", TestCommon.list(\"Hello\"), make_args(true, emptyJarPath, \"-cp\", appJar));\n+\n+        \/\/ Run with an empty jar in boot class path, test should pass.\n+        TestCommon.run(make_args(true,\n+                                 emptyJarPath,\n+                                 \"-cp\", appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertNormalExit();\n+\n+        \/\/ Run with non-existent boot class path, test should pass.\n+        TestCommon.run(make_args(true,\n+                                 nonExistPath,\n+                                 \"-cp\", appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertNormalExit();\n+\n+        \/\/ Run with existent boot class path, test should fail.\n+        TestCommon.run(make_args(true,\n+                                 appJar,\n+                                 \"-cp\", appJar,\n+                                 \"-Xlog:class+path=trace\",\n+                                 \"Hello\"))\n+            .assertAbnormalExit(errorMessage1, errorMessage2, errorMessage3);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/NonExistClasspath.java","additions":83,"deletions":7,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,3 +90,1 @@\n-    log(\"Execution with simple errors -- with 'simple' errors like missing or modified\\n\" +\n-        \"JAR files, the VM should try to continue to print the remaining information.\\n\" +\n-        \"Use an invalid Boot CP -- all the JAR paths should be checked\");\n+    log(\"Non-existent boot cp should be ignored, test should pass.\");\n@@ -97,1 +95,1 @@\n-      .ifNoMappingFailure(output -> check(output, 1, true, lastCheckMsg, \"[BOOT classpath mismatch, \"));\n+      .ifNoMappingFailure(output -> check(output, 0, true, lastCheckMsg));\n@@ -99,1 +97,3 @@\n-    log(\"Use an App CP shorter than the one at dump time -- all the JAR paths should be checked\");\n+    log(\"Execution with simple errors -- with 'simple' errors like missing or modified\\n\" +\n+        \"JAR files, the VM should try to continue to print the remaining information.\\n\" +\n+        \"Use an App CP shorter than the one at dump time -- all the JAR paths should be checked\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/PrintSharedArchiveAndExit.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -83,0 +83,8 @@\n+        for (String opt : execArgs) {\n+          if (opt.equals(\"-XX:+VerifySharedSpaces\")) {\n+            \/\/ If VerifySharedSpaces is enabled, the VM should never crash even if the archive\n+            \/\/ is corrupted (unless if we are so lucky that the corrupted archive ends up\n+            \/\/ have the same checksum as recoreded in the header)\n+            output.shouldNotContain(\"A fatal error has been detected by the Java Runtime Environment\");\n+          }\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -150,0 +150,13 @@\n+        opts.addSuffix(\"-Djava.class.path=\");\n+        OutputAnalyzer out = CDSTestUtils.createArchive(opts);\n+        CDSTestUtils.checkBaseDump(out);\n+        return out;\n+    }\n+\n+    public static OutputAnalyzer dumpBaseArchive(String baseArchiveName, String classList[], String ... cmdLineSuffix)\n+        throws Exception\n+    {\n+        CDSOptions opts = new CDSOptions();\n+        opts.setArchiveName(baseArchiveName);\n+        opts.setClassList(classList);\n+        opts.addSuffix(cmdLineSuffix);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,234 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key randomness\n+ * @summary test dynamic dump meanwhile output loaded class list\n+ * @bug 8279009 8275084\n+ * @requires vm.cds\n+ * @requires vm.cds.custom.loaders\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile test-classes\/Hello.java ClassSpecializerTestApp.java ClassListWithCustomClassNoSource.java\n+ * @run main\/othervm TestDumpClassListSource\n+ *\/\n+\n+\/* Test two senarios:\n+ *   1. ClassSpecializerTestApp.java:\n+ *      Test case for bug 8275084, make sure the filtering of source class to\n+ *      dumped class list.\n+ *   2. ClassListWithCustomClassNoSource: test custom class loader\n+ *      2.1 class loaded without source.\n+ *      2.2 class loaded with ProtectionDomain set as same as main class.\n+ *      2.3 class loaded by custom loader from shared space.\n+ *\/\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.io.File;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.cds.CDSTestUtils;\n+\n+public class TestDumpClassListSource {\n+    private static final boolean EXPECT_MATCH = true;\n+    private static final boolean EXPECT_NOMATCH  = !EXPECT_MATCH;\n+\n+    private static void checkMatch(String file, String regexp, boolean expectMatch, String exceptionMessage) throws Exception {\n+        String listData = new String(Files.readAllBytes(Paths.get(file)));\n+        Pattern pattern = Pattern.compile(regexp, Pattern.MULTILINE);\n+        Matcher matcher = pattern.matcher(listData);\n+        boolean found   = matcher.find();\n+        if (expectMatch) {\n+            if (!found) {\n+                throw new RuntimeException(exceptionMessage);\n+            }\n+        } else {\n+            if (found) {\n+                throw new RuntimeException(exceptionMessage);\n+            }\n+        }\n+    }\n+\n+    static final String mainInvokeClass = \"ClassSpecializerTestApp\";\n+    static final String mainCutomClass  = \"ClassListWithCustomClassNoSource\";\n+    static final String sourceTarget    = \"_ClassSpecializer_generateConcreteSpeciesCode\";\n+\n+    private static void checkFileExistence(String type, File file) throws Exception {\n+        if (!file.exists()) {\n+            throw new RuntimeException(type + \" file \" + file.getName() + \" should be created\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        String listFileName = \"test-classlist.list\";\n+        String archiveName  = \"test-dynamic.jsa\";\n+        String jarFile = JarBuilder.build(\"test-hello\", \"ClassSpecializerTestApp\", \"ClassListWithCustomClassNoSource\",\n+                                          \"ClassListWithCustomClassNoSource$CL\", \"Hello\");\n+        \/\/ 1. Invoke lambda\n+        File fileList = new File(listFileName);\n+        if (fileList.exists()) {\n+            fileList.delete();\n+        }\n+        File fileArchive = new File(archiveName);\n+        if (fileArchive.exists()) {\n+            fileArchive.delete();\n+        }\n+        String[] launchArgs  = {\n+                \"-Xshare:auto\",\n+                \"-XX:DumpLoadedClassList=\" + listFileName,\n+                \"-XX:ArchiveClassesAtExit=\" + archiveName,\n+                \"-Xlog:cds\",\n+                \"-Xlog:cds+lambda\",\n+                \"-cp\",\n+                jarFile,\n+                mainInvokeClass};\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        OutputAnalyzer output = TestCommon.executeAndLog(pb, \"invoke-class\");\n+\n+        checkFileExistence(\"Archive\", fileArchive);\n+        checkFileExistence(\"ClassList\", fileList);\n+\n+        output.shouldHaveExitValue(0);\n+        checkMatch(listFileName, sourceTarget, EXPECT_NOMATCH, \"Failed to filter \" + sourceTarget + \" in class list file\");\n+\n+        fileArchive.delete();\n+        fileList.delete();\n+\n+        \/\/ 2. Custom loaded class\n+        \/\/    2.1 test in memory class generation without source\n+        launchArgs  = new String[] {\n+                \"-Xshare:auto\",\n+                \"-XX:DumpLoadedClassList=\" + listFileName,\n+                \"-XX:ArchiveClassesAtExit=\" + archiveName,\n+                \"-Xlog:cds\",\n+                \"-Xlog:cds+lambda\",\n+                \"-Xlog:class+path=info\",\n+                 \"-cp\",\n+                jarFile,\n+                mainCutomClass,\n+                \"1\"};\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"custom-nosource\");\n+\n+        checkFileExistence(\"Archive\", fileArchive);\n+        checkFileExistence(\"ClassList\", fileList);\n+\n+        output.shouldHaveExitValue(0);\n+        checkMatch(listFileName, sourceTarget, EXPECT_NOMATCH, \"Failed to filter \" + sourceTarget + \" in class list file\");\n+        checkMatch(listFileName, \"Hello\", EXPECT_NOMATCH, \"Hello should not be logged in class list file\");\n+\n+        fileArchive.delete();\n+        fileList.delete();\n+\n+        \/\/    2.2 test in memory class with ProtectionDomain as main class.\n+        \/\/    \"Hello\" will be printed in list file and its source set as main class.\n+        launchArgs  = new String[] {\n+                \"-Xshare:auto\",\n+                \"-XX:DumpLoadedClassList=\" + listFileName,\n+                \"-XX:ArchiveClassesAtExit=\" + archiveName,\n+                \"-Xlog:cds\",\n+                \"-Xlog:cds+lambda\",\n+                \"-Xlog:class+path=info\",\n+                 \"-cp\",\n+                jarFile,\n+                mainCutomClass,\n+                \"2\"};\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"custom-nosource\");\n+\n+        checkFileExistence(\"Archive\", fileArchive);\n+        checkFileExistence(\"ClassList\", fileList);\n+\n+        output.shouldHaveExitValue(0);\n+        checkMatch(listFileName, sourceTarget, EXPECT_NOMATCH, \"Failed to filter \" + sourceTarget + \" in class list file\");\n+        checkMatch(listFileName, \"Hello\", EXPECT_MATCH, \"Hello should be logged in class list file\");\n+\n+        fileArchive.delete();\n+        fileList.delete();\n+\n+        \/\/    2.3 class loaded by custom loader from shared space.\n+        \/\/      2.3.1 dump class list\n+        launchArgs = new String[] {\n+                \"-XX:DumpLoadedClassList=\" + listFileName,\n+                 \"-cp\",\n+                jarFile,\n+                mainCutomClass,\n+                \"3\"};\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"custom-dump-classlist\");\n+\n+        checkFileExistence(\"ClassList\", fileList);\n+\n+        checkMatch(listFileName, \"Hello id: [0-9]+ super: [0-9]+ source: .*\/test-hello.jar\", EXPECT_MATCH,\n+                   \"Class Hello should be printed in classlist\");\n+        \/\/      2.3.2 dump shared archive based on listFileName\n+        String archive = \"test-hello.jsa\";\n+        File archiveFile = new File(archive);\n+        if (archiveFile.exists()) {\n+            archiveFile.delete();\n+        }\n+        launchArgs = new String[] {\n+                \"-Xshare:dump\",\n+                \"-XX:SharedClassListFile=\" + listFileName,\n+                \"-XX:SharedArchiveFile=\" + archive,\n+                 \"-cp\",\n+                jarFile,\n+                mainCutomClass,\n+                \"3\"};\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"custom-dump\");\n+\n+        checkFileExistence(\"Archive\", archiveFile);\n+\n+        \/\/       2.3.3 run with the shared archive and -XX:DumpLoadedClassList\n+        \/\/             Hello should not be printed out in class list file.\n+        String classList = \"new-test-list.list\";\n+        File newFile = new File(classList);\n+        if (newFile.exists()) {\n+            newFile.delete();\n+        }\n+        launchArgs = new String[] {\n+                \"-Xshare:on\",\n+                \"-XX:SharedArchiveFile=\" + archive,\n+                \"-XX:DumpLoadedClassList=\" + classList,\n+                 \"-cp\",\n+                jarFile,\n+                mainCutomClass,\n+                \"3\"};\n+        pb = ProcessTools.createJavaProcessBuilder(launchArgs);\n+        output = TestCommon.executeAndLog(pb, \"custom-share\");\n+\n+        checkFileExistence(\"ClassList\", newFile);\n+        checkMatch(classList, \"Hello id: ?\", EXPECT_NOMATCH, \"Failed to filter custom loaded class Hello from class list\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestDumpClassListSource.java","additions":234,"deletions":0,"binary":false,"changes":234,"status":"added"},{"patch":"@@ -65,0 +65,2 @@\n+        WhiteBox wb = WhiteBox.getWhiteBox();\n+        boolean useCompressedOops = wb.getBooleanVMFlag(\"UseCompressedOops\");\n@@ -74,1 +76,1 @@\n-                if (runSize < 32768) {\n+                if (runSize < 32768 || !useCompressedOops) {\n@@ -91,1 +93,1 @@\n-        long default_base = WhiteBox.getWhiteBox().getSizeTVMFlag(\"HeapBaseMinAddress\").longValue();\n+        long default_base = wb.getSizeTVMFlag(\"HeapBaseMinAddress\").longValue();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/cacheObject\/DifferentHeapSizes.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -205,0 +205,27 @@\n+\n+        \/\/ following two tests:\n+        \/\/   -Xshare:auto -XX:SharedArchiveFile=top.jsa, but base does not exist.\n+\n+      if (!isUseSharedSpacesDisabled()) {\n+        new File(baseArchiveName).delete();\n+\n+        startTest(\"10. -XX:+AutoCreateSharedArchive -XX:SharedArchiveFile=\" + topArchiveName);\n+        run(topArchiveName,\n+            \"-Xshare:auto\",\n+            \"-XX:+AutoCreateSharedArchive\",\n+            \"-cp\",\n+            appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"warning: -XX:+AutoCreateSharedArchive is unsupported when base CDS archive is not loaded\");\n+            });\n+\n+        startTest(\"11. -XX:SharedArchiveFile=\" + topArchiveName + \" -XX:ArchiveClassesAtExit=\" + getNewArchiveName(\"top3\"));\n+        run(topArchiveName,\n+            \"-Xshare:auto\",\n+            \"-XX:ArchiveClassesAtExit=\" + getNewArchiveName(\"top3\"),\n+            \"-cp\",\n+            appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                output.shouldContain(\"VM warning: -XX:ArchiveClassesAtExit is unsupported when base CDS archive is not loaded\");\n+            });\n+      }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+\n+public class CDSLambdaInvoker {\n+    public static void main(String args[]) throws Throwable {\n+        invoke(MethodHandles.identity(double.class), 1.0);\n+        invoke(MethodHandles.identity(long.class), 1);\n+        invoke(MethodHandles.identity(int.class), 1);\n+        invoke(MethodHandles.identity(float.class), 1.0f);\n+\n+        MethodHandles.Lookup lookup = MethodHandles.lookup();\n+        MethodType mt = MethodType.methodType(void.class, float.class, double.class, int.class,\n+                                              boolean.class, Object.class, long.class, double.class);\n+        MethodHandle mh = lookup.findStatic(CDSLambdaInvoker.class, \"callme\", mt);\n+        mh.invokeExact(4.0f, 5.0, 6, true, (Object)args, 7L, 8.0);\n+    }\n+\n+    private static Object invoke(MethodHandle mh, Object ... args) throws Throwable {\n+        try {\n+            for (Object o : args) {\n+                mh = MethodHandles.insertArguments(mh, 0, o);\n+            }\n+            return mh.invoke();\n+        } catch (Throwable t) {\n+            System.out.println(\"Failed to find, link and\/or invoke \" + mh.toString() + \": \" + t.getMessage());\n+            throw t;\n+        }\n+    }\n+\n+    private static void callme(float f, double d, int i, boolean b, Object o, long l, double d2) {\n+\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/CDSLambdaInvoker.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import jdk.test.lib.cds.CDSTestUtils;\n+\n+\/*\n+ * @test\n+ * @summary Dyanmic archive with module path\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\n+ * @compile ..\/test-classes\/Hello.java\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar WhiteBox.jar sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\/WhiteBox.jar ModulePath\n+ *\/\n+\n+public class ModulePath extends DynamicArchiveTestBase {\n+    private static final Path USER_DIR = Paths.get(CDSTestUtils.getOutputDir());\n+\n+    private static final String FS = File.separator;\n+    private static final String TEST_SRC = System.getProperty(\"test.src\") +\n+        FS + \"..\" + FS + \"jigsaw\" + FS + \"modulepath\";\n+\n+    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+\n+    \/\/ the module name of the test module\n+    private static final String TEST_MODULE = \"com.simple\";\n+\n+    \/\/ the module main class\n+    private static final String MAIN_CLASS = \"com.simple.Main\";\n+\n+    private static Path moduleDir = null;\n+    private static Path srcJar = null;\n+\n+    public static void buildTestModule() throws Exception {\n+\n+        \/\/ javac -d mods\/$TESTMODULE --module-path MOD_DIR src\/$TESTMODULE\/**\n+        JarBuilder.compileModule(SRC_DIR.resolve(TEST_MODULE),\n+                                 MODS_DIR.resolve(TEST_MODULE),\n+                                 MODS_DIR.toString());\n+\n+\n+        moduleDir = Files.createTempDirectory(USER_DIR, \"mlib\");\n+        srcJar = moduleDir.resolve(TEST_MODULE + \".jar\");\n+        String classes = MODS_DIR.resolve(TEST_MODULE).toString();\n+        JarBuilder.createModularJar(srcJar.toString(), classes, MAIN_CLASS);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        runTest(ModulePath::test);\n+    }\n+\n+    static void test(String args[]) throws Exception {\n+        String topArchiveName = getNewArchiveName(\"top\");\n+        String baseArchiveName = getNewArchiveName(\"base\");\n+\n+        String appJar    = JarBuilder.getOrCreateHelloJar();\n+        String mainClass = \"Hello\";\n+\n+        \/\/ create a base archive with the --module-path option\n+        buildTestModule();\n+        baseArchiveName = getNewArchiveName(\"base-with-module\");\n+        String appClasses[] = {mainClass};\n+        TestCommon.dumpBaseArchive(baseArchiveName,\n+                        appClasses,\n+                        \"-Xlog:class+load\",\n+                        \"-cp\", appJar,\n+                        \"--module-path\", moduleDir.toString(),\n+                        \"-m\", TEST_MODULE);\n+\n+        \/\/ Dumping of dynamic archive should be successful if the specified\n+        \/\/ --module-path is the same as for the base archive.\n+        topArchiveName = getNewArchiveName(\"top-with-module\");\n+        dump2(baseArchiveName, topArchiveName,\n+              \"-Xlog:cds*\",\n+              \"-Xlog:cds+dynamic=debug\",\n+              \"-Xlog:class+path=info,class+load\",\n+              \"-cp\", appJar,\n+              \"--module-path\", moduleDir.toString(),\n+              \"-m\", TEST_MODULE, MAIN_CLASS)\n+            .assertNormalExit();\n+\n+        \/\/ Load the Hello class from the base archive.\n+        run2(baseArchiveName, topArchiveName,\n+            \"-Xlog:class+load\",\n+            \"-Xlog:cds+dynamic=debug,cds=debug\",\n+            \"-cp\", appJar, mainClass)\n+            .assertNormalExit(output -> {\n+                    output.shouldContain(\"Hello source: shared objects file\")\n+                          .shouldHaveExitValue(0);\n+                });\n+\n+        \/\/ Load the com.simple.Main class from the dynamic archive.\n+        run2(baseArchiveName, topArchiveName,\n+            \"-Xlog:class+load\",\n+            \"-Xlog:cds+dynamic=debug,cds=debug\",\n+            \"-cp\", appJar,\n+            \"--module-path\", moduleDir.toString(),\n+            \"-m\", TEST_MODULE, MAIN_CLASS)\n+            .assertNormalExit(output -> {\n+                    output.shouldContain(\"com.simple.Main source: shared objects file (top)\")\n+                          .shouldHaveExitValue(0);\n+                });\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ModulePath.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,11 +67,0 @@\n-    private static void mustSkipWith(String expectedMsg, MyRunnable r) throws Exception {\n-        try {\n-            r.run();\n-        } catch (SkippedException e) {\n-            System.out.println(\"Got SkippedException: \" + e);\n-            Asserts.assertTrue(e.getMessage().contains(expectedMsg), \"SkippedException must have message \" + expectedMsg);\n-            return;\n-        }\n-        Asserts.fail(\"SkippedException should have been thrown\");\n-    }\n-\n@@ -208,1 +197,1 @@\n-        {\n+         {\n@@ -212,6 +201,9 @@\n-            mustSkipWith(ERROR, () -> {\n-                    dump2(baseArchiveName,\n-                          topArchiveName,\n-                          \"-Xshare:off\",\n-                          \"-cp\", appJar, mainClass);\n-                });\n+            dump2(baseArchiveName,\n+                  topArchiveName,\n+                  \"-Xshare:off\",\n+                  \"-Xlog:cds\",\n+                  \"-cp\", appJar, mainClass)\n+                 .assertNormalExit(output -> {\n+                         output.shouldNotMatch(\"\\\\[cds,dynamic\");\n+                         output.shouldContain(ERROR);\n+                     });\n@@ -220,7 +212,9 @@\n-            mustSkipWith(ERROR, () -> {\n-                    dump2(baseArchiveName + \".notExist\",\n-                          topArchiveName,\n-                          \"-Xlog:cds\",\n-                          \"-Xshare:auto\",\n-                          \"-cp\", appJar, mainClass);\n-                });\n+            dump2(baseArchiveName + \".notExist\",\n+                  topArchiveName,\n+                  \"-Xlog:cds\",\n+                  \"-Xshare:auto\",\n+                  \"-cp\", appJar, mainClass)\n+                 .assertNormalExit(output -> {\n+                         output.shouldNotMatch(\"\\\\[cds,dynamic\");\n+                         output.shouldContain(ERROR);\n+                     });\n@@ -236,1 +230,1 @@\n-                .assertAbnormalExit(\"Cannot use the following option when dumping the shared archive: --patch-module\");\n+                 .assertAbnormalExit(\"Cannot use the following option when dumping the shared archive: --patch-module\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/SharedArchiveFileOption.java","additions":21,"deletions":27,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key randomness\n+ * @summary test archive lambda invoker species type in dynamic dump\n+ * @bug 8280767\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\n+ * @compile CDSLambdaInvoker.java\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller -jar cds-test.jar CDSLambdaInvoker\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:. TestLambdaInvokers\n+ *\/\n+\n+public class TestLambdaInvokers extends DynamicArchiveTestBase {\n+    private static final String mainClass = \"CDSLambdaInvoker\";\n+    private static final String jarFile   = \"cds-test.jar\";\n+    private static void doTest(String topArchiveName) throws Exception {\n+        dump(topArchiveName,\n+             \"-Xlog:cds\",\n+             \"-Xlog:cds+dynamic=debug\",\n+             \"-cp\",\n+             jarFile,\n+             mainClass)\n+             .assertNormalExit(output -> {\n+                 output.shouldContain(\"Skip regenerating for shared\");\n+             });\n+        run(topArchiveName,\n+             \"-Xlog:cds\",\n+             \"-Xlog:cds+dynamic=debug\",\n+             \"-Xlog:class+load\",\n+             \"-cp\",\n+             jarFile,\n+             mainClass)\n+             .assertNormalExit(output -> {\n+                 \/\/ java.lang.invoke.BoundMethodHandle$Species_JL is generated from CDSLambdaInvoker\n+                 output.shouldContain(\"java.lang.invoke.BoundMethodHandle$Species_JL source: shared objects file (top)\");\n+             });\n+    }\n+\n+    static void testWithDefaultBase() throws Exception {\n+        String topArchiveName = getNewArchiveName(\"top\");\n+        doTest(topArchiveName);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        runTest(TestLambdaInvokers::testWithDefaultBase);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/TestLambdaInvokers.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-        \"Dynamic archiving is disabled because base layer archive has module path\";\n+        \"Dynamic archiving is disabled because base layer archive has a different module path\";\n@@ -107,0 +107,1 @@\n+        String appClasses[] = {mainClass};\n@@ -108,1 +109,3 @@\n-                        \"-cp\", srcJar.toString(),\n+                        appClasses,\n+                        \"-Xlog:class+load\",\n+                        \"-cp\", appJar,\n@@ -112,3 +115,3 @@\n-        \/\/ dumping of dynamic archive should be disabled with a warning message\n-        \/\/ if the base archive contains --module-path entries.\n-        topArchiveName = getNewArchiveName(\"top-with-module\");\n+        \/\/ Try to create a dynamic archive without specifying module path,\n+        \/\/ dumping should fail.\n+        topArchiveName = getNewArchiveName(\"top-with-module-failed\");\n@@ -118,4 +121,3 @@\n-              \"-Xlog:class+path=info\",\n-              \"-cp\", srcJar.toString(),\n-              \"--module-path\", moduleDir.toString(),\n-              \"-m\", TEST_MODULE)\n+              \"-Xlog:class+path=info,class+load\",\n+              \"-cp\", appJar,\n+              mainClass)\n@@ -123,1 +125,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/UnsupportedBaseArchive.java","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,11 @@\n+        \/\/ Test dynamic dump with -Xlog:cds to check lambda invoker class regeneration\n+        print2ln(test_count++ + \" Test dynamic dump with -Xlog:cds to check lambda invoker class regeneration\");\n+        app = createLingeredApp(\"-cp\", allJars, \"-XX:+RecordDynamicDumpInfo\", \"-Xlog:cds\",\n+                                \"-XX:SharedArchiveFile=\" + archiveFile);\n+        pid = app.getPid();\n+        test(null, pid, noBoot, EXPECT_PASS, DYNAMIC_MESSAGES);\n+        String stdout = app.getProcessStdout();\n+        if (stdout.contains(\"Regenerate MethodHandle Holder classes...\")) {\n+            throw new RuntimeException(\"jcmd VM.cds dynamic_dump should not regenerate MethodHandle Holder classes\");\n+        }\n+        app.stopApp();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jcmd\/JCmdTestDynamicDump.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -222,0 +222,10 @@\n+            .assertAbnormalExit(out -> {\n+                out.shouldNotContain(CLASS_FOUND_MESSAGE)\n+                   .shouldContain(OPTIMIZE_DISABLED)           \/\/ mapping info\n+                   .shouldContain(\"Error: Could not find or load main class .\");\n+            });\n+        tty(\"11. run with CDS on, --module-path, with -Xbootclasspath\/a:.\");\n+        TestCommon.run(\"-Xlog:cds\",\n+                       \"-Xbootclasspath\/a:.\",\n+                       \"--module-path\", libsDir.toString(),\n+                       MAIN_CLASS)\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/OptimizeModuleHandlingTest.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8149036 8150619\n+ * @bug 8149036 8150619 8277531\n@@ -39,0 +39,1 @@\n+import jdk.test.lib.Platform;\n@@ -46,1 +47,5 @@\n-        output.shouldContain(\"Thread is alive\");\n+        if (Platform.isWindows()) {\n+            output.shouldMatch(\"Thread is alive \\\\(tid: [0-9]+, stacksize: [0-9]+k\\\\)\");\n+        } else {\n+            output.shouldContain(\"Thread is alive\");\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ThreadLoggingTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+ * @requires vm.hasDTrace\n@@ -39,1 +40,0 @@\n-import jtreg.SkippedException;\n@@ -47,11 +47,1 @@\n-        {\n-            var pb = ProcessTools.createJavaProcessBuilder(\n-                    \"-XX:+ExtendedDTraceProbes\",\n-                    \"-version\");\n-            var oa = new OutputAnalyzer(pb.start());\n-            \/\/ This test only matters when build with DTRACE_ENABLED.\n-            if (oa.getExitValue() != 0) {\n-                throw new SkippedException(\"Not build using DTRACE_ENABLED\");\n-            }\n-        }\n-\n+        \/\/ This test only matters when build with DTRACE_ENABLED.\n","filename":"test\/hotspot\/jtreg\/serviceability\/7170638\/SDTProbesGNULinuxTest.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,336 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.BufferedInputStream;\n+import java.io.EOFException;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.lang.ref.Reference;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Hashtable;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.JDKToolLauncher;\n+import jdk.test.lib.apps.LingeredApp;\n+import jdk.test.lib.hprof.parser.PositionDataInputStream;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/**\n+ * @test\n+ * @bug 8281267\n+ * @summary Verifies heap dump does not contain duplicate array classes\n+ * @library \/test\/lib\n+ * @run driver DuplicateArrayClassesTest\n+ *\/\n+\n+class DuplicateArrayClassesTarg extends LingeredApp {\n+    public static void main(String[] args) {\n+        \/\/ Initialize some array classes (for primitive type and object type).\n+        int[][][] intArray = new int[0][][];\n+        String[][][] strArray = new String[0][][];\n+        LingeredApp.main(args);\n+        Reference.reachabilityFence(intArray);\n+        Reference.reachabilityFence(strArray);\n+    }\n+}\n+\n+\n+public class DuplicateArrayClassesTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        File dumpFile = new File(\"Myheapdump.hprof\");\n+        createDump(dumpFile);\n+        verifyDump(dumpFile);\n+    }\n+\n+    private static void createDump(File dumpFile) throws Exception {\n+        LingeredApp theApp = null;\n+        try {\n+            theApp = new DuplicateArrayClassesTarg();\n+\n+            LingeredApp.startApp(theApp);\n+\n+            \/\/jcmd <pid> GC.heap_dump <file_path>\n+            JDKToolLauncher launcher = JDKToolLauncher\n+                    .createUsingTestJDK(\"jcmd\")\n+                    .addToolArg(Long.toString(theApp.getPid()))\n+                    .addToolArg(\"GC.heap_dump\")\n+                    .addToolArg(dumpFile.getAbsolutePath());\n+            Process p = ProcessTools.startProcess(\"jcmd\", new ProcessBuilder(launcher.getCommand()));\n+            \/\/ If something goes wrong with heap dumping most likely we'll get crash of the target VM.\n+            while (!p.waitFor(5, TimeUnit.SECONDS)) {\n+                if (!theApp.getProcess().isAlive()) {\n+                    log(\"ERROR: target VM died, killing jcmd...\");\n+                    p.destroyForcibly();\n+                    throw new Exception(\"Target VM died\");\n+                }\n+            }\n+\n+            if (p.exitValue() != 0) {\n+                throw new Exception(\"Jcmd exited with code \" + p.exitValue());\n+            }\n+        } finally {\n+            LingeredApp.stopApp(theApp);\n+        }\n+    }\n+\n+    private static final byte HPROF_UTF8                = 0x01;\n+    private static final byte HPROF_LOAD_CLASS          = 0x02;\n+    private static final byte HPROF_HEAP_DUMP           = 0x0c;\n+    private static final byte HPROF_GC_CLASS_DUMP       = 0x20;\n+    private static final byte HPROF_HEAP_DUMP_SEGMENT   = 0x1C;\n+    private static final byte HPROF_HEAP_DUMP_END       = 0x2C;\n+\n+    private static void verifyDump(File dumpFile) throws IOException {\n+        Asserts.assertTrue(dumpFile.exists(), \"Heap dump file not found.\");\n+\n+        \/\/ HPROF_UTF8 records.\n+        Map<Long, String> names = new HashMap<>();\n+        \/\/ Maps from HPROF_LOAD_CLASS records.\n+        Map<Long, String> classId2Name = new Hashtable<>();\n+        Map<String, Long> className2Id = new Hashtable<>();\n+        \/\/ Duplicate HPROF_LOAD_CLASS records.\n+        List<Long> duplicateLoadClassIDs = new LinkedList<>();\n+        \/\/ HPROF_GC_CLASS_DUMP records.\n+        Set<Long> dumpClassIDs = new HashSet<>();\n+        \/\/ Duplicate HPROF_GC_CLASS_DUMP records.\n+        List<Long> duplicateDumpClassIDs = new LinkedList<>();\n+\n+        try (DumpInputStream in = new DumpInputStream(dumpFile)) {\n+            while (true) {\n+                DumpRecord rec;\n+                try {\n+                    rec = in.readRecord();\n+                } catch (EOFException ex) {\n+                    break;\n+                }\n+                long pos = in.position();   \/\/ save the current pos\n+\n+                switch (rec.tag()) {\n+                    case HPROF_UTF8:\n+                        long id = in.readID();\n+                        byte[] chars = new byte[(int) rec.size - in.idSize];\n+                        in.readFully(chars);\n+                        names.put(id, new String(chars));\n+                        break;\n+                    case HPROF_LOAD_CLASS:\n+                        long classSerialNo = in.readU4();\n+                        long classID = in.readID();\n+                        long stackTraceSerialNo = in.readU4();\n+                        long classNameID = in.readID();\n+                        \/\/ We expect all names are dumped before classes.\n+                        String className = names.get(classNameID);\n+\n+                        String prevName = classId2Name.putIfAbsent(classID, className);\n+                        if (prevName != null) { \/\/ there is a class with the same ID\n+                            if (!prevName.equals(className)) {\n+                                \/\/ Something is completely wrong.\n+                                throw new RuntimeException(\"Found new class with id=\" + classID\n+                                        + \" and different name (\" + className + \", was \" + prevName + \")\");\n+                            }\n+                            duplicateLoadClassIDs.add(classID);\n+                        }\n+                        \/\/ It's ok if we have other class with the same name (may be from other classloader).\n+                        className2Id.putIfAbsent(className, classID);\n+                        break;\n+                    case HPROF_HEAP_DUMP:\n+                    case HPROF_HEAP_DUMP_SEGMENT:\n+                        \/\/ HPROF_GC_CLASS_DUMP records are dumped first (in the beginning of the dump).\n+                        long endOfRecordPos = pos + rec.size();\n+\n+                        while (in.position() < endOfRecordPos) {\n+                            byte subTag = in.readU1();\n+                            if (subTag != HPROF_GC_CLASS_DUMP) {\n+                                break;\n+                            }\n+                            \/\/ We don't know HPROF_GC_CLASS_DUMP size, so have to read it completely.\n+                            long dumpClassID = readClassDump(in);\n+\n+                            if (!dumpClassIDs.add(dumpClassID)) {\n+                                duplicateDumpClassIDs.add(dumpClassID);\n+                            }\n+                        }\n+                        break;\n+                }\n+\n+                \/\/ Skip bytes till end of the record.\n+                long bytesRead = in.position() - pos;\n+                if (bytesRead > rec.size()) {\n+                    throw new RuntimeException(\"Bad record,\"\n+                            + \" record.size = \" + rec.size() + \", read \" + bytesRead);\n+                }\n+                in.skipNBytes(rec.size() - bytesRead);\n+            }\n+\n+            log(\"HPROF_LOAD_CLASS records: \" + (classId2Name.size() + duplicateLoadClassIDs.size()));\n+            log(\"HPROF_GC_CLASS_DUMP records: \" + (dumpClassIDs.size() + duplicateDumpClassIDs.size()));\n+\n+            \/\/ Verify we have array classes used by target app.\n+            String[] expectedClasses = {\"[I\", \"[[I\", \"[[[I\",\n+                    \"[Ljava\/lang\/String;\", \"[[Ljava\/lang\/String;\", \"[[[Ljava\/lang\/String;\"};\n+            for (String className: expectedClasses) {\n+                Long classId = className2Id.get(className);\n+                if (classId == null) {\n+                    throw new RuntimeException(\"no HPROF_LOAD_CLASS record for class \" + className);\n+                }\n+                \/\/ verify there is HPROF_GC_CLASS_DUMP record for the class\n+                if (!dumpClassIDs.contains(classId)) {\n+                    throw new RuntimeException(\"no HPROF_GC_CLASS_DUMP for class \" + className);\n+                }\n+                log(\"found \" + className);\n+            }\n+            if (!duplicateLoadClassIDs.isEmpty() || !duplicateDumpClassIDs.isEmpty()) {\n+                log(\"Duplicate(s) detected:\");\n+                log(\"HPROF_LOAD_CLASS records (\" + duplicateLoadClassIDs.size() + \"):\");\n+                duplicateLoadClassIDs.forEach(id -> log(\"  - id = \" + id + \": \" + classId2Name.get(id)));\n+                log(\"HPROF_GC_CLASS_DUMP records (\" + duplicateDumpClassIDs.size() + \"):\");\n+                duplicateDumpClassIDs.forEach(id -> log(\"  - id = \" + id + \": \" + classId2Name.get(id)));\n+                throw new RuntimeException(\"duplicates detected\");\n+            }\n+        }\n+    }\n+\n+    \/\/ Reads the whole HPROF_GC_CLASS_DUMP record, returns class ID.\n+    private static long readClassDump(DumpInputStream in) throws IOException {\n+        long classID = in.readID();\n+        long stackTraceNum = in.readU4();\n+        long superClassId = in.readID();\n+        long loaderClassId = in.readID();\n+        long signerClassId = in.readID();\n+        long protectionDomainClassId = in.readID();\n+        long reserved1 = in.readID();\n+        long reserved2 = in.readID();\n+        long instanceSize = in.readU4();\n+        long cpSize = in.readU2();\n+        for (long i = 0; i < cpSize; i++) {\n+            long cpIndex = in.readU2();\n+            byte type = in.readU1();\n+            in.skipNBytes(in.type2size(type)); \/\/ value\n+        }\n+        long staticNum = in.readU2();\n+        for (long i = 0; i < staticNum; i++) {\n+            long nameId = in.readID();\n+            byte type = in.readU1();\n+            in.skipNBytes(in.type2size(type)); \/\/ value\n+        }\n+        long instanceNum = in.readU2();\n+        for (long i = 0; i < instanceNum; i++) {\n+            long nameId = in.readID();\n+            byte type = in.readU1();\n+        }\n+        return classID;\n+    }\n+\n+    private static void log(Object s) {\n+        System.out.println(s);\n+    }\n+\n+\n+    private static record DumpRecord (byte tag, long size) {}\n+\n+    private static class DumpInputStream extends PositionDataInputStream {\n+        public final int idSize;\n+\n+        public DumpInputStream(File f) throws IOException {\n+            super(new BufferedInputStream(new FileInputStream(f)));\n+\n+            \/\/ read header:\n+            \/\/   header    \"JAVA PROFILE 1.0.2\" (0-terminated)\n+            \/\/   u4        size of identifiers. Identifiers are used to represent\n+            \/\/   u4         high word\n+            \/\/   u4         low word    number of milliseconds since 0:00 GMT, 1\/1\/70\n+            String header = readStr();\n+            log(\"header: \\\"\" + header + \"\\\"\");\n+            Asserts.assertTrue(header.startsWith(\"JAVA PROFILE \"));\n+\n+            idSize = readInt();\n+            if (idSize != 4 && idSize != 8) {\n+                Asserts.fail(\"id size \" + idSize + \" is not supported\");\n+            }\n+            \/\/ ignore timestamp\n+            readU4();\n+            readU4();\n+        }\n+\n+        \/\/ Reads null-terminated string\n+        public String readStr() throws IOException {\n+            StringBuilder sb = new StringBuilder();\n+            for (char ch = (char)readByte(); ch != '\\0'; ch = (char)readByte()) {\n+                sb.append(ch);\n+            }\n+            return sb.toString();\n+        }\n+\n+        public byte readU1() throws IOException {\n+            return readByte();\n+        }\n+        public int readU2() throws IOException {\n+            return readUnsignedShort();\n+        }\n+        public long readU4() throws IOException {\n+            \/\/ keep the value positive\n+            return ((long)readInt() & 0x0FFFFFFFFL);\n+        }\n+\n+        public long readID() throws IOException {\n+            return idSize == 4 ? readU4() : readLong();\n+        }\n+\n+        public DumpRecord readRecord() throws IOException {\n+            byte tag = readU1();\n+            readU4();   \/\/ timestamp, ignore it\n+            long size = readU4();\n+            return new DumpRecord(tag, size);\n+        }\n+\n+        public long type2size(byte type) {\n+            switch (type) {\n+                case 1:     \/\/ array\n+                case 2:     \/\/ object\n+                    return idSize;\n+                case 4:     \/\/ boolean\n+                case 8:     \/\/ byte\n+                    return 1;\n+                case 5:     \/\/ char\n+                case 9:     \/\/ short\n+                    return 2;\n+                case 6:     \/\/ float\n+                case 10:    \/\/ int\n+                    return 4;\n+                case 7:     \/\/ double\n+                case 11:    \/\/ long\n+                    return 8;\n+            }\n+            throw new RuntimeException(\"unknown type: \" + type);\n+        }\n+\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/HeapDump\/DuplicateArrayClassesTest.java","additions":336,"deletions":0,"binary":false,"changes":336,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc.  All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test id=enabled\n+ * @bug 8281822\n+ * @summary Test DTrace options are accepted on suitable builds\n+ * @requires vm.flagless\n+ * @requires vm.hasDTrace\n+ *\n+ * @library \/test\/lib\n+ * @run driver DTraceOptionsTest true\n+ *\/\n+\n+\/*\n+ * @test id=disabled\n+ * @bug 8281822\n+ * @summary Test DTrace options are rejected on unsuitable builds\n+ * @requires vm.flagless\n+ * @requires !vm.hasDTrace\n+ *\n+ * @library \/test\/lib\n+ * @run driver DTraceOptionsTest disabled\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class DTraceOptionsTest {\n+    public static void main(String[] args) throws Throwable {\n+        boolean dtraceEnabled;\n+        if (args.length > 0) {\n+            dtraceEnabled = Boolean.parseBoolean(args[0]);\n+        } else {\n+            throw new IllegalArgumentException(\"Should provide the argument\");\n+        }\n+\n+        String[] options = {\n+            \"ExtendedDTraceProbes\",\n+            \"DTraceMethodProbes\",\n+            \"DTraceAllocProbes\",\n+            \"DTraceMonitorProbes\",\n+        };\n+\n+        for (String opt : options) {\n+            var pb = ProcessTools.createJavaProcessBuilder(\"-XX:+\" + opt, \"-version\");\n+            var oa = new OutputAnalyzer(pb.start());\n+            if (dtraceEnabled) {\n+                oa.shouldHaveExitValue(0);\n+            } else {\n+                oa.shouldNotHaveExitValue(0);\n+                oa.shouldContain(opt + \" flag is not applicable for this configuration\");\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/serviceability\/dtrace\/DTraceOptionsTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -74,3 +75,5 @@\n-            String startAddress = null;\n-            String endAddress = null;\n-            String[] snippets = null;\n+            String startAddress;\n+            String endAddress;\n+            String[] snippets;\n+            String[] words;\n+            String cmd;\n@@ -78,0 +81,14 @@\n+            \/\/ Run scanoops on the old gen\n+            if (gc.contains(\"UseParallelGC\")) {\n+                snippets = universeOutput.split(\"PSOldGen \\\\[  \");\n+            } else {\n+                snippets = universeOutput.split(\"old  \\\\[\");\n+            }\n+            words = snippets[1].split(\",\");\n+            \/\/ Get the addresses for Old gen\n+            startAddress = words[0].replace(\"[\", \"\");\n+            endAddress = words[1];\n+            cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n+            String output1 = test.run(theApp.getPid(), List.of(cmd), null, null);\n+\n+            \/\/ Run scanoops on the eden gen\n@@ -83,2 +100,2 @@\n-            String[] words = snippets[1].split(\",\");\n-            \/\/ Get the addresses from Eden\n+            words = snippets[1].split(\",\");\n+            \/\/ Get the addresses for Eden gen\n@@ -87,6 +104,11 @@\n-            String cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n-            cmds.add(cmd);\n-\n-            expStrMap.put(cmd, List.of\n-                (\"java\/lang\/Object\", \"java\/lang\/Class\", \"java\/lang\/Thread\",\n-                 \"java\/lang\/String\", \"\\\\[B\", \"\\\\[I\"));\n+            cmd = \"scanoops \" + startAddress + \" \" + endAddress;\n+            String output2 = test.run(theApp.getPid(), List.of(cmd), null, null);\n+\n+            \/\/ Look for expected types in the combined eden and old gens\n+            OutputAnalyzer out = new OutputAnalyzer(output1 + output2);\n+            List<String> expectStrs = List.of(\n+                    \"java\/lang\/Object\", \"java\/lang\/Class\", \"java\/lang\/Thread\",\n+                    \"java\/lang\/String\", \"\\\\[B\", \"\\\\[I\");\n+            for (String expectStr : expectStrs) {\n+                out.shouldMatch(expectStr);\n+            }\n@@ -94,2 +116,2 @@\n-            \/\/ Test the 'type' option also\n-            \/\/ scanoops <start addr> <end addr> java\/lang\/String\n+            \/\/ Test the 'type' option also:\n+            \/\/   scanoops <start addr> <end addr> java\/lang\/String\n@@ -98,1 +120,0 @@\n-            cmds.add(cmd);\n@@ -100,3 +121,2 @@\n-            unExpStrMap.put(cmd, List.of(\"java\/lang\/Thread\"));\n-\n-            test.run(theApp.getPid(), cmds, expStrMap, unExpStrMap);\n+            unExpStrMap.put(cmd, List.of(\"java\/lang\/Thread\", \"java\/lang\/Class\", \"java\/lang\/Object\"));\n+            test.run(theApp.getPid(), List.of(cmd), expStrMap, unExpStrMap);\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbScanOops.java","additions":38,"deletions":18,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.test.lib.Platform;\n@@ -85,4 +86,0 @@\n-            expStrMap.put(cmdStr, List.of(\n-                    \"Thread \\\"SteadyStateThread\\\"\",\n-                    \"java.lang.Thread.State: BLOCKED\",\n-                    \"In java stack \\\\[0x\\\\p{XDigit}+,0x\\\\p{XDigit}+,0x\\\\p{XDigit}+\\\\] for thread\"));\n@@ -90,4 +87,15 @@\n-            unexpStrMap.put(cmdStr, List.of(\n-                    \"Thread \\\"Common-Cleaner\\\"\",\n-                    \"Thread \\\"Service Thread\\\"\",\n-                    \"Thread \\\"Finalizer\\\"\"));\n+            if (Platform.isWindows()) {\n+                \/\/ On windows thread IDs are not guaranteed to be the same each time you attach,\n+                \/\/ so the ID we gleaned above for SteadyStateThread may not actually be for\n+                \/\/ SteadyStateThread when we attach for the next threadcontext command, so we\n+                \/\/ choose not to check the result on Windows.\n+            } else {\n+                expStrMap.put(cmdStr, List.of(\n+                        \"Thread \\\"SteadyStateThread\\\"\",\n+                        \"java.lang.Thread.State: BLOCKED\",\n+                        \"In java stack \\\\[0x\\\\p{XDigit}+,0x\\\\p{XDigit}+,0x\\\\p{XDigit}+\\\\] for thread\"));\n+                unexpStrMap.put(cmdStr, List.of(\n+                        \"Thread \\\"Common-Cleaner\\\"\",\n+                        \"Thread \\\"Service Thread\\\"\",\n+                        \"Thread \\\"Finalizer\\\"\"));\n+            }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/ClhsdbThreadContext.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,6 @@\n-                Oop oop = heap.newOop(mon.object());\n-                System.out.println(\"Monitor found: \" + oop.getKlass().getName().asString());\n+                if (mon.object() == null) {\n+                    System.out.println(\"Monitor found: object is null\");\n+                } else {\n+                    Oop oop = heap.newOop(mon.object());\n+                    System.out.println(\"Monitor found: \" + oop.getKlass().getName().asString());\n+                }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestObjectMonitorIterate.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-java\/util\/stream\/test\/org\/openjdk\/tests\/java\/util\/stream\/SpliteratorTest.java 8256368 generic-all\n","filename":"test\/jdk\/ProblemList-Xcomp.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -600,1 +600,0 @@\n-\n@@ -823,1 +822,1 @@\n-jdk\/jfr\/event\/runtime\/TestNetworkUtilizationEvent.java          8228990 generic-all\n+jdk\/jfr\/event\/runtime\/TestNetworkUtilizationEvent.java          8228990 macosx-all,linux-all,windows-all\n@@ -828,1 +827,1 @@\n-jdk\/jfr\/event\/oldobject\/TestLargeRootSet.java                   8276333 macosx-x64,windows-x64\n+jdk\/jfr\/event\/oldobject\/TestLargeRootSet.java                   8276333 generic-x64\n","filename":"test\/jdk\/ProblemList.txt","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -99,0 +99,7 @@\n+        \/\/ Validate the root paths\n+        if (!Paths.get(buildWorkspaceRoot).isAbsolute()) {\n+            throw new Error(\"Workspace root is not an absolute path: \" + buildWorkspaceRoot);\n+        }\n+        if (!Paths.get(buildOutputRoot).isAbsolute()) {\n+            throw new Error(\"Output root is not an absolute path: \" + buildOutputRoot);\n+        }\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @modules java.base\/sun.security.util\n@@ -56,0 +57,2 @@\n+import sun.security.util.ChannelBindingException;\n+\n@@ -190,1 +193,2 @@\n-        if (!shouldPass && ne.getRootCause() == null) {\n+        Throwable rc = ne.getRootCause();\n+        if (!shouldPass && (rc == null || rc instanceof ChannelBindingException)) {\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/LdapCBPropertiesTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277795\n+ * @summary Multi-threaded client timeout tests for ldap pool\n+ * @library \/test\/lib\n+ *          lib\/\n+ * @run testng\/othervm LdapPoolTimeoutTest\n+ *\/\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import javax.naming.Context;\n+import javax.naming.NamingException;\n+import javax.naming.directory.InitialDirContext;\n+import java.util.ArrayList;\n+import java.util.Hashtable;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.TimeUnit;\n+\n+import static jdk.test.lib.Utils.adjustTimeout;\n+import static org.testng.Assert.assertTrue;\n+import static org.testng.Assert.expectThrows;\n+\n+public class LdapPoolTimeoutTest {\n+    \/*\n+     * Practical representation of an infinite timeout.\n+     *\/\n+    private static final long INFINITY_MILLIS = adjustTimeout(20_000);\n+    \/*\n+     * The acceptable variation in timeout measurements.\n+     *\/\n+    private static final long TOLERANCE       = adjustTimeout( 3_500);\n+\n+    private static final long CONNECT_MILLIS  = adjustTimeout( 3_000);\n+    private static final long READ_MILLIS     = adjustTimeout(10_000);\n+\n+    static {\n+        \/\/ a series of checks to make sure this timeouts configuration is\n+        \/\/ consistent and the timeouts do not overlap\n+\n+        assert (TOLERANCE >= 0);\n+        \/\/ context creation\n+        assert (2 * CONNECT_MILLIS + TOLERANCE < READ_MILLIS);\n+        \/\/ context creation immediately followed by search\n+        assert (2 * CONNECT_MILLIS + READ_MILLIS + TOLERANCE < INFINITY_MILLIS);\n+    }\n+\n+    @Test\n+    public void test() throws Exception {\n+        List<Future<?>> futures = new ArrayList<>();\n+        ExecutorService executorService = Executors.newCachedThreadPool();\n+\n+        Hashtable<Object, Object> env = new Hashtable<>();\n+        env.put(Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\");\n+        env.put(\"com.sun.jndi.ldap.read.timeout\", String.valueOf(READ_MILLIS));\n+        env.put(\"com.sun.jndi.ldap.connect.timeout\", String.valueOf(CONNECT_MILLIS));\n+        env.put(\"com.sun.jndi.ldap.connect.pool\", \"true\");\n+        env.put(Context.PROVIDER_URL, \"ldap:\/\/example.com:1234\");\n+\n+        try {\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+            futures.add(executorService.submit(() -> { attemptConnect(env); return null; }));\n+        } finally {\n+            executorService.shutdown();\n+        }\n+        int failedCount = 0;\n+        for (var f : futures) {\n+            try {\n+                f.get();\n+            } catch (ExecutionException e) {\n+                failedCount++;\n+                e.getCause().printStackTrace(System.out);\n+            }\n+        }\n+        if (failedCount > 0)\n+            throw new RuntimeException(failedCount + \" (sub)tests failed\");\n+    }\n+\n+    private static void attemptConnect(Hashtable<Object, Object> env) throws Exception {\n+        try {\n+            LdapTimeoutTest.assertCompletion(CONNECT_MILLIS - 1000,\n+                   2 * CONNECT_MILLIS + TOLERANCE,\n+                   () -> new InitialDirContext(env));\n+        } catch (RuntimeException e) {\n+            String msg = e.getCause() == null ? e.getMessage() : e.getCause().getMessage();\n+            System.err.println(\"MSG RTE: \" + msg);\n+            \/\/ assertCompletion may wrap a CommunicationException in an RTE\n+            assertTrue(msg != null && msg.contains(\"Network is unreachable\"));\n+        } catch (NamingException ex) {\n+            String msg = ex.getCause() == null ? ex.getMessage() : ex.getCause().getMessage();\n+            System.err.println(\"MSG: \" + msg);\n+            assertTrue(msg != null &&\n+                    (msg.contains(\"Network is unreachable\")\n+                        || msg.contains(\"Timed out waiting for lock\")\n+                        || msg.contains(\"Connect timed out\")\n+                        || msg.contains(\"Timeout exceeded while waiting for a connection\")));\n+        } catch (Throwable t) {\n+            throw new RuntimeException(t);\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/com\/sun\/jndi\/ldap\/LdapPoolTimeoutTest.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -77,0 +77,1 @@\n+import org.testng.SkipException;\n@@ -398,1 +399,1 @@\n-        Files.createSymbolicLink(symlink, target);\n+        createSymLink(symlink, target);\n@@ -425,1 +426,1 @@\n-        Files.createSymbolicLink(symlink, target);\n+        createSymLink(symlink, target);\n@@ -441,0 +442,10 @@\n+    private void createSymLink(Path symlink, Path target) {\n+        try {\n+            Files.createSymbolicLink(symlink, target);\n+        } catch (UnsupportedOperationException uoe) {\n+            throw new SkipException(\"sym link creation not supported\", uoe);\n+        } catch (IOException ioe) {\n+            throw new SkipException(\"probably insufficient privileges to create sym links (Windows)\", ioe);\n+        }\n+    }\n+\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/CustomFileSystemTest.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-                var req4 = HttpRequest.newBuilder(uri(server, \"\/foo\/file:\" + TEST_DIR.getParent())).build();\n+                var req4 = HttpRequest.newBuilder(uri(server, \"\/foo\/bar\/baz\/c:.\/\/\")).build();\n@@ -144,1 +144,1 @@\n-                var req5 = HttpRequest.newBuilder(uri(server, \"\/foo\/bar\/\\\\..\\\\..\/\")).build();\n+                var req5 = HttpRequest.newBuilder(uri(server, \"\/foo\/bar\/baz\/c:..\/\/\")).build();\n@@ -148,1 +148,1 @@\n-                var req6 = HttpRequest.newBuilder(uri(server, \"\/foo\")).build();\n+                var req6 = HttpRequest.newBuilder(uri(server, \"\/foo\/file:\" + TEST_DIR.getParent())).build();\n@@ -150,3 +150,11 @@\n-                assertEquals(res6.statusCode(), 301);  \/\/ redirect\n-                assertEquals(res6.headers().firstValue(\"content-length\").get(), \"0\");\n-                assertEquals(res6.headers().firstValue(\"location\").get(), \"\/foo\/\");\n+                assertEquals(res6.statusCode(), 404);  \/\/ not found\n+\n+                var req7 = HttpRequest.newBuilder(uri(server, \"\/foo\/bar\/\\\\..\\\\..\/\")).build();\n+                var res7 = client.send(req7, BodyHandlers.ofString());\n+                assertEquals(res7.statusCode(), 404);  \/\/ not found\n+\n+                var req8 = HttpRequest.newBuilder(uri(server, \"\/foo\")).build();\n+                var res8 = client.send(req8, BodyHandlers.ofString());\n+                assertEquals(res8.statusCode(), 301);  \/\/ redirect\n+                assertEquals(res8.headers().firstValue(\"content-length\").get(), \"0\");\n+                assertEquals(res8.headers().firstValue(\"location\").get(), \"\/foo\/\");\n@@ -253,0 +261,23 @@\n+        {\n+            \/\/ Test that a request path segment that is a Windows root drive\n+            \/\/ does not circumvent access restrictions.\n+            \/\/\n+            \/\/ For example, given the test directory tree:\n+            \/\/\n+            \/\/      |-- TEST_DIR\n+            \/\/          |-- foo\n+            \/\/              |-- bar  ----->>> if hidden, itself and any of its subdirectories are not accessible\n+            \/\/                  |-- baz\n+            \/\/                      |-- file.txt\n+            \/\/      ...\n+            var handler = SimpleFileServer.createFileHandler(TEST_DIR);\n+            var server = HttpServer.create(LOOPBACK_ADDR, 10, \"\/\", handler, OUTPUT_FILTER);\n+            server.start();\n+            try {\n+                var req1 = HttpRequest.newBuilder(uri(server, \"\/foo\/bar\/c:\/baz\/\")).build();\n+                var res1 = client.send(req1, BodyHandlers.ofString());\n+                assertEquals(res1.statusCode(), 404);  \/\/ not found\n+            } finally {\n+                server.stop(0);\n+            }\n+        }\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/MapToPathTest.java","additions":37,"deletions":6,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,1 @@\n+import org.testng.SkipException;\n@@ -390,1 +391,1 @@\n-        Files.createSymbolicLink(symlink, target);\n+        createSymLink(symlink, target);\n@@ -417,1 +418,1 @@\n-        Files.createSymbolicLink(symlink, target);\n+        createSymLink(symlink, target);\n@@ -433,0 +434,10 @@\n+    private void createSymLink(Path symlink, Path target) {\n+        try {\n+            Files.createSymbolicLink(symlink, target);\n+        } catch (UnsupportedOperationException uoe) {\n+            throw new SkipException(\"sym link creation not supported\", uoe);\n+        } catch (IOException ioe) {\n+            throw new SkipException(\"probably insufficient privileges to create sym links (Windows)\", ioe);\n+        }\n+    }\n+\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/SimpleFileServerTest.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-import javax.net.ssl.SSLHandshakeException;\n+import javax.net.ssl.SSLException;\n@@ -143,2 +143,2 @@\n-            throw new RuntimeException(\"Expected SSLHandshakeException not thrown\");\n-        } catch (SSLHandshakeException expected) {  \/\/ server closes connection when max request time is reached\n+            throw new RuntimeException(\"Expected SSLException not thrown\");\n+        } catch (SSLException expected) {  \/\/ server closes connection when max request time is reached\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/simpleserver\/jwebserver\/MaxRequestTimeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -28,1 +28,2 @@\n- * @run main\/manual=yesno TextAAHintsTest\n+ * @requires (os.family != \"mac\")\n+ * @run main\/manual TextAAHintsTest\n@@ -30,3 +31,21 @@\n-import java.awt.*;\n-import java.awt.geom.*;\n-import java.awt.image.*;\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.ImageCapabilities;\n+import java.awt.Panel;\n+import java.awt.RenderingHints;\n+import java.awt.TextArea;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.VolatileImage;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -36,3 +55,7 @@\n-    String black = \"This text should be solid black\";\n-    String gray  = \"This text should be gray scale anti-aliased\";\n-    String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+    private static final String black = \"This text should be solid black\";\n+    private static final String gray  = \"This text should be gray scale anti-aliased\";\n+    private static final String lcd   = \"This text should be LCD sub-pixel text (coloured).\";\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+    private static volatile String failureReason;\n+    private static volatile boolean testPassed = false;\n+    private static Frame frame;\n@@ -66,4 +89,0 @@\n-        g2d.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING,\n-                             RenderingHints.VALUE_TEXT_ANTIALIAS_GASP);\n-        g2d.drawString(black, 10, 35);\n-\n@@ -72,1 +91,1 @@\n-        g2d.drawString(gray, 10, 50);\n+        g2d.drawString(gray, 10, 35);\n@@ -76,1 +95,1 @@\n-        g2d.drawString(gray, 10, 65);\n+        g2d.drawString(gray, 10, 50);\n@@ -81,1 +100,1 @@\n-        g2d.drawString(gray, 10, 80);\n+        g2d.drawString(gray, 10, 65);\n@@ -87,1 +106,1 @@\n-        g2d.drawString(lcd, 10, 95);\n+        g2d.drawString(lcd, 10, 80);\n@@ -142,1 +161,70 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void createTestUI() {\n+        frame = new Frame(\"Composite and Text Test\");\n+        TextAAHintsTest textAAHintsTestObject = new TextAAHintsTest();\n+        frame.add(textAAHintsTestObject, BorderLayout.NORTH);\n+\n+        String instructions = \"\"\"\n+                Note: Texts are rendered with different TEXT_ANTIALIASING &\n+                   VALUE_TEXT_ANTIALIAS. Text should be B&W, grayscale, and LCD.\n+                   Note: The results may be visually the same.\n+                1. Verify that first set of text are rendered correctly.\n+                2. Second set of text are created using BufferedImage of the first text.\n+                3. Third set of text are created using VolatileImage of the first text.\n+                \"\"\";\n+        TextArea instructionTextArea = new TextArea(instructions, 8, 50);\n+        instructionTextArea.setEditable(false);\n+        frame.add(instructionTextArea, BorderLayout.CENTER);\n+\n+        Panel controlPanel = new Panel();\n+        Button passButton = new Button(\"Pass\");\n+        passButton.addActionListener(e -> {\n+            testPassed = true;\n+            countDownLatch.countDown();\n+            frame.dispose();\n+        });\n+        Button failButton = new Button(\"Fail\");\n+        failButton.addActionListener(e -> {\n+            getFailureReason();\n+            testPassed = false;\n+            countDownLatch.countDown();\n+            frame.dispose();\n+        });\n+        controlPanel.add(passButton);\n+        controlPanel.add(failButton);\n+        frame.add(controlPanel, BorderLayout.SOUTH);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void getFailureReason() {\n+        \/\/ Show dialog to read why the testcase was failed and append the\n+        \/\/ testcase failure reason to the output\n+        final Dialog dialog = new Dialog(frame, \"TestCase\" +\n+                \" failure reason\", true);\n+        TextArea textArea = new TextArea(\"\", 5, 60, TextArea.SCROLLBARS_BOTH);\n+        dialog.add(textArea, BorderLayout.CENTER);\n+\n+        Button okButton = new Button(\"OK\");\n+        okButton.addActionListener(e1 -> {\n+            failureReason = textArea.getText();\n+            dialog.dispose();\n+        });\n+        Panel ctlPanel = new Panel();\n+        ctlPanel.add(okButton);\n+        dialog.add(ctlPanel, BorderLayout.SOUTH);\n+        dialog.setLocationRelativeTo(null);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        EventQueue.invokeAndWait(TextAAHintsTest::createTestUI);\n+        if (!countDownLatch.await(2, TimeUnit.MINUTES)) {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+            throw new RuntimeException(\"Timeout : No action was taken on the test.\");\n+        }\n@@ -144,4 +232,3 @@\n-        Frame f = new Frame(\"Composite and Text Test\");\n-        f.add(new TextAAHintsTest(), BorderLayout.CENTER);\n-        f.pack();\n-        f.setVisible(true);\n+        if (!testPassed) {\n+            throw new RuntimeException(\"Test failed : Reason : \" + failureReason);\n+        }\n@@ -150,0 +237,1 @@\n+\n","filename":"test\/jdk\/java\/awt\/Graphics\/TextAAHintsTest.java","additions":110,"deletions":22,"binary":false,"changes":132,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+ * @run main\/othervm CheckCommonColors\n+ * @run main\/othervm -Xcheck:jni CheckCommonColors\n","filename":"test\/jdk\/java\/awt\/Robot\/CheckCommonColors\/CheckCommonColors.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.awt.Point;\n@@ -34,0 +35,3 @@\n+import javax.imageio.ImageIO;\n+import java.io.File;\n+import java.io.IOException;\n@@ -38,2 +42,2 @@\n- * @bug 8073320\n- * @summary  Windows HiDPI support\n+ * @bug 8073320 8280861\n+ * @summary  Linux and Windows HiDPI support\n@@ -44,0 +48,2 @@\n+ * @run main\/othervm -Dsun.java2d.uiScale=1 HiDPIRobotScreenCaptureTest\n+ * @run main\/othervm -Dsun.java2d.uiScale=2 HiDPIRobotScreenCaptureTest\n@@ -63,1 +69,8 @@\n-        frame.setBounds(40, 30, 400, 300);\n+        \/\/ Position the frame on prime number coordinates to avoid\n+        \/\/ them being multiple of the desktop scale; this tests Linux\n+        \/\/ color picker better.\n+        \/\/ Also, the position should be far enough from the top left\n+        \/\/ corner of the screen to reduce the chance of being repositioned\n+        \/\/ by the system because that area's occupied by the global\n+        \/\/ menu bar and such.\n+        frame.setBounds(83, 97, 400, 300);\n@@ -89,1 +102,1 @@\n-        Thread.sleep(200);\n+        robot.delay(500);\n@@ -94,0 +107,1 @@\n+        System.out.println(\"Creating screen capture of \" + rect);\n@@ -104,7 +118,5 @@\n-        if (image.getRGB(w \/ 4, h \/ 4) != COLORS[0].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n-\n-        if (image.getRGB(3 * w \/ 4, h \/ 4) != COLORS[1].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n+        checkRectColor(image, new Rectangle(0, 0, w \/ 2, h \/ 2), COLORS[0]);\n+        checkRectColor(image, new Rectangle(w \/ 2, 0, w \/ 2, h \/ 2), COLORS[1]);\n+        checkRectColor(image, new Rectangle(0, h \/ 2, w \/ 2, h \/ 2), COLORS[2]);\n+        checkRectColor(image, new Rectangle(w \/ 2, h \/ 2, w \/ 2, h \/ 2), COLORS[3]);\n+    }\n@@ -112,3 +124,10 @@\n-        if (image.getRGB(w \/ 4, 3 * h \/ 4) != COLORS[2].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n+    private static final int OFFSET = 5;\n+    static void checkRectColor(BufferedImage image, Rectangle rect, Color expectedColor) {\n+        System.out.println(\"Checking rectangle \" + rect + \" to have color \" + expectedColor);\n+        final Point[] pointsToCheck = new Point[] {\n+                new Point(rect.x + OFFSET, rect.y + OFFSET),                           \/\/ top left corner\n+                new Point(rect.x + rect.width - OFFSET, rect.y + OFFSET),              \/\/ top right corner\n+                new Point(rect.x + rect.width \/ 2, rect.y + rect.height \/ 2),          \/\/ center\n+                new Point(rect.x + OFFSET, rect.y + rect.height - OFFSET),             \/\/ bottom left corner\n+                new Point(rect.x + rect.width - OFFSET, rect.y + rect.height - OFFSET) \/\/ bottom right corner\n+        };\n@@ -116,2 +135,15 @@\n-        if (image.getRGB(3 * w \/ 4, 3 * h \/ 4) != COLORS[3].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n+        for (final var point : pointsToCheck) {\n+            System.out.print(\"Checking color at \" + point + \" to be equal to \" + expectedColor);\n+            final int actualColor = image.getRGB(point.x, point.y);\n+            if (actualColor != expectedColor.getRGB()) {\n+                System.out.println(\"... Mismatch: found \" + new Color(actualColor) + \" instead. Check image.png.\");\n+                try {\n+                    ImageIO.write(image, \"png\", new File(\"image.png\"));\n+                } catch(IOException e) {\n+                    System.out.println(\"failed to save image.png.\");\n+                    e.printStackTrace();\n+                }\n+                throw new RuntimeException(\"Wrong image color!\");\n+            } else {\n+                System.out.println(\"... OK\");\n+            }\n@@ -120,1 +152,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/awt\/Robot\/HiDPIScreenCapture\/HiDPIRobotScreenCaptureTest.java","additions":50,"deletions":18,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8280861\n+ * @summary  Verifies Robot screen capture capabilities with different\n+ *           Gtk backends and presence of UI scaling\n+ * @requires os.family == \"linux\"\n+ * @run main\/othervm -Djdk.gtk.version=2 -Dsun.java2d.uiScale=1 ScreenCaptureGtkTest\n+ * @run main\/othervm -Djdk.gtk.version=2 -Dsun.java2d.uiScale=2 ScreenCaptureGtkTest\n+ * @run main\/othervm -Djdk.gtk.version=2 -Dsun.java2d.uiScale=3 ScreenCaptureGtkTest\n+ * @run main\/othervm -Djdk.gtk.version=3 -Dsun.java2d.uiScale=1 ScreenCaptureGtkTest\n+ * @run main\/othervm -Djdk.gtk.version=3 -Dsun.java2d.uiScale=2 ScreenCaptureGtkTest\n+ * @run main\/othervm -Djdk.gtk.version=3 -Dsun.java2d.uiScale=3 ScreenCaptureGtkTest\n+ *\/\n+\n+public class ScreenCaptureGtkTest {\n+    private static final Color[] COLORS = {\n+            Color.GREEN, Color.BLUE, Color.ORANGE, Color.RED};\n+\n+    public static void main(String[] args) throws Exception {\n+        Frame frame = new Frame();\n+        \/\/ Position the frame on prime number coordinates to avoid\n+        \/\/ them being multiple of the desktop scale; this tests Linux\n+        \/\/ color picker better.\n+        \/\/ Also, the position should be far enough from the top left\n+        \/\/ corner of the screen to reduce the chance of being repositioned\n+        \/\/ by the system because that area's occupied by the global\n+        \/\/ menu bar and such.\n+        frame.setBounds(83, 97, 400, 300);\n+        frame.setUndecorated(true);\n+\n+        Panel panel = new Panel(new BorderLayout());\n+        Canvas canvas = new Canvas() {\n+            @Override\n+            public void paint(Graphics g) {\n+                super.paint(g);\n+                int w = getWidth();\n+                int h = getHeight();\n+                g.setColor(COLORS[0]);\n+                g.fillRect(0, 0, w, h);\n+                \/\/ Paint several distinct pixels next to one another\n+                \/\/ in order to test color picker's precision.\n+                for (int i = 1; i < 4; i++) {\n+                    g.setColor(COLORS[i]);\n+                    g.fillRect(i, 0, 1, 1);\n+                }\n+            }\n+        };\n+\n+        panel.add(canvas);\n+        frame.add(panel);\n+        frame.setVisible(true);\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        robot.delay(500);\n+\n+        final Point screenLocation = frame.getLocationOnScreen();\n+        checkPixelColors(robot, screenLocation.x, screenLocation.y);\n+\n+        robot.delay(100);\n+        frame.dispose();\n+    }\n+\n+    static void checkPixelColors(Robot robot, int x, int y) {\n+        for (int i = 0; i < 4; i++) {\n+            final Color actualColor = robot.getPixelColor(x + i, y);\n+            System.out.print(\"Checking color at \" + (x + i) + \", \" + y + \" to be equal to \" + COLORS[i]);\n+            if (!actualColor.equals(COLORS[i])) {\n+                System.out.println(\"... Mismatch: found \" + actualColor + \" instead\");\n+                throw new RuntimeException(\"Wrong screen pixel color\");\n+\n+            } else {\n+                System.out.println(\"... OK\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Robot\/HiDPIScreenCapture\/ScreenCaptureGtkTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,183 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8281338\n+ * @summary Test for an element that has more than one Accessibility Action\n+ * @author Artem.Semenov@jetbrains.com\n+ * @run main\/manual AccessibleActionsTest\n+ * @requires (os.family == \"mac\")\n+ *\/\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.swing.*;\n+import javax.swing.tree.TreeModel;\n+import javax.swing.tree.TreePath;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.util.Hashtable;\n+import java.util.concurrent.CountDownLatch;\n+\n+public class AccessibleActionsTest extends AccessibleComponentTest {\n+\n+  @Override\n+  public CountDownLatch createCountDownLatch() {\n+    return new CountDownLatch(1);\n+  }\n+\n+  void createTest() {\n+    INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+            + \"Check a11y actions.\\n\\n\"\n+            + \"Turn screen reader on, and Tab to the label.\\n\\n\"\n+            + \"Perform the VO action \\\"Press\\\" (VO+space)\\n\"\n+            + \"Perform the VO action \\\"Show menu\\\" (VO+m)\\n\\n\"\n+            + \"If after the first action the text of the label has changed, and after the second action the menu appears  tab further and press PASS, otherwise press FAIL.\";\n+\n+    exceptionString = \"AccessibleAction test failed!\";\n+    super.createUI(new AccessibleActionsTestFrame(), \"AccessibleActionsTest\");\n+  }\n+\n+  void createTree() {\n+    INSTRUCTIONS = \"INSTRUCTIONS:\\n\"\n+            + \"Check a11y actions.\\n\\n\"\n+            + \"Turn screen reader on, and Tab to the label.\\n\\n\"\n+            + \"Perform the VO action \\\"Press\\\" (VO+space) on tree nodes\\n\\n\"\n+            + \"If after press the tree node is expanded  tab further and press PASS, otherwise press FAIL.\";\n+\n+    String root = \"Root\";\n+    String[] nodes = new String[] {\"One node\", \"Two node\"};\n+    String[][] leafs = new String[][]{{\"leaf 1.1\", \"leaf 1.2\", \"leaf 1.3\", \"leaf 1.4\"},\n+            {\"leaf 2.1\", \"leaf 2.2\", \"leaf 2.3\", \"leaf 2.4\"}};\n+\n+    Hashtable<String, String[]> data = new Hashtable<String, String[]>();\n+    for (int i = 0; i < nodes.length; i++) {\n+      data.put(nodes[i], leafs[i]);\n+    }\n+\n+    JTree tree = new JTree(data);\n+    tree.setRootVisible(true);\n+\n+    JPanel panel = new JPanel();\n+    panel.setLayout(new FlowLayout());\n+    JScrollPane scrollPane = new JScrollPane(tree);\n+    panel.add(scrollPane);\n+    panel.setFocusable(false);\n+\n+    exceptionString = \"AccessibleAction test failed!\";\n+    super.createUI(panel, \"AccessibleActionsTest\");\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    AccessibleActionsTest test = new AccessibleActionsTest();\n+\n+    countDownLatch = test.createCountDownLatch();\n+    SwingUtilities.invokeLater(test::createTest);\n+    countDownLatch.await();\n+\n+    if (!testResult) {\n+      throw new RuntimeException(a11yTest.exceptionString);\n+    }\n+\n+    countDownLatch = test.createCountDownLatch();\n+    SwingUtilities.invokeLater(test::createTree);\n+    countDownLatch.await();\n+\n+    if (!testResult) {\n+      throw new RuntimeException(a11yTest.exceptionString);\n+    }\n+  }\n+\n+  private class AccessibleActionsTestFrame extends JPanel {\n+\n+    public AccessibleActionsTestFrame() {\n+      MyLabel label = new MyLabel(\"I'm waiting for the push\");\n+      label.setComponentPopupMenu(createPopup());\n+      label.setFocusable(true);\n+      add(label);\n+      setLayout(new FlowLayout());\n+    }\n+\n+    private static class MyLabel extends JLabel {\n+      public MyLabel(String text) {\n+        super(text);\n+      }\n+\n+      @Override\n+      public AccessibleContext getAccessibleContext() {\n+        if (accessibleContext == null) {\n+          accessibleContext = new MyAccessibleJLabel();\n+        }\n+        return accessibleContext;\n+      }\n+\n+      private class MyAccessibleJLabel extends JLabel.AccessibleJLabel {\n+        @Override\n+        public AccessibleAction getAccessibleAction() {\n+          return new AccessibleAction() {\n+            @Override\n+            public int getAccessibleActionCount() {\n+              return 2;\n+            }\n+\n+            @Override\n+            public String getAccessibleActionDescription(int i) {\n+              if (i == 0) {\n+                return AccessibleAction.CLICK;\n+              }\n+              return AccessibleAction.TOGGLE_POPUP;\n+            }\n+\n+            @Override\n+            public boolean doAccessibleAction(int i) {\n+              if (i == 0) {\n+                changeText(MyLabel.this, \"label is pressed\");\n+                return true;\n+              }\n+              JPopupMenu popup = createPopup();\n+              popup.show(MyLabel.this, 0, 0);\n+              return true;\n+            }\n+          };\n+        }\n+      }\n+    }\n+\n+    private static JPopupMenu createPopup() {\n+      JPopupMenu popup = new JPopupMenu(\"MENU\");\n+      popup.add(\"One\");\n+      popup.add(\"Two\");\n+      popup.add(\"Three\");\n+      return popup;\n+    }\n+\n+    private static void changeText(JLabel label, String text) {\n+      label.setText(text);\n+    }\n+\n+  }\n+}\n","filename":"test\/jdk\/java\/awt\/a11y\/AccessibleActionsTest.java","additions":183,"deletions":0,"binary":false,"changes":183,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n-  @bug 4718897\n+  @bug 4718897 8278908\n@@ -38,1 +38,0 @@\n-import java.text.Normalizer;\n@@ -80,4 +79,1 @@\n-        \/\/ On OS X the unicode string is normalized but the clipboard,\n-        \/\/ so we need to use normalized strings as well to be able to\n-        \/\/ check the result\n-        testString = Normalizer.normalize(buf.toString(), Normalizer.Form.NFC);\n+        testString = buf.toString();\n","filename":"test\/jdk\/java\/awt\/datatransfer\/UnicodeTransferTest\/UnicodeTransferTest.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    -cp \"${CP}\" -Xcheck:jni JNICheck | grep -v SIG | grep -v Signal | grep -v CallStatic > \"${CP}\"\/log.txt\n+    -cp \"${CP}\" -Xcheck:jni JNICheck | grep -v SIG | grep -v Signal | grep -v Handler | grep -v jsig | grep -v CallStatic > \"${CP}\"\/log.txt\n","filename":"test\/jdk\/java\/awt\/font\/JNICheck\/JNICheck.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,225 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Graphics2D;\n+import java.awt.Image;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BandedSampleModel;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.Raster;\n+import java.awt.image.ColorModel;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.DataBufferByte;\n+import java.awt.image.RenderedImage;\n+import java.awt.image.SampleModel;\n+import java.awt.image.WritableRaster;\n+import java.util.Objects;\n+import java.util.Vector;\n+\n+\n+\/**\n+ * @test\n+ * @bug 8275345\n+ * @summary RasterFormatException when drawing a tiled image made of non-writable rasters.\n+ *\n+ * Test drawing a tiled image made of non-writable {@link Raster} tiles.\n+ * Drawing works when tiles are instances of {@link WritableRaster}.\n+ * But if tiles are instances of {@link Raster} only, then the following\n+ * exception is thrown:\n+ *\n+ * Exception in thread \"main\" java.awt.image.RasterFormatException: (parentX + width) is outside raster\n+ *     at java.desktop\/java.awt.image.WritableRaster.createWritableChild(WritableRaster.java:228)\n+ *     at java.desktop\/sun.java2d.SunGraphics2D.drawTranslatedRenderedImage(SunGraphics2D.java:2852)\n+ *     at java.desktop\/sun.java2d.SunGraphics2D.drawRenderedImage(SunGraphics2D.java:2711)\n+ *\n+ * The bug is demonstrated by drawing the same image twice:\n+ * once with {@link WritableRaster} tiles (which succeed),\n+ * then the same operation but with {@link Raster} tiles.\n+ *\n+ * The bug is caused by the following code in {@code SunGraphics2D}:\n+ *\n+ * \/\/ Create a WritableRaster containing the tile\n+ * WritableRaster wRaster = null;\n+ * if (raster instanceof WritableRaster) {\n+ *     wRaster = (WritableRaster)raster;\n+ * } else {\n+ *     \/\/ Create a WritableRaster in the same coordinate system\n+ *     \/\/ as the original raster.\n+ *     wRaster =\n+ *         Raster.createWritableRaster(raster.getSampleModel(),\n+ *                                     raster.getDataBuffer(),\n+ *                                     null);\n+ * }\n+ * \/\/ Translate wRaster to start at (0, 0) and to contain\n+ * \/\/ only the relevant portion of the tile\n+ * wRaster = wRaster.createWritableChild(tileRect.x, tileRect.y,\n+ *                                       tileRect.width,\n+ *                                       tileRect.height,\n+ *                                       0, 0,\n+ *                                       null);\n+ *\n+ * If {@code raster} is not an instance of {@link WritableRaster},\n+ * then a new {@link WritableRaster} is created wrapping the same\n+ * buffer <strong>but with a location of (0,0)<\/strong>, because\n+ * the {@code location} argument of {@code createWritableRaster}\n+ * is null. Consequently the call to {@code createWritableChild}\n+ * shall not be done in that case, because the raster is already\n+ * translated. The current code applies translation twice.\n+ *\n+ * This bug is largely unnoticed because most {@code Raster.create}\n+ * methods actually create {@link WritableRaster} instances, even\n+ * when the user did not asked for writable raster. To make this\n+ * bug apparent, we need to invoke {@code Raster.createRaster(…)}\n+ * with a sample model for which no optimization is provided.\n+ *\/\n+public class TiledImage implements RenderedImage {\n+    \/**\n+     * Run the test using writable tiles first, then read-only tiles.\n+     *\/\n+    public static void main(String[] args) {\n+        draw(true);         \/\/ Pass.\n+        draw(false);        \/\/ Fail if 8275345 is not fixed.\n+    }\n+\n+    private static final int NUM_X_TILES = 2, NUM_Y_TILES = 3;\n+\n+    private static final int TILE_WIDTH = 16, TILE_HEIGHT = 12;\n+\n+    \/**\n+     * Tests rendering a tiled image.\n+     *\n+     * @param  writable  whether the image shall use writable raster.\n+     *\/\n+    private static void draw(final boolean writable) {\n+        final BufferedImage target = new BufferedImage(\n+                TILE_WIDTH  * NUM_X_TILES,\n+                TILE_HEIGHT * NUM_Y_TILES,\n+                BufferedImage.TYPE_BYTE_GRAY);\n+\n+        final RenderedImage source = new TiledImage(writable,\n+                target.getColorModel());\n+\n+        Graphics2D g = target.createGraphics();\n+        g.drawRenderedImage(source, new AffineTransform());\n+        g.dispose();\n+    }\n+\n+    private final ColorModel colorModel;\n+\n+    private final Raster[] tiles;\n+\n+    \/**\n+     * Creates a tiled image. The image is empty,\n+     * but pixel values are not the purpose of this test.\n+     *\n+     * @param  writable  whether the image shall use writable raster.\n+     *\/\n+    private TiledImage(boolean writable, ColorModel cm) {\n+        \/*\n+         * We need a sample model class for which Raster.createRaster\n+         * do not provide a special case. That method has optimizations\n+         * for most SampleModel sub-types, except BandedSampleModel.\n+         *\/\n+        SampleModel sm = new BandedSampleModel(DataBuffer.TYPE_BYTE, TILE_WIDTH, TILE_HEIGHT, 1);\n+        tiles = new Raster[NUM_X_TILES * NUM_Y_TILES];\n+        final Point location = new Point();\n+        for (int tileY = 0; tileY < NUM_Y_TILES; tileY++) {\n+            for (int tileX = 0; tileX < NUM_X_TILES; tileX++) {\n+                location.x = tileX * TILE_WIDTH;\n+                location.y = tileY * TILE_HEIGHT;\n+                DataBufferByte db = new DataBufferByte(TILE_WIDTH * TILE_HEIGHT);\n+                Raster r;\n+                if (writable) {\n+                    r = Raster.createWritableRaster(sm, db, location);\n+                } else {\n+                    \/\/ Case causing RasterFormatException later.\n+                    r = Raster.createRaster(sm, db, location);\n+                }\n+                tiles[tileX + tileY * NUM_X_TILES] = r;\n+            }\n+        }\n+        colorModel = cm;\n+    }\n+\n+    @Override\n+    public ColorModel getColorModel() {\n+        return colorModel;\n+    }\n+\n+    @Override\n+    public SampleModel getSampleModel() {\n+        return tiles[0].getSampleModel();\n+    }\n+\n+    @Override\n+    public Vector<RenderedImage> getSources() {\n+        return new Vector<>();\n+    }\n+\n+    @Override\n+    public Object getProperty(String key) {\n+        return Image.UndefinedProperty;\n+    }\n+\n+    @Override\n+    public String[] getPropertyNames() {\n+        return null;\n+    }\n+\n+    @Override public int getMinX()            {return 0;}\n+    @Override public int getMinY()            {return 0;}\n+    @Override public int getMinTileX()        {return 0;}\n+    @Override public int getMinTileY()        {return 0;}\n+    @Override public int getTileGridXOffset() {return 0;}\n+    @Override public int getTileGridYOffset() {return 0;}\n+    @Override public int getNumXTiles()       {return NUM_X_TILES;}\n+    @Override public int getNumYTiles()       {return NUM_Y_TILES;}\n+    @Override public int getTileWidth()       {return TILE_WIDTH;}\n+    @Override public int getTileHeight()      {return TILE_HEIGHT;}\n+    @Override public int getWidth()           {return TILE_WIDTH  * NUM_X_TILES;}\n+    @Override public int getHeight()          {return TILE_HEIGHT * NUM_Y_TILES;}\n+\n+    @Override\n+    public Raster getTile(final int tileX, final int tileY) {\n+        Objects.checkIndex(tileX, NUM_X_TILES);\n+        Objects.checkIndex(tileY, NUM_Y_TILES);\n+        return tiles[tileX + tileY * NUM_X_TILES];\n+    }\n+\n+    @Override\n+    public Raster getData() {\n+        throw new UnsupportedOperationException(\"Not needed for this test.\");\n+    }\n+\n+    @Override\n+    public Raster getData(Rectangle rect) {\n+        throw new UnsupportedOperationException(\"Not needed for this test.\");\n+    }\n+\n+    @Override\n+    public WritableRaster copyData(WritableRaster raster) {\n+        throw new UnsupportedOperationException(\"Not needed for this test.\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/image\/DrawImage\/TiledImage.java","additions":225,"deletions":0,"binary":false,"changes":225,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @bug 8211147\n+ * @bug 8211147 8280132\n@@ -44,4 +44,6 @@\n-        \/\/ Public API, fails rarely\n-        testPublicAPI();\n-        \/\/ Test using internal API, fails always\n-        testPrivateAPI();\n+        for (Class<?> beanClass : List.of(D.class, X.class, A_258.class)) {\n+            \/\/ Public API, fails rarely\n+            testPublicAPI(beanClass);\n+            \/\/ Test using internal API, fails always\n+            testPrivateAPI(beanClass);\n+        }\n@@ -50,2 +52,2 @@\n-    private static void testPublicAPI() throws Exception {\n-        Introspector.getBeanInfo(X.class);\n+    private static void testPublicAPI(Class<?> beanClass) throws Exception {\n+        Introspector.getBeanInfo(beanClass);\n@@ -54,1 +56,1 @@\n-    private static void testPrivateAPI() throws Exception {\n+    private static void testPrivateAPI(Class<?> beanClass) throws Exception {\n@@ -60,1 +62,1 @@\n-        List<Method> methods = List.of(X.class.getDeclaredMethods());\n+        List<Method> methods = List.of(beanClass.getDeclaredMethods());\n@@ -64,2 +66,2 @@\n-                    System.err.println(\"Method1 = \"+ m1);\n-                    System.err.println(\"Method2 = \"+ m2);\n+                    System.err.println(\"Method1 = \" + m1);\n+                    System.err.println(\"Method2 = \" + m2);\n@@ -68,0 +70,10 @@\n+                methods.forEach(m3 -> {\n+                    if (o.compare(m1, m2) < 0 && o.compare(m2, m3) < 0) {\n+                        if (o.compare(m1, m3) >= 0) {\n+                            System.err.println(\"Method1 = \" + m1);\n+                            System.err.println(\"Method2 = \" + m2);\n+                            System.err.println(\"Method3 = \" + m3);\n+                            throw new RuntimeException(\"Broken contract!\");\n+                        }\n+                    }\n+                });\n@@ -72,0 +84,1501 @@\n+    interface C1 {\n+        C1 foo0();\n+    }\n+    interface C2 {\n+        C2 foo0();\n+    }\n+    interface C3 extends C1 {\n+        C3 foo0();\n+    }\n+    interface D extends C3, C2, C1 {\n+        D foo0();\n+    }\n+    public interface A_239 {\n+    }\n+    public interface A_240 {\n+    }\n+    public interface A_000 {\n+    }\n+    public interface A_238<T> {\n+    }\n+    public interface A_035 extends A_195, A_106, A_240 {\n+        A_035 a_040();\n+        A_035 a_000();\n+        A_035 a_018();\n+    }\n+    public static class A_258 implements A_053, A_196, A_200, A_070, A_106,\n+            A_057, A_094, A_098, A_105, A_107, A_097, A_093, A_214, A_215,\n+            A_210, A_129, A_067, A_180, A_108, A_184, A_110, A_111, A_082,\n+            A_221, A_172, A_171, A_168, A_139, A_143, A_140, A_075, A_081,\n+            A_080, A_163, A_165, A_164, A_159, A_161, A_155, A_158, A_157,\n+            A_156, A_195, A_197, A_114, A_213, A_236, A_220, A_201, A_035,\n+            A_136, A_135, A_226, A_227, A_005, A_054, A_203, A_202, A_071,\n+            A_115, A_113, A_112, A_058, A_095, A_096, A_099, A_100, A_237,\n+            A_091, A_092, A_217, A_218, A_216, A_211, A_130, A_063, A_062,\n+            A_064, A_065, A_066, A_061, A_060, A_181, A_208, A_207, A_209,\n+            A_185, A_186, A_083, A_173, A_176, A_222, A_223, A_174, A_169,\n+            A_153, A_154, A_194, A_190, A_104, A_132, A_141, A_142, A_166,\n+            A_167, A_160, A_162, A_076, A_077, A_078, A_079, A_074, A_085,\n+            A_192, A_188, A_134, A_138, A_137, A_228 {\n+        @Override\n+        public A_258 a_052() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_071() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_029() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_046() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_045() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_047() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_048() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_049() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_044() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_043() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_026() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_027() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_074() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_079() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_012() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_100() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_085() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_084() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_011() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_059() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_058() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_080() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_030() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_031() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_081() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_077() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_036() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_056() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_078() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_076() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_057() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_005() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_089() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_088() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_090() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_072() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_002() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_040() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_060() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_061() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_039() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_032() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_033() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_000() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_037() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_014() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_015() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_016() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_017() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_091() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_065() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_066() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_018() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_093() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_092() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_095() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_096() {\n+            return null;\n+        }\n+        @Override\n+        public A_258 a_069() {\n+            return null;\n+        }\n+    }\n+    public interface A_250 extends A_239 {\n+        A_250 a_094();\n+    }\n+    public interface A_253 extends A_239 {\n+        A_253 a_000();\n+    }\n+    public interface A_256 extends A_239 {\n+        A_256 a_009();\n+    }\n+    public interface A_248 extends A_239 {\n+        A_248 a_022();\n+    }\n+    public interface A_255 extends A_239 {\n+        A_255 a_007();\n+    }\n+    public interface A_241 extends A_248, A_250, A_251, A_249, A_239 {\n+    }\n+    public interface A_254 extends A_239 {\n+        A_254 a_008();\n+    }\n+    public interface A_251 extends A_239 {\n+        A_251 a_097();\n+    }\n+    public interface A_252 extends A_241, A_255, A_253, A_257, A_254, A_256,\n+            A_239 {\n+        A_252 a_022();\n+        A_252 a_094();\n+        A_252 a_097();\n+        A_252 a_087();\n+    }\n+    public interface A_229 extends A_239 {\n+        A_229 a_000();\n+    }\n+    public interface A_232 extends A_239 {\n+    }\n+    public interface A_249 extends A_239 {\n+        A_249 a_087();\n+    }\n+    public interface A_230 extends A_239 {\n+    }\n+    public interface A_234 extends A_239 {\n+        A_234 a_026();\n+    }\n+    public interface A_037 extends A_239 {\n+        A_037 a_013();\n+    }\n+    public interface A_233 extends A_239 {\n+        A_233 a_018();\n+    }\n+    public interface A_231 extends A_239 {\n+        A_231 a_007();\n+    }\n+    public interface A_049 extends A_239 {\n+        A_049 a_068();\n+    }\n+    public interface A_257 extends A_239 {\n+        A_257 a_018();\n+    }\n+    public interface A_235 extends A_239 {\n+    }\n+    public interface A_040 extends A_239 {\n+        A_040 a_025();\n+    }\n+    public interface A_133 extends A_000, A_005, A_134, A_240 {\n+        A_133 a_040();\n+        A_133 a_057();\n+    }\n+    public interface A_001 extends A_239 {\n+        A_001 a_020();\n+    }\n+    public interface A_031 extends A_239 {\n+    }\n+    public interface A_089 extends A_239 {\n+        A_089 a_098();\n+    }\n+    public interface A_166 extends A_239 {\n+        A_166 a_065();\n+    }\n+    public interface A_054 extends A_239 {\n+        A_054 a_000();\n+    }\n+    public interface A_190 extends A_239 {\n+        A_190 a_077();\n+    }\n+    public interface A_169 extends A_239 {\n+        A_169 a_037();\n+    }\n+    public interface A_217 extends A_239 {\n+        A_217 a_093();\n+    }\n+    public interface A_078 extends A_239 {\n+        A_078 a_016();\n+    }\n+    public interface A_192 extends A_239 {\n+    }\n+    public interface A_222 extends A_239 {\n+        A_222 a_095();\n+    }\n+    public interface A_112 extends A_239 {\n+        A_112 a_033();\n+    }\n+    public interface A_066 extends A_239 {\n+        A_066 a_049();\n+    }\n+    public interface A_074 extends A_239 {\n+        A_074 a_012();\n+    }\n+    public interface A_003 extends A_239 {\n+        A_003 a_039();\n+    }\n+    public interface A_083 extends A_239 {\n+    }\n+    public interface A_050 extends A_239 {\n+        A_050 a_070();\n+    }\n+    public interface A_087 extends A_239 {\n+    }\n+    public interface A_058 extends A_239 {\n+    }\n+    public interface A_128 extends A_239 {\n+    }\n+    public interface A_092 extends A_239 {\n+    }\n+    public interface A_004 extends A_240 {\n+        A_004 a_040();\n+    }\n+    public interface A_115 extends A_239 {\n+        A_115 a_039();\n+    }\n+    public interface A_176 extends A_239 {\n+        A_176 a_071();\n+    }\n+    public interface A_162 extends A_239 {\n+    }\n+    public interface A_132 extends A_239 {\n+        A_132 a_056();\n+    }\n+    public interface A_064 extends A_239 {\n+        A_064 a_047();\n+    }\n+    public interface A_021 extends A_239 {\n+    }\n+    public interface A_160 extends A_239 {\n+    }\n+    public interface A_141 extends A_239 {\n+        A_141 a_060();\n+    }\n+    public interface A_091 extends A_239 {\n+        A_091 a_026();\n+    }\n+    public interface A_034 extends A_239 {\n+        A_034 a_084();\n+    }\n+    public interface A_151 extends A_239 {\n+    }\n+    public interface A_026 extends A_239 {\n+        A_026 a_026();\n+    }\n+    public interface A_130 extends A_239 {\n+        A_130 a_052();\n+    }\n+    public interface A_242 extends A_239 {\n+        A_242 a_001();\n+    }\n+    public interface A_205 extends A_239 {\n+        A_205 a_086();\n+    }\n+    public interface A_048 extends A_239 {\n+        A_048 a_065();\n+    }\n+    public interface A_044 extends A_240 {\n+        A_044 a_040();\n+    }\n+    public interface A_023 extends A_239 {\n+    }\n+    public interface A_027 extends A_239 {\n+    }\n+    public interface A_138 extends A_239 {\n+        A_138 a_059();\n+    }\n+    public interface A_024 extends A_239 {\n+        A_024 a_011();\n+    }\n+    public interface A_038 extends A_239 {\n+        A_038 a_021();\n+    }\n+    public interface A_016 extends A_239 {\n+    }\n+    public interface A_118 extends A_239 {\n+        A_118 a_045();\n+    }\n+    public interface A_071 extends A_239 {\n+        A_071 a_011();\n+    }\n+    public interface A_203 extends A_239 {\n+        A_203 a_084();\n+    }\n+    public interface A_137 extends A_239 {\n+    }\n+    public interface A_119 extends A_239 {\n+        A_119 a_046();\n+    }\n+    public interface A_145 extends A_239 {\n+    }\n+    public interface A_045 extends A_239 {\n+        A_045 a_041();\n+    }\n+    public interface A_069 extends A_239 {\n+        A_069 a_010();\n+    }\n+    public interface A_150 extends A_239 {\n+    }\n+    public interface A_047 extends A_239 {\n+        A_047 a_057();\n+    }\n+    public interface A_179 extends A_239 {\n+    }\n+    public interface A_207 extends A_239 {\n+        A_207 a_088();\n+    }\n+    public interface A_228 extends A_239 {\n+        A_228 a_100();\n+    }\n+    public interface A_005 extends A_240 {\n+        A_005 a_040();\n+    }\n+    public interface A_030 extends A_239 {\n+        A_030 a_039();\n+    }\n+    public interface A_173 extends A_239 {\n+        A_173 a_069();\n+    }\n+    public interface A_060 extends A_239 {\n+        A_060 a_043();\n+    }\n+    public interface A_245 extends A_239 {\n+        A_245 a_009();\n+    }\n+    public interface A_042 extends A_239 {\n+        A_042 a_035();\n+    }\n+    public interface A_209 extends A_239 {\n+        A_209 a_090();\n+    }\n+    public interface A_216 extends A_239 {\n+    }\n+    public interface A_142 extends A_239 {\n+    }\n+    public interface A_246 extends A_239 {\n+        A_246 a_019();\n+    }\n+    public interface A_223 extends A_239 {\n+    }\n+    public interface A_211 extends A_239 {\n+        A_211 a_091();\n+    }\n+    public interface A_244 extends A_239 {\n+        A_244 a_008();\n+    }\n+    public interface A_019 extends A_239 {\n+        A_019 a_050();\n+    }\n+    public interface A_041 extends A_239 {\n+        A_041 a_034();\n+    }\n+    public interface A_208 extends A_239 {\n+        A_208 a_089();\n+    }\n+    public interface A_065 extends A_239 {\n+    }\n+    public interface A_127 extends A_239 {\n+        A_127 a_083();\n+    }\n+    public interface A_033 extends A_239 {\n+    }\n+    public interface A_153 extends A_239 {\n+    }\n+    public interface A_079 extends A_239 {\n+    }\n+    public interface A_025 extends A_239 {\n+    }\n+    public interface A_046 extends A_239 {\n+        A_046 a_042();\n+    }\n+    public interface A_002 extends A_239 {\n+    }\n+    public interface A_154 extends A_239 {\n+    }\n+    public interface A_077 extends A_239 {\n+        A_077 a_015();\n+    }\n+    public interface A_121 extends A_239 {\n+        A_121 a_053();\n+    }\n+    public interface A_036 extends A_239 {\n+        A_036 a_003();\n+    }\n+    public interface A_225 extends A_239 {\n+        A_225 a_054();\n+    }\n+    public interface A_181 extends A_239 {\n+        A_181 a_005();\n+    }\n+    public interface A_134 extends A_239 {\n+        A_134 a_057();\n+    }\n+    public interface A_017 extends A_239 {\n+    }\n+    public interface A_194 extends A_239 {\n+        A_194 a_081();\n+    }\n+    public interface A_243 extends A_239 {\n+        A_243 a_006();\n+    }\n+    public interface A_015 extends A_239 {\n+        A_015 a_004();\n+    }\n+    public interface A_028 extends A_239 {\n+        A_028 a_032();\n+    }\n+    public interface A_218 extends A_239 {\n+    }\n+    public interface A_174 extends A_239 {\n+    }\n+    public interface A_039 extends A_239 {\n+        A_039 a_023();\n+    }\n+    public interface A_029 extends A_239 {\n+    }\n+    public interface A_095 extends A_239 {\n+        A_095 a_029();\n+    }\n+    public interface A_096 extends A_239 {\n+    }\n+    public interface A_124 extends A_239 {\n+        A_124 a_028();\n+    }\n+    public interface A_202 extends A_239 {\n+        A_202 a_085();\n+    }\n+    public interface A_186 extends A_239 {\n+    }\n+    public interface A_120 extends A_239 {\n+    }\n+    public interface A_076 extends A_239 {\n+        A_076 a_014();\n+    }\n+    public interface A_052 extends A_239 {\n+        A_052 a_099();\n+    }\n+    public interface A_056 extends A_239 {\n+    }\n+    public interface A_020 extends A_239 {\n+        A_020 a_062();\n+    }\n+    public interface A_018 extends A_239 {\n+        A_018 a_045();\n+    }\n+    public interface A_149 extends A_239 {\n+        A_149 a_051();\n+    }\n+    public interface A_022 extends A_239 {\n+        A_022 a_075();\n+    }\n+    public interface A_063 extends A_239 {\n+        A_063 a_046();\n+    }\n+    public interface A_043 extends A_239 {\n+        A_043 a_038();\n+    }\n+    public interface A_167 extends A_239 {\n+    }\n+    public interface A_085 extends A_239 {\n+        A_085 a_018();\n+    }\n+    public interface A_032 extends A_239 {\n+    }\n+    public interface A_188 extends A_239 {\n+        A_188 a_076();\n+    }\n+    public interface A_126 extends A_239 {\n+    }\n+    public interface A_113 extends A_239 {\n+        A_113 a_032();\n+    }\n+    public interface A_051 extends A_239 {\n+        A_051 a_082();\n+    }\n+    public interface A_185 extends A_239 {\n+        A_185 a_074();\n+    }\n+    public interface A_099 extends A_239 {\n+    }\n+    public interface A_062 extends A_239 {\n+        A_062 a_045();\n+    }\n+    public interface A_237 extends A_239 {\n+        A_237 a_027();\n+    }\n+    public interface A_100 extends A_239 {\n+    }\n+    public interface A_189 extends A_000, A_005, A_190, A_240 {\n+        A_189 a_040();\n+        A_189 a_077();\n+    }\n+    public interface A_061 extends A_239 {\n+        A_061 a_044();\n+    }\n+    public interface A_104 extends A_239 {\n+        A_104 a_036();\n+    }\n+    public interface A_084 extends A_000, A_005, A_085, A_240 {\n+        A_084 a_040();\n+        A_084 a_018();\n+    }\n+    public interface A_129 extends A_000, A_005, A_130, A_240 {\n+        A_129 a_040();\n+        A_129 a_052();\n+    }\n+    public interface A_086 extends A_000, A_005, A_087, A_089, A_240 {\n+        A_086 a_040();\n+        A_086 a_024();\n+        A_086 a_098();\n+    }\n+    public interface A_125 extends A_239 {\n+    }\n+    public interface A_212 extends A_053, A_084, A_005, A_054, A_085, A_217,\n+            A_218, A_240 {\n+        A_212 a_040();\n+        A_212 a_000();\n+        A_212 a_018();\n+        A_212 a_093();\n+    }\n+    public interface A_171 extends A_170, A_175, A_005, A_173, A_176, A_174,\n+            A_240 {\n+        A_171 a_040();\n+        A_171 a_069();\n+        A_171 a_071();\n+        A_171 a_072();\n+    }\n+    public interface A_247 extends A_239 {\n+    }\n+    public interface A_183 extends A_053, A_084, A_005, A_054, A_085, A_185,\n+            A_186, A_240 {\n+        A_183 a_040();\n+        A_183 a_000();\n+        A_183 a_018();\n+        A_183 a_074();\n+    }\n+    public interface A_198 extends A_053, A_196, A_070, A_131, A_005, A_054,\n+            A_203, A_071, A_132, A_240 {\n+        A_198 a_040();\n+        A_198 a_000();\n+        A_198 a_084();\n+        A_198 a_011();\n+        A_198 a_056();\n+    }\n+    public interface A_070 extends A_000, A_005, A_071, A_240 {\n+        A_070 a_040();\n+        A_070 a_011();\n+    }\n+    public interface A_109 extends A_106, A_212, A_005, A_115, A_113, A_112,\n+            A_054, A_085, A_217, A_218, A_240 {\n+        A_109 a_040();\n+        A_109 a_039();\n+        A_109 a_032();\n+        A_109 a_033();\n+        A_109 a_000();\n+        A_109 a_018();\n+        A_109 a_093();\n+    }\n+    public interface A_158 extends A_159, A_161, A_152, A_005, A_054, A_160,\n+            A_162, A_153, A_154, A_240 {\n+        A_158 a_040();\n+        A_158 a_000();\n+        A_158 a_079();\n+    }\n+    public interface A_110 extends A_106, A_212, A_183, A_005, A_054, A_085,\n+            A_115, A_113, A_112, A_217, A_218, A_185, A_186, A_240 {\n+        A_110 a_040();\n+        A_110 a_000();\n+        A_110 a_018();\n+        A_110 a_039();\n+        A_110 a_032();\n+        A_110 a_033();\n+        A_110 a_093();\n+        A_110 a_074();\n+    }\n+    public interface A_200 extends A_000, A_005, A_202, A_240 {\n+        A_200 a_040();\n+        A_200 a_085();\n+    }\n+    public interface A_161 extends A_053, A_005, A_054, A_162, A_240 {\n+        A_161 a_040();\n+        A_161 a_000();\n+    }\n+    public interface A_175 extends A_000, A_005, A_176, A_240 {\n+        A_175 a_040();\n+        A_175 a_071();\n+    }\n+    public interface A_103 extends A_000, A_084, A_005, A_085, A_104, A_240 {\n+        A_103 a_040();\n+        A_103 a_018();\n+        A_103 a_036();\n+    }\n+    public interface A_093 extends A_090, A_152, A_005, A_054, A_085, A_091,\n+            A_092, A_153, A_154, A_240 {\n+        A_093 a_040();\n+        A_093 a_000();\n+        A_093 a_018();\n+        A_093 a_026();\n+        A_093 a_079();\n+        A_093 a_027();\n+    }\n+    public interface A_204 extends A_000, A_005, A_205, A_240 {\n+        A_204 a_040();\n+        A_204 a_086();\n+    }\n+    public interface A_067 extends A_059, A_152, A_005, A_054, A_085, A_063,\n+            A_062, A_064, A_065, A_066, A_061, A_060, A_153, A_154, A_240 {\n+        A_067 a_040();\n+        A_067 a_000();\n+        A_067 a_018();\n+        A_067 a_046();\n+        A_067 a_045();\n+        A_067 a_047();\n+        A_067 a_049();\n+        A_067 a_044();\n+        A_067 a_043();\n+        A_067 a_079();\n+    }\n+    public interface A_101 extends A_070, A_005, A_071, A_240 {\n+        A_101 a_040();\n+        A_101 a_011();\n+    }\n+    public interface A_224 extends A_000, A_225, A_240 {\n+        A_224 a_054();\n+        A_224 a_040();\n+    }\n+    public interface A_156 extends A_053, A_084, A_155, A_059, A_005, A_054,\n+            A_085, A_160, A_162, A_063, A_062, A_064, A_065, A_066, A_061,\n+            A_060, A_240 {\n+        A_156 a_040();\n+        A_156 a_000();\n+        A_156 a_018();\n+        A_156 a_046();\n+        A_156 a_045();\n+        A_156 a_047();\n+        A_156 a_049();\n+        A_156 a_044();\n+        A_156 a_043();\n+    }\n+    public interface A_122 extends A_116, A_152, A_005, A_054, A_085, A_121,\n+            A_119, A_118, A_120, A_153, A_154, A_240 {\n+        A_122 a_040();\n+        A_122 a_000();\n+        A_122 a_018();\n+        A_122 a_053();\n+        A_122 a_046();\n+        A_122 a_045();\n+        A_122 a_048();\n+        A_122 a_079();\n+        A_122 a_080();\n+    }\n+    public interface A_184 extends A_183, A_152, A_005, A_054, A_085, A_185,\n+            A_186, A_153, A_154, A_240 {\n+        A_184 a_040();\n+        A_184 a_000();\n+        A_184 a_018();\n+        A_184 a_074();\n+        A_184 a_079();\n+    }\n+    public interface A_180 extends A_000, A_181, A_240 {\n+        A_180 a_005();\n+        A_180 a_040();\n+    }\n+    public interface A_191 extends A_000, A_005, A_192, A_240 {\n+        A_191 a_040();\n+        A_191 a_078();\n+    }\n+    public interface A_107 extends A_106, A_094, A_005, A_115, A_113, A_112,\n+            A_095, A_096, A_240 {\n+        A_107 a_040();\n+        A_107 a_039();\n+        A_107 a_032();\n+        A_107 a_033();\n+        A_107 a_029();\n+        A_107 a_000();\n+        A_107 a_018();\n+    }\n+    public interface A_102 extends A_196, A_005, A_203, A_240 {\n+        A_102 a_040();\n+        A_102 a_084();\n+    }\n+    public interface A_177 extends A_000, A_005, A_179, A_240 {\n+        A_177 a_040();\n+    }\n+    public interface A_123 extends A_195, A_005, A_054, A_124, A_127, A_128,\n+            A_126, A_125, A_240 {\n+        A_123 a_040();\n+        A_123 a_000();\n+        A_123 a_028();\n+        A_123 a_083();\n+        A_123 a_064();\n+        A_123 a_055();\n+        A_123 a_018();\n+        A_123 a_079();\n+        A_123 a_080();\n+        A_123 a_081();\n+        A_123 a_077();\n+        A_123 a_036();\n+        A_123 a_056();\n+        A_123 a_012();\n+        A_123 a_078();\n+        A_123 a_076();\n+        A_123 a_057();\n+    }\n+    public interface A_088 extends A_106, A_086, A_240 {\n+        A_088 a_040();\n+        A_088 a_039();\n+        A_088 a_032();\n+        A_088 a_033();\n+        A_088 a_000();\n+        A_088 a_018();\n+        A_088 a_024();\n+        A_088 a_098();\n+    }\n+    public interface A_094 extends A_084, A_005, A_085, A_095, A_096, A_240 {\n+        A_094 a_040();\n+        A_094 a_018();\n+        A_094 a_029();\n+    }\n+    public interface A_105 extends A_098, A_236, A_005, A_085, A_153, A_074,\n+            A_099, A_100, A_240 {\n+        A_105 a_040();\n+        A_105 a_018();\n+        A_105 a_079();\n+        A_105 a_012();\n+        A_105 a_030();\n+        A_105 a_031();\n+        A_105 a_000();\n+        A_105 a_081();\n+        A_105 a_077();\n+        A_105 a_036();\n+        A_105 a_056();\n+        A_105 a_078();\n+        A_105 a_076();\n+        A_105 a_057();\n+    }\n+    public interface A_199 extends A_196, A_090, A_005, A_054, A_085, A_091,\n+            A_092, A_203, A_240 {\n+        A_199 a_040();\n+        A_199 a_000();\n+        A_199 a_018();\n+        A_199 a_026();\n+        A_199 a_084();\n+        A_199 a_027();\n+    }\n+    public interface A_080 extends A_075, A_236, A_005, A_085, A_153, A_074,\n+            A_076, A_077, A_078, A_079, A_240 {\n+        A_080 a_040();\n+        A_080 a_018();\n+        A_080 a_079();\n+        A_080 a_012();\n+        A_080 a_014();\n+        A_080 a_015();\n+        A_080 a_016();\n+        A_080 a_000();\n+        A_080 a_080();\n+        A_080 a_081();\n+        A_080 a_077();\n+        A_080 a_036();\n+        A_080 a_056();\n+        A_080 a_078();\n+        A_080 a_076();\n+        A_080 a_057();\n+    }\n+    public interface A_172 extends A_170, A_219, A_005, A_054, A_085, A_173,\n+            A_222, A_223, A_174, A_240 {\n+        A_172 a_040();\n+        A_172 a_000();\n+        A_172 a_018();\n+        A_172 a_069();\n+        A_172 a_095();\n+        A_172 a_072();\n+    }\n+    public interface A_108 extends A_106, A_180, A_206, A_005, A_115, A_113,\n+            A_112, A_181, A_208, A_207, A_209, A_240 {\n+        A_108 a_040();\n+        A_108 a_039();\n+        A_108 a_032();\n+        A_108 a_033();\n+        A_108 a_005();\n+        A_108 a_089();\n+        A_108 a_088();\n+        A_108 a_090();\n+        A_108 a_000();\n+        A_108 a_018();\n+    }\n+    public interface A_195 extends A_053, A_084, A_152, A_193, A_189, A_103,\n+            A_131, A_073, A_191, A_187, A_133, A_005, A_054, A_085, A_153,\n+            A_154, A_194, A_190, A_104, A_132, A_074, A_192, A_188, A_134,\n+            A_240 {\n+        A_195 a_040();\n+        A_195 a_000();\n+        A_195 a_018();\n+        A_195 a_079();\n+        A_195 a_080();\n+        A_195 a_081();\n+        A_195 a_077();\n+        A_195 a_036();\n+        A_195 a_056();\n+        A_195 a_012();\n+        A_195 a_078();\n+        A_195 a_076();\n+        A_195 a_057();\n+    }\n+    public interface A_220 extends A_219, A_236, A_005, A_085, A_153, A_074,\n+            A_240 {\n+        A_220 a_040();\n+        A_220 a_018();\n+        A_220 a_079();\n+        A_220 a_012();\n+        A_220 a_000();\n+        A_220 a_095();\n+        A_220 a_080();\n+        A_220 a_081();\n+        A_220 a_077();\n+        A_220 a_036();\n+        A_220 a_056();\n+        A_220 a_078();\n+        A_220 a_076();\n+        A_220 a_057();\n+    }\n+    public interface A_146 extends A_000, A_005, A_151, A_150, A_149, A_240 {\n+        A_146 a_040();\n+        A_146 a_073();\n+        A_146 a_051();\n+    }\n+    public interface A_090 extends A_000, A_053, A_084, A_005, A_054, A_085,\n+            A_237, A_091, A_092, A_240 {\n+        A_090 a_040();\n+        A_090 a_000();\n+        A_090 a_018();\n+        A_090 a_027();\n+        A_090 a_026();\n+    }\n+    public interface A_057 extends A_106, A_058, A_240 {\n+        A_057 a_002();\n+        A_057 a_040();\n+        A_057 a_039();\n+        A_057 a_032();\n+        A_057 a_033();\n+        A_057 a_000();\n+        A_057 a_018();\n+    }\n+    public interface A_098 extends A_084, A_005, A_085, A_099, A_100, A_240 {\n+    }\n+    public interface A_136 extends A_084, A_005, A_085, A_138, A_137, A_240 {\n+    }\n+    public interface A_116 extends A_053, A_084, A_005, A_054, A_085, A_121,\n+            A_119, A_118, A_120, A_240 {\n+        A_116 a_040();\n+        A_116 a_000();\n+        A_116 a_018();\n+        A_116 a_053();\n+        A_116 a_046();\n+        A_116 a_045();\n+        A_116 a_048();\n+    }\n+    public interface A_159 extends A_053, A_005, A_054, A_160, A_240 {\n+        A_159 a_040();\n+        A_159 a_000();\n+    }\n+    public interface A_140 extends A_139, A_236, A_005, A_085, A_153, A_074,\n+            A_141, A_142, A_240 {\n+        A_140 a_040();\n+        A_140 a_018();\n+        A_140 a_079();\n+        A_140 a_012();\n+        A_140 a_060();\n+        A_140 a_061();\n+        A_140 a_000();\n+        A_140 a_080();\n+        A_140 a_081();\n+        A_140 a_077();\n+        A_140 a_036();\n+        A_140 a_056();\n+        A_140 a_078();\n+        A_140 a_076();\n+        A_140 a_057();\n+    }\n+    public interface A_178 extends A_177, A_144, A_005, A_179, A_145, A_240 {\n+        A_178 a_040();\n+    }\n+    public interface A_139 extends A_053, A_005, A_054, A_141, A_142, A_240 {\n+        A_139 a_040();\n+        A_139 a_000();\n+        A_139 a_060();\n+        A_139 a_061();\n+    }\n+    public interface A_165 extends A_163, A_152, A_005, A_054, A_166, A_167,\n+            A_153, A_154, A_240 {\n+        A_165 a_040();\n+        A_165 a_000();\n+        A_165 a_065();\n+        A_165 a_066();\n+        A_165 a_079();\n+        A_165 a_080();\n+    }\n+    public interface A_053 extends A_000, A_238<Long>, A_005, A_054, A_240 {\n+        A_053 a_040();\n+        A_053 a_000();\n+    }\n+    public interface A_135 extends A_136, A_236, A_005, A_085, A_153, A_074,\n+            A_138, A_137, A_240 {\n+        A_135 a_040();\n+        A_135 a_018();\n+        A_135 a_079();\n+        A_135 a_012();\n+        A_135 a_059();\n+        A_135 a_058();\n+        A_135 a_000();\n+        A_135 a_081();\n+        A_135 a_077();\n+        A_135 a_036();\n+        A_135 a_056();\n+        A_135 a_078();\n+        A_135 a_076();\n+        A_135 a_057();\n+    }\n+    public interface A_148 extends A_146, A_236, A_005, A_085, A_153, A_074,\n+            A_240 {\n+        A_148 a_040();\n+        A_148 a_018();\n+        A_148 a_079();\n+        A_148 a_012();\n+        A_148 a_051();\n+        A_148 a_000();\n+        A_148 a_081();\n+        A_148 a_077();\n+        A_148 a_036();\n+        A_148 a_056();\n+        A_148 a_078();\n+        A_148 a_076();\n+        A_148 a_057();\n+    }\n+    public interface A_206 extends A_000, A_005, A_208, A_207, A_209, A_240 {\n+        A_206 a_040();\n+        A_206 a_089();\n+        A_206 a_088();\n+        A_206 a_090();\n+    }\n+    public interface A_215 extends A_000, A_005, A_216, A_240 {\n+        A_215 a_040();\n+        A_215 a_092();\n+    }\n+    public interface A_117 extends A_116, A_090, A_005, A_054, A_085, A_121,\n+            A_119, A_118, A_120, A_091, A_092, A_240 {\n+        A_117 a_040();\n+        A_117 a_000();\n+        A_117 a_018();\n+        A_117 a_053();\n+        A_117 a_046();\n+        A_117 a_045();\n+        A_117 a_048();\n+        A_117 a_026();\n+        A_117 a_027();\n+    }\n+    public interface A_082 extends A_000, A_005, A_083, A_240 {\n+        A_082 a_040();\n+    }\n+    public interface A_182 extends A_053, A_084, A_152, A_193, A_189, A_005,\n+            A_054, A_085, A_153, A_154, A_194, A_190, A_240 {\n+        A_182 a_040();\n+        A_182 a_000();\n+        A_182 a_018();\n+        A_182 a_079();\n+        A_182 a_080();\n+        A_182 a_081();\n+        A_182 a_077();\n+    }\n+    public interface A_055 extends A_000, A_005, A_056, A_240 {\n+    }\n+    public interface A_193 extends A_000, A_005, A_194, A_240 {\n+        A_193 a_040();\n+        A_193 a_081();\n+    }\n+    public interface A_214 extends A_212, A_152, A_005, A_054, A_085, A_217,\n+            A_218, A_153, A_154, A_240 {\n+        A_214 a_040();\n+        A_214 a_000();\n+        A_214 a_018();\n+        A_214 a_093();\n+        A_214 a_079();\n+    }\n+    public interface A_059 extends A_053, A_084, A_005, A_054, A_085, A_063,\n+            A_062, A_064, A_065, A_066, A_061, A_060, A_240 {\n+        A_059 a_040();\n+        A_059 a_000();\n+        A_059 a_018();\n+        A_059 a_046();\n+        A_059 a_045();\n+        A_059 a_047();\n+        A_059 a_048();\n+        A_059 a_049();\n+        A_059 a_044();\n+        A_059 a_043();\n+    }\n+    public interface A_226 extends A_000, A_228, A_240 {\n+        A_226 a_100();\n+        A_226 a_040();\n+    }\n+    public interface A_210 extends A_053, A_005, A_054, A_211, A_240 {\n+        A_210 a_040();\n+        A_210 a_000();\n+        A_210 a_091();\n+    }\n+    public interface A_073 extends A_000, A_005, A_074, A_240 {\n+        A_073 a_040();\n+        A_073 a_012();\n+    }\n+    public interface A_157 extends A_155, A_236, A_005, A_085, A_153, A_074,\n+            A_160, A_162, A_240 {\n+        A_157 a_040();\n+        A_157 a_018();\n+        A_157 a_079();\n+        A_157 a_012();\n+        A_157 a_000();\n+        A_157 a_081();\n+        A_157 a_077();\n+        A_157 a_036();\n+        A_157 a_056();\n+        A_157 a_078();\n+        A_157 a_076();\n+        A_157 a_057();\n+    }\n+    public interface A_131 extends A_053, A_005, A_054, A_132, A_240 {\n+        A_131 a_040();\n+        A_131 a_000();\n+        A_131 a_056();\n+    }\n+    public interface A_152 extends A_053, A_005, A_054, A_153, A_154, A_240 {\n+        A_152 a_040();\n+        A_152 a_000();\n+        A_152 a_079();\n+    }\n+    public interface A_106 extends A_053, A_084, A_005, A_115, A_113, A_112,\n+            A_240 {\n+        A_106 a_040();\n+        A_106 a_039();\n+        A_106 a_032();\n+        A_106 a_033();\n+        A_106 a_000();\n+        A_106 a_018();\n+    }\n+    public interface A_147 extends A_106, A_236, A_005, A_085, A_153, A_074,\n+            A_240 {\n+        A_147 a_040();\n+        A_147 a_018();\n+        A_147 a_012();\n+        A_147 a_039();\n+        A_147 a_032();\n+        A_147 a_033();\n+        A_147 a_000();\n+        A_147 a_081();\n+        A_147 a_077();\n+        A_147 a_036();\n+        A_147 a_056();\n+        A_147 a_078();\n+        A_147 a_076();\n+        A_147 a_057();\n+    }\n+    public interface A_081 extends A_075, A_152, A_005, A_054, A_076, A_077,\n+            A_078, A_079, A_153, A_154, A_240 {\n+        A_081 a_040();\n+        A_081 a_000();\n+        A_081 a_014();\n+        A_081 a_015();\n+        A_081 a_016();\n+        A_081 a_079();\n+        A_081 a_080();\n+    }\n+    public interface A_197 extends A_196, A_070, A_236, A_005, A_085, A_153,\n+            A_074, A_203, A_071, A_240 {\n+        A_197 a_040();\n+        A_197 a_018();\n+        A_197 a_079();\n+        A_197 a_012();\n+        A_197 a_084();\n+        A_197 a_011();\n+        A_197 a_000();\n+        A_197 a_081();\n+        A_197 a_077();\n+        A_197 a_036();\n+        A_197 a_056();\n+        A_197 a_078();\n+        A_197 a_076();\n+        A_197 a_057();\n+    }\n+    public interface A_213 extends A_212, A_215, A_236, A_005, A_085, A_153,\n+            A_074, A_240 {\n+        A_213 a_040();\n+        A_213 a_018();\n+        A_213 a_079();\n+        A_213 a_012();\n+        A_213 a_000();\n+        A_213 a_093();\n+        A_213 a_092();\n+        A_213 a_081();\n+        A_213 a_077();\n+        A_213 a_036();\n+        A_213 a_056();\n+        A_213 a_078();\n+        A_213 a_076();\n+        A_213 a_057();\n+    }\n+    public interface A_143 extends A_139, A_152, A_005, A_141, A_142, A_153,\n+            A_154, A_240 {\n+        A_143 a_040();\n+        A_143 a_060();\n+        A_143 a_061();\n+        A_143 a_079();\n+        A_143 a_080();\n+        A_143 a_000();\n+    }\n+    public interface A_221 extends A_219, A_152, A_005, A_054, A_085, A_222,\n+            A_223, A_153, A_154, A_240 {\n+        A_221 a_040();\n+        A_221 a_000();\n+        A_221 a_018();\n+        A_221 a_095();\n+        A_221 a_079();\n+        A_221 a_080();\n+    }\n+    public interface A_196 extends A_000, A_005, A_203, A_240 {\n+        A_196 a_040();\n+        A_196 a_084();\n+    }\n+    public interface A_155 extends A_159, A_161, A_005, A_054, A_160, A_162,\n+            A_240 {\n+        A_155 a_040();\n+        A_155 a_000();\n+    }\n+    public interface A_097 extends A_094, A_152, A_005, A_085, A_095, A_096,\n+            A_153, A_154, A_240 {\n+        A_097 a_040();\n+        A_097 a_018();\n+        A_097 a_029();\n+        A_097 a_079();\n+        A_097 a_000();\n+    }\n+    public interface A_219 extends A_053, A_084, A_005, A_054, A_085, A_222,\n+            A_223, A_240 {\n+        A_219 a_040();\n+        A_219 a_000();\n+        A_219 a_018();\n+        A_219 a_095();\n+        A_219 a_096();\n+    }\n+    public interface A_068 extends A_053, A_005, A_054, A_069, A_240 {\n+        A_068 a_040();\n+        A_068 a_000();\n+        A_068 a_010();\n+    }\n+    public interface A_114 extends A_106, A_236, A_005, A_085, A_153, A_074,\n+            A_115, A_113, A_240 {\n+        A_114 a_040();\n+        A_114 a_018();\n+        A_114 a_079();\n+        A_114 a_012();\n+        A_114 a_039();\n+        A_114 a_032();\n+        A_114 a_033();\n+        A_114 a_000();\n+        A_114 a_080();\n+        A_114 a_081();\n+        A_114 a_077();\n+        A_114 a_036();\n+        A_114 a_056();\n+        A_114 a_078();\n+        A_114 a_076();\n+        A_114 a_057();\n+    }\n+    public interface A_163 extends A_053, A_005, A_054, A_166, A_167, A_240 {\n+        A_163 a_040();\n+        A_163 a_000();\n+        A_163 a_065();\n+        A_163 a_066();\n+    }\n+    public interface A_187 extends A_000, A_005, A_188, A_240 {\n+        A_187 a_040();\n+        A_187 a_076();\n+    }\n+    public interface A_144 extends A_000, A_005, A_145, A_240 {\n+        A_144 a_040();\n+    }\n+    public interface A_111 extends A_106, A_212, A_219, A_170, A_005, A_054,\n+            A_085, A_115, A_113, A_112, A_217, A_218, A_222, A_223, A_173,\n+            A_240 {\n+        A_111 a_040();\n+        A_111 a_000();\n+        A_111 a_018();\n+        A_111 a_039();\n+        A_111 a_032();\n+        A_111 a_033();\n+        A_111 a_093();\n+        A_111 a_095();\n+        A_111 a_069();\n+    }\n+    public interface A_168 extends A_000, A_053, A_005, A_054, A_169, A_240 {\n+        A_168 a_040();\n+        A_168 a_000();\n+        A_168 a_037();\n+    }\n+    public interface A_227 extends A_226, A_236, A_005, A_085, A_153, A_074,\n+            A_228, A_240 {\n+        A_227 a_040();\n+        A_227 a_018();\n+        A_227 a_079();\n+        A_227 a_012();\n+        A_227 a_100();\n+        A_227 a_000();\n+        A_227 a_081();\n+        A_227 a_077();\n+        A_227 a_036();\n+        A_227 a_056();\n+        A_227 a_078();\n+        A_227 a_076();\n+        A_227 a_057();\n+    }\n+    public interface A_075 extends A_053, A_005, A_054, A_076, A_077, A_078,\n+            A_079, A_240 {\n+        A_075 a_040();\n+        A_075 a_000();\n+        A_075 a_014();\n+        A_075 a_015();\n+        A_075 a_016();\n+        A_075 a_017();\n+    }\n+    public interface A_008 extends A_239 {\n+        A_008 a_040();\n+    }\n+    public interface A_072 extends A_070, A_090, A_005, A_054, A_085, A_091,\n+            A_092, A_071, A_240 {\n+        A_072 a_040();\n+        A_072 a_000();\n+        A_072 a_018();\n+        A_072 a_026();\n+        A_072 a_011();\n+        A_072 a_027();\n+    }\n+    public interface A_170 extends A_000, A_005, A_173, A_174, A_240 {\n+        A_170 a_040();\n+        A_170 a_069();\n+        A_170 a_072();\n+    }\n+    public interface A_012 extends A_239 {\n+        A_012 a_063();\n+    }\n+    public interface A_164 extends A_163, A_236, A_005, A_085, A_153, A_074,\n+            A_166, A_167, A_240 {\n+        A_164 a_040();\n+        A_164 a_018();\n+        A_164 a_079();\n+        A_164 a_012();\n+        A_164 a_065();\n+        A_164 a_066();\n+        A_164 a_000();\n+        A_164 a_080();\n+        A_164 a_081();\n+        A_164 a_077();\n+        A_164 a_036();\n+        A_164 a_056();\n+        A_164 a_078();\n+        A_164 a_076();\n+        A_164 a_057();\n+    }\n+    public interface A_006 extends A_239 {\n+        A_006 a_004();\n+    }\n+    public interface A_007 extends A_239 {\n+    }\n+    public interface A_201 extends A_200, A_236, A_005, A_085, A_153, A_074,\n+            A_240 {\n+        A_201 a_040();\n+        A_201 a_018();\n+        A_201 a_079();\n+        A_201 a_012();\n+        A_201 a_085();\n+        A_201 a_000();\n+        A_201 a_081();\n+        A_201 a_077();\n+        A_201 a_036();\n+        A_201 a_056();\n+        A_201 a_078();\n+        A_201 a_076();\n+        A_201 a_057();\n+    }\n+    public interface A_011 extends A_239 {\n+        A_011 a_062();\n+    }\n+    public interface A_014 extends A_239 {\n+        A_014 a_075();\n+    }\n+    public interface A_009 extends A_239 {\n+        A_009 a_045();\n+    }\n+    public interface A_010 extends A_239 {\n+        A_010 a_050();\n+    }\n+    public interface A_013 extends A_239 {\n+        A_013 a_067();\n+    }\n+    public interface A_236 extends A_195, A_005, A_085, A_153, A_074, A_240 {\n+        A_236 a_040();\n+        A_236 a_018();\n+        A_236 a_079();\n+        A_236 a_012();\n+        A_236 a_000();\n+        A_236 a_081();\n+        A_236 a_077();\n+        A_236 a_036();\n+        A_236 a_056();\n+        A_236 a_078();\n+        A_236 a_076();\n+        A_236 a_057();\n+    }\n+\n","filename":"test\/jdk\/java\/beans\/Introspector\/MethodOrderException.java","additions":1525,"deletions":12,"binary":false,"changes":1537,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.NameClassCache;\n+\n+\/**\n+ * @test\n+ * @bug 8280041\n+ * @summary Sanity test for ClassCache under continuous GC\n+ * @compile\/module=java.base java\/io\/NameClassCache.java\n+ * @run main ContinuousGCTest\n+ *\/\n+public class ContinuousGCTest {\n+    static final NameClassCache CACHE = new NameClassCache();\n+    static final String VALUE = \"ClassCache-ContinuousGCTest\";\n+\n+    public static void main(String... args) throws Throwable {\n+        for (int c = 0; c < 1000; c++) {\n+            test();\n+            System.gc();\n+        }\n+    }\n+\n+    public static void test() {\n+        String cached = CACHE.get(ContinuousGCTest.class);\n+        if (!cached.equals(VALUE)) {\n+            throw new IllegalStateException(\"Cache failure, got: \" + cached);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/ContinuousGCTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.NullClassCache;\n+\n+\/**\n+ * @test\n+ * @bug 8280041\n+ * @summary Test that ClassCache throws on trying to pass null value\n+ * @compile\/module=java.base java\/io\/NullClassCache.java\n+ * @run main NullValueTest\n+ *\/\n+public class NullValueTest {\n+    public static void main(String... args) throws Throwable {\n+        try {\n+            new NullClassCache().get(Object.class);\n+            throw new IllegalStateException(\"Should have failed\");\n+        } catch (NullPointerException npe) {\n+            \/\/ Expected\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/NullValueTest.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.io;\n+\n+public class NameClassCache extends ClassCache<String> {\n+    protected String computeValue(Class<?> cl) {\n+        \/\/ Return string that is not interned and specific to class\n+        return \"ClassCache-\" + cl.getName();\n+    }\n+\n+    public String get(Class<?> cl) {\n+        return super.get(cl);\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/java.base\/java\/io\/NameClassCache.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.io;\n+\n+public class NullClassCache extends ClassCache<Object> {\n+    protected Object computeValue(Class<?> cl) {\n+        return null;\n+    }\n+\n+    public Object get(Class<?> cl) {\n+        return super.get(cl);\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/java.base\/java\/io\/NullClassCache.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import java.io.FilePermission;\n@@ -111,2 +110,2 @@\n-                this.total = Long.valueOf(total) * KSIZE;\n-                this.free = Long.valueOf(free) * KSIZE;\n+                this.total = Long.parseLong(total) * KSIZE;\n+                this.free = Long.parseLong(free) * KSIZE;\n@@ -160,1 +159,1 @@\n-                j = m.end() + 1;\n+                j = m.end();\n@@ -230,1 +229,1 @@\n-                if (!Platform.isLinux() || s.name().indexOf(\"\/run\/user\") == -1)\n+                if (!Platform.isLinux() || !s.name().contains(\"\/run\/user\"))\n","filename":"test\/jdk\/java\/io\/File\/GetXSpace.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8268250\n+ * @summary Check exceptional behavior of Class.arrayType\n+ *\/\n+\n+import java.lang.reflect.*;\n+import java.util.function.*;\n+\n+public class ArrayType {\n+    public static void main(String... args) {\n+        expectException(() -> Void.TYPE);\n+        expectException(() -> Array.newInstance(int.class, new int[255])\n+                        .getClass());\n+    }\n+\n+    private static void expectException(Supplier<Class<?>> arrayTypeArg) {\n+        try {\n+            Class<?> arrayClazz = arrayTypeArg.get().arrayType();\n+            throw new RuntimeException(\"Expected exception not thrown: \" +\n+                                       arrayClazz);\n+        } catch (UnsupportedOperationException uoe) {\n+            ; \/\/ Expected\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Class\/ArrayType.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8281671\n+ * @summary Checks on various \"getFooName\" methods of java.lang.Class\n+ *\/\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+public class NameTest {\n+    public static void main(String... args) {\n+        testCanonicalName();\n+        testSimpleName();\n+    }\n+\n+    private static void testCanonicalName() {\n+        class LocalClass {} \/\/ Local class; no canonical name\n+        Object o = new Object() {}; \/\/ Anonymous class; no canonical name\n+        Object[] objectArray = {};\n+\n+        Map<Class<?>, String> expectedCanonicalName = new HashMap<>();\n+\n+        expectedCanonicalName.put(LocalClass.class,             null);\n+        expectedCanonicalName.put(o.getClass(),                 null);\n+\n+        \/\/ If a component type doesn't have a canonical name, neither\n+        \/\/ does an array of that type.\n+        expectedCanonicalName.put(LocalClass.class.arrayType(), null);\n+        expectedCanonicalName.put(o.getClass().arrayType(),     null);\n+\n+        expectedCanonicalName.put(int.class,              \"int\");\n+        expectedCanonicalName.put(Object.class,           \"java.lang.Object\");\n+        expectedCanonicalName.put(objectArray.getClass(), \"java.lang.Object[]\");\n+\n+        for (var entry : expectedCanonicalName.entrySet()) {\n+            var key = entry.getKey();\n+            var expectedName = entry.getValue();\n+            String canonicalName = key.getCanonicalName();\n+            if (!Objects.equals(canonicalName, expectedName)) {\n+                System.err.println(\"Unexpected canonical name '\" +\n+                                   canonicalName + \"' found for \" +\n+                                   key + \", expected \" + expectedName);\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+\n+    private static void testSimpleName() {\n+        class ALocalClass {} \/\/ Local class\n+        Object o = new Object() {}; \/\/ Anonymous class, empty simple name\n+        Object[] objectArray = {};\n+\n+        Map<Class<?>, String> expectedSimpleName = new HashMap<>();\n+\n+        expectedSimpleName.put(ALocalClass.class,             \"ALocalClass\");\n+        expectedSimpleName.put(o.getClass(),                  \"\");\n+\n+        expectedSimpleName.put(ALocalClass.class.arrayType(), \"ALocalClass[]\");\n+        expectedSimpleName.put(o.getClass().arrayType(),      \"[]\");\n+\n+        expectedSimpleName.put(int.class,                     \"int\");\n+        expectedSimpleName.put(Object.class,                  \"Object\");\n+        expectedSimpleName.put(objectArray.getClass(),        \"Object[]\");\n+\n+        for (var entry : expectedSimpleName.entrySet()) {\n+            var key = entry.getKey();\n+            var expectedName = entry.getValue();\n+            String simpleName = key.getSimpleName();\n+            if (!Objects.equals(simpleName, expectedName)) {\n+                System.err.println(\"Unexpected simple name '\" +\n+                                   simpleName + \"' found for \" +\n+                                   key + \", expected \" + expectedName);\n+                throw new RuntimeException();\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Class\/NameTest.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8281000\n+ * @summary Test ClassLoader.isRegisteredAsParallelCapable() method with an\n+ *   invalid caller (non-JNI cases).  This test uses reflection and opens\n+ *   the java.base module so it runs separate from behavior tests of\n+ *   isRegisteredParallelCapable to avoid side effects.\n+ * @modules java.base\/java.lang:open\n+ * @run main\/othervm BadRegisterAsParallelCapableCaller\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+public class BadRegisterAsParallelCapableCaller {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        Throwable thrown = null;\n+        final Method m = ClassLoader.class.getDeclaredMethod(\"registerAsParallelCapable\");\n+        m.setAccessible(true);\n+        try {\n+            m.invoke(null);\n+        } catch (InvocationTargetException ite) {\n+            thrown = ite.getCause();\n+        }\n+        if (! (thrown instanceof IllegalCallerException)) {\n+            throw new RuntimeException(\"Didn't get expected IllegalCallerException, got \"+ thrown);\n+        } else {\n+            System.out.println(\"Invalid caller threw IllegalCallerException as expected\");\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/BadRegisterAsParallelCapableCaller.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8281000\n+ * @summary Test uses custom launcher that starts VM using JNI that verifies\n+ *          ClassLoader.registerAsParallelCapable with null caller class\n+ *          throws an IllegalCallerException.\n+ * @library \/test\/lib\n+ * @requires os.family != \"aix\"\n+ * @run main\/native NullCallerClassLoaderTest\n+ *\/\n+\n+\/\/ Test disabled on AIX since we cannot invoke the JVM on the primordial thread.\n+\n+import java.io.File;\n+import java.util.Map;\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class NullCallerClassLoaderTest {\n+    public static void main(String[] args) throws IOException {\n+        Path launcher = Path.of(System.getProperty(\"test.nativepath\"), \"NullCallerClassLoaderTest\");\n+        ProcessBuilder pb = new ProcessBuilder(launcher.toString());\n+        Map<String, String> env = pb.environment();\n+\n+        String libDir = Platform.libDir().toString();\n+        String vmDir = Platform.jvmLibDir().toString();\n+\n+        \/\/ set up shared library path\n+        String sharedLibraryPathEnvName = Platform.sharedLibraryPathVariableName();\n+        env.compute(sharedLibraryPathEnvName,\n+                (k, v) -> (v == null) ? libDir : v + File.pathSeparator + libDir);\n+        env.compute(sharedLibraryPathEnvName,\n+                (k, v) -> (v == null) ? vmDir : v + File.pathSeparator + vmDir);\n+\n+        System.out.println(\"Launching: \" + launcher + \" shared library path: \" +\n+                env.get(sharedLibraryPathEnvName));\n+        new OutputAnalyzer(pb.start())\n+                .outputTo(System.out)\n+                .errorTo(System.err)\n+                .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/exeNullCallerClassLoaderTest\/NullCallerClassLoaderTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#include \"jni.h\"\n+#include \"assert.h\"\n+\n+static jclass class_IllegalCallerException;\n+\n+int checkAndClearIllegalCallerExceptionThrown(JNIEnv *env) {\n+    jthrowable t = (*env)->ExceptionOccurred(env);\n+    if ((*env)->IsInstanceOf(env, t, class_IllegalCallerException) == JNI_TRUE) {\n+        (*env)->ExceptionClear(env);\n+        return JNI_TRUE;\n+    }\n+    return JNI_FALSE;\n+}\n+\n+int main(int argc, char** args) {\n+    JavaVM *jvm;\n+    JNIEnv *env;\n+    JavaVMInitArgs vm_args;\n+    JavaVMOption options[1];\n+    jint rc;\n+\n+\n+    vm_args.version = JNI_VERSION_1_2;\n+    vm_args.nOptions = 0;\n+    vm_args.options = options;\n+\n+    if ((rc = JNI_CreateJavaVM(&jvm, (void**)&env, &vm_args)) != JNI_OK) {\n+        printf(\"ERROR: cannot create VM.\\n\");\n+        exit(-1);\n+    }\n+    class_IllegalCallerException = (*env)->FindClass(env, \"java\/lang\/IllegalCallerException\");\n+    assert (class_IllegalCallerException != NULL);\n+\n+    \/\/ call ClassLoader.registerAsParallelCapable()\n+    jclass class_ClassLoader = (*env)->FindClass(env, \"java\/lang\/ClassLoader\");\n+    assert(class_ClassLoader != NULL);\n+    jmethodID mid_ClassLoader_registerAsParallelCapable = (*env)->GetStaticMethodID(env, class_ClassLoader, \"registerAsParallelCapable\", \"()Z\" );\n+    assert(mid_ClassLoader_registerAsParallelCapable != NULL);\n+    jboolean b = (*env)->CallStaticBooleanMethod(env, class_ClassLoader, mid_ClassLoader_registerAsParallelCapable );\n+    if ((rc = checkAndClearIllegalCallerExceptionThrown(env)) != JNI_TRUE) {\n+        printf(\"ERROR: Didn't get the expected IllegalCallerException.\\n\");\n+        exit(-1);\n+    }\n+\n+    printf(\"Expected IllegalCallerException was thrown\\n\");\n+\n+    (*jvm)->DestroyJavaVM(jvm);\n+    return 0;\n+}\n+\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/exeNullCallerClassLoaderTest\/exeNullCallerClassLoaderTest.c","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -36,4 +35,2 @@\n-        failures += Tests.test(\"StrictMath.atan2(double, double)\", input1, input2,\n-                               StrictMath.atan2(input1, input2), expected);\n-        failures += Tests.test(\"Math.atan2(double, double)\", input1, input2,\n-                               Math.atan2(input1, input2), expected);\n+        failures += Tests.test(\"StrictMath.atan2\", input1, input2, StrictMath::atan2, expected);\n+        failures += Tests.test(\"Math.atan2\",       input1, input2, Math::atan2,       expected);\n@@ -58,1 +55,1 @@\n-    public static void main(String [] argv) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/Atan2Tests.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n-        failures += Tests.test(\"Math.ceil\",  input, Math.ceil(input),   expected);\n-        failures += Tests.test(\"StrictMath.ceil\",  input, StrictMath.ceil(input), expected);\n+        failures += Tests.test(\"Math.ceil\",        input, Math::ceil,       expected);\n+        failures += Tests.test(\"StrictMath.ceil\",  input, StrictMath::ceil, expected);\n@@ -40,2 +40,2 @@\n-        failures += Tests.test(\"Math.floor\",  input, Math.floor(input),   expected);\n-        failures += Tests.test(\"StrictMath.floor\",  input, StrictMath.floor(input), expected);\n+        failures += Tests.test(\"Math.floor\",        input, Math::floor,       expected);\n+        failures += Tests.test(\"StrictMath.floor\",  input, StrictMath::floor, expected);\n","filename":"test\/jdk\/java\/lang\/Math\/CeilAndFloorTests.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Joseph D. Darcy\n@@ -49,11 +48,4 @@\n-        double minus_input = -input;\n-        double minus_expected = -expected;\n-\n-        failures+=Tests.test(\"Math.cbrt(double)\", input,\n-                             Math.cbrt(input), expected);\n-        failures+=Tests.test(\"Math.cbrt(double)\", minus_input,\n-                             Math.cbrt(minus_input), minus_expected);\n-        failures+=Tests.test(\"StrictMath.cbrt(double)\", input,\n-                             StrictMath.cbrt(input), expected);\n-        failures+=Tests.test(\"StrictMath.cbrt(double)\", minus_input,\n-                             StrictMath.cbrt(minus_input), minus_expected);\n+        failures+=Tests.test(\"Math.cbrt\",        input, Math::cbrt,        expected);\n+        failures+=Tests.test(\"Math.cbrt\",       -input, Math::cbrt,       -expected);\n+        failures+=Tests.test(\"StrictMath.cbrt\",  input, StrictMath::cbrt,  expected);\n+        failures+=Tests.test(\"StrictMath.cbrt\", -input, StrictMath::cbrt, -expected);\n@@ -327,1 +319,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/CubeRootTests.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,2 @@\n-        failures += Tests.test(\"StrictMath.exp\", input, StrictMath.exp(input), expected);\n-        failures += Tests.test(\"Math.exp\", input, Math.exp(input), expected);\n+        failures += Tests.test(\"StrictMath.exp\", input, StrictMath::exp, expected);\n+        failures += Tests.test(\"Math.exp\",       input, Math::exp,       expected);\n","filename":"test\/jdk\/java\/lang\/Math\/ExpCornerCaseTests.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -217,1 +216,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/Expm1Tests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -368,4 +368,2 @@\n-        failures += Tests.test(\"Math.fma(double)\", input1, input2, input3,\n-                               Math.fma(input1, input2, input3), expected);\n-        failures += Tests.test(\"StrictMath.fma(double)\", input1, input2, input3,\n-                               StrictMath.fma(input1, input2, input3), expected);\n+        failures += Tests.test(\"Math.fma\",       input1, input2, input3, Math::fma,       expected);\n+        failures += Tests.test(\"StrictMath.fma\", input1, input2, input3, StrictMath::fma, expected);\n@@ -374,4 +372,2 @@\n-        failures += Tests.test(\"Math.fma(double)\", input2, input1, input3,\n-                               Math.fma(input2, input1, input3), expected);\n-        failures += Tests.test(\"StrictMath.fma(double)\", input2, input1, input3,\n-                               StrictMath.fma(input2, input1, input3), expected);\n+        failures += Tests.test(\"Math.fma\",       input2, input1, input3, Math::fma,       expected);\n+        failures += Tests.test(\"StrictMath.fma\", input2, input1, input3, StrictMath::fma, expected);\n","filename":"test\/jdk\/java\/lang\/Math\/FusedMultiplyAddTests.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -36,0 +35,14 @@\n+    public static void main(String... argv) {\n+        int failures = 0;\n+\n+        failures += testSinh();\n+        failures += testCosh();\n+        failures += testTanh();\n+\n+        if (failures > 0) {\n+            System.err.println(\"Testing the hyperbolic functions incurred \"\n+                               + failures + \" failures.\");\n+            throw new RuntimeException();\n+        }\n+    }\n+\n@@ -358,6 +371,2 @@\n-        failures += Tests.testTolerance(\"Math.sinh(double)\",\n-                                        input, Math.sinh(input),\n-                                        expected, tolerance);\n-        failures += Tests.testTolerance(\"Math.sinh(double)\",\n-                                        -input, Math.sinh(-input),\n-                                        -expected, tolerance);\n+        failures += Tests.testTolerance(\"Math.sinh\",        input, Math::sinh,        expected, tolerance);\n+        failures += Tests.testTolerance(\"Math.sinh\",       -input, Math::sinh,       -expected, tolerance);\n@@ -365,6 +374,2 @@\n-        failures += Tests.testTolerance(\"StrictMath.sinh(double)\",\n-                                        input, StrictMath.sinh(input),\n-                                        expected, tolerance);\n-        failures += Tests.testTolerance(\"StrictMath.sinh(double)\",\n-                                        -input, StrictMath.sinh(-input),\n-                                        -expected, tolerance);\n+        failures += Tests.testTolerance(\"StrictMath.sinh\",  input, StrictMath::sinh,  expected, tolerance);\n+        failures += Tests.testTolerance(\"StrictMath.sinh\", -input, StrictMath::sinh, -expected, tolerance);\n@@ -378,13 +383,5 @@\n-        failures += Tests.testUlpDiff(\"Math.sinh(double)\",\n-                                      input, Math.sinh(input),\n-                                      expected, ulps);\n-        failures += Tests.testUlpDiff(\"Math.sinh(double)\",\n-                                      -input, Math.sinh(-input),\n-                                      -expected, ulps);\n-\n-        failures += Tests.testUlpDiff(\"StrictMath.sinh(double)\",\n-                                      input, StrictMath.sinh(input),\n-                                      expected, ulps);\n-        failures += Tests.testUlpDiff(\"StrictMath.sinh(double)\",\n-                                      -input, StrictMath.sinh(-input),\n-                                      -expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.sinh\",        input, Math::sinh,        expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.sinh\",       -input, Math::sinh,       -expected, ulps);\n+\n+        failures += Tests.testUlpDiff(\"StrictMath.sinh\",  input, StrictMath::sinh,  expected, ulps);\n+        failures += Tests.testUlpDiff(\"StrictMath.sinh\", -input, StrictMath::sinh, -expected, ulps);\n@@ -394,1 +391,0 @@\n-\n@@ -597,1 +593,0 @@\n-\n@@ -736,13 +731,5 @@\n-        failures += Tests.testUlpDiff(\"Math.cosh(double)\",\n-                                      input, Math.cosh(input),\n-                                      expected, ulps);\n-        failures += Tests.testUlpDiff(\"Math.cosh(double)\",\n-                                      -input, Math.cosh(-input),\n-                                      expected, ulps);\n-\n-        failures += Tests.testUlpDiff(\"StrictMath.cosh(double)\",\n-                                      input, StrictMath.cosh(input),\n-                                      expected, ulps);\n-        failures += Tests.testUlpDiff(\"StrictMath.cosh(double)\",\n-                                      -input, StrictMath.cosh(-input),\n-                                      expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.cosh\",        input, Math::cosh,       expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.cosh\",       -input, Math::cosh,       expected, ulps);\n+\n+        failures += Tests.testUlpDiff(\"StrictMath.cosh\",  input, StrictMath::cosh, expected, ulps);\n+        failures += Tests.testUlpDiff(\"StrictMath.cosh\", -input, StrictMath::cosh, expected, ulps);\n@@ -752,1 +739,0 @@\n-\n@@ -955,1 +941,0 @@\n-\n@@ -1010,6 +995,2 @@\n-        failures += Tests.testTolerance(\"Math.tanh(double\",\n-                                        input, Math.tanh(input),\n-                                        expected, tolerance);\n-        failures += Tests.testTolerance(\"Math.tanh(double\",\n-                                        -input, Math.tanh(-input),\n-                                        -expected, tolerance);\n+        failures += Tests.testTolerance(\"Math.tanh\",       input, Math::tanh,         expected, tolerance);\n+        failures += Tests.testTolerance(\"Math.tanh\",      -input, Math::tanh,        -expected, tolerance);\n@@ -1017,6 +998,2 @@\n-        failures += Tests.testTolerance(\"StrictMath.tanh(double\",\n-                                        input, StrictMath.tanh(input),\n-                                        expected, tolerance);\n-        failures += Tests.testTolerance(\"StrictMath.tanh(double\",\n-                                        -input, StrictMath.tanh(-input),\n-                                        -expected, tolerance);\n+        failures += Tests.testTolerance(\"StrictMath.tanh\",  input, StrictMath::tanh,  expected, tolerance);\n+        failures += Tests.testTolerance(\"StrictMath.tanh\", -input, StrictMath::tanh, -expected, tolerance);\n@@ -1031,19 +1008,2 @@\n-        failures += Tests.testUlpDiffWithAbsBound(\"Math.tanh(double)\",\n-                                                  input, Math.tanh(input),\n-                                                  expected, ulps, 1.0);\n-        failures += Tests.testUlpDiffWithAbsBound(\"Math.tanh(double)\",\n-                                                  -input, Math.tanh(-input),\n-                                                  -expected, ulps, 1.0);\n-\n-        failures += Tests.testUlpDiffWithAbsBound(\"StrictMath.tanh(double)\",\n-                                                  input, StrictMath.tanh(input),\n-                                                  expected, ulps, 1.0);\n-        failures += Tests.testUlpDiffWithAbsBound(\"StrictMath.tanh(double)\",\n-                                                  -input, StrictMath.tanh(-input),\n-                                                  -expected, ulps, 1.0);\n-        return failures;\n-    }\n-\n-\n-    public static void main(String argv[]) {\n-        int failures = 0;\n+        failures += Tests.testUlpDiffWithAbsBound(\"Math.tanh\",       input,  Math::tanh,       expected, ulps, 1.0);\n+        failures += Tests.testUlpDiffWithAbsBound(\"Math.tanh\",      -input,  Math::tanh,      -expected, ulps, 1.0);\n@@ -1051,9 +1011,3 @@\n-        failures += testSinh();\n-        failures += testCosh();\n-        failures += testTanh();\n-\n-        if (failures > 0) {\n-            System.err.println(\"Testing the hyperbolic functions incurred \"\n-                               + failures + \" failures.\");\n-            throw new RuntimeException();\n-        }\n+        failures += Tests.testUlpDiffWithAbsBound(\"StrictMath.tanh\",  input, StrictMath::tanh,  expected, ulps, 1.0);\n+        failures += Tests.testUlpDiffWithAbsBound(\"StrictMath.tanh\", -input, StrictMath::tanh, -expected, ulps, 1.0);\n+        return failures;\n@@ -1061,1 +1015,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/Math\/HyperbolicTests.java","additions":38,"deletions":85,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Joseph D. Darcy\n@@ -54,1 +53,0 @@\n-\n@@ -191,1 +189,0 @@\n-\n@@ -197,1 +194,0 @@\n-\n@@ -224,2 +220,2 @@\n-        for(int i = -1; i <= 1; i+=2) {\n-            for(int j = -1; j <= 1; j+=2) {\n+        for(int i = -1; i <= 1; i += 2) {\n+            for(int j = -1; j <= 1; j += 2) {\n@@ -228,9 +224,5 @@\n-                failures += Tests.testUlpDiff(\"Math.hypot\", x, y,\n-                                              Math.hypot(x, y), expected, ulps);\n-                failures += Tests.testUlpDiff(\"Math.hypot\", y, x,\n-                                              Math.hypot(y, x ), expected, ulps);\n-\n-                failures += Tests.testUlpDiff(\"StrictMath.hypot\", x, y,\n-                                              StrictMath.hypot(x, y), expected, ulps);\n-                failures += Tests.testUlpDiff(\"StrictMath.hypot\", y, x,\n-                                              StrictMath.hypot(y, x), expected, ulps);\n+                failures += Tests.testUlpDiff(\"Math.hypot\",       x, y, Math::hypot,       expected, ulps);\n+                failures += Tests.testUlpDiff(\"Math.hypot\",       y, x, Math::hypot,       expected, ulps);\n+\n+                failures += Tests.testUlpDiff(\"StrictMath.hypot\", x, y, StrictMath::hypot, expected, ulps);\n+                failures += Tests.testUlpDiff(\"StrictMath.hypot\", y, x, StrictMath::hypot, expected, ulps);\n@@ -243,1 +235,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n@@ -255,1 +247,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/Math\/HypotTests.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,2 @@\n-        failures += Tests.test(\"Math.cos\",       input, Math.cos(input),       expected);\n-        failures += Tests.test(\"StrictMath.cos\", input, StrictMath.cos(input), expected);\n+        failures += Tests.test(\"Math.cos\",       input, Math::cos,       expected);\n+        failures += Tests.test(\"StrictMath.cos\", input, StrictMath::cos, expected);\n@@ -85,2 +85,2 @@\n-        failures += Tests.test(\"Math.acos\",       input, Math.acos(input),       expected);\n-        failures += Tests.test(\"StrictMath.acos\", input, StrictMath.acos(input), expected);\n+        failures += Tests.test(\"Math.acos\",       input, Math::acos,       expected);\n+        failures += Tests.test(\"StrictMath.acos\", input, StrictMath::acos, expected);\n@@ -106,2 +106,2 @@\n-        failures += Tests.test(\"Math.atan\",       input, Math.atan(input),       expected);\n-        failures += Tests.test(\"StrictMath.atan\", input, StrictMath.atan(input), expected);\n+        failures += Tests.test(\"Math.atan\",       input, Math::atan,       expected);\n+        failures += Tests.test(\"StrictMath.atan\", input, StrictMath::atan, expected);\n@@ -126,2 +126,2 @@\n-        failures += Tests.test(\"Math.log\",       input, Math.log(input),       expected);\n-        failures += Tests.test(\"StrictMath.log\", input, StrictMath.log(input), expected);\n+        failures += Tests.test(\"Math.log\",       input, Math::log,       expected);\n+        failures += Tests.test(\"StrictMath.log\", input, StrictMath::log, expected);\n","filename":"test\/jdk\/java\/lang\/Math\/Ieee754SpecialCaseTests.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Joseph D. Darcy\n@@ -367,1 +366,1 @@\n-                             Math.nextAfter(start, direction), expected);\n+                             Math::nextAfter, expected);\n@@ -369,1 +368,1 @@\n-                             Math.nextAfter(minus_start, minus_direction), minus_expected);\n+                             Math::nextAfter, minus_expected);\n@@ -372,1 +371,1 @@\n-                             StrictMath.nextAfter(start, direction), expected);\n+                             StrictMath::nextAfter, expected);\n@@ -374,1 +373,1 @@\n-                             StrictMath.nextAfter(minus_start, minus_direction), minus_expected);\n+                             StrictMath::nextAfter, minus_expected);\n@@ -589,1 +588,1 @@\n-                                 testCases[i][0], Math.nextUp(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], Math::nextUp, testCases[i][1]);\n@@ -592,1 +591,1 @@\n-                                 testCases[i][0], StrictMath.nextUp(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], StrictMath::nextUp, testCases[i][1]);\n@@ -668,1 +667,1 @@\n-                                 testCases[i][0], Math.nextDown(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], Math::nextDown, testCases[i][1]);\n@@ -671,1 +670,1 @@\n-                                 testCases[i][0], StrictMath.nextDown(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], StrictMath::nextDown, testCases[i][1]);\n@@ -909,1 +908,1 @@\n-                                             Math.copySign(testCases[i][m], testCases[j][n]),\n+                                             Math::copySign,\n@@ -914,1 +913,1 @@\n-                                             StrictMath.copySign(testCases[i][m], testCases[j][n]),\n+                                             StrictMath::copySign,\n@@ -935,1 +934,1 @@\n-                                         StrictMath.copySign(testCases[i][m], NaNs[j]),\n+                                         StrictMath::copySign,\n@@ -1387,1 +1386,1 @@\n-                             Math.ulp(d), expected);\n+                             Math::ulp, expected);\n@@ -1389,1 +1388,1 @@\n-                             Math.ulp(minus_d), expected);\n+                             Math::ulp, expected);\n@@ -1391,1 +1390,1 @@\n-                             StrictMath.ulp(d), expected);\n+                             StrictMath::ulp, expected);\n@@ -1393,1 +1392,1 @@\n-                             StrictMath.ulp(minus_d), expected);\n+                             StrictMath::ulp, expected);\n@@ -1667,1 +1666,1 @@\n-                                 testCases[i][0], Math.signum(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], Math::signum, testCases[i][1]);\n@@ -1669,1 +1668,1 @@\n-                                 testCases[i][0], StrictMath.signum(testCases[i][0]), testCases[i][1]);\n+                                 testCases[i][0], StrictMath::signum, testCases[i][1]);\n@@ -1676,1 +1675,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/IeeeRecommendedTests.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -44,5 +43,2 @@\n-        failures+=Tests.test(\"Math.log10(double)\", input,\n-                             Math.log10(input), expected);\n-\n-        failures+=Tests.test(\"StrictMath.log10(double)\", input,\n-                             StrictMath.log10(input), expected);\n+        failures+=Tests.test(\"Math.log10\",       input, Math::log10,       expected);\n+        failures+=Tests.test(\"StrictMath.log10\", input, StrictMath::log10, expected);\n@@ -124,2 +120,0 @@\n-\n-\n@@ -208,1 +202,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n@@ -219,1 +213,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/Math\/Log10Tests.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Joseph D. Darcy\n@@ -170,1 +169,0 @@\n-\n@@ -172,1 +170,0 @@\n-\n@@ -188,6 +185,2 @@\n-        failures += Tests.testUlpDiff(\"Math.lop1p(double\",\n-                                      input, Math.log1p(input),\n-                                      expected, ulps);\n-        failures += Tests.testUlpDiff(\"StrictMath.log1p(double\",\n-                                      input, StrictMath.log1p(input),\n-                                      expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.lop1p\",       input, Math::log1p,       expected, ulps);\n+        failures += Tests.testUlpDiff(\"StrictMath.log1p\", input, StrictMath::log1p, expected, ulps);\n@@ -197,1 +190,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/Log1pTests.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -38,4 +37,2 @@\n-        failures += Tests.test(\"StrictMath.pow(double, double)\", input1, input2,\n-                               StrictMath.pow(input1, input2), expected);\n-        failures += Tests.test(\"Math.pow(double, double)\", input1, input2,\n-                               Math.pow(input1, input2), expected);\n+        failures += Tests.test(\"StrictMath.pow\", input1, input2, StrictMath::pow, expected);\n+        failures += Tests.test(\"Math.pow\",       input1, input2, Math::pow,       expected);\n@@ -45,1 +42,0 @@\n-\n@@ -48,2 +44,2 @@\n-        failures += Tests.test(\"StrictMath.pow(double, double)\", input1, input2,\n-                               StrictMath.pow(input1, input2), expected);\n+        failures += Tests.test(\"StrictMath.pow\", input1, input2,\n+                               StrictMath::pow, expected);\n@@ -55,2 +51,2 @@\n-        failures += Tests.test(\"Math.pow(double, double)\", input1, input2,\n-                               Math.pow(input1, input2), expected);\n+        failures += Tests.test(\"Math.pow\", input1, input2,\n+                               Math::pow, expected);\n@@ -61,2 +57,0 @@\n-        double smResult = StrictMath.pow(input1, input2);\n-        double mResult = Math.pow(input1, input2);\n@@ -65,2 +59,1 @@\n-            input1, input2, mResult, smResult, 2.0\n-        );\n+            input1, input2, Math::pow, StrictMath.pow(input1, input2), 2.0);\n@@ -316,1 +309,1 @@\n-    public static void main(String [] argv) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/PowTests.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,6 +35,4 @@\n-        failures += Tests.test(\"Math.rint\",  input, Math.rint(input),   expected);\n-        failures += Tests.test(\"Math.rint\", -input, Math.rint(-input), -expected);\n-        failures += Tests.test(\"StrictMath.rint\",\n-                               input, StrictMath.rint(input),   expected);\n-        failures += Tests.test(\"StrictMath.rint\", -input,\n-                               StrictMath.rint(-input), -expected);\n+        failures += Tests.test(\"Math.rint\",        input, Math::rint,        expected);\n+        failures += Tests.test(\"Math.rint\",       -input, Math::rint,       -expected);\n+        failures += Tests.test(\"StrictMath.rint\",  input, StrictMath::rint,  expected);\n+        failures += Tests.test(\"StrictMath.rint\", -input, StrictMath::rint, -expected);\n@@ -44,2 +42,1 @@\n-\n-    public static void main(String args[]) {\n+    public static void main(String... args) {\n@@ -100,1 +97,0 @@\n-\n","filename":"test\/jdk\/java\/lang\/Math\/Rint.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,2 +67,2 @@\n-        failures += Tests.test(\"Math.round\",        input, Math.round(input),       expected);\n-        failures += Tests.test(\"StrictMath.round\",  input, StrictMath.round(input), expected);\n+        failures += Tests.test(\"Math.round\",        input, Math::round,       expected);\n+        failures += Tests.test(\"StrictMath.round\",  input, StrictMath::round, expected);\n@@ -148,14 +148,8 @@\n-        failures += Tests.test(\"Math.round\", Double.NaN, Math.round(Double.NaN), 0.0);\n-        failures += Tests.test(\"Math.round\", Double.POSITIVE_INFINITY,\n-                Math.round(Double.POSITIVE_INFINITY), Long.MAX_VALUE);\n-        failures += Tests.test(\"Math.round\", Double.NEGATIVE_INFINITY,\n-                Math.round(Double.NEGATIVE_INFINITY), Long.MIN_VALUE);\n-        failures += Tests.test(\"Math.round\", -(double)Long.MIN_VALUE,\n-                Math.round(-(double)Long.MIN_VALUE), Long.MAX_VALUE);\n-        failures += Tests.test(\"Math.round\", (double) Long.MIN_VALUE,\n-                Math.round((double) Long.MIN_VALUE), Long.MIN_VALUE);\n-        failures += Tests.test(\"Math.round\", 0, Math.round(0), 0.0);\n-        failures += Tests.test(\"Math.round\", Double.MIN_VALUE,\n-                Math.round(Double.MIN_VALUE), 0.0);\n-        failures += Tests.test(\"Math.round\", -Double.MIN_VALUE,\n-                Math.round(-Double.MIN_VALUE), 0.0);\n+        failures += Tests.test(\"Math.round\", Double.NaN,               Math::round, 0.0);\n+        failures += Tests.test(\"Math.round\", Double.POSITIVE_INFINITY, Math::round, Long.MAX_VALUE);\n+        failures += Tests.test(\"Math.round\", Double.NEGATIVE_INFINITY, Math::round, Long.MIN_VALUE);\n+        failures += Tests.test(\"Math.round\", -(double)Long.MIN_VALUE,  Math::round, Long.MAX_VALUE);\n+        failures += Tests.test(\"Math.round\", (double) Long.MIN_VALUE,  Math::round, Long.MIN_VALUE);\n+        failures += Tests.test(\"Math.round\", 0,                        Math::round, 0.0);\n+        failures += Tests.test(\"Math.round\", Double.MIN_VALUE,         Math::round, 0.0);\n+        failures += Tests.test(\"Math.round\", -Double.MIN_VALUE,        Math::round, 0.0);\n","filename":"test\/jdk\/java\/lang\/Math\/RoundTests.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @author Vivek Deshpande\n@@ -1505,1 +1504,1 @@\n-        failures += Tests.testBounds(\"Math.sin\", input, Math.sin(input), bound1, bound2);\n+        failures += Tests.testBounds(\"Math.sin\", input, Math::sin, bound1, bound2);\n@@ -2924,1 +2923,1 @@\n-        failures += Tests.testBounds(\"Math.cos\", input, Math.cos(input), bound1, bound2);\n+        failures += Tests.testBounds(\"Math.cos\", input, Math::cos, bound1, bound2);\n","filename":"test\/jdk\/java\/lang\/Math\/SinCosCornerCasesTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -36,4 +35,2 @@\n-        failures += Tests.testUlpDiff(\"StrictMath.tan(double, double)\", input,\n-                               StrictMath.tan(input), expected, ulps);\n-        failures += Tests.testUlpDiff(\"Math.tan(double, double)\", input,\n-                               Math.tan(input), expected, ulps);\n+        failures += Tests.testUlpDiff(\"StrictMath.tan\", input, StrictMath::tan, expected, ulps);\n+        failures += Tests.testUlpDiff(\"Math.tan\",       input, Math::tan,       expected, ulps);\n@@ -176,1 +173,1 @@\n-    public static void main(String [] argv) {\n+    public static void main(String... argv) {\n","filename":"test\/jdk\/java\/lang\/Math\/TanTests.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,4 @@\n+import java.util.function.DoubleBinaryOperator;\n+import java.util.function.DoubleUnaryOperator;\n+import java.util.function.DoubleToIntFunction;\n+\n@@ -238,2 +242,1 @@\n-        }\n-        else\n+        } else {\n@@ -241,0 +244,1 @@\n+        }\n@@ -251,2 +255,1 @@\n-        }\n-        else\n+        } else {\n@@ -254,0 +257,1 @@\n+        }\n@@ -294,0 +298,7 @@\n+    public static int test(String testName,\n+                           double input,\n+                           DoubleToIntFunction func,\n+                           int expected) {\n+        return test(testName, input, func.applyAsInt(input), expected);\n+    }\n+\n@@ -302,2 +313,1 @@\n-        }\n-        else\n+        } else {\n@@ -305,0 +315,1 @@\n+        }\n@@ -315,2 +326,1 @@\n-        }\n-        else\n+        } else {\n@@ -318,0 +328,1 @@\n+        }\n@@ -320,0 +331,6 @@\n+    public static int test(String testName,\n+                           double input,\n+                           DoubleUnaryOperator func,\n+                           double expected) {\n+        return test(testName, input, func.applyAsDouble(input), expected);\n+    }\n@@ -329,2 +346,1 @@\n-        }\n-        else\n+        } else {\n@@ -332,0 +348,1 @@\n+        }\n@@ -344,2 +361,1 @@\n-        }\n-        else\n+        } else {\n@@ -347,0 +363,8 @@\n+        }\n+    }\n+\n+    public static int test(String testName,\n+                           double input1, double input2,\n+                           DoubleBinaryOperator func,\n+                           double expected) {\n+        return test(testName, input1, input2, func.applyAsDouble(input1, input2), expected);\n@@ -359,2 +383,1 @@\n-        }\n-        else\n+        } else {\n@@ -362,0 +385,1 @@\n+        }\n@@ -374,2 +398,1 @@\n-        }\n-        else\n+        } else {\n@@ -377,0 +400,1 @@\n+        }\n@@ -389,2 +413,1 @@\n-        }\n-        else\n+        } else {\n@@ -392,0 +415,1 @@\n+        }\n@@ -405,2 +429,1 @@\n-        }\n-        else\n+        } else {\n@@ -408,0 +431,13 @@\n+        }\n+    }\n+\n+    @FunctionalInterface\n+    public interface DoubleTernaryOperator {\n+        double applyAsDouble(double input1, double input2, double input3);\n+    }\n+\n+    public static int test(String testName,\n+                           double input1, double input2, double input3,\n+                           DoubleTernaryOperator func, double expected) {\n+        return test(testName, input1, input2, input3, func.applyAsDouble(input1, input2, input3), expected);\n+\n@@ -421,2 +457,1 @@\n-        }\n-        else\n+        } else {\n@@ -424,0 +459,1 @@\n+        }\n@@ -445,2 +481,1 @@\n-                }\n-                else\n+                } else {\n@@ -448,0 +483,1 @@\n+                }\n@@ -453,0 +489,5 @@\n+    public static int testUlpDiff(String testName, double input,\n+                                  DoubleUnaryOperator func, double expected, double ulps) {\n+        return testUlpDiff(testName, input, func.applyAsDouble(input), expected, ulps);\n+    }\n+\n@@ -467,0 +508,5 @@\n+    public static int testUlpDiff(String testName, double input1, double input2,\n+                                  DoubleBinaryOperator func, double expected, double ulps) {\n+        return testUlpDiff(testName, input1, input2, func.applyAsDouble(input1, input2), expected, ulps);\n+    }\n+\n@@ -484,0 +530,8 @@\n+    public static int testUlpDiffWithAbsBound(String testName, double input,\n+                                              DoubleUnaryOperator func, double expected,\n+                                              double ulps, double absBound) {\n+        return testUlpDiffWithAbsBound(testName, input,\n+                                       func.applyAsDouble(input), expected,\n+                                       ulps, absBound);\n+    }\n+\n@@ -509,0 +563,8 @@\n+    public static int testUlpDiffWithLowerBound(String testName, double input,\n+                                                DoubleUnaryOperator func, double expected,\n+                                                double ulps, double lowerBound) {\n+        return testUlpDiffWithLowerBound(testName, input,\n+                                         func.applyAsDouble(input), expected,\n+                                         ulps, lowerBound);\n+    }\n+\n@@ -516,1 +578,1 @@\n-        } else\n+        } else {\n@@ -518,0 +580,1 @@\n+        }\n@@ -531,0 +594,5 @@\n+    public static int testTolerance(String testName, double input,\n+                                    DoubleUnaryOperator func, double expected, double tolerance) {\n+        return testTolerance(testName, input, func.applyAsDouble(input), expected, tolerance);\n+\n+    }\n@@ -547,2 +615,1 @@\n-        }\n-        else\n+        } else {\n@@ -550,0 +617,1 @@\n+        }\n@@ -554,0 +622,5 @@\n+    public static int testBounds(String testName, double input, DoubleUnaryOperator func,\n+                                 double bound1, double bound2) {\n+        return testBounds(testName, input, func.applyAsDouble(input), bound1, bound2);\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/Math\/Tests.java","additions":101,"deletions":28,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n- * @author Joseph D. Darcy\n@@ -129,2 +128,2 @@\n-        failures += Tests.testBounds(\"Math.exp\",       input, Math.exp(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.exp\", input, StrictMath.exp(input), expected, out);\n+        failures += Tests.testBounds(\"Math.exp\",       input, Math::exp,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.exp\", input, StrictMath::exp, expected, out);\n@@ -161,2 +160,2 @@\n-        failures += Tests.testBounds(\"Math.log\",       input, Math.log(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.log\", input, StrictMath.log(input), expected, out);\n+        failures += Tests.testBounds(\"Math.log\",       input, Math::log,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.log\", input, StrictMath::log, expected, out);\n@@ -194,2 +193,2 @@\n-        failures += Tests.testBounds(\"Math.sin\",       input, Math.sin(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.sin\", input, StrictMath.sin(input), expected, out);\n+        failures += Tests.testBounds(\"Math.sin\",       input, Math::sin,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.sin\", input, StrictMath::sin, expected, out);\n@@ -226,2 +225,2 @@\n-        failures += Tests.testBounds(\"Math.asin\",       input, Math.asin(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.asin\", input, StrictMath.asin(input), expected, out);\n+        failures += Tests.testBounds(\"Math.asin\",       input, Math::asin,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.asin\", input, StrictMath::asin, expected, out);\n@@ -259,2 +258,2 @@\n-        failures += Tests.testBounds(\"Math.cos\",       input, Math.cos(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.cos\", input, StrictMath.cos(input), expected, out);\n+        failures += Tests.testBounds(\"Math.cos\",       input, Math::cos,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.cos\", input, StrictMath::cos, expected, out);\n@@ -283,2 +282,2 @@\n-        failures += Tests.testBounds(\"Math.acos\",       input, Math.acos(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.acos\", input, StrictMath.acos(input), expected, out);\n+        failures += Tests.testBounds(\"Math.acos\",       input, Math::acos,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.acos\", input, StrictMath::acos, expected, out);\n@@ -312,2 +311,2 @@\n-        failures += Tests.testBounds(\"Math.tan\",       input, Math.tan(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.tan\", input, StrictMath.tan(input), expected, out);\n+        failures += Tests.testBounds(\"Math.tan\",       input, Math::tan,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.tan\", input, StrictMath::tan, expected, out);\n@@ -344,2 +343,2 @@\n-        failures += Tests.testBounds(\"Math.atan\",       input, Math.atan(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.atan\", input, StrictMath.atan(input), expected, out);\n+        failures += Tests.testBounds(\"Math.atan\",       input, Math::atan,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.atan\", input, StrictMath::atan, expected, out);\n@@ -370,2 +369,2 @@\n-        failures += Tests.testBounds(\"Math.pow2\",       input, Math.pow(2, input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.pow2\", input, StrictMath.pow(2, input), expected, out);\n+        failures += Tests.testBounds(\"Math.pow2\",       input, d -> Math.pow(2, d),       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.pow2\", input, d -> StrictMath.pow(2, d), expected, out);\n@@ -403,2 +402,2 @@\n-        failures += Tests.testBounds(\"Math.sinh\",       input, Math.sinh(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.sinh\", input, StrictMath.sinh(input), expected, out);\n+        failures += Tests.testBounds(\"Math.sinh\",       input, Math::sinh,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.sinh\", input, StrictMath::sinh, expected, out);\n@@ -431,2 +430,2 @@\n-        failures += Tests.testBounds(\"Math.cosh\",       input, Math.cosh(input),       expected, out);\n-        failures += Tests.testBounds(\"StrictMath.cosh\", input, StrictMath.cosh(input), expected, out);\n+        failures += Tests.testBounds(\"Math.cosh\",       input, Math::cosh,       expected, out);\n+        failures += Tests.testBounds(\"StrictMath.cosh\", input, StrictMath::cosh, expected, out);\n","filename":"test\/jdk\/java\/lang\/Math\/WorstCaseTests.java","additions":23,"deletions":24,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -252,1 +252,1 @@\n-            = (ver.length == 2)\n+            = (ver.length >= 2)\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/Version\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n- * @author Joseph D. Darcy\n@@ -74,1 +73,1 @@\n-                             StrictMath.cbrt(input), expected);\n+                             StrictMath::cbrt, expected);\n@@ -76,1 +75,1 @@\n-                             StrictMath.cbrt(minus_input), minus_expected);\n+                             StrictMath::cbrt, minus_expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/CubeRootTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n- * @author Joseph D. Darcy\n+ * @compile -Xdiags:verbose Expm1Tests.java\n+ * @run main Expm1Tests\n@@ -47,1 +48,1 @@\n-                          StrictMath.expm1(input), expected);\n+                          StrictMath::expm1, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Expm1Tests.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -48,1 +47,1 @@\n-                          StrictMath.sinh(input), expected);\n+                          StrictMath::sinh, expected);\n@@ -53,1 +52,1 @@\n-                          StrictMath.cosh(input), expected);\n+                          StrictMath::cosh, expected);\n@@ -58,1 +57,1 @@\n-                          StrictMath.tanh(input), expected);\n+                          StrictMath::tanh, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/HyperbolicTests.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n- * @author Joseph D. Darcy\n@@ -75,1 +74,1 @@\n-                               StrictMath.hypot(input1, input2), expected);\n+                               StrictMath::hypot, expected);\n@@ -78,1 +77,1 @@\n-                          StrictMath.hypot(input2, input1), expected);\n+                               StrictMath::hypot, expected);\n@@ -81,1 +80,1 @@\n-                               StrictMath.hypot(-input1, input2), expected);\n+                               StrictMath::hypot, expected);\n@@ -84,1 +83,1 @@\n-                          StrictMath.hypot(input2, -input1), expected);\n+                               StrictMath::hypot, expected);\n@@ -87,1 +86,1 @@\n-                               StrictMath.hypot(input1, -input2), expected);\n+                               StrictMath::hypot, expected);\n@@ -90,1 +89,1 @@\n-                          StrictMath.hypot(-input2, input1), expected);\n+                               StrictMath::hypot, expected);\n@@ -93,1 +92,1 @@\n-                               StrictMath.hypot(-input1, -input2), expected);\n+                               StrictMath::hypot, expected);\n@@ -96,1 +95,1 @@\n-                          StrictMath.hypot(-input2, -input1), expected);\n+                                StrictMath::hypot, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/HypotTests.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -48,1 +47,1 @@\n-                          StrictMath.log10(input), expected);\n+                          StrictMath::log10, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Log10Tests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -47,1 +46,1 @@\n-                          StrictMath.log1p(input), expected);\n+                          StrictMath::log1p, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Log1pTests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @author Joseph D. Darcy\n@@ -298,1 +297,1 @@\n-                               StrictMath.pow(input1, input2), expected);\n+                               StrictMath::pow, expected);\n","filename":"test\/jdk\/java\/lang\/StrictMath\/PowTests.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,3 @@\n+import java.util.function.DoubleBinaryOperator;\n+import java.util.function.DoubleUnaryOperator;\n+\n@@ -25,2 +28,0 @@\n- *\n- *\n@@ -30,1 +31,0 @@\n-\n@@ -34,4 +34,11 @@\n-    static int test(String testName,\n-                    double input,\n-                    double result,\n-                    double expected) {\n+    public static int test(String testName,\n+                           double input,\n+                           DoubleUnaryOperator func,\n+                           double expected) {\n+        return test(testName, input, func.applyAsDouble(input), expected);\n+    }\n+\n+    public static int test(String testName,\n+                           double input,\n+                           double result,\n+                           double expected) {\n@@ -44,2 +51,1 @@\n-        }\n-        else\n+        } else {\n@@ -47,0 +53,9 @@\n+        }\n+    }\n+\n+    public static int test(String testName,\n+                           double input1,\n+                           double input2,\n+                           DoubleBinaryOperator func,\n+                           double expected) {\n+        return test(testName, input1, input2, func.applyAsDouble(input1, input2), expected);\n@@ -49,2 +64,2 @@\n-    static int test(String testName, double input1,  double input2,\n-                    double result, double expected) {\n+    public static int test(String testName, double input1, double input2,\n+                           double result, double expected) {\n@@ -58,2 +73,1 @@\n-        }\n-        else\n+        } else {\n@@ -61,0 +75,1 @@\n+        }\n","filename":"test\/jdk\/java\/lang\/StrictMath\/Tests.java","additions":29,"deletions":14,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n- * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 6G)\n- * @run main\/othervm -Xms5G -Xmx5G HugeCapacity\n+ * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 8G)\n+ * @run main\/othervm -Xms6G -Xmx6G HugeCapacity\n","filename":"test\/jdk\/java\/lang\/StringBuffer\/HugeCapacity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,3 +29,3 @@\n- * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 6G)\n- * @run main\/othervm -Xms5G -Xmx5G -XX:+CompactStrings HugeCapacity true\n- * @run main\/othervm -Xms5G -Xmx5G -XX:-CompactStrings HugeCapacity false\n+ * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 8G)\n+ * @run main\/othervm -Xms6G -Xmx6G -XX:+CompactStrings HugeCapacity true\n+ * @run main\/othervm -Xms6G -Xmx6G -XX:-CompactStrings HugeCapacity false\n","filename":"test\/jdk\/java\/lang\/StringBuilder\/HugeCapacity.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,2 @@\n-import java.lang.reflect.*;\n+import java.lang.reflect.Field;\n+import javax.lang.model.element.Modifier;\n@@ -163,0 +164,5 @@\n+        @ExpectedString(\n+       \"@EnumValue(NON_SEALED)\") \/\/ toString and name differ\n+        @EnumValue(Modifier.NON_SEALED)\n+        public int f00;\n+\n@@ -216,2 +222,2 @@\n-       \"@EnumArray({SOURCE})\")\n-        @EnumArray({RetentionPolicy.SOURCE})\n+       \"@EnumArray({SEALED, NON_SEALED, PUBLIC})\")\n+        @EnumArray({Modifier.SEALED, Modifier.NON_SEALED, Modifier.PUBLIC})\n@@ -226,0 +232,5 @@\n+@Retention(RetentionPolicy.RUNTIME)\n+@interface EnumValue {\n+    Modifier value();\n+}\n+\n@@ -288,1 +299,1 @@\n-    RetentionPolicy[] value();\n+    Modifier[] value();\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationToStringTest.java","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-            } else if (!e.foundType().equals(\"@\" + AnAnnotation.class.getName() + \"(\" + AnEnum.VALUE.name() + \")\")) {\n+            } else if (!e.foundType().equals(\"@\" + AnAnnotation.class.getCanonicalName() + \"(\" + AnEnum.VALUE.name() + \")\")) {\n","filename":"test\/jdk\/java\/lang\/annotation\/AnnotationTypeMismatchException\/EnumTypeMismatchTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -132,1 +132,1 @@\n-        \"[@TestConstructorParameterAnnotations$MarkerAnnotation(1)]]\")\n+        \"[@TestConstructorParameterAnnotations.MarkerAnnotation(1)]]\")\n@@ -135,1 +135,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(1)\"})\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(1)\"})\n@@ -142,1 +142,1 @@\n-        \"[@TestConstructorParameterAnnotations$MarkerAnnotation(2)], \" +\n+        \"[@TestConstructorParameterAnnotations.MarkerAnnotation(2)], \" +\n@@ -146,1 +146,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(2)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(2)\",\n@@ -155,1 +155,1 @@\n-        \"[@TestConstructorParameterAnnotations$MarkerAnnotation(3)], \" +\n+        \"[@TestConstructorParameterAnnotations.MarkerAnnotation(3)], \" +\n@@ -159,1 +159,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(3)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(3)\",\n@@ -168,1 +168,1 @@\n-        \"[@TestConstructorParameterAnnotations$MarkerAnnotation(4)], \" +\n+        \"[@TestConstructorParameterAnnotations.MarkerAnnotation(4)], \" +\n@@ -172,1 +172,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(4)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(4)\",\n@@ -186,1 +186,1 @@\n-        \"[[@TestConstructorParameterAnnotations$MarkerAnnotation(1)]]\")\n+        \"[[@TestConstructorParameterAnnotations.MarkerAnnotation(1)]]\")\n@@ -188,1 +188,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(1)\"})\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(1)\"})\n@@ -194,1 +194,1 @@\n-        \"[[@TestConstructorParameterAnnotations$MarkerAnnotation(2)], \" +\n+        \"[[@TestConstructorParameterAnnotations.MarkerAnnotation(2)], \" +\n@@ -197,1 +197,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(2)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(2)\",\n@@ -205,1 +205,1 @@\n-        \"[[@TestConstructorParameterAnnotations$MarkerAnnotation(3)], \" +\n+        \"[[@TestConstructorParameterAnnotations.MarkerAnnotation(3)], \" +\n@@ -208,1 +208,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(3)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(3)\",\n@@ -216,1 +216,1 @@\n-        \"[[@TestConstructorParameterAnnotations$MarkerAnnotation(4)], \" +\n+        \"[[@TestConstructorParameterAnnotations.MarkerAnnotation(4)], \" +\n@@ -219,1 +219,1 @@\n-        \"@TestConstructorParameterAnnotations$MarkerAnnotation(4)\",\n+        \"@TestConstructorParameterAnnotations.MarkerAnnotation(4)\",\n","filename":"test\/jdk\/java\/lang\/annotation\/TestConstructorParameterAnnotations.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -42,1 +42,2 @@\n-        testRunException();\n+        testRunException(TestClassException.class.getDeclaredMethod(\"foo\", (Class<?>[])null));\n+        testRunException(Outer2.TestClassException2.class.getDeclaredConstructor(Outer2.class));\n@@ -145,3 +146,2 @@\n-    private static void testRunException() throws Exception {\n-        Method m = TestClassException.class.getDeclaredMethod(\"foo\", (Class<?>[])null);\n-        AnnotatedType[] ts = m.getAnnotatedExceptionTypes();\n+    private static void testRunException(Executable e) throws Exception {\n+        AnnotatedType[] ts = e.getAnnotatedExceptionTypes();\n@@ -627,0 +627,9 @@\n+class Outer2 {\n+    abstract class TestClassException2 {\n+        public TestClassException2() throws\n+                @TypeAnno(\"RE\") @TypeAnno2(\"RE2\") RuntimeException,\n+                NullPointerException,\n+                @TypeAnno(\"AIOOBE\") ArrayIndexOutOfBoundsException {}\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/lang\/annotation\/TypeAnnotationReflection.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        assertEquals(Arrays.toString(x.getAnnotations()), \"[@GetAnnotatedNestedSuperclass$A()]\");\n+        assertEquals(Arrays.toString(x.getAnnotations()), \"[@GetAnnotatedNestedSuperclass.A()]\");\n@@ -72,1 +72,1 @@\n-                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass$B()]\");\n+                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass.B()]\");\n@@ -77,1 +77,1 @@\n-                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass$C()]\");\n+                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass.C()]\");\n@@ -82,1 +82,1 @@\n-                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass$D()]\");\n+                    Arrays.toString(arg.getAnnotations()), \"[@GetAnnotatedNestedSuperclass.D()]\");\n@@ -87,1 +87,1 @@\n-                    \"[@GetAnnotatedNestedSuperclass$E()]\");\n+                    \"[@GetAnnotatedNestedSuperclass.E()]\");\n@@ -91,1 +91,1 @@\n-    private static void assertEquals(Object expected, Object actual) {\n+    private static void assertEquals(Object actual, Object expected) {\n","filename":"test\/jdk\/java\/lang\/annotation\/typeAnnotations\/GetAnnotatedNestedSuperclass.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(1)\"})\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(1)\"})\n@@ -139,1 +139,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(2)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(2)\",\n@@ -149,1 +149,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(3)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(3)\",\n@@ -159,1 +159,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(4)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(4)\",\n@@ -174,1 +174,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(1)\"})\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(1)\"})\n@@ -181,1 +181,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(2)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(2)\",\n@@ -190,1 +190,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(3)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(3)\",\n@@ -199,1 +199,1 @@\n-        \"@TestConstructorParameterTypeAnnotations$MarkerTypeAnnotation(4)\",\n+        \"@TestConstructorParameterTypeAnnotations.MarkerTypeAnnotation(4)\",\n","filename":"test\/jdk\/java\/lang\/annotation\/typeAnnotations\/TestConstructorParameterTypeAnnotations.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-    private static final Pattern annotationRegex = Pattern.compile(\"@TestObjectMethods\\\\$AnnotType\\\\((\\\\p{Digit})+\\\\)\");\n+    private static final Pattern annotationRegex = Pattern.compile(\"@TestObjectMethods\\\\.AnnotType\\\\((\\\\p{Digit})+\\\\)\");\n","filename":"test\/jdk\/java\/lang\/annotation\/typeAnnotations\/TestObjectMethods.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2020, 2022, Red Hat, Inc. All rights reserved.\n@@ -267,0 +267,30 @@\n+\/*\n+ * @test\n+ * @summary Test for fInst.getObjectSize with large arrays\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @requires vm.debug\n+ * @requires os.maxMemory >= 10G\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run build GetObjectSizeIntrinsicsTest\n+ * @run shell MakeJAR.sh basicAgent\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm -Xmx8g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xint\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest large\n+ *\n+ * @run main\/othervm -Xmx8g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xbatch -XX:TieredStopAtLevel=1\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest large\n+ *\n+ * @run main\/othervm -Xmx8g\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -Xbatch -XX:-TieredCompilation\n+ *                   -javaagent:basicAgent.jar GetObjectSizeIntrinsicsTest GetObjectSizeIntrinsicsTest large\n+ *\/\n+\n@@ -274,2 +304,2 @@\n-    static final Boolean compressedOops = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedOops\");\n-    static final int REF_SIZE = (compressedOops == null || compressedOops == true) ?  4 : 8;\n+    static final Boolean COMPRESSED_OOPS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedOops\");\n+    static final long REF_SIZE = (COMPRESSED_OOPS == null || COMPRESSED_OOPS == true) ? 4 : 8;\n@@ -280,1 +310,9 @@\n-    public GetObjectSizeIntrinsicsTest(String name) {\n+    static final int SMALL_ARRAY_SIZE = 1024;\n+\n+    \/\/ These should overflow 4G size boundary\n+    static final int LARGE_INT_ARRAY_SIZE = 1024*1024*1024 + 1024;\n+    static final int LARGE_OBJ_ARRAY_SIZE = (4096\/(int)REF_SIZE)*1024*1024 + 1024;\n+\n+    final String mode;\n+\n+    public GetObjectSizeIntrinsicsTest(String name, String mode) {\n@@ -282,0 +320,1 @@\n+        this.mode = mode;\n@@ -285,1 +324,1 @@\n-        new GetObjectSizeIntrinsicsTest(args[0]).runTest();\n+        new GetObjectSizeIntrinsicsTest(args[0], (args.length >= 2 ? args[1] : \"\")).runTest();\n@@ -315,3 +354,3 @@\n-        testSize_newSmallByteArray();\n-        testSize_localSmallByteArray();\n-        testSize_fieldSmallByteArray();\n+        testSize_newSmallIntArray();\n+        testSize_localSmallIntArray();\n+        testSize_fieldSmallIntArray();\n@@ -323,0 +362,5 @@\n+        if (mode.equals(\"large\")) {\n+            testSize_localLargeIntArray();\n+            testSize_localLargeObjArray();\n+        }\n+\n@@ -326,1 +370,1 @@\n-    private static int roundUp(int v, int a) {\n+    private static long roundUp(long v, long a) {\n@@ -331,1 +375,1 @@\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n+        long expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n@@ -338,1 +382,1 @@\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n+        long expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n@@ -348,1 +392,1 @@\n-        int expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n+        long expected = roundUp(Platform.is64bit() ? 16 : 8, OBJ_ALIGN);\n@@ -354,2 +398,2 @@\n-    private void testSize_newSmallByteArray() {\n-        int expected = roundUp(1024 + 16, OBJ_ALIGN);\n+    private void testSize_newSmallIntArray() {\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -357,1 +401,1 @@\n-            assertEquals(expected, fInst.getObjectSize(new byte[1024]));\n+            assertEquals(expected, fInst.getObjectSize(new int[SMALL_ARRAY_SIZE]));\n@@ -361,3 +405,3 @@\n-    private void testSize_localSmallByteArray() {\n-        byte[] arr = new byte[1024];\n-        int expected = roundUp(arr.length + 16, OBJ_ALIGN);\n+    private void testSize_localSmallIntArray() {\n+        int[] arr = new int[SMALL_ARRAY_SIZE];\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -369,1 +413,1 @@\n-    static byte[] smallArr = new byte[1024];\n+    static int[] smallArr = new int[SMALL_ARRAY_SIZE];\n@@ -371,2 +415,2 @@\n-    private void testSize_fieldSmallByteArray() {\n-        int expected = roundUp(smallArr.length + 16, OBJ_ALIGN);\n+    private void testSize_fieldSmallIntArray() {\n+        long expected = roundUp(4L*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -379,1 +423,1 @@\n-        int expected = roundUp(1024*REF_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -381,1 +425,1 @@\n-            assertEquals(expected, fInst.getObjectSize(new Object[1024]));\n+            assertEquals(expected, fInst.getObjectSize(new Object[SMALL_ARRAY_SIZE]));\n@@ -386,2 +430,2 @@\n-        Object[] arr = new Object[1024];\n-        int expected = roundUp(arr.length*REF_SIZE + 16, OBJ_ALIGN);\n+        Object[] arr = new Object[SMALL_ARRAY_SIZE];\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -393,1 +437,1 @@\n-    static Object[] smallObjArr = new Object[1024];\n+    static Object[] smallObjArr = new Object[SMALL_ARRAY_SIZE];\n@@ -396,1 +440,1 @@\n-        int expected = roundUp(smallArr.length*REF_SIZE + 16, OBJ_ALIGN);\n+        long expected = roundUp(REF_SIZE*SMALL_ARRAY_SIZE + 16, OBJ_ALIGN);\n@@ -402,0 +446,16 @@\n+    private void testSize_localLargeIntArray() {\n+        int[] arr = new int[LARGE_INT_ARRAY_SIZE];\n+        long expected = roundUp(4L*LARGE_INT_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(arr));\n+        }\n+    }\n+\n+    private void testSize_localLargeObjArray() {\n+        Object[] arr = new Object[LARGE_OBJ_ARRAY_SIZE];\n+        long expected = roundUp(REF_SIZE*LARGE_OBJ_ARRAY_SIZE + 16, OBJ_ALIGN);\n+        for (int c = 0; c < ITERS; c++) {\n+            assertEquals(expected, fInst.getObjectSize(arr));\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/lang\/instrument\/GetObjectSizeIntrinsicsTest.java","additions":87,"deletions":27,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -0,0 +1,256 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8240908\n+ *\n+ * @library \/test\/lib\n+ * @run compile -g -parameters RetransformWithMethodParametersTest.java\n+ * @run shell MakeJAR.sh retransformAgent\n+ *\n+ * @run main\/othervm -javaagent:retransformAgent.jar RetransformWithMethodParametersTest\n+ *\/\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.lang.instrument.ClassFileTransformer;\n+import java.lang.reflect.Executable;\n+import java.lang.reflect.Parameter;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.security.ProtectionDomain;\n+import java.util.Arrays;\n+\n+import jdk.test.lib.JDKToolLauncher;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.util.ClassTransformer;\n+\n+\/*\n+ * The test verifies Instrumentation.retransformClasses() (and JVMTI function RetransformClasses)\n+ * correctly handles MethodParameter attribute:\n+ * 1) classfile bytes passed to transformers (and JVMTI ClassFileLoadHook event callback) contain the attribute;\n+ * 2) the attribute is updated if new version has the attribute with different values;\n+ * 3) the attribute is removed if new version doesn't contain the attribute.\n+ *\/\n+\n+\/\/ See ClassTransformer.transform(int) comment for @1 tag explanations.\n+class MethodParametersTarget {\n+    \/\/ The class contains the only method, so we don't have issue with method sorting\n+    \/\/ and ClassFileReconstituter should restore the same bytes as original classbytes.\n+    \/\/ This method should be ctor, otherwise default ctor will be implicitly declared.\n+    public MethodParametersTarget(\n+            int intParam1, String stringParam1 \/\/ @1 commentout\n+            \/\/ @1 uncomment   int intParam2, String stringParam2\n+            )\n+    {\n+        \/\/ @1 uncomment System.out.println(stringParam2);   \/\/ change CP\n+    }\n+}\n+\n+public class RetransformWithMethodParametersTest extends ATransformerManagementTestCase {\n+\n+    public static void main (String[] args) throws Throwable {\n+        ATestCaseScaffold test = new RetransformWithMethodParametersTest();\n+        test.runTest();\n+    }\n+\n+    private String targetClassName = \"MethodParametersTarget\";\n+    private String classFileName = targetClassName + \".class\";\n+    private String sourceFileName = \"RetransformWithMethodParametersTest.java\";\n+    private Class targetClass;\n+    private byte[] originalClassBytes;\n+\n+    private byte[] seenClassBytes;\n+    private byte[] newClassBytes;\n+\n+    public RetransformWithMethodParametersTest() throws Throwable {\n+        super(\"RetransformWithMethodParametersTest\");\n+\n+        File origClassFile = new File(System.getProperty(\"test.classes\", \".\"), classFileName);\n+        log(\"Reading test class from \" + origClassFile);\n+        originalClassBytes = Files.readAllBytes(origClassFile.toPath());\n+        log(\"Read \" + originalClassBytes.length + \" bytes.\");\n+    }\n+\n+    private void log(Object o) {\n+        System.out.println(String.valueOf(o));\n+    }\n+\n+    private Parameter[] getTargetMethodParameters() throws ClassNotFoundException {\n+        Class cls = Class.forName(targetClassName);\n+        \/\/ the class contains 1 method (ctor)\n+        Executable method = cls.getDeclaredConstructors()[0];\n+        Parameter[] params = method.getParameters();\n+        log(\"Params of \" + method.getName() + \" method (\" + params.length + \"):\");\n+        for (int i = 0; i < params.length; i++) {\n+            log(\"  \" + i + \": \" + params[i].getName()\n+                    + \" (\" + (params[i].isNamePresent() ? \"present\" : \"absent\") + \")\");\n+        }\n+        return params;\n+    }\n+\n+    \/\/ Verifies MethodParameters attribute is present and contains the expected values.\n+    private void verifyPresentMethodParams(String... expectedNames) throws Throwable {\n+        Parameter[] params = getTargetMethodParameters();\n+        assertEquals(expectedNames.length, params.length);\n+        for (int i = 0; i < params.length; i++) {\n+            assertTrue(params[i].isNamePresent());\n+            assertEquals(expectedNames[i], params[i].getName());\n+        }\n+    }\n+\n+    \/\/ Verifies MethodParameters attribute is absent.\n+    private void verifyAbsentMethodParams() throws Throwable {\n+        Parameter[] params = getTargetMethodParameters();\n+        for (int i = 0; i < params.length; i++) {\n+            assertTrue(!params[i].isNamePresent());\n+        }\n+    }\n+\n+    \/\/ Retransforms target class using provided class bytes;\n+    \/\/ Returns class bytes passed to the transformer.\n+    private byte[] retransform(byte[] classBytes) throws Throwable {\n+        seenClassBytes = null;\n+        newClassBytes = classBytes;\n+        fInst.retransformClasses(targetClass);\n+        assertTrue(targetClassName + \" was not seen by transform()\", seenClassBytes != null);\n+        return seenClassBytes;\n+    }\n+\n+    \/\/ Prints dissassembled class bytes.\n+    private void printDisassembled(String description, byte[] bytes) throws Exception {\n+        log(description + \" -------------------\");\n+\n+        File f = new File(classFileName);\n+        try (FileOutputStream fos = new FileOutputStream(f)) {\n+            fos.write(bytes);\n+        }\n+        JDKToolLauncher javap = JDKToolLauncher.create(\"javap\")\n+                .addToolArg(\"-verbose\")\n+                .addToolArg(\"-p\")       \/\/ Shows all classes and members.\n+                \/\/.addToolArg(\"-c\")       \/\/ Prints out disassembled code\n+                \/\/.addToolArg(\"-s\")       \/\/ Prints internal type signatures.\n+                .addToolArg(f.toString());\n+        ProcessBuilder pb = new ProcessBuilder(javap.getCommand());\n+        OutputAnalyzer out = ProcessTools.executeProcess(pb);\n+        out.shouldHaveExitValue(0);\n+        try {\n+            Files.delete(f.toPath());\n+        } catch (Exception ex) {\n+            \/\/ ignore\n+        }\n+        out.asLines().forEach(s -> log(s));\n+        log(\"==========================================\");\n+    }\n+\n+    \/\/ Verifies class bytes are equal.\n+    private void compareClassBytes(byte[] expected, byte[] actual) throws Exception {\n+\n+        int pos = Arrays.mismatch(expected, actual);\n+        if (pos < 0) {\n+            log(\"Class bytes are identical.\");\n+            return;\n+        }\n+        log(\"Class bytes are different.\");\n+        printDisassembled(\"expected\", expected);\n+        printDisassembled(\"actual\", actual);\n+        fail(targetClassName + \" did not match .class file\");\n+    }\n+\n+    protected final void doRunTest() throws Throwable {\n+        beVerbose();\n+\n+        ClassLoader loader = getClass().getClassLoader();\n+        targetClass = loader.loadClass(targetClassName);\n+        \/\/ sanity check\n+        assertEquals(targetClassName, targetClass.getName());\n+        \/\/ sanity check\n+        verifyPresentMethodParams(\"intParam1\", \"stringParam1\");\n+\n+        addTransformerToManager(fInst, new Transformer(), true);\n+\n+        {\n+            log(\"Testcase 1: ensure ClassFileReconstituter restores MethodParameters attribute\");\n+\n+            byte[] classBytes = retransform(null);\n+            compareClassBytes(originalClassBytes, classBytes);\n+\n+            log(\"\");\n+        }\n+\n+        {\n+            log(\"Testcase 2: redefine class with changed parameter names\");\n+\n+            byte[] classBytes = Files.readAllBytes(Paths.get(\n+                    ClassTransformer.fromTestSource(sourceFileName)\n+                            .transform(1, targetClassName, \"-g\", \"-parameters\")));\n+            retransform(classBytes);\n+            \/\/ MethodParameters attribute should be updated.\n+            verifyPresentMethodParams(\"intParam2\", \"stringParam2\");\n+\n+            log(\"\");\n+        }\n+\n+        {\n+            log(\"Testcase 3: redefine class with no parameter names\");\n+            \/\/ compile without \"-parameters\"\n+            byte[] classBytes = Files.readAllBytes(Paths.get(\n+                    ClassTransformer.fromTestSource(sourceFileName)\n+                            .transform(1, targetClassName, \"-g\")));\n+            retransform(classBytes);\n+            \/\/ MethodParameters attribute should be dropped.\n+            verifyAbsentMethodParams();\n+\n+            log(\"\");\n+        }\n+    }\n+\n+\n+    public class Transformer implements ClassFileTransformer {\n+        public Transformer() {\n+        }\n+\n+        public String toString() {\n+            return Transformer.this.getClass().getName();\n+        }\n+\n+        public byte[] transform(ClassLoader loader, String className,\n+            Class<?> classBeingRedefined, ProtectionDomain protectionDomain, byte[] classfileBuffer) {\n+\n+            if (className.equals(targetClassName)) {\n+                log(this + \".transform() sees '\" + className\n+                        + \"' of \" + classfileBuffer.length + \" bytes.\");\n+                seenClassBytes = classfileBuffer;\n+                if (newClassBytes != null) {\n+                    log(this + \".transform() sets new classbytes for '\" + className\n+                            + \"' of \" + newClassBytes.length + \" bytes.\");\n+                }\n+                return newClassBytes;\n+            }\n+\n+            return null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformWithMethodParametersTest.java","additions":256,"deletions":0,"binary":false,"changes":256,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8280377\n+ * @build m1\/* m2\/* Unnamed\n+ * @run testng\/othervm m1\/p1.Main\n+ * @run testng\/othervm Unnamed\n+ * @summary Test MethodHandleProxies::asInterfaceInstance with a default\n+ *          method with varargs\n+ *\/\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/Driver.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/MethodHandlesProxiesTest.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/lang\/invoke\/MethodHandlesProxiesTest.java","status":"renamed"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandleProxies;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.reflect.Method;\n+\n+import static org.testng.Assert.*;\n+\n+\/*\n+ * Test MethodHandleProxies::asInterfaceInstance with an inaccessible interface\n+ *\/\n+public class Unnamed {\n+    public static void main(String... args) throws Throwable {\n+        MethodHandle target = MethodHandles.constant(String.class, \"test\");\n+        Class<?> intf = Class.forName(\"p2.TestIntf\");\n+        Object t = MethodHandleProxies.asInterfaceInstance(intf, target);\n+\n+        \/\/ verify that the caller has no access to the proxy created on an\n+        \/\/ inaccessible interface\n+        Method m = intf.getMethod(\"test\", Object[].class);\n+        assertFalse(m.canAccess(null));\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/Unnamed.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module m1 {\n+    requires m2;\n+    requires org.testng;\n+    exports p1;\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/m1\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p1;\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandleProxies;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n+import p2.TestIntf;\n+\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.*;\n+\n+public class Main {\n+    public interface A {\n+        default String aConcat(Object... objs) { return Arrays.deepToString(objs); }\n+    }\n+\n+    public interface B {\n+        default String bConcat(Object[] objs) { return Arrays.deepToString(objs); }\n+    }\n+\n+    public interface C extends A, B {\n+        String c(Object... objs);\n+    }\n+\n+    private static String concat(Object... objs) {\n+        return Arrays.stream(objs).map(Object::toString).collect(Collectors.joining());\n+    }\n+\n+    \/*\n+     * Test the invocation of default methods with varargs\n+     *\/\n+    @Test\n+    public static void testVarargsMethods() throws Throwable {\n+        MethodHandle target = MethodHandles.lookup().findStatic(Main.class,\n+                \"concat\", MethodType.methodType(String.class, Object[].class));\n+        C proxy = MethodHandleProxies.asInterfaceInstance(C.class, target);\n+\n+        assertEquals(proxy.c(\"a\", \"b\", \"c\"), \"abc\");\n+        assertEquals(proxy.aConcat(\"a\", \"b\", \"c\"), \"[a, b, c]\");\n+        assertEquals(proxy.aConcat(new Object[] { \"a\", \"b\", \"c\" }), \"[a, b, c]\");\n+        assertEquals(proxy.bConcat(new Object[] { \"a\", \"b\", \"c\" }), \"[a, b, c]\");\n+    }\n+\n+    \/*\n+     * Test the invocation of a default method of an accessible interface\n+     *\/\n+    @Test\n+    public static void modulePrivateInterface() {\n+        MethodHandle target = MethodHandles.constant(String.class, \"test\");\n+        TestIntf t = MethodHandleProxies.asInterfaceInstance(TestIntf.class, target);\n+        assertEquals(t.test(), \"test\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/m1\/p1\/Main.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module m2 {\n+    exports p2 to m1;\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/m2\/module-info.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package p2;\n+\n+public interface TestIntf {\n+    String test();\n+}\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandleProxies\/m2\/p2\/TestIntf.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8281003\n+ * @summary Test uses custom launcher that starts VM using JNI that verifies\n+ *          MethodHandles::lookup with null caller class throws an IllegalCallerException.\n+ * @library \/test\/lib\n+ * @requires os.family != \"aix\"\n+ * @run main\/native NullCallerLookupTest\n+ *\/\n+\n+\/\/ Test disabled on AIX since we cannot invoke the JVM on the primordial thread.\n+\n+import java.io.File;\n+import java.util.Map;\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+public class NullCallerLookupTest {\n+    public static void main(String[] args) throws IOException {\n+        Path launcher = Path.of(System.getProperty(\"test.nativepath\"), \"NullCallerLookupTest\");\n+        ProcessBuilder pb = new ProcessBuilder(launcher.toString());\n+        Map<String, String> env = pb.environment();\n+\n+        String libDir = Platform.libDir().toString();\n+        String vmDir = Platform.jvmLibDir().toString();\n+\n+        \/\/ set up shared library path\n+        String sharedLibraryPathEnvName = Platform.sharedLibraryPathVariableName();\n+        env.compute(sharedLibraryPathEnvName,\n+                    (k, v) -> (v == null) ? libDir : v + File.pathSeparator + libDir);\n+        env.compute(sharedLibraryPathEnvName,\n+                    (k, v) -> (v == null) ? vmDir : v + File.pathSeparator + vmDir);\n+\n+        System.out.println(\"Launching: \" + launcher + \" shared library path: \" +\n+                           env.get(sharedLibraryPathEnvName));\n+        new OutputAnalyzer(pb.start())\n+                .outputTo(System.out)\n+                .errorTo(System.err)\n+                .shouldHaveExitValue(0);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/exeNullCallerLookup\/NullCallerLookupTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+#include \"jni.h\"\n+#include \"assert.h\"\n+\n+static jclass class_IllegalCallerException;\n+\n+int checkAndClearIllegalCallerExceptionThrown(JNIEnv *env) {\n+    jthrowable t = (*env)->ExceptionOccurred(env);\n+    if ((*env)->IsInstanceOf(env, t, class_IllegalCallerException) == JNI_TRUE) {\n+        (*env)->ExceptionClear(env);\n+        return JNI_TRUE;\n+    }\n+    return JNI_FALSE;\n+}\n+\n+int main(int argc, char** args) {\n+    JavaVM *jvm;\n+    JNIEnv *env;\n+    JavaVMInitArgs vm_args;\n+    JavaVMOption options[1];\n+    jint rc;\n+\n+\n+    vm_args.version = JNI_VERSION_1_2;\n+    vm_args.nOptions = 0;\n+    vm_args.options = options;\n+\n+    if ((rc = JNI_CreateJavaVM(&jvm, (void**)&env, &vm_args)) != JNI_OK) {\n+        printf(\"ERROR: cannot create VM.\\n\");\n+        exit(-1);\n+    }\n+    class_IllegalCallerException = (*env)->FindClass(env, \"java\/lang\/IllegalCallerException\");\n+    assert (class_IllegalCallerException != NULL);\n+\n+    \/\/ call MethodHandles.lookup()\n+    jclass methodHandlesClass = (*env)->FindClass(env, \"java\/lang\/invoke\/MethodHandles\");\n+    assert(methodHandlesClass != NULL);\n+    jmethodID mid_MethodHandles_lookup = (*env)->GetStaticMethodID(env, methodHandlesClass, \"lookup\", \"()Ljava\/lang\/invoke\/MethodHandles$Lookup;\" );\n+    assert(mid_MethodHandles_lookup != NULL);\n+    jobject l = (*env)->CallStaticObjectMethod(env, methodHandlesClass, mid_MethodHandles_lookup );\n+    if ((rc = checkAndClearIllegalCallerExceptionThrown(env)) != JNI_TRUE) {\n+        printf(\"ERROR: Didn't get the expected IllegalCallerException.\\n\");\n+        exit(-1);\n+    }\n+\n+    printf(\"Expected IllegalCallerException was thrown\\n\");\n+\n+    (*jvm)->DestroyJavaVM(jvm);\n+    return 0;\n+}\n+\n","filename":"test\/jdk\/java\/lang\/invoke\/MethodHandles\/exeNullCallerLookup\/exeNullCallerLookupTest.c","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 8221530\n+ * @bug 8221530 8221642\n@@ -64,1 +64,4 @@\n-        new OutputAnalyzer(pb.start()).shouldHaveExitValue(0);\n+        new OutputAnalyzer(pb.start())\n+                .outputTo(System.out)\n+                .errorTo(System.err)\n+                .shouldHaveExitValue(0);\n","filename":"test\/jdk\/java\/lang\/reflect\/exeCallerAccessTest\/CallerAccessTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,3 @@\n+static jmethodID mid_Field_canAccess;\n+static jmethodID mid_Field_trySetAccessible;\n+static jmethodID mid_Field_setAccessible;\n@@ -38,0 +41,3 @@\n+int setAccessible(JNIEnv *env, char* declaringClass_name, char* field_name);\n+int trySetAccessible(JNIEnv *env, char* declaringClass_name, char* field_name, jboolean canAccess);\n+int checkAccess(JNIEnv *env, char* declaringClass_name, char* field_name, jboolean canAccess);\n@@ -68,0 +74,6 @@\n+    mid_Field_canAccess = (*env)->GetMethodID(env, fieldClass, \"canAccess\", \"(Ljava\/lang\/Object;)Z\");\n+    assert(mid_Field_canAccess != NULL);\n+    mid_Field_setAccessible = (*env)->GetMethodID(env, fieldClass, \"setAccessible\", \"(Z)V\");\n+    assert(mid_Field_setAccessible != NULL);\n+    mid_Field_trySetAccessible = (*env)->GetMethodID(env, fieldClass, \"trySetAccessible\", \"()Z\");\n+    assert(mid_Field_trySetAccessible != NULL);\n@@ -95,0 +107,26 @@\n+    \/\/ expect IAE to jdk.internal.misc.Unsafe class\n+    if ((rc = setAccessible(env, \"jdk.internal.misc.Unsafe\", \"INVALID_FIELD_OFFSET\")) == 0) {\n+        printf(\"ERROR: IAE not thrown\\n\");\n+        exit(-1);\n+    }\n+    if (checkAndClearIllegalAccessExceptionThrown(env) != JNI_TRUE) {\n+        printf(\"ERROR: exception is not an instance of IAE\\n\");\n+        exit(-1);\n+    }\n+\n+    if ((rc = trySetAccessible(env, \"java.lang.reflect.Modifier\", \"PUBLIC\", JNI_TRUE)) != 0) {\n+        printf(\"ERROR: unexpected result from trySetAccessible on Modifier::PUBLIC field\\n\");\n+        exit(-1);\n+    }\n+    if ((rc = trySetAccessible(env, \"jdk.internal.misc.Unsafe\", \"INVALID_FIELD_OFFSET\", JNI_FALSE)) != 0) {\n+        printf(\"ERROR: unexpected result from trySetAccessible on Unsafe public field\\n\");\n+        exit(-1);\n+    }\n+\n+    if ((rc = checkAccess(env, \"java.lang.reflect.Modifier\", \"PUBLIC\", JNI_TRUE)) != 0) {\n+        printf(\"ERROR: unexpected result from trySetAccessible on Modifier::PUBLIC field\\n\");\n+        exit(-1);\n+    }\n+    if ((rc = checkAccess(env, \"jdk.internal.misc.Unsafe\", \"INVALID_FIELD_OFFSET\", JNI_FALSE)) != 0) {\n+        printf(\"ERROR: unexpected result from trySetAccessible on Unsafe public field\\n\");\n+    }\n@@ -130,0 +168,71 @@\n+int setAccessible(JNIEnv *env, char* declaringClass_name, char* field_name) {\n+    jobject c = (*env)->CallStaticObjectMethod(env, classClass, mid_Class_forName,\n+                                               (*env)->NewStringUTF(env, declaringClass_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 1;\n+    }\n+\n+    jobject f = (*env)->CallObjectMethod(env, c, mid_Class_getField, (*env)->NewStringUTF(env, field_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 2;\n+    }\n+\n+    (*env)->CallVoidMethod(env, f, mid_Field_setAccessible, JNI_TRUE);\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 3;\n+    }\n+    return 0;\n+}\n+\n+int trySetAccessible(JNIEnv *env, char* declaringClass_name, char* field_name, jboolean canAccess) {\n+    jobject c = (*env)->CallStaticObjectMethod(env, classClass, mid_Class_forName,\n+                                               (*env)->NewStringUTF(env, declaringClass_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 1;\n+    }\n+\n+    jobject f = (*env)->CallObjectMethod(env, c, mid_Class_getField, (*env)->NewStringUTF(env, field_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 2;\n+    }\n+\n+    jboolean rc = (*env)->CallBooleanMethod(env, f, mid_Field_trySetAccessible);\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 3;\n+    }\n+    if (rc != canAccess) {\n+        return 4;\n+    }\n+    return 0;\n+}\n+\n+int checkAccess(JNIEnv *env, char* declaringClass_name, char* field_name, jboolean canAccess) {\n+    jobject c = (*env)->CallStaticObjectMethod(env, classClass, mid_Class_forName,\n+                                               (*env)->NewStringUTF(env, declaringClass_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 1;\n+    }\n+\n+    jobject f = (*env)->CallObjectMethod(env, c, mid_Class_getField, (*env)->NewStringUTF(env, field_name));\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 2;\n+    }\n+\n+    jboolean rc = (*env)->CallBooleanMethod(env, f, mid_Field_canAccess, NULL);\n+    if ((*env)->ExceptionOccurred(env) != NULL) {\n+        (*env)->ExceptionDescribe(env);\n+        return 3;\n+    }\n+    if (rc != canAccess) {\n+        return 4;\n+    }\n+    return 0;\n+}\n","filename":"test\/jdk\/java\/lang\/reflect\/exeCallerAccessTest\/exeCallerAccessTest.c","additions":110,"deletions":1,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,1 +165,1 @@\n-        assertEquals(annos[0].toString(), \"@RecordReflectionTest$RCA()\");\n+        assertEquals(annos[0].toString(), \"@RecordReflectionTest.RCA()\");\n@@ -184,1 +184,1 @@\n-        assertEquals(annos[0].toString(), \"@RecordReflectionTest$TYPE_USE()\");\n+        assertEquals(annos[0].toString(), \"@RecordReflectionTest.TYPE_USE()\");\n","filename":"test\/jdk\/java\/lang\/reflect\/records\/RecordReflectionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run main BigIntegerParallelMultiplyTest\n+ * @summary tests parallelMultiply() method in BigInteger\n+ * @author Heinz Kabutz heinz@javaspecialists.eu\n+ *\/\n+\n+import java.math.BigInteger;\n+import java.util.function.BinaryOperator;\n+\n+\/**\n+ * This is a simple test class created to ensure that the results\n+ * of multiply() are the same as multiplyParallel(). We calculate\n+ * the Fibonacci numbers using Dijkstra's sum of squares to get\n+ * very large numbers (hundreds of thousands of bits).\n+ *\n+ * @author Heinz Kabutz, heinz@javaspecialists.eu\n+ *\/\n+public class BigIntegerParallelMultiplyTest {\n+    public static BigInteger fibonacci(int n, BinaryOperator<BigInteger> multiplyOperator) {\n+        if (n == 0) return BigInteger.ZERO;\n+        if (n == 1) return BigInteger.ONE;\n+\n+        int half = (n + 1) \/ 2;\n+        BigInteger f0 = fibonacci(half - 1, multiplyOperator);\n+        BigInteger f1 = fibonacci(half, multiplyOperator);\n+        if (n % 2 == 1) {\n+            BigInteger b0 = multiplyOperator.apply(f0, f0);\n+            BigInteger b1 = multiplyOperator.apply(f1, f1);\n+            return b0.add(b1);\n+        } else {\n+            BigInteger b0 = f0.shiftLeft(1).add(f1);\n+            return multiplyOperator.apply(b0, f1);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        compare(1000, 324);\n+        compare(10_000, 3473);\n+        compare(100_000, 34883);\n+        compare(1_000_000, 347084);\n+    }\n+\n+    private static void compare(int n, int expectedBitCount) {\n+        BigInteger multiplyResult = fibonacci(n, BigInteger::multiply);\n+        BigInteger parallelMultiplyResult = fibonacci(n, BigInteger::parallelMultiply);\n+        checkBitCount(n, expectedBitCount, multiplyResult);\n+        checkBitCount(n, expectedBitCount, parallelMultiplyResult);\n+        if (!multiplyResult.equals(parallelMultiplyResult))\n+            throw new AssertionError(\"multiply() and parallelMultiply() give different results\");\n+    }\n+\n+    private static void checkBitCount(int n, int expectedBitCount, BigInteger number) {\n+        if (number.bitCount() != expectedBitCount)\n+            throw new AssertionError(\n+                    \"bitCount of fibonacci(\" + n + \") was expected to be \" + expectedBitCount\n+                            + \" but was \" + number.bitCount());\n+    }\n+}\n","filename":"test\/jdk\/java\/math\/BigInteger\/BigIntegerParallelMultiplyTest.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n- * @build Http2TestServer LineBodyHandlerTest HttpServerAdapters\n+ * @build Http2TestServer LineBodyHandlerTest HttpServerAdapters ReferenceTracker\n@@ -104,0 +104,4 @@\n+    final ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n+    final AtomicInteger clientCount = new AtomicInteger();\n+    HttpClient sharedClient;\n+\n@@ -192,1 +196,5 @@\n-        return HttpClient.newBuilder()\n+        if (sharedClient != null) {\n+            return sharedClient;\n+        }\n+        clientCount.incrementAndGet();\n+        return sharedClient = TRACKER.track(HttpClient.newBuilder()\n@@ -195,1 +203,1 @@\n-                .build();\n+                .build());\n@@ -698,0 +706,10 @@\n+        sharedClient = null;\n+        try {\n+            System.gc();\n+            Thread.sleep(200);\n+        } catch (InterruptedException io) {\n+            \/\/ don't care;\n+        }\n+        AssertionError fail = TRACKER.check(500);\n+        System.out.printf(\"Tear down: %s client created.%n\", clientCount.get());\n+        System.err.printf(\"Tear down: %s client created.%n\", clientCount.get());\n@@ -702,0 +720,1 @@\n+        if (fail != null) throw fail;\n","filename":"test\/jdk\/java\/net\/httpclient\/LineBodyHandlerTest.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- *\n+ * @bug 8280642\n@@ -51,0 +51,1 @@\n+import java.io.InvalidClassException;\n@@ -208,1 +209,1 @@\n-            IllegalAccessError illegal = null;\n+            InvalidClassException invalid = null;\n@@ -212,2 +213,2 @@\n-            } catch (IllegalAccessError e) {\n-                illegal = e;\n+            } catch (InvalidClassException e) {\n+                invalid = e;\n@@ -216,2 +217,2 @@\n-            if (illegal == null) {\n-                TestLibrary.bomb(\"case4: IllegalAccessError not thrown \" +\n+            if (invalid == null) {\n+                TestLibrary.bomb(\"case4: InvalidClassException not thrown \" +\n@@ -221,1 +222,1 @@\n-                System.err.println(\"\\ncase4: IllegalAccessError correctly \" +\n+                System.err.println(\"\\ncase4: InvalidClassException correctly \" +\n","filename":"test\/jdk\/java\/rmi\/server\/RMIClassLoader\/loadProxyClasses\/LoadProxyClasses.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+public class CustomClassLoader extends ClassLoader {\n+\n+    public CustomClassLoader(ClassLoader parent) {\n+        super(parent);\n+    }\n+\n+    @Override\n+    public Class<?> findClass(String name) throws ClassNotFoundException {\n+        try (InputStream is = getClass().getClassLoader()\n+                .getResourceAsStream(name + \".class\")) {\n+            byte[] buf = is.readAllBytes();\n+            return defineClass(name, buf, 0, buf.length);\n+        } catch (IOException e) {\n+            throw new ClassNotFoundException(e.getMessage());\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/SignedJar\/CustomClassLoader.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8280890\n+ * @library \/test\/lib\n+ * @build SignedJarWithCustomClassLoader CustomClassLoader\n+ * @run main\/othervm SignedJarWithCustomClassLoader\n+ * @summary Make sure java.system.class.loader property can be used when custom\n+ *     class loader is inside signed jar\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.compiler.InMemoryJavaCompiler;\n+import jdk.test.lib.helpers.ClassFileInstaller;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+public class SignedJarWithCustomClassLoader {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        \/\/ compile the Main program\n+        String main = \"\"\"\n+                      public class Main {\n+                          public static void main(String[] args) {}\n+                      }\n+                      \"\"\";\n+        String testClasses = System.getProperty(\"test.classes\", \"\");\n+        ClassFileInstaller.writeClassToDisk(\"Main\",\n+             InMemoryJavaCompiler.compile(\"Main\", main),\n+             testClasses);\n+\n+        \/\/ create the jar file\n+        Path classes = Paths.get(testClasses);\n+        JarUtils.createJarFile(Paths.get(\"test.jar\"), classes,\n+            classes.resolve(\"CustomClassLoader.class\"),\n+            classes.resolve(\"Main.class\"));\n+\n+        \/\/ create signer's keypair\n+        SecurityTools.keytool(\"-genkeypair -keyalg RSA -keystore ks \" +\n+                              \"-storepass changeit -dname CN=test -alias test\")\n+                     .shouldHaveExitValue(0);\n+\n+        \/\/ sign jar\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                                \"-signedjar signed.jar test.jar test\")\n+                     .shouldHaveExitValue(0);\n+\n+        \/\/ run app with system class loader set to custom classloader\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-cp\", \"signed.jar\",\n+            \"-Djava.system.class.loader=CustomClassLoader\", \"Main\");\n+        ProcessTools.executeProcess(pb)\n+                    .shouldHaveExitValue(0);\n+\n+        \/\/ sign jar again, but this time with SHA-1 which is disabled\n+        SecurityTools.jarsigner(\"-keystore ks -storepass changeit \" +\n+                                \"-digestalg SHA-1 -sigalg SHA1withRSA \" +\n+                                \"-signedjar signed.jar test.jar test\")\n+                     .shouldHaveExitValue(0);\n+\n+        \/\/ run app again, should still succeed even though SHA-1 is disabled\n+        pb = ProcessTools.createJavaProcessBuilder(\n+            \"-cp\", \"signed.jar\",\n+            \"-Djava.system.class.loader=CustomClassLoader\", \"Main\");\n+        ProcessTools.executeProcess(pb)\n+                    .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/SignedJar\/SignedJarWithCustomClassLoader.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 8177552 8217254 8251499\n+ * @bug 8177552 8217254 8251499 8281317\n@@ -104,2 +104,3 @@\n-            {COMPACT_PATTERN8, List.of(new BigInteger(\"223565686837667632\"), new BigDecimal(\"12322456774334.89766\"), 30000, 3456.78),\n-                    List.of(\"223566T\", \"12T\", \"30K\", \"3K\")},\n+            {COMPACT_PATTERN8, List.of(new BigInteger(\"223565686837667632\"), new BigDecimal(\"12322456774334.89766\"), 30000, 3456.78,\n+                    new BigInteger(\"999999999999\"), new BigDecimal(\"999999999999.0\"), 999_999, 999_999_999),\n+                    List.of(\"223566T\", \"12T\", \"30K\", \"3K\", \"1T\", \"1T\", \"1M\", \"1B\")},\n@@ -113,1 +114,2 @@\n-            {COMPACT_PATTERN13, List.of(1000, new BigInteger(\"10000000000000000000\")), List.of(\"Thousand\", \"BeyondLong\")},\n+            {COMPACT_PATTERN13, List.of(1000, new BigInteger(\"10000000000000000000\"), new BigDecimal(\"9999999999999999999.9\")),\n+                    List.of(\"Thousand\", \"BeyondLong\", \"BeyondLong\")},\n","filename":"test\/jdk\/java\/text\/Format\/CompactNumberFormat\/TestCompactPatternsValidity.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+H=15\n+h=3 PM\n+j=3 PM\n+C=3 PM\n+Hm=15:32\n+hm=3:32 PM\n+jm=3:32 PM\n+Cm=3:32 PM\n+Hms=15:32:39\n+hms=3:32:39 PM\n+jms=3:32:39 PM\n+Cms=3:32:39 PM\n+Hmv=15:32 PT\n+hmv=3:32 PM PT\n+jmv=3:32 PM PT\n+Cmv=3:32 PM PT\n+Hmsv=15:32:39 PT\n+hmsv=3:32:39 PM PT\n+jmsv=3:32:39 PM PT\n+Cmsv=3:32:39 PM PT\n+Bh=3 in the afternoon\n+Bj=3 in the afternoon\n+BC=3 in the afternoon\n+Bhm=3:32 in the afternoon\n+Bjm=3:32 in the afternoon\n+BCm=3:32 in the afternoon\n+Bhms=3:32:39 in the afternoon\n+Bjms=3:32:39 in the afternoon\n+BCms=3:32:39 in the afternoon\n+\n+M=1\n+MMM=Jan\n+MEd=Wed, 1\/26\n+MMMMEd=Wed, Jan 26\n+d=26\n+y=2022\n+yM=1\/2022\n+yMEd=Wed, 1\/26\/2022\n+yMMM=Jan 2022\n+yMMMMEd=Wed, Jan 26, 2022\n+GyM=Jan 2022 AD\n+GyMEd=Wed, Jan 26, 2022 AD\n+GyMMM=Jan 2022 AD\n+GyMMMMEd=Wed, Jan 26, 2022 AD\n+yQQQ=Q1 2022\n+yQQQQ=1st quarter 2022\n+\n+MMMMEdBh=Wed, Jan 26 at 3 in the afternoon\n+MMMMdBh=January 26 at 3 in the afternoon\n+MMMdBh=Jan 26, 3 in the afternoon\n+MdBh=1\/26, 3 in the afternoon\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/Skeletons_en_US.properties","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+H=15時\n+h=午後3時\n+j=15時\n+C=15時\n+Hm=15:32\n+hm=午後3:32\n+jm=15:32\n+Cm=15:32\n+Hms=15:32:39\n+hms=午後3:32:39\n+jms=15:32:39\n+Cms=15:32:39\n+Hmv=15:32 PT\n+hmv=午後3:32 PT\n+jmv=15:32 PT\n+Cmv=15:32 PT\n+Hmsv=15:32:39 PT\n+hmsv=午後3:32:39 PT\n+jmsv=15:32:39 PT\n+Cmsv=15:32:39 PT\n+Bh=昼3時\n+Bhm=昼3:32\n+Bhms=昼3:32:39\n+\n+M=1月\n+MMM=1月\n+MEd=1\/26(水)\n+MMMMEd=1月26日(水)\n+d=26日\n+y=4年\n+yM=4\/1\n+yMEd=4\/1\/26(水)\n+yMMM=4年1月\n+yMMMMEd=4年1月26日(水)\n+GyM=令和4年1月\n+GyMEd=令和4年1月26日(水)\n+GyMMM=令和4年1月\n+GyMMMMEd=令和4年1月26日(水)\n+\n+MMMMEdBh=1月26日(水) 昼3時\n+MMMMdBh=1月26日 昼3時\n+MMMdBh=1月26日 昼3時\n+MdBh=1\/26 昼3時\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/Skeletons_ja.properties","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package test.java.time.format;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+import java.time.DateTimeException;\n+import java.time.ZonedDateTime;\n+import java.time.ZoneId;\n+import java.time.chrono.IsoChronology;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.ResourceBundle;\n+\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+\n+\/**\n+ * Test DateTimeFormatter.ofLocalizedPattern() related methods.\n+ * @bug 8176706\n+ *\/\n+@Test\n+public class TestLocalizedPattern {\n+\n+    private static final ZonedDateTime ZDT =\n+            ZonedDateTime.of(2022, 1, 26, 15, 32, 39, 0, ZoneId.of(\"America\/Los_Angeles\"));\n+\n+    private final static List<Locale> SAMPLE_LOCALES = List.of(\n+            Locale.US,\n+            Locale.forLanguageTag(\"ja-JP-u-ca-japanese\")\n+    );\n+\n+    @DataProvider(name = \"validSkeletons\")\n+    Object[][] data_validSkeletons() {\n+        return SAMPLE_LOCALES.stream()\n+                .flatMap(l -> {\n+                    var rb = ResourceBundle.getBundle(\"test.java.time.format.Skeletons\", l);\n+                    return rb.keySet().stream().map(key -> new Object[]{key, rb.getString(key), l});\n+                })\n+                .toList()\n+                .toArray(new Object[0][0]);\n+    }\n+\n+    @DataProvider(name = \"invalidSkeletons\")\n+    Object[][] data_invalidSkeletons() {\n+        return new Object[][] {\n+            {\"afo\"}, {\"hB\"}, {\"uMMM\"}, {\"MMMMMM\"}, {\"BhmsyMMM\"},\n+        };\n+    }\n+\n+    @DataProvider(name = \"unavailableSkeletons\")\n+    Object[][] data_unavailableSkeletons() {\n+        return new Object[][] {\n+            {\"yyyyyy\"}, {\"BBh\"}, {\"yMMMMEdBBh\"},\n+        };\n+    }\n+\n+    @Test(dataProvider = \"validSkeletons\")\n+    public void test_ofLocalizedPattern(String skeleton, String expected, Locale l) {\n+        var dtf = DateTimeFormatter.ofLocalizedPattern(skeleton).localizedBy(l);\n+        assertEquals(dtf.format(ZDT), expected);\n+    }\n+\n+    @Test(dataProvider = \"invalidSkeletons\", expectedExceptions = IllegalArgumentException.class)\n+    public void test_ofLocalizedPattern_invalid(String skeleton) {\n+        DateTimeFormatter.ofLocalizedPattern(skeleton);\n+    }\n+\n+    @Test(dataProvider = \"invalidSkeletons\", expectedExceptions = IllegalArgumentException.class)\n+    public void test_appendLocalized_invalid(String skeleton) {\n+        new DateTimeFormatterBuilder().appendLocalized(skeleton);\n+    }\n+\n+    @Test(dataProvider = \"unavailableSkeletons\", expectedExceptions = DateTimeException.class)\n+    public void test_ofLocalizedPattern_unavailable(String skeleton) {\n+        DateTimeFormatter.ofLocalizedPattern(skeleton).format(ZDT);\n+    }\n+\n+    @Test(dataProvider = \"unavailableSkeletons\", expectedExceptions = DateTimeException.class)\n+    public void test_getLocalizedDateTimePattern_unavailable(String skeleton) {\n+        DateTimeFormatterBuilder.getLocalizedDateTimePattern(skeleton, IsoChronology.INSTANCE, Locale.US);\n+    }\n+}\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestLocalizedPattern.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6797535 6889858 6891113 8013712 8011800 8014365\n+ * @bug 6797535 6889858 6891113 8013712 8011800 8014365 8280168\n@@ -28,1 +28,0 @@\n- * @author  Joseph D. Darcy\n@@ -43,0 +42,1 @@\n+        errors += testToIdentityString();\n@@ -137,0 +137,31 @@\n+    private static int testToIdentityString() {\n+        int errors = 0;\n+        \/\/ Test null behavior\n+        try {\n+            Objects.toIdentityString(null);\n+            errors++;\n+        } catch (NullPointerException npe) {\n+            ; \/\/ Expected\n+        }\n+        \/\/ Behavior on typical objects\n+        Object o = new Object(){};\n+        errors += (Objects.toIdentityString(o).equals(o.toString()))? 0 : 1;\n+        \/\/ Verify object's toString *not* called\n+        Object badToString = new Object() {\n+                @Override\n+                public String toString() {\n+                    throw new RuntimeException();\n+                }\n+            };\n+        Objects.toIdentityString(badToString);\n+        \/\/ Verify object's hashCode *not* called\n+        Object badHashCode = new Object() {\n+                @Override\n+                public int hashCode() {\n+                    throw new RuntimeException(\"0xDEADBEFF\");\n+                }\n+            };\n+        Objects.toIdentityString(badHashCode);\n+        return errors;\n+    }\n+\n","filename":"test\/jdk\/java\/util\/Objects\/BasicObjectsTest.java","additions":34,"deletions":3,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Verify nextDouble stays within range\n+ * @bug 8280550 8280950 8281183\n+ *\/\n+\n+import java.util.SplittableRandom;\n+import java.util.random.RandomGenerator;\n+\n+public class RandomNextDoubleBoundary {\n+    public static void main(String... args) {\n+        negativeBounds();\n+        positiveBounds();\n+    }\n+\n+    private static void negativeBounds() {\n+        \/\/ Both bounds are negative\n+        double lowerBound = -1.0000000000000002;\n+        double upperBound = -1.0;\n+        var sr = new SplittableRandom(42L);\n+        var r = sr.nextDouble(lowerBound, upperBound);\n+\n+        if (r >= upperBound) {\n+            System.err.println(\"r = \" + r + \"\\t\" + Double.toHexString(r));\n+            System.err.println(\"ub = \" + upperBound + \"\\t\" + Double.toHexString(upperBound));\n+            throw new RuntimeException(\"Greater than upper bound\");\n+        }\n+\n+        if (r < lowerBound) {\n+            System.err.println(\"r = \" + r + \"\\t\" + Double.toHexString(r));\n+            System.err.println(\"lb = \" + lowerBound + \"\\t\" + Double.toHexString(lowerBound));\n+            throw new RuntimeException(\"Less than lower bound\");\n+        }\n+    }\n+\n+    private static void positiveBounds() {\n+        double[][] originAndBounds = {{10, 100},\n+                                      {12345, 123456},\n+                                      {5432167.234, 54321678.1238}};\n+        for (double[] originAndBound : originAndBounds) {\n+            nextDoublesWithRange(originAndBound[0], originAndBound[1]);\n+        }\n+    }\n+\n+    public static void nextDoublesWithRange(double origin, double bound) {\n+        RandomGenerator rg = new RandomGenerator() {\n+            @Override\n+            public double nextDouble() {\n+                return Double.MAX_VALUE;\n+            }\n+\n+            @Override\n+            public long nextLong() {\n+                return 0;\n+            }\n+        };\n+        double value = rg.nextDouble(origin, bound);\n+\n+        if (bound > 0) {\n+            value = rg.nextDouble(bound); \/\/ Equivalent to nextDouble(0.0, bound)\n+            assertTrue(value >= 0.0);\n+            assertTrue(value < bound);\n+        }\n+    }\n+\n+    public static void assertTrue(boolean condition) {\n+        if (!condition) {\n+            throw new AssertionError();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Random\/RandomNextDoubleBoundary.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -4550,0 +4550,9 @@\n+\n+    \/\/This test is for 8280403\n+    @Test\n+    public static void badIntersectionSyntax() {\n+        String pattern = \"[˜\\\\H +F&&]\";\n+        var e = expectThrows(PatternSyntaxException.class, () ->\n+                Pattern.compile(pattern));\n+        assertTrue(e.getMessage().contains(\"Bad intersection syntax\"));\n+    }\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,251 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8806542\n+ * @summary Trailing dot in hostname causes TLS handshake to fail\n+ * @library \/javax\/net\/ssl\/templates\n+ * @run main\/othervm -Djdk.net.hosts.file=hostsForExample EndingDotHostname\n+ *\/\n+\n+import javax.net.ssl.*;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.*;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class EndingDotHostname {\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"jdk.net.hosts.file\", \"hostsForExample\");\n+        (new EndingDotHostname()).run();\n+    }\n+\n+    public void run() throws Exception {\n+        bootUp();\n+    }\n+\n+    \/\/ =================================================\n+    \/\/ Stuffs to boot up the client-server mode testing.\n+    private Thread serverThread = null;\n+    private volatile Exception serverException = null;\n+    private volatile Exception clientException = null;\n+\n+    \/\/ Is the server ready to serve?\n+    protected final CountDownLatch serverCondition = new CountDownLatch(1);\n+\n+    \/\/ Is the client ready to handshake?\n+    protected final CountDownLatch clientCondition = new CountDownLatch(1);\n+\n+    \/\/ What's the server port?  Use any free port by default\n+    protected volatile int serverPort = 0;\n+\n+    \/\/ Boot up the testing, used to drive remainder of the test.\n+    private void bootUp() throws Exception {\n+        Exception startException = null;\n+        try {\n+            startServer();\n+            startClient();\n+        } catch (Exception e) {\n+            startException = e;\n+        }\n+\n+        \/\/ Wait for other side to close down.\n+        if (serverThread != null) {\n+            serverThread.join();\n+        }\n+\n+        \/\/ The test is pretty much over. Which side threw an exception?\n+        Exception local = clientException;\n+        Exception remote = serverException;\n+\n+        Exception exception = null;\n+\n+        \/\/ Check various exception conditions.\n+        if ((local != null) && (remote != null)) {\n+            \/\/ If both failed, return the curthread's exception.\n+            local.initCause(remote);\n+            exception = local;\n+        } else if (local != null) {\n+            exception = local;\n+        } else if (remote != null) {\n+            exception = remote;\n+        } else if (startException != null) {\n+            exception = startException;\n+        }\n+\n+        \/\/ If there was an exception *AND* a startException, output it.\n+        if (exception != null) {\n+            if (exception != startException && startException != null) {\n+                exception.addSuppressed(startException);\n+            }\n+            throw exception;\n+        }\n+\n+        \/\/ Fall-through: no exception to throw!\n+    }\n+\n+    private void startServer() {\n+        serverThread = new Thread(() -> {\n+            try {\n+                doServerSide();\n+            } catch (Exception e) {\n+                \/\/ Our server thread just died. Release the client,\n+                \/\/ if not active already...\n+                serverException = e;\n+            }\n+        });\n+\n+        serverThread.start();\n+    }\n+\n+    private void startClient() {\n+        try {\n+            doClientSide();\n+        } catch (Exception e) {\n+            clientException = e;\n+        }\n+    }\n+\n+    protected void doServerSide() throws Exception {\n+        \/\/ kick off the server side service\n+        SSLContext context = SSLExampleCert.createServerSSLContext();\n+        SSLServerSocketFactory sslssf = context.getServerSocketFactory();\n+\n+        SSLServerSocket sslServerSocket =\n+                (SSLServerSocket)sslssf.createServerSocket();\n+        sslServerSocket.bind(new InetSocketAddress(\n+                InetAddress.getLoopbackAddress(), 0));\n+        serverPort = sslServerSocket.getLocalPort();\n+\n+        \/\/ Signal the client, the server is ready to accept connection.\n+        serverCondition.countDown();\n+\n+        \/\/ Try to accept a connection in 30 seconds.\n+        SSLSocket sslSocket;\n+        try {\n+            sslServerSocket.setSoTimeout(30000);\n+            sslSocket = (SSLSocket)sslServerSocket.accept();\n+        } catch (SocketTimeoutException ste) {\n+            \/\/ Ignore the test case if no connection within 30 seconds.\n+            System.out.println(\n+                    \"No incoming client connection in 30 seconds. \" +\n+                            \"Ignore in server side.\");\n+            return;\n+        } finally {\n+            sslServerSocket.close();\n+        }\n+\n+        \/\/ handle the connection\n+        try {\n+            \/\/ Is it the expected client connection?\n+            \/\/\n+            \/\/ Naughty test cases or third party routines may try to\n+            \/\/ connection to this server port unintentionally.  In\n+            \/\/ order to mitigate the impact of unexpected client\n+            \/\/ connections and avoid intermittent failure, it should\n+            \/\/ be checked that the accepted connection is really linked\n+            \/\/ to the expected client.\n+            boolean clientIsReady =\n+                    clientCondition.await(30L, TimeUnit.SECONDS);\n+\n+            if (clientIsReady) {\n+                \/\/ Run the application in server side.\n+                runServerApplication(sslSocket);\n+            } else {    \/\/ Otherwise, ignore\n+                \/\/ We don't actually care about plain socket connections\n+                \/\/ for TLS communication testing generally.  Just ignore\n+                \/\/ the test if the accepted connection is not linked to\n+                \/\/ the expected client or the client connection timeout\n+                \/\/ in 30 seconds.\n+                System.out.println(\n+                        \"The client is not the expected one or timeout. \" +\n+                                \"Ignore in server side.\");\n+            }\n+        } finally {\n+            sslSocket.close();\n+        }\n+    }\n+\n+    \/\/ Define the server side application of the test for the specified socket.\n+    protected void runServerApplication(SSLSocket socket) throws Exception {\n+        \/\/ here comes the test logic\n+        InputStream sslIS = socket.getInputStream();\n+        OutputStream sslOS = socket.getOutputStream();\n+\n+        sslIS.read();\n+        sslOS.write(85);\n+        sslOS.flush();\n+    }\n+\n+    protected void doClientSide() throws Exception {\n+        \/\/ Wait for server to get started.\n+        \/\/\n+        \/\/ The server side takes care of the issue if the server cannot\n+        \/\/ get started in 90 seconds.  The client side would just ignore\n+        \/\/ the test case if the serer is not ready.\n+        boolean serverIsReady =\n+                serverCondition.await(90L, TimeUnit.SECONDS);\n+        if (!serverIsReady) {\n+            System.out.println(\n+                    \"The server is not ready yet in 90 seconds. \" +\n+                            \"Ignore in client side.\");\n+            return;\n+        }\n+\n+        SSLContext context = SSLExampleCert.createClientSSLContext();\n+        SSLSocketFactory sslsf = context.getSocketFactory();\n+\n+        try (SSLSocket sslSocket = (SSLSocket)sslsf.createSocket(\n+                \"www.example.com.\", serverPort)) {\n+            \/\/ OK, here the client and server get connected.\n+            SSLParameters sslParameters = sslSocket.getSSLParameters();\n+            sslParameters.setEndpointIdentificationAlgorithm(\"HTTPS\");\n+            sslSocket.setSSLParameters(sslParameters);\n+\n+            \/\/ Signal the server, the client is ready to communicate.\n+            clientCondition.countDown();\n+\n+            \/\/ There is still a chance in theory that the server thread may\n+            \/\/ wait client-ready timeout and then quit.  The chance should\n+            \/\/ be really rare so we don't consider it until it becomes a\n+            \/\/ real problem.\n+\n+            \/\/ Run the application in client side.\n+            runClientApplication(sslSocket);\n+        }\n+    }\n+\n+    \/\/ Define the client side application of the test for the specified socket.\n+    protected void runClientApplication(SSLSocket socket) throws Exception {\n+        InputStream sslIS = socket.getInputStream();\n+        OutputStream sslOS = socket.getOutputStream();\n+\n+        sslOS.write(280);\n+        sslOS.flush();\n+        sslIS.read();\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/EndingDotHostname.java","additions":251,"deletions":0,"binary":false,"changes":251,"status":"added"},{"patch":"@@ -24,0 +24,1 @@\n+import java.net.InetAddress;\n@@ -29,1 +30,1 @@\n-    private static final String LOCAL_IP = \"127.0.0.1\";\n+    private static final String LOCAL_IP = InetAddress.getLoopbackAddress().getHostAddress();\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TestJSSE.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.net.InetAddress;\n@@ -55,1 +56,2 @@\n-            socket = (SSLSocket)factory.createSocket(\"127.0.0.1\", CipherTest.serverPort);\n+            socket = (SSLSocket)factory.createSocket(\n+                    InetAddress.getLoopbackAddress().getHostAddress(), CipherTest.serverPort);\n","filename":"test\/jdk\/javax\/net\/ssl\/sanity\/interop\/JSSEClient.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,351 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.net.ssl.KeyManagerFactory;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.TrustManagerFactory;\n+import java.io.*;\n+import java.net.InetAddress;\n+import java.security.KeyFactory;\n+import java.security.KeyStore;\n+import java.security.PrivateKey;\n+import java.security.cert.Certificate;\n+import java.security.cert.CertificateFactory;\n+import java.security.spec.PKCS8EncodedKeySpec;\n+import java.util.Base64;\n+\n+\/\/ A template to use \"www.example.com\" as the server name.  The caller should\n+\/\/ set a virtual hosts file with System Property, \"jdk.net.hosts.file\". This\n+\/\/ class will map the loopback address to \"www.example.com\", and write to\n+\/\/ the specified hosts file.\n+public enum SSLExampleCert {\n+    \/\/ Version: 3 (0x2)\n+    \/\/ Serial Number: 15223159159760931473 (0xd34386999cc8ca91)\n+    \/\/ Signature Algorithm: sha256WithRSAEncryption\n+    \/\/ Issuer: C=US, ST=California, O=Example, OU=Test\n+    \/\/ Validity\n+    \/\/     Not Before: Jan 26 04:50:29 2022 GMT\n+    \/\/     Not After : Feb 25 04:50:29 2022 GMT\n+    \/\/ Subject: C=US, ST=California, O=Example, OU=Test\n+    \/\/ Public Key Algorithm: rsaEncryption\n+    CA_RSA(\"RSA\",\n+            \"\"\"\n+            -----BEGIN CERTIFICATE-----\n+            MIIDXDCCAkSgAwIBAgIJANNDhpmcyMqRMA0GCSqGSIb3DQEBCwUAMEMxCzAJBgNV\n+            BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRAwDgYDVQQKDAdFeGFtcGxlMQ0w\n+            CwYDVQQLDARUZXN0MB4XDTIyMDEyNjA0NTAyOVoXDTIyMDIyNTA0NTAyOVowQzEL\n+            MAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExEDAOBgNVBAoMB0V4YW1w\n+            bGUxDTALBgNVBAsMBFRlc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\n+            AQDnOL2hB\/GYyYziXo\/ppxi7V1LfMMLeHt0lZbYlrmNxUlln4naI4B4Lkg75eb1Y\n+            DgC7MZQd5nKijK9Dkq52Z2zLxaqBYnLxKJ36qKPqbtTL3I8mfUvVEeNIDN\/8YTAt\n+            suIEQi54dNtQVrB4YReMdnUq+xCKLAfEio4QLEQr7KtyCBXHZpM7RYRT0giQFvDU\n+            2kls9lFLeqKXgocnA7VpoL0V12hpxDeJoRm1szf0M5YXGJumQLaE5qM\/+P2OOhw\/\n+            T+xkupy2GF02s6FBXkH7NrFIjtuBSaVhSvCG\/N7njWSn339thr3kiPEaCS4KSH5E\n+            E6FEazxZQrTCbkQQ+v3y1pS1AgMBAAGjUzBRMA8GA1UdEwEB\/wQFMAMBAf8wHQYD\n+            VR0OBBYEFMFw2FWUvwZx3FJjm1G9TujCjAJSMB8GA1UdIwQYMBaAFMFw2FWUvwZx\n+            3FJjm1G9TujCjAJSMA0GCSqGSIb3DQEBCwUAA4IBAQCJsJjeYcT\/GtKp64C+9KCi\n+            Vgw\/WnBZwbosSFZmqyID8aAnAxaGMkZ2B2pUZHTtCkBf6d9c0tuWb5yF8npV77sE\n+            bZqeNg2GU7EvH3WPgPbQVT7+Qb+WbY3EEPgJHLytch61Rm\/TRQ3OqD0B+Gs7YjAU\n+            fEspmk1JJ6DWuXX13SHoGWgVnO7rXBnCJaGnGpONtggG4oO5hrwnMzQZKh5eZDhC\n+            7tkNPqVDoLv+QqnFk8q6k8hhxnVf+aw56IdsebN+9Bi+Lv6OQ+stKUo\/u\/RTW2z1\n+            odCOwc8DPF3jbacJsOmLhl3ciuWGOckx9KCvaBeTTgkPdLQH1gpNha2tnqgxUXmC\n+            -----END CERTIFICATE-----\"\"\",\n+\n+            \"\"\"\n+            MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDnOL2hB\/GYyYzi\n+            Xo\/ppxi7V1LfMMLeHt0lZbYlrmNxUlln4naI4B4Lkg75eb1YDgC7MZQd5nKijK9D\n+            kq52Z2zLxaqBYnLxKJ36qKPqbtTL3I8mfUvVEeNIDN\/8YTAtsuIEQi54dNtQVrB4\n+            YReMdnUq+xCKLAfEio4QLEQr7KtyCBXHZpM7RYRT0giQFvDU2kls9lFLeqKXgocn\n+            A7VpoL0V12hpxDeJoRm1szf0M5YXGJumQLaE5qM\/+P2OOhw\/T+xkupy2GF02s6FB\n+            XkH7NrFIjtuBSaVhSvCG\/N7njWSn339thr3kiPEaCS4KSH5EE6FEazxZQrTCbkQQ\n+            +v3y1pS1AgMBAAECggEBAJQAKLkTWZx\/njMjbiCT+Wuo6H2+O21r+ge\/BAk4h6R4\n+            nou1VEQmmHS1h+o992mOhP9NK867vDK5tFGfaRaW+vevzYTF3GbqpbxVB56+VG0s\n+            \/2AWoVx\/96gdvZ1RJEKMFsm9BvvJaLwS0SAsnaMmC7d4Ps0Cg\/JU8bv+aaBn\/BGf\n+            TWiofYWeUk6llco4kO9H2APxUVzlaUUU\/cPAJqX7XktnhDCI9\/esuVg7nVR0XxOF\n+            GDrV\/jdqSYmSbp4aTRXgI9nwxOmlKiGgevTrCUXl3\/KaJxZekllVjushY1VVzgbY\n+            K5R4bcN5MXMmFdgF9DTEW72RqEfg9iXqyhYbZp3Q\/UECgYEA\/yiaJd0w2HS22HSg\n+            o4dJ072WbyR3qUqQmPbSUn9hBQTJAz1eX3cci8u4oawo\/S+jN38b\/DfpSg3eIMLB\n+            vnXW3wZtodpJnFaweKd3yUaSF2r9vZRHJgfPfe67VbruEOF6BsCjTq\/deGeNnGeH\n+            \/IDVn9WtSeRX\/bv\/s5YHvGaHGGUCgYEA5\/vugmilOBq979EqksCG\/7EQHSOoEukO\n+            J\/aunDyEwz+BMEHOEW7tDMUefdiSfnGXSW+ZTmpmvc+aLk37Xuo34jpugK5ayUFY\n+            iYVgiqdnygGiBevBM2o0O\/parQkAGEB8GPButrYItUzubUgXnuw+EdMiXGnpjJaK\n+            S3dPYJEHvhECgYEAjqIIwV\/LPUTJLWjMn30yBN43KLvu9ECNYiSfX6R6\/I43O8tj\n+            ZOQ1nePsutt9MkMd7xjr8OrkSxRDdnbITQqcaaGzSUW33mALV\/btnCMJ6XNSklZA\n+            C39UOuZn7D2JdQBF8V5gK81ddUAVxjeNqdXvFOEidGrj0R\/1iVM10dhSbo0CgYBk\n+            P8GtR02Gtj+4P\/qW2m48VqbxALSkH2SHrpl8WMbCnVHVqcpETFxSNWjc11dPHwVS\n+            rdBhS6fEhM9LDVYAiVTHBZs1LqN67ys0mpfCs18ts5Dx4BRohI+4D5NZzVbmJA+8\n+            s0IU4QtYVbt\/LDVQ7yRPjZ7+sqJDp9ZxkEiUIXhoEQKBgQCPG2f8BhsCYNAOV60F\n+            hJVjhDdf59Mia3B2J9SSnrg6Tl2rWB7GPP19TiSPFS6Sn95mWrMjZ2ZuOXtCYV4H\n+            +hmu87AV2CXFhW5c588cajXMT92GFVMSXdE1OHRzDjhpH+\/ll8SnmQa7sXmEV36+\n+            sawd7mwcB9IEi562wglADxBUCA==\n+            \"\"\"),\n+\n+    \/\/ Version: 3 (0x2)\n+    \/\/ Serial Number: 14845986384898254166 (0xce0789f5ac256556)\n+    \/\/ Signature Algorithm: sha1WithRSAEncryption\n+    \/\/ Issuer: C=US, ST=California, O=Example, OU=Test\n+    \/\/ Validity\n+    \/\/     Not Before: Jan 26 04:50:29 2022 GMT\n+    \/\/     Not After : Feb 25 04:50:29 2022 GMT\n+    \/\/ Subject: C=US, ST=California, O=Example, OU=Test, CN=www.example.com\n+    \/\/ Public Key Algorithm: rsaEncryption\n+    SERVER_EXAMPLE_RSA(\"RSA\",\n+            \"\"\"\n+            -----BEGIN CERTIFICATE-----\n+            MIIDjDCCAnSgAwIBAgIJAM4HifWsJWVWMA0GCSqGSIb3DQEBBQUAMEMxCzAJBgNV\n+            BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRAwDgYDVQQKDAdFeGFtcGxlMQ0w\n+            CwYDVQQLDARUZXN0MB4XDTIyMDEyNjA0NTAyOVoXDTIyMDIyNTA0NTAyOVowXTEL\n+            MAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExEDAOBgNVBAoMB0V4YW1w\n+            bGUxDTALBgNVBAsMBFRlc3QxGDAWBgNVBAMMD3d3dy5leGFtcGxlLmNvbTCCASIw\n+            DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK\/i4bVSAF6\/aFHyzrFAON8Uwn2a\n+            Q9jFoAMowUkH6+PCexlt4wCOEMVH9IQPa1yzeVlkYRqHggz3i6aVYvd27Q+c6vOF\n+            FuRegWdJusyEuoXd5nwxSGiZZMLmFQswODSPmucroCG+Tq9RKY5oEKiRP8tUDqyn\n+            eE52PaeSR2Q6mng7BM5Llj7amVgimO3jlH2AWLLpHNTkc3j\/M1QrLFV2PqN4dpxT\n+            OeFuVWzpfTWJSH+9Kq4u\/zBMbYl8ON7DSgJAzc2BOw8VPIYIK6JIw6IDbLn4dIQf\n+            GikdgHKB2K6EDOc9LuX6UqQQODDFU88muAyPgpGfUQjxKZeUoTqoAFyisI0CAwEA\n+            AaNpMGcwCQYDVR0TBAIwADAdBgNVHQ4EFgQUQqf\/4nqluVMZ8huD3I5FNqLXTqAw\n+            HwYDVR0jBBgwFoAUwXDYVZS\/BnHcUmObUb1O6MKMAlIwGgYDVR0RBBMwEYIPd3d3\n+            LmV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IBAQBl8FJD98fJh\/0KY+3LtZDW\n+            CQZDeBSfnpq4milrvHH+gcOCaKYlB9702tAQ6rL1c1dLz\/Lpw1x7EYvO8XIwXMRc\n+            DZghf8EJ6wMpZbLVLAQLCTggiB65XPwmhUoMvgVRVLYoXT3ozmNPt7P+ZURisqem\n+            0\/xVVfxqmHw9Hb4DNlc7oZDgOK7IrqriaBK6Amsu3m2eThsvkwTdJfeFG3ZdV6x5\n+            mbaGZDMt\/wgWIqyq5CZNpXPaFRH7KM4zhcoqXvFAoq9jxWOuBkJUUx5EHaxGhhPw\n+            SMgE1yl4O+N7GJmF\/WMR5zp2LGKMqJ3vwLPv6QNkUmLwB5ZLYJ8E2dpj6DjQWa7X\n+            -----END CERTIFICATE-----\"\"\",\n+\n+            \"\"\"\n+            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCv4uG1UgBev2hR\n+            8s6xQDjfFMJ9mkPYxaADKMFJB+vjwnsZbeMAjhDFR\/SED2tcs3lZZGEah4IM94um\n+            lWL3du0PnOrzhRbkXoFnSbrMhLqF3eZ8MUhomWTC5hULMDg0j5rnK6Ahvk6vUSmO\n+            aBCokT\/LVA6sp3hOdj2nkkdkOpp4OwTOS5Y+2plYIpjt45R9gFiy6RzU5HN4\/zNU\n+            KyxVdj6jeHacUznhblVs6X01iUh\/vSquLv8wTG2JfDjew0oCQM3NgTsPFTyGCCui\n+            SMOiA2y5+HSEHxopHYBygdiuhAznPS7l+lKkEDgwxVPPJrgMj4KRn1EI8SmXlKE6\n+            qABcorCNAgMBAAECggEBAJb2SvfP7BVmf+lmV9V249lE\/jHECFu0M8TCZDOEowiX\n+            0gRfdqjxRp+tRMdcXK\/yM0Nwjo+wowTyK2DNc2YnIw11h4uAPcfA\/ZxjgfssKNPh\n+            Q4Rw4E826W8HACTcPEGQyEmF\/ik4KFz9coeR9kpYcMLZ4MZ77xyZDA4Z1UDHs\/Fg\n+            egrd4k35fxIFOavsjNuekMIjZlyQ2xU1a11QDBrZAu\/pjITXXulg4jCxLbeNOOPs\n+            hH+Sx+jnsVV7qIBNwulzxEdpb3+NkWIMmOQK4HOSeHgjRVvSXXBPgYadMaP\/Bzvx\n+            AwJ9WeLZg7KWHE03aOc7CSMoyHfmhXx3gD8icGpSq8ECgYEA3TWGBSgny\/wket+V\n+            65ldWjp4NOKHbLPtBdL9ygIO+1bGfLl5srCxUWHBYdcWCXKuB5ALCBu0hMY+TlwF\n+            s\/BzZmvVW7RLAEZZ3Q5HpawDlr9j8Kenm4X2Mqh0MSkmwIDRDHF8jRXAvWIzcBiS\n+            +rPZm2CMZpznUSE4X+GrvTSCBbkCgYEAy4yJ58wNUavj\/tR8KySn5ygPABFZ1Uoy\n+            pIyabm18Oe3gCl5UulBskoN0WreTKnA4r9jGlnrgeuu5WfMK53AZKbC+YduZixW4\n+            QFuJBSMbFCBDt4nkhkMMR7VcV4jIqaOK7qNrs7ubGTZhsG8wj6\/WWdCp3Avnx1rS\n+            WCCoYNhAK3UCgYADaLnCBpZmbGJbimqTEPABXflQR1Vy9WrnthK3NETq1rGEZo9b\n+            k6GH8Yu7aEcsqhnIgA3LeDHWAgAf0Qc9eK0unObS3Ppy7KKh54BvKzF690QhB1Rr\n+            7yqWKUZxI4M3YETYfj8\/JWCtCoBkb9yEBJWL8Xb4dd6Sv4JQ5\/dvmQmP8QKBgBX+\n+            5+Aeksnik060U36uBV7bW1OcjGKaFALoFsAcILJ53B4Ct5Eyo6jpf6dV8xdA7T9D\n+            Y6JbQOrHkk4AD4uW94Ej0k7s1hjLjg+WVKYzdvejzO2GfyVrFWaiWIo1A8ohHCBR\n+            lI\/llAsTb1cLjOnaDIXEILbgqnlGfTh8vvVIKRcJAoGALF6Q1Ca2GIx4kJZ2\/Az5\n+            qx89q95wQoWVHcJCA91g\/GKg\/bD0ZJMWEhhVH3QcnDOU7afRGKOPGdSSBdPQnspQ\n+            1OPpPjA3U5Mffy5PJ2bHTpPBeeHOzDO4Jt073zK3N81QovJzS8COoOwuGdcocURH\n+            mFMnEtK7d+EK1C1NTWDyNzU=\n+            \"\"\"),\n+\n+\n+    \/\/ Version: 3 (0x2)\n+    \/\/ Serial Number: 14845986384898254167 (0xce0789f5ac256557)\n+    \/\/ Signature Algorithm: sha1WithRSAEncryption\n+    \/\/ Issuer: C=US, ST=California, O=Example, OU=Test\n+    \/\/ Validity\n+    \/\/     Not Before: Jan 26 04:50:29 2022 GMT\n+    \/\/     Not After : Feb 25 04:50:29 2022 GMT\n+    \/\/ Subject: C=US, ST=California, O=Example, OU=Test, CN=Do-Not-Reply\n+    \/\/ Public Key Algorithm: rsaEncryption\n+    CLIENT_EXAMPLE_RSA(\"RSA\",\n+            \"\"\"\n+            -----BEGIN CERTIFICATE-----\n+            MIIDkjCCAnqgAwIBAgIJAM4HifWsJWVXMA0GCSqGSIb3DQEBBQUAMEMxCzAJBgNV\n+            BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRAwDgYDVQQKDAdFeGFtcGxlMQ0w\n+            CwYDVQQLDARUZXN0MB4XDTIyMDEyNjA0NTAyOVoXDTIyMDIyNTA0NTAyOVowWjEL\n+            MAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExEDAOBgNVBAoMB0V4YW1w\n+            bGUxDTALBgNVBAsMBFRlc3QxFTATBgNVBAMMDERvLU5vdC1SZXBseTCCASIwDQYJ\n+            KoZIhvcNAQEBBQADggEPADCCAQoCggEBAODbsCteHcAg3dktUO5fiPTytIahKZMg\n+            U2h6h0+BT803tYcdN6WDHnLNlU\/3iFnBMpyTwzWhYIftC9c\/TIkXBAGfWl4HHQgc\n+            x08NHPms0E+GF6CDthvHERSvRCBrIyVna0KIZPemBzUfeBeNdiqwsLvg+C5dqWu5\n+            YcILvL6GzTMvdMwJeEX+c2ZYHibqd8aZydWsT+IPVZnueDX6KTOnYvexLFIoid2a\n+            62FavnMWiPKnICertDDg+gHlN2XceW3tlYQwO+HMig4DH3u2x0SApOoM3y8k29Ew\n+            Fn6wquSRomcbDiI8SEOeaBFenu6W0g24iaxIZfqEM52kPbQFdzqg+O0CAwEAAaNy\n+            MHAwCQYDVR0TBAIwADAdBgNVHQ4EFgQU0t+I5iAfPq6C\/I2CSvTKHGK6+2kwHwYD\n+            VR0jBBgwFoAUwXDYVZS\/BnHcUmObUb1O6MKMAlIwIwYDVR0RBBwwGoEYZG8tbm90\n+            LXJlcGx5QGV4YW1wbGUuY29tMA0GCSqGSIb3DQEBBQUAA4IBAQBqWk35XXpb3L+N\n+            7kPlNmSlhfamenVOVYxPBq\/tSFpl728CV0OrGAy79awEFDvzhpbBg9Mz7HS\/a7ax\n+            f+lBbsAt1maWlsVSsaaJrmy3znl9CZiIg+ykZ5ZzLS5FkIbQ6LkzvxYZJ1JYCzXm\n+            P\/5+rbQyIvQaDGL23PmE7AB2Q0q+imt4b9HKs+SnI4XERyj8OF\/kseRtILtP2ltV\n+            r+3XgcBxwyU17CLwsHrjnQ8\/1eGovBKzGAfUXeHBdzOuD3ZemjnqwlzQTf2TAkBP\n+            OuMc8gr2Umc5tMtdiRUFPODO7DG7vB7LKEsJGKWLUtGbR+3S55lIcCF5NFZ\/\/TNZ\n+            4x2GPOJ+\n+            -----END CERTIFICATE-----\"\"\",\n+\n+            \"\"\"\n+            MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDg27ArXh3AIN3Z\n+            LVDuX4j08rSGoSmTIFNoeodPgU\/NN7WHHTelgx5yzZVP94hZwTKck8M1oWCH7QvX\n+            P0yJFwQBn1peBx0IHMdPDRz5rNBPhhegg7YbxxEUr0QgayMlZ2tCiGT3pgc1H3gX\n+            jXYqsLC74PguXalruWHCC7y+hs0zL3TMCXhF\/nNmWB4m6nfGmcnVrE\/iD1WZ7ng1\n+            +ikzp2L3sSxSKIndmuthWr5zFojypyAnq7Qw4PoB5Tdl3Hlt7ZWEMDvhzIoOAx97\n+            tsdEgKTqDN8vJNvRMBZ+sKrkkaJnGw4iPEhDnmgRXp7ultINuImsSGX6hDOdpD20\n+            BXc6oPjtAgMBAAECggEAKjqX900RoUeK4oKUNHBUtEvwg2g4+pyTjYeVaeULK6tO\n+            uDVQghEB4uWhKQd\/3\/tcmfNWMfhAvMZT9vS4Vvavle5rdkU3upJNDBeWXX2LEaRJ\n+            Q6f4x3a3Sn8v+DamvxuRFUmwTKItsFhcoW+7xYCxcFdrxKlqbATAy0SRCecfGoFw\n+            9pAsFIgIqLGQtV9V9fZWKdXIfLkH3venNImHt0n5pYadl4kZu0gNCmOGRO1MqB51\n+            bdAck3dBg22TE5+sZBIZmCjBAEbrc2RUQu5mAoDs8eeenxBlFYszWZxqM8BkJL5e\n+            SqQkbc18E8Gzdx52xEx6BCLTq0MITKliKX4B2tsQsQKBgQD1DIvt13yg9LlyoiAb\n+            Fc1zzKZQBPRgDUJCGzCPeC6AqbPUjoxvFAHxGNgmJXqAXwsqcs88qlSGAjk6ANAx\n+            fHWUQ3UmkZjGvV0ru3rIPcXvS7isjzm\/cbq1YZua6+ohFl4+hojc\/iyUrOaCd9uY\n+            V2zwrr+A0JJrlev72niEuAtEmwKBgQDq6CaLP79dHqAOIV43+SyX7KdwNkMMWIR7\n+            El6E\/74V0IWOYWFXLmV4sX6BKi0ZBTFZ3wKwMTDqQBYD2\/a7gq43HjzuWu+2dFhA\n+            pCQumMOKNqcNS9NldqoxAiGLxC+JMhGGyf3RO0Ey9gdPnQuje3133Wce8WWaHHv2\n+            lD5BcmzdFwKBgQCCeca7wiPy07s2ZUqxAT\/eq5XWP30a85RW\/IEzsusXyMQepjPy\n+            JPYPuInGbeg3F+QrGuxrQco1fFOaJbq0zq8QXYawHY\/6KfPFCFMM8Y9FpczT3IME\n+            A3tFfo5Kw9hq+6z8n8eZ26BDHXiy+Tysdchksrb20JdVv4LiG+ZVzGT7hwKBgG+b\n+            Bp0IF4JFh6PPBLWxRBeWT2MH1Mkr0R2r945W91fj72BbMeU63Oj\/42u4vx5xEiZx\n+            xxQw+t2AvzTsMAicqOr1CdvxBoz4L+neUnZ1DApBtxKhIPnG7EtGiOuftToIuL0C\n+            gP4EmhB9RbH0mk\/83vqxDUptRGl4+QiJHB76H3DXAoGASGT6tfs1\/92rGqe0COm3\n+            aHpelvW7Wwr9AuBumE7\/ur\/JWAAiM4pm6w7m5H5duYZtG3eWz1s+jvjy8jIPBIkN\n+            RA2DoneC2J\/tsRRNFBqZrOWon5Jv4dc9R79qR13B\/Oqu8H6FYSB2oDyh67Csud3q\n+            PRrz4o7UKM+HQ\/obr1rUYqM=\n+            \"\"\");\n+\n+    final String keyAlgo;\n+    final String certStr;\n+    final String privateKeyStr;\n+\n+    \/\/ Trusted certificate\n+    private final static SSLExampleCert[] TRUSTED_CERTS = {\n+            SSLExampleCert.CA_RSA\n+    };\n+\n+    \/\/ Server certificate.\n+    private final static SSLExampleCert[] SERVER_CERTS = {\n+            SSLExampleCert.SERVER_EXAMPLE_RSA\n+    };\n+\n+    \/\/ Client certificate.\n+    private final static SSLExampleCert[] CLIENT_CERTS = {\n+            SSLExampleCert.CLIENT_EXAMPLE_RSA\n+    };\n+\n+    \/\/ Set \"www.example.com\" to loopback address.\n+    static {\n+        String hostsFileName = System.getProperty(\"jdk.net.hosts.file\");\n+        String loopbackHostname =\n+                InetAddress.getLoopbackAddress().getHostAddress() +\n+                \" \" + \"www.example.com    www.example.com.\\n\";\n+        try (FileWriter writer= new FileWriter(hostsFileName, false)) {\n+             writer.write(loopbackHostname);\n+        } catch (IOException ioe) {\n+             \/\/ ignore\n+        }\n+    }\n+\n+    SSLExampleCert(String keyAlgo, String certStr, String privateKeyStr) {\n+        this.keyAlgo = keyAlgo;\n+        this.certStr = certStr;\n+        this.privateKeyStr = privateKeyStr;\n+    }\n+\n+    public static SSLContext createClientSSLContext() throws Exception {\n+        return createSSLContext(TRUSTED_CERTS, CLIENT_CERTS);\n+    }\n+\n+    public static SSLContext createServerSSLContext() throws Exception {\n+        return createSSLContext(TRUSTED_CERTS, SERVER_CERTS);\n+    }\n+\n+    private static SSLContext createSSLContext(\n+            SSLExampleCert[] trustedCerts,\n+            SSLExampleCert[] endEntityCerts) throws Exception {\n+        char[] passphrase = \"passphrase\".toCharArray();\n+\n+        \/\/ Generate certificate from cert string.\n+        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+\n+        \/\/ Import the trusted certs.\n+        KeyStore ts = null;     \/\/ trust store\n+        if (trustedCerts != null && trustedCerts.length != 0) {\n+            ts = KeyStore.getInstance(\"PKCS12\");\n+            ts.load(null, null);\n+\n+            Certificate[] trustedCert = new Certificate[trustedCerts.length];\n+            for (int i = 0; i < trustedCerts.length; i++) {\n+                try (ByteArrayInputStream is = new ByteArrayInputStream(\n+                        trustedCerts[i].certStr.getBytes())) {\n+                    trustedCert[i] = cf.generateCertificate(is);\n+                }\n+\n+                ts.setCertificateEntry(\"trusted-cert-\" +\n+                        trustedCerts[i].name(), trustedCert[i]);\n+            }\n+        }\n+\n+        \/\/ Import the key materials.\n+        KeyStore ks = null;     \/\/ trust store\n+        if (endEntityCerts != null && endEntityCerts.length != 0) {\n+            ks = KeyStore.getInstance(\"PKCS12\");\n+            ks.load(null, null);\n+\n+            for (SSLExampleCert endEntityCert : endEntityCerts) {\n+                \/\/ generate the private key.\n+                PKCS8EncodedKeySpec priKeySpec = new PKCS8EncodedKeySpec(\n+                        Base64.getMimeDecoder()\n+                                .decode(endEntityCert.privateKeyStr));\n+                KeyFactory kf =\n+                        KeyFactory.getInstance(\n+                                endEntityCert.keyAlgo);\n+                PrivateKey priKey = kf.generatePrivate(priKeySpec);\n+\n+                \/\/ generate certificate chain\n+                Certificate keyCert;\n+                try (ByteArrayInputStream is = new ByteArrayInputStream(\n+                        endEntityCert.certStr.getBytes())) {\n+                    keyCert = cf.generateCertificate(is);\n+                }\n+\n+                Certificate[] chain = new Certificate[]{keyCert};\n+\n+                \/\/ import the key entry.\n+                ks.setKeyEntry(\"end-entity-cert-\" +\n+                                endEntityCert.name(),\n+                        priKey, passphrase, chain);\n+            }\n+        }\n+\n+        \/\/ Create an SSLContext object.\n+        TrustManagerFactory tmf =\n+                TrustManagerFactory.getInstance(\"PKIX\");\n+        tmf.init(ts);\n+\n+        SSLContext context = SSLContext.getInstance(\"TLS\");\n+        if (endEntityCerts != null && endEntityCerts.length != 0) {\n+            KeyManagerFactory kmf =\n+                    KeyManagerFactory.getInstance(\"NewSunX509\");\n+            kmf.init(ks, passphrase);\n+\n+            context.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n+        } else {\n+            context.init(null, tmf.getTrustManagers(), null);\n+        }\n+\n+        return context;\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/SSLExampleCert.java","additions":351,"deletions":0,"binary":false,"changes":351,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import static javax.sound.sampled.AudioFormat.Encoding.PCM_SIGNED;\n+import static javax.sound.sampled.AudioSystem.NOT_SPECIFIED;\n+\n+import javax.sound.sampled.AudioFileFormat;\n+import javax.sound.sampled.AudioFormat;\n+import javax.sound.sampled.AudioInputStream;\n+import javax.sound.sampled.AudioSystem;\n+import java.applet.AudioClip;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8279673\n+ * @summary Verify no NPE creating threads\n+ * @run main\/othervm DataPusherThreadCheck\n+ *\/\n+public class DataPusherThreadCheck {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Prepare the audio file\n+        File file = new File(\"audio.wav\");\n+        try {\n+            AudioFormat format =\n+                    new AudioFormat(PCM_SIGNED, 44100, 8, 1, 1, 44100, false);\n+            int dataSize = 6000*1000 * format.getFrameSize();\n+            InputStream in = new ByteArrayInputStream(new byte[dataSize]);\n+            AudioInputStream audioStream = new AudioInputStream(in, format, NOT_SPECIFIED);\n+            AudioSystem.write(audioStream, AudioFileFormat.Type.WAVE, file);\n+        } catch (Exception ignored) {\n+            return; \/\/ the test is not applicable\n+        }\n+        try {\n+            checkThread(file);\n+        } finally {\n+            Files.delete(file.toPath());\n+        }\n+    }\n+\n+    private static void checkThread(File file) throws Exception {\n+        AudioClip clip = (AudioClip) file.toURL().getContent();\n+        clip.loop();\n+        try {\n+            Thread.sleep(2000);\n+        } catch (InterruptedException ignored) {\n+        }\n+        boolean found = isDataPushedThreadExist();\n+        clip.stop();\n+        if (!found) {\n+            throw new RuntimeException(\"Thread 'DataPusher' isn't found\");\n+        }\n+    }\n+\n+    private static boolean isDataPushedThreadExist() {\n+        for (Thread t : Thread.getAllStackTraces().keySet()) {\n+            if (t.getName().equals(\"DataPusher\")) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/sound\/sampled\/Clip\/DataPusherThreadCheck.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -31,1 +31,1 @@\n- * @bug 8266421\n+ * @bug 8266421 8269091\n","filename":"test\/jdk\/javax\/sound\/sampled\/Clip\/SetPositionHang.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.KeyEvent;\n+import java.awt.Robot;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+import static java.util.stream.Collectors.toList;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @bug 4659800\n+ * @summary Check whether pressing <Enter> key generates\n+ * ActionEvent on focused Button or not. This is applicable only for\n+ * WindowsLookAndFeel and WindowsClassicLookAndFeel.\n+ * @run main EnterKeyActivatesButton\n+ *\/\n+public class EnterKeyActivatesButton {\n+    private static volatile boolean buttonPressed;\n+    private static JFrame frame;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    private static void setLookAndFeel(String lafName) {\n+        try {\n+            UIManager.setLookAndFeel(lafName);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Ignoring Unsupported L&F: \" + lafName);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        JButton focusedButton = new JButton(\"Button1\");\n+        focusedButton.addActionListener(e -> buttonPressed = true);\n+        panel.add(focusedButton);\n+        panel.add(new JButton(\"Button2\"));\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        focusedButton.requestFocusInWindow();\n+    }\n+\n+    public static void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        \/\/ Consider only Windows and Windows Classic LnFs.\n+        List<String> winlafs = Arrays.stream(UIManager.getInstalledLookAndFeels())\n+                                     .filter(laf -> laf.getName().startsWith(\"Windows\"))\n+                                     .map(laf -> laf.getClassName())\n+                                     .collect(toList());\n+\n+        for (String laf : winlafs) {\n+            try {\n+                buttonPressed = false;\n+                System.out.println(\"Testing L&F: \" + laf);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(laf);\n+                    createUI();\n+                });\n+\n+                robot.waitForIdle();\n+                robot.keyPress(KeyEvent.VK_ENTER);\n+                robot.keyRelease(KeyEvent.VK_ENTER);\n+                robot.waitForIdle();\n+\n+                if (buttonPressed) {\n+                    System.out.println(\"Test Passed for L&F: \" + laf);\n+                } else {\n+                    throw new RuntimeException(\"Test Failed, button not pressed for L&F: \" + laf);\n+                }\n+\n+            } finally {\n+                SwingUtilities.invokeAndWait(EnterKeyActivatesButton::disposeFrame);\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/4659800\/EnterKeyActivatesButton.java","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.awt.Dimension;\n@@ -33,0 +32,2 @@\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -37,1 +38,1 @@\n- * @bug 8216358\n+ * @bug 8216358 8279586\n@@ -46,1 +47,21 @@\n-        new ImageCheckboxTest().performTest();\n+        ImageCheckboxTest test = new ImageCheckboxTest();\n+        boolean passed = true;\n+        \/\/ There are bugs found in various LaFs that needs to be fixed\n+        \/\/ to enable testing there\n+        String[] skip = {\n+                \"GTK+\",  \/\/ JDK-8281580\n+                \"Nimbus\" \/\/ JDK-8281581\n+        };\n+        testloop:\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            for (String s : skip) {\n+                if (s.equals(laf.getName())) {\n+                    continue testloop;\n+                }\n+            }\n+            passed = passed && test.performTest(laf);\n+        }\n+\n+        if(!passed) {\n+            throw new RuntimeException(\"Test failed\");\n+        }\n@@ -49,1 +70,1 @@\n-    public void performTest() throws Exception {\n+    public boolean performTest(UIManager.LookAndFeelInfo laf) throws Exception {\n@@ -54,0 +75,3 @@\n+        BufferedImage imageFocusNotPainted = new BufferedImage(100, 50,\n+                BufferedImage.TYPE_INT_ARGB);\n+        boolean success = true;\n@@ -55,0 +79,5 @@\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ulaf) {\n+            return true;\n+        }\n@@ -56,0 +85,1 @@\n+        checkbox.setFocusPainted(true);\n@@ -63,3 +93,24 @@\n-            ImageIO.write(imageFocus, \"png\", new File(\"imageFocus.png\"));\n-            ImageIO.write(imageNoFocus, \"png\", new File(\"imageNoFocus.png\"));\n-            throw new Exception(\"Changing focus is not visualized\");\n+            File folder = new File(laf.getName());\n+            if (!folder.exists()) {\n+                folder.mkdir();\n+            }\n+            ImageIO.write(imageFocus, \"png\", new File(folder, \"\/imageFocus.png\"));\n+            ImageIO.write(imageNoFocus, \"png\", new File(folder, \"\/imageNoFocus.png\"));\n+            System.err.println(laf.getName() + \": Changing of focus is not visualized\");\n+            success = false;\n+        }\n+\n+        checkbox.setFocusPainted(false);\n+        checkbox.paint(imageFocusNotPainted.createGraphics());\n+\n+        if (!Util.compareBufferedImages(imageFocusNotPainted, imageNoFocus)) {\n+            File folder = new File(laf.getName());\n+            if (!folder.exists()) {\n+                folder.mkdir();\n+            }\n+            ImageIO.write(imageFocusNotPainted, \"png\",\n+                    new File(folder,\"imageFocusNotPainted.png\"));\n+            ImageIO.write(imageFocus, \"png\", new File(folder, \"imageFocus.png\"));\n+            ImageIO.write(imageNoFocus, \"png\", new File(folder, \"imageNoFocus.png\"));\n+            System.err.println(laf.getName() + \": setFocusPainted(false) is ignored\");\n+            success = false;\n@@ -67,0 +118,1 @@\n+        return success;\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/ImageCheckboxFocus\/ImageCheckboxTest.java","additions":60,"deletions":8,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @summary We should support NSTexturedBackgroundWindowMask style on OSX.\n+ * @summary We should support NSWindowStyleMaskTexturedBackground style on OSX.\n","filename":"test\/jdk\/javax\/swing\/JFrame\/NSTexturedJFrame\/NSTexturedJFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/TestSelectedTextBackgroundColor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JProgressBar\/TestJProgressBarHighlightColor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n- \/*\n+\/*\n@@ -27,2 +27,0 @@\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n@@ -37,2 +35,1 @@\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n+\n@@ -48,1 +45,0 @@\n-import javax.swing.UnsupportedLookAndFeelException;\n@@ -62,1 +58,1 @@\n-    public static void main(String args[]) throws Throwable {\n+    public static void main(String[] args) throws Throwable {\n@@ -70,0 +66,1 @@\n+        robot.waitForIdle();\n@@ -79,1 +76,1 @@\n-        \/\/ shift tab key test grouped and non grouped radio button\n+        \/\/ shift tab key test grouped and non-grouped radio button\n@@ -155,1 +152,1 @@\n-        mainFrame.setLocation(200, 200);\n+        mainFrame.setLocationRelativeTo(null);\n@@ -162,3 +159,3 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -176,1 +173,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -187,3 +184,3 @@\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n@@ -200,2 +197,2 @@\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_RIGHT);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_RIGHT);\n@@ -211,2 +208,2 @@\n-        hitKey(robot, KeyEvent.VK_UP);\n-        hitKey(robot, KeyEvent.VK_LEFT);\n+        hitKey(KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_LEFT);\n@@ -222,2 +219,2 @@\n-        hitKey(robot, KeyEvent.VK_UP);\n-        hitKey(robot, KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_UP);\n@@ -233,1 +230,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -243,1 +240,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -252,3 +249,3 @@\n-    private static Boolean actRB1 = false;\n-    private static Boolean actRB2 = false;\n-    private static Boolean actRB3 = false;\n+    private static boolean actRB1 = false;\n+    private static boolean actRB2 = false;\n+    private static boolean actRB3 = false;\n@@ -271,3 +268,3 @@\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n@@ -291,1 +288,1 @@\n-    private static void hitKey(Robot robot, int keycode) {\n+    private static void hitKey(int keycode) {\n@@ -297,1 +294,1 @@\n-    private static void hitKey(Robot robot, int mode, int keycode) {\n+    private static void hitKey(int mode, int keycode) {\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/8033699\/bug8033699.java","additions":30,"deletions":33,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n- \/*\n+\/*\n@@ -27,2 +27,0 @@\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n@@ -31,1 +29,0 @@\n- * @author Vivi An\n@@ -34,5 +31,12 @@\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import java.awt.event.*;\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JTextField;\n+import javax.swing.LayoutFocusTraversalPolicy;\n+import javax.swing.SwingUtilities;\n@@ -45,1 +49,1 @@\n-    public static void main(String args[]) throws Throwable {\n+    public static void main(String[] args) throws Throwable {\n@@ -47,5 +51,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    createAndShowGUI();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug8075609::createAndShowGUI);\n@@ -55,0 +55,1 @@\n+            robot.waitForIdle();\n@@ -61,1 +62,5 @@\n-            if (mainFrame != null) SwingUtilities.invokeAndWait(() -> mainFrame.dispose());\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (mainFrame != null) {\n+                    mainFrame.dispose();\n+                }\n+            });\n@@ -94,0 +99,1 @@\n+        mainFrame.setLocationRelativeTo(null);\n@@ -99,10 +105,8 @@\n-    private static void runTest1() throws Exception{\n-        hitKey(robot, KeyEvent.VK_TAB);\n-\n-        robot.delay(1000 );\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                if (!textField.hasFocus()) {\n-                    System.out.println(\"Radio Button Group Go To Next Component through Tab Key failed\");\n-                    throw new RuntimeException(\"Focus is not on textField as Expected\");\n-                }\n+    private static void runTest1() throws Exception {\n+        hitKey(KeyEvent.VK_TAB);\n+\n+        robot.delay(1000);\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!textField.hasFocus()) {\n+                System.out.println(\"Radio Button Group Go To Next Component through Tab Key failed\");\n+                throw new RuntimeException(\"Focus is not on textField as Expected\");\n@@ -113,1 +117,1 @@\n-    private static void hitKey(Robot robot, int keycode) {\n+    private static void hitKey(int keycode) {\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/8075609\/bug8075609.java","additions":32,"deletions":28,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8280913\n+ * @summary Check whether the default button is honored when <Enter> key is pressed.\n+ * @run main DefaultButtonTest\n+ *\/\n+public class DefaultButtonTest {\n+    private volatile boolean buttonPressed;\n+    private JFrame frame;\n+\n+    public static void main(String[] s) throws Exception {\n+        DefaultButtonTest test = new DefaultButtonTest();\n+        test.runTest();\n+    }\n+\n+    private static void setLookAndFeel(String lafName) {\n+        try {\n+            UIManager.setLookAndFeel(lafName);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Ignoring Unsupported L&F: \" + lafName);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private void createUI() {\n+        frame = new JFrame(\"Default Button Test\");\n+        JPanel panel = new JPanel();\n+        panel.add(new JTextField(\"Text field\"));\n+        JButton button1 = new JButton(\"Default\");\n+        button1.addActionListener(e -> buttonPressed = true);\n+        panel.add(button1);\n+        panel.add(new JButton(\"Button2\"));\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.getRootPane().setDefaultButton(button1);\n+        frame.setVisible(true);\n+    }\n+\n+    public void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            try {\n+                buttonPressed = false;\n+                String lafName = laf.getClassName();\n+                System.out.println(\"Testing L&F: \" + lafName);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(lafName);\n+                    createUI();\n+                });\n+                robot.waitForIdle();\n+                robot.keyPress(KeyEvent.VK_ENTER);\n+                robot.keyRelease(KeyEvent.VK_ENTER);\n+                robot.waitForIdle();\n+\n+                if (buttonPressed) {\n+                    System.out.println(\"Test Passed for L&F: \" + lafName);\n+                } else {\n+                    throw new RuntimeException(\"Test Failed, Default Button not pressed for L&F: \" + lafName);\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(this::disposeFrame);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/DefaultButtonTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JSlider\/TestJSliderRendering.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,203 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.ComponentOrientation;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerDateModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4515999\n+ * @summary Check whether incrementing dates via the keyboard (up\/down) gives\n+ * the same results as using mouse press on the arrow buttons in a JSpinner.\n+ * @run main JSpinnerMouseAndKeyPressTest\n+ *\/\n+public class JSpinnerMouseAndKeyPressTest {\n+    \/\/ 2 days in milliseconds\n+    private static final int EXPECTED_VALUE_2_DAYS = 2 * 24 * 60 * 60 * 1000;\n+\n+    private static JFrame frame;\n+    private static JSpinner spinner;\n+    private static volatile Point spinnerUpButtonCenter;\n+    private static volatile Point spinnerDownButtonCenter;\n+    private static volatile Date spinnerValue;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    private static void setLookAndFeel(final String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            System.out.println(\"LookAndFeel: \" + laf);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        spinner = new JSpinner();\n+        spinner.setModel(new DateModel());\n+        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, \"dd\/MM\/yy\");\n+        spinner.setEditor(editor);\n+        spinner.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        panel.add(spinner);\n+        frame.add(panel);\n+        frame.setUndecorated(true);\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+\n+    public static void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(100);\n+        List<String> lafs = Arrays.stream(getInstalledLookAndFeels())\n+                                  .map(UIManager.LookAndFeelInfo::getClassName)\n+                                  .collect(Collectors.toList());\n+        for (final String laf : lafs) {\n+            try {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(laf);\n+                    createUI();\n+                });\n+                robot.waitForIdle();\n+\n+                SwingUtilities.invokeAndWait(() -> {\n+                    Point loc = spinner.getLocationOnScreen();\n+                    int editorWidth = spinner.getEditor().getWidth();\n+                    int buttonWidth = spinner.getWidth() - editorWidth;\n+                    int quarterHeight = spinner.getHeight() \/ 4;\n+\n+                    spinnerUpButtonCenter = new Point(loc.x + editorWidth\n+                            + (buttonWidth \/ 2),\n+                            loc.y + quarterHeight);\n+                    spinnerDownButtonCenter = new Point(spinnerUpButtonCenter.x,\n+                            loc.y + (3 * quarterHeight));\n+                });\n+\n+                \/\/ Mouse press use-case\n+                \/\/ Move Mouse pointer to UP button center and click it\n+                robot.mouseMove(spinnerUpButtonCenter.x, spinnerUpButtonCenter.y);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+                updateSpinnerValue();\n+                long upValue = spinnerValue.getTime();\n+\n+                \/\/ Move Mouse pointer to DOWN button center and click it\n+                robot.mouseMove(spinnerDownButtonCenter.x, spinnerDownButtonCenter.y);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+                updateSpinnerValue();\n+                long downValue = spinnerValue.getTime();\n+\n+                long mouseIncrement = upValue - downValue;\n+\n+                \/\/ Key press use-case\n+                \/\/ Up Key press\n+                robot.keyPress(KeyEvent.VK_UP);\n+                robot.keyRelease(KeyEvent.VK_UP);\n+\n+                updateSpinnerValue();\n+                upValue = spinnerValue.getTime();\n+\n+                \/\/ Down Key press\n+                robot.keyPress(KeyEvent.VK_DOWN);\n+                robot.keyRelease(KeyEvent.VK_DOWN);\n+\n+                updateSpinnerValue();\n+                downValue = spinnerValue.getTime();\n+\n+                long keyIncrement = upValue - downValue;\n+\n+                if ((keyIncrement == EXPECTED_VALUE_2_DAYS) &&\n+                        (mouseIncrement == EXPECTED_VALUE_2_DAYS)) {\n+                    System.out.println(\"Test passed\");\n+                } else {\n+                    throw new RuntimeException(\"Test failed because keyIncrement: \" +\n+                            keyIncrement + \" and mouseIncrement: \" +\n+                            mouseIncrement + \" should match with the expected value \" +\n+                            EXPECTED_VALUE_2_DAYS + \" for LnF \" + laf);\n+                }\n+\n+            } finally {\n+                SwingUtilities.invokeAndWait(JSpinnerMouseAndKeyPressTest::disposeFrame);\n+            }\n+        }\n+    }\n+\n+    private static void updateSpinnerValue() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> spinnerValue = (Date) spinner.getValue());\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private static class DateModel extends SpinnerDateModel {\n+\n+        private final Calendar cal = Calendar.getInstance();\n+\n+        @Override\n+        public Object getNextValue() {\n+            cal.setTime(getDate());\n+            cal.add(Calendar.DAY_OF_MONTH, 2); \/\/ Increment two days\n+            return cal.getTime();\n+        }\n+\n+        @Override\n+        public Object getPreviousValue() {\n+            cal.setTime(getDate());\n+            cal.add(Calendar.DAY_OF_MONTH, -2); \/\/ Decrement two days\n+            return cal.getTime();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/4515999\/JSpinnerMouseAndKeyPressTest.java","additions":203,"deletions":0,"binary":false,"changes":203,"status":"added"},{"patch":"@@ -0,0 +1,282 @@\n+\/*\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.ComponentOrientation;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.Arrays;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerDateModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4670051\n+ * @summary Checks whether JSpinner with a SpinnerDateModel\n+ *          spins the field where cursor is located.\n+ * @run main DateFieldUnderCursorTest\n+ *\/\n+public class DateFieldUnderCursorTest {\n+\n+    private static final Calendar expected = Calendar.getInstance();\n+    private static final Calendar actual = Calendar.getInstance();\n+    private static Robot robot;\n+    private static JSpinner spinner;\n+    private static Date initValue;\n+    private static Date upValue;\n+    private static Date downValue;\n+    private static JFrame frame;\n+    private static boolean passed = true;\n+    private static volatile Point spinnerUpButtonCenter;\n+    private static volatile Point spinnerDownButtonCenter;\n+    private static volatile Date spinnerValue;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    public static void runTest() throws Exception {\n+        robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(100);\n+        List<String> lafs = Arrays.stream(getInstalledLookAndFeels())\n+                                  .map(UIManager.LookAndFeelInfo::getClassName)\n+                                  .collect(Collectors.toList());\n+        for (final String laf : lafs) {\n+            try {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    setLookAndFeel(laf);\n+                    createUI();\n+                });\n+                SwingUtilities.invokeAndWait(() -> {\n+                    Point loc = spinner.getLocationOnScreen();\n+                    int editorWidth = spinner.getEditor().getWidth();\n+                    int buttonWidth = spinner.getWidth() - editorWidth;\n+                    int quarterHeight = spinner.getHeight() \/ 4;\n+\n+                    spinnerUpButtonCenter = new Point(loc.x + editorWidth\n+                            + (buttonWidth \/ 2),\n+                            loc.y + quarterHeight);\n+                    spinnerDownButtonCenter = new Point(spinnerUpButtonCenter.x,\n+                            loc.y + (3 * quarterHeight));\n+                });\n+\n+                \/\/ Cursor at Day field.\n+                \/\/ Increment Day\n+                initValue = getSpinnerValue();\n+                mousePressOnUpButton();\n+                upValue = getSpinnerValue();\n+                verifyDayIncrement();\n+                \/\/ Decrement Day\n+                initValue = getSpinnerValue();\n+                mousePressOnDownButton();\n+                downValue = getSpinnerValue();\n+                verifyDayDecrement();\n+\n+                \/\/ Cursor at Month Field\n+                pressRightArrowKey();\n+                \/\/ Increment Month\n+                initValue = getSpinnerValue();\n+                mousePressOnUpButton();\n+                upValue = getSpinnerValue();\n+                verifyMonthIncrement();\n+                \/\/ Decrement Month\n+                initValue = getSpinnerValue();\n+                mousePressOnDownButton();\n+                downValue = getSpinnerValue();\n+                verifyMonthDecrement();\n+\n+                \/\/ Cursor at Year Field\n+                pressRightArrowKey();\n+                \/\/ Increment Year\n+                initValue = getSpinnerValue();\n+                mousePressOnUpButton();\n+                upValue = getSpinnerValue();\n+                verifyYearIncrement();\n+                \/\/ Decrement Year\n+                initValue = getSpinnerValue();\n+                mousePressOnDownButton();\n+                downValue = getSpinnerValue();\n+                verifyYearDecrement();\n+\n+                if (passed) {\n+                    System.out.println(\"Test Passed\");\n+                } else {\n+                    throw new RuntimeException(\"Test Failed as one or more cases failed\");\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(DateFieldUnderCursorTest::disposeFrame);\n+            }\n+        }\n+    }\n+\n+    private static Date getSpinnerValue() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> spinnerValue = (Date) spinner.getValue());\n+        return spinnerValue;\n+    }\n+\n+    public static void pressRightArrowKey() {\n+        robot.keyPress(KeyEvent.VK_RIGHT);\n+        robot.keyRelease(KeyEvent.VK_RIGHT);\n+    }\n+\n+    public static void mousePressOnUpButton() {\n+        robot.mouseMove(spinnerUpButtonCenter.x, spinnerUpButtonCenter.y);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+    }\n+\n+    public static void mousePressOnDownButton() {\n+        robot.mouseMove(spinnerDownButtonCenter.x, spinnerDownButtonCenter.y);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+    }\n+\n+\n+    public static boolean compareDates() {\n+        return (expected.get(Calendar.DATE) == actual.get(Calendar.DATE))\n+                && (expected.get(Calendar.MONTH) == actual.get(Calendar.MONTH))\n+                && (expected.get(Calendar.YEAR) == actual.get(Calendar.YEAR));\n+    }\n+\n+    private static void checkResult() {\n+        if (compareDates()) {\n+            System.out.println(\" Case Passed\");\n+        } else {\n+            passed = false;\n+            System.out.println(\" Case Failed because the expected: \" + expected.getTime()\n+                    + \" and actual: \" + actual.getTime() + \" outputs do not match.\");\n+        }\n+    }\n+\n+    private static void updateCalendarObjects(Date finalValue) {\n+        expected.setTime(initValue);\n+        actual.setTime(finalValue);\n+    }\n+\n+    \/**\n+     * Verifying that JSpinner increments the date field when cursor is on date field\n+     *\/\n+    private static void verifyDayIncrement() {\n+        System.out.print(\"verifyDateIncrement\");\n+        updateCalendarObjects(upValue);\n+        expected.add(Calendar.DATE, 1);\n+        checkResult();\n+    }\n+\n+    \/**\n+     * Verifying that JSpinner decrements the date field when cursor is on date field\n+     *\/\n+    private static void verifyDayDecrement() {\n+        System.out.print(\"verifyDateDecrement\");\n+        updateCalendarObjects(downValue);\n+        expected.add(Calendar.DATE, -1);\n+        checkResult();\n+    }\n+\n+    \/**\n+     * Verifying that JSpinner increments the month field when cursor is on month field\n+     *\/\n+    private static void verifyMonthIncrement() {\n+        System.out.print(\"verifyMonthIncrement\");\n+        updateCalendarObjects(upValue);\n+        expected.add(Calendar.MONTH, 1);\n+        checkResult();\n+    }\n+\n+    \/**\n+     * Verifying that JSpinner decrements the month field when cursor is on month field\n+     *\/\n+    private static void verifyMonthDecrement() {\n+        System.out.print(\"verifyMonthDecrement\");\n+        updateCalendarObjects(downValue);\n+        expected.add(Calendar.MONTH, -1);\n+        checkResult();\n+    }\n+\n+    \/**\n+     * Verifying that, JSpinner decrements the year field when the cursor is on year field.\n+     *\/\n+    private static void verifyYearDecrement() {\n+        System.out.print(\"verifyYearDecrement\");\n+        updateCalendarObjects(downValue);\n+        expected.add(Calendar.YEAR, -1);\n+        checkResult();\n+    }\n+\n+    \/**\n+     * Verifying that JSpinner increments the year field when cursor is on year field\n+     *\/\n+    private static void verifyYearIncrement() {\n+        System.out.print(\"verifyYearIncrement\");\n+        updateCalendarObjects(upValue);\n+        expected.add(Calendar.YEAR, 1);\n+        checkResult();\n+    }\n+\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        spinner = new JSpinner(new SpinnerDateModel());\n+        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, \" dd\/MM\/yy \");\n+        spinner.setEditor(editor);\n+        spinner.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        panel.add(spinner);\n+\n+        frame.add(panel);\n+        frame.setUndecorated(true);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void setLookAndFeel(final String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            System.out.println(\"LookAndFeel: \" + laf);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/4670051\/DateFieldUnderCursorTest.java","additions":282,"deletions":0,"binary":false,"changes":282,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -122,1 +122,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/TestSelectedTextBackgroundColor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8016524\n+ * @requires (os.family==\"mac\")\n+ * @key headful\n+ * @summary Tests whether the bottom line of JTableHeader border is visible for MacOS default LAF\n+ * @run main JTHeaderBorderTest\n+ *\/\n+\n+import java.awt.Graphics2D;\n+import javax.imageio.ImageIO;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static java.awt.image.BufferedImage.TYPE_INT_ARGB;\n+\n+public class JTHeaderBorderTest {\n+\n+    private static JFrame frame;\n+    private static JTable table;\n+    private static JScrollPane scrollableTable;\n+\n+    private static final int FRAME_HT = 300;\n+    private static final int FRAME_WT = 300;\n+    private static final int TABLE_COLS = 3;\n+    private static final int TABLE_ROWS = 2;\n+    private static final int Y_OFFSET_START = 30;\n+    private static final int Y_OFFSET_END = 55;\n+    private static final int X_OFFSET = 25;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            try {\n+                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException\n+                    | UnsupportedLookAndFeelException e) {\n+                throw new RuntimeException(\"Unsupported Look&Feel Class\");\n+            }\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                table = new JTable(TABLE_ROWS, TABLE_COLS);\n+                scrollableTable = new JScrollPane(table);\n+\n+                frame = new JFrame();\n+                frame.getContentPane().add(scrollableTable);\n+                frame.setSize(FRAME_WT, FRAME_HT);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+                \/\/ paint JFrame to BufferedImage\n+                BufferedImage image = new BufferedImage(FRAME_WT, FRAME_HT, TYPE_INT_ARGB);\n+                Graphics2D graphics2D = image.createGraphics();\n+                frame.paint(graphics2D);\n+                graphics2D.dispose();\n+\n+                int tableColor = table.getBackground().getRGB();\n+                int headerColor = table.getTableHeader().getBackground().getRGB();\n+                \/\/at start pixelColor initialized to table header background color\n+                int pixelColor = headerColor;\n+                boolean isBottomLineVisible = false;\n+\n+                \/\/ scan table header region to check if bottom border of JTableHeader is visible\n+                for (int y = Y_OFFSET_START; y <= Y_OFFSET_END; y++) {\n+                    pixelColor = image.getRGB(X_OFFSET, y);\n+                    System.out.println(\"Y offset: \"+ y + \" Color: \"+ (Integer.toHexString(image.getRGB(X_OFFSET, y))));\n+                    if (pixelColor != tableColor || pixelColor != headerColor) {\n+                        isBottomLineVisible = true;\n+                        break;\n+                    }\n+                }\n+                \/\/ throw Runtime Exception if border is not visible in the scanned region\n+                if (!isBottomLineVisible) {\n+                    saveImage(image, \"JTableHeader.png\");\n+                    throw new RuntimeException(\"JTableHeader Bottom Border not visible\");\n+                }\n+            });\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(()-> frame.dispose());\n+            }\n+        }\n+    }\n+    \/\/ to save the BufferedImage as .png in the event the test fails (for debugging purpose)\n+    private static void saveImage(BufferedImage image, String filename) {\n+        try {\n+            ImageIO.write(image, \"png\", new File(filename));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/8016524\/JTHeaderBorderTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -0,0 +1,176 @@\n+\/*\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicReference;\n+import java.util.stream.Collectors;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\n+import static javax.swing.UIManager.getInstalledLookAndFeels;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4514331\n+ * @summary Check whether pressing <Tab> key always shift focus to next component,\n+ *          even though the current focus is in JTextArea and some text is already selected.\n+ * @run main TabShiftsFocusToNextComponent\n+ *\/\n+public class TabShiftsFocusToNextComponent {\n+\n+    private static JFrame frame;\n+    private static JTextArea textArea;\n+    private static Robot robot;\n+    private static CountDownLatch textAreaGainedFocusLatch;\n+    private static CountDownLatch buttonGainedFocusLatch;\n+\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n+    }\n+\n+    public static void runTest() throws Exception {\n+        robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(200);\n+        List<String> lafs = Arrays.stream(getInstalledLookAndFeels())\n+                                  .map(UIManager.LookAndFeelInfo::getClassName)\n+                                  .collect(Collectors.toList());\n+        for (final String laf : lafs) {\n+            textAreaGainedFocusLatch = new CountDownLatch(1);\n+            buttonGainedFocusLatch = new CountDownLatch(1);\n+            try {\n+                AtomicBoolean lafSetSuccess = new AtomicBoolean(false);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    lafSetSuccess.set(setLookAndFeel(laf));\n+                    if (lafSetSuccess.get()) {\n+                        createUI();\n+                    }\n+                });\n+                if (!lafSetSuccess.get()) {\n+                    continue;\n+                }\n+                robot.waitForIdle();\n+\n+                SwingUtilities.invokeAndWait(() -> textArea.requestFocusInWindow());\n+\n+                \/\/ Waits until the textArea gains focus.\n+                if (!textAreaGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                            \"but the JTextArea can't gain focus for L&F: \" + laf);\n+                }\n+\n+                AtomicReference<Point> textAreaLoc = new AtomicReference<Point>();\n+                SwingUtilities.invokeAndWait(() -> {\n+                    textAreaLoc.set(textArea.getLocationOnScreen());\n+                });\n+\n+                final int x = textAreaLoc.get().x;\n+                final int y = textAreaLoc.get().y;\n+                robot.mouseMove(x + 5, y + 5);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseMove(x + 20, y + 5);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.keyPress(KeyEvent.VK_TAB);\n+                robot.keyRelease(KeyEvent.VK_TAB);\n+\n+                \/\/ Waits until the button gains focus.\n+                if (!buttonGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                            \"but the Button can't gain focus when 'Tab' key pressed for L&F: \" + laf);\n+                } else {\n+                    System.out.println(\" Test passed for \" + laf);\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(TabShiftsFocusToNextComponent::disposeFrame);\n+            }\n+        }\n+    }\n+\n+\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        textArea = new JTextArea(\"I am a JTextArea\");\n+        textArea.addFocusListener(new FocusAdapter() {\n+            @Override\n+            public void focusGained(FocusEvent e) {\n+                textAreaGainedFocusLatch.countDown();\n+            }\n+        });\n+        textArea.setEditable(false);\n+        panel.add(textArea);\n+        JButton button = new JButton(\"Button\");\n+        panel.add(button);\n+        button.addFocusListener(new FocusAdapter() {\n+            @Override\n+            public void focusGained(FocusEvent e) {\n+                buttonGainedFocusLatch.countDown();\n+            }\n+        });\n+\n+        frame.add(panel);\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+        frame.setUndecorated(true);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static boolean setLookAndFeel(String lafName) {\n+        try {\n+            UIManager.setLookAndFeel(lafName);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Ignoring Unsupported L&F: \" + lafName);\n+            return false;\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+        return true;\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTextArea\/4514331\/TabShiftsFocusToNextComponent.java","additions":176,"deletions":0,"binary":false,"changes":176,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JTextPane\/TestJTextPaneBackgroundColor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -137,1 +137,1 @@\n-                    frame.setSize(200, 200);\n+                    frame.setSize(400, 400);\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/TestTooltipBackgroundColor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,143 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8139173\n+ * @requires (os.family == \"mac\")\n+ * @summary Verify JInternalFrame's border\n+ * @run main JInternalFrameBorderTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class JInternalFrameBorderTest {\n+\n+    private static JFrame frame;\n+    private static JDesktopPane desktopPane;\n+    private static JInternalFrame internalFrame;\n+    private static final int LIMIT = 100;\n+    private static Robot robot;\n+    private static Point pos;\n+    private static Rectangle rect;\n+    private static Insets insets;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        createUI();\n+        robot.waitForIdle();\n+        robot.delay(1000);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            pos = internalFrame.getLocationOnScreen();\n+            rect = internalFrame.getBounds();\n+            insets = internalFrame.getInsets();\n+        });\n+        robot.waitForIdle();\n+\n+        \/\/ bottom\n+        int x = pos.x + rect.x + rect.width\/2;\n+        int y = pos.y + rect.y + rect.height - insets.bottom + 1;\n+        Color colorBottom = robot.getPixelColor(x, y);\n+\n+        \/\/ left\n+        x = pos.x + rect.x + insets.left - 1;\n+        y = pos.y + rect.y + rect.height\/2;\n+        Color colorLeft = robot.getPixelColor(x, y);\n+\n+        \/\/ right\n+        x = pos.x + rect.x + rect.width - insets.left + 1;\n+        y = pos.y + rect.y + rect.height\/2;\n+        Color colorRight = robot.getPixelColor(x, y);\n+\n+        robot.waitForIdle();\n+        cleanUp();\n+\n+        int diff = getDiff(colorLeft, colorBottom);\n+        if (diff > LIMIT) {\n+            throw new RuntimeException(\"Unexpected border bottom=\" +\n+                    colorBottom + \" left=\" + colorLeft);\n+        }\n+        diff = getDiff(colorRight, colorBottom);\n+        if (diff > LIMIT) {\n+            throw new RuntimeException(\"Unexpected border bottom=\" +\n+                    colorBottom + \" right=\" + colorRight);\n+        }\n+    }\n+\n+    private static void createUI() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                UIManager.setLookAndFeel(\"com.apple.laf.AquaLookAndFeel\");\n+            } catch (Exception e) {\n+                throw new RuntimeException(\"Cannot initialize Aqua L&F\");\n+            }\n+            desktopPane = new JDesktopPane() {\n+                @Override\n+                protected void paintComponent(Graphics g) {\n+                    super.paintComponent(g);\n+                    g.setColor(Color.BLUE);\n+                    g.fillRect(0, 0, getWidth(), getHeight());\n+                }\n+            };\n+            internalFrame = new JInternalFrame();\n+            frame = new JFrame();\n+            internalFrame.setSize(500, 200);\n+            internalFrame.setVisible(true);\n+            desktopPane.add(internalFrame);\n+\n+            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+            frame.getContentPane().setLayout(new BorderLayout());\n+            frame.getContentPane().add(desktopPane, \"Center\");\n+            frame.setSize(500, 500);\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+            frame.toFront();\n+        });\n+    }\n+\n+    private static int getDiff(Color c1, Color c2) {\n+        int r = Math.abs(c1.getRed()   - c2.getRed());\n+        int g = Math.abs(c1.getGreen() - c2.getGreen());\n+        int b = Math.abs(c1.getBlue()  - c2.getBlue());\n+        return r + g + b;\n+    }\n+\n+    private static void cleanUp() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame.dispose();\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/aqua\/JInternalFrameBorderTest.java","additions":143,"deletions":0,"binary":false,"changes":143,"status":"added"},{"patch":"@@ -1204,0 +1204,4 @@\n+    static byte firstNonZero(byte a, byte b) {\n+        return Byte.compare(a, (byte) 0) != 0 ? a : b;\n+    }\n+\n@@ -3219,1 +3223,1 @@\n-            res = (byte)Math.min(res, a[i]);\n+            res = (byte) Math.min(res, a[i]);\n@@ -3227,2 +3231,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduce(a, i));\n@@ -3250,1 +3254,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3260,2 +3264,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.min(res, a[i]);\n@@ -3269,3 +3273,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3295,1 +3298,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3305,1 +3308,1 @@\n-            res = (byte)Math.max(res, a[i]);\n+            res = (byte) Math.max(res, a[i]);\n@@ -3313,2 +3316,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduce(a, i));\n@@ -3336,1 +3339,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3346,2 +3349,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.max(res, a[i]);\n@@ -3355,3 +3358,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3381,1 +3383,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3388,0 +3390,85 @@\n+    static byte FIRST_NONZEROReduce(byte[] a, int idx) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAll(byte[] a) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceByte128VectorTests(IntFunction<byte[]> fa) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Byte128VectorTests::FIRST_NONZEROReduce, Byte128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static byte FIRST_NONZEROReduceMasked(byte[] a, int idx, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAllMasked(byte[] a, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceByte128VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Byte128VectorTests::FIRST_NONZEROReduceMasked, Byte128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1204,0 +1204,4 @@\n+    static byte firstNonZero(byte a, byte b) {\n+        return Byte.compare(a, (byte) 0) != 0 ? a : b;\n+    }\n+\n@@ -3219,1 +3223,1 @@\n-            res = (byte)Math.min(res, a[i]);\n+            res = (byte) Math.min(res, a[i]);\n@@ -3227,2 +3231,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduce(a, i));\n@@ -3250,1 +3254,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3260,2 +3264,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.min(res, a[i]);\n@@ -3269,3 +3273,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3295,1 +3298,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3305,1 +3308,1 @@\n-            res = (byte)Math.max(res, a[i]);\n+            res = (byte) Math.max(res, a[i]);\n@@ -3313,2 +3316,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduce(a, i));\n@@ -3336,1 +3339,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3346,2 +3349,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.max(res, a[i]);\n@@ -3355,3 +3358,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3381,1 +3383,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3388,0 +3390,85 @@\n+    static byte FIRST_NONZEROReduce(byte[] a, int idx) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAll(byte[] a) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceByte256VectorTests(IntFunction<byte[]> fa) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Byte256VectorTests::FIRST_NONZEROReduce, Byte256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static byte FIRST_NONZEROReduceMasked(byte[] a, int idx, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAllMasked(byte[] a, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceByte256VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Byte256VectorTests::FIRST_NONZEROReduceMasked, Byte256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @run testng\/othervm\/timeout=240 -ea -esa -Xbatch -XX:-TieredCompilation Byte512VectorTests\n+ * @run testng\/othervm -ea -esa -Xbatch -XX:-TieredCompilation Byte512VectorTests\n@@ -1204,0 +1204,4 @@\n+    static byte firstNonZero(byte a, byte b) {\n+        return Byte.compare(a, (byte) 0) != 0 ? a : b;\n+    }\n+\n@@ -3219,1 +3223,1 @@\n-            res = (byte)Math.min(res, a[i]);\n+            res = (byte) Math.min(res, a[i]);\n@@ -3227,2 +3231,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduce(a, i));\n@@ -3250,1 +3254,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3260,2 +3264,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.min(res, a[i]);\n@@ -3269,3 +3273,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3295,1 +3298,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3305,1 +3308,1 @@\n-            res = (byte)Math.max(res, a[i]);\n+            res = (byte) Math.max(res, a[i]);\n@@ -3313,2 +3316,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduce(a, i));\n@@ -3336,1 +3339,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3346,2 +3349,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.max(res, a[i]);\n@@ -3355,3 +3358,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3381,1 +3383,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3388,0 +3390,85 @@\n+    static byte FIRST_NONZEROReduce(byte[] a, int idx) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAll(byte[] a) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceByte512VectorTests(IntFunction<byte[]> fa) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Byte512VectorTests::FIRST_NONZEROReduce, Byte512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static byte FIRST_NONZEROReduceMasked(byte[] a, int idx, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAllMasked(byte[] a, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceByte512VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Byte512VectorTests::FIRST_NONZEROReduceMasked, Byte512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":108,"deletions":21,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -1204,0 +1204,4 @@\n+    static byte firstNonZero(byte a, byte b) {\n+        return Byte.compare(a, (byte) 0) != 0 ? a : b;\n+    }\n+\n@@ -3219,1 +3223,1 @@\n-            res = (byte)Math.min(res, a[i]);\n+            res = (byte) Math.min(res, a[i]);\n@@ -3227,2 +3231,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduce(a, i));\n@@ -3250,1 +3254,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3260,2 +3264,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.min(res, a[i]);\n@@ -3269,3 +3273,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3295,1 +3298,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3305,1 +3308,1 @@\n-            res = (byte)Math.max(res, a[i]);\n+            res = (byte) Math.max(res, a[i]);\n@@ -3313,2 +3316,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduce(a, i));\n@@ -3336,1 +3339,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3346,2 +3349,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.max(res, a[i]);\n@@ -3355,3 +3358,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3381,1 +3383,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3388,0 +3390,85 @@\n+    static byte FIRST_NONZEROReduce(byte[] a, int idx) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAll(byte[] a) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceByte64VectorTests(IntFunction<byte[]> fa) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Byte64VectorTests::FIRST_NONZEROReduce, Byte64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static byte FIRST_NONZEROReduceMasked(byte[] a, int idx, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAllMasked(byte[] a, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceByte64VectorTestsMasked(IntFunction<byte[]> fa, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Byte64VectorTests::FIRST_NONZEROReduceMasked, Byte64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @run testng\/othervm\/timeout=240 -ea -esa -Xbatch -XX:-TieredCompilation ByteMaxVectorTests\n+ * @run testng\/othervm -ea -esa -Xbatch -XX:-TieredCompilation ByteMaxVectorTests\n@@ -1209,0 +1209,4 @@\n+    static byte firstNonZero(byte a, byte b) {\n+        return Byte.compare(a, (byte) 0) != 0 ? a : b;\n+    }\n+\n@@ -3224,1 +3228,1 @@\n-            res = (byte)Math.min(res, a[i]);\n+            res = (byte) Math.min(res, a[i]);\n@@ -3232,2 +3236,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduce(a, i));\n@@ -3255,1 +3259,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3265,2 +3269,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.min(res, a[i]);\n@@ -3274,3 +3278,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3300,1 +3303,1 @@\n-                ra = (byte)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (byte) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3310,1 +3313,1 @@\n-            res = (byte)Math.max(res, a[i]);\n+            res = (byte) Math.max(res, a[i]);\n@@ -3318,2 +3321,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduce(a, i));\n@@ -3341,1 +3344,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3351,2 +3354,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (byte) Math.max(res, a[i]);\n@@ -3360,3 +3363,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (byte)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (byte) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3386,1 +3388,1 @@\n-                ra = (byte)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (byte) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3393,0 +3395,85 @@\n+    static byte FIRST_NONZEROReduce(byte[] a, int idx) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAll(byte[] a) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceByteMaxVectorTests(IntFunction<byte[]> fa) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                ByteMaxVectorTests::FIRST_NONZEROReduce, ByteMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static byte FIRST_NONZEROReduceMasked(byte[] a, int idx, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static byte FIRST_NONZEROReduceAllMasked(byte[] a, boolean[] mask) {\n+        byte res = (byte) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"byteUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceByteMaxVectorTestsMasked(IntFunction<byte[]> fa, IntFunction<boolean[]> fm) {\n+        byte[] a = fa.apply(SPECIES.length());\n+        byte[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Byte> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        byte ra = (byte) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (byte) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ByteVector av = ByteVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                ByteMaxVectorTests::FIRST_NONZEROReduceMasked, ByteMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":108,"deletions":21,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -1302,0 +1302,4 @@\n+    static double firstNonZero(double a, double b) {\n+        return Double.compare(a, (double) 0) != 0 ? a : b;\n+    }\n+\n@@ -2280,1 +2284,1 @@\n-            res = (double)Math.min(res, a[i]);\n+            res = (double) Math.min(res, a[i]);\n@@ -2288,2 +2292,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduce(a, i));\n@@ -2311,1 +2315,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2321,2 +2325,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.min(res, a[i]);\n@@ -2330,3 +2334,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2356,1 +2359,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2366,1 +2369,1 @@\n-            res = (double)Math.max(res, a[i]);\n+            res = (double) Math.max(res, a[i]);\n@@ -2374,2 +2377,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduce(a, i));\n@@ -2397,1 +2400,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2407,2 +2410,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.max(res, a[i]);\n@@ -2416,3 +2419,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2442,1 +2444,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2449,0 +2451,85 @@\n+    static double FIRST_NONZEROReduce(double[] a, int idx) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAll(double[] a) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceDouble128VectorTests(IntFunction<double[]> fa) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Double128VectorTests::FIRST_NONZEROReduce, Double128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static double FIRST_NONZEROReduceMasked(double[] a, int idx, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAllMasked(double[] a, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceDouble128VectorTestsMasked(IntFunction<double[]> fa, IntFunction<boolean[]> fm) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Double> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Double128VectorTests::FIRST_NONZEROReduceMasked, Double128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1302,0 +1302,4 @@\n+    static double firstNonZero(double a, double b) {\n+        return Double.compare(a, (double) 0) != 0 ? a : b;\n+    }\n+\n@@ -2280,1 +2284,1 @@\n-            res = (double)Math.min(res, a[i]);\n+            res = (double) Math.min(res, a[i]);\n@@ -2288,2 +2292,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduce(a, i));\n@@ -2311,1 +2315,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2321,2 +2325,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.min(res, a[i]);\n@@ -2330,3 +2334,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2356,1 +2359,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2366,1 +2369,1 @@\n-            res = (double)Math.max(res, a[i]);\n+            res = (double) Math.max(res, a[i]);\n@@ -2374,2 +2377,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduce(a, i));\n@@ -2397,1 +2400,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2407,2 +2410,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.max(res, a[i]);\n@@ -2416,3 +2419,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2442,1 +2444,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2449,0 +2451,85 @@\n+    static double FIRST_NONZEROReduce(double[] a, int idx) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAll(double[] a) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceDouble256VectorTests(IntFunction<double[]> fa) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Double256VectorTests::FIRST_NONZEROReduce, Double256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static double FIRST_NONZEROReduceMasked(double[] a, int idx, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAllMasked(double[] a, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceDouble256VectorTestsMasked(IntFunction<double[]> fa, IntFunction<boolean[]> fm) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Double> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Double256VectorTests::FIRST_NONZEROReduceMasked, Double256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1302,0 +1302,4 @@\n+    static double firstNonZero(double a, double b) {\n+        return Double.compare(a, (double) 0) != 0 ? a : b;\n+    }\n+\n@@ -2280,1 +2284,1 @@\n-            res = (double)Math.min(res, a[i]);\n+            res = (double) Math.min(res, a[i]);\n@@ -2288,2 +2292,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduce(a, i));\n@@ -2311,1 +2315,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2321,2 +2325,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.min(res, a[i]);\n@@ -2330,3 +2334,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2356,1 +2359,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2366,1 +2369,1 @@\n-            res = (double)Math.max(res, a[i]);\n+            res = (double) Math.max(res, a[i]);\n@@ -2374,2 +2377,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduce(a, i));\n@@ -2397,1 +2400,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2407,2 +2410,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.max(res, a[i]);\n@@ -2416,3 +2419,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2442,1 +2444,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2449,0 +2451,85 @@\n+    static double FIRST_NONZEROReduce(double[] a, int idx) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAll(double[] a) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceDouble512VectorTests(IntFunction<double[]> fa) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Double512VectorTests::FIRST_NONZEROReduce, Double512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static double FIRST_NONZEROReduceMasked(double[] a, int idx, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAllMasked(double[] a, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceDouble512VectorTestsMasked(IntFunction<double[]> fa, IntFunction<boolean[]> fm) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Double> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Double512VectorTests::FIRST_NONZEROReduceMasked, Double512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1302,0 +1302,4 @@\n+    static double firstNonZero(double a, double b) {\n+        return Double.compare(a, (double) 0) != 0 ? a : b;\n+    }\n+\n@@ -2280,1 +2284,1 @@\n-            res = (double)Math.min(res, a[i]);\n+            res = (double) Math.min(res, a[i]);\n@@ -2288,2 +2292,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduce(a, i));\n@@ -2311,1 +2315,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2321,2 +2325,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.min(res, a[i]);\n@@ -2330,3 +2334,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2356,1 +2359,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2366,1 +2369,1 @@\n-            res = (double)Math.max(res, a[i]);\n+            res = (double) Math.max(res, a[i]);\n@@ -2374,2 +2377,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduce(a, i));\n@@ -2397,1 +2400,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2407,2 +2410,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.max(res, a[i]);\n@@ -2416,3 +2419,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2442,1 +2444,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2449,0 +2451,85 @@\n+    static double FIRST_NONZEROReduce(double[] a, int idx) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAll(double[] a) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceDouble64VectorTests(IntFunction<double[]> fa) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Double64VectorTests::FIRST_NONZEROReduce, Double64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static double FIRST_NONZEROReduceMasked(double[] a, int idx, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAllMasked(double[] a, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceDouble64VectorTestsMasked(IntFunction<double[]> fa, IntFunction<boolean[]> fm) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Double> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Double64VectorTests::FIRST_NONZEROReduceMasked, Double64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1307,0 +1307,4 @@\n+    static double firstNonZero(double a, double b) {\n+        return Double.compare(a, (double) 0) != 0 ? a : b;\n+    }\n+\n@@ -2285,1 +2289,1 @@\n-            res = (double)Math.min(res, a[i]);\n+            res = (double) Math.min(res, a[i]);\n@@ -2293,2 +2297,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduce(a, i));\n@@ -2316,1 +2320,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2326,2 +2330,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.min(res, a[i]);\n@@ -2335,3 +2339,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2361,1 +2364,1 @@\n-                ra = (double)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (double) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2371,1 +2374,1 @@\n-            res = (double)Math.max(res, a[i]);\n+            res = (double) Math.max(res, a[i]);\n@@ -2379,2 +2382,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduce(a, i));\n@@ -2402,1 +2405,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2412,2 +2415,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (double) Math.max(res, a[i]);\n@@ -2421,3 +2424,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (double)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (double) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2447,1 +2449,1 @@\n-                ra = (double)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (double) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2454,0 +2456,85 @@\n+    static double FIRST_NONZEROReduce(double[] a, int idx) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAll(double[] a) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceDoubleMaxVectorTests(IntFunction<double[]> fa) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                DoubleMaxVectorTests::FIRST_NONZEROReduce, DoubleMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static double FIRST_NONZEROReduceMasked(double[] a, int idx, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static double FIRST_NONZEROReduceAllMasked(double[] a, boolean[] mask) {\n+        double res = (double) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"doubleUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceDoubleMaxVectorTestsMasked(IntFunction<double[]> fa, IntFunction<boolean[]> fm) {\n+        double[] a = fa.apply(SPECIES.length());\n+        double[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Double> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        double ra = (double) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (double) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                DoubleVector av = DoubleVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                DoubleMaxVectorTests::FIRST_NONZEROReduceMasked, DoubleMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1312,0 +1312,4 @@\n+    static float firstNonZero(float a, float b) {\n+        return Float.compare(a, (float) 0) != 0 ? a : b;\n+    }\n+\n@@ -2290,1 +2294,1 @@\n-            res = (float)Math.min(res, a[i]);\n+            res = (float) Math.min(res, a[i]);\n@@ -2298,2 +2302,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduce(a, i));\n@@ -2321,1 +2325,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2331,2 +2335,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.min(res, a[i]);\n@@ -2340,3 +2344,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2366,1 +2369,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2376,1 +2379,1 @@\n-            res = (float)Math.max(res, a[i]);\n+            res = (float) Math.max(res, a[i]);\n@@ -2384,2 +2387,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduce(a, i));\n@@ -2407,1 +2410,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2417,2 +2420,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.max(res, a[i]);\n@@ -2426,3 +2429,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2452,1 +2454,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2459,0 +2461,85 @@\n+    static float FIRST_NONZEROReduce(float[] a, int idx) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAll(float[] a) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceFloat128VectorTests(IntFunction<float[]> fa) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Float128VectorTests::FIRST_NONZEROReduce, Float128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static float FIRST_NONZEROReduceMasked(float[] a, int idx, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAllMasked(float[] a, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceFloat128VectorTestsMasked(IntFunction<float[]> fa, IntFunction<boolean[]> fm) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Float> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Float128VectorTests::FIRST_NONZEROReduceMasked, Float128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1312,0 +1312,4 @@\n+    static float firstNonZero(float a, float b) {\n+        return Float.compare(a, (float) 0) != 0 ? a : b;\n+    }\n+\n@@ -2290,1 +2294,1 @@\n-            res = (float)Math.min(res, a[i]);\n+            res = (float) Math.min(res, a[i]);\n@@ -2298,2 +2302,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduce(a, i));\n@@ -2321,1 +2325,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2331,2 +2335,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.min(res, a[i]);\n@@ -2340,3 +2344,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2366,1 +2369,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2376,1 +2379,1 @@\n-            res = (float)Math.max(res, a[i]);\n+            res = (float) Math.max(res, a[i]);\n@@ -2384,2 +2387,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduce(a, i));\n@@ -2407,1 +2410,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2417,2 +2420,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.max(res, a[i]);\n@@ -2426,3 +2429,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2452,1 +2454,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2459,0 +2461,85 @@\n+    static float FIRST_NONZEROReduce(float[] a, int idx) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAll(float[] a) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceFloat256VectorTests(IntFunction<float[]> fa) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Float256VectorTests::FIRST_NONZEROReduce, Float256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static float FIRST_NONZEROReduceMasked(float[] a, int idx, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAllMasked(float[] a, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceFloat256VectorTestsMasked(IntFunction<float[]> fa, IntFunction<boolean[]> fm) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Float> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Float256VectorTests::FIRST_NONZEROReduceMasked, Float256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1312,0 +1312,4 @@\n+    static float firstNonZero(float a, float b) {\n+        return Float.compare(a, (float) 0) != 0 ? a : b;\n+    }\n+\n@@ -2290,1 +2294,1 @@\n-            res = (float)Math.min(res, a[i]);\n+            res = (float) Math.min(res, a[i]);\n@@ -2298,2 +2302,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduce(a, i));\n@@ -2321,1 +2325,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2331,2 +2335,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.min(res, a[i]);\n@@ -2340,3 +2344,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2366,1 +2369,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2376,1 +2379,1 @@\n-            res = (float)Math.max(res, a[i]);\n+            res = (float) Math.max(res, a[i]);\n@@ -2384,2 +2387,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduce(a, i));\n@@ -2407,1 +2410,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2417,2 +2420,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.max(res, a[i]);\n@@ -2426,3 +2429,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2452,1 +2454,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2459,0 +2461,85 @@\n+    static float FIRST_NONZEROReduce(float[] a, int idx) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAll(float[] a) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceFloat512VectorTests(IntFunction<float[]> fa) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Float512VectorTests::FIRST_NONZEROReduce, Float512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static float FIRST_NONZEROReduceMasked(float[] a, int idx, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAllMasked(float[] a, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceFloat512VectorTestsMasked(IntFunction<float[]> fa, IntFunction<boolean[]> fm) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Float> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Float512VectorTests::FIRST_NONZEROReduceMasked, Float512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1312,0 +1312,4 @@\n+    static float firstNonZero(float a, float b) {\n+        return Float.compare(a, (float) 0) != 0 ? a : b;\n+    }\n+\n@@ -2290,1 +2294,1 @@\n-            res = (float)Math.min(res, a[i]);\n+            res = (float) Math.min(res, a[i]);\n@@ -2298,2 +2302,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduce(a, i));\n@@ -2321,1 +2325,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2331,2 +2335,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.min(res, a[i]);\n@@ -2340,3 +2344,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2366,1 +2369,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2376,1 +2379,1 @@\n-            res = (float)Math.max(res, a[i]);\n+            res = (float) Math.max(res, a[i]);\n@@ -2384,2 +2387,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduce(a, i));\n@@ -2407,1 +2410,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2417,2 +2420,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.max(res, a[i]);\n@@ -2426,3 +2429,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2452,1 +2454,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2459,0 +2461,85 @@\n+    static float FIRST_NONZEROReduce(float[] a, int idx) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAll(float[] a) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceFloat64VectorTests(IntFunction<float[]> fa) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Float64VectorTests::FIRST_NONZEROReduce, Float64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static float FIRST_NONZEROReduceMasked(float[] a, int idx, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAllMasked(float[] a, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceFloat64VectorTestsMasked(IntFunction<float[]> fa, IntFunction<boolean[]> fm) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Float> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Float64VectorTests::FIRST_NONZEROReduceMasked, Float64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1317,0 +1317,4 @@\n+    static float firstNonZero(float a, float b) {\n+        return Float.compare(a, (float) 0) != 0 ? a : b;\n+    }\n+\n@@ -2295,1 +2299,1 @@\n-            res = (float)Math.min(res, a[i]);\n+            res = (float) Math.min(res, a[i]);\n@@ -2303,2 +2307,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduce(a, i));\n@@ -2326,1 +2330,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -2336,2 +2340,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.min(res, a[i]);\n@@ -2345,3 +2349,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -2371,1 +2374,1 @@\n-                ra = (float)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (float) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -2381,1 +2384,1 @@\n-            res = (float)Math.max(res, a[i]);\n+            res = (float) Math.max(res, a[i]);\n@@ -2389,2 +2392,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduce(a, i));\n@@ -2412,1 +2415,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -2422,2 +2425,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (float) Math.max(res, a[i]);\n@@ -2431,3 +2434,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (float)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (float) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -2457,1 +2459,1 @@\n-                ra = (float)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (float) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -2464,0 +2466,85 @@\n+    static float FIRST_NONZEROReduce(float[] a, int idx) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAll(float[] a) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceFloatMaxVectorTests(IntFunction<float[]> fa) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                FloatMaxVectorTests::FIRST_NONZEROReduce, FloatMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static float FIRST_NONZEROReduceMasked(float[] a, int idx, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static float FIRST_NONZEROReduceAllMasked(float[] a, boolean[] mask) {\n+        float res = (float) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"floatUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceFloatMaxVectorTestsMasked(IntFunction<float[]> fa, IntFunction<boolean[]> fm) {\n+        float[] a = fa.apply(SPECIES.length());\n+        float[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Float> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        float ra = (float) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (float) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                FloatMaxVectorTests::FIRST_NONZEROReduceMasked, FloatMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1164,0 +1164,4 @@\n+    static int firstNonZero(int a, int b) {\n+        return Integer.compare(a, (int) 0) != 0 ? a : b;\n+    }\n+\n@@ -3184,1 +3188,1 @@\n-            res = (int)Math.min(res, a[i]);\n+            res = (int) Math.min(res, a[i]);\n@@ -3192,2 +3196,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduce(a, i));\n@@ -3215,1 +3219,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3225,2 +3229,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.min(res, a[i]);\n@@ -3234,3 +3238,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3260,1 +3263,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3270,1 +3273,1 @@\n-            res = (int)Math.max(res, a[i]);\n+            res = (int) Math.max(res, a[i]);\n@@ -3278,2 +3281,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduce(a, i));\n@@ -3301,1 +3304,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3311,2 +3314,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.max(res, a[i]);\n@@ -3320,3 +3323,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3346,1 +3348,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3353,0 +3355,85 @@\n+    static int FIRST_NONZEROReduce(int[] a, int idx) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAll(int[] a) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceInt128VectorTests(IntFunction<int[]> fa) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Int128VectorTests::FIRST_NONZEROReduce, Int128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static int FIRST_NONZEROReduceMasked(int[] a, int idx, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAllMasked(int[] a, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceInt128VectorTestsMasked(IntFunction<int[]> fa, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Int128VectorTests::FIRST_NONZEROReduceMasked, Int128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1164,0 +1164,4 @@\n+    static int firstNonZero(int a, int b) {\n+        return Integer.compare(a, (int) 0) != 0 ? a : b;\n+    }\n+\n@@ -3184,1 +3188,1 @@\n-            res = (int)Math.min(res, a[i]);\n+            res = (int) Math.min(res, a[i]);\n@@ -3192,2 +3196,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduce(a, i));\n@@ -3215,1 +3219,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3225,2 +3229,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.min(res, a[i]);\n@@ -3234,3 +3238,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3260,1 +3263,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3270,1 +3273,1 @@\n-            res = (int)Math.max(res, a[i]);\n+            res = (int) Math.max(res, a[i]);\n@@ -3278,2 +3281,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduce(a, i));\n@@ -3301,1 +3304,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3311,2 +3314,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.max(res, a[i]);\n@@ -3320,3 +3323,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3346,1 +3348,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3353,0 +3355,85 @@\n+    static int FIRST_NONZEROReduce(int[] a, int idx) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAll(int[] a) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceInt256VectorTests(IntFunction<int[]> fa) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Int256VectorTests::FIRST_NONZEROReduce, Int256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static int FIRST_NONZEROReduceMasked(int[] a, int idx, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAllMasked(int[] a, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceInt256VectorTestsMasked(IntFunction<int[]> fa, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Int256VectorTests::FIRST_NONZEROReduceMasked, Int256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1164,0 +1164,4 @@\n+    static int firstNonZero(int a, int b) {\n+        return Integer.compare(a, (int) 0) != 0 ? a : b;\n+    }\n+\n@@ -3184,1 +3188,1 @@\n-            res = (int)Math.min(res, a[i]);\n+            res = (int) Math.min(res, a[i]);\n@@ -3192,2 +3196,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduce(a, i));\n@@ -3215,1 +3219,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3225,2 +3229,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.min(res, a[i]);\n@@ -3234,3 +3238,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3260,1 +3263,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3270,1 +3273,1 @@\n-            res = (int)Math.max(res, a[i]);\n+            res = (int) Math.max(res, a[i]);\n@@ -3278,2 +3281,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduce(a, i));\n@@ -3301,1 +3304,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3311,2 +3314,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.max(res, a[i]);\n@@ -3320,3 +3323,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3346,1 +3348,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3353,0 +3355,85 @@\n+    static int FIRST_NONZEROReduce(int[] a, int idx) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAll(int[] a) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceInt512VectorTests(IntFunction<int[]> fa) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Int512VectorTests::FIRST_NONZEROReduce, Int512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static int FIRST_NONZEROReduceMasked(int[] a, int idx, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAllMasked(int[] a, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceInt512VectorTestsMasked(IntFunction<int[]> fa, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Int512VectorTests::FIRST_NONZEROReduceMasked, Int512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1164,0 +1164,4 @@\n+    static int firstNonZero(int a, int b) {\n+        return Integer.compare(a, (int) 0) != 0 ? a : b;\n+    }\n+\n@@ -3184,1 +3188,1 @@\n-            res = (int)Math.min(res, a[i]);\n+            res = (int) Math.min(res, a[i]);\n@@ -3192,2 +3196,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduce(a, i));\n@@ -3215,1 +3219,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3225,2 +3229,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.min(res, a[i]);\n@@ -3234,3 +3238,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3260,1 +3263,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3270,1 +3273,1 @@\n-            res = (int)Math.max(res, a[i]);\n+            res = (int) Math.max(res, a[i]);\n@@ -3278,2 +3281,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduce(a, i));\n@@ -3301,1 +3304,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3311,2 +3314,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.max(res, a[i]);\n@@ -3320,3 +3323,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3346,1 +3348,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3353,0 +3355,85 @@\n+    static int FIRST_NONZEROReduce(int[] a, int idx) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAll(int[] a) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceInt64VectorTests(IntFunction<int[]> fa) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Int64VectorTests::FIRST_NONZEROReduce, Int64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static int FIRST_NONZEROReduceMasked(int[] a, int idx, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAllMasked(int[] a, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceInt64VectorTestsMasked(IntFunction<int[]> fa, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Int64VectorTests::FIRST_NONZEROReduceMasked, Int64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1169,0 +1169,4 @@\n+    static int firstNonZero(int a, int b) {\n+        return Integer.compare(a, (int) 0) != 0 ? a : b;\n+    }\n+\n@@ -3189,1 +3193,1 @@\n-            res = (int)Math.min(res, a[i]);\n+            res = (int) Math.min(res, a[i]);\n@@ -3197,2 +3201,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduce(a, i));\n@@ -3220,1 +3224,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3230,2 +3234,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.min(res, a[i]);\n@@ -3239,3 +3243,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3265,1 +3268,1 @@\n-                ra = (int)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (int) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3275,1 +3278,1 @@\n-            res = (int)Math.max(res, a[i]);\n+            res = (int) Math.max(res, a[i]);\n@@ -3283,2 +3286,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduce(a, i));\n@@ -3306,1 +3309,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3316,2 +3319,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (int) Math.max(res, a[i]);\n@@ -3325,3 +3328,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (int)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (int) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3351,1 +3353,1 @@\n-                ra = (int)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (int) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3358,0 +3360,85 @@\n+    static int FIRST_NONZEROReduce(int[] a, int idx) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAll(int[] a) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceIntMaxVectorTests(IntFunction<int[]> fa) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                IntMaxVectorTests::FIRST_NONZEROReduce, IntMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static int FIRST_NONZEROReduceMasked(int[] a, int idx, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static int FIRST_NONZEROReduceAllMasked(int[] a, boolean[] mask) {\n+        int res = (int) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"intUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceIntMaxVectorTestsMasked(IntFunction<int[]> fa, IntFunction<boolean[]> fm) {\n+        int[] a = fa.apply(SPECIES.length());\n+        int[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Integer> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        int ra = (int) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (int) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                IntVector av = IntVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                IntMaxVectorTests::FIRST_NONZEROReduceMasked, IntMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1186,0 +1186,4 @@\n+    static long firstNonZero(long a, long b) {\n+        return Long.compare(a, (long) 0) != 0 ? a : b;\n+    }\n+\n@@ -3206,1 +3210,1 @@\n-            res = (long)Math.min(res, a[i]);\n+            res = (long) Math.min(res, a[i]);\n@@ -3214,2 +3218,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduce(a, i));\n@@ -3237,1 +3241,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3247,2 +3251,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.min(res, a[i]);\n@@ -3256,3 +3260,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3282,1 +3285,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3292,1 +3295,1 @@\n-            res = (long)Math.max(res, a[i]);\n+            res = (long) Math.max(res, a[i]);\n@@ -3300,2 +3303,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduce(a, i));\n@@ -3323,1 +3326,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3333,2 +3336,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.max(res, a[i]);\n@@ -3342,3 +3345,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3368,1 +3370,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3375,0 +3377,85 @@\n+    static long FIRST_NONZEROReduce(long[] a, int idx) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAll(long[] a) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceLong128VectorTests(IntFunction<long[]> fa) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Long128VectorTests::FIRST_NONZEROReduce, Long128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static long FIRST_NONZEROReduceMasked(long[] a, int idx, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAllMasked(long[] a, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceLong128VectorTestsMasked(IntFunction<long[]> fa, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Long128VectorTests::FIRST_NONZEROReduceMasked, Long128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1186,0 +1186,4 @@\n+    static long firstNonZero(long a, long b) {\n+        return Long.compare(a, (long) 0) != 0 ? a : b;\n+    }\n+\n@@ -3206,1 +3210,1 @@\n-            res = (long)Math.min(res, a[i]);\n+            res = (long) Math.min(res, a[i]);\n@@ -3214,2 +3218,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduce(a, i));\n@@ -3237,1 +3241,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3247,2 +3251,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.min(res, a[i]);\n@@ -3256,3 +3260,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3282,1 +3285,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3292,1 +3295,1 @@\n-            res = (long)Math.max(res, a[i]);\n+            res = (long) Math.max(res, a[i]);\n@@ -3300,2 +3303,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduce(a, i));\n@@ -3323,1 +3326,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3333,2 +3336,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.max(res, a[i]);\n@@ -3342,3 +3345,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3368,1 +3370,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3375,0 +3377,85 @@\n+    static long FIRST_NONZEROReduce(long[] a, int idx) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAll(long[] a) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceLong256VectorTests(IntFunction<long[]> fa) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Long256VectorTests::FIRST_NONZEROReduce, Long256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static long FIRST_NONZEROReduceMasked(long[] a, int idx, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAllMasked(long[] a, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceLong256VectorTestsMasked(IntFunction<long[]> fa, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Long256VectorTests::FIRST_NONZEROReduceMasked, Long256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1186,0 +1186,4 @@\n+    static long firstNonZero(long a, long b) {\n+        return Long.compare(a, (long) 0) != 0 ? a : b;\n+    }\n+\n@@ -3206,1 +3210,1 @@\n-            res = (long)Math.min(res, a[i]);\n+            res = (long) Math.min(res, a[i]);\n@@ -3214,2 +3218,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduce(a, i));\n@@ -3237,1 +3241,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3247,2 +3251,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.min(res, a[i]);\n@@ -3256,3 +3260,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3282,1 +3285,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3292,1 +3295,1 @@\n-            res = (long)Math.max(res, a[i]);\n+            res = (long) Math.max(res, a[i]);\n@@ -3300,2 +3303,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduce(a, i));\n@@ -3323,1 +3326,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3333,2 +3336,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.max(res, a[i]);\n@@ -3342,3 +3345,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3368,1 +3370,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3375,0 +3377,85 @@\n+    static long FIRST_NONZEROReduce(long[] a, int idx) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAll(long[] a) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceLong512VectorTests(IntFunction<long[]> fa) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Long512VectorTests::FIRST_NONZEROReduce, Long512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static long FIRST_NONZEROReduceMasked(long[] a, int idx, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAllMasked(long[] a, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceLong512VectorTestsMasked(IntFunction<long[]> fa, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Long512VectorTests::FIRST_NONZEROReduceMasked, Long512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1186,0 +1186,4 @@\n+    static long firstNonZero(long a, long b) {\n+        return Long.compare(a, (long) 0) != 0 ? a : b;\n+    }\n+\n@@ -3206,1 +3210,1 @@\n-            res = (long)Math.min(res, a[i]);\n+            res = (long) Math.min(res, a[i]);\n@@ -3214,2 +3218,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduce(a, i));\n@@ -3237,1 +3241,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3247,2 +3251,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.min(res, a[i]);\n@@ -3256,3 +3260,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3282,1 +3285,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3292,1 +3295,1 @@\n-            res = (long)Math.max(res, a[i]);\n+            res = (long) Math.max(res, a[i]);\n@@ -3300,2 +3303,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduce(a, i));\n@@ -3323,1 +3326,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3333,2 +3336,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.max(res, a[i]);\n@@ -3342,3 +3345,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3368,1 +3370,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3375,0 +3377,85 @@\n+    static long FIRST_NONZEROReduce(long[] a, int idx) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAll(long[] a) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceLong64VectorTests(IntFunction<long[]> fa) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Long64VectorTests::FIRST_NONZEROReduce, Long64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static long FIRST_NONZEROReduceMasked(long[] a, int idx, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAllMasked(long[] a, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceLong64VectorTestsMasked(IntFunction<long[]> fa, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Long64VectorTests::FIRST_NONZEROReduceMasked, Long64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1191,0 +1191,4 @@\n+    static long firstNonZero(long a, long b) {\n+        return Long.compare(a, (long) 0) != 0 ? a : b;\n+    }\n+\n@@ -3211,1 +3215,1 @@\n-            res = (long)Math.min(res, a[i]);\n+            res = (long) Math.min(res, a[i]);\n@@ -3219,2 +3223,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduce(a, i));\n@@ -3242,1 +3246,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3252,2 +3256,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.min(res, a[i]);\n@@ -3261,3 +3265,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3287,1 +3290,1 @@\n-                ra = (long)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (long) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3297,1 +3300,1 @@\n-            res = (long)Math.max(res, a[i]);\n+            res = (long) Math.max(res, a[i]);\n@@ -3305,2 +3308,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduce(a, i));\n@@ -3328,1 +3331,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3338,2 +3341,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (long) Math.max(res, a[i]);\n@@ -3347,3 +3350,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (long)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (long) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3373,1 +3375,1 @@\n-                ra = (long)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (long) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3380,0 +3382,85 @@\n+    static long FIRST_NONZEROReduce(long[] a, int idx) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAll(long[] a) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceLongMaxVectorTests(IntFunction<long[]> fa) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                LongMaxVectorTests::FIRST_NONZEROReduce, LongMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static long FIRST_NONZEROReduceMasked(long[] a, int idx, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static long FIRST_NONZEROReduceAllMasked(long[] a, boolean[] mask) {\n+        long res = (long) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"longUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceLongMaxVectorTestsMasked(IntFunction<long[]> fa, IntFunction<boolean[]> fm) {\n+        long[] a = fa.apply(SPECIES.length());\n+        long[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Long> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        long ra = (long) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (long) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                LongVector av = LongVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                LongMaxVectorTests::FIRST_NONZEROReduceMasked, LongMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1194,0 +1194,4 @@\n+    static short firstNonZero(short a, short b) {\n+        return Short.compare(a, (short) 0) != 0 ? a : b;\n+    }\n+\n@@ -3209,1 +3213,1 @@\n-            res = (short)Math.min(res, a[i]);\n+            res = (short) Math.min(res, a[i]);\n@@ -3217,2 +3221,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduce(a, i));\n@@ -3240,1 +3244,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3250,2 +3254,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.min(res, a[i]);\n@@ -3259,3 +3263,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3285,1 +3288,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3295,1 +3298,1 @@\n-            res = (short)Math.max(res, a[i]);\n+            res = (short) Math.max(res, a[i]);\n@@ -3303,2 +3306,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduce(a, i));\n@@ -3326,1 +3329,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3336,2 +3339,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.max(res, a[i]);\n@@ -3345,3 +3348,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3371,1 +3373,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3378,0 +3380,85 @@\n+    static short FIRST_NONZEROReduce(short[] a, int idx) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAll(short[] a) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceShort128VectorTests(IntFunction<short[]> fa) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Short128VectorTests::FIRST_NONZEROReduce, Short128VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static short FIRST_NONZEROReduceMasked(short[] a, int idx, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAllMasked(short[] a, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceShort128VectorTestsMasked(IntFunction<short[]> fa, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Short128VectorTests::FIRST_NONZEROReduceMasked, Short128VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1194,0 +1194,4 @@\n+    static short firstNonZero(short a, short b) {\n+        return Short.compare(a, (short) 0) != 0 ? a : b;\n+    }\n+\n@@ -3209,1 +3213,1 @@\n-            res = (short)Math.min(res, a[i]);\n+            res = (short) Math.min(res, a[i]);\n@@ -3217,2 +3221,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduce(a, i));\n@@ -3240,1 +3244,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3250,2 +3254,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.min(res, a[i]);\n@@ -3259,3 +3263,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3285,1 +3288,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3295,1 +3298,1 @@\n-            res = (short)Math.max(res, a[i]);\n+            res = (short) Math.max(res, a[i]);\n@@ -3303,2 +3306,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduce(a, i));\n@@ -3326,1 +3329,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3336,2 +3339,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.max(res, a[i]);\n@@ -3345,3 +3348,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3371,1 +3373,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3378,0 +3380,85 @@\n+    static short FIRST_NONZEROReduce(short[] a, int idx) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAll(short[] a) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceShort256VectorTests(IntFunction<short[]> fa) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Short256VectorTests::FIRST_NONZEROReduce, Short256VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static short FIRST_NONZEROReduceMasked(short[] a, int idx, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAllMasked(short[] a, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceShort256VectorTestsMasked(IntFunction<short[]> fa, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Short256VectorTests::FIRST_NONZEROReduceMasked, Short256VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1194,0 +1194,4 @@\n+    static short firstNonZero(short a, short b) {\n+        return Short.compare(a, (short) 0) != 0 ? a : b;\n+    }\n+\n@@ -3209,1 +3213,1 @@\n-            res = (short)Math.min(res, a[i]);\n+            res = (short) Math.min(res, a[i]);\n@@ -3217,2 +3221,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduce(a, i));\n@@ -3240,1 +3244,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3250,2 +3254,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.min(res, a[i]);\n@@ -3259,3 +3263,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3285,1 +3288,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3295,1 +3298,1 @@\n-            res = (short)Math.max(res, a[i]);\n+            res = (short) Math.max(res, a[i]);\n@@ -3303,2 +3306,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduce(a, i));\n@@ -3326,1 +3329,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3336,2 +3339,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.max(res, a[i]);\n@@ -3345,3 +3348,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3371,1 +3373,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3378,0 +3380,85 @@\n+    static short FIRST_NONZEROReduce(short[] a, int idx) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAll(short[] a) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceShort512VectorTests(IntFunction<short[]> fa) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Short512VectorTests::FIRST_NONZEROReduce, Short512VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static short FIRST_NONZEROReduceMasked(short[] a, int idx, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAllMasked(short[] a, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceShort512VectorTestsMasked(IntFunction<short[]> fa, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Short512VectorTests::FIRST_NONZEROReduceMasked, Short512VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1194,0 +1194,4 @@\n+    static short firstNonZero(short a, short b) {\n+        return Short.compare(a, (short) 0) != 0 ? a : b;\n+    }\n+\n@@ -3209,1 +3213,1 @@\n-            res = (short)Math.min(res, a[i]);\n+            res = (short) Math.min(res, a[i]);\n@@ -3217,2 +3221,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduce(a, i));\n@@ -3240,1 +3244,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3250,2 +3254,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.min(res, a[i]);\n@@ -3259,3 +3263,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3285,1 +3288,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3295,1 +3298,1 @@\n-            res = (short)Math.max(res, a[i]);\n+            res = (short) Math.max(res, a[i]);\n@@ -3303,2 +3306,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduce(a, i));\n@@ -3326,1 +3329,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3336,2 +3339,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.max(res, a[i]);\n@@ -3345,3 +3348,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3371,1 +3373,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3378,0 +3380,85 @@\n+    static short FIRST_NONZEROReduce(short[] a, int idx) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAll(short[] a) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceShort64VectorTests(IntFunction<short[]> fa) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                Short64VectorTests::FIRST_NONZEROReduce, Short64VectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static short FIRST_NONZEROReduceMasked(short[] a, int idx, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAllMasked(short[] a, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceShort64VectorTestsMasked(IntFunction<short[]> fa, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                Short64VectorTests::FIRST_NONZEROReduceMasked, Short64VectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -1199,0 +1199,4 @@\n+    static short firstNonZero(short a, short b) {\n+        return Short.compare(a, (short) 0) != 0 ? a : b;\n+    }\n+\n@@ -3214,1 +3218,1 @@\n-            res = (short)Math.min(res, a[i]);\n+            res = (short) Math.min(res, a[i]);\n@@ -3222,2 +3226,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduce(a, i));\n@@ -3245,1 +3249,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN));\n@@ -3255,2 +3259,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.min(res, a[i]);\n@@ -3264,3 +3268,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.min(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.min(res, MINReduceMasked(a, i, mask));\n@@ -3290,1 +3293,1 @@\n-                ra = (short)Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n+                ra = (short) Math.min(ra, av.reduceLanes(VectorOperators.MIN, vmask));\n@@ -3300,1 +3303,1 @@\n-            res = (short)Math.max(res, a[i]);\n+            res = (short) Math.max(res, a[i]);\n@@ -3308,2 +3311,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduce(a, i));\n@@ -3331,1 +3334,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX));\n@@ -3341,2 +3344,2 @@\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+            if (mask[i % SPECIES.length()])\n+                res = (short) Math.max(res, a[i]);\n@@ -3350,3 +3353,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = (short)Math.max(res, a[i]);\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = (short) Math.max(res, MAXReduceMasked(a, i, mask));\n@@ -3376,1 +3378,1 @@\n-                ra = (short)Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n+                ra = (short) Math.max(ra, av.reduceLanes(VectorOperators.MAX, vmask));\n@@ -3383,0 +3385,85 @@\n+    static short FIRST_NONZEROReduce(short[] a, int idx) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAll(short[] a) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduce(a, i));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpProvider\")\n+    static void FIRST_NONZEROReduceShortMaxVectorTests(IntFunction<short[]> fa) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO));\n+            }\n+        }\n+\n+        assertReductionArraysEquals(r, ra, a,\n+                ShortMaxVectorTests::FIRST_NONZEROReduce, ShortMaxVectorTests::FIRST_NONZEROReduceAll);\n+    }\n+    static short FIRST_NONZEROReduceMasked(short[] a, int idx, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = firstNonZero(res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static short FIRST_NONZEROReduceAllMasked(short[] a, boolean[] mask) {\n+        short res = (short) 0;\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = firstNonZero(res, FIRST_NONZEROReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n+    @Test(dataProvider = \"shortUnaryOpMaskProvider\")\n+    static void FIRST_NONZEROReduceShortMaxVectorTestsMasked(IntFunction<short[]> fa, IntFunction<boolean[]> fm) {\n+        short[] a = fa.apply(SPECIES.length());\n+        short[] r = fr.apply(SPECIES.length());\n+        boolean[] mask = fm.apply(SPECIES.length());\n+        VectorMask<Short> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n+        short ra = (short) 0;\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = (short) 0;\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                ShortVector av = ShortVector.fromArray(SPECIES, a, i);\n+                ra = firstNonZero(ra, av.reduceLanes(VectorOperators.FIRST_NONZERO, vmask));\n+            }\n+        }\n+\n+        assertReductionArraysEqualsMasked(r, ra, a, mask,\n+                ShortMaxVectorTests::FIRST_NONZEROReduceMasked, ShortMaxVectorTests::FIRST_NONZEROReduceAllMasked);\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":107,"deletions":20,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -43,0 +43,12 @@\n+\/*\n+ * @test\n+ * @bug 8281544\n+ * @summary Test that ZGC and vectorapi with KNL work together.\n+ * @requires vm.gc.Z\n+ * @modules jdk.incubator.vector\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @run testng\/othervm  -XX:-TieredCompilation --add-opens jdk.incubator.vector\/jdk.incubator.vector=ALL-UNNAMED\n+ *                      -XX:+UnlockDiagnosticVMOptions -XX:+UseKNLSetting -XX:+UseZGC -XX:+IgnoreUnrecognizedVMOptions\n+ *                      VectorMaxConversionTests\n+ *\/\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/VectorMaxConversionTests.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -58,2 +58,1 @@\n-reduction_scalar_min=\"Reduction-Scalar-Min-op\"\n-reduction_scalar_max=\"Reduction-Scalar-Max-op\"\n+reduction_scalar_func=\"Reduction-Scalar-op-func\"\n@@ -61,2 +60,1 @@\n-reduction_scalar_min_masked=\"Reduction-Scalar-Masked-Min-op\"\n-reduction_scalar_max_masked=\"Reduction-Scalar-Masked-Max-op\"\n+reduction_scalar_masked_func=\"Reduction-Scalar-Masked-op-func\"\n@@ -64,2 +62,1 @@\n-reduction_op_min=\"Reduction-Min-op\"\n-reduction_op_max=\"Reduction-Max-op\"\n+reduction_op_func=\"Reduction-op-func\"\n@@ -67,2 +64,1 @@\n-reduction_op_min_masked=\"Reduction-Masked-Min-op\"\n-reduction_op_max_masked=\"Reduction-Masked-Max-op\"\n+reduction_op_masked_func=\"Reduction-Masked-op-func\"\n@@ -340,1 +336,1 @@\n-function gen_reduction_op_min {\n+function gen_reduction_op_func {\n@@ -342,12 +338,4 @@\n-  gen_op_tmpl $reduction_scalar_min \"$@\"\n-  gen_op_tmpl $reduction_op_min \"$@\"\n-  gen_op_tmpl $reduction_scalar_min_masked \"$@\"\n-  gen_op_tmpl $reduction_op_min_masked \"$@\"\n-}\n-\n-function gen_reduction_op_max {\n-  echo \"Generating reduction op $1 ($2)...\"\n-  gen_op_tmpl $reduction_scalar_max \"$@\"\n-  gen_op_tmpl $reduction_op_max \"$@\"\n-  gen_op_tmpl $reduction_scalar_max_masked \"$@\"\n-  gen_op_tmpl $reduction_op_max_masked \"$@\"\n+  gen_op_tmpl $reduction_scalar_func \"$@\"\n+  gen_op_tmpl $reduction_op_func \"$@\"\n+  gen_op_tmpl $reduction_scalar_masked_func \"$@\"\n+  gen_op_tmpl $reduction_op_masked_func \"$@\"\n@@ -465,3 +453,3 @@\n-gen_reduction_op_min \"MIN\" \"\" \"\" \"\\$Wideboxtype\\$.\\$MaxValue\\$\"\n-gen_reduction_op_max \"MAX\" \"\" \"\" \"\\$Wideboxtype\\$.\\$MinValue\\$\"\n-#gen_reduction_op \"reduce_FIRST_NONZERO\" \"lanewise_FIRST_NONZERO\" \"{#if[FP]?Double.doubleToLongBits}(a)=0?a:b\" \"\" \"1\"\n+gen_reduction_op_func \"MIN\" \"(\\$type\\$) Math.min\" \"\" \"\\$Wideboxtype\\$.\\$MaxValue\\$\"\n+gen_reduction_op_func \"MAX\" \"(\\$type\\$) Math.max\" \"\" \"\\$Wideboxtype\\$.\\$MinValue\\$\"\n+gen_reduction_op_func \"FIRST_NONZERO\" \"firstNonZero\" \"\" \"(\\$type\\$) 0\"\n","filename":"test\/jdk\/jdk\/incubator\/vector\/gen-template.sh","additions":12,"deletions":24,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -1,21 +0,0 @@\n-        $type$[] a = fa.apply(SPECIES.length());\n-        $type$[] r = fr.apply(SPECIES.length());\n-        boolean[] mask = fm.apply(SPECIES.length());\n-        VectorMask<$Wideboxtype$> vmask = VectorMask.fromArray(SPECIES, mask, 0);\n-        $type$ ra = [[TEST_INIT]];\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                r[i] = av.reduceLanes(VectorOperators.[[TEST]], vmask);\n-            }\n-        }\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            ra = [[TEST_INIT]];\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                ra = ($type$)Math.min(ra, av.reduceLanes(VectorOperators.[[TEST]], vmask));\n-            }\n-        }\n-\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-Masked-Min-op.template","additions":0,"deletions":21,"binary":false,"changes":21,"status":"deleted"},{"patch":"@@ -18,1 +18,1 @@\n-                ra = ($type$)Math.max(ra, av.reduceLanes(VectorOperators.[[TEST]], vmask));\n+                ra = [[TEST_OP]](ra, av.reduceLanes(VectorOperators.[[TEST]], vmask));\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-Masked-op-func.template","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-Masked-Max-op.template","status":"renamed"},{"patch":"@@ -1,19 +0,0 @@\n-        $type$[] a = fa.apply(SPECIES.length());\n-        $type$[] r = fr.apply(SPECIES.length());\n-        $type$ ra = [[TEST_INIT]];\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                r[i] = av.reduceLanes(VectorOperators.[[TEST]]);\n-            }\n-        }\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            ra = [[TEST_INIT]];\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                ra = ($type$)Math.max(ra, av.reduceLanes(VectorOperators.[[TEST]]));\n-            }\n-        }\n-\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-Max-op.template","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -1,19 +0,0 @@\n-        $type$[] a = fa.apply(SPECIES.length());\n-        $type$[] r = fr.apply(SPECIES.length());\n-        $type$ ra = [[TEST_INIT]];\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                r[i] = av.reduceLanes(VectorOperators.[[TEST]]);\n-            }\n-        }\n-\n-        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n-            ra = [[TEST_INIT]];\n-            for (int i = 0; i < a.length; i += SPECIES.length()) {\n-                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n-                ra = ($type$)Math.min(ra, av.reduceLanes(VectorOperators.[[TEST]]));\n-            }\n-        }\n-\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-Min-op.template","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -0,0 +1,19 @@\n+        $type$[] a = fa.apply(SPECIES.length());\n+        $type$[] r = fr.apply(SPECIES.length());\n+        $type$ ra = [[TEST_INIT]];\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n+                r[i] = av.reduceLanes(VectorOperators.[[TEST]]);\n+            }\n+        }\n+\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            ra = [[TEST_INIT]];\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                $abstractvectortype$ av = $abstractvectortype$.fromArray(SPECIES, a, i);\n+                ra = [[TEST_OP]](ra, av.reduceLanes(VectorOperators.[[TEST]]));\n+            }\n+        }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Kernel-Reduction-op-func.template","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"},{"patch":"@@ -1,6 +0,0 @@\n-    @Test(dataProvider = \"$type$UnaryOpMaskProvider\")\n-    static void [[TEST]]Reduce$vectorteststype$Masked(IntFunction<$type$[]> fa, IntFunction<boolean[]> fm) {\n-[[KERNEL]]\n-        assertReductionArraysEqualsMasked(r, ra, a, mask,\n-                $vectorteststype$::[[TEST]]ReduceMasked, $vectorteststype$::[[TEST]]ReduceAllMasked);\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Masked-Min-op.template","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Masked-op-func.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Masked-Max-op.template","status":"renamed"},{"patch":"@@ -1,6 +0,0 @@\n-    @Test(dataProvider = \"$type$UnaryOpProvider\")\n-    static void [[TEST]]Reduce$vectorteststype$(IntFunction<$type$[]> fa) {\n-[[KERNEL]]\n-        assertReductionArraysEquals(r, ra, a,\n-                $vectorteststype$::[[TEST]]Reduce, $vectorteststype$::[[TEST]]ReduceAll);\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Min-op.template","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,19 +0,0 @@\n-    static $type$ [[TEST]]ReduceMasked($type$[] a, int idx, boolean[] mask) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = ($type$)Math.max(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n-\n-    static $type$ [[TEST]]ReduceAllMasked($type$[] a, boolean[] mask) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = ($type$)Math.max(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-Masked-Max-op.template","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -1,19 +0,0 @@\n-    static $type$ [[TEST]]ReduceMasked($type$[] a, int idx, boolean[] mask) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = ($type$)Math.min(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n-\n-    static $type$ [[TEST]]ReduceAllMasked($type$[] a, boolean[] mask) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = 0; i < a.length; i++) {\n-            if(mask[i % SPECIES.length()])\n-                res = ($type$)Math.min(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-Masked-Min-op.template","additions":0,"deletions":19,"binary":false,"changes":19,"status":"deleted"},{"patch":"@@ -0,0 +1,18 @@\n+    static $type$ [[TEST]]ReduceMasked($type$[] a, int idx, boolean[] mask) {\n+        $type$ res = [[TEST_INIT]];\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            if (mask[i % SPECIES.length()])\n+                res = [[TEST_OP]](res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static $type$ [[TEST]]ReduceAllMasked($type$[] a, boolean[] mask) {\n+        $type$ res = [[TEST_INIT]];\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = [[TEST_OP]](res, [[TEST]]ReduceMasked(a, i, mask));\n+        }\n+\n+        return res;\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-Masked-op-func.template","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -1,17 +0,0 @@\n-    static $type$ [[TEST]]Reduce($type$[] a, int idx) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n-            res = ($type$)Math.max(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n-\n-    static $type$ [[TEST]]ReduceAll($type$[] a) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = 0; i < a.length; i++) {\n-            res = ($type$)Math.max(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-Max-op.template","additions":0,"deletions":17,"binary":false,"changes":17,"status":"deleted"},{"patch":"@@ -1,17 +0,0 @@\n-    static $type$ [[TEST]]Reduce($type$[] a, int idx) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n-            res = ($type$)Math.min(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n-\n-    static $type$ [[TEST]]ReduceAll($type$[] a) {\n-        $type$ res = [[TEST_INIT]];\n-        for (int i = 0; i < a.length; i++) {\n-            res = ($type$)Math.min(res, a[i]);\n-        }\n-\n-        return res;\n-    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-Min-op.template","additions":0,"deletions":17,"binary":false,"changes":17,"status":"deleted"},{"patch":"@@ -0,0 +1,17 @@\n+    static $type$ [[TEST]]Reduce($type$[] a, int idx) {\n+        $type$ res = [[TEST_INIT]];\n+        for (int i = idx; i < (idx + SPECIES.length()); i++) {\n+            res = [[TEST_OP]](res, a[i]);\n+        }\n+\n+        return res;\n+    }\n+\n+    static $type$ [[TEST]]ReduceAll($type$[] a) {\n+        $type$ res = [[TEST_INIT]];\n+        for (int i = 0; i < a.length; i += SPECIES.length()) {\n+            res = [[TEST_OP]](res, [[TEST]]Reduce(a, i));\n+        }\n+\n+        return res;\n+    }\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Scalar-op-func.template","additions":17,"deletions":0,"binary":false,"changes":17,"status":"added"},{"patch":"","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-op-func.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Reduction-Max-op.template","status":"renamed"},{"patch":"@@ -1454,0 +1454,4 @@\n+    static $type$ firstNonZero($type$ a, $type$ b) {\n+        return $Boxtype$.compare(a, ($type$) 0) != 0 ? a : b;\n+    }\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8240975\n+ * @bug 8240975 8281335\n@@ -33,1 +33,0 @@\n-import jdk.internal.loader.*;\n@@ -45,0 +44,1 @@\n+        \/\/ Verify a native library from test.nativepath\n@@ -56,4 +56,5 @@\n-        \/\/ expect NativeLibraries to fail since the library has been loaded by System::loadLibrary\n-        try {\n-            test.load(false);\n-        } catch (UnsatisfiedLinkError e) { e.printStackTrace(); }\n+        \/\/ expect NativeLibraries to succeed even the library has been loaded by System::loadLibrary\n+        test.load(true);\n+\n+        \/\/ load zip library from JDK\n+        test.load(System.mapLibraryName(\"zip\"));\n","filename":"test\/jdk\/jdk\/internal\/loader\/NativeLibraries\/Main.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -30,0 +31,1 @@\n+import java.nio.file.Path;\n@@ -52,1 +54,2 @@\n-    private final NativeLibraries nativeLibraries;\n+    private final RawNativeLibraries nativeLibraries;\n+\n@@ -54,1 +57,1 @@\n-        this.nativeLibraries = NativeLibraries.rawNativeLibraries(NativeLibraries.class, true);\n+        this.nativeLibraries = RawNativeLibraries.newInstance(MethodHandles.lookup());\n@@ -64,0 +67,5 @@\n+    static Path libraryPath() {\n+        Path lib = Path.of(System.getProperty(\"test.nativepath\"));\n+        return lib.resolve(System.mapLibraryName(LIB_NAME));\n+    }\n+\n@@ -65,2 +73,3 @@\n-        NativeLibrary nl1 = nativeLibraries.loadLibrary(LIB_NAME);\n-        NativeLibrary nl2 = nativeLibraries.loadLibrary(LIB_NAME);\n+        Path lib = libraryPath();\n+        NativeLibrary nl1 = nativeLibraries.load(lib);\n+        NativeLibrary nl2 = nativeLibraries.load(lib);\n@@ -80,1 +89,1 @@\n-        NativeLibrary nl3 = nativeLibraries.loadLibrary(LIB_NAME);\n+        NativeLibrary nl3 = nativeLibraries.load(lib);\n@@ -89,1 +98,1 @@\n-        NativeLibrary nl = nativeLibraries.loadLibrary(LIB_NAME);\n+        NativeLibrary nl = nativeLibraries.load(libraryPath());\n@@ -96,1 +105,1 @@\n-        NativeLibrary nl = nativeLibraries.loadLibrary(LIB_NAME);\n+        NativeLibrary nl = nativeLibraries.load(libraryPath());\n@@ -104,0 +113,5 @@\n+    public void load(String pathname) {\n+        NativeLibrary nl = nativeLibraries.load(pathname);\n+        assertTrue(nl != null, \"fail to load zip library\");\n+    }\n+\n","filename":"test\/jdk\/jdk\/internal\/loader\/NativeLibraries\/java.base\/jdk\/internal\/loader\/NativeLibrariesTest.java","additions":22,"deletions":8,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -40,2 +42,10 @@\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1 jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1 -Xint jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=100k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=1\n+ *                   -Xint\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationInNewTLABEvent\n@@ -49,2 +59,2 @@\n- *      the size of TLAB is set to 100k (-XX:TLABSize=100k);\n- *      the size of allocated objects is set to 100k minus 16 bytes overhead;\n+ *      the initial size of TLAB is set to 100k (-XX:TLABSize=100k);\n+ *      the size of allocated objects is set to 128k;\n@@ -57,3 +67,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array.\n-    private static final int OBJECT_SIZE  = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops.\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n@@ -115,1 +127,1 @@\n-        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE || allocationSize == OBJECT_SIZE_ALT)) {\n+        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE)) {\n@@ -117,1 +129,1 @@\n-            if (tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE || tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE_ALT) {\n+            if (tlabSize == INITIAL_TLAB_SIZE + OBJECT_SIZE) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationInNewTLABEvent.java","additions":22,"deletions":10,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -40,2 +42,10 @@\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256 jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n- * @run main\/othervm -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256 -Xint jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=90k -XX:-ResizeTLAB -XX:TLABRefillWasteFraction=256\n+ *                   -Xint\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationOutsideTLABEvent\n@@ -49,2 +59,2 @@\n- *      the size of TLAB is set to 90k (-XX:TLABSize=90k);\n- *      the size of allocated objects is set to 100k.\n+ *      the initial size of TLAB is set to 90k (-XX:TLABSize=90k);\n+ *      the size of allocated objects is set to 128k;\n@@ -57,3 +67,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array\n-    private static final int OBJECT_SIZE = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n@@ -97,1 +109,1 @@\n-        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE || allocationSize == OBJECT_SIZE_ALT)) {\n+        if (className.equals(BYTE_ARRAY_CLASS_NAME) && (allocationSize == OBJECT_SIZE)) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationOutsideTLABEvent.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,2 @@\n+import jdk.test.lib.Platform;\n+import sun.hotspot.WhiteBox;\n@@ -42,1 +44,6 @@\n-*  @run main\/othervm -XX:+UseTLAB -XX:TLABSize=2k -XX:-ResizeTLAB jdk.jfr.event.allocation.TestObjectAllocationSampleEventThrottling\n+ * @build sun.hotspot.WhiteBox\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ *                   -XX:+UseTLAB -XX:TLABSize=2k -XX:-ResizeTLAB\n+ *                   jdk.jfr.event.allocation.TestObjectAllocationSampleEventThrottling\n@@ -48,3 +55,5 @@\n-    private static final int BYTE_ARRAY_OVERHEAD = 16; \/\/ Extra bytes used by a byte array\n-    private static final int OBJECT_SIZE = 100 * 1024;\n-    private static final int OBJECT_SIZE_ALT = OBJECT_SIZE + 8; \/\/ Object size in case of disabled CompressedOops\n+    private static final Boolean COMPRESSED_CLASS_PTRS = WhiteBox.getWhiteBox().getBooleanVMFlag(\"UseCompressedClassPointers\");\n+\n+    private static final int BYTE_ARRAY_OVERHEAD = (Platform.is64bit() && !COMPRESSED_CLASS_PTRS) ? 24 : 16;\n+    private static final int OBJECT_SIZE = 128 * 1024;\n+\n","filename":"test\/jdk\/jdk\/jfr\/event\/allocation\/TestObjectAllocationSampleEventThrottling.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,0 +80,2 @@\n+        } else if (Platform.isAix()) {\n+            libTemplate = \"lib%s.so\";\n@@ -81,0 +83,1 @@\n+\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestNativeLibrariesEvent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,2 +67,2 @@\n-        \/\/ case of 6674166: this is very unlikely to happen, even if\n-        \/\/     both 6674166 and 6774170 aren't fixed. If it happens\n+        \/\/ case of 6774166: this is very unlikely to happen, even if\n+        \/\/     both 6774166 and 6774170 aren't fixed. If it happens\n@@ -73,2 +73,2 @@\n-                    \"Congratulations! it seems you have triggered 6674166. \" +\n-                    \"Neither 6674166 nor 6774170 seem to be fixed: \" + x, x);\n+                    \"Congratulations! it seems you have triggered 6774166. \" +\n+                    \"Neither 6774166 nor 6774170 seem to be fixed: \" + x, x);\n@@ -77,1 +77,1 @@\n-                    \"Unexpected IOException. Maybe you triggered 6674166? \" +\n+                    \"Unexpected IOException. Maybe you triggered 6774166? \" +\n","filename":"test\/jdk\/sun\/management\/jmxremote\/LocalRMIServerSocketFactoryTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8185898\n+ * @bug 8185898 8163921\n@@ -146,1 +146,1 @@\n-                        + \"Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2\\r\\n\"\n+                        + \"Accept: *\/*\\r\\n\"\n@@ -151,1 +151,1 @@\n-                        + \"{Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2}\"\n+                        + \"{Accept: *\/*}\"\n@@ -155,1 +155,1 @@\n-                \"Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2\\r\\n\"\n+                \"Accept: *\/*\\r\\n\"\n@@ -160,1 +160,1 @@\n-                        + \"Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2\\r\\n\"\n+                        + \"Accept: *\/*\\r\\n\"\n@@ -166,1 +166,1 @@\n-                        + \"{Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2}\"\n+                        + \"{Accept: *\/*}\"\n@@ -171,1 +171,1 @@\n-                \"Accept: text\/html, image\/gif, image\/jpeg, *; q=.2, *\/*; q=.2\\r\\n\"\n+                \"Accept: *\/*\\r\\n\"\n","filename":"test\/jdk\/sun\/net\/www\/B8185898.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @modules java.base\/sun.net.www\n@@ -33,3 +32,12 @@\n-import java.net.*;\n-import java.io.*;\n-import sun.net.www.MessageHeader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.HttpURLConnection;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.net.URL;\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -138,2 +146,1 @@\n-\n-            MessageHeader headers =  new MessageHeader (is);\n+            HttpHeaderParser httpHeaderParser = new HttpHeaderParser(is);\n@@ -141,2 +148,1 @@\n-\n-            headers =  new MessageHeader (is);\n+            httpHeaderParser = new HttpHeaderParser(is);\n@@ -146,1 +152,0 @@\n-\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/ProxyFromCache.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @modules java.base\/sun.net.www\n+ * @library \/test\/lib\n@@ -34,1 +34,2 @@\n-import sun.net.www.MessageHeader;\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -94,2 +95,2 @@\n-            MessageHeader headers =  new MessageHeader (is);\n-            String requestLine = headers.getValue(0);\n+            HttpHeaderParser headers =  new HttpHeaderParser (is);\n+            String requestLine = headers.getRequestDetails();\n","filename":"test\/jdk\/sun\/net\/www\/http\/HttpClient\/RequestURI.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,178 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @bug 8278067\n+ * @run main\/othervm -Dhttp.keepAlive.time.server=30 KeepAliveProperty long\n+ * @run main\/othervm -Dhttp.keepAlive.time.server=1 KeepAliveProperty short\n+ * @run main\/othervm -ea -Dhttp.keepAlive.time.server=0 KeepAliveProperty short\n+ *\/\n+\n+import java.net.*;\n+import java.io.*;\n+import java.nio.charset.*;\n+import java.util.logging.*;\n+import jdk.test.lib.net.URIBuilder;\n+import static java.net.Proxy.NO_PROXY;\n+\n+public class KeepAliveProperty {\n+\n+    static volatile boolean pass = false;\n+\n+    static class Server extends Thread {\n+        final ServerSocket server;\n+\n+        Server (ServerSocket server) {\n+            super ();\n+            this.server = server;\n+        }\n+\n+        void readAll (Socket s) throws IOException {\n+            byte[] buf = new byte [128];\n+            int c;\n+            String request = \"\";\n+            InputStream is = s.getInputStream ();\n+            while ((c=is.read(buf)) > 0) {\n+                request += new String(buf, 0, c, StandardCharsets.US_ASCII);\n+                if (request.contains(\"\\r\\n\\r\\n\")) {\n+                    return;\n+                }\n+            }\n+            if (c == -1)\n+                throw new IOException(\"Socket closed\");\n+        }\n+\n+        Socket s = null;\n+        String BODY;\n+        String CLEN;\n+        PrintStream out;\n+\n+        public void run() {\n+            try {\n+                s = server.accept();\n+                readAll(s);\n+\n+                BODY = \"Hello world\";\n+                CLEN = \"Content-Length: \" + BODY.length() + \"\\r\\n\";\n+                out = new PrintStream(new BufferedOutputStream(s.getOutputStream() ));\n+\n+                \/* send the header *\/\n+                out.print(\"HTTP\/1.1 200 OK\\r\\n\");\n+                out.print(\"Content-Type: text\/plain; charset=iso-8859-1\\r\\n\");\n+                out.print(CLEN);\n+                out.print(\"\\r\\n\");\n+                out.print(BODY);\n+                out.flush();\n+            } catch (Exception e) {\n+                pass = false;\n+                try {\n+                    if (s != null)\n+                        s.close();\n+                    server.close();\n+                } catch (IOException unused) {}\n+                return;\n+            }\n+\n+            \/\/ second request may legitimately fail\n+\n+            try (Socket s2 = s; ServerSocket server2 = server; PrintStream out2 = out) {\n+                \/\/ wait for second request.\n+                readAll(s2);\n+\n+                BODY = \"Goodbye world\";\n+                CLEN = \"Content-Length: \" + BODY.length() + \"\\r\\n\";\n+\n+                \/* send the header *\/\n+                out2.print(\"HTTP\/1.1 200 OK\\r\\n\");\n+                out2.print(\"Content-Type: text\/plain; charset=iso-8859-1\\r\\n\");\n+                out2.print(CLEN);\n+                out2.print(\"\\r\\n\");\n+                out2.print(BODY);\n+                out2.flush();\n+                pass = !expectClose;\n+                if (!pass) System.out.println(\"Failed: expected close\");\n+            } catch (Exception e) {\n+                pass = expectClose;\n+                if (!pass) System.out.println(\"Failed: did not expect close\");\n+            }\n+        }\n+    }\n+\n+    static String fetch(URL url) throws Exception {\n+        InputStream in = url.openConnection(NO_PROXY).getInputStream();\n+        String s = \"\";\n+        byte b[] = new byte[128];\n+        int n;\n+        do {\n+            n = in.read(b);\n+            if (n > 0)\n+                s += new String(b, 0, n, StandardCharsets.US_ASCII);\n+        } while (n > 0);\n+        in.close();\n+        return s;\n+    }\n+\n+    static volatile boolean expectClose;\n+\n+    public static void main(String args[]) throws Exception {\n+        \/\/ exercise the logging code\n+        Logger logger = Logger.getLogger(\"sun.net.www.protocol.http.HttpURLConnection\");\n+        logger.setLevel(Level.FINEST);\n+        ConsoleHandler h = new ConsoleHandler();\n+        h.setLevel(Level.FINEST);\n+        logger.addHandler(h);\n+\n+        expectClose = args[0].equals(\"short\");\n+        InetAddress loopback = InetAddress.getLoopbackAddress();\n+        ServerSocket ss = new ServerSocket();\n+        ss.bind(new InetSocketAddress(loopback, 0));\n+        Server s = new Server(ss);\n+        s.start();\n+\n+        URL url = URIBuilder.newBuilder()\n+            .scheme(\"http\")\n+            .loopback()\n+            .port(ss.getLocalPort())\n+            .toURL();\n+        System.out.println(\"URL: \" + url);\n+\n+        if (!fetch(url).equals(\"Hello world\"))\n+            throw new RuntimeException(\"Failed on first request\");\n+\n+        \/\/ Wait a while to see if connection is closed\n+        Thread.sleep(3 * 1000);\n+\n+        try {\n+            if (!fetch(url).equals(\"Goodbye world\"))\n+                throw new RuntimeException(\"Failed on second request\");\n+        } catch (Exception e) {\n+            if (!expectClose)\n+                throw e;\n+        }\n+\n+        if (!pass)\n+            throw new RuntimeException(\"Failed in server\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveCache\/KeepAliveProperty.java","additions":178,"deletions":0,"binary":false,"changes":178,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @modules java.base\/sun.net.www\n@@ -33,4 +32,12 @@\n-import java.net.*;\n-import java.util.*;\n-import java.io.*;\n-import sun.net.www.MessageHeader;\n+import java.io.BufferedOutputStream;\n+import java.io.InputStream;\n+import java.io.PrintStream;\n+import java.net.HttpURLConnection;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.net.URL;\n+import java.util.List;\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -52,4 +59,9 @@\n-            MessageHeader mh = new MessageHeader(is);\n-            String connHeader = mh.findValue(\"Connection\");\n-            if (connHeader != null && connHeader.equalsIgnoreCase(\"close\")) {\n-                hasCloseHeader = true;\n+            HttpHeaderParser mh = new HttpHeaderParser(is);\n+            List <String> connHeader = mh.getHeaderValue(\"Connection\");\n+            if (connHeader != null) {\n+                for(String value : connHeader) {\n+                    if (value.equalsIgnoreCase(\"close\")) {\n+                        hasCloseHeader = true;\n+                        break;\n+                    }\n+                }\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/CloseOptionHeader.java","additions":22,"deletions":10,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,498 @@\n+\n+\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8061729\n+ * @library \/test\/lib\n+ * @summary Sanity check that HttpHeaderParser works same as MessageHeader\n+ * @modules java.base\/sun.net.www java.base\/sun.net.www.protocol.http:open\n+ * @run testng\/othervm HttpHeaderParserTest\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static java.lang.String.format;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.US_ASCII;\n+import jdk.test.lib.net.HttpHeaderParser;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertTrue;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import sun.net.www.MessageHeader;\n+\n+public class HttpHeaderParserTest {\n+    @DataProvider(name = \"responses\")\n+    public Object[][] responses() {\n+        List<String> responses = new ArrayList<>();\n+\n+        String[] basic =\n+                { \"HTTP\/1.1 200 OK\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Date: Mon, 15 Jan 2001 12:18:21 GMT\\r\\n\" +\n+                                \"Server: Apache\/1.3.14 (Unix)\\r\\n\" +\n+                                \"Connection: close\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=iso-8859-1\\r\\n\" +\n+                                \"Content-Length: 10\\r\\n\\r\\n\" +\n+                                \"123456789\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 9\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Header: U\\u00ffU\\r\\n\" + \/\/ value with U+00FF - Extended Latin-1\n+                                \"Content-Length: 9\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length:   9\\r\\n\" +\n+                                \"Content-Type:   text\/html; charset=UTF-8\\r\\n\\r\\n\" +   \/\/ more than one SP after ':'\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length:\\t10\\r\\n\" +\n+                                \"Content-Type:\\ttext\/html; charset=UTF-8\\r\\n\\r\\n\" +   \/\/ HT separator\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length:\\t\\t10\\r\\n\" +\n+                                \"Content-Type:\\t\\ttext\/html; charset=UTF-8\\r\\n\\r\\n\" +   \/\/ more than one HT after ':'\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 407 Proxy Authorization Required\\r\\n\" +\n+                                \"Proxy-Authenticate: Basic realm=\\\"a fake realm\\\"\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 401 Unauthorized\\r\\n\" +\n+                                \"WWW-Authenticate: Digest realm=\\\"wally land\\\" domain=\/ \" +\n+                                \"nonce=\\\"2B7F3A2B\\\" qop=\\\"auth\\\"\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo:\\r\\n\\r\\n\",      \/\/ no value\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo:\\r\\n\\r\\n\" +     \/\/ no value, with response body\n+                                \"Some Response Body\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo:\\r\\n\" +    \/\/ no value, followed by another header\n+                                \"Content-Length: 10\\r\\n\\r\\n\" +\n+                                \"Some Response Body\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo:\\r\\n\" +    \/\/ no value, followed by another header, with response body\n+                                \"Content-Length: 10\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo: chegar\\r\\n\" +\n+                                \"X-Foo: dfuchs\\r\\n\" +  \/\/ same header appears multiple times\n+                                \"Content-Length: 0\\r\\n\" +\n+                                \"X-Foo: michaelm\\r\\n\" +\n+                                \"X-Foo: prappo\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-Foo:\\r\\n\" +    \/\/ no value, same header appears multiple times\n+                                \"X-Foo: dfuchs\\r\\n\" +\n+                                \"Content-Length: 0\\r\\n\" +\n+                                \"X-Foo: michaelm\\r\\n\" +\n+                                \"X-Foo: prappo\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Accept-Ranges: bytes\\r\\n\" +\n+                                \"Cache-control: max-age=0, no-cache=\\\"set-cookie\\\"\\r\\n\" +\n+                                \"Content-Length: 132868\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\" +\n+                                \"Date: Sun, 05 Nov 2017 22:24:03 GMT\\r\\n\" +\n+                                \"Server: Apache\/2.4.6 (Red Hat Enterprise Linux) OpenSSL\/1.0.1e-fips Communique\/4.2.2\\r\\n\" +\n+                                \"Set-Cookie: AWSELB=AF7927F5100F4202119876ED2436B5005EE;PATH=\/;MAX-AGE=900\\r\\n\" +\n+                                \"Vary: Host,Accept-Encoding,User-Agent\\r\\n\" +\n+                                \"X-Mod-Pagespeed: 1.12.34.2-0\\r\\n\" +\n+                                \"Connection: keep-alive\\r\\n\\r\\n\"\n+                };\n+        Arrays.stream(basic).forEach(responses::add);\n+        \/\/ add some tests where some of the CRLF are replaced\n+        \/\/ by a single LF\n+        Arrays.stream(basic)\n+                .map(HttpHeaderParserTest::mixedCRLF)\n+                .forEach(responses::add);\n+\n+        String[] foldingTemplate =\n+                {  \"HTTP\/1.1 200 OK\\r\\n\" +\n+                        \"Content-Length: 9\\r\\n\" +\n+                        \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r'\n+                        \" charset=UTF-8\\r\\n\" +                \/\/ one preceding SP\n+                        \"Connection: close\\r\\n\\r\\n\" +\n+                        \"XXYYZZAABBCCDDEE\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 19\\r\\n\" +\n+                                \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r\n+                                \"   charset=UTF-8\\r\\n\" +              \/\/ more than one preceding SP\n+                                \"Connection: keep-alive\\r\\n\\r\\n\" +\n+                                \"XXYYZZAABBCCDDEEFFGG\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 999\\r\\n\" +\n+                                \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r\n+                                \"\\tcharset=UTF-8\\r\\n\" +               \/\/ one preceding HT\n+                                \"Connection: close\\r\\n\\r\\n\" +\n+                                \"XXYYZZAABBCCDDEE\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 54\\r\\n\" +\n+                                \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r\n+                                \"\\t\\t\\tcharset=UTF-8\\r\\n\" +           \/\/ more than one preceding HT\n+                                \"Connection: keep-alive\\r\\n\\r\\n\" +\n+                                \"XXYYZZAABBCCDDEEFFGG\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: -1\\r\\n\" +\n+                                \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r\n+                                \"\\t \\t \\tcharset=UTF-8\\r\\n\" +         \/\/ mix of preceding HT and SP\n+                                \"Connection: keep-alive\\r\\n\\r\\n\" +\n+                                \"XXYYZZAABBCCDDEEFFGGHH\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 65\\r\\n\" +\n+                                \"Content-Type: text\/html;$NEWLINE\" +  \/\/ folding field-value with '\\n'|'\\r\n+                                \" \\t \\t charset=UTF-8\\r\\n\" +          \/\/ mix of preceding SP and HT\n+                                \"Connection: keep-alive\\r\\n\\r\\n\" +\n+                                \"XXYYZZAABBCCDDEEFFGGHHII\",\n+\n+                        \"HTTP\/1.1 401 Unauthorized\\r\\n\" +\n+                                \"WWW-Authenticate: Digest realm=\\\"wally land\\\",\"\n+                                +\"$NEWLINE    domain=\/,\"\n+                                +\"$NEWLINE nonce=\\\"2B7F3A2B\\\",\"\n+                                +\"$NEWLINE\\tqop=\\\"auth\\\"\\r\\n\\r\\n\",\n+\n+                };\n+        for (String newLineChar : new String[] { \"\\n\", \"\\r\", \"\\r\\n\" }) {\n+            for (String template : foldingTemplate)\n+                responses.add(template.replace(\"$NEWLINE\", newLineChar));\n+        }\n+        \/\/ add some tests where some of the CRLF are replaced\n+        \/\/ by a single LF\n+        for (String newLineChar : new String[] { \"\\n\", \"\\r\", \"\\r\\n\" }) {\n+            for (String template : foldingTemplate)\n+                responses.add(mixedCRLF(template).replace(\"$NEWLINE\", newLineChar));\n+        }\n+\n+        String[] bad = \/\/ much of this is to retain parity with legacy MessageHeaders\n+                { \"HTTP\/1.1 200 OK\\r\\n\" +\n+                        \"Connection:\\r\\n\\r\\n\",   \/\/ empty value, no body\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Connection:\\r\\n\\r\\n\" +  \/\/ empty value, with body\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \": no header\\r\\n\\r\\n\",  \/\/ no\/empty header-name, no body, no following header\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \": no; header\\r\\n\" +  \/\/ no\/empty header-name, no body, following header\n+                                \"Content-Length: 65\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \": no header\\r\\n\" +  \/\/ no\/empty header-name\n+                                \"Content-Length: 65\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-foo: bar\\r\\n\" +\n+                                \" : no header\\r\\n\" +  \/\/ fold, not a blank header-name\n+                                \"Content-Length: 65\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-foo: bar\\r\\n\" +\n+                                \" \\t : no header\\r\\n\" +  \/\/ fold, not a blank header-name\n+                                \"Content-Length: 65\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \": no header\\r\\n\\r\\n\" +  \/\/ no\/empty header-name, followed by header\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Conte\\r\" +\n+                                \"nt-Length: 9\\r\\n\" +    \/\/ fold\/bad header name ??? without preceding space\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXXYYZZ\",\n+\n+                        \"HTTP\/1.0 404 Not Found\\r\\n\" +\n+                                \"header-without-colon\\r\\n\\r\\n\",\n+\n+                        \"HTTP\/1.0 404 Not Found\\r\\n\" +\n+                                \"header-without-colon\\r\\n\\r\\n\" +\n+                                \"SOMEBODY\",\n+\n+                };\n+        Arrays.stream(bad).forEach(responses::add);\n+\n+        return responses.stream().map(p -> new Object[] { p }).toArray(Object[][]::new);\n+    }\n+\n+    static final AtomicInteger index = new AtomicInteger();\n+    static final AtomicInteger limit = new AtomicInteger(1);\n+    static final AtomicBoolean useCRLF = new AtomicBoolean();\n+    \/\/ A small method to replace part of the CRLF present in a string\n+    \/\/ with simple LF. The method uses a deterministic algorithm based\n+    \/\/ on current values of static index\/limit\/useCRLF counters.\n+    \/\/ These counters are used to produce a stream of substitutes that\n+    \/\/ looks like this:\n+    \/\/ LF CRLF LF LF CRLF CRLF LF LF LF CRLF CRLF CRLF (then repeat from start)\n+    static final String mixedCRLF(String headers) {\n+        int next;\n+        int start = 0;\n+        int last = headers.lastIndexOf(\"\\r\\n\");\n+        String prev = \"\";\n+        StringBuilder res = new StringBuilder();\n+        while ((next = headers.indexOf(\"\\r\\n\", start)) > 0) {\n+            res.append(headers.substring(start, next));\n+            if (\"\\n\".equals(prev) && next == last) {\n+                \/\/ for some reason the legacy MessageHeader parser will\n+                \/\/ not consume the final LF if the headers are terminated\n+                \/\/ by <LF><CRLF> instead of <CRLF><CRLF>. It consume\n+                \/\/ <LF><CR> but leaves the last <LF> in the stream.\n+                \/\/ Here we just make sure to avoid using <LF><CRLF>\n+                \/\/ as that would cause the legacy parser to consume\n+                \/\/ 1 byte less than the Http1HeadersParser - which\n+                \/\/ does consume the last <LF>, as it should.\n+                \/\/ if this is the last CRLF and the previous one\n+                \/\/ was replaced by LF then use LF.\n+                res.append(prev);\n+            } else {\n+                prev = useCRLF.get() ? \"\\r\\n\" : \"\\n\";\n+                res.append(prev);\n+            }\n+            \/\/ skip CRLF\n+            start = next + 2;\n+\n+            \/\/ The idea is to substitute some of the CRLF with LF.\n+            \/\/ Rather than doing this randomly, always use the following\n+            \/\/ sequence:\n+            \/\/ LF CRLF LF LF CRLF CRLF LF LF LF CRLF CRLF CRLF\n+            index.incrementAndGet();\n+            if (index.get() == limit.get()) {\n+                index.set(0);\n+                if (useCRLF.get()) limit.incrementAndGet();\n+                if (limit.get() > 3) limit.set(1);\n+                useCRLF.set(!useCRLF.get());\n+            }\n+        }\n+        res.append(headers.substring(start));\n+        return res.toString();\n+    }\n+\n+\n+    @Test(dataProvider = \"responses\")\n+    public void verifyHeaders(String respString) throws Exception {\n+        System.out.println(\"\\ntesting:\\n\\t\" + respString\n+                .replace(\"\\r\\n\", \"<CRLF>\")\n+                .replace(\"\\r\", \"<CR>\")\n+                .replace(\"\\n\",\"<LF>\")\n+                .replace(\"LF>\", \"LF>\\n\\t\"));\n+        byte[] bytes = respString.getBytes(ISO_8859_1);\n+        ByteArrayInputStream bais = new ByteArrayInputStream(bytes);\n+        MessageHeader m = new MessageHeader(bais);\n+        Map<String,List<String>> messageHeaderMap = m.getHeaders();\n+        int availableBytes = bais.available();\n+\n+        HttpHeaderParser decoder = new HttpHeaderParser();\n+        ByteArrayInputStream headerStream = new ByteArrayInputStream(bytes);\n+        int initialBytes = headerStream.available();\n+        decoder.parse(headerStream);\n+        System.out.printf(\"HttpHeaderParser parsed %d bytes out of %d%n\", initialBytes - headerStream.available(), bytes.length);\n+        Map<String,List<String>> decoderMap1 = decoder.getHeaderMap();\n+\n+\n+        \/\/ assert status-line\n+        String statusLine1 = messageHeaderMap.get(null).get(0);\n+        String statusLine2 = decoder.getRequestDetails();\n+        if (statusLine1.startsWith(\"HTTP\")) {\/\/ skip the case where MH's messes up the status-line\n+            assertEquals(statusLine2, statusLine1, \"Status-line not equal\");\n+        } else {\n+            assertTrue(statusLine2.startsWith(\"HTTP\/1.\"), \"Status-line not HTTP\/1.\");\n+        }\n+\n+        \/\/ remove the null'th entry with is the status-line\n+        Map<String,List<String>> map = new HashMap<>();\n+        for (Map.Entry<String,List<String>> e : messageHeaderMap.entrySet()) {\n+            if (e.getKey() != null) {\n+                map.put(e.getKey(), e.getValue());\n+            }\n+        }\n+        messageHeaderMap = map;\n+\n+        assertHeadersEqual(messageHeaderMap, decoderMap1,\n+                \"messageHeaderMap not equal to decoderMap1\");\n+\n+        assertEquals(availableBytes, headerStream.available(),\n+                String.format(\"stream available (%d) not equal to remaining (%d)\",\n+                        availableBytes, headerStream.available()));\n+    }\n+\n+    @DataProvider(name = \"errors\")\n+    public Object[][] errors() {\n+        List<String> responses = new ArrayList<>();\n+\n+        \/\/ These responses are parsed, somewhat, by MessageHeaders but give\n+        \/\/ nonsensible results. They, correctly, fail with the Http1HeaderParser.\n+        String[] bad =\n+                {\/\/ \"HTTP\/1.1 402 Payment Required\\r\\n\" +\n+                        \/\/ \"Content-Length: 65\\r\\n\\r\",   \/\/ missing trailing LF   \/\/TODO: incomplete\n+\n+                        \"HTTP\/1.1 402 Payment Required\\r\\n\" +\n+                                \"Content-Length: 65\\r\\n\\rT\\r\\n\\r\\nGGGGGG\",\n+\n+                        \"HTTP\/1.1 200OK\\r\\n\\rT\",\n+\n+                        \"HTTP\/1.1 200OK\\rT\",\n+\n+                        \"HTTP\/1.0 FOO\\r\\n\",\n+\n+                        \"HTTP\/1.1 BAR\\r\\n\",\n+\n+                        \"HTTP\/1.1 +99\\r\\n\",\n+\n+                        \"HTTP\/1.1 -22\\r\\n\",\n+\n+                        \"HTTP\/1.1 -20 \\r\\n\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-fo\\u00ffo: foo\\r\\n\" +     \/\/ invalid char in name\n+                                \"Content-Length: 5\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X-foo : bar\\r\\n\" +          \/\/  trim space after name\n+                                \"Content-Length: 5\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \" X-foo: bar\\r\\n\" +          \/\/ trim space before name\n+                                \"Content-Length: 5\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"X foo: bar\\r\\n\" +           \/\/ invalid space in name\n+                                \"Content-Length: 5\\r\\n\" +\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Content-Length: 5\\r\\n\" +\n+                                \"Content Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" + \/\/ invalid space in name\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \"Conte\\r\" +\n+                                \" nt-Length: 9\\r\\n\" +    \/\/ fold results in space in header name\n+                                \"Content-Type: text\/html; charset=UTF-8\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \" : no header\\r\\n\" +  \/\/ all blank header-name (not fold)\n+                                \"Content-Length: 65\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                        \"HTTP\/1.1 200 OK\\r\\n\" +\n+                                \" \\t : no header\\r\\n\" +  \/\/ all blank header-name (not fold)\n+                                \"Content-Length: 65\\r\\n\\r\\n\" +\n+                                \"XXXXX\",\n+\n+                };\n+        Arrays.stream(bad).forEach(responses::add);\n+\n+        return responses.stream().map(p -> new Object[] { p }).toArray(Object[][]::new);\n+    }\n+\n+    @Test(dataProvider = \"errors\", expectedExceptions = IOException.class)\n+    public void errors(String respString) throws IOException {\n+        byte[] bytes = respString.getBytes(US_ASCII);\n+        HttpHeaderParser decoder = new HttpHeaderParser();\n+        ByteArrayInputStream bais = new ByteArrayInputStream(bytes);\n+        decoder.parse(bais);\n+    }\n+\n+    void assertHeadersEqual(Map<String,List<String>> expected,\n+                            Map<String,List<String>> actual,\n+                            String msg) {\n+\n+        if (expected.equals(actual))\n+            return;\n+\n+        assertEquals(expected.size(), actual.size(),\n+                format(\"%s. Expected size %d, actual size %s. %nexpected= %s,%n actual=%s.\",\n+                        msg, expected.size(), actual.size(), mapToString(expected), mapToString(actual)));\n+\n+        for (Map.Entry<String,List<String>> e : expected.entrySet()) {\n+            String key = e.getKey();\n+            List<String> values = e.getValue();\n+\n+            boolean found = false;\n+            for (Map.Entry<String,List<String>> other: actual.entrySet()) {\n+                if (key.equalsIgnoreCase(other.getKey())) {\n+                    found = true;\n+                    List<String> otherValues = other.getValue();\n+                    assertEquals(values.size(), otherValues.size(),\n+                            format(\"%s. Expected list size %d, actual size %s\",\n+                                    msg, values.size(), otherValues.size()));\n+                    if (!(values.containsAll(otherValues) && otherValues.containsAll(values)))\n+                        assertTrue(false, format(\"Lists are unequal [%s] [%s]\", values, otherValues));\n+                    break;\n+                }\n+            }\n+            assertTrue(found, format(\"header name, %s, not found in %s\", key, actual));\n+        }\n+    }\n+\n+    static String mapToString(Map<String,List<String>> map) {\n+        StringBuilder sb = new StringBuilder();\n+        List<String> sortedKeys = new ArrayList(map.keySet());\n+        Collections.sort(sortedKeys);\n+        for (String key : sortedKeys) {\n+            List<String> values = map.get(key);\n+            sb.append(\"\\n\\t\" + key + \" | \" + values);\n+        }\n+        return sb.toString();\n+    }\n+}\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/HttpHeaderParserTest.java","additions":498,"deletions":0,"binary":false,"changes":498,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @modules java.base\/sun.net.www\n@@ -35,1 +34,2 @@\n-import sun.net.www.MessageHeader;\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -163,1 +163,1 @@\n-                MessageHeader header = new MessageHeader (s.getInputStream());\n+                HttpHeaderParser httpHeaderParser = new HttpHeaderParser(s.getInputStream());\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/NTLMTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,1 @@\n- * @modules java.base\/sun.net.www\n- *          java.base\/sun.net.www.protocol.http:open\n+ * @modules java.base\/sun.net.www.protocol.http:open\n@@ -45,0 +44,2 @@\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -46,1 +47,0 @@\n-import sun.net.www.MessageHeader;\n@@ -166,1 +166,1 @@\n-                new MessageHeader().parseHeader(s.getInputStream());\n+                new HttpHeaderParser().parse(s.getInputStream());\n@@ -174,2 +174,2 @@\n-                MessageHeader mh = new MessageHeader();\n-                mh.parseHeader(s.getInputStream());\n+                HttpHeaderParser mh = new HttpHeaderParser();\n+                mh.parse(s.getInputStream());\n@@ -177,1 +177,1 @@\n-                auth = mh.findValue(\"Authorization\");\n+                auth = mh.getHeaderValue(\"Authorization\").get(0);\n@@ -211,1 +211,1 @@\n-                new MessageHeader().parseHeader(s.getInputStream());\n+                new HttpHeaderParser().parse(s.getInputStream());\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/NoNTLM.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @modules java.base\/sun.net.www\n@@ -34,0 +33,2 @@\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -35,1 +36,0 @@\n-import sun.net.www.*;\n@@ -45,1 +45,1 @@\n-                MessageHeader header = new MessageHeader (is);\n+                HttpHeaderParser header = new HttpHeaderParser (is);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/RetryUponTimeout.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @modules java.base\/sun.net.www\n@@ -37,0 +36,2 @@\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n@@ -38,1 +39,0 @@\n-import sun.net.www.MessageHeader;\n@@ -49,2 +49,2 @@\n-            MessageHeader header = new MessageHeader (s.getInputStream());\n-            String v = header.findValue (\"User-Agent\");\n+            HttpHeaderParser header = new HttpHeaderParser (s.getInputStream());\n+            String v = header.getHeaderValue (\"User-Agent\").get(0);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/http\/UserAgent.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @modules java.base\/sun.net.www\n+ * @library \/test\/lib\n@@ -40,1 +40,3 @@\n-import sun.net.www.MessageHeader;\n+\n+import jdk.test.lib.net.HttpHeaderParser;\n+\n@@ -141,2 +143,2 @@\n-        MessageHeader mheader = new MessageHeader(in);\n-        String statusLine = mheader.getValue(0);\n+        HttpHeaderParser mheader = new HttpHeaderParser(in);\n+        String statusLine = mheader.getRequestDetails();\n@@ -148,1 +150,1 @@\n-           if (mheader.findValue(\"X-TestHeader\") != null) {\n+           if (mheader.getHeaderValue(\"X-TestHeader\") != null) {\n@@ -155,1 +157,1 @@\n-           if ((value = mheader.findValue(\"Proxy-Connection\")) == null ||\n+           if ((value = mheader.getHeaderValue(\"Proxy-Connection\").get(0)) == null ||\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/B6226610.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,2 @@\n-import sun.net.www.MessageHeader;\n+import jdk.test.lib.net.HttpHeaderParser;\n+\n@@ -263,3 +264,3 @@\n-                String requestline = readLine (is);\n-                MessageHeader mhead = new MessageHeader (is);\n-                String[] req = requestline.split (\" \");\n+                HttpHeaderParser mHead = new HttpHeaderParser (is);\n+                String requestLine = mHead.getRequestDetails();\n+                String[] req = requestLine.split (\" \");\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/TunnelProxy.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,311 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8279842\n+ * @modules java.base\/sun.security.util\n+ *          java.security.jgss\/sun.security.jgss\n+ *          java.security.jgss\/sun.security.jgss.krb5\n+ *          java.security.jgss\/sun.security.jgss.krb5.internal\n+ *          java.security.jgss\/sun.security.krb5.internal:+open\n+ *          java.security.jgss\/sun.security.krb5:+open\n+ *          java.security.jgss\/sun.security.krb5.internal.ccache\n+ *          java.security.jgss\/sun.security.krb5.internal.crypto\n+ *          java.security.jgss\/sun.security.krb5.internal.ktab\n+ *          jdk.security.auth\n+ *          jdk.security.jgss\n+ *          jdk.httpserver\n+ * @summary HTTPS Channel Binding support for Java GSS\/Kerberos\n+ * @library \/test\/lib\n+ * @run main jdk.test.lib.FileInstaller TestHosts TestHosts\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=always HttpsCB true true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=never HttpsCB false true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=invalid HttpsCB false true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          HttpsCB false true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=domain:other.com HttpsCB false true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=domain:host.web.domain HttpsCB true true\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts\n+ *          -Djdk.https.negotiate.cbt=domain:*.web.domain HttpsCB true true\n+ *\/\n+\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;\n+import com.sun.net.httpserver.HttpServer;\n+import com.sun.net.httpserver.HttpPrincipal;\n+import com.sun.net.httpserver.HttpsConfigurator;\n+import com.sun.net.httpserver.HttpsExchange;\n+import com.sun.net.httpserver.HttpsServer;\n+import com.sun.security.auth.module.Krb5LoginModule;\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.InetSocketAddress;\n+import java.net.PasswordAuthentication;\n+import java.net.Proxy;\n+import java.net.Socket;\n+import java.net.URL;\n+import java.security.cert.X509Certificate;\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.net.ssl.HttpsURLConnection;\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509ExtendedTrustManager;\n+import javax.security.auth.Subject;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.net.SimpleSSLContext;\n+import org.ietf.jgss.GSSContext;\n+import org.ietf.jgss.GSSCredential;\n+import org.ietf.jgss.GSSManager;\n+import sun.security.jgss.GSSUtil;\n+import sun.security.jgss.krb5.internal.TlsChannelBindingImpl;\n+import sun.security.krb5.Config;\n+import sun.security.util.TlsChannelBinding;\n+\n+import java.util.Base64;\n+import java.util.concurrent.Callable;\n+\n+public class HttpsCB {\n+\n+    final static String REALM_WEB = \"WEB.DOMAIN\";\n+    final static String KRB5_CONF = \"web.conf\";\n+    final static String KRB5_TAB = \"web.ktab\";\n+\n+    final static String WEB_USER = \"web\";\n+    final static char[] WEB_PASS = \"webby\".toCharArray();\n+    final static String WEB_HOST = \"host.web.domain\";\n+    final static String CONTENT = \"Hello, World!\";\n+\n+    static int webPort;\n+    static URL cbtURL;\n+    static URL normalURL;\n+\n+    public static void main(String[] args)\n+            throws Exception {\n+\n+        boolean expectCBT = Boolean.parseBoolean(args[0]);\n+        boolean expectNoCBT = Boolean.parseBoolean(args[1]);\n+\n+        System.setProperty(\"sun.security.krb5.debug\", \"true\");\n+\n+        KDC kdcw = KDC.create(REALM_WEB);\n+        kdcw.addPrincipal(WEB_USER, WEB_PASS);\n+        kdcw.addPrincipalRandKey(\"krbtgt\/\" + REALM_WEB);\n+        kdcw.addPrincipalRandKey(\"HTTP\/\" + WEB_HOST);\n+\n+        KDC.saveConfig(KRB5_CONF, kdcw,\n+                \"default_keytab_name = \" + KRB5_TAB,\n+                \"[domain_realm]\",\n+                \"\",\n+                \".web.domain=\"+REALM_WEB);\n+\n+        System.setProperty(\"java.security.krb5.conf\", KRB5_CONF);\n+        Config.refresh();\n+        KDC.writeMultiKtab(KRB5_TAB, kdcw);\n+\n+        \/\/ Write a customized JAAS conf file, so that any kinit cache\n+        \/\/ will be ignored.\n+        System.setProperty(\"java.security.auth.login.config\", OneKDC.JAAS_CONF);\n+        File f = new File(OneKDC.JAAS_CONF);\n+        FileOutputStream fos = new FileOutputStream(f);\n+        fos.write((\n+                \"com.sun.security.jgss.krb5.initiate {\\n\" +\n+                \"    com.sun.security.auth.module.Krb5LoginModule required;\\n};\\n\"\n+                ).getBytes());\n+        fos.close();\n+\n+        HttpServer h1 = httpd(\"Negotiate\",\n+                \"HTTP\/\" + WEB_HOST + \"@\" + REALM_WEB, KRB5_TAB);\n+        webPort = h1.getAddress().getPort();\n+\n+        cbtURL = new URL(\"https:\/\/\" + WEB_HOST +\":\" + webPort + \"\/cbt\");\n+        normalURL = new URL(\"https:\/\/\" + WEB_HOST +\":\" + webPort + \"\/normal\");\n+\n+        java.net.Authenticator.setDefault(new java.net.Authenticator() {\n+            public PasswordAuthentication getPasswordAuthentication () {\n+                return new PasswordAuthentication(\n+                        WEB_USER+\"@\"+REALM_WEB, WEB_PASS);\n+            }\n+        });\n+\n+        \/\/ Client-side SSLContext needs to ignore hostname mismatch\n+        \/\/ and untrusted certificate.\n+        SSLContext sc = SSLContext.getInstance(\"SSL\");\n+        sc.init(null, new TrustManager[] {\n+                new X509ExtendedTrustManager() {\n+                    public X509Certificate[] getAcceptedIssuers() {\n+                        return null;\n+                    }\n+                    public void checkClientTrusted(X509Certificate[] chain,\n+                            String authType, Socket socket) { }\n+                    public void checkServerTrusted(X509Certificate[] chain,\n+                            String authType, Socket socket) { }\n+                    public void checkClientTrusted(X509Certificate[] chain,\n+                            String authType, SSLEngine engine) { }\n+                    public void checkServerTrusted(X509Certificate[] chain,\n+                            String authType, SSLEngine engine) { }\n+                    public void checkClientTrusted(X509Certificate[] certs,\n+                            String authType) { }\n+                    public void checkServerTrusted(X509Certificate[] certs,\n+                            String authType) { }\n+                }\n+        }, null);\n+\n+        Asserts.assertEQ(visit(sc, cbtURL), expectCBT);\n+        Asserts.assertEQ(visit(sc, normalURL), expectNoCBT);\n+    }\n+\n+    static boolean visit(SSLContext sc, URL url) {\n+        try {\n+            HttpsURLConnection conn = (HttpsURLConnection)\n+                    url.openConnection(Proxy.NO_PROXY);\n+            conn.setSSLSocketFactory(sc.getSocketFactory());\n+            BufferedReader reader;\n+            reader = new BufferedReader(new InputStreamReader(\n+                    conn.getInputStream()));\n+            return reader.readLine().equals(CONTENT);\n+        } catch (IOException e) {\n+            return false;\n+        }\n+    }\n+\n+    static HttpServer httpd(String scheme, String principal, String ktab)\n+            throws Exception {\n+        MyHttpHandler h = new MyHttpHandler();\n+        HttpsServer server = HttpsServer.create(new InetSocketAddress(0), 0);\n+        server.setHttpsConfigurator(\n+                new HttpsConfigurator(new SimpleSSLContext().get()));\n+        server.createContext(\"\/\", h).setAuthenticator(\n+                new MyServerAuthenticator(scheme, principal, ktab));\n+        server.start();\n+        return server;\n+    }\n+\n+    static class MyHttpHandler implements HttpHandler {\n+        public void handle(HttpExchange t) throws IOException {\n+            t.sendResponseHeaders(200, 0);\n+            t.getResponseBody().write(CONTENT.getBytes());\n+            t.close();\n+        }\n+    }\n+\n+    static class MyServerAuthenticator\n+            extends com.sun.net.httpserver.Authenticator {\n+        Subject s = new Subject();\n+        GSSManager m;\n+        GSSCredential cred;\n+        String scheme = null;\n+        String reqHdr = \"WWW-Authenticate\";\n+        String respHdr = \"Authorization\";\n+        int err = HttpURLConnection.HTTP_UNAUTHORIZED;\n+\n+        public MyServerAuthenticator(String scheme,\n+                String principal, String ktab) throws Exception {\n+\n+            this.scheme = scheme;\n+            Krb5LoginModule krb5 = new Krb5LoginModule();\n+            Map<String, String> map = new HashMap<>();\n+            Map<String, Object> shared = new HashMap<>();\n+\n+            map.put(\"storeKey\", \"true\");\n+            map.put(\"isInitiator\", \"false\");\n+            map.put(\"useKeyTab\", \"true\");\n+            map.put(\"keyTab\", ktab);\n+            map.put(\"principal\", principal);\n+            krb5.initialize(s, null, shared, map);\n+            krb5.login();\n+            krb5.commit();\n+            m = GSSManager.getInstance();\n+            cred = Subject.callAs(s, new Callable<GSSCredential>() {\n+                @Override\n+                public GSSCredential call() throws Exception {\n+                    System.err.println(\"Creating GSSCredential\");\n+                    return m.createCredential(\n+                            null,\n+                            GSSCredential.INDEFINITE_LIFETIME,\n+                            MyServerAuthenticator.this.scheme\n+                                        .equalsIgnoreCase(\"Negotiate\") ?\n+                                    GSSUtil.GSS_SPNEGO_MECH_OID :\n+                                    GSSUtil.GSS_KRB5_MECH_OID,\n+                            GSSCredential.ACCEPT_ONLY);\n+                }\n+            });\n+        }\n+\n+        @Override\n+        public Result authenticate(HttpExchange exch) {\n+            \/\/ The GSContext is stored in an HttpContext attribute named\n+            \/\/ \"GSSContext\" and is created at the first request.\n+            GSSContext c = null;\n+            String auth = exch.getRequestHeaders().getFirst(respHdr);\n+            try {\n+                c = (GSSContext)exch.getHttpContext()\n+                        .getAttributes().get(\"GSSContext\");\n+                if (auth == null) {                 \/\/ First request\n+                    Headers map = exch.getResponseHeaders();\n+                    map.set (reqHdr, scheme);        \/\/ Challenge!\n+                    c = Subject.callAs(s, () -> m.createContext(cred));\n+                    \/\/ CBT is required for cbtURL\n+                    if (exch instanceof HttpsExchange sexch\n+                            && exch.getRequestURI().toString().equals(\"\/cbt\")) {\n+                        TlsChannelBinding b = TlsChannelBinding.create(\n+                                (X509Certificate) sexch.getSSLSession()\n+                                        .getLocalCertificates()[0]);\n+                        c.setChannelBinding(\n+                                new TlsChannelBindingImpl(b.getData()));\n+                    }\n+                    exch.getHttpContext().getAttributes().put(\"GSSContext\", c);\n+                    return new com.sun.net.httpserver.Authenticator.Retry(err);\n+                } else {                            \/\/ Later requests\n+                    byte[] token = Base64.getMimeDecoder()\n+                            .decode(auth.split(\" \")[1]);\n+                    token = c.acceptSecContext(token, 0, token.length);\n+                    Headers map = exch.getResponseHeaders();\n+                    map.set (reqHdr, scheme + \" \" + Base64.getMimeEncoder()\n+                            .encodeToString(token).replaceAll(\"\\\\s\", \"\"));\n+                    if (c.isEstablished()) {\n+                        return new com.sun.net.httpserver.Authenticator.Success(\n+                                new HttpPrincipal(c.getSrcName().toString(), \"\"));\n+                    } else {\n+                        return new com.sun.net.httpserver.Authenticator.Retry(err);\n+                    }\n+                }\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/HttpsCB.java","additions":311,"deletions":0,"binary":false,"changes":311,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,0 +267,2 @@\n+            \/\/ Valid until: Sat May 21 04:00:00 GMT 2022\n+            add(\"geotrustglobalca [jdk]\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -465,1 +465,1 @@\n-            .shouldContain(\"MAC:\").shouldContain(\"sha256\").shouldContain(\"Iteration 10000\")\n+            .shouldMatch(\"MAC:.*sha256.*Iteration 10000\")\n@@ -508,1 +508,1 @@\n-            .shouldContain(\"MAC:\").shouldContain(\"sha256\").shouldContain(\"Iteration 5555\")\n+            .shouldMatch(\"MAC:.*sha256.*Iteration 5555\")\n","filename":"test\/jdk\/sun\/security\/pkcs12\/KeytoolOpensslInteropTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,125 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265765\n+ * @summary Test DomainKeyStore with a collection of keystores that has an empty one in between\n+ *          based on the test in the bug report\n+ *\/\n+\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.DomainLoadStoreParameter;\n+import java.security.KeyStore;\n+import java.util.Enumeration;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import javax.crypto.KeyGenerator;\n+\n+public class DksWithEmptyKeystore {\n+    private static void write(Path p, KeyStore keystore) throws Exception {\n+        try (OutputStream outputStream = Files.newOutputStream(p)) {\n+            keystore.store(outputStream, new char[] { 'x' });\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        KeyGenerator kg = KeyGenerator.getInstance(\"AES\");\n+        kg.init(256);\n+\n+        \/\/ Create a keystore with one key\n+        KeyStore nonEmptyKeystore = KeyStore.getInstance(\"PKCS12\");\n+        nonEmptyKeystore.load(null, null);\n+\n+        Path nonEmptyPath = Path.of(\"non_empty.p12\");\n+        nonEmptyKeystore.setKeyEntry(\"aeskey\", kg.generateKey(), new char[] { 'a' }, null);\n+        write(nonEmptyPath, nonEmptyKeystore);\n+\n+        \/\/ Create an empty keystore\n+        KeyStore emptyKeystore = KeyStore.getInstance(\"PKCS12\");\n+        emptyKeystore.load(null, null);\n+\n+        Path emptyPath = Path.of(\"empty.p12\");\n+        write(emptyPath, emptyKeystore);\n+\n+        \/\/ Create a domain keystore with two non-empty keystores\n+        Path dksWithTwoPartsPath = Path.of(\"two-parts.dks\");\n+        var twoPartsConfiguration = \"\"\"\n+                domain Combo {\n+                    keystore a keystoreURI=\"%s\";\n+                    keystore b keystoreURI=\"%s\";\n+                };\n+                \"\"\";\n+        Files.writeString(dksWithTwoPartsPath, String.format(twoPartsConfiguration,\n+                nonEmptyPath.toUri(), nonEmptyPath.toUri()));\n+        Map<String,KeyStore.ProtectionParameter> protectionParameters = new LinkedHashMap<>();\n+\n+        KeyStore dksKeystore = KeyStore.getInstance(\"DKS\");\n+        dksKeystore.load(new DomainLoadStoreParameter(dksWithTwoPartsPath.toUri(), protectionParameters));\n+        System.out.printf(\"%s size: %d%n\", dksWithTwoPartsPath, dksKeystore.size());\n+\n+        int index = 0;\n+        for (Enumeration<String> enumeration = dksKeystore.aliases(); enumeration.hasMoreElements(); ) {\n+            System.out.printf(\"%d: %s%n\", index, enumeration.nextElement());\n+            index++;\n+        }\n+\n+        System.out.printf(\"enumerated aliases from %s: %d%n\", dksWithTwoPartsPath, index);\n+        if (index != dksKeystore.size()) {\n+            throw new Exception(\"Failed to get the number of aliases in the domain keystore \" +\n+                    \"that has two keystores.\");\n+        }\n+\n+        \/\/ Create a domain keystore with two non-empty keystores and an empty one in between\n+        Path dksWithThreePartsPath = Path.of(\"three-parts.dks\");\n+        var threePartsConfiguration = \"\"\"\n+                domain Combo {\n+                    keystore a keystoreURI=\"%s\";\n+                    keystore b keystoreURI=\"%s\";\n+                    keystore c keystoreURI=\"%s\";\n+                };\n+                \"\"\";\n+        Files.writeString(dksWithThreePartsPath, String.format(threePartsConfiguration,\n+                nonEmptyPath.toUri(), emptyPath.toUri(), nonEmptyPath.toUri()));\n+\n+        KeyStore dksKeystore1 = KeyStore.getInstance(\"DKS\");\n+        dksKeystore1.load(new DomainLoadStoreParameter(dksWithThreePartsPath.toUri(), protectionParameters));\n+        System.out.printf(\"%s size: %d%n\", dksWithThreePartsPath, dksKeystore1.size());\n+\n+        index = 0;\n+        for (Enumeration<String> enumeration = dksKeystore1.aliases(); enumeration.hasMoreElements(); ) {\n+            System.out.printf(\"%d: %s%n\", index, enumeration.nextElement());\n+            index++;\n+        }\n+\n+        System.out.printf(\"enumerated aliases from %s: %d%n\", dksWithThreePartsPath, index);\n+        if (index != dksKeystore1.size()) {\n+            throw new Exception(\"Failed to get the number of aliases in the domain keystore \" +\n+                    \"that has three keystores with an empty one in between.\");\n+        } else {\n+            System.out.printf(\"Test completed successfully\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/provider\/KeyStore\/DksWithEmptyKeystore.java","additions":125,"deletions":0,"binary":false,"changes":125,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8274524\n+ * @summary 8274524: SSLSocket.close() hangs if it is called during the ssl handshake\n+ * @library \/javax\/net\/ssl\/templates\n+ * @run main\/othervm ClientSocketCloseHang TLSv1.2\n+ * @run main\/othervm ClientSocketCloseHang TLSv1.3\n+ *\/\n+\n+\n+import javax.net.ssl.*;\n+import java.net.InetAddress;\n+\n+public class ClientSocketCloseHang implements SSLContextTemplate {\n+\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"jdk.tls.client.protocols\", args[0]);\n+        for (int i = 0; i<= 20; i++) {\n+            System.err.println(\"===================================\");\n+            System.err.println(\"loop \" + i);\n+            System.err.println(\"===================================\");\n+            new ClientSocketCloseHang().test();\n+        }\n+    }\n+\n+    private void test() throws Exception {\n+        SSLServerSocket listenSocket = null;\n+        SSLSocket serverSocket = null;\n+        ClientSocket clientSocket = null;\n+        try {\n+            SSLServerSocketFactory serversocketfactory =\n+                    createServerSSLContext().getServerSocketFactory();\n+            listenSocket =\n+                    (SSLServerSocket)serversocketfactory.createServerSocket(0);\n+            listenSocket.setNeedClientAuth(false);\n+            listenSocket.setEnableSessionCreation(true);\n+            listenSocket.setUseClientMode(false);\n+\n+\n+            System.err.println(\"Starting client\");\n+            clientSocket = new ClientSocket(listenSocket.getLocalPort());\n+            clientSocket.start();\n+\n+            System.err.println(\"Accepting client requests\");\n+            serverSocket = (SSLSocket) listenSocket.accept();\n+\n+            serverSocket.startHandshake();\n+        } finally {\n+            if (clientSocket != null) {\n+                clientSocket.close();\n+            }\n+            if (listenSocket != null) {\n+                listenSocket.close();\n+            }\n+\n+            if (serverSocket != null) {\n+                serverSocket.close();\n+            }\n+        }\n+    }\n+\n+    private class ClientSocket extends Thread{\n+        int serverPort = 0;\n+        SSLSocket clientSocket = null;\n+\n+        public ClientSocket(int serverPort) {\n+            this.serverPort = serverPort;\n+        }\n+\n+        @Override\n+        public void run() {\n+            try {\n+                System.err.println(\n+                        \"Connecting to server at port \" + serverPort);\n+                SSLSocketFactory sslSocketFactory =\n+                        createClientSSLContext().getSocketFactory();\n+                clientSocket = (SSLSocket)sslSocketFactory.createSocket(\n+                        InetAddress.getLocalHost(), serverPort);\n+                clientSocket.setSoLinger(true, 3);\n+                clientSocket.startHandshake();\n+            } catch (Exception e) {\n+            }\n+        }\n+\n+        public void close() {\n+            Thread t = new Thread() {\n+                @Override\n+                public void run() {\n+                    try {\n+                        if (clientSocket != null) {\n+                            clientSocket.close();\n+                        }\n+                    } catch (Exception ex) {\n+                    }\n+                }\n+            };\n+            try {\n+                \/\/ Close client connection\n+                t.start();\n+                t.join(2000); \/\/ 2 sec\n+            } catch (InterruptedException ex) {\n+                return;\n+            }\n+\n+            if (t.isAlive()) {\n+                throw new RuntimeException(\"SSL Client hangs on close\");\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/ClientSocketCloseHang.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4906940 8130302 8194152\n+ * @bug 4906940 8130302 8194152 8281175\n@@ -84,5 +84,0 @@\n-        \/\/ legacy use (-providerPath only supported by keytool)\n-        testKeytool(\"-providerPath mods\/test.dummy \" +\n-                \"-providerClass org.test.dummy.DummyProvider -providerArg full\",\n-                0, \"loadProviderByClass: org.test.dummy.DummyProvider\");\n-\n@@ -90,1 +85,1 @@\n-        testBoth(\"-J-cp -Jmods\/test.dummy \" +\n+        testBoth(\"-providerpath mods\/test.dummy \" +\n@@ -95,1 +90,1 @@\n-        testBoth(\"-J-cp -Jmods\/test.dummy \" +\n+        testBoth(\"-providerpath mods\/test.dummy \" +\n@@ -100,1 +95,1 @@\n-        testBoth(\"-J-cp -Jmods\/test.dummy \" +\n+        testBoth(\"-providerpath mods\/test.dummy \" +\n@@ -105,1 +100,1 @@\n-        testBoth(\"-J-cp -Jmods\/test.dummy \" +\n+        testBoth(\"-providerpath mods\/test.dummy \" +\n@@ -110,1 +105,1 @@\n-        testBoth(\"-J-cp -Jmods\/test.dummy \" +\n+        testBoth(\"-providerpath mods\/test.dummy \" +\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/AltProvider.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8273236\n+ * @summary Test SHA1 usage SignedJAR\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class TestSha1Usage {\n+\n+    static OutputAnalyzer kt(String cmd, String ks) throws Exception {\n+        return SecurityTools.keytool(\"-storepass changeit \" + cmd +\n+                \" -keystore \" + ks);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SecurityTools.keytool(\"-keystore ks -storepass changeit \" +\n+                \"-genkeypair -keyalg rsa -alias ca -dname CN=CA \" +\n+                \"-ext eku=codeSigning -sigalg SHA1withRSA\")\n+                .shouldContain(\"Warning:\")\n+                .shouldMatch(\"The generated certificate.*SHA1withRSA.*considered a security risk\")\n+                .shouldMatch(\"cannot be used to sign JARs\")\n+                .shouldHaveExitValue(0);\n+\n+        kt(\"-genkeypair -keyalg rsa -alias e1 -dname CN=E1\", \"ks\");\n+        kt(\"-certreq -alias e1 -file tmp.req\", \"ks\");\n+        SecurityTools.keytool(\"-keystore ks -storepass changeit \" +\n+                \"-gencert -alias ca -infile tmp.req -outfile tmp.cert\")\n+                .shouldContain(\"Warning:\")\n+                .shouldMatch(\"The issuer.*SHA1withRSA.*considered a security risk\")\n+                .shouldMatch(\"cannot be used to sign JARs\")\n+                .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/TestSha1Usage.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8228969 8244087\n+ * @bug 8228969 8244087 8255266\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/ParseNames.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,0 +59,5 @@\n+# br\n+br                      br              null\n+dev.br                  dev.br          null\n+x.dev.br                dev.br          x.dev.br\n+\n","filename":"test\/jdk\/sun\/security\/util\/RegisteredDomain\/tests.dat","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n- * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy\n+ * jstatd -J-XX:+UsePerfData\n@@ -247,5 +247,5 @@\n-     * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy\n-     * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy -p port\n-     * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy -p port -r rmiport\n-     * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy -n serverName\n-     * jstatd -J-XX:+UsePerfData -J-Djava.security.policy=all.policy -p port -n serverName\n+     * jstatd -J-XX:+UsePerfData\n+     * jstatd -J-XX:+UsePerfData -p port\n+     * jstatd -J-XX:+UsePerfData -p port -r rmiport\n+     * jstatd -J-XX:+UsePerfData -n serverName\n+     * jstatd -J-XX:+UsePerfData -p port -n serverName\n@@ -257,4 +257,0 @@\n-        File policy = new File(testSrc, \"all.policy\");\n-        assertTrue(policy.exists() && policy.isFile(),\n-                \"Security policy \" + policy.getAbsolutePath() + \" does not exist or not a file\");\n-        launcher.addVMArg(\"-Djava.security.policy=\" + policy.getAbsolutePath());\n","filename":"test\/jdk\/sun\/tools\/jstatd\/JstatdTest.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,3 +0,0 @@\n-grant {\n-   permission java.security.AllPermission;\n-};\n","filename":"test\/jdk\/sun\/tools\/jstatd\/all.policy","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8281104\n+ * @modules jdk.jartool\n+ * @summary jar --create --file a\/b\/test.jar should create directories a\/b\n+ *\/\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.spi.ToolProvider;\n+import java.util.stream.Stream;\n+\n+public class CreateMissingParentDirectories {\n+    private static final ToolProvider JAR_TOOL = ToolProvider.findFirst(\"jar\")\n+        .orElseThrow(() ->\n+            new RuntimeException(\"jar tool not found\")\n+        );\n+\n+    \/**\n+     * Remove dirs & files needed for test.\n+     *\/\n+    private static void cleanup(Path dir) {\n+        try {\n+            if (Files.isDirectory(dir)) {\n+                try (Stream<Path> s = Files.list(dir)) {\n+                    s.forEach(p -> cleanup(p));\n+                }\n+            }\n+            Files.delete(dir);\n+        } catch (Exception x) {\n+            fail(x.toString());\n+        }\n+    }\n+\n+    public static void realMain(String[] args) throws Throwable {\n+        Path topDir = Files.createTempDirectory(\"delete\");\n+        try {\n+            Path entry = Files.writeString(topDir.resolve(\"test.txt\"), \"Some text...\");\n+\n+            doHappyPathTest(topDir.resolve(\"test.jar\"), entry);\n+            doHappyPathTest(topDir.resolve(\"a\/test.jar\"), entry);\n+            doHappyPathTest(topDir.resolve(\"a\/b\/test.jar\"), entry);\n+\n+            Path blocker = Files.writeString(topDir.resolve(\"blocker.txt\"), \"Blocked!\");\n+            doFailingTest(topDir.resolve(\"blocker.txt\/test.jar\").toString(), entry);\n+        } finally {\n+            cleanup(topDir);\n+        }\n+    }\n+\n+    private static void doHappyPathTest(Path jar, Path entry) throws Throwable {\n+        String[] jarArgs = new String[]{\"cf\", jar.toString(), entry.toString()};\n+        if (JAR_TOOL.run(System.out, System.err, jarArgs) != 0) {\n+            fail(\"Could not create jar file: \" + List.of(jarArgs));\n+            return;\n+        }\n+        jarArgs = new String[]{\"--create\", \"--file\", jar.toString(), entry.toString()};\n+        if (JAR_TOOL.run(System.out, System.err, jarArgs) != 0) {\n+            fail(\"Could not create jar file: \" + List.of(jarArgs));\n+            return;\n+        }\n+        pass();\n+    }\n+\n+    private static void doFailingTest(String jar, Path entry) throws Throwable {\n+        StringWriter out = new StringWriter();\n+        StringWriter err = new StringWriter();\n+        String[] jarArgs = new String[]{\"cf\", jar, entry.toString()};\n+\n+        if (JAR_TOOL.run(new PrintWriter(out, true), new PrintWriter(err, true), jarArgs) == 0) {\n+            fail(\"Should have failed creating jar file: \" + jar);\n+            return;\n+        }\n+        pass();\n+    }\n+\n+    \/\/--------------------- Infrastructure ---------------------------\n+    static volatile int passed = 0, failed = 0;\n+    static void pass() {passed++;}\n+    static void fail() {failed++; Thread.dumpStack();}\n+    static void fail(String msg) {System.out.println(msg); fail();}\n+    static void unexpected(Throwable t) {failed++; t.printStackTrace();}\n+    static void check(boolean cond) {if (cond) pass(); else fail();}\n+    static void equal(Object x, Object y) {\n+        if (x == null ? y == null : x.equals(y)) pass();\n+        else fail(x + \" not equal to \" + y);}\n+    public static void main(String[] args) throws Throwable {\n+        try {realMain(args);} catch (Throwable t) {unexpected(t);}\n+        System.out.println(\"\\nPassed = \" + passed + \" failed = \" + failed);\n+        if (failed > 0) throw new AssertionError(\"Some tests failed\");}\n+}\n","filename":"test\/jdk\/tools\/jar\/CreateMissingParentDirectories.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+import java.util.Optional;\n@@ -63,0 +64,9 @@\n+\n+        if (Optional.ofNullable(System.getProperty(\"jpackage.test.noexit\")).map(\n+                Boolean::parseBoolean).orElse(false)) {\n+            trace(\"noexit\");\n+            var lock = new Object();\n+            synchronized (lock) {\n+                lock.wait();\n+            }\n+        }\n@@ -90,1 +100,2 @@\n-        Path outputFilePath = Path.of(\"appOutput.txt\");\n+        Path outputFilePath = Path.of(Optional.ofNullable(System.getProperty(\n+                \"jpackage.test.appOutput\")).orElse(\"appOutput.txt\"));\n@@ -104,1 +115,1 @@\n-            return outputFilePath;\n+            return outputFilePath.toAbsolutePath();\n@@ -112,1 +123,1 @@\n-        return Path.of(System.getProperty(\"user.home\")).resolve(outputFilePath);\n+        return Path.of(System.getProperty(\"user.home\")).resolve(outputFilePath).toAbsolutePath();\n","filename":"test\/jdk\/tools\/jpackage\/apps\/Hello.java","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Objects;\n@@ -34,0 +35,3 @@\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n@@ -35,1 +39,0 @@\n-import jdk.jpackage.internal.ApplicationLayout;\n@@ -37,0 +40,1 @@\n+import static jdk.jpackage.test.Functional.ThrowingFunction.toFunction;\n@@ -38,1 +42,1 @@\n-public final class AdditionalLauncher {\n+public class AdditionalLauncher {\n@@ -46,1 +50,1 @@\n-    public AdditionalLauncher setDefaultArguments(String... v) {\n+    final public AdditionalLauncher setDefaultArguments(String... v) {\n@@ -51,1 +55,1 @@\n-    public AdditionalLauncher addDefaultArguments(String... v) {\n+    final public AdditionalLauncher addDefaultArguments(String... v) {\n@@ -60,1 +64,1 @@\n-    public AdditionalLauncher setJavaOptions(String... v) {\n+    final public AdditionalLauncher setJavaOptions(String... v) {\n@@ -65,1 +69,1 @@\n-    public AdditionalLauncher addJavaOptions(String... v) {\n+    final public AdditionalLauncher addJavaOptions(String... v) {\n@@ -74,1 +78,2 @@\n-    public AdditionalLauncher addRawProperties(Map.Entry<String, String>... v) {\n+    final public AdditionalLauncher addRawProperties(\n+            Map.Entry<String, String>... v) {\n@@ -78,1 +83,1 @@\n-    public AdditionalLauncher addRawProperties(\n+    final public AdditionalLauncher addRawProperties(\n@@ -84,1 +89,1 @@\n-    public AdditionalLauncher setShortcuts(boolean menu, boolean shortcut) {\n+    final public AdditionalLauncher setShortcuts(boolean menu, boolean shortcut) {\n@@ -90,1 +95,1 @@\n-    public AdditionalLauncher setIcon(Path iconPath) {\n+    final public AdditionalLauncher setIcon(Path iconPath) {\n@@ -99,1 +104,1 @@\n-    public AdditionalLauncher setNoIcon() {\n+    final public AdditionalLauncher setNoIcon() {\n@@ -104,1 +109,1 @@\n-    public AdditionalLauncher setPersistenceHandler(\n+    final public AdditionalLauncher setPersistenceHandler(\n@@ -114,1 +119,1 @@\n-    public void applyTo(JPackageCommand cmd) {\n+    final public void applyTo(JPackageCommand cmd) {\n@@ -119,2 +124,1 @@\n-    public void applyTo(PackageTest test) {\n-        test.addLauncherName(name);\n+    final public void applyTo(PackageTest test) {\n@@ -125,0 +129,25 @@\n+    static void forEachAdditionalLauncher(JPackageCommand cmd,\n+            BiConsumer<String, Path> consumer) {\n+        var argIt = cmd.getAllArguments().iterator();\n+        while (argIt.hasNext()) {\n+            if (\"--add-launcher\".equals(argIt.next())) {\n+                \/\/ <launcherName>=<propFile>\n+                var arg = argIt.next();\n+                var items = arg.split(\"=\", 2);\n+                consumer.accept(items[0], Path.of(items[1]));\n+            }\n+        }\n+    }\n+\n+    static PropertyFile getAdditionalLauncherProperties(\n+            JPackageCommand cmd, String launcherName) {\n+        PropertyFile shell[] = new PropertyFile[1];\n+        forEachAdditionalLauncher(cmd, (name, propertiesFilePath) -> {\n+            if (name.equals(launcherName)) {\n+                shell[0] = toFunction(PropertyFile::new).apply(\n+                        propertiesFilePath);\n+            }\n+        });\n+        return Optional.of(shell[0]).get();\n+    }\n+\n@@ -126,1 +155,11 @@\n-        final Path propsFile = TKit.workDir().resolve(name + \".properties\");\n+        Path propsFile = TKit.workDir().resolve(name + \".properties\");\n+        if (Files.exists(propsFile)) {\n+            \/\/ File with the given name exists, pick another name that\n+            \/\/ will not reference existing file.\n+            try {\n+                propsFile = TKit.createTempFile(propsFile);\n+                TKit.deleteIfExists(propsFile);\n+            } catch (IOException ex) {\n+                Functional.rethrowUnchecked(ex);\n+            }\n+        }\n@@ -245,1 +284,1 @@\n-    private void verify(JPackageCommand cmd) throws IOException {\n+    protected void verify(JPackageCommand cmd) throws IOException {\n@@ -258,8 +297,54 @@\n-        HelloApp.assertApp(launcherPath)\n-        .addDefaultArguments(Optional\n-                .ofNullable(defaultArguments)\n-                .orElseGet(() -> List.of(cmd.getAllArgumentValues(\"--arguments\"))))\n-        .addJavaOptions(Optional\n-                .ofNullable(javaOptions)\n-                .orElseGet(() -> List.of(cmd.getAllArgumentValues(\"--java-options\"))))\n-        .executeAndVerifyOutput();\n+        var appVerifier = HelloApp.assertApp(launcherPath)\n+                .addDefaultArguments(Optional\n+                        .ofNullable(defaultArguments)\n+                        .orElseGet(() -> List.of(cmd.getAllArgumentValues(\"--arguments\"))))\n+                .addJavaOptions(Optional\n+                        .ofNullable(javaOptions)\n+                        .orElseGet(() -> List.of(cmd.getAllArgumentValues(\n+                        \"--java-options\"))).stream().map(\n+                        str -> resolveVariables(cmd, str)).toList());\n+\n+        appVerifier.executeAndVerifyOutput();\n+    }\n+\n+    public static final class PropertyFile {\n+\n+        PropertyFile(Path path) throws IOException {\n+            data = Files.readAllLines(path).stream().map(str -> {\n+                return str.split(\"=\", 2);\n+            }).collect(\n+                    Collectors.toMap(tokens -> tokens[0], tokens -> tokens[1],\n+                            (oldValue, newValue) -> {\n+                                return newValue;\n+                            }));\n+        }\n+\n+        public boolean isPropertySet(String name) {\n+            Objects.requireNonNull(name);\n+            return data.containsKey(name);\n+        }\n+\n+        public Optional<String> getPropertyValue(String name) {\n+            Objects.requireNonNull(name);\n+            return Optional.of(data.get(name));\n+        }\n+\n+        public Optional<Boolean> getPropertyBooleanValue(String name) {\n+            Objects.requireNonNull(name);\n+            return Optional.ofNullable(data.get(name)).map(Boolean::parseBoolean);\n+        }\n+\n+        private final Map<String, String> data;\n+    }\n+\n+    private static String resolveVariables(JPackageCommand cmd, String str) {\n+        var map = Map.of(\n+                \"$APPDIR\", cmd.appLayout().appDirectory(),\n+                \"$ROOTDIR\",\n+                cmd.isImagePackageType() ? cmd.outputBundle() : cmd.appInstallationDirectory(),\n+                \"$BINDIR\", cmd.appLayout().launchersDirectory());\n+        for (var e : map.entrySet()) {\n+            str = str.replaceAll(Pattern.quote(e.getKey()),\n+                    Matcher.quoteReplacement(e.getValue().toString()));\n+        }\n+        return str;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/AdditionalLauncher.java","additions":111,"deletions":26,"binary":false,"changes":137,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.Optional;\n@@ -88,1 +89,2 @@\n-            result.put(\"\", Collections.unmodifiableMap(currentSection));\n+            result.put(Optional.ofNullable(currentSectionName).orElse(\"\"),\n+                    Collections.unmodifiableMap(currentSection));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/CfgFile.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,2 +93,4 @@\n-        TKit.assertTrue(TKit.isWindows(),\n-                \"setWindowsTmpDir is only valid on Windows platform\");\n+        if (!TKit.isWindows()) {\n+            throw new UnsupportedOperationException(\n+                    \"setWindowsTmpDir is only valid on Windows platform\");\n+        }\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/Executor.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -354,0 +354,1 @@\n+            this.outputFilePath = TKit.workDir().resolve(OUTPUT_FILENAME);\n@@ -370,0 +371,2 @@\n+            } else if (\"jpackage.test.appOutput\".equals(name)) {\n+                outputFilePath = Path.of(value);\n@@ -400,0 +403,12 @@\n+        public void verifyOutput(String... args) {\n+            final List<String> launcherArgs = List.of(args);\n+            final List<String> appArgs;\n+            if (launcherArgs.isEmpty()) {\n+                appArgs = defaultLauncherArgs;\n+            } else {\n+                appArgs = launcherArgs;\n+            }\n+\n+            verifyOutputFile(outputFilePath, appArgs, params);\n+        }\n+\n@@ -411,2 +426,1 @@\n-            Path outputFile = TKit.workDir().resolve(OUTPUT_FILENAME);\n-            verifyOutputFile(outputFile, appArgs, params);\n+            verifyOutputFile(outputFilePath, appArgs, params);\n@@ -456,0 +470,1 @@\n+        private Path outputFilePath;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/HelloApp.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,1 @@\n+import static jdk.jpackage.test.AdditionalLauncher.forEachAdditionalLauncher;\n@@ -245,0 +246,11 @@\n+    public JPackageCommand setInputToEmptyDirectory() {\n+        if (Files.exists(inputDir())) {\n+            try {\n+                setArgumentValue(\"--input\", TKit.createTempDirectory(\"input\"));\n+            } catch (IOException ex) {\n+                throw new RuntimeException(ex);\n+            }\n+        }\n+        return this;\n+    }\n+\n@@ -417,0 +429,22 @@\n+    \/**\n+     * Returns path to package file from the path in unpacked package directory\n+     * or the given path if the package is not unpacked.\n+     *\/\n+    public Path pathToPackageFile(Path path) {\n+        Path unpackDir = unpackedPackageDirectory();\n+        if (unpackDir == null) {\n+            if (!path.isAbsolute()) {\n+                throw new IllegalArgumentException(String.format(\n+                        \"Path [%s] is not absolute\", path));\n+            }\n+            return path;\n+        }\n+\n+        if (!path.startsWith(unpackDir)) {\n+            throw new IllegalArgumentException(String.format(\n+                    \"Path [%s] doesn't start with [%s] path\", path, unpackDir));\n+        }\n+\n+        return Path.of(\"\/\").resolve(unpackDir.relativize(path));\n+    }\n+\n@@ -500,0 +534,12 @@\n+    \/**\n+     * Returns names of all additional launchers or empty list if none\n+     * configured.\n+     *\/\n+    public List<String> addLauncherNames() {\n+        List<String> names = new ArrayList<>();\n+        forEachAdditionalLauncher(this, (launcherName, propFile) -> {\n+            names.add(launcherName);\n+        });\n+        return names;\n+    }\n+\n@@ -540,3 +586,3 @@\n-        if (criticalRuntimeFiles.stream().filter(\n-                v -> runtimeDir.resolve(v).toFile().exists()).findFirst().orElse(\n-                        null) == null) {\n+        if (!criticalRuntimeFiles.stream().anyMatch(v -> {\n+            return runtimeDir.resolve(v).toFile().exists();\n+        })) {\n@@ -741,1 +787,1 @@\n-        } else if (TKit.isOSX()) {\n+        } else if (TKit.isOSX() && !isRuntime()) {\n@@ -766,1 +812,5 @@\n-        setArgumentValue(UNPACKED_PATH_ARGNAME, path);\n+        if (path != null) {\n+            setArgumentValue(UNPACKED_PATH_ARGNAME, path);\n+        } else {\n+            removeArgumentWithValue(UNPACKED_PATH_ARGNAME);\n+        }\n@@ -791,0 +841,5 @@\n+    @Override\n+    public String toString() {\n+        return getPrintableCommandLine();\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":61,"deletions":6,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    Path getPath() {\n+    public Path getPath() {\n@@ -51,1 +51,1 @@\n-    Path relativePathInJavaHome() {\n+    private Path relativePathInJavaHome() {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JavaTool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,1 @@\n-\n-public class LinuxHelper {\n+public final class LinuxHelper {\n@@ -186,1 +185,4 @@\n-            Executor.of(\"sudo\", \"dpkg\", \"-r\", getPackageName(cmd)).execute();\n+            var packageName = getPackageName(cmd);\n+            String script = String.format(\"! dpkg -s %s || sudo dpkg -r %s\",\n+                    packageName, packageName);\n+            Executor.of(\"sh\", \"-c\", script).execute();\n@@ -203,1 +205,1 @@\n-            Executor.of(\"sudo\", \"rpm\", \"-i\")\n+            Executor.of(\"sudo\", \"rpm\", \"-U\")\n@@ -209,1 +211,4 @@\n-            Executor.of(\"sudo\", \"rpm\", \"-e\", getPackageName(cmd)).execute();\n+            var packageName = getPackageName(cmd);\n+            String script = String.format(\"! rpm -q %s || sudo rpm -e %s\",\n+                    packageName, packageName);\n+            Executor.of(\"sh\", \"-c\", script).execute();\n@@ -366,1 +371,1 @@\n-            try (var files = Files.walk(cmd.appLayout().destktopIntegrationDirectory(), 1)) {\n+            try (var files = Files.list(cmd.appLayout().destktopIntegrationDirectory())) {\n@@ -369,1 +374,1 @@\n-                        .collect(Collectors.toList());\n+                        .toList();\n@@ -473,1 +478,3 @@\n-                Path desktopFile = getSystemDesktopFilesFolder().resolve(\n+                Path systemDesktopFile = getSystemDesktopFilesFolder().resolve(\n+                        desktopFileName);\n+                Path appDesktopFile = cmd.appLayout().destktopIntegrationDirectory().resolve(\n@@ -476,13 +483,2 @@\n-                TKit.assertFileExists(desktopFile);\n-\n-                TKit.trace(String.format(\"Reading [%s] file...\", desktopFile));\n-                String mimeHandler = Files.readAllLines(desktopFile).stream().peek(\n-                        v -> TKit.trace(v)).filter(\n-                                v -> v.startsWith(\"Exec=\")).map(\n-                                v -> v.split(\"=\", 2)[1]).findFirst().orElseThrow();\n-\n-                TKit.trace(String.format(\"Done\"));\n-\n-                TKit.assertEquals(cmd.appLauncherPath().toString(),\n-                        mimeHandler, String.format(\n-                                \"Check mime type handler is the main application launcher\"));\n+                TKit.assertFileExists(systemDesktopFile);\n+                TKit.assertFileExists(appDesktopFile);\n@@ -490,0 +486,4 @@\n+                TKit.assertStringListEquals(Files.readAllLines(appDesktopFile),\n+                        Files.readAllLines(systemDesktopFile), String.format(\n+                        \"Check [%s] file is a copy of [%s] file\",\n+                        systemDesktopFile, appDesktopFile));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LinuxHelper.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,1 @@\n+import jdk.jpackage.internal.IOUtils;\n@@ -49,1 +50,1 @@\n-public class MacHelper {\n+public final class MacHelper {\n@@ -175,3 +176,3 @@\n-            .addArgument(cmd.outputBundle())\n-            .addArguments(\"-target\", \"\/\")\n-            .execute();\n+                    .addArgument(cmd.outputBundle())\n+                    .addArguments(\"-target\", \"\/\")\n+                    .execute();\n@@ -181,0 +182,3 @@\n+\n+            var dataDir = destinationDir.resolve(\"data\");\n+\n@@ -182,3 +186,3 @@\n-            .addArgument(cmd.outputBundle())\n-            .addArgument(destinationDir.resolve(\"data\")) \/\/ We need non-existing folder\n-            .execute();\n+                    .addArgument(cmd.outputBundle())\n+                    .addArgument(dataDir) \/\/ We need non-existing folder\n+                    .execute();\n@@ -188,5 +192,27 @@\n-            Path installDir = TKit.removeRootFromAbsolutePath(\n-                    getInstallationDirectory(cmd)).getParent();\n-            final Path unpackDir = unpackRoot.resolve(installDir);\n-            try {\n-                Files.createDirectories(unpackDir);\n+            \/\/ Unpack all \".pkg\" files from $dataDir folder in $unpackDir folder\n+            try (var dataListing = Files.list(dataDir)) {\n+                dataListing.filter(file -> {\n+                    return \".pkg\".equals(IOUtils.getSuffix(file.getFileName()));\n+                }).forEach(ThrowingConsumer.toConsumer(pkgDir -> {\n+                    \/\/ Installation root of the package is stored in\n+                    \/\/ \/pkg-info@install-location attribute in $pkgDir\/PackageInfo xml file\n+                    var doc = createDocumentBuilder().parse(\n+                            new ByteArrayInputStream(Files.readAllBytes(\n+                                    pkgDir.resolve(\"PackageInfo\"))));\n+                    var xPath = XPathFactory.newInstance().newXPath();\n+\n+                    final String installRoot = (String) xPath.evaluate(\n+                            \"\/pkg-info\/@install-location\", doc,\n+                            XPathConstants.STRING);\n+\n+                    final Path unpackDir = unpackRoot.resolve(\n+                            TKit.removeRootFromAbsolutePath(Path.of(installRoot)));\n+\n+                    Files.createDirectories(unpackDir);\n+\n+                    Executor.of(\"tar\", \"-C\")\n+                            .addArgument(unpackDir)\n+                            .addArgument(\"-xvf\")\n+                            .addArgument(pkgDir.resolve(\"Payload\"))\n+                            .execute();\n+                }));\n@@ -197,6 +223,0 @@\n-            Executor.of(\"tar\", \"-C\")\n-            .addArgument(unpackDir)\n-            .addArgument(\"-xvf\")\n-            .addArgument(Path.of(destinationDir.toString(), \"data\",\n-                                 cmd.name() + \"-app.pkg\", \"Payload\"))\n-            .execute();\n@@ -207,0 +227,1 @@\n+\n@@ -208,2 +229,3 @@\n-            .addArgument(cmd.appInstallationDirectory())\n-            .execute();\n+                    .addArgument(cmd.appInstallationDirectory())\n+                    .execute();\n+\n@@ -223,2 +245,3 @@\n-        return Path.of(cmd.getArgumentValue(\"--install-dir\", () -> \"\/Applications\"))\n-                .resolve(cmd.name() + (cmd.isRuntime() ? \"\" : \".app\"));\n+        return Path.of(cmd.getArgumentValue(\"--install-dir\",\n+                () -> cmd.isRuntime() ? \"\/Library\/Java\/JavaVirtualMachines\" : \"\/Applications\")).resolve(\n+                        cmd.name() + (cmd.isRuntime() ? \"\" : \".app\"));\n@@ -228,2 +251,1 @@\n-        return cmd.getArgumentValue(\"--mac-package-name\",\n-                () -> cmd.installerName());\n+        return cmd.getArgumentValue(\"--mac-package-name\", cmd::installerName);\n@@ -277,1 +299,1 @@\n-        PListWrapper(String xml) throws ParserConfigurationException,\n+        private PListWrapper(String xml) throws ParserConfigurationException,\n@@ -283,9 +305,0 @@\n-        private static DocumentBuilder createDocumentBuilder() throws\n-                ParserConfigurationException {\n-            DocumentBuilderFactory dbf = DocumentBuilderFactory.newDefaultInstance();\n-            dbf.setFeature(\n-                    \"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\",\n-                    false);\n-            return dbf.newDocumentBuilder();\n-        }\n-\n@@ -295,0 +308,9 @@\n+    private static DocumentBuilder createDocumentBuilder() throws\n+                ParserConfigurationException {\n+        DocumentBuilderFactory dbf = DocumentBuilderFactory.newDefaultInstance();\n+        dbf.setFeature(\n+                \"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\",\n+                false);\n+        return dbf.newDocumentBuilder();\n+    }\n+\n@@ -297,1 +319,0 @@\n-\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/MacHelper.java","additions":57,"deletions":36,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -39,0 +40,1 @@\n+import java.util.Optional;\n@@ -44,0 +46,1 @@\n+import java.util.function.Supplier;\n@@ -46,1 +49,0 @@\n-import jdk.jpackage.internal.AppImageFile;\n@@ -49,0 +51,1 @@\n+import static jdk.jpackage.test.Functional.ThrowingBiConsumer.toBiConsumer;\n@@ -50,0 +53,1 @@\n+import static jdk.jpackage.test.Functional.ThrowingConsumer.toConsumer;\n@@ -51,1 +55,11 @@\n-\n+import static jdk.jpackage.test.Functional.ThrowingSupplier.toSupplier;\n+import static jdk.jpackage.test.Functional.rethrowUnchecked;\n+import static jdk.jpackage.test.PackageType.LINUX;\n+import static jdk.jpackage.test.PackageType.LINUX_DEB;\n+import static jdk.jpackage.test.PackageType.LINUX_RPM;\n+import static jdk.jpackage.test.PackageType.MAC_DMG;\n+import static jdk.jpackage.test.PackageType.MAC_PKG;\n+import static jdk.jpackage.test.PackageType.NATIVE;\n+import static jdk.jpackage.test.PackageType.WINDOWS;\n+import static jdk.jpackage.test.PackageType.WIN_EXE;\n+import static jdk.jpackage.test.PackageType.WIN_MSI;\n@@ -85,1 +99,1 @@\n-            newTypes = PackageType.NATIVE;\n+            newTypes = NATIVE;\n@@ -125,1 +139,1 @@\n-                ThrowingConsumer.toConsumer(v)));\n+                toConsumer(v)));\n@@ -154,1 +168,1 @@\n-                ThrowingBiConsumer.toBiConsumer(v)));\n+                toBiConsumer(v)));\n@@ -159,2 +173,1 @@\n-        return addBundleVerifier(\n-                (cmd, unused) -> ThrowingConsumer.toConsumer(v).accept(cmd));\n+        return addBundleVerifier((cmd, unused) -> toConsumer(v).accept(cmd));\n@@ -187,1 +200,1 @@\n-        forTypes(PackageType.LINUX, () -> {\n+        forTypes(LINUX, () -> {\n@@ -195,1 +208,1 @@\n-                ThrowingConsumer.toConsumer(v)));\n+                toConsumer(v)));\n@@ -201,1 +214,1 @@\n-                ThrowingConsumer.toConsumer(v)));\n+                toConsumer(v)));\n@@ -205,1 +218,1 @@\n-    public PackageTest setPackageInstaller(Consumer<JPackageCommand> v) {\n+    public PackageTest disablePackageInstaller() {\n@@ -207,7 +220,1 @@\n-                type -> packageHandlers.get(type).installHandler = v);\n-        return this;\n-    }\n-\n-    public PackageTest setPackageUnpacker(\n-            BiFunction<JPackageCommand, Path, Path> v) {\n-        currentTypes.forEach(type -> packageHandlers.get(type).unpackHandler = v);\n+                type -> packageHandlers.get(type).installHandler = cmd -> {});\n@@ -217,1 +224,1 @@\n-    public PackageTest setPackageUninstaller(Consumer<JPackageCommand> v) {\n+    public PackageTest disablePackageUninstaller() {\n@@ -219,1 +226,1 @@\n-                type -> packageHandlers.get(type).uninstallHandler = v);\n+                type -> packageHandlers.get(type).uninstallHandler = cmd -> {});\n@@ -241,1 +248,1 @@\n-        forTypes(PackageType.LINUX, () -> {\n+        forTypes(LINUX, () -> {\n@@ -320,5 +327,0 @@\n-    public PackageTest addLauncherName(String name) {\n-        launcherNames.add(name);\n-        return this;\n-    }\n-\n@@ -375,1 +377,1 @@\n-        return PackageType.NATIVE.stream()\n+        return NATIVE.stream()\n@@ -396,1 +398,1 @@\n-        return ThrowingConsumer.toConsumer(new ThrowingConsumer<Action>() {\n+        return toConsumer(new ThrowingConsumer<Action>() {\n@@ -399,0 +401,4 @@\n+                if (terminated) {\n+                    throw new IllegalStateException();\n+                }\n+\n@@ -400,3 +406,6 @@\n-                    if (unpackDir != null && Files.isDirectory(unpackDir)\n-                            && !unpackDir.startsWith(TKit.workDir())) {\n-                        TKit.deleteDirectoryRecursive(unpackDir);\n+                    if (unpackDir != null) {\n+                        if (Files.isDirectory(unpackDir)\n+                                && !unpackDir.startsWith(TKit.workDir())) {\n+                            TKit.deleteDirectoryRecursive(unpackDir);\n+                        }\n+                        unpackDir = null;\n@@ -404,0 +413,1 @@\n+                    terminated = true;\n@@ -410,6 +420,7 @@\n-                final JPackageCommand curCmd;\n-                if (Set.of(Action.INITIALIZE, Action.CREATE).contains(action)) {\n-                    curCmd = cmd;\n-                } else {\n-                    curCmd = cmd.createImmutableCopy();\n-                }\n+                final Supplier<JPackageCommand> curCmd = () -> {\n+                    if (Set.of(Action.INITIALIZE, Action.CREATE).contains(action)) {\n+                        return cmd;\n+                    } else {\n+                        return cmd.createImmutableCopy();\n+                    }\n+                };\n@@ -419,0 +430,1 @@\n+                        cmd.setUnpackedPackageLocation(null);\n@@ -431,0 +443,1 @@\n+                        cmd.setUnpackedPackageLocation(null);\n@@ -433,1 +446,1 @@\n-                            handler.accept(curCmd);\n+                            handler.accept(curCmd.get());\n@@ -441,1 +454,1 @@\n-                            handler.accept(curCmd);\n+                            handler.accept(curCmd.get());\n@@ -447,1 +460,2 @@\n-                        handler.accept(action, curCmd);\n+                        cmd.setUnpackedPackageLocation(null);\n+                        handler.accept(action, curCmd.get());\n@@ -452,1 +466,1 @@\n-                        handler.accept(action, curCmd);\n+                        handler.accept(action, curCmd.get());\n@@ -465,0 +479,1 @@\n+            private boolean terminated;\n@@ -538,0 +553,10 @@\n+\n+                case PURGE:\n+                    if (expectedJPackageExitCode == 0) {\n+                        var bundle = cmd.outputBundle();\n+                        if (toSupplier(() -> TKit.deleteIfExists(bundle)).get()) {\n+                            TKit.trace(String.format(\"Deleted [%s] package\",\n+                                    bundle));\n+                        }\n+                    }\n+                    break;\n@@ -544,1 +569,1 @@\n-                if (PackageType.LINUX.contains(cmd.packageType())) {\n+                if (LINUX.contains(cmd.packageType())) {\n@@ -560,0 +585,5 @@\n+            Optional.ofNullable(cmd.unpackedPackageDirectory()).ifPresent(\n+                    unpackedDir -> {\n+                        verifyRootCountInUnpackedPackage(cmd, unpackedDir);\n+                    });\n+\n@@ -561,1 +591,1 @@\n-                if (PackageType.WINDOWS.contains(cmd.packageType())\n+                if (WINDOWS.contains(cmd.packageType())\n@@ -565,1 +595,1 @@\n-                    new WindowsHelper.DesktopIntegrationVerifier(cmd, null);\n+                    WindowsHelper.verifyDesktopIntegration(cmd, null);\n@@ -567,2 +597,2 @@\n-                    launcherNames.forEach(name -> {\n-                        new WindowsHelper.DesktopIntegrationVerifier(cmd, name);\n+                    cmd.addLauncherNames().forEach(name -> {\n+                        WindowsHelper.verifyDesktopIntegration(cmd, name);\n@@ -572,0 +602,1 @@\n+\n@@ -577,0 +608,44 @@\n+        private void verifyRootCountInUnpackedPackage(JPackageCommand cmd,\n+                Path unpackedDir) {\n+\n+            final long expectedRootCount;\n+            if (WINDOWS.contains(cmd.packageType())) {\n+                \/\/ On Windows it is always two entries:\n+                \/\/ installation home directory and MSI file\n+                expectedRootCount = 2;\n+            } else if (LINUX.contains(cmd.packageType())) {\n+                Set<Path> roots = new HashSet<>();\n+                roots.add(Path.of(\"\/\").resolve(Path.of(cmd.getArgumentValue(\n+                        \"--install-dir\", () -> \"\/opt\")).getName(0)));\n+                if (cmd.hasArgument(\"--license-file\")) {\n+                    switch (cmd.packageType()) {\n+                        case LINUX_RPM -> {\n+                            \/\/ License file is in \/usr\/share\/licenses subtree\n+                            roots.add(Path.of(\"\/usr\"));\n+                        }\n+\n+                        case LINUX_DEB -> {\n+                            Path installDir = cmd.appInstallationDirectory();\n+                            if (installDir.equals(Path.of(\"\/\"))\n+                                    || installDir.startsWith(\"\/usr\")) {\n+                                \/\/ License file is in \/usr\/share\/doc subtree\n+                                roots.add(Path.of(\"\/usr\"));\n+                            }\n+                        }\n+                    }\n+                }\n+                expectedRootCount = roots.size();\n+            } else {\n+                expectedRootCount = 1;\n+            }\n+\n+            try ( var files = Files.list(unpackedDir)) {\n+                TKit.assertEquals(expectedRootCount, files.count(),\n+                        String.format(\n+                                \"Check the package has %d top installation directories\",\n+                                expectedRootCount));\n+            } catch (IOException ex) {\n+                rethrowUnchecked(ex);\n+            }\n+        }\n+\n@@ -583,1 +658,1 @@\n-                if (PackageType.WINDOWS.contains(cmd.packageType())) {\n+                if (WINDOWS.contains(cmd.packageType())) {\n@@ -585,1 +660,1 @@\n-                    new WindowsHelper.DesktopIntegrationVerifier(cmd, null);\n+                    WindowsHelper.verifyDesktopIntegration(cmd, null);\n@@ -587,2 +662,2 @@\n-                    launcherNames.forEach(name -> {\n-                        new WindowsHelper.DesktopIntegrationVerifier(cmd, name);\n+                    cmd.addLauncherNames().forEach(name -> {\n+                        WindowsHelper.verifyDesktopIntegration(cmd, name);\n@@ -613,2 +688,2 @@\n-            handlers.put(PackageType.LINUX_DEB, LinuxHelper.createDebPackageHandlers());\n-            handlers.put(PackageType.LINUX_RPM, LinuxHelper.createRpmPackageHandlers());\n+            handlers.put(LINUX_DEB, LinuxHelper.createDebPackageHandlers());\n+            handlers.put(LINUX_RPM, LinuxHelper.createRpmPackageHandlers());\n@@ -618,2 +693,2 @@\n-            handlers.put(PackageType.WIN_MSI, WindowsHelper.createMsiPackageHandlers());\n-            handlers.put(PackageType.WIN_EXE, WindowsHelper.createExePackageHandlers());\n+            handlers.put(WIN_MSI, WindowsHelper.createMsiPackageHandlers());\n+            handlers.put(WIN_EXE, WindowsHelper.createExePackageHandlers());\n@@ -623,2 +698,2 @@\n-            handlers.put(PackageType.MAC_DMG,  MacHelper.createDmgPackageHandlers());\n-            handlers.put(PackageType.MAC_PKG,  MacHelper.createPkgPackageHandlers());\n+            handlers.put(MAC_DMG,  MacHelper.createDmgPackageHandlers());\n+            handlers.put(MAC_PKG,  MacHelper.createPkgPackageHandlers());\n@@ -636,1 +711,0 @@\n-    private final List<String> launcherNames = new ArrayList();\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageTest.java","additions":132,"deletions":58,"binary":false,"changes":190,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,6 @@\n+            if (hasAction(Action.PURGE) && !actionList.contains(Action.PURGE)) {\n+                \/\/ Default action list contains \"purge\" action meaning\n+                \/\/ packages are not needed for further processing.\n+                \/\/ Copy this behavior in custom action list.\n+                actionList.add(Action.PURGE);\n+            }\n@@ -54,0 +60,4 @@\n+    public static boolean hasAction(Action a) {\n+        return DEFAULT_ACTIONS.contains(a);\n+    }\n+\n@@ -92,0 +102,4 @@\n+        \/**\n+         * Purge package.\n+         *\/\n+        PURGE,\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/RunnablePackageTest.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-        return Path.of(cmd.getArgumentValue(\"--install-dir\", () -> cmd.name()));\n+        return Path.of(cmd.getArgumentValue(\"--install-dir\", cmd::name));\n@@ -69,1 +69,7 @@\n-            \/\/ The given Executor may either be of an msiexe command or an\n+            if (result.exitCode == 1605) {\n+                \/\/ ERROR_UNKNOWN_PRODUCT, attempt to uninstall not installed\n+                \/\/ package\n+                return;\n+            }\n+\n+            \/\/ The given Executor may either be of an msiexec command or an\n@@ -94,1 +100,5 @@\n-        msi.uninstallHandler = cmd -> installMsi.accept(cmd, false);\n+        msi.uninstallHandler = cmd -> {\n+            if (Files.exists(cmd.outputBundle())) {\n+                installMsi.accept(cmd, false);\n+            }\n+        };\n@@ -101,0 +111,1 @@\n+\n@@ -103,1 +114,5 @@\n-            TKit.createTextFile(unpackBat, List.of(String.join(\" \", List.of(\n+            \/\/ Set folder permissions to allow msiexec unpack msi bundle.\n+            TKit.createTextFile(unpackBat, List.of(\n+                    String.format(\"icacls \\\"%s\\\" \/inheritance:e \/grant Users:M\",\n+                            destinationDir),\n+                    String.join(\" \", List.of(\n@@ -128,1 +143,5 @@\n-        exe.uninstallHandler = cmd -> installExe.accept(cmd, false);\n+        exe.uninstallHandler = cmd -> {\n+            if (Files.exists(cmd.outputBundle())) {\n+                installExe.accept(cmd, false);\n+            }\n+        };\n@@ -132,0 +151,5 @@\n+    static void verifyDesktopIntegration(JPackageCommand cmd,\n+            String launcherName) {\n+        new DesktopIntegrationVerifier(cmd, launcherName);\n+    }\n+\n@@ -146,1 +170,1 @@\n-    static class DesktopIntegrationVerifier {\n+    private static class DesktopIntegrationVerifier {\n@@ -148,1 +172,1 @@\n-        DesktopIntegrationVerifier(JPackageCommand cmd, String name) {\n+        DesktopIntegrationVerifier(JPackageCommand cmd, String launcherName) {\n@@ -150,2 +174,24 @@\n-            this.cmd = cmd;\n-            this.name = (name == null ? cmd.name() : name);\n+\n+            name = Optional.ofNullable(launcherName).orElseGet(cmd::name);\n+\n+            isUserLocalInstall = isUserLocalInstall(cmd);\n+\n+            appInstalled = cmd.appLauncherPath(launcherName).toFile().exists();\n+\n+            desktopShortcutPath = Path.of(name + \".lnk\");\n+\n+            startMenuShortcutPath = Path.of(cmd.getArgumentValue(\n+                    \"--win-menu-group\", () -> \"Unknown\"), name + \".lnk\");\n+\n+            if (name.equals(cmd.name())) {\n+                isWinMenu = cmd.hasArgument(\"--win-menu\");\n+                isDesktop = cmd.hasArgument(\"--win-shortcut\");\n+            } else {\n+                var props = AdditionalLauncher.getAdditionalLauncherProperties(cmd,\n+                        launcherName);\n+                isWinMenu = props.getPropertyBooleanValue(\"win-menu\").orElseGet(\n+                        () -> cmd.hasArgument(\"--win-menu\"));\n+                isDesktop = props.getPropertyBooleanValue(\"win-shortcut\").orElseGet(\n+                        () -> cmd.hasArgument(\"--win-shortcut\"));\n+            }\n+\n@@ -153,0 +199,1 @@\n+\n@@ -154,1 +201,3 @@\n-            verifyFileAssociationsRegistry();\n+\n+            Stream.of(cmd.getAllArgumentValues(\"--file-associations\")).map(\n+                    Path::of).forEach(this::verifyFileAssociationsRegistry);\n@@ -158,3 +207,2 @@\n-            boolean appInstalled = cmd.appLauncherPath(name).toFile().exists();\n-            if (cmd.hasArgument(\"--win-shortcut\")) {\n-                if (isUserLocalInstall(cmd)) {\n+            if (isDesktop) {\n+                if (isUserLocalInstall) {\n@@ -173,4 +221,0 @@\n-        private Path desktopShortcutPath() {\n-            return Path.of(name + \".lnk\");\n-        }\n-\n@@ -188,1 +232,1 @@\n-            verifyShortcut(dir.resolve(desktopShortcutPath()), exists);\n+            verifyShortcut(dir.resolve(desktopShortcutPath), exists);\n@@ -194,1 +238,1 @@\n-            verifyShortcut(dir.resolve(desktopShortcutPath()), exists);\n+            verifyShortcut(dir.resolve(desktopShortcutPath), exists);\n@@ -198,3 +242,2 @@\n-            boolean appInstalled = cmd.appLauncherPath(name).toFile().exists();\n-            if (cmd.hasArgument(\"--win-menu\")) {\n-                if (isUserLocalInstall(cmd)) {\n+            if (isWinMenu) {\n+                if (isUserLocalInstall) {\n@@ -213,5 +256,0 @@\n-        private Path startMenuShortcutPath() {\n-            return Path.of(cmd.getArgumentValue(\"--win-menu-group\",\n-                    () -> \"Unknown\"), name + \".lnk\");\n-        }\n-\n@@ -219,1 +257,1 @@\n-            Path shortcutPath = shortcutsRoot.resolve(startMenuShortcutPath());\n+            Path shortcutPath = shortcutsRoot.resolve(startMenuShortcutPath);\n@@ -237,5 +275,0 @@\n-        private void verifyFileAssociationsRegistry() {\n-            Stream.of(cmd.getAllArgumentValues(\"--file-associations\")).map(\n-                    Path::of).forEach(this::verifyFileAssociationsRegistry);\n-        }\n-\n@@ -243,1 +276,0 @@\n-            boolean appInstalled = cmd.appLauncherPath(name).toFile().exists();\n@@ -293,1 +325,6 @@\n-        private final JPackageCommand cmd;\n+        private final Path desktopShortcutPath;\n+        private final Path startMenuShortcutPath;\n+        private final boolean isUserLocalInstall;\n+        private final boolean appInstalled;\n+        private final boolean isWinMenu;\n+        private final boolean isDesktop;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/WindowsHelper.java","additions":73,"deletions":36,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,3 +81,1 @@\n-  echo \"  -m <mode>       - mode to run jtreg tests.\"\n-  echo '                    Should be one of `create`, `update` or `print-default-tests`.'\n-  echo '                    Optional, default mode is `update`.'\n+  echo \"  -m <mode>       - mode to run jtreg tests. Supported values:\"\n@@ -90,0 +88,12 @@\n+  echo '                    - `create-small-runtime`'\n+  echo '                      Create small Java runtime using <jdk>\/bin\/jlink command in the output directory.'\n+  echo '                    - `create-packages`'\n+  echo '                      Create packages.'\n+  echo '                      The script will set `jpackage.test.action` property.'\n+  echo '                    - `test-packages`'\n+  echo '                      Create and fully test packages. Will create, unpack, install, and uninstall packages.'\n+  echo '                      The script will set `jpackage.test.action` property.'\n+  echo '                    - `do-packages`'\n+  echo \"                      Create, unpack and verify packages.\"\n+  echo '                      The script will not set `jpackage.test.action` property.'\n+  echo '                    Optional, defaults are `update` and `create-packages`.'\n@@ -136,2 +146,0 @@\n-# hg clone http:\/\/hg.openjdk.java.net\/jdk\/sandbox\n-# cd sandbox; hg update -r JDK-8200758-branch\n@@ -155,3 +163,0 @@\n-# Create packages only\n-jtreg_args+=(\"-Djpackage.test.action=create\")\n-\n@@ -161,0 +166,18 @@\n+test_actions=\n+\n+set_mode ()\n+{\n+  case \"$1\" in\n+    create-packages) test_actions='-Djpackage.test.action=create';;\n+    test-packages) test_actions='-Djpackage.test.action=uninstall,create,unpack,verify-install,install,verify-install,uninstall,verify-uninstall,purge';;\n+    do-packages) test_actions=;;\n+    create-small-runtime) mode=$1;;\n+    print-default-tests) mode=$1;;\n+    create) mode=$1;;\n+    update) mode=$1;;\n+    *) fatal_with_help_usage 'Invalid value of -m option:' [$1];;\n+  esac\n+}\n+\n+set_mode 'create-packages'\n+\n@@ -174,1 +197,1 @@\n-    m) mode=\"$OPTARG\";;\n+    m) set_mode \"$OPTARG\";;\n@@ -204,0 +227,5 @@\n+if [ \"$mode\" = \"create-small-runtime\" ]; then\n+  exec_command \"$test_jdk\/bin\/jlink\" --add-modules java.base,java.datatransfer,java.xml,java.prefs,java.desktop --compress=2 --no-header-files --no-man-pages --strip-debug --output \"$output_dir\"\n+  exit\n+fi\n+\n@@ -225,8 +253,0 @@\n-if [ \"$mode\" = create ]; then\n-  true\n-elif [ \"$mode\" = update ]; then\n-  true\n-else\n-  fatal_with_help_usage 'Invalid value of -m option:' [$mode]\n-fi\n-\n@@ -237,0 +257,2 @@\n+jtreg_args+=(\"$test_actions\")\n+\n@@ -252,1 +274,1 @@\n-        exec_command \"(\" cd \"$workdir\" \"&&\" wget \"$jtreg_bundle\" \"&&\" tar -xzf \"$(basename $jtreg_bundle)\" \";\" rm -f \"$(basename $jtreg_bundle)\" \")\"\n+        exec_command \"(\" cd \"$workdir\" \"&&\" wget --no-check-certificate \"$jtreg_bundle\" \"&&\" tar -xzf \"$(basename $jtreg_bundle)\" \";\" rm -f \"$(basename $jtreg_bundle)\" \")\"\n@@ -255,1 +277,1 @@\n-          exec_command \"(\" cd \"$workdir\" \"&&\" wget \"$jtreg_bundle\" \"&&\" unzip \"$(basename $jtreg_bundle)\" \";\" rm -f \"$(basename $jtreg_bundle)\" \")\"\n+          exec_command \"(\" cd \"$workdir\" \"&&\" wget --no-check-certificate \"$jtreg_bundle\" \"&&\" unzip \"$(basename $jtreg_bundle)\" \";\" rm -f \"$(basename $jtreg_bundle)\" \")\"\n","filename":"test\/jdk\/tools\/jpackage\/run_tests.sh","additions":42,"deletions":20,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,0 @@\n-                .addLauncherName(\"bar\") \/\/ Add launchers name for verification\n-                .addLauncherName(\"foo\")\n","filename":"test\/jdk\/tools\/jpackage\/share\/MultiLauncherTwoPhaseTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,100 +0,0 @@\n-#!\/bin\/bash\n-\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-\n-#\n-# Complete testing of jpackage platform-specific packaging.\n-#\n-# The script does the following:\n-# 1. Create packages.\n-# 2. Install created packages.\n-# 3. Verifies packages are installed.\n-# 4. Uninstall created packages.\n-# 5. Verifies packages are uninstalled.\n-#\n-# For the list of accepted command line arguments see `run_tests.sh` script.\n-#\n-\n-# Fail fast\n-set -e; set -o pipefail;\n-\n-# Script debug\n-dry_run=${JPACKAGE_TEST_DRY_RUN}\n-\n-# Default directory where jpackage should write bundle files\n-output_dir=~\/jpackage_bundles\n-\n-\n-set_args ()\n-{\n-  args=()\n-  local arg_is_output_dir=\n-  local arg_is_mode=\n-  local output_dir_set=\n-  local with_append_actions=yes\n-  for arg in \"$@\"; do\n-    if [ \"$arg\" == \"-o\" ]; then\n-      arg_is_output_dir=yes\n-      output_dir_set=yes\n-    elif [ \"$arg\" == \"-m\" ]; then\n-      arg_is_mode=yes\n-      continue\n-    elif [ \"$arg\" == '--' ]; then\n-      append_actions\n-      with_append_actions=\n-      continue\n-    elif ! case \"$arg\" in -Djpackage.test.action=*) false;; esac; then\n-      continue\n-    elif [ -n \"$arg_is_output_dir\" ]; then\n-      arg_is_output_dir=\n-      output_dir=\"$arg\"\n-    elif [ -n \"$arg_is_mode\" ]; then\n-      arg_is_mode=\n-      continue\n-    fi\n-\n-    args+=( \"$arg\" )\n-  done\n-  [ -n \"$output_dir_set\" ] || args=( -o \"$output_dir\" \"${args[@]}\" )\n-  [ -z \"$with_append_actions\" ] || append_actions\n-}\n-\n-\n-append_actions ()\n-{\n-  args+=( '--' '-Djpackage.test.action=create,install,verify-install,uninstall,verify-uninstall' )\n-}\n-\n-\n-exec_command ()\n-{\n-  if [ -n \"$dry_run\" ]; then\n-    echo \"$@\"\n-  else\n-    eval \"$@\"\n-  fi\n-}\n-\n-set_args \"$@\"\n-basedir=\"$(dirname $0)\"\n-exec_command ${SHELL} \"$basedir\/run_tests.sh\" -m create \"${args[@]}\"\n","filename":"test\/jdk\/tools\/jpackage\/test_jpackage.sh","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,0 @@\n-import java.awt.Graphics;\n-import java.awt.image.BufferedImage;\n-import java.io.IOException;\n@@ -28,2 +25,2 @@\n-import javax.swing.Icon;\n-import javax.swing.filechooser.FileSystemView;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n@@ -49,1 +46,0 @@\n- * @requires !vm.debug\n@@ -55,5 +51,0 @@\n-\/*\n- * note: AWT can throw assertion from GetDiBits() extracting icon\n- * bits in fastdebug mode on windows headless systems. That is why\n- * we have @requires !vm.debug\" above.\n- *\/\n@@ -63,1 +54,1 @@\n-    public void test() throws IOException {\n+    public void test() {\n@@ -66,2 +57,0 @@\n-        BufferedImage[] defaultInstallerIconImg = new BufferedImage[1];\n-\n@@ -69,1 +58,1 @@\n-        long size1 = createInstaller(null, \"WithDefaultIcon\");\n+        var size1 = createInstaller(null, \"WithDefaultIcon\");\n@@ -72,1 +61,1 @@\n-        long size2 = createInstaller(customIcon, \"WithCustomIcon\");\n+        var size2 = createInstaller(customIcon, \"WithCustomIcon\");\n@@ -75,1 +64,1 @@\n-        long size3 = createInstaller(customIcon, null);\n+        var size3 = createInstaller(customIcon, null);\n@@ -77,2 +66,8 @@\n-        TKit.assertTrue(size2 < size1, \"Installer 2 built with custom icon \" +\n-                \"should  be smaller than Installer 1 built with default icon\");\n+        if (Stream.of(size1, size2, size3).allMatch(Optional::<Long>isEmpty)) {\n+            TKit.trace(\n+                    \"Not verifying sizes of installers because they were not created\");\n+            return;\n+        }\n+\n+        TKit.assertTrue(size2.get() < size1.get(), \"Check installer 2 built with custom icon \" +\n+                \"is smaller than Installer 1 built with default icon\");\n@@ -80,2 +75,2 @@\n-        TKit.assertTrue(size3 < size1, \"Installer 3 built with custom icon \" +\n-                \"should be smaller than Installer 1 built with default icon\");\n+        TKit.assertTrue(size3.get() < size1.get(), \"Check installer 3 built with custom icon \" +\n+                \"is smaller than Installer 1 built with default icon\");\n@@ -85,1 +80,1 @@\n-    private long createInstaller(Path icon, String nameSuffix) throws IOException {\n+    private Optional<Long> createInstaller(Path icon, String nameSuffix) {\n@@ -99,0 +94,3 @@\n+                \/\/ Create installer bundle in the test work directory, ignore\n+                \/\/ value of jpackage.test.output system property.\n+                cmd.setDefaultInputOutput();\n@@ -102,1 +100,1 @@\n-        Path installerExePath[] = new Path[1];\n+        Long installerExeByteCount[] = new Long[1];\n@@ -105,1 +103,4 @@\n-            installerExePath[0] = cmd.outputBundle();\n+            Path installerExePath = cmd.outputBundle();\n+            installerExeByteCount[0] = installerExePath.toFile().length();\n+            TKit.trace(String.format(\"Size of [%s] is %d bytes\",\n+                    installerExePath, installerExeByteCount[0]));\n@@ -110,9 +111,1 @@\n-        long size = 0L;\n-        if (installerExePath[0] != null) {\n-            size = installerExePath[0].toFile().length();\n-            TKit.trace(\" installer: \" + installerExePath[0] + \" - size: \" + size);\n-            if (nameSuffix != null) {\n-                TKit.deleteIfExists(installerExePath[0]);\n-            }\n-        }\n-        return size;\n+        return Optional.ofNullable(installerExeByteCount[0]);\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinInstallerIconTest.java","additions":27,"deletions":34,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,5 @@\n-        return result.getOutput().stream()\n-                .filter(s -> s.trim().startsWith(\"light.exe\"));\n+        return result.getOutput().stream().filter(s -> {\n+            s = s.trim();\n+            return s.startsWith(\"light.exe\") || ((s.contains(\"\\\\light.exe \")\n+                    && s.contains(\" -out \")));\n+        });\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinL10nTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-            sb.append(\"ShortcutPrompt\");\n+            sb.append(\"P\");\n@@ -128,1 +128,1 @@\n-            sb.append(\"StartMenu\");\n+            sb.append(\"M\");\n@@ -131,1 +131,1 @@\n-            sb.append(\"Desktop\");\n+            sb.append(\"D\");\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinShortcutPromptTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-        PackageTest test1 = init.get().setPackageUninstaller(cmd -> {});\n+        PackageTest test1 = init.get().disablePackageUninstaller();\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinUpgradeUUIDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+        map.put(\"vm.hasDTrace\", this::vmHasDTrace);\n@@ -369,0 +370,7 @@\n+    }\n+\n+    \/**\n+     * @return \"true\" if the VM is compiled with DTrace\n+     *\/\n+    protected String vmHasDTrace() {\n+        return \"\" + WB.isDTraceIncluded();\n","filename":"test\/jtreg-ext\/requires\/VMProps.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -142,3 +142,0 @@\n-        \/\/ snippet-related\n-        removeAll(styleSheetNames, \"bold\", \"highlighted\", \"italic\");\n-\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/checkStylesheetClasses\/CheckStylesheetClasses.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8272984\n+ * @summary  javadoc support for SOURCE_DATE_EPOCH\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestDateOption\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.Date;\n+import java.util.Locale;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestDateOption extends JavadocTester {\n+\n+    \/**\n+     * The entry point of the test.\n+     *\n+     * @param args the array of command line arguments\n+     * @throws Exception if the test fails\n+     *\/\n+    public static void main(String... args) throws Exception {\n+        TestDateOption tester = new TestDateOption();\n+        tester.runTests(m -> new Object[] { Path.of(m.getName()) });\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void testDateOption(Path base) throws Exception {\n+\n+        ZonedDateTime zdt = ZonedDateTime.now(); \/\/ uses current date, time, timezone etc\n+        \/\/ adjust the calendar to some date before the default used by javadoc (i.e. today\/now)\n+        \/\/ set a specific time, such as 10 to 3. (Rupert Brooke, Grantchester)\n+        ZonedDateTime testDate = zdt.minusDays(100)\n+                        .withHour(14)\n+                        .withMinute(50)\n+                        .withSecond(0);\n+\n+        out.println(\"Test Date: '\" + testDate + \"'\");\n+\n+        Path srcDir = base.resolve(\"src\");\n+        tb.writeJavaFiles(srcDir, \"\"\"\n+                package p;\n+                \/** Comment. *\/\n+                public interface I { }\n+                \"\"\");\n+        Path outDir = base.resolve(\"out\");\n+\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"--date\", testDate.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        int featureVersion = Runtime.version().feature();\n+\n+        \/\/ The following format is as used by javadoc; it is the historical format used by Date.toString()\n+        DateTimeFormatter fmt =\n+                DateTimeFormatter.ofPattern(\"EEE MMM dd HH:mm:ss zzz yyyy\").withLocale(Locale.US);\n+        String generatedByStamp = testDate.format(fmt);\n+        String generatedBy = String.format(\"<!-- Generated by javadoc (%d) on %s -->\",\n+                featureVersion, generatedByStamp);\n+\n+        DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n+        String dcCreatedStamp = testDate.format(dateFormat);\n+        String dcCreated = String.format(\"\"\"\n+                        <meta name=\"dc.created\" content=\"%s\">\"\"\",\n+                dcCreatedStamp);\n+\n+        \/\/ check the timestamps in all generated HTML files\n+        for (Path file : tb.findFiles(\".html\", outputDir)) {\n+            checkOutput(outputDir.relativize(file).toString(), true,\n+                    generatedBy,\n+                    dcCreated);\n+        }\n+    }\n+\n+    @Test\n+    public void testBadDateOption(Path base) throws Exception {\n+        Path srcDir = base.resolve(\"src\");\n+        tb.writeJavaFiles(srcDir, \"\"\"\n+                package p;\n+                \/** Comment. *\/\n+                public interface I { }\n+                \"\"\");\n+        Path outDir = base.resolve(\"out\");\n+\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"--date\", \"NOT A DATE\",\n+                \"p\");\n+        checkExit(Exit.CMDERR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"error: value for '--date' not valid: NOT A DATE\");\n+    }\n+\n+    @Test\n+    public void testInvalidDateOption(Path base) throws Exception {\n+        Path srcDir = base.resolve(\"src\");\n+        tb.writeJavaFiles(srcDir, \"\"\"\n+                package p;\n+                \/** Comment. *\/\n+                public interface I { }\n+                \"\"\");\n+        Path outDir = base.resolve(\"out\");\n+\n+        javadoc(\"-d\", outDir.toString(),\n+                \"-sourcepath\", srcDir.toString(),\n+                \"--date\", new Date(0).toInstant().toString(),\n+                \"p\");\n+        checkExit(Exit.CMDERR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"error: value for '--date' out of range: 1970-01-01T00:00:00Z\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDateOption\/TestDateOption.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      4802275 4967243 8026567 8239804\n+ * @bug      4802275 4967243 8026567 8239804 8234682\n@@ -51,1 +51,4 @@\n-\n+        checkOutput(Output.OUT, true,\n+                \"warning: no @param for param1\",\n+                \"error: @param name not found\",\n+                \"warning: @param \\\"b\\\" has already been specified\");\n@@ -53,1 +56,1 @@\n-                \/\/Regular param tags.\n+                \/\/ Regular param tags.\n@@ -57,2 +60,5 @@\n-                    <dd><code>param2<\/code> - testing 1 2 3.\"\"\",\n-                \/\/Param tags that don't match with any real parameters.\n+                    <dd><code>param2<\/code> - testing 1 2 3.<\/dd>\n+                    <\/dl>\"\"\",\n+                \/\/ Param tags that don't match with any real parameters.\n+                \/\/ {@inheritDoc} misuse does not cause doclet to throw exception.\n+                \/\/ Param is printed with nothing inherited.\n@@ -62,6 +68,29 @@\n-                    <dd><code>p2<\/code> - testing 1 2 3.\"\"\",\n-                \/\/{@inherit} doc misuse does not cause doclet to throw exception.\n-                \/\/ Param is printed with nothing inherited.\n-                \/\/XXX: in the future when Configuration is available during doc inheritence,\n-                \/\/print a warning for this mistake.\n-                \"<code>inheritBug<\/code> -\");\n+                    <dd><code>p2<\/code> - testing 1 2 3.<\/dd>\n+                    <dd><code>inheritBug<\/code> - <\/dd>\n+                    <\/dl>\"\"\",\n+                \"\"\"\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>i<\/code> - an int<\/dd>\n+                    <dd><code>d<\/code> - a double<\/dd>\n+                    <dd><code>b<\/code> - a boolean<\/dd>\n+                    <dd><code>x<\/code> - does not exist<\/dd>\n+                    <dd><code>x<\/code> - duplicate<\/dd>\n+                    <dd><code>b<\/code> - another duplicate<\/dd>\n+                    <\/dl>\"\"\",\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><code>T2<\/code> - type 2<\/dd>\n+                    <dt>Parameters:<\/dt>\n+                    <dd><code>t1<\/code> - param 1<\/dd>\n+                    <dd><code>t3<\/code> - param 3<\/dd>\n+                    <\/dl>\"\"\");\n+        checkOutput(\"pkg\/C.Point.html\", true,\n+                \"\"\"\n+                    <dt>Record Components:<\/dt>\n+                    <dd><code><span id=\"param-y\">y<\/span><\/code> - the y coordinate<\/dd>\n+                    <\/dl>\"\"\");\n+        checkOutput(\"pkg\/C.Nested.html\", true,\n+                \"\"\"\n+                    <dt>Type Parameters:<\/dt>\n+                    <dd><code>T1<\/code> - type 1<\/dd>\n+                    <\/dl>\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/TestParamTaglet.java","additions":41,"deletions":12,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+    @Override\n@@ -41,0 +42,35 @@\n+    \/**\n+     * Overriding method with missing\/additional\/duplicate param tags in non-declaration order.\n+     *\n+     * @param x does not exist\n+     * @param b a boolean\n+     * @param i an int\n+     * @param x duplicate\n+     * @param b another duplicate\n+     *\/\n+    @Override\n+    public void unorderedParams(int i, double d, boolean b) {}\n+\n+    \/**\n+     * Generic method with mixed\/missing param tags.\n+     *\n+     * @param t1 param 1\n+     * @param <T2> type 2\n+     * @param t3 param 3\n+     *\/\n+    public static <T1, T2, T3> void genericMethod(T1 t1, T2 t2, T3 t3) {}\n+\n+    \/**\n+     * A partially documented point.\n+     *\n+     * @param y the y coordinate\n+     *\/\n+    public static record Point(int x, int y) {}\n+\n+    \/**\n+     * Generic class with missing param tags.\n+     *\n+     * @param <T1> type 1\n+     *\/\n+    public static class Nested<T1, T2> {}\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/pkg\/C.java","additions":37,"deletions":1,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,7 @@\n+\n+    \/**\n+     * Base method with partially documented params.\n+     *\n+     * @param d a double\n+     *\/\n+    public void unorderedParams(int i, double d, boolean b) {}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testParamTaglet\/pkg\/Parent.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8250768 8261976\n+ * @bug      8250768 8261976 8277300\n@@ -36,2 +36,0 @@\n-import java.text.MessageFormat;\n-import java.util.ResourceBundle;\n@@ -104,0 +102,21 @@\n+\n+    @Test\n+    public void test8277300() {\n+        javadoc(\"-d\", \"out-8277300\",\n+                \"--add-exports\", \"java.base\/jdk.internal.javac=api2\",\n+                \"--source-path\", Paths.get(testSrc, \"api2\").toAbsolutePath().toString(),\n+                \"--show-packages=all\",\n+                \"api2\/api\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"api2\/api\/API.html\", true,\n+                    \"<p><a href=\\\"#test()\\\"><code>test()<\/code><\/a><\/p>\",\n+                    \"<p><a href=\\\"#testNoPreviewInSig()\\\"><code>testNoPreviewInSig()<\/code><\/a><\/p>\",\n+                    \"title=\\\"class or interface in java.util\\\" class=\\\"external-link\\\">List<\/a>&lt;<a href=\\\"API.html\\\" title=\\\"class in api\\\">API<\/a><sup><a href=\\\"#preview-api.API\\\">PREVIEW<\/a><\/sup>&gt;\");\n+        checkOutput(\"api2\/api\/API2.html\", true,\n+                    \"<a href=\\\"API.html#test()\\\"><code>API.test()<\/code><\/a><sup><a href=\\\"API.html#preview-api.API\\\">PREVIEW<\/a><\/sup>\",\n+                    \"<a href=\\\"API.html#testNoPreviewInSig()\\\"><code>API.testNoPreviewInSig()<\/code><\/a><sup><a href=\\\"API.html#preview-api.API\\\">PREVIEW<\/a><\/sup>\",\n+                    \"<a href=\\\"API3.html#test()\\\"><code>API3.test()<\/code><\/a><sup><a href=\\\"API3.html#preview-test()\\\">PREVIEW<\/a><\/sup>\");\n+        checkOutput(\"api2\/api\/API3.html\", true,\n+                    \"<div class=\\\"block\\\"><a href=\\\"#test()\\\"><code>test()<\/code><\/a><sup><a href=\\\"#preview-test()\\\">PREVIEW<\/a><\/sup><\/div>\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/TestPreview.java","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+import java.util.List;\n+import jdk.internal.javac.PreviewFeature;\n+import jdk.internal.javac.PreviewFeature.Feature;\n+\n+\/**\n+ * <p>{@link API#test()}<\/p>\n+ * <p>{@link API#testNoPreviewInSig()}<\/p>\n+ *\/\n+@PreviewFeature(feature=Feature.TEST, reflective=false)\n+public class API {\n+\n+    public API test() {\n+        return null;\n+    }\n+\n+    public void testNoPreviewInSig() {\n+    }\n+\n+    public void typeArgs(List<API> api) {\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+\/**\n+ * <p>{@link API#test()}\n+ * <p>{@link API#testNoPreviewInSig()}\n+ * <p>{@link API3#test()}\n+ *\/\n+public class API2 {\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API2.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package api;\n+\n+import jdk.internal.javac.PreviewFeature;\n+import jdk.internal.javac.PreviewFeature.Feature;\n+\n+\/**\n+ * {@link API3#test()}\n+ *\/\n+public class API3 {\n+\n+    @PreviewFeature(feature=Feature.TEST, reflective=false)\n+    public void test() {\n+        return null;\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/api\/API3.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+module api2 {\n+    exports api;\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testPreview\/api2\/module-info.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,2 @@\n-                \"-Xdoclint:\");\n+                \"-Xdoclint:\",\n+                \"--date \");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testXOption\/TestXOption.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,2 @@\n+    static class SourceDirNotFound extends Error { }\n+\n@@ -58,1 +60,5 @@\n-        new CheckManPageOptions().run(args);\n+        try {\n+            new CheckManPageOptions().run(args);\n+        } catch (SourceDirNotFound e) {\n+            System.err.println(\"NOTE: Cannot find src directory; test skipped\");\n+        }\n@@ -63,1 +69,1 @@\n-    List<String> MISSING_IN_MAN_PAGE = List.of();\n+    List<String> MISSING_IN_MAN_PAGE = List.of(\"--date\");\n@@ -146,1 +152,1 @@\n-        throw new IllegalStateException(\"cannot find root dir\");\n+        throw new SourceDirNotFound();\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckManPageOptions.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,255 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8280688\n+ * @summary doclint reference checks withstand warning suppression\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.javadoc\/jdk.javadoc.internal.api\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build toolbox.JavacTask toolbox.JavadocTask toolbox.TestRunner toolbox.ToolBox\n+ * @run main DocLintReferencesTest\n+ *\/\n+\n+import toolbox.JavacTask;\n+import toolbox.JavadocTask;\n+import toolbox.Task;\n+import toolbox.TestRunner;\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+\/**\n+ * Combo test for how javac and javadoc handle {@code @see MODULE\/TYPE}\n+ * for different combinations of MODULE and TYPE, with and without\n+ * {@code @SuppressWarnings(\"doclint\") }.\n+ *\n+ * Generally, in javac, references to unknown elements are reported\n+ * as suppressible warnings if the module is not resolved in the module graph.\n+ * Otherwise, in both javac and javadoc, any issues with references\n+ * are reported as errors.\n+ *\n+ * This allows references to other modules to appear in documentation comments\n+ * without causing a hard error if the modules are not available at compile-time.\n+ *\/\n+public class DocLintReferencesTest extends TestRunner {\n+\n+    public static void main(String... args) throws Exception {\n+        DocLintReferencesTest t = new DocLintReferencesTest();\n+        t.runTests();\n+    }\n+\n+    DocLintReferencesTest() {\n+        super(System.err);\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    enum SuppressKind { NO, YES }\n+    enum ModuleKind { NONE, BAD, NOT_FOUND, GOOD }\n+    enum TypeKind { NONE, BAD, NOT_FOUND, GOOD }\n+\n+    @Test\n+    public void comboTest () {\n+        for (SuppressKind sk : SuppressKind.values() ) {\n+            for (ModuleKind mk : ModuleKind.values() ) {\n+                for (TypeKind tk: TypeKind.values() ) {\n+                    if (mk == ModuleKind.NONE && tk == TypeKind.NONE) {\n+                        continue;\n+                    }\n+\n+                    try {\n+                        test(sk, mk, tk);\n+                    } catch (Throwable e) {\n+                        error(\"Exception \" + e);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    void test(SuppressKind sk, ModuleKind mk, TypeKind tk) throws Exception {\n+        out.println();\n+        out.println(\"*** Test SuppressKind:\" + sk + \" ModuleKind: \" + mk + \" TypeKind: \" + tk);\n+        Path base = Path.of(sk + \"-\" + mk + \"-\" + tk);\n+\n+        String sw = switch (sk) {\n+            case NO -> \"\";\n+            case YES -> \"@SuppressWarnings(\\\"doclint\\\")\";\n+        };\n+        String m = switch (mk) {\n+            case NONE -> \"\";\n+            case BAD -> \"bad-name\/\";\n+            case NOT_FOUND -> \"not.found\/\";\n+            case GOOD -> \"java.base\/\";\n+        };\n+        String t = switch (tk) {\n+            case NONE -> \"\";\n+            case BAD -> \"bad-name\";\n+            case NOT_FOUND -> \"java.lang.NotFound\";\n+            case GOOD -> \"java.lang.Object\";\n+        };\n+\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/**\n+                 * Comment.\n+                 * @see #M##T#\n+                 *\/\n+                 #SW#\n+                public class C {\n+                   private C() { }\n+                }\n+                \"\"\"\n+                .replace(\"#M#\", m)\n+                .replace(\"#T#\", t)\n+                .replace(\"#SW#\", sw));\n+\n+        testJavac(sk, mk, tk, base, src);\n+        testJavadoc(sk, mk, tk, base, src);\n+    }\n+\n+    void testJavac(SuppressKind sk, ModuleKind mk, TypeKind tk, Path base, Path src) throws Exception {\n+        Files.createDirectories(base.resolve(\"classes\"));\n+\n+        out.println(\"javac:\");\n+        try {\n+            String s = predictOutput(sk, mk, tk, false);\n+            Task.Expect e = s.isEmpty() ? Task.Expect.SUCCESS : Task.Expect.FAIL;\n+\n+            String o = new JavacTask(tb)\n+                    .outdir(base.resolve(\"classes\"))\n+                    .options(\"-Xdoclint:all\/protected\", \"-Werror\")\n+                    .files(tb.findJavaFiles(src))\n+                    .run(e)\n+                    .writeAll()\n+                    .getOutput(Task.OutputKind.DIRECT);\n+\n+            checkOutput(s, o);\n+\n+        } catch (Throwable t) {\n+            error(\"Error: \" + t);\n+        }\n+        out.println();\n+    }\n+\n+    void testJavadoc(SuppressKind sk, ModuleKind mk, TypeKind tk, Path base, Path src) throws Exception {\n+        Files.createDirectories(base.resolve(\"api\"));\n+\n+        out.println(\"javadoc:\");\n+        try {\n+            String s = predictOutput(sk, mk, tk, true);\n+            Task.Expect e = s.isEmpty() ? Task.Expect.SUCCESS : Task.Expect.FAIL;\n+\n+            String o = new JavadocTask(tb)\n+                    .outdir(base.resolve(\"api\"))\n+                    .options(\"-Xdoclint\", \"-Werror\", \"-quiet\", \"-sourcepath\", src.toString(), \"p\")\n+                    .run(e)\n+                    .writeAll()\n+                    .getOutput(Task.OutputKind.DIRECT);\n+\n+            checkOutput(s, o);\n+\n+        } catch (Throwable t) {\n+            error(\"Error: \" + t);\n+        }\n+        out.println();\n+    }\n+\n+    private static final String ERROR_UNEXPECTED_TEXT = \"error: unexpected text\";\n+    private static final String ERROR_REFERENCE_NOT_FOUND = \"error: reference not found\";\n+    private static final String WARNING_MODULE_FOR_REFERENCE_NOT_FOUND = \"warning: module for reference not found: not.found\";\n+    private static final String EMPTY = \"\";\n+\n+    \/**\n+     * Returns the expected diagnostic, if any, based on the parameters of the test case.\n+     *\n+     * The \"interesting\" cases are those for which the module name is not found,\n+     * in which case an error for \"reference not found\" is reduced to warning,\n+     * which may be suppressed.\n+     *\n+     * @param sk whether @SuppressWarnings is present of not\n+     * @param mk the kind of module in the reference\n+     * @param tk the kind of class or interface name in the reference\n+     * @param strict whether all \"not found\" references are errors,\n+     *               or just warnings if the module name is not found\n+     * @return a diagnostic string, or an empty string if no diagnostic should be generated\n+     *\/\n+    String predictOutput(SuppressKind sk, ModuleKind mk, TypeKind tk, boolean strict) {\n+        return switch (mk) {\n+            case NONE -> switch(tk) {\n+                case NONE -> throw new Error(\"should not happen\"); \/\/ filtered out in combo loops\n+                case BAD -> ERROR_UNEXPECTED_TEXT;\n+                case NOT_FOUND -> ERROR_REFERENCE_NOT_FOUND;\n+                case GOOD -> EMPTY;\n+            };\n+\n+            case BAD -> ERROR_UNEXPECTED_TEXT;\n+\n+            case NOT_FOUND -> switch(tk) {\n+                case BAD -> ERROR_UNEXPECTED_TEXT;\n+                case NONE, NOT_FOUND, GOOD -> strict\n+                        ? ERROR_REFERENCE_NOT_FOUND\n+                        : sk == SuppressKind.YES\n+                            ? EMPTY\n+                            : WARNING_MODULE_FOR_REFERENCE_NOT_FOUND;\n+            };\n+\n+            case GOOD -> switch(tk) {\n+                case BAD -> ERROR_UNEXPECTED_TEXT;\n+                case NOT_FOUND -> ERROR_REFERENCE_NOT_FOUND;\n+                case GOOD, NONE -> EMPTY;\n+            };\n+        };\n+    }\n+\n+    \/**\n+     * Checks the actual output against the expected string, generated by {@code predictError}.\n+     * If the expected string is empty, the output should be empty.\n+     * If the expected string is not empty, it should be present in the output.\n+     *\n+     * @param expect the expected string\n+     * @param found  the output\n+     *\/\n+    void checkOutput(String expect, String found) {\n+        if (expect.isEmpty()) {\n+            if (found.isEmpty()) {\n+                out.println(\"Output OK\");\n+            } else {\n+                error(\"unexpected output\");\n+            }\n+        } else {\n+            if (found.contains(expect)) {\n+                out.println(\"Output OK\");\n+            } else {\n+                error(\"expected output not found: \" + expect);\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/doclint\/DocLintReferencesTest.java","additions":255,"deletions":0,"binary":false,"changes":255,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8036019\n+ * @summary Insufficient alternatives listed in some errors produced by the parser\n+ * @compile\/fail\/ref=T8036019.out -XDrawDiagnostics T8036019.java\n+ *\/\n+\n+\n+public class T8036019 {\n+    enum E {\n+        E(String value) {  }\n+    }\n+\n+    interface A {}\n+    interface B {}\n+    public class Foo<T> {\n+        Foo<? extends A|B> foo1 = null;\n+    }\n+\n+    @SuppressWarnings({,0})\n+    public class AV {\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8036019.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+T8036019.java:34:17: compiler.err.expected2: ')', ','\n+T8036019.java:34:23: compiler.err.expected3: ',', '}', ';'\n+T8036019.java:34:25: compiler.err.enum.constant.expected\n+T8036019.java:40:24: compiler.err.expected2: >, ','\n+T8036019.java:40:26: compiler.err.expected: token.identifier\n+T8036019.java:40:32: compiler.err.expected: token.identifier\n+T8036019.java:43:25: compiler.err.annotation.missing.element.value\n+T8036019.java:43:27: compiler.err.expected4: class, interface, enum, record\n+T8036019.java:46:1: compiler.err.expected4: class, interface, enum, record\n+9 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/T8036019.out","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-T6967002.java:10:22: compiler.err.expected: ')'\n+T6967002.java:10:22: compiler.err.expected2: ')', ','\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/6967002\/T6967002.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8146167\n+ * @bug 8146167 8281674\n@@ -55,1 +55,1 @@\n-              \"[@AnonymousExtendsTest$TA(1)],[@AnonymousExtendsTest$TA(2)]\");\n+              \"[@AnonymousExtendsTest.TA(1)],[@AnonymousExtendsTest.TA(2)]\");\n@@ -58,1 +58,1 @@\n-              \"[@AnonymousExtendsTest$TA(3)],[@AnonymousExtendsTest$TA(4)]\");\n+              \"[@AnonymousExtendsTest.TA(3)],[@AnonymousExtendsTest.TA(4)]\");\n","filename":"test\/langtools\/tools\/javac\/annotations\/typeAnnotations\/classfile\/AnonymousExtendsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,185 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8280067\n+ * @summary Verify constant\/immediate char values are correctly enhanced to ints when used in unary\n+ *          operators\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.code\n+ *          jdk.compiler\/com.sun.tools.javac.comp\n+ *          jdk.compiler\/com.sun.tools.javac.jvm\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.tree\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ *          jdk.jdeps\/com.sun.tools.classfile\n+ *          jdk.jdeps\/com.sun.tools.javap\n+ * @build toolbox.JarTask toolbox.JavacTask toolbox.JavapTask toolbox.ToolBox\n+ * @compile CharImmediateValue.java\n+ * @run main CharImmediateValue\n+ *\/\n+\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Objects;\n+\n+import com.sun.source.util.JavacTask;\n+import com.sun.source.util.Plugin;\n+import com.sun.source.util.TaskEvent;\n+import com.sun.source.util.TaskListener;\n+\n+import com.sun.tools.classfile.Attribute;\n+import com.sun.tools.classfile.ClassFile;\n+import com.sun.tools.classfile.Code_attribute;\n+import com.sun.tools.classfile.Instruction;\n+import com.sun.tools.classfile.Opcode;\n+\n+import com.sun.tools.javac.tree.JCTree.JCCompilationUnit;\n+import com.sun.tools.javac.tree.JCTree.JCIdent;\n+import com.sun.tools.javac.tree.TreeScanner;\n+\n+import toolbox.JarTask;\n+import toolbox.ToolBox;\n+\n+\n+public class CharImmediateValue implements Plugin {\n+    public static void main(String... args) throws Exception {\n+        new CharImmediateValue().runSourceTest();\n+        new CharImmediateValue().runReplacementTest();\n+    }\n+\n+    void runSourceTest() throws Exception {\n+        int param = 0;\n+        Character var = (char) -(false ? (char) param : (char) 2);\n+    }\n+\n+    void runReplacementTest() throws Exception {\n+        ToolBox tb = new ToolBox();\n+        Path pluginClasses = Path.of(\"plugin-classes\");\n+        tb.writeFile(pluginClasses.resolve(\"META-INF\").resolve(\"services\").resolve(Plugin.class.getName()),\n+                CharImmediateValue.class.getName() + System.lineSeparator());\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(Path.of(ToolBox.testClasses))) {\n+            for (Path p : ds) {\n+                if (p.getFileName().toString().startsWith(\"CharImmediateValue\") ||\n+                    p.getFileName().toString().endsWith(\".class\")) {\n+                    Files.copy(p, pluginClasses.resolve(p.getFileName()));\n+                }\n+            }\n+        }\n+\n+        Path pluginJar = Path.of(\"plugin.jar\");\n+        new JarTask(tb, pluginJar)\n+                .baseDir(pluginClasses)\n+                .files(\".\")\n+                .run();\n+\n+        Path src = Path.of(\"src\");\n+            tb.writeJavaFiles(src,\n+                    \"\"\"\n+                    public class Test{\n+                        private static char replace; \/\/this will be replace with a constant \"1\" after constant folding is done\n+                        public static String run() {\n+                            char c = (char) - replace;\n+                            if (c < 0) {\n+                                throw new AssertionError(\"Incorrect value!\");\n+                            } else {\n+                                return Integer.toString(c);\n+                            }\n+                        }\n+                    }\n+                    \"\"\");\n+        Path classes = Files.createDirectories(Path.of(\"classes\"));\n+\n+        new toolbox.JavacTask(tb)\n+                .classpath(pluginJar)\n+                .options(\"-XDaccessInternalAPI\")\n+                .outdir(classes)\n+                .files(tb.findJavaFiles(src))\n+                .run()\n+                .writeAll();\n+\n+        URLClassLoader cl = new URLClassLoader(new URL[] {classes.toUri().toURL()});\n+\n+        String actual = (String) cl.loadClass(\"Test\")\n+                                   .getMethod(\"run\")\n+                                   .invoke(null);\n+        String expected = \"65535\";\n+        if (!Objects.equals(actual, expected)) {\n+            throw new AssertionError(\"expected: \" + expected + \"; but got: \" + actual);\n+        }\n+\n+        Path testClass = classes.resolve(\"Test.class\");\n+        ClassFile cf = ClassFile.read(testClass);\n+        Code_attribute codeAttr =\n+                (Code_attribute) cf.methods[1].attributes.get(Attribute.Code);\n+        boolean seenCast = false;\n+        for (Instruction i : codeAttr.getInstructions()) {\n+            if (i.getOpcode() == Opcode.I2C) {\n+                seenCast = true;\n+            }\n+        }\n+        if (!seenCast) {\n+            throw new AssertionError(\"Missing cast!\");\n+        }\n+    }\n+\n+    \/\/ Plugin impl...\n+\n+    @Override\n+    public String getName() { return \"CharImmediateValue\"; }\n+\n+    @Override\n+    public void init(JavacTask task, String... args) {\n+        task.addTaskListener(new TaskListener() {\n+            @Override\n+            public void started(TaskEvent e) {\n+                if (e.getKind() == TaskEvent.Kind.GENERATE) {\n+                    convert((JCCompilationUnit) e.getCompilationUnit());\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public boolean autoStart() {\n+        return true;\n+    }\n+\n+    private void convert(JCCompilationUnit toplevel) {\n+        new TreeScanner() {\n+            @Override\n+            public void visitIdent(JCIdent tree) {\n+                if (tree.name.contentEquals(\"replace\")) {\n+                    tree.type = tree.type.constType(1);\n+                }\n+                super.visitIdent(tree);\n+            }\n+        }.scan(toplevel);\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/code\/CharImmediateValue.java","additions":185,"deletions":0,"binary":false,"changes":185,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+\/*\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.annotation.missing.element.value\n+\n+@SuppressWarnings({,0})\n+public class AV {\n+}\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/AnnotationMissingElementValue.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -1,1 +1,1 @@\n-EnumMembersOrder.java:11:16: compiler.err.expected: ')'\n+EnumMembersOrder.java:11:16: compiler.err.expected2: ')', ','\n","filename":"test\/langtools\/tools\/javac\/enum\/EnumMembersOrder.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        testInfoOpt(\"-fullversion\", \"javac\", specVersion, \"+\");\n+        testInfoOpt(\"-fullversion\", \"javac\", specVersion);\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/InfoOptsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-T7157165.java:11:20: compiler.err.expected: >\n+T7157165.java:11:20: compiler.err.expected2: >, ','\n","filename":"test\/langtools\/tools\/javac\/parser\/7157165\/T7157165.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-SingleCommaAnnotationValueFail.java:11:12: compiler.err.expected: '}'\n+SingleCommaAnnotationValueFail.java:11:12: compiler.err.annotation.missing.element.value\n","filename":"test\/langtools\/tools\/javac\/parser\/SingleCommaAnnotationValueFail.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8256266\n+ * @bug 8256266 8281238\n@@ -117,1 +117,1 @@\n-                            expectedType = \"@Annotations.DTA java.lang.String\";\n+                            expectedType = \"java.lang.@Annotations.DTA String\";\n@@ -121,1 +121,1 @@\n-                            expectedType = \"@Annotations.TA java.lang.String\";\n+                            expectedType = \"java.lang.@Annotations.TA String\";\n@@ -136,1 +136,1 @@\n-                                                  \" for: \" + var.getName());\n+                                                  \" for: \" + var.getName() + \" expected \" + expectedType);\n","filename":"test\/langtools\/tools\/javac\/patterns\/Annotations.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8262891 8268871 8274363\n+ * @bug 8262891 8268871 8274363 8281100\n@@ -794,0 +794,76 @@\n+    @Test\n+    public void testDefiniteAssignment(Path base) throws Exception {\n+        doTest(base,\n+               new String[]{\"\"\"\n+                            package lib;\n+                            public sealed interface S permits A, B {}\n+                            \"\"\",\n+                            \"\"\"\n+                            package lib;\n+                            public final class A implements S {}\n+                            \"\"\",\n+                            \"\"\"\n+                            package lib;\n+                            public final class B implements S {}\n+                            \"\"\"},\n+               \"\"\"\n+               package test;\n+               import lib.*;\n+               public class Test {\n+                   private void testStatement(S obj) {\n+                       int data;\n+                       switch (obj) {\n+                           case A a -> data = 0;\n+                           case B b -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+                   private void testExpression(S obj) {\n+                       int data;\n+                       int v = switch (obj) {\n+                           case A a -> data = 0;\n+                           case B b -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+                   private void testStatementNotExhaustive(S obj) {\n+                       int data;\n+                       switch (obj) {\n+                           case A a -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+                   private void testExpressionNotExhaustive(S obj) {\n+                       int data;\n+                       int v = switch (obj) {\n+                           case A a -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+                   private void testStatementErrorEnum(E e) { \/\/\"E\" is intentionally unresolvable\n+                       int data;\n+                       switch (e) {\n+                           case A -> data = 0;\n+                           case B -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+                   private void testExpressionErrorEnum(E e) { \/\/\"E\" is intentionally unresolvable\n+                       int data;\n+                       int v = switch (e) {\n+                           case A -> data = 0;\n+                           case B -> data = 0;\n+                       };\n+                       System.err.println(data);\n+                   }\n+               }\n+               \"\"\",\n+               \"Test.java:34:41: compiler.err.cant.resolve.location: kindname.class, E, , , (compiler.misc.location: kindname.class, test.Test, null)\",\n+               \"Test.java:42:42: compiler.err.cant.resolve.location: kindname.class, E, , , (compiler.misc.location: kindname.class, test.Test, null)\",\n+               \"Test.java:22:9: compiler.err.not.exhaustive.statement\",\n+               \"Test.java:29:17: compiler.err.not.exhaustive\",\n+               \"- compiler.note.preview.filename: Test.java, DEFAULT\",\n+               \"- compiler.note.preview.recompile\",\n+               \"4 errors\");\n+    }\n+\n@@ -828,1 +904,2 @@\n-                             \"--class-path\", libClasses.toString())\n+                             \"--class-path\", libClasses.toString(),\n+                             \"-XDshould-stop.at=FLOW\")\n","filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java","additions":79,"deletions":2,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8068737\n+ * @bug 8068737 8281238\n@@ -69,1 +69,1 @@\n-                \/\/ Expected: \"@Foo(0)java.lang.String@Foo(3)[]@Foo(2)[]@Foo(1)[]\"\n+                \/\/ Expected: \"java.lang.@Foo(0)String@Foo(1)[]@Foo(2)[]@Foo(3)[]\"\n","filename":"test\/langtools\/tools\/javac\/tree\/ArrayTypeToString.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-- compiler.note.proc.messager: @Foo(0)java.lang.String@Foo(1)[]@Foo(2)[]@Foo(3)[]\n+- compiler.note.proc.messager: java.lang.@Foo(0)String@Foo(1)[]@Foo(2)[]@Foo(3)[]\n","filename":"test\/langtools\/tools\/javac\/tree\/ArrayTypeToString.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,209 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8280866\n+ * @summary Verify SuppressWarnings works on package clauses and modules.\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ * @modules jdk.compiler\/com.sun.tools.javac.main\n+ * @build toolbox.JavacTask toolbox.TestRunner toolbox.ToolBox\n+ * @run main SuppressWarningsPackage\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import toolbox.JavacTask;\n+import toolbox.Task.Expect;\n+import toolbox.Task.OutputKind;\n+import toolbox.TestRunner;\n+import toolbox.ToolBox;\n+\n+public class SuppressWarningsPackage extends TestRunner {\n+    public static void main(String... args) throws Exception {\n+        SuppressWarningsPackage t = new SuppressWarningsPackage();\n+        t.runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    private final ToolBox tb = new ToolBox();\n+\n+    public SuppressWarningsPackage() throws IOException {\n+        super(System.err);\n+    }\n+\n+    @Test\n+    public void testSuppressWarningsOnPackageInfo(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        Path classes = Files.createDirectories(base.resolve(\"classes\"));\n+        TestCase[] testCases = new TestCase[] {\n+            new TestCase(\"\",\n+                         \"package-info.java:1:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"package-info.java:1:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"Use.java:2:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"Use.java:2:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"4 warnings\"),\n+            new TestCase(\"@SuppressWarnings(\\\"deprecation\\\")\",\n+                         \"Use.java:2:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"Use.java:2:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"2 warnings\")\n+        };\n+        for (TestCase tc : testCases) {\n+            tb.writeJavaFiles(src,\n+                              \"\"\"\n+                              @DeprecatedAnn(DeprecatedClass.class)\n+                              #\n+                              package test;\n+                              \"\"\".replace(\"#\", tc.sw),\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public @interface DeprecatedAnn {\n+                                  public Class<?> value();\n+                              }\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public class DeprecatedClass {\n+                                  public static class Nested {}\n+                              }\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @DeprecatedAnn(DeprecatedClass.class)\n+                              public class Use {}\n+                              \"\"\");\n+\n+            List<String> log = new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .options(\"-XDrawDiagnostics\",\n+                             \"-Xlint:deprecation\")\n+                    .run(Expect.SUCCESS)\n+                    .writeAll()\n+                    .getOutputLines(OutputKind.DIRECT);\n+\n+            if (!Objects.equals(log, List.of(tc.expectedOutput))) {\n+                error(\"Unexpected output, expected:\\n\" + Arrays.toString(tc.expectedOutput) +\n+                                         \"\\nactual:\\n\" + log);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testSuppressWarningsOnModuleInfo(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        Path classes = Files.createDirectories(base.resolve(\"classes\"));\n+        TestCase[] testCases = new TestCase[] {\n+            new TestCase(\"\",\n+                         \"module-info.java:3:12: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"module-info.java:4:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"module-info.java:4:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"module-info.java:7:14: compiler.warn.has.been.deprecated: test.Service, test\",\n+                         \"module-info.java:8:18: compiler.warn.has.been.deprecated: test.Service, test\",\n+                         \"module-info.java:8:36: compiler.warn.has.been.deprecated: test.ServiceImpl, test\",\n+                         \"package-info.java:1:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"package-info.java:1:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"Use.java:2:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"Use.java:2:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"10 warnings\"),\n+            new TestCase(\"@SuppressWarnings(\\\"deprecation\\\")\",\n+                         \"module-info.java:3:12: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"package-info.java:1:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"package-info.java:1:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"Use.java:2:2: compiler.warn.has.been.deprecated: test.DeprecatedAnn, test\",\n+                         \"Use.java:2:16: compiler.warn.has.been.deprecated: test.DeprecatedClass, test\",\n+                         \"5 warnings\")\n+        };\n+        for (TestCase tc : testCases) {\n+            tb.writeJavaFiles(src,\n+                              \"\"\"\n+                              import test.DeprecatedAnn;\n+                              import test.DeprecatedClass;\n+                              import test.DeprecatedClass.Nested;\n+                              @DeprecatedAnn(DeprecatedClass.class)\n+                              #\n+                              module m {\n+                                  uses test.Service;\n+                                  provides test.Service with test.ServiceImpl;\n+                              }\n+                              \"\"\".replace(\"#\", tc.sw),\n+                              \"\"\"\n+                              @DeprecatedAnn(DeprecatedClass.class)\n+                              package test;\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public @interface DeprecatedAnn {\n+                                  public Class<?> value();\n+                              }\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public class DeprecatedClass {\n+                                  public static class Nested {}\n+                              }\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public interface Service {}\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @Deprecated\n+                              public class ServiceImpl implements Service {}\n+                              \"\"\",\n+                              \"\"\"\n+                              package test;\n+                              @DeprecatedAnn(DeprecatedClass.class)\n+                              public class Use {}\n+                              \"\"\");\n+\n+            List<String> log = new JavacTask(tb)\n+                    .outdir(classes)\n+                    .files(tb.findJavaFiles(src))\n+                    .options(\"-XDrawDiagnostics\",\n+                             \"-Xlint:deprecation\")\n+                    .run(Expect.SUCCESS)\n+                    .writeAll()\n+                    .getOutputLines(OutputKind.DIRECT);\n+\n+            if (!Objects.equals(log, List.of(tc.expectedOutput))) {\n+                error(\"Unexpected output, expected:\\n\" + Arrays.toString(tc.expectedOutput) +\n+                                         \"\\nactual:\\n\" + log);\n+            }\n+        }\n+    }\n+\n+    record TestCase(String sw, String... expectedOutput) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/warnings\/suppress\/SuppressWarningsPackage.java","additions":209,"deletions":0,"binary":false,"changes":209,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8168386 8205116\n+ * @bug 8168386 8205116 8281634\n@@ -51,1 +51,1 @@\n-                new String[] { \"-jdkinternal\", \"-summary\", TEST_CLASSES },\n+                new String[] { \"-jdkinternals\", \"-summary\", TEST_CLASSES },\n@@ -55,1 +55,1 @@\n-                new String[] { \"-jdkinternal\", \"-p\", \"java.lang\", TEST_CLASSES },\n+                new String[] { \"-jdkinternals\", \"-p\", \"java.lang\", TEST_CLASSES },\n@@ -72,1 +72,1 @@\n-                \"-R cannot be used with --inverse option\"\n+                \"--recursive and --no-recursive cannot be used with --inverse option\"\n@@ -80,1 +80,1 @@\n-                \"--list-deps and --list-reduced-deps options are specified\"\n+                \"-summary or -verbose cannot be used with --list-deps option\"\n@@ -86,0 +86,4 @@\n+            {\n+                new String[] { \"--package\", \"sun.misc\", \"--require\", \"java.net.http\" },\n+                \"Only one of --package (-p), --regex (-e), --require option can be specified\"\n+            }\n@@ -91,1 +95,1 @@\n-        jdepsError(options).outputContains(expected);\n+        assertTrue(jdepsError(options).outputContains(expected));\n@@ -112,1 +116,1 @@\n-        jdeps.outputContains(\"invalid path: bad\");\n+        assertTrue(jdeps.outputContains(\"invalid path: bad\"));\n","filename":"test\/langtools\/tools\/jdeps\/Options.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-                \"isSignedOSX\");\n+                \"isHardenedOSX\");\n","filename":"test\/lib-test\/jdk\/test\/lib\/TestMutuallyExclusivePlatformPredicates.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.io.PrintWriter;\n","filename":"test\/lib\/RedefineClassHelper.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.io.BufferedReader;\n-import java.io.FileReader;\n@@ -33,3 +31,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n","filename":"test\/lib\/jdk\/test\/lib\/OSVersion.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.io.BufferedReader;\n@@ -28,0 +29,1 @@\n+import java.io.InputStreamReader;\n@@ -245,1 +247,1 @@\n-     * Return true if the test JDK is signed, otherwise false. Only valid on OSX.\n+     * Return true if the test JDK is hardened, otherwise false. Only valid on OSX.\n@@ -247,2 +249,2 @@\n-    public static boolean isSignedOSX() throws IOException {\n-        \/\/ We only care about signed binaries for 10.14 and later (actually 10.14.5, but\n+    public static boolean isHardenedOSX() throws IOException {\n+        \/\/ We only care about hardened binaries for 10.14 and later (actually 10.14.5, but\n@@ -251,1 +253,1 @@\n-            return false; \/\/ assume not signed\n+            return false; \/\/ assume not hardened\n@@ -263,3 +265,2 @@\n-        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"-d\", \"-v\", javaFileName);\n-        pb.redirectError(ProcessBuilder.Redirect.DISCARD);\n-        pb.redirectOutput(ProcessBuilder.Redirect.DISCARD);\n+        ProcessBuilder pb = new ProcessBuilder(\"codesign\", \"--display\", \"--verbose\", javaFileName);\n+        pb.redirectErrorStream(true); \/\/ redirect stderr to stdout\n@@ -267,0 +268,25 @@\n+        BufferedReader is = new BufferedReader(new InputStreamReader(codesignProcess.getInputStream()));\n+        String line;\n+        boolean isHardened = false;\n+        boolean hardenedStatusConfirmed = false; \/\/ set true when we confirm whether or not hardened\n+        while ((line = is.readLine()) != null) {\n+            System.out.println(\"STDOUT: \" + line);\n+            if (line.indexOf(\"flags=0x10000(runtime)\") != -1 ) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = true;\n+                System.out.println(\"Target JDK is hardened. Some tests may be skipped.\");\n+            } else if (line.indexOf(\"flags=0x20002(adhoc,linker-signed)\") != -1 ) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = false;\n+                System.out.println(\"Target JDK is adhoc signed, but not hardened.\");\n+            } else if (line.indexOf(\"code object is not signed at all\") != -1) {\n+                hardenedStatusConfirmed = true;\n+                isHardened = false;\n+                System.out.println(\"Target JDK is not signed, therefore not hardened.\");\n+            }\n+        }\n+        if (!hardenedStatusConfirmed) {\n+            System.out.println(\"Could not confirm if TargetJDK is hardened. Assuming not hardened.\");\n+            isHardened = false;\n+        }\n+\n@@ -269,1 +295,1 @@\n-                System.err.println(\"Timed out waiting for the codesign process to complete. Assuming not signed.\");\n+                System.err.println(\"Timed out waiting for the codesign process to complete. Assuming not hardened.\");\n@@ -271,1 +297,1 @@\n-                return false; \/\/ assume not signed\n+                return false; \/\/ assume not hardened\n@@ -277,18 +303,1 @@\n-        \/\/ Check codesign result to see if java binary is signed. Here are the\n-        \/\/ exit code meanings:\n-        \/\/    0: signed\n-        \/\/    1: not signed\n-        \/\/    2: invalid arguments\n-        \/\/    3: only has meaning with the -R argument.\n-        \/\/ So we should always get 0 or 1 as an exit value.\n-        if (codesignProcess.exitValue() == 0) {\n-            System.out.println(\"Target JDK is signed. Some tests may be skipped.\");\n-            return true; \/\/ signed\n-        } else if (codesignProcess.exitValue() == 1) {\n-            System.out.println(\"Target JDK is not signed.\");\n-            return false; \/\/ not signed\n-        } else {\n-            System.err.println(\"Executing codesign failed. Assuming unsigned: \" +\n-                               codesignProcess.exitValue());\n-            return false; \/\/ not signed\n-        }\n+        return isHardened;\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":37,"deletions":28,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-                if (Platform.isSignedOSX()) {\n-                    throw new SkippedException(\"SA Attach not expected to work. JDK is signed.\");\n+                if (Platform.isHardenedOSX()) {\n+                    throw new SkippedException(\"SA Attach not expected to work. JDK is hardened.\");\n@@ -162,0 +162,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/lib\/jdk\/test\/lib\/SA\/SATestUtils.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-import java.util.Objects;\n","filename":"test\/lib\/jdk\/test\/lib\/Utils.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-import java.util.Map;\n","filename":"test\/lib\/jdk\/test\/lib\/apps\/LingeredApp.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.io.FileNotFoundException;\n","filename":"test\/lib\/jdk\/test\/lib\/artifacts\/ArtifactManager.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-import java.io.FileInputStream;\n-import java.io.IOException;\n","filename":"test\/lib\/jdk\/test\/lib\/classloader\/ClassUnloadCommon.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,0 @@\n-import jdk.test.lib.containers.docker.DockerRunOptions;\n-import jdk.test.lib.containers.docker.DockerTestUtils;\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/Common.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.io.File;\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerTestUtils.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Optional;\n","filename":"test\/lib\/jdk\/test\/lib\/format\/ArrayCodec.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import java.util.ArrayList;\n-import java.util.List;\n","filename":"test\/lib\/jdk\/test\/lib\/format\/ArrayDiff.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.FileNotFoundException;\n@@ -32,1 +31,0 @@\n-import java.io.ByteArrayInputStream;\n","filename":"test\/lib\/jdk\/test\/lib\/helpers\/ClassFileInstaller.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,0 @@\n-import static java.io.ObjectStreamConstants.TC_BLOCKDATA;\n-import static java.io.ObjectStreamConstants.TC_BLOCKDATALONG;\n-import static java.io.ObjectStreamConstants.TC_ENDBLOCKDATA;\n","filename":"test\/lib\/jdk\/test\/lib\/hexdump\/ObjectStreamPrinter.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,0 @@\n-import jdk.test.lib.hprof.parser.ReadBuffer;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaObjectArray.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,0 @@\n-import java.util.Enumeration;\n-import java.util.Hashtable;\n-\n-\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaThing.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import jdk.test.lib.hprof.parser.ReadBuffer;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/JavaValueArray.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.io.Reader;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/ReachableExcludesImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.util.Vector;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/model\/ReachableObjects.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.*;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/util\/ArraySorter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.*;\n","filename":"test\/lib\/jdk\/test\/lib\/hprof\/util\/Misc.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,390 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.net;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.ProtocolException;\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+public class HttpHeaderParser {\n+    private static final char CR = '\\r';\n+    private static final char LF = '\\n';\n+    private static final char HT = '\\t';\n+    private static final char SP = ' ';\n+    \/\/ ABNF primitives defined in RFC 7230\n+    private static boolean[] tchar      = new boolean[256];\n+    private static boolean[] fieldvchar = new boolean[256];\n+\n+    static {\n+        char[] allowedTokenChars =\n+                (\"!#$%&'*+-.^_`|~0123456789\" +\n+                        \"abcdefghijklmnopqrstuvwxyz\" +\n+                        \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\").toCharArray();\n+        for (char c : allowedTokenChars) {\n+            tchar[c] = true;\n+        }\n+        for (char c = 0x21; c <= 0xFF; c++) {\n+            fieldvchar[c] = true;\n+        }\n+        fieldvchar[0x7F] = false; \/\/ a little hole (DEL) in the range\n+    }\n+\n+    private StringBuilder sb = new StringBuilder();\n+\n+    private Map <String, List<String>>  headerMap = new LinkedHashMap<>();\n+    private List <String> keyList = new ArrayList<>();\n+    private String requestOrStatusLine;\n+    private int responseCode;\n+    private boolean eof;\n+\n+\n+\n+    enum State { INITIAL,\n+        STATUS_OR_REQUEST_LINE,\n+        STATUS_OR_REQUEST_LINE_FOUND_CR,\n+        STATUS_OR_REQUEST_LINE_FOUND_LF,\n+        STATUS_OR_REQUEST_LINE_END,\n+        STATUS_OR_REQUEST_LINE_END_CR,\n+        STATUS_OR_REQUEST_LINE_END_LF,\n+        HEADER,\n+        HEADER_FOUND_CR,\n+        HEADER_FOUND_LF,\n+        HEADER_FOUND_CR_LF,\n+        HEADER_FOUND_CR_LF_CR,\n+        FINISHED }\n+\n+    private HttpHeaderParser.State state = HttpHeaderParser.State.INITIAL;\n+\n+    public HttpHeaderParser() {\n+    }\n+\n+\n+    public HttpHeaderParser(InputStream is) throws IOException, ProtocolException {\n+        parse(is);\n+    }\n+\n+    public Map<String, List<String>> getHeaderMap() {\n+        return headerMap;\n+    }\n+\n+    public List<String> getHeaderValue(String key) {\n+        if(headerMap.containsKey(key.toLowerCase(Locale.ROOT))) {\n+            return headerMap.get(key.toLowerCase(Locale.ROOT));\n+        }\n+        return null;\n+    }\n+    public List<String> getValue(int id) {\n+        String key = keyList.get(id);\n+        return headerMap.get(key);\n+    }\n+\n+    public String getRequestDetails() {\n+        return requestOrStatusLine;\n+    }\n+\n+    \/**\n+     * Parses HTTP\/1.X status-line or request-line and headers from the given input stream.\n+     * @param input Containing the input stream of bytes representing request or response header data\n+     * @return true if the end of the headers block has been reached\n+     *\/\n+    public boolean parse(InputStream input) throws IOException {\n+        requireNonNull(input, \"null input\");\n+        while (canContinueParsing()) {\n+            switch (state) {\n+                case INITIAL                                    ->  state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE;\n+                case STATUS_OR_REQUEST_LINE ->  readResumeStatusLine(input);\n+                case STATUS_OR_REQUEST_LINE_FOUND_CR, STATUS_OR_REQUEST_LINE_FOUND_LF ->  readStatusLineFeed(input);\n+                case STATUS_OR_REQUEST_LINE_END ->  maybeStartHeaders(input);\n+                case STATUS_OR_REQUEST_LINE_END_CR, STATUS_OR_REQUEST_LINE_END_LF ->  maybeEndHeaders(input);\n+                case HEADER                                     ->  readResumeHeader(input);\n+                case HEADER_FOUND_CR, HEADER_FOUND_LF           ->  resumeOrLF(input);\n+                case HEADER_FOUND_CR_LF                         ->  resumeOrSecondCR(input);\n+                case HEADER_FOUND_CR_LF_CR                      ->  resumeOrEndHeaders(input);\n+                default -> throw new InternalError(\"Unexpected state: \" + state);\n+            }\n+        }\n+        return state == HttpHeaderParser.State.FINISHED;\n+    }\n+\n+    private boolean canContinueParsing() {\n+        \/\/ some states don't require any input to transition\n+        \/\/ to the next state.\n+        return switch (state) {\n+            case FINISHED -> false;\n+            case STATUS_OR_REQUEST_LINE_FOUND_LF, STATUS_OR_REQUEST_LINE_END_LF, HEADER_FOUND_LF -> true;\n+            default -> !eof;\n+        };\n+    }\n+\n+    \/**\n+     * Returns a character (char) corresponding to the next byte in the\n+     * input, interpreted as an ISO-8859-1 encoded character.\n+     * <p>\n+     * The ISO-8859-1 encoding is a 8-bit character coding that\n+     * corresponds to the first 256 Unicode characters - from U+0000 to\n+     * U+00FF. UTF-16 is backward compatible with ISO-8859-1 - which\n+     * means each byte in the input should be interpreted as an unsigned\n+     * value from [0, 255] representing the character code.\n+     *\n+     * @param input a {@code InputStream} containing input stream of Bytes.\n+     * @return the next byte in the input, interpreted as an ISO-8859-1\n+     * encoded char\n+     * @throws IOException\n+     *          if an I\/O error occurs.\n+     *\/\n+    private char get(InputStream input) throws IOException {\n+        int c = input.read();\n+        if(c < 0)\n+            eof = true;\n+        return (char)(c & 0xFF);\n+    }\n+\n+    private void readResumeStatusLine(InputStream input) throws IOException {\n+        char c;\n+        while ((c = get(input)) != CR && !eof) {\n+            if (c == LF) break;\n+            sb.append(c);\n+        }\n+        if (c == CR) {\n+            state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_FOUND_CR;\n+        } else if (c == LF) {\n+            state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_FOUND_LF;\n+        }\n+    }\n+\n+    private void readStatusLineFeed(InputStream input) throws IOException {\n+        char c = state == HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_FOUND_LF ? LF : get(input);\n+        if (c != LF) {\n+            throw protocolException(\"Bad trailing char, \\\"%s\\\", when parsing status line, \\\"%s\\\"\",\n+                    c, sb.toString());\n+        }\n+        requestOrStatusLine = sb.toString();\n+        sb = new StringBuilder();\n+        if (!requestOrStatusLine.startsWith(\"HTTP\/1.\")) {\n+            if(!requestOrStatusLine.startsWith(\"GET\") && !requestOrStatusLine.startsWith(\"POST\") &&\n+                    !requestOrStatusLine.startsWith(\"PUT\") && !requestOrStatusLine.startsWith(\"DELETE\") &&\n+                    !requestOrStatusLine.startsWith(\"OPTIONS\") && !requestOrStatusLine.startsWith(\"HEAD\") &&\n+            !requestOrStatusLine.startsWith(\"PATCH\") && !requestOrStatusLine.startsWith(\"CONNECT\")) {\n+                throw protocolException(\"Invalid request Or Status line: \\\"%s\\\"\", requestOrStatusLine);\n+            } else { \/\/This is request\n+                System.out.println(\"Request is :\"+requestOrStatusLine);\n+            }\n+        } else { \/\/This is response\n+            if (requestOrStatusLine.length() < 12) {\n+                throw protocolException(\"Invalid status line: \\\"%s\\\"\", requestOrStatusLine);\n+            }\n+            try {\n+                responseCode = Integer.parseInt(requestOrStatusLine.substring(9, 12));\n+            } catch (NumberFormatException nfe) {\n+                throw protocolException(\"Invalid status line: \\\"%s\\\"\", requestOrStatusLine);\n+            }\n+            \/\/ response code expected to be a 3-digit integer (RFC-2616, section 6.1.1)\n+            if (responseCode < 100) {\n+                throw protocolException(\"Invalid status line: \\\"%s\\\"\", requestOrStatusLine);\n+            }\n+        }\n+        state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END;\n+    }\n+\n+    private void maybeStartHeaders(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END;\n+        assert sb.length() == 0;\n+        char c = get(input);\n+        if(!eof) {\n+            if (c == CR) {\n+                state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END_CR;\n+            } else if (c == LF) {\n+                state = HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END_LF;\n+            } else {\n+                sb.append(c);\n+                state = HttpHeaderParser.State.HEADER;\n+            }\n+        }\n+    }\n+\n+    private void maybeEndHeaders(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END_CR || state == HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END_LF;\n+        assert sb.length() == 0;\n+        char c = state == HttpHeaderParser.State.STATUS_OR_REQUEST_LINE_END_LF ? LF : get(input);\n+        if (c == LF) {\n+            state = HttpHeaderParser.State.FINISHED;  \/\/ no headers\n+        } else {\n+            throw protocolException(\"Unexpected \\\"%s\\\", after status line CR\", c);\n+        }\n+    }\n+\n+    private void readResumeHeader(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.HEADER;\n+        assert !eof;\n+        char c = get(input);\n+        while (!eof) {\n+            if (c == CR) {\n+                state = HttpHeaderParser.State.HEADER_FOUND_CR;\n+                break;\n+            } else if (c == LF) {\n+                state = HttpHeaderParser.State.HEADER_FOUND_LF;\n+                break;\n+            }\n+            if (c == HT)\n+                c = SP;\n+            sb.append(c);\n+            c = get(input);\n+        }\n+    }\n+\n+    private void addHeaderFromString(String headerString) throws ProtocolException {\n+        assert sb.length() == 0;\n+        int idx = headerString.indexOf(':');\n+        if (idx == -1)\n+            return;\n+        String name = headerString.substring(0, idx);\n+\n+        \/\/ compatibility with HttpURLConnection;\n+        if (name.isEmpty()) return;\n+\n+        if (!isValidName(name)) {\n+            throw protocolException(\"Invalid header name \\\"%s\\\"\", name);\n+        }\n+        String value = headerString.substring(idx + 1).trim();\n+        if (!isValidValue(value)) {\n+            throw protocolException(\"Invalid header value \\\"%s: %s\\\"\", name, value);\n+        }\n+\n+        keyList.add(name);\n+        headerMap.computeIfAbsent(name.toLowerCase(Locale.US),\n+                k -> new ArrayList<>()).add(value);\n+    }\n+\n+    private void resumeOrLF(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.HEADER_FOUND_CR || state == HttpHeaderParser.State.HEADER_FOUND_LF;\n+        char c = state == HttpHeaderParser.State.HEADER_FOUND_LF ? LF : get(input);\n+        if (!eof) {\n+            if (c == LF) {\n+                state = HttpHeaderParser.State.HEADER_FOUND_CR_LF;\n+            } else if (c == SP || c == HT) {\n+                sb.append(SP); \/\/ parity with MessageHeaders\n+                state = HttpHeaderParser.State.HEADER;\n+            } else {\n+                sb = new StringBuilder();\n+                sb.append(c);\n+                state = HttpHeaderParser.State.HEADER;\n+            }\n+        }\n+    }\n+\n+    private void resumeOrSecondCR(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.HEADER_FOUND_CR_LF;\n+        char c = get(input);\n+        if (!eof) {\n+            if (c == CR || c == LF) {\n+                if (sb.length() > 0) {\n+                    \/\/ no continuation line - flush\n+                    \/\/ previous header value.\n+                    String headerString = sb.toString();\n+                    sb = new StringBuilder();\n+                    addHeaderFromString(headerString);\n+                }\n+                if (c == CR) {\n+                    state = HttpHeaderParser.State.HEADER_FOUND_CR_LF_CR;\n+                } else {\n+                    state = HttpHeaderParser.State.FINISHED;\n+                }\n+            } else if (c == SP || c == HT) {\n+                assert sb.length() != 0;\n+                sb.append(SP); \/\/ continuation line\n+                state = HttpHeaderParser.State.HEADER;\n+            } else {\n+                if (sb.length() > 0) {\n+                    \/\/ no continuation line - flush\n+                    \/\/ previous header value.\n+                    String headerString = sb.toString();\n+                    sb = new StringBuilder();\n+                    addHeaderFromString(headerString);\n+                }\n+                sb.append(c);\n+                state = HttpHeaderParser.State.HEADER;\n+            }\n+        }\n+    }\n+\n+    private void resumeOrEndHeaders(InputStream input) throws IOException {\n+        assert state == HttpHeaderParser.State.HEADER_FOUND_CR_LF_CR;\n+        char c = get(input);\n+        if (!eof) {\n+            if (c == LF) {\n+                state = HttpHeaderParser.State.FINISHED;\n+            } else {\n+                throw protocolException(\"Unexpected \\\"%s\\\", after CR LF CR\", c);\n+            }\n+        }\n+    }\n+\n+    private ProtocolException protocolException(String format, Object ... args) {\n+        return new ProtocolException(String.format(format, args));\n+    }\n+\n+    \/*\n+     * Validates a RFC 7230 field-name.\n+     *\/\n+    public boolean isValidName(String token) {\n+        for (int i = 0; i < token.length(); i++) {\n+            char c = token.charAt(i);\n+            if (c > 255 || !tchar[c]) {\n+                return false;\n+            }\n+        }\n+        return !token.isEmpty();\n+    }\n+\n+    \/*\n+     * Validates a RFC 7230 field-value.\n+     *\n+     * \"Obsolete line folding\" rule\n+     *\n+     *     obs-fold = CRLF 1*( SP \/ HTAB )\n+     *\n+     * is not permitted!\n+     *\/\n+    public boolean isValidValue(String token) {\n+        for (int i = 0; i < token.length(); i++) {\n+            char c = token.charAt(i);\n+            if (c > 255) {\n+                return false;\n+            }\n+            if (c == ' ' || c == '\\t') {\n+                continue;\n+            } else if (!fieldvchar[c]) {\n+                return false; \/\/ forbidden byte\n+            }\n+        }\n+        return true;\n+    }\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/net\/HttpHeaderParser.java","additions":390,"deletions":0,"binary":false,"changes":390,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,0 +74,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/lib\/jdk\/test\/lib\/net\/IPSupport.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleSSLContext.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.security.KeyStore;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/KeyStoreUtils.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.math.BigInteger;\n@@ -28,2 +27,0 @@\n-import java.time.Instant;\n-import java.util.Date;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/DefaultRespInterceptor.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,0 @@\n-import sun.security.util.SignatureUtil;\n-import sun.security.x509.AlgorithmId;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/TsaHandler.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Objects;\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/TsaServer.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,163 @@\n+\/*\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.test.lib.util;\n+\n+import jdk.test.lib.compiler.CompilerUtils;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.text.MessageFormat;\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n+\n+\/\/ ClassTransformer provides functionality to transform java source and compile it.\n+\/\/ We cannot use InMemoryJavaCompiler as test files usually contain 2 classes (the test itself and debuggee)\n+\/\/ and InMemoryJavaCompiler cannot compile them.\n+public class ClassTransformer {\n+\n+    private final List<String> lines;\n+    private String fileName;\n+    private String workDir = \"ver{0}\";\n+    private static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+\n+    private ClassTransformer(List<String> lines) {\n+        this.lines = lines;\n+    }\n+\n+    public ClassTransformer setFileName(String fileName) {\n+        this.fileName = fileName;\n+        return this;\n+    }\n+\n+    \/\/ workDir is a MessageFormat pattern, id (int) is an {0} arg of the pattern.\n+    \/\/ can be relative (relatively \"scratch\" dir) or absolute.\n+    public ClassTransformer setWorkDir(String dir) {\n+        workDir = dir;\n+        return this;\n+    }\n+\n+    public static ClassTransformer fromString(String content) {\n+        return new ClassTransformer(Arrays.asList(content.split(\"\\\\R\")));\n+    }\n+\n+    public static ClassTransformer fromFile(Path filePath) {\n+        try {\n+            return new ClassTransformer(Files.readAllLines(filePath))\n+                    .setFileName(filePath.getFileName().toString());\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"failed to read \" + filePath, e);\n+        }\n+    }\n+    public static ClassTransformer fromFile(String filePath) {\n+        return fromFile(Paths.get(filePath));\n+    }\n+\n+    public static ClassTransformer fromTestSource(String fileName) {\n+        return fromFile(Paths.get(System.getProperty(\"test.src\")).resolve(fileName));\n+    }\n+\n+    \/\/ returns path to the .class file of the transformed class\n+    public String transform(int id, String className, String... compilerOptions) {\n+        Path subdir = Paths.get(\".\").resolve(MessageFormat.format(workDir, id));\n+        Path transformedSrc = subdir.resolve(fileName);\n+        try {\n+            Files.createDirectories(subdir);\n+            Files.write(transformedSrc, transform(id).getBytes());\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"failed to write transformed \" + transformedSrc, e);\n+        }\n+        try {\n+            \/\/ need to add extra classpath args\n+            List<String> args = new LinkedList<>(Arrays.asList(compilerOptions));\n+            args.add(\"-cp\");\n+            args.add(System.getProperty(\"java.class.path\"));\n+            CompilerUtils.compile(subdir, subdir, false, args.toArray(new String[args.size()]));\n+        } catch (IOException e) {\n+            throw new RuntimeException(\"failed to compile \" + transformedSrc, e);\n+        }\n+        return subdir.resolve(className + \".class\").toString();\n+    }\n+\n+    \/*\n+    * To do RedefineClasses operations, embed @1 tags in the .java\n+    * file to tell this script how to modify it to produce the 2nd\n+    * version of the .class file to be used in the redefine operation.\n+    * Here are examples of each editing tag and what change\n+    * it causes in the new file.  Note that blanks are not preserved\n+    * in these editing operations.\n+    *\n+    * @1 uncomment\n+    *  orig:   \/\/ @1 uncomment   gus = 89;\n+    *  new:         gus = 89;\n+    *\n+    * @1 commentout\n+    *  orig:   gus = 89      \/\/ @1 commentout\n+    *  new: \/\/ gus = 89      \/\/ @1 commentout\n+    *\n+    * @1 delete\n+    *  orig:  gus = 89      \/\/ @1 delete\n+    *  new:   entire line deleted\n+    *\n+    * @1 newline\n+    *  orig:  gus = 89;     \/\/ @1 newline gus++;\n+    *  new:   gus = 89;     \/\/\n+    *         gus++;\n+    *\n+    * @1 replace\n+    *  orig:  gus = 89;     \/\/ @1 replace gus = 90;\n+    *  new:   gus = 90;\n+    *\/\n+    public String transform(int id) {\n+        Pattern delete = Pattern.compile(\"@\" + id + \" *delete\");\n+        Pattern uncomment = Pattern.compile(\"\/\/ *@\" + id + \" *uncomment (.*)\");\n+        Pattern commentout = Pattern.compile(\".* @\" + id + \" *commentout\");\n+        Pattern newline = Pattern.compile(\"(.*) @\" + id + \" *newline (.*)\");\n+        Pattern replace = Pattern.compile(\"@\" + id + \" *replace (.*)\");\n+        return lines.stream()\n+                .filter(s -> !delete.matcher(s).find())     \/\/ @1 delete\n+                .map(s -> {\n+                    Matcher m = uncomment.matcher(s);       \/\/ @1 uncomment\n+                    return m.find() ? m.group(1) : s;\n+                })\n+                .map(s-> {\n+                    Matcher m = commentout.matcher(s);      \/\/ @1 commentout\n+                    return m.find() ? \"\/\/\" + s : s;\n+                })\n+                .map(s -> {\n+                    Matcher m = newline.matcher(s);         \/\/ @1 newline\n+                    return m.find() ? m.group(1) + LINE_SEPARATOR + m.group(2) : s;\n+                })\n+                .map(s -> {\n+                    Matcher m = replace.matcher(s);         \/\/ @1 replace\n+                    return m.find() ? m.group(1) : s;\n+                })\n+                .collect(Collectors.joining(LINE_SEPARATOR));\n+    }\n+\n+}\n","filename":"test\/lib\/jdk\/test\/lib\/util\/ClassTransformer.java","additions":163,"deletions":0,"binary":false,"changes":163,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,1 +141,1 @@\n-            if (Platform.isSignedOSX()) {\n+            if (Platform.isHardenedOSX()) {\n@@ -145,2 +145,2 @@\n-                    \/\/ We can't generate cores files with signed binaries on OSX 10.15 and later.\n-                    throw new SkippedException(\"Cannot produce core file with signed binary on OSX 10.15 and later\");\n+                    \/\/ We can't generate cores files with hardened binaries on OSX 10.15 and later.\n+                    throw new SkippedException(\"Cannot produce core file with hardened binary on OSX 10.15 and later\");\n","filename":"test\/lib\/jdk\/test\/lib\/util\/CoreUtils.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.util.Arrays;\n@@ -37,1 +36,0 @@\n-import jdk.test.lib.util.JarUtils;\n","filename":"test\/lib\/jdk\/test\/lib\/util\/JavaAgentBuilder.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -637,0 +637,1 @@\n+  public native boolean isDTraceIncluded();\n","filename":"test\/lib\/jdk\/test\/whitebox\/WhiteBox.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -638,0 +638,1 @@\n+  public native boolean isDTraceIncluded();\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,148 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, BELLSOFT. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.arm.benchmarks.intrinsics;\n-\n-import java.util.concurrent.TimeUnit;\n-\n-import org.openjdk.jmh.annotations.Benchmark;\n-import org.openjdk.jmh.annotations.BenchmarkMode;\n-import org.openjdk.jmh.annotations.CompilerControl;\n-import org.openjdk.jmh.annotations.Fork;\n-import org.openjdk.jmh.annotations.Level;\n-import org.openjdk.jmh.annotations.Measurement;\n-import org.openjdk.jmh.annotations.Mode;\n-import org.openjdk.jmh.annotations.OutputTimeUnit;\n-import org.openjdk.jmh.annotations.Param;\n-import org.openjdk.jmh.annotations.Scope;\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.State;\n-import org.openjdk.jmh.annotations.Warmup;\n-\n-import org.openjdk.jmh.infra.Blackhole;\n-\n-\/**\n- * This benchmark modified from test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringCompareToDifferentLength.java\n- * This benchmark can be used to measure performance of compareTo() in\n- * (Latin1, Latin1), (Latin1, UTF16), (UTF16, Latin1), and (UTF16, UTF16)\n- * comparisons.\n- *\/\n-\n-@BenchmarkMode(Mode.AverageTime)\n-@OutputTimeUnit(TimeUnit.MILLISECONDS)\n-@State(Scope.Benchmark)\n-@Measurement(iterations = 3, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n-@Warmup(iterations = 3, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n-@CompilerControl(CompilerControl.Mode.DONT_INLINE)\n-public class StringCompareToDifferentLength {\n-\n-    @State(Scope.Benchmark)\n-    public static class Input {\n-        @Param({\"24\", \"36\", \"72\", \"128\", \"256\", \"512\"})\n-        public int size;\n-\n-        @Param({\"2\"})\n-        public int delta;\n-\n-        int count = 100000;\n-        String longLatin1;\n-        String shortLatin1;\n-        String longUTF16FirstChar;\n-        String shortUTF16FirstChar;\n-        String longUTF16LastChar;\n-        String shortUTF16LastChar;\n-\n-        \/**\n-         * Initialize. New array objects and set initial values.\n-         *\/\n-        @Setup(Level.Trial)\n-        public void setup() throws Exception {\n-            char[] strsrc = new char[size + delta];\n-            \/\/ generate ASCII string\n-            for (int i = 0; i < size + delta; i++) {\n-                strsrc[i] = (char) ('a' + (i % 26));\n-            }\n-\n-            longLatin1 = new String(strsrc);\n-            shortLatin1 = longLatin1.substring(0, size);\n-            longUTF16LastChar = longLatin1.substring(0, longLatin1.length() - 1) + '\\ubeef';\n-            longUTF16FirstChar = '\\ubeef' + longLatin1.substring(1, longLatin1.length());\n-            shortUTF16LastChar = shortLatin1.substring(0, shortLatin1.length() - 1) + '\\ubeef';\n-            shortUTF16FirstChar = longUTF16FirstChar.substring(0, size);\n-        }\n-    }\n-\n-    private int runCompareTo(String str2, String str1) {\n-        return str1.compareTo(str2);\n-    }\n-\n-    \/**\n-     * latin1-latin1\n-     *\/\n-    @Benchmark\n-    public void compareToLL(Input in, Blackhole blackhole) {\n-        int res = 0;\n-        for (int i = 0; i < in.count; ++i) {\n-            res += runCompareTo(in.longLatin1, in.shortLatin1);\n-        }\n-        blackhole.consume(res);\n-    }\n-\n-    \/**\n-     * UTF16-UTF16\n-     *\/\n-    @Benchmark\n-    public void compareToUU(Input in, Blackhole blackhole) {\n-        int res = 0;\n-        for (int i = 0; i < in.count; ++i) {\n-            res += runCompareTo(in.longUTF16FirstChar, in.shortUTF16FirstChar);\n-        }\n-        blackhole.consume(res);\n-    }\n-\n-    \/**\n-     * latin1-UTF16\n-     *\/\n-    @Benchmark\n-    public void compareToLU(Input in, Blackhole blackhole) {\n-        int res = 0;\n-        for (int i = 0; i < in.count; ++i) {\n-            res += runCompareTo(in.longUTF16LastChar, in.shortLatin1);\n-        }\n-        blackhole.consume(res);\n-    }\n-\n-    \/**\n-     * UTF16-latin1\n-     *\/\n-    @Benchmark\n-    public void compareToUL(Input in, Blackhole blackhole) {\n-        int res = 0;\n-        for (int i = 0; i < in.count; ++i) {\n-            res += runCompareTo(in.longLatin1, in.shortUTF16LastChar);\n-        }\n-        blackhole.consume(res);\n-    }\n-}\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringCompareToDifferentLength.java","additions":0,"deletions":148,"binary":false,"changes":148,"status":"deleted"},{"patch":"@@ -0,0 +1,322 @@\n+package org.openjdk.bench.java.math;\n+\n+import javax.management.MBeanServer;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.ThreadMXBean;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.math.BigInteger;\n+import java.util.Arrays;\n+import java.util.IdentityHashMap;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.LongSummaryStatistics;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.ForkJoinWorkerThread;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.function.BinaryOperator;\n+import java.util.function.LongUnaryOperator;\n+import java.util.stream.Collectors;\n+\n+import static java.util.concurrent.ForkJoinPool.defaultForkJoinWorkerThreadFactory;\n+\n+\/**\n+ * Benchmark for checking performance difference between sequential and parallel\n+ * multiply of very large Mersenne primes using BigInteger. We want to measure\n+ * real time, user time, system time and the amount of memory allocated. To\n+ * calculate this, we create our own thread factory for the common ForkJoinPool\n+ * and then use that to measure user time, cpu time and bytes allocated.\n+ * <p>\n+ * We use reflection to discover all methods that match \"*ultiply\", and use them\n+ * to multiply two very large Mersenne primes together.\n+ * <p>\n+ * <h3>Results on a 1-6-2 machine running Ubuntu linux<\/h3>\n+ * <p>\n+ * Memory allocation increased from 83.9GB to 84GB, for both the sequential and\n+ * parallel versions. This is an increase of just 0.1%. On this machine, the\n+ * parallel version was 3.8x faster in latency (real time), but it used 2.7x\n+ * more CPU resources.\n+ * <p>\n+ * Testing multiplying Mersenne primes of 2^57885161-1 and 2^82589933-1\n+ * <p>\n+ * <pre>\n+ * openjdk version \"18-internal\" 2022-03-15\n+ * BigInteger.parallelMultiply()\n+ * real  0m6.288s\n+ * user  1m3.010s\n+ * sys   0m0.027s\n+ * mem   84.0GB\n+ * BigInteger.multiply()\n+ * real  0m23.682s\n+ * user  0m23.530s\n+ * sys   0m0.004s\n+ * mem   84.0GB\n+ *\n+ * openjdk version \"1.8.0_302\"\n+ * BigInteger.multiply()\n+ * real  0m25.657s\n+ * user  0m25.390s\n+ * sys   0m0.001s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"9.0.7.1\"\n+ * BigInteger.multiply()\n+ * real  0m24.907s\n+ * user  0m24.700s\n+ * sys   0m0.001s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"10.0.2\" 2018-07-17\n+ * BigInteger.multiply()\n+ * real  0m24.632s\n+ * user  0m24.380s\n+ * sys   0m0.004s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"11.0.12\" 2021-07-20 LTS\n+ * BigInteger.multiply()\n+ * real  0m22.114s\n+ * user  0m21.930s\n+ * sys   0m0.001s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"12.0.2\" 2019-07-16\n+ * BigInteger.multiply()\n+ * real  0m23.015s\n+ * user  0m22.830s\n+ * sys   0m0.000s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"13.0.9\" 2021-10-19\n+ * BigInteger.multiply()\n+ * real  0m23.548s\n+ * user  0m23.350s\n+ * sys   0m0.005s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"14.0.2\" 2020-07-14\n+ * BigInteger.multiply()\n+ * real  0m22.918s\n+ * user  0m22.530s\n+ * sys   0m0.131s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"15.0.5\" 2021-10-19\n+ * BigInteger.multiply()\n+ * real  0m22.038s\n+ * user  0m21.750s\n+ * sys   0m0.003s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"16.0.2\" 2021-07-20\n+ * BigInteger.multiply()\n+ * real  0m23.049s\n+ * user  0m22.760s\n+ * sys   0m0.006s\n+ * mem   83.9GB\n+ *\n+ * openjdk version \"17\" 2021-09-14\n+ * BigInteger.multiply()\n+ * real  0m22.580s\n+ * user  0m22.310s\n+ * sys   0m0.001s\n+ * mem   83.9GB\n+ *<\/pre>\n+ *\n+ * @author Heinz Kabutz, heinz@javaspecialists.eu\n+ *\/\n+public class BigIntegerMersennePrimeMultiply implements ForkJoinPool.ForkJoinWorkerThreadFactory {\n+    \/\/ Large Mersenne prime discovered by Curtis Cooper in 2013\n+    private static final int EXPONENT_1 = 57885161;\n+    private static final BigInteger MERSENNE_1 =\n+            BigInteger.ONE.shiftLeft(EXPONENT_1).subtract(BigInteger.ONE);\n+    \/\/ Largest Mersenne prime number discovered by Patrick Laroche in 2018\n+    private static final int EXPONENT_2 = 82589933;\n+    private static final BigInteger MERSENNE_2 =\n+            BigInteger.ONE.shiftLeft(EXPONENT_2).subtract(BigInteger.ONE);\n+    private static boolean DEBUG = false;\n+\n+    public static void main(String... args) {\n+        System.setProperty(\"java.util.concurrent.ForkJoinPool.common.threadFactory\",\n+                BigIntegerMersennePrimeMultiply.class.getName());\n+        System.out.println(\"Testing multiplying Mersenne primes of \" +\n+                \"2^\" + EXPONENT_1 + \"-1 and 2^\" + EXPONENT_2 + \"-1\");\n+        addCounters(Thread.currentThread());\n+        System.out.println(\"Using the following multiply methods:\");\n+        List<Method> methods = Arrays.stream(BigInteger.class.getMethods())\n+                .filter(method -> method.getName().endsWith(\"ultiply\") &&\n+                        method.getParameterCount() == 1 &&\n+                        method.getParameterTypes()[0] == BigInteger.class)\n+                .peek(method -> System.out.println(\"    \" + method))\n+                .collect(Collectors.toList());\n+\n+        for (int i = 0; i < 3; i++) {\n+            System.out.println();\n+            methods.forEach(BigIntegerMersennePrimeMultiply::test);\n+        }\n+    }\n+\n+    private static void test(Method method) {\n+        BinaryOperator<BigInteger> multiplyOperator = (a, b) -> {\n+            try {\n+                return (BigInteger) method.invoke(a, b);\n+            } catch (IllegalAccessException e) {\n+                throw new AssertionError(e);\n+            } catch (InvocationTargetException e) {\n+                throw new AssertionError(e.getCause());\n+            }\n+        };\n+        test(method.getName(), multiplyOperator);\n+    }\n+\n+    private static void test(String description,\n+                             BinaryOperator<BigInteger> multiplyOperator) {\n+        System.out.println(\"BigInteger.\" + description + \"()\");\n+        resetAllCounters();\n+        long elapsedTimeInNanos = System.nanoTime();\n+        try {\n+            BigInteger result1 = multiplyOperator.apply(MERSENNE_1, MERSENNE_2);\n+            BigInteger result2 = multiplyOperator.apply(MERSENNE_2, MERSENNE_1);\n+            if (result1.bitLength() != 140475094)\n+                throw new AssertionError(\"Expected bitLength: 140475094, \" +\n+                        \"but was \" + result1.bitLength());\n+            if (result2.bitLength() != 140475094)\n+                throw new AssertionError(\"Expected bitLength: 140475094, \" +\n+                        \"but was \" + result1.bitLength());\n+        } finally {\n+            elapsedTimeInNanos = System.nanoTime() - elapsedTimeInNanos;\n+        }\n+\n+        LongSummaryStatistics userTimeStatistics = getStatistics(userTime);\n+        LongSummaryStatistics cpuTimeStatistics = getStatistics(cpuTime);\n+        LongSummaryStatistics memoryAllocationStatistics = getStatistics(bytes);\n+        System.out.println(\"real  \" + formatTime(elapsedTimeInNanos));\n+        System.out.println(\"user  \" + formatTime(userTimeStatistics.getSum()));\n+        System.out.println(\"sys   \" +\n+                formatTime(cpuTimeStatistics.getSum() - userTimeStatistics.getSum()));\n+        System.out.println(\"mem   \" + formatMemory(memoryAllocationStatistics.getSum(), 1));\n+    }\n+\n+    private static LongSummaryStatistics getStatistics(Map<Thread, AtomicLong> timeMap) {\n+        return timeMap.entrySet()\n+                .stream()\n+                .peek(entry -> {\n+                    long timeInMs = (counterExtractorMap.get(timeMap)\n+                            .applyAsLong(entry.getKey().getId())\n+                            - entry.getValue().get());\n+                    entry.getValue().set(timeInMs);\n+                })\n+                .peek(BigIntegerMersennePrimeMultiply::printTime)\n+                .map(Map.Entry::getValue)\n+                .mapToLong(AtomicLong::get)\n+                .summaryStatistics();\n+    }\n+\n+    private static void printTime(Map.Entry<Thread, AtomicLong> threadCounter) {\n+        if (DEBUG)\n+            System.out.printf(\"%s %d%n\", threadCounter.getKey(), threadCounter.getValue()\n+                    .get());\n+    }\n+\n+    private static void addCounters(Thread thread) {\n+        counterExtractorMap.forEach((map, timeExtractor) -> add(map, thread, timeExtractor));\n+    }\n+\n+    private static void add(Map<Thread, AtomicLong> time, Thread thread,\n+                            LongUnaryOperator timeExtractor) {\n+        time.put(thread, new AtomicLong(timeExtractor.applyAsLong(thread.getId())));\n+    }\n+\n+    private static void resetAllCounters() {\n+        counterExtractorMap.forEach(BigIntegerMersennePrimeMultiply::resetTimes);\n+    }\n+\n+    private static void resetTimes(Map<Thread, AtomicLong> timeMap, LongUnaryOperator timeMethod) {\n+        timeMap.forEach((thread, time) ->\n+                time.set(timeMethod.applyAsLong(thread.getId())));\n+    }\n+\n+    private static final Map<Thread, AtomicLong> userTime =\n+            new ConcurrentHashMap<>();\n+    private static final Map<Thread, AtomicLong> cpuTime =\n+            new ConcurrentHashMap<>();\n+    private static final Map<Thread, AtomicLong> bytes =\n+            new ConcurrentHashMap<>();\n+    private static final ThreadMXBean tmb = ManagementFactory.getThreadMXBean();\n+\n+    private static final Map<Map<Thread, AtomicLong>, LongUnaryOperator> counterExtractorMap =\n+            new IdentityHashMap<>();\n+\n+    static {\n+        counterExtractorMap.put(userTime, tmb::getThreadUserTime);\n+        counterExtractorMap.put(cpuTime, tmb::getThreadCpuTime);\n+        counterExtractorMap.put(bytes, BigIntegerMersennePrimeMultiply::threadAllocatedBytes);\n+    }\n+\n+    public final ForkJoinWorkerThread newThread(ForkJoinPool pool) {\n+        ForkJoinWorkerThread thread = defaultForkJoinWorkerThreadFactory.newThread(pool);\n+        addCounters(thread);\n+        return thread;\n+    }\n+\n+    private static final String[] SIGNATURE = new String[]{long.class.getName()};\n+    private static final MBeanServer mBeanServer;\n+    private static final ObjectName name;\n+\n+    static {\n+        try {\n+            name = new ObjectName(ManagementFactory.THREAD_MXBEAN_NAME);\n+            mBeanServer = ManagementFactory.getPlatformMBeanServer();\n+        } catch (MalformedObjectNameException e) {\n+            throw new ExceptionInInitializerError(e);\n+        }\n+    }\n+\n+    public static long threadAllocatedBytes(long threadId) {\n+        try {\n+            return (long) mBeanServer.invoke(\n+                    name,\n+                    \"getThreadAllocatedBytes\",\n+                    new Object[]{threadId},\n+                    SIGNATURE\n+            );\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(e);\n+        }\n+    }\n+\n+    public static String formatMemory(double bytes, int decimals) {\n+        double val;\n+        String unitStr;\n+        if (bytes < 1024) {\n+            val = bytes;\n+            unitStr = \"B\";\n+        } else if (bytes < 1024 * 1024) {\n+            val = bytes \/ 1024;\n+            unitStr = \"KB\";\n+        } else if (bytes < 1024 * 1024 * 1024) {\n+            val = bytes \/ (1024 * 1024);\n+            unitStr = \"MB\";\n+        } else if (bytes < 1024 * 1024 * 1024 * 1024L) {\n+            val = bytes \/ (1024 * 1024 * 1024L);\n+            unitStr = \"GB\";\n+        } else {\n+            val = bytes \/ (1024 * 1024 * 1024 * 1024L);\n+            unitStr = \"TB\";\n+        }\n+        return String.format(Locale.US, \"%.\" + decimals + \"f%s\", val, unitStr);\n+    }\n+\n+    public static String formatTime(long nanos) {\n+        if (nanos < 0) nanos = 0;\n+        long timeInMs = TimeUnit.NANOSECONDS.toMillis(nanos);\n+        long minutes = timeInMs \/ 60_000;\n+        double remainingMs = (timeInMs % 60_000) \/ 1000.0;\n+        return String.format(Locale.US, \"%dm%.3fs\", minutes, remainingMs);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerMersennePrimeMultiply.java","additions":322,"deletions":0,"binary":false,"changes":322,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+package org.openjdk.bench.java.math;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+\n+import java.math.BigInteger;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.BinaryOperator;\n+\n+\/**\n+ * Benchmark for checking performance difference between\n+ * sequential and parallel multiply methods in BigInteger,\n+ * using a large Fibonacci calculation of up to n = 100 million.\n+ *\n+ * @author Heinz Kabutz, heinz@javaspecialists.eu\n+ *\/\n+@BenchmarkMode(Mode.SingleShotTime)\n+@OutputTimeUnit(TimeUnit.MILLISECONDS)\n+@Fork(value = 2)\n+@Warmup(iterations = 2)\n+@Measurement(iterations = 2) \/\/ only 2 iterations because each one takes very long\n+@State(Scope.Thread)\n+public class BigIntegerParallelMultiply {\n+    private static BigInteger fibonacci(int n, BinaryOperator<BigInteger> multiplyOperator) {\n+        if (n == 0) return BigInteger.ZERO;\n+        if (n == 1) return BigInteger.ONE;\n+\n+        int half = (n + 1) \/ 2;\n+        BigInteger f0 = fibonacci(half - 1, multiplyOperator);\n+        BigInteger f1 = fibonacci(half, multiplyOperator);\n+        if (n % 2 == 1) {\n+            BigInteger b0 = multiplyOperator.apply(f0, f0);\n+            BigInteger b1 = multiplyOperator.apply(f1, f1);\n+            return b0.add(b1);\n+        } else {\n+            BigInteger b0 = f0.shiftLeft(1).add(f1);\n+            return multiplyOperator.apply(b0, f1);\n+        }\n+    }\n+\n+    @Param({\"1000000\", \"10000000\", \"100000000\"})\n+    private int n;\n+\n+    @Benchmark\n+    public void multiply() {\n+        fibonacci(n, BigInteger::multiply);\n+    }\n+\n+    @Benchmark\n+    public void parallelMultiply() {\n+        fibonacci(n, BigInteger::parallelMultiply);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegerParallelMultiply.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -210,0 +210,11 @@\n+\n+    \/** Invokes the gcd method of BigInteger with different values. *\/\n+    @Benchmark\n+    @OperationsPerInvocation(TESTSIZE)\n+    public void testGcd(Blackhole bh) {\n+        for (int i = 0; i < TESTSIZE; i++) {\n+            BigInteger i1 = shiftArray[TESTSIZE - i - 1];\n+            BigInteger i2 = shiftArray[i];\n+            bh.consume(i2.gcd(i1));\n+        }\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/BigIntegers.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Mode;\n+import java.util.concurrent.TimeUnit;\n+\n+@State(Scope.Thread)\n+public class SharedLoopHeader {\n+\n+    private static final int size = 1000;\n+    private static final boolean branch[] = new boolean[size];\n+    private static final int count[] = new int[size];\n+\n+    @Setup\n+    public void setup() {\n+        for (int i = 0; i < branch.length; i++) {\n+            branch[i] = ((i % 10) != 0);\n+        }\n+    }\n+\n+    @Benchmark\n+    @BenchmarkMode(Mode.AverageTime)\n+    @OutputTimeUnit(TimeUnit.NANOSECONDS)\n+    public void sharedHeader() {\n+        int i = 0;\n+        while (i < branch.length) {\n+            if (branch[i]) {\n+                \/\/ common branch\n+                count[i]++;\n+                i++;\n+                continue;\n+            }\n+            i += 2;\n+        }\n+    }\n+\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SharedLoopHeader.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Setup;\n+import java.util.concurrent.TimeUnit;\n+import java.nio.charset.StandardCharsets;\n+\n+@State(Scope.Thread)\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+public class StringConstructorBenchmark {\n+  private byte[] array;\n+  private String str;\n+\n+  @Setup\n+  public void setup() {\n+    str = \"Quizdeltagerne spiste jordb\\u00e6r med fl\\u00f8de, mens cirkusklovnen. \\u042f\";\/\/Latin1 ending with Russian\n+    array = str.getBytes(StandardCharsets.UTF_8);\n+  }\n+\n+  @Benchmark\n+  public String newString()  {\n+      return new String(array, 0, array.length, StandardCharsets.UTF_8);\n+  }\n+\n+  @Benchmark\n+  public String translateEscapes()  {\n+      return str.translateEscapes();\n+  }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/StringConstructorBenchmark.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}