{"files":[{"patch":"@@ -1452,2 +1452,2 @@\n-static uint get_num_regions_adjust_for_plab_waste(size_t byte_count) {\n-  size_t byte_count_adjusted = byte_count * (100 + TargetPLABWastePct) \/ 100.0;\n+static size_t get_num_regions_adjust_for_plab_waste(size_t byte_count) {\n+  size_t byte_count_adjusted = byte_count * (size_t)(100 + TargetPLABWastePct) \/ 100.0;\n@@ -1475,2 +1475,2 @@\n-  uint required_regions = get_num_regions_adjust_for_plab_waste(total_young_predicted_surviving_bytes) +\n-                          get_num_regions_adjust_for_plab_waste(_predicted_surviving_bytes_from_old);\n+  uint required_regions = (uint)(get_num_regions_adjust_for_plab_waste(total_young_predicted_surviving_bytes) +\n+                                get_num_regions_adjust_for_plab_waste(_predicted_surviving_bytes_from_old));\n@@ -1479,1 +1479,1 @@\n-    log_debug(gc, ergo, cset)(\"Proactive GC, insufficient free regions. Predicted need %u. Curr Eden %u (Pred %u). Curr Survivor %u (Pred %u). Curr Old %u (Pred %u) Free %u Alloc %u\",\n+    log_debug(gc, ergo, cset)(\"Proactive GC, insufficient free regions. Predicted need %u. Curr Eden %u (Pred %lu). Curr Survivor %u (Pred %lu). Curr Old %u (Pred %lu) Free %u Alloc %u\",\n@@ -1520,1 +1520,1 @@\n-  uint iterate_count = MIN(candidates->num_remaining(), calc_min_old_cset_length());\n+  uint iterate_count = MIN2(candidates->num_remaining(), calc_min_old_cset_length());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}