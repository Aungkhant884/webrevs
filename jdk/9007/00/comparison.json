{"files":[{"patch":"@@ -616,1 +616,1 @@\n-         * an extends bounded wildcard type argument.\n+         * an upper-bounded wildcard type argument.\n@@ -622,1 +622,1 @@\n-         * a super bounded wildcard type argument.\n+         * a lower-bounded wildcard type argument.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/tree\/Tree.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * Common super type for annotated constructs such as Types and Symbols.\n+ * Common supertype for annotated constructs such as Types and Symbols.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/AnnoConstruct.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,1 +182,1 @@\n-     * Flag to indicate the super classes of this ClassSymbol has been attributed.\n+     * Flag to indicate the superclasses of this ClassSymbol has been attributed.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Flags.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1365,1 +1365,1 @@\n-            } \/\/ else super type will already have been scanned in the context of the anonymous class.\n+            } \/\/ else supertype will already have been scanned in the context of the anonymous class.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2527,1 +2527,1 @@\n-                \/\/ determine a supertype for a super bounded wildcard.\n+                \/\/ determine a supertype for a lower-bounded wildcard.\n@@ -2789,1 +2789,1 @@\n-    \/\/ <editor-fold defaultstate=\"collapsed\" desc=\"sub signature \/ override equivalence\">\n+    \/\/ <editor-fold defaultstate=\"collapsed\" desc=\"subsignature \/ override equivalence\">\n@@ -2791,2 +2791,2 @@\n-     * Returns true iff the first signature is a <em>sub\n-     * signature<\/em> of the other.  This is <b>not<\/b> an equivalence\n+     * Returns true iff the first signature is a <em>subsignature<\/em>\n+     * of the other.  This is <b>not<\/b> an equivalence\n@@ -2799,1 +2799,1 @@\n-     * @return true if t is a sub signature of s.\n+     * @return true if t is a subsignature of s.\n@@ -2820,1 +2820,1 @@\n-     * @return true if either argument is a sub signature of the other.\n+     * @return true if either argument is a subsignature of the other.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4558,1 +4558,1 @@\n-                \/\/ when determining the super type which *must* be\n+                \/\/ when determining the supertype which *must* be\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4609,1 +4609,1 @@\n-                \/\/ Non-Serializable super class\n+                \/\/ Non-Serializable superclass\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3781,1 +3781,1 @@\n-            \/\/find a direct super type that is a subtype of 'c'\n+            \/\/find a direct supertype that is a subtype of 'c'\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,2 +161,2 @@\n-            \/\/ For sjavac's purposes however, a class depends on it's super super type, so below we\n-            \/\/ make sure that we include super types.\n+            \/\/ For sjavac's purposes however, a class depends on its super-supertype, so below we\n+            \/\/ make sure that we include supertypes.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/comp\/dependencies\/NewDependencyCollector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-         * Super interface links.\n+         * Superinterface links.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlLinkInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-        \/\/ always add super package\n+        \/\/ always add superpackage\n@@ -171,1 +171,1 @@\n-        \/\/ only add sibling packages if there is a non-empty super package, we are beneath threshold,\n+        \/\/ only add sibling packages if there is a non-empty superpackage, we are beneath threshold,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-     * Add all super interfaces if this is an interface.\n+     * Add all superinterfaces if this is an interface.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/ClassWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-     * Sub kind enums that this element supports.\n+     * Subkind enums that this element supports.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/DocletElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-     * If this is an interface, list all super interfaces.\n+     * If this is an interface, list all superinterfaces.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ClassBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-     * Builds a list of \"nearby\" packages (subpackages, super and sibling packages).\n+     * Builds a list of \"nearby\" packages (subpackages, superpackages, and sibling packages).\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/PackageSummaryBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1105,1 +1105,1 @@\n-     * Given a class, return the closest visible super class.\n+     * Given a class, return the closest visible superclass.\n@@ -1107,1 +1107,1 @@\n-     * @return  the closest visible super class.  Return null if it cannot\n+     * @return  the closest visible superclass.  Return null if it cannot\n@@ -1116,1 +1116,1 @@\n-     * Given a class, return the closest visible super class.\n+     * Given a class, return the closest visible superclass.\n@@ -1119,1 +1119,1 @@\n-     * @return the closest visible super class.  Return null if it cannot\n+     * @return the closest visible superclass.  Return null if it cannot\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n- * declared in the sub type, only if the enclosing type is not being\n+ * declared in the subtype, only if the enclosing type is not being\n@@ -208,2 +208,2 @@\n-     * super types, primarily package private types. These members are\n-     * required to be documented in the subtype when the super type is\n+     * supertypes, primarily package private types. These members are\n+     * required to be documented in the subtype when the supertype is\n@@ -310,1 +310,1 @@\n-        \/\/ Add the super classes.\n+        \/\/ Add the superclasses.\n@@ -315,1 +315,1 @@\n-        \/\/ ... and finally the sorted super interfaces.\n+        \/\/ ... and finally the sorted superinterfaces.\n@@ -422,1 +422,1 @@\n-            \/\/ Add direct super interfaces of a super class, if any.\n+            \/\/ Add direct superinterfaces of a superclass, if any.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,1 +486,1 @@\n-     * sub packages.\n+     * subpackages.\n@@ -489,1 +489,1 @@\n-     * sub packages\n+     * subpackages\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}