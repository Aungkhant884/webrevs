{"files":[{"patch":"@@ -181,1 +181,2 @@\n-     * and HTTPS requests. If proxy is {@code null} then proxying is disabled.\n+     * and HTTPS requests. If {@code proxyAddress} is {@code null}\n+     * then proxying is disabled.\n@@ -210,0 +211,3 @@\n+            if (uri == null || sa == null || e == null) {\n+                throw new IllegalArgumentException(\"Arguments can't be null.\");\n+            }\n@@ -214,2 +218,9 @@\n-        public synchronized List<Proxy> select(URI uri) {\n-            String scheme = uri.getScheme().toLowerCase(Locale.ROOT);\n+        public List<Proxy> select(URI uri) {\n+            if (uri == null) {\n+                throw new IllegalArgumentException(\"URI can't be null\");\n+            }\n+            String scheme = uri.getScheme();\n+            if (scheme == null) {\n+                throw new IllegalArgumentException(\"protocol can't be null\");\n+            }\n+            scheme = scheme.toLowerCase(Locale.ROOT);\n","filename":"src\/java.base\/share\/classes\/java\/net\/ProxySelector.java","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4937962\n+ * @bug 4937962 8318150\n@@ -27,0 +27,1 @@\n+ * @run junit NullArguments\n@@ -29,1 +30,0 @@\n-import java.util.List;\n@@ -31,0 +31,7 @@\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.api.Assumptions;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n@@ -33,49 +40,26 @@\n-    public static void main(String[] args) {\n-        ProxySelector ps = ProxySelector.getDefault();\n-        List p = null;\n-        boolean ok = false;\n-        if (ps != null) {\n-            try {\n-                p = ps.select(null);\n-            } catch (IllegalArgumentException iae) {\n-                System.out.println(\"OK\");\n-                ok = true;\n-            }\n-            if (!ok)\n-                throw new RuntimeException(\"Expected IllegalArgumentException!\");\n-            URI uri = null;\n-            try {\n-                uri = new URI(\"http:\/\/java.sun.com\");\n-            } catch (java.net.URISyntaxException use) {\n-                \/\/ can't happen\n-            }\n-            SocketAddress sa = new InetSocketAddress(\"localhost\", 80);\n-            IOException ioe = new IOException(\"dummy IOE\");\n-            ok = false;\n-            try {\n-                ps.connectFailed(uri, sa, null);\n-            } catch (IllegalArgumentException iae) {\n-                System.out.println(\"OK\");\n-                ok = true;\n-            }\n-            if (!ok)\n-                throw new RuntimeException(\"Expected IllegalArgumentException!\");\n-            ok = false;\n-            try {\n-                ps.connectFailed(uri, null, ioe);\n-            } catch (IllegalArgumentException iae) {\n-                System.out.println(\"OK\");\n-                ok = true;\n-            }\n-            if (!ok)\n-                throw new RuntimeException(\"Expected IllegalArgumentException!\");\n-            ok = false;\n-            try {\n-                ps.connectFailed(null, sa, ioe);\n-            } catch (IllegalArgumentException iae) {\n-                System.out.println(\"OK\");\n-                ok = true;\n-            }\n-            if (!ok)\n-                throw new RuntimeException(\"Expected IllegalArgumentException!\");\n-        }\n+\n+    public static Stream<ProxySelector> testProxies() {\n+        return Stream.of(\n+                ProxySelector.getDefault(),\n+                ProxySelector.of(new InetSocketAddress(1234)));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"testProxies\")\n+    void testNullArguments(ProxySelector ps) throws URISyntaxException {\n+        Assumptions.assumeTrue(ps != null, \"Skipping null selector\");\n+        assertThrows(IllegalArgumentException.class,\n+                () -> ps.select(null),\n+                \"Expected IllegalArgumentException!\");\n+        URI uri = new URI(\"http:\/\/java.sun.com\");\n+        SocketAddress sa = new InetSocketAddress(\"localhost\", 80);\n+        IOException ioe = new IOException(\"dummy IOE\");\n+        assertThrows(IllegalArgumentException.class,\n+                () -> ps.connectFailed(uri, sa, null),\n+                \"Expected IllegalArgumentException!\");\n+        assertThrows(IllegalArgumentException.class,\n+                () -> ps.connectFailed(uri, null, ioe),\n+                \"Expected IllegalArgumentException!\");\n+        assertThrows(IllegalArgumentException.class,\n+                () -> ps.connectFailed(null, sa, ioe),\n+                \"Expected IllegalArgumentException!\");\n","filename":"test\/jdk\/java\/net\/ProxySelector\/NullArguments.java","additions":36,"deletions":52,"binary":false,"changes":88,"status":"modified"}]}