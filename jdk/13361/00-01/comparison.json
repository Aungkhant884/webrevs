{"files":[{"patch":"@@ -28,2 +28,7 @@\n- * @modules jdk.compiler\/com.sun.tools.javac.code\n-*\/\n+ * @library \/tools\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.compiler\/com.sun.tools.javac.util\n+ * @build toolbox.ToolBox toolbox.JavacTask\n+ * @run main ExtraPackageSemicolon\n+ *\/\n@@ -33,5 +38,9 @@\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.PrintStream;\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import toolbox.TestRunner;\n+import toolbox.ToolBox;\n+import toolbox.JavacTask;\n+import toolbox.Task;\n+\n+public class ExtraPackageSemicolon extends TestRunner {\n@@ -39,1 +48,26 @@\n-public class ExtraPackageSemicolon {\n+    protected ToolBox tb;\n+\n+    public ExtraPackageSemicolon() {\n+        super(System.err);\n+        tb = new ToolBox();\n+    }\n+\n+    protected void runTests() throws Exception {\n+        runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    @Test\n+    public void test(Path base) throws Exception {\n+        testCompile(base, \"package p;\");\n+        testCompile(base, \"package p;;\");\n+        testCompile(base, \"package p;;   \");\n+        testCompile(base, \"package p\\n;\");\n+        testCompile(base, \"package p\\n;\\n\");\n+        testCompile(base, \"package p\\n;\\n;\\n\");\n+        testCompile(base, \"package p;;;;;;;;;;;;;;;;;;;;;;;;;;;;\");\n+        testCompile(base, \"package p;; ;; ;; ;;; ;;; ;;; ;;\");\n+        testCompile(base, \"package p;;\\n;;\\n;;\\n;;;\\n;;;\\n;;;\\n;;\");\n+        testCompile(base, \"package p;\\nimport java.util.Map;\");\n+        testCompile(base, \"package p;\\nimport java.util.Map;\\n;\");\n+        testCompile(base, \"package p;\\nimport java.util.Map;\\n;; ;;\");\n+    }\n@@ -41,18 +75,9 @@\n-    public static void runTest(String filename, String source) throws Exception {\n-        final File sourceFile = new File(filename);\n-        System.err.println(\"writing: \" + sourceFile);\n-        try (PrintStream output = new PrintStream(new FileOutputStream(sourceFile))) {\n-            output.println(source);\n-        }\n-        final StringWriter diags = new StringWriter();\n-        final String[] params = new String[] { sourceFile.toString() };\n-        System.err.println(\"compiling: \" + sourceFile);\n-        int ret = Main.compile(params, new PrintWriter(diags, true));\n-        System.err.println(\"exit value: \" + ret);\n-        String output = diags.toString().trim();\n-        if (!output.isEmpty())\n-            System.err.println(\"output:\\n\" + output);\n-        else\n-            System.err.println(\"no output\");\n-        if (ret != 0)\n-            throw new AssertionError(\"compilation failed, but expected success\");\n+    private void testCompile(Path base, String javaSource) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, javaSource);\n+        Path classes = base.resolve(\"classes\");\n+        tb.createDirectories(classes);\n+        new JavacTask(tb, Task.Mode.CMDLINE)\n+            .outdir(classes)\n+            .files(tb.findJavaFiles(src))\n+            .run(Task.Expect.SUCCESS);\n@@ -62,3 +87,1 @@\n-        runTest(\"Test1.java\", \"package p;\");\n-        runTest(\"Test2.java\", \"package p;;\");\n-        runTest(\"Test3.java\", \"package p;; ;; ;; ;;; ;;; ;;; ;;\");\n+        new ExtraPackageSemicolon().runTests();\n","filename":"test\/langtools\/tools\/javac\/parser\/ExtraPackageSemicolon.java","additions":52,"deletions":29,"binary":false,"changes":81,"status":"modified"}]}