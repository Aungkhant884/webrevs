{"files":[{"patch":"@@ -25,0 +25,3 @@\n+import java.util.concurrent.TimeUnit;\n+import java.util.random.RandomGenerator;\n+\n@@ -37,4 +40,0 @@\n-import java.util.random.RandomGenerator;\n-import java.util.random.RandomGeneratorFactory;\n-import java.util.concurrent.TimeUnit;\n-\n@@ -51,5 +50,0 @@\n-\n-    RandomGenerator randomGenerator;\n-\n-    @Param({\"mixed\", \"positive\", \"negative\"})\n-    String divisorType;\n@@ -66,1 +60,1 @@\n-        RandomGenerator rng = RandomGeneratorFactory.getDefault().create(0);\n+        var rng = RandomGenerator.getDefault();\n@@ -70,3 +64,1 @@\n-            if (divisorType.equals(\"positive\")) divisor = Math.abs(divisor);\n-            else if (divisorType.equals(\"negative\")) divisor = -Math.abs(divisor);\n-            divisors[i] = divisor;\n+            divisors[i] = divisor == 0 ? 1 : divisor;\n@@ -93,1 +85,4 @@\n-            divmod(dividends[i], divisors[i], i);\n+            int dividend = dividends[i];\n+            int divisor = divisors[i];\n+            quotients[i] = Integer.divideUnsigned(dividend, divisor);\n+            remainders[i] = Integer.remainderUnsigned(dividend, divisor);\n@@ -97,3 +92,5 @@\n-    public void divmod(int dividend, int divisor, int i) {\n-        quotients[i] = Integer.divideUnsigned(dividend, divisor);\n-        remainders[i] = Integer.remainderUnsigned(dividend, divisor);\n+    @Benchmark\n+    public void testDivideConstant() {\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            quotients[i] = dividends[i] \/ 7;\n+        }\n@@ -102,3 +99,6 @@\n-}\n-\n-\n+    @Benchmark\n+    public void testDivideUnsignedConstant() {\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            quotients[i] = Integer.divideUnsigned(dividends[i], 7);\n+        }\n+    }\n@@ -106,0 +106,7 @@\n+    @Benchmark\n+    public void testRemainderUnsignedConstant() {\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            remainders[i] = Integer.remainderUnsigned(dividends[i], 7);\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/IntegerDivMod.java","additions":27,"deletions":20,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -25,0 +25,3 @@\n+import java.util.random.RandomGenerator;\n+import java.util.concurrent.TimeUnit;\n+\n@@ -37,4 +40,0 @@\n-import java.util.random.RandomGenerator;\n-import java.util.random.RandomGeneratorFactory;\n-import java.util.concurrent.TimeUnit;\n-\n@@ -51,5 +50,0 @@\n-\n-    RandomGenerator randomGenerator;\n-\n-    @Param({\"mixed\", \"positive\", \"negative\"})\n-    String divisorType;\n@@ -66,1 +60,1 @@\n-        RandomGenerator rng = RandomGeneratorFactory.getDefault().create(0);\n+        var rng = RandomGenerator.getDefault();\n@@ -70,3 +64,1 @@\n-            if (divisorType.equals(\"positive\")) divisor = Math.abs(divisor);\n-            else if (divisorType.equals(\"negative\")) divisor = -Math.abs(divisor);\n-            divisors[i] = divisor;\n+            divisors[i] = divisor == 0 ? 1 : divisor;\n@@ -93,1 +85,4 @@\n-            divmod(dividends[i], divisors[i], i);\n+            long dividend = dividends[i];\n+            long divisor = divisors[i];\n+            quotients[i] = Long.divideUnsigned(dividend, divisor);\n+            remainders[i] = Long.remainderUnsigned(dividend, divisor);\n@@ -97,3 +92,5 @@\n-    public void divmod(long dividend, long divisor, int i) {\n-        quotients[i] = Long.divideUnsigned(dividend, divisor);\n-        remainders[i] = Long.remainderUnsigned(dividend, divisor);\n+    @Benchmark\n+    public void testDivideUnsignedConstant() {\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            quotients[i] = Long.divideUnsigned(dividends[i], 7);\n+        }\n@@ -102,0 +99,6 @@\n+    @Benchmark\n+    public void testRemainderUnsignedConstant() {\n+        for (int i = 0; i < BUFFER_SIZE; i++) {\n+            remainders[i] = Long.remainderUnsigned(dividends[i], 7);\n+        }\n+    }\n@@ -103,3 +106,0 @@\n-\n-\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/LongDivMod.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}