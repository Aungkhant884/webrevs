{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import compiler.lib.ir_framework.driver.irmatching.IRViolationException;\n@@ -45,0 +46,2 @@\n+    private static final boolean VERIFY = Boolean.getBoolean(\"verify\");\n+\n@@ -98,0 +101,9 @@\n+\n+        var test = new TestFramework(DivisionByConstant.class);\n+        test.setDefaultWarmup(1);\n+        test.addFlags(\"-DiDiv=\" + 1, \"-Di1=\" + 1, \"-Di2=\" + 1,\n+                \"-DlDiv=\" + 1, \"-Dl1=\" + 1, \"-Dl2=\" + 1, \"-Dverify=\" + true);\n+        try {\n+            test.start();\n+            throw new RuntimeException(\"Expected exception not thrown\");\n+        } catch (IRViolationException e) {}\n@@ -106,0 +118,7 @@\n+    @Test\n+    @Arguments({Argument.NUMBER_42, Argument.NUMBER_42})\n+    @IR(failOn = IRNode.DIV)\n+    static int verify(int x, int y) {\n+        return VERIFY ? x \/ y : 0;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/integerArithmetic\/DivisionByConstant.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}