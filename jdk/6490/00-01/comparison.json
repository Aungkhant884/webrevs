{"files":[{"patch":"@@ -123,1 +123,1 @@\n-    private String getQualifiedFieldName() {\n+    protected String getQualifiedFieldName() {\n@@ -226,10 +226,0 @@\n-    protected String getMessage(boolean getter, String attemptedType) {\n-        String err = \"Can not \" + (getter ? \"get\" : \"set\");\n-        if (Modifier.isStatic(field.getModifiers()))\n-            err += \" static\";\n-        if (Modifier.isFinal(field.getModifiers()))\n-            err += \" final\";\n-        err += \" \" + field.getType().getName() + \" field \" + getQualifiedFieldName() + \" on \" + attemptedType;\n-        return err;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/FieldAccessorImpl.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.lang.reflect.Modifier;\n@@ -67,0 +68,13 @@\n+    private String getMessage(boolean getter, Class<?> type) {\n+        String err = \"Can not \" + (getter ? \"get\" : \"set\");\n+        if (Modifier.isStatic(field.getModifiers()))\n+            err += \" static\";\n+        if (Modifier.isFinal(field.getModifiers()))\n+            err += \" final\";\n+        err += \" \" + field.getType().getName() + \" field \" + getQualifiedFieldName();\n+        if (type != null) {\n+            err += \" on \" + type.getName();\n+        }\n+        return err;\n+    }\n+\n@@ -72,1 +86,1 @@\n-        return new IllegalArgumentException(getMessage(true, o != null ? o.getClass().getName() : \"\"));\n+        return new IllegalArgumentException(getMessage(true, o != null ? o.getClass() : null));\n@@ -80,1 +94,1 @@\n-        return new IllegalArgumentException(getMessage(false, o != null ? o.getClass().getName() : \"\"));\n+        return new IllegalArgumentException(getMessage(false, o != null ? o.getClass() : null));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleFieldAccessorImpl.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"}]}