{"files":[{"patch":"@@ -1046,1 +1046,1 @@\n-            toClear.stream().forEach(c -> {\n+            toClear.forEach(c -> {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/api\/JavacTrees.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,9 +60,0 @@\n-import com.sun.tools.javac.tree.JCTree.JCBlock;\n-import com.sun.tools.javac.tree.JCTree.JCClassDecl;\n-import com.sun.tools.javac.tree.JCTree.JCExpression;\n-import com.sun.tools.javac.tree.JCTree.JCLambda;\n-import com.sun.tools.javac.tree.JCTree.JCMethodDecl;\n-import com.sun.tools.javac.tree.JCTree.JCMethodInvocation;\n-import com.sun.tools.javac.tree.JCTree.JCNewClass;\n-import com.sun.tools.javac.tree.JCTree.JCTypeApply;\n-import com.sun.tools.javac.tree.JCTree.JCVariableDecl;\n@@ -1135,1 +1126,1 @@\n-                tree.sym.getRecordComponents().stream().forEach(rc -> scan(rc.accessorMeth));\n+                tree.sym.getRecordComponents().forEach(rc -> scan(rc.accessorMeth));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-                rollback.stream().forEach(Runnable::run);\n+                rollback.forEach(Runnable::run);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/AttrRecover.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.HashSet;\n@@ -396,1 +395,1 @@\n-            roots.stream().forEach(this::visit);\n+            roots.forEach(this::visit);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/InferenceContext.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import java.util.stream.Collectors;\n@@ -49,1 +48,0 @@\n-import javax.tools.StandardJavaFileManager;\n@@ -1645,1 +1643,1 @@\n-                        originalAnnos.stream().forEach(a -> visitAnnotation(a));\n+                        originalAnnos.forEach(a -> visitAnnotation(a));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}