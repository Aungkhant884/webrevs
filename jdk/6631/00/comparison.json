{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -330,2 +330,1 @@\n-                                  + BMPCompressionTypes.getName(compressionType)\n-                                  + \" and \" + colorModel.getPixelSize() + \" bits per pixel\");\n+                                  + BMPCompressionTypes.getName(compressionType));\n@@ -1460,3 +1459,0 @@\n-        if (bpp != 0 && bpp != 1 && bpp != 4 && bpp != 8 && bpp != 16 && bpp != 24 && bpp != 32) {\n-            return false;\n-        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/bmp\/BMPImageWriter.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,80 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8262297\n- * @summary Test that writing invalid bit per pixel image throws IOException\n- *\/\n-\n-import java.awt.image.BufferedImage;\n-import java.awt.image.IndexColorModel;\n-import java.io.File;\n-import java.io.IOException;\n-import javax.imageio.ImageIO;\n-\n-public class BMPBitsPerPixelTest {\n-\n-    public static void main(String[] args) {\n-        test(1, false);\n-        test(2, true);\n-        test(3, true);\n-        test(4, false);\n-        test(5, true);\n-        test(6, true);\n-        test(7, true);\n-        test(8, false);\n-    }\n-\n-    public static void test(int bpp, boolean shouldThrowException) {\n-        int palettes = (int)Math.pow(2, bpp);\n-        byte[] r = new byte[palettes];\n-        byte[] g = new byte[palettes];\n-        byte[] b = new byte[palettes];\n-        boolean exceptionThrown = false;\n-        try {\n-            IndexColorModel cm = new IndexColorModel(bpp, palettes, r, g, b);\n-            int imageType = BufferedImage.TYPE_BYTE_BINARY;\n-            if (bpp > 4) {\n-                imageType = BufferedImage.TYPE_BYTE_INDEXED;\n-            }\n-            BufferedImage img = new BufferedImage(10, 10, imageType, (IndexColorModel)cm);\n-            File file = File.createTempFile(\"test\", \".bmp\", new File(\".\"));\n-            file.deleteOnExit();\n-            ImageIO.write(img, \"BMP\", file);\n-        } catch (IOException e) {\n-            exceptionThrown = true;\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Unexpected exception: \" + e);\n-        }\n-\n-        if (shouldThrowException && !exceptionThrown) {\n-            throw new RuntimeException(\"IOException was not caught.\");\n-        } else if (!shouldThrowException && exceptionThrown) {\n-            throw new RuntimeException(\"IOException should not be thrown.\");\n-        } else {\n-            System.out.println(\"Test PASSED.\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/javax\/imageio\/plugins\/bmp\/BMPBitsPerPixelTest.java","additions":0,"deletions":80,"binary":false,"changes":80,"status":"deleted"}]}