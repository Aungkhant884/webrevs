{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,7 @@\n+\n+  inline void drain_oop_stack();\n+  \/\/ Transfer contents from the objArray overflow stack to the shared objArray stack.\n+  \/\/ Returns true and a valid task if there has not been enough space in the shared\n+  \/\/ objArray stack, otherwise the task is invalid.\n+  inline bool transfer_objArray_overflow_stack(ObjArrayTask& task);\n+\n@@ -98,0 +105,3 @@\n+  template <class T>\n+  bool transfer_from_overflow_stack(T& elem);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -154,10 +154,4 @@\n-void G1FullGCMarker::drain_stack() {\n-  do {\n-    oop obj;\n-    while (_oop_stack.pop_overflow(obj)) {\n-      if (!_oop_stack.try_push_to_taskqueue(obj)) {\n-        assert(_bitmap->is_marked(obj), \"must be marked\");\n-        follow_object(obj);\n-      }\n-    }\n-    while (_oop_stack.pop_local(obj)) {\n+inline void G1FullGCMarker::drain_oop_stack() {\n+  oop obj;\n+  while (_oop_stack.pop_overflow(obj)) {\n+    if (!_oop_stack.try_push_to_taskqueue(obj)) {\n@@ -167,9 +161,13 @@\n-    \/\/ Process ObjArrays one at a time to avoid marking stack bloat, but it is\n-    \/\/ fine to try to move work from the overflow queue to the shared queue as\n-    \/\/ quickly as possible.\n-    ObjArrayTask task;\n-    while (_objarray_stack.pop_overflow(task)) {\n-      if (!_objarray_stack.try_push_to_taskqueue(task)) {\n-        follow_array_chunk(objArrayOop(task.obj()), task.index());\n-        break;\n-      }\n+  }\n+  while (_oop_stack.pop_local(obj)) {\n+    assert(_bitmap->is_marked(obj), \"must be marked\");\n+    follow_object(obj);\n+  }\n+}\n+\n+inline bool G1FullGCMarker::transfer_objArray_overflow_stack(ObjArrayTask& task) {\n+  \/\/ It is desirable to move as much as possible work from the overflow queue to\n+  \/\/ the shared queue as quickly as possible.\n+  while (_objarray_stack.pop_overflow(task)) {\n+    if (!_objarray_stack.try_push_to_taskqueue(task)) {\n+      return true;\n@@ -177,1 +175,13 @@\n-    if (_objarray_stack.pop_local(task)) {\n+  }\n+  return false;\n+}\n+\n+void G1FullGCMarker::drain_stack() {\n+  do {\n+    \/\/ First, drain regular oop stack.\n+    drain_oop_stack();\n+\n+    \/\/ Then process ObjArrays one at a time to avoid marking stack bloat.\n+    ObjArrayTask task;\n+    if (transfer_objArray_overflow_stack(task) ||\n+      _objarray_stack.pop_local(task)) {\n@@ -181,1 +191,0 @@\n-  return;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"}]}