{"files":[{"patch":"@@ -13044,1 +13044,1 @@\n-         id=\"VirtualThreadStart\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_START\" filtered=\"thread\" num=\"87\" phase=\"start\" since=\"21\">\n+         id=\"VirtualThreadStart\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_START\" num=\"87\" phase=\"start\" since=\"21\">\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-static const jlong  VTHREAD_BITS = VTHREAD_START_BIT | VTHREAD_END_BIT | VTHREAD_MOUNT_BIT | VTHREAD_UNMOUNT_BIT;\n+static const jlong  VTHREAD_FILTERED_EVENT_BITS = VTHREAD_END_BIT | VTHREAD_MOUNT_BIT | VTHREAD_UNMOUNT_BIT;\n@@ -108,1 +108,1 @@\n-static const jlong  THREAD_FILTERED_EVENT_BITS = INTERP_EVENT_BITS | EXCEPTION_BITS | MONITOR_BITS | VTHREAD_BITS |\n+static const jlong  THREAD_FILTERED_EVENT_BITS = INTERP_EVENT_BITS | EXCEPTION_BITS | MONITOR_BITS | VTHREAD_FILTERED_EVENT_BITS |\n@@ -111,1 +111,1 @@\n-static const jlong  NEED_THREAD_LIFE_EVENTS = THREAD_FILTERED_EVENT_BITS | THREAD_START_BIT;\n+static const jlong  NEED_THREAD_LIFE_EVENTS = THREAD_FILTERED_EVENT_BITS | THREAD_START_BIT | VTHREAD_START_BIT;\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1552,0 +1552,4 @@\n+      JvmtiEnv *env = ets->get_env();\n+      if (env->phase() == JVMTI_PHASE_PRIMORDIAL) {\n+        continue;\n+      }\n@@ -1553,4 +1557,0 @@\n-        JvmtiEnv *env = ets->get_env();\n-        if (env->phase() == JVMTI_PHASE_PRIMORDIAL) {\n-          continue;\n-        }\n@@ -1578,8 +1578,1 @@\n-  JavaThread *cur_thread = JavaThread::current();\n-  JvmtiThreadState *state = get_jvmti_thread_state(cur_thread);\n-  if (state == nullptr) {\n-    return;\n-  }\n-\n-  if (state->is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_START)) {\n-    JvmtiEnvThreadStateIterator it(state);\n+  JavaThread *thread = JavaThread::current();\n@@ -1587,2 +1580,5 @@\n-    for (JvmtiEnvThreadState* ets = it.first(); ets != nullptr; ets = it.next(ets)) {\n-      JvmtiEnv *env = ets->get_env();\n+  \/\/ Do not post virtual thread start event for hidden java thread.\n+  if (JvmtiEventController::is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_START) &&\n+      !thread->is_hidden_from_external_view()) {\n+    JvmtiEnvIterator it;\n+    for (JvmtiEnv* env = it.first(); env != nullptr; env = it.next(env)) {\n@@ -1592,1 +1588,1 @@\n-      if (ets->is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_START)) {\n+      if (env->is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_START)) {\n@@ -1595,2 +1591,2 @@\n-        JvmtiVirtualThreadEventMark jem(cur_thread);\n-        JvmtiJavaThreadEventTransition jet(cur_thread);\n+        JvmtiVirtualThreadEventMark jem(thread);\n+        JvmtiJavaThreadEventTransition jet(thread);\n@@ -1612,2 +1608,2 @@\n-  JavaThread *cur_thread = JavaThread::current();\n-  JvmtiThreadState *state = get_jvmti_thread_state(cur_thread);\n+  JavaThread *thread = JavaThread::current();\n+  JvmtiThreadState *state = get_jvmti_thread_state(thread);\n@@ -1618,1 +1614,3 @@\n-  if (state->is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_END)) {\n+  \/\/ Do not post virtual thread end event for hidden java thread.\n+  if (state->is_enabled(JVMTI_EVENT_VIRTUAL_THREAD_END) &&\n+      !thread->is_hidden_from_external_view()) {\n@@ -1629,2 +1627,2 @@\n-        JvmtiVirtualThreadEventMark jem(cur_thread);\n-        JvmtiJavaThreadEventTransition jet(cur_thread);\n+        JvmtiVirtualThreadEventMark jem(thread);\n+        JvmtiJavaThreadEventTransition jet(thread);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":20,"deletions":22,"binary":false,"changes":42,"status":"modified"}]}