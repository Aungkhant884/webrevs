{"files":[{"patch":"@@ -410,0 +410,2 @@\n+                        } else if (keyAlgo.equals(KnownOIDs.RC2$CBC$PKCS5Padding.stdName())) {\n+                            keyAlgo = \"RC2\";\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -271,1 +271,1 @@\n-    RC2$CBC$PKCS5Padding(\"1.2.840.113549.3.2\", \"RC2\/CBC\/PKCS5Padding\"),\n+    RC2$CBC$PKCS5Padding(\"1.2.840.113549.3.2\", \"RC2\/CBC\/PKCS5Padding\", \"RC2\"),\n@@ -430,1 +430,3 @@\n-    MICROSOFT_ExportApproved(\"1.3.6.1.4.1.311.10.3.3\");\n+    MICROSOFT_ExportApproved(\"1.3.6.1.4.1.311.10.3.3\"),\n+\n+    Blowfish(\"1.3.6.1.4.1.3029.1.1.2\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/KnownOIDs.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,49 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8286024\n- * @library \/test\/lib\n- * @summary PKCS12 keystore shows \"DES\/CBC\" as the algorithm of a DES SecretKeyEntry\n- *\/\n-\n-import jdk.test.lib.Asserts;\n-\n-import javax.crypto.KeyGenerator;\n-import java.security.Key;\n-import java.security.KeyStore;\n-\n-public class DESName {\n-    public static void main(String[] args) throws Exception {\n-        char[] pass = \"changeit\".toCharArray();\n-        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n-        ks.load(null, null);\n-        KeyGenerator g = KeyGenerator.getInstance(\"DES\");\n-        Key k = g.generateKey();\n-        Asserts.assertEQ(k.getAlgorithm(), \"DES\");\n-        ks.setKeyEntry(\"d\", k, pass, null);\n-        k = ks.getKey(\"d\", pass);\n-        Asserts.assertEQ(k.getAlgorithm(), \"DES\");\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/pkcs12\/DESName.java","additions":0,"deletions":49,"binary":false,"changes":49,"status":"deleted"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8286024 8286422\n+ * @library \/test\/lib\n+ * @summary PKCS12 keystore should show correct SecretKey algorithm names\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+\n+import javax.crypto.KeyGenerator;\n+import java.security.Key;\n+import java.security.KeyStore;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+public class SecretKeyAlgorithms {\n+    public static void main(String[] args) throws Exception {\n+        char[] pass = \"changeit\".toCharArray();\n+        KeyStore ks = KeyStore.getInstance(\"PKCS12\");\n+        ks.load(null, null);\n+        var names = Map.of(\n+                \"des\", \"DES\",\n+                \"desede\", \"DESede\",\n+                \"aes\", \"AES\",\n+                \"blowfish\", \"Blowfish\",\n+                \"rc2\", \"RC2\",\n+                \"arcfour\", \"ARCFOUR\");\n+        for (var alg : names.entrySet()) {\n+            KeyGenerator g = KeyGenerator.getInstance(alg.getKey());\n+            Key k = g.generateKey();\n+            Asserts.assertEQ(k.getAlgorithm(), alg.getValue());\n+            ks.setKeyEntry(alg.getKey(), k, pass, null);\n+        }\n+        for (var alias : Collections.list(ks.aliases())) {\n+            var k = ks.getKey(alias, pass);\n+            Asserts.assertEQ(k.getAlgorithm(), names.get(alias));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/pkcs12\/SecretKeyAlgorithms.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}