{"files":[{"patch":"@@ -112,11 +112,0 @@\n-    \/\/clone constructor for internal purposes\n-    SplitConstantPool(SplitConstantPool cloneFrom) {\n-        this.parent = cloneFrom.parent;\n-        this.parentSize = cloneFrom.parentSize;\n-        this.parentBsmSize = cloneFrom.parentBsmSize;\n-        this.size = cloneFrom.size;\n-        this.bsmSize = cloneFrom.bsmSize;\n-        this.myEntries = Arrays.copyOf(cloneFrom.myEntries, cloneFrom.myEntries.length);\n-        this.myBsmEntries = Arrays.copyOf(cloneFrom.myBsmEntries, cloneFrom.myBsmEntries.length);\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/SplitConstantPool.java","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -839,4 +839,2 @@\n-            \/\/clone SplitConstantPool with alternate context\n-            var cc = Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS);\n-            var newCp = new SplitConstantPool(cp);\n-            var clm = cc.parse(cc.build(newCp.classEntry(ClassDesc.of(\"FakeClass\")), newCp, clb ->\n+            var cc = Classfile.of();\n+            var clm = cc.parse(cc.build(cp.classEntry(thisType.sym()), cp, clb ->\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}