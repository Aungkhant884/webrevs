{"files":[{"patch":"@@ -51,4 +51,2 @@\n-     * Returns a default instance of {@linkplain ClassHierarchyResolver}\n-     * that reads from system class loader with\n-     * {@link ClassLoader#getSystemResourceAsStream(String)} and falls\n-     * back to reflection if a class is not found.\n+     * Returns a default instance of {@linkplain ClassHierarchyResolver} that\n+     * gets {@link ClassHierarchyInfo} from system class loader with reflection.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/ClassHierarchyResolver.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import static java.util.Objects.requireNonNull;\n@@ -95,0 +96,1 @@\n+            requireNonNull(attributeMapper);\n@@ -114,0 +116,1 @@\n+            requireNonNull(classHierarchyResolver);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n@@ -37,1 +36,0 @@\n-import java.util.function.Supplier;\n@@ -43,0 +41,1 @@\n+import static java.util.Objects.requireNonNull;\n@@ -55,9 +54,2 @@\n-    public static final ClassHierarchyResolver DEFAULT_RESOLVER = ClassHierarchyResolver\n-            .ofResourceParsing(ResourceParsingClassHierarchyResolver.SYSTEM_STREAM_PROVIDER)\n-            .orElse(new ClassLoadingClassHierarchyResolver(ClassLoadingClassHierarchyResolver.SYSTEM_CLASS_PROVIDER))\n-            .cached(new Supplier<>() {\n-                @Override\n-                public Map<ClassDesc, ClassHierarchyResolver.ClassHierarchyInfo> get() {\n-                    return new ConcurrentHashMap<>();\n-                }\n-            });\n+    public static final ClassHierarchyResolver DEFAULT_RESOLVER =\n+            new ClassLoadingClassHierarchyResolver(ClassLoadingClassHierarchyResolver.SYSTEM_CLASS_PROVIDER);\n@@ -72,1 +64,4 @@\n-        this.resolver = classHierarchyResolver;\n+        requireNonNull(classHierarchyResolver);\n+        this.resolver = classHierarchyResolver instanceof CachedClassHierarchyResolver\n+                ? classHierarchyResolver\n+                : classHierarchyResolver.cached();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassHierarchyImpl.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"}]}