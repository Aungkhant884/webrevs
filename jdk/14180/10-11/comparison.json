{"files":[{"patch":"@@ -322,0 +322,48 @@\n+\n+            private void writeCounters(boolean codeMatch, BufWriterImpl buf) {\n+                if (codeMatch) {\n+                    buf.writeU2(original.maxStack());\n+                    buf.writeU2(original.maxLocals());\n+                } else {\n+                    StackCounter cntr = StackCounter.of(DirectCodeBuilder.this, buf);\n+                    buf.writeU2(cntr.maxStack());\n+                    buf.writeU2(cntr.maxLocals());\n+                }\n+            }\n+\n+            private void generateStackMaps(BufWriterImpl buf) throws IllegalArgumentException {\n+                \/\/new instance of generator immediately calculates maxStack, maxLocals, all frames,\n+                \/\/ patches dead bytecode blocks and removes them from exception table\n+                StackMapGenerator gen = StackMapGenerator.of(DirectCodeBuilder.this, buf);\n+                attributes.withAttribute(gen.stackMapTableAttribute());\n+                buf.writeU2(gen.maxStack());\n+                buf.writeU2(gen.maxLocals());\n+            }\n+\n+            private void tryGenerateStackMaps(boolean codeMatch, BufWriterImpl buf) {\n+                if (buf.getMajorVersion() >= Classfile.JAVA_6_VERSION) {\n+                    try {\n+                        generateStackMaps(buf);\n+                    } catch (IllegalArgumentException e) {\n+                        \/\/failover following JVMS-4.10\n+                        if (buf.getMajorVersion() == Classfile.JAVA_6_VERSION) {\n+                            writeCounters(codeMatch, buf);\n+                        } else {\n+                            throw e;\n+                        }\n+                    }\n+                } else {\n+                    writeCounters(codeMatch, buf);\n+                }\n+            }\n+\n+            private boolean writeOriginalAttribute(BufWriterImpl buf) {\n+                var stackMapAttr = original.findAttribute(Attributes.STACK_MAP_TABLE).orElse(null);\n+                if (stackMapAttr != null) {\n+                    attributes.withAttribute(stackMapAttr);\n+                    writeCounters(true, buf);\n+                    return true;\n+                }\n+                return false;\n+            }\n+\n@@ -335,2 +383,0 @@\n-                int maxStack, maxLocals;\n-                Attribute<? extends StackMapTableAttribute> stackMapAttr;\n@@ -338,28 +384,24 @@\n-                if (!needsStackMap || context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_NEVER) {\n-                    StackCounter cntr = StackCounter.of(DirectCodeBuilder.this, buf);\n-                    maxStack = cntr.maxStack();\n-                    maxLocals = cntr.maxLocals();\n-                    stackMapAttr = null;\n-                } else if (codeAndExceptionsMatch(codeLength) &&\n-                          (stackMapAttr = original.findAttribute(Attributes.STACK_MAP_TABLE).orElse(null)) != null) {\n-                    maxLocals = original.maxLocals();\n-                    maxStack = original.maxStack();\n-                } else if (buf.getMajorVersion() >= Classfile.JAVA_6_VERSION ||\n-                           context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_ALWAYS) {\n-                    try {\n-                        \/\/new instance of generator immediately calculates maxStack, maxLocals, all frames,\n-                        \/\/ patches dead bytecode blocks and removes them from exception table\n-                        StackMapGenerator gen = StackMapGenerator.of(DirectCodeBuilder.this, buf);\n-                        maxStack = gen.maxStack();\n-                        maxLocals = gen.maxLocals();\n-                        stackMapAttr = gen.stackMapTableAttribute();\n-                    } catch (IllegalArgumentException e) {\n-                        if (buf.getMajorVersion() == Classfile.JAVA_6_VERSION &&\n-                            context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_WHEN_REQUIRED) {\n-                            \/\/failover following JVMS-4.10\n-                            StackCounter cntr = StackCounter.of(DirectCodeBuilder.this, buf);\n-                            maxStack = cntr.maxStack();\n-                            maxLocals = cntr.maxLocals();\n-                            stackMapAttr = null;\n-                        } else {\n-                            throw e;\n+                if (needsStackMap) {\n+                    if (codeAndExceptionsMatch(codeLength)) {\n+                        switch (context.stackMapsOption()) {\n+                            case STACK_MAPS_WHEN_REQUIRED -> {\n+                                if (!writeOriginalAttribute(buf)) {\n+                                    tryGenerateStackMaps(true, buf);\n+                                }\n+                            }\n+                            case STACK_MAPS_ALWAYS -> {\n+                                if (!writeOriginalAttribute(buf)) {\n+                                    generateStackMaps(buf);\n+                                }\n+                            }\n+                            case STACK_MAPS_NEVER ->\n+                                writeCounters(true, buf);\n+                        }\n+                    } else {\n+                        switch (context.stackMapsOption()) {\n+                            case STACK_MAPS_WHEN_REQUIRED ->\n+                                tryGenerateStackMaps(false, buf);\n+                            case STACK_MAPS_ALWAYS ->\n+                                generateStackMaps(buf);\n+                            case STACK_MAPS_NEVER ->\n+                                writeCounters(false, buf);\n@@ -368,0 +410,2 @@\n+                } else {\n+                    writeCounters(codeAndExceptionsMatch(codeLength), buf);\n@@ -369,8 +413,0 @@\n-                else {\n-                    StackCounter cntr = StackCounter.of(DirectCodeBuilder.this, buf);\n-                    maxStack = cntr.maxStack();\n-                    maxLocals = cntr.maxLocals();\n-                    stackMapAttr = null;\n-                }\n-\n-                attributes.withAttribute(stackMapAttr);\n@@ -378,2 +414,0 @@\n-                buf.writeU2(maxStack);\n-                buf.writeU2(maxLocals);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":74,"deletions":40,"binary":false,"changes":114,"status":"modified"}]}