{"files":[{"patch":"@@ -204,2 +204,2 @@\n-        STACK_MAPS_ALWAYS,\n-        STACK_MAPS_NEVER\n+        GENERATE_STACK_MAPS,\n+        DROP_STACK_MAPS\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-                        case STACK_MAPS_ALWAYS ->\n+                        case GENERATE_STACK_MAPS ->\n@@ -371,1 +371,1 @@\n-                        case STACK_MAPS_NEVER ->\n+                        case DROP_STACK_MAPS ->\n@@ -378,1 +378,1 @@\n-                        case STACK_MAPS_ALWAYS ->\n+                        case GENERATE_STACK_MAPS ->\n@@ -380,1 +380,1 @@\n-                        case STACK_MAPS_NEVER ->\n+                        case DROP_STACK_MAPS ->\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-                                     ? Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER)\n+                                     ? Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS)\n@@ -216,1 +216,1 @@\n-        byte[] noStackMaps = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER)\n+        byte[] noStackMaps = Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS)\n","filename":"test\/jdk\/jdk\/classfile\/CorpusTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-                Classfile.of(Classfile.StackMapsOption.STACK_MAPS_ALWAYS)\n+                Classfile.of(Classfile.StackMapsOption.GENERATE_STACK_MAPS)\n","filename":"test\/jdk\/jdk\/classfile\/DiscontinuedInstructionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            CC_No_Stack_No_Patch = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER,\n+            CC_No_Stack_No_Patch = Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS,\n","filename":"test\/jdk\/jdk\/classfile\/ShortJumpsFixTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER,\n+        return Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS,\n","filename":"test\/jdk\/jdk\/classfile\/StackMapsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        return Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER).build(clm.thisClass().asSymbol(), clb -> {\n+        return Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS).build(clm.thisClass().asSymbol(), clb -> {\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.STACK_MAPS_NEVER),\n+        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.DROP_STACK_MAPS),\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/Transforms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        var cc = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER);\n+        var cc = Classfile.of(Classfile.StackMapsOption.DROP_STACK_MAPS);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/ParseOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.STACK_MAPS_NEVER),\n+        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.DROP_STACK_MAPS),\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Transforms.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}