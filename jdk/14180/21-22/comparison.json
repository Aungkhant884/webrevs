{"files":[{"patch":"@@ -247,1 +247,1 @@\n-     * builder (which encapsulates classfile processing options.)\n+     * builder.\n@@ -618,0 +618,15 @@\n+    \/\/ annotation element values\n+    char AEV_BYTE = 'B';\n+    char AEV_CHAR = 'C';\n+    char AEV_DOUBLE = 'D';\n+    char AEV_FLOAT = 'F';\n+    char AEV_INT = 'I';\n+    char AEV_LONG = 'J';\n+    char AEV_SHORT = 'S';\n+    char AEV_BOOLEAN = 'Z';\n+    char AEV_STRING = 's';\n+    char AEV_ENUM = 'e';\n+    char AEV_CLASS = 'c';\n+    char AEV_ANNOTATION = '@';\n+    char AEV_ARRAY = '[';\n+\n@@ -678,2 +693,0 @@\n-    int LATEST_MAJOR_VERSION = JAVA_22_VERSION;\n-    int LATEST_MINOR_VERSION = 0;\n@@ -682,0 +695,8 @@\n+    static int latestMajorVersion() {\n+        return JAVA_22_VERSION;\n+    }\n+\n+    static int latestMinorVersion() {\n+        return 0;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":24,"deletions":3,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import static jdk.internal.classfile.Classfile.*;\n+\n@@ -116,1 +118,1 @@\n-            return 's';\n+            return AEV_STRING;\n@@ -130,1 +132,1 @@\n-            return 'D';\n+            return AEV_DOUBLE;\n@@ -144,1 +146,1 @@\n-            return 'F';\n+            return AEV_FLOAT;\n@@ -158,1 +160,1 @@\n-            return 'J';\n+            return AEV_LONG;\n@@ -172,1 +174,1 @@\n-            return 'I';\n+            return AEV_INT;\n@@ -186,1 +188,1 @@\n-            return 'S';\n+            return AEV_SHORT;\n@@ -200,1 +202,1 @@\n-            return 'C';\n+            return AEV_CHAR;\n@@ -214,1 +216,1 @@\n-            return 'B';\n+            return AEV_BYTE;\n@@ -228,1 +230,1 @@\n-            return 'Z';\n+            return AEV_BOOLEAN;\n@@ -246,1 +248,1 @@\n-            return '[';\n+            return AEV_ARRAY;\n@@ -261,1 +263,1 @@\n-            return 'e';\n+            return AEV_ENUM;\n@@ -277,1 +279,1 @@\n-            return '@';\n+            return AEV_ANNOTATION;\n@@ -292,1 +294,1 @@\n-            return 'c';\n+            return AEV_CLASS;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationImpl.java","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -61,13 +61,13 @@\n-            case 'B' -> new AnnotationImpl.OfByteImpl((IntegerEntry)classReader.readEntry(p));\n-            case 'C' -> new AnnotationImpl.OfCharacterImpl((IntegerEntry)classReader.readEntry(p));\n-            case 'D' -> new AnnotationImpl.OfDoubleImpl((DoubleEntry)classReader.readEntry(p));\n-            case 'F' -> new AnnotationImpl.OfFloatImpl((FloatEntry)classReader.readEntry(p));\n-            case 'I' -> new AnnotationImpl.OfIntegerImpl((IntegerEntry)classReader.readEntry(p));\n-            case 'J' -> new AnnotationImpl.OfLongImpl((LongEntry)classReader.readEntry(p));\n-            case 'S' -> new AnnotationImpl.OfShortImpl((IntegerEntry)classReader.readEntry(p));\n-            case 'Z' -> new AnnotationImpl.OfBooleanImpl((IntegerEntry)classReader.readEntry(p));\n-            case 's' -> new AnnotationImpl.OfStringImpl(classReader.readUtf8Entry(p));\n-            case 'e' -> new AnnotationImpl.OfEnumImpl(classReader.readUtf8Entry(p), classReader.readUtf8Entry(p + 2));\n-            case 'c' -> new AnnotationImpl.OfClassImpl(classReader.readUtf8Entry(p));\n-            case '@' -> new AnnotationImpl.OfAnnotationImpl(readAnnotation(classReader, p));\n-            case '[' -> {\n+            case AEV_BYTE -> new AnnotationImpl.OfByteImpl((IntegerEntry)classReader.readEntry(p));\n+            case AEV_CHAR -> new AnnotationImpl.OfCharacterImpl((IntegerEntry)classReader.readEntry(p));\n+            case AEV_DOUBLE -> new AnnotationImpl.OfDoubleImpl((DoubleEntry)classReader.readEntry(p));\n+            case AEV_FLOAT -> new AnnotationImpl.OfFloatImpl((FloatEntry)classReader.readEntry(p));\n+            case AEV_INT -> new AnnotationImpl.OfIntegerImpl((IntegerEntry)classReader.readEntry(p));\n+            case AEV_LONG -> new AnnotationImpl.OfLongImpl((LongEntry)classReader.readEntry(p));\n+            case AEV_SHORT -> new AnnotationImpl.OfShortImpl((IntegerEntry)classReader.readEntry(p));\n+            case AEV_BOOLEAN -> new AnnotationImpl.OfBooleanImpl((IntegerEntry)classReader.readEntry(p));\n+            case AEV_STRING -> new AnnotationImpl.OfStringImpl(classReader.readUtf8Entry(p));\n+            case AEV_ENUM -> new AnnotationImpl.OfEnumImpl(classReader.readUtf8Entry(p), classReader.readUtf8Entry(p + 2));\n+            case AEV_CLASS -> new AnnotationImpl.OfClassImpl(classReader.readUtf8Entry(p));\n+            case AEV_ANNOTATION -> new AnnotationImpl.OfAnnotationImpl(readAnnotation(classReader, p));\n+            case AEV_ARRAY -> {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/AnnotationReader.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-        this.majorVersion = Classfile.LATEST_MAJOR_VERSION;\n-        this.minorVersion = Classfile.LATEST_MINOR_VERSION;\n+        this.majorVersion = Classfile.latestMajorVersion();\n+        this.minorVersion = Classfile.latestMinorVersion();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectClassBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}