{"files":[{"patch":"@@ -1593,1 +1593,1 @@\n-        var cc = Classfile.of(Classfile.ConstantPoolSharingOption.DO_NOT_SHARE_CONSTANT_POOL);\n+        var cc = Classfile.of(Classfile.ConstantPoolSharingOption.NEW_POOL);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,3 @@\n- * Main entry points for parsing, transforming, and generating classfiles.\n+ * Represents a context for parsing, transforming, and generating classfiles.\n+ * A {@code Classfile} has a set of options that condition how parsing and\n+ * generation is done.\n@@ -54,0 +56,3 @@\n+    \/**\n+     * {@return a new context with default options}\n+     *\/\n@@ -58,0 +63,4 @@\n+    \/**\n+     * {@return a new context with options altered from the default}\n+     * @param options the desired processing options\n+     * \/\n@@ -62,0 +71,4 @@\n+    \/**\n+     * {@return a copy of the context with altered options}\n+     * @param options the desired processing options\n+     * \/\n@@ -65,1 +78,1 @@\n-     * An option that affects the writing of classfiles.\n+     * An option that affects the parsing and writing of classfiles.\n@@ -113,1 +126,1 @@\n-     * Default is {@code SHARE_CONSTANT_POOL} to preserve the original constant\n+     * Default is {@code SHARED_POOL} to preserve the original constant\n@@ -117,2 +130,2 @@\n-        SHARE_CONSTANT_POOL,\n-        DO_NOT_SHARE_CONSTANT_POOL\n+        SHARED_POOL,\n+        NEW_POOL\n@@ -137,1 +150,1 @@\n-     * Setting this option to {@code FILTER_DEAD_LABELS} filters the above\n+     * Setting this option to {@code DROP_DEAD_LABELS} filters the above\n@@ -142,1 +155,1 @@\n-        FILTER_DEAD_LABELS\n+        DROP_DEAD_LABELS\n@@ -150,1 +163,1 @@\n-     * Default is {@code PROCESS_DEBUG_ELEMENTS} to process debug elements.\n+     * Default is {@code PASS_DEBUG} to process debug elements.\n@@ -153,4 +166,2 @@\n-        PROCESS_DEBUG_ELEMENTS,\n-        DROP_DEBUG_ELEMENTS,\n-        DROP_DEBUG_ELEMENTS_ON_READ,\n-        DROP_DEBUG_ELEMENTS_ON_WRITE\n+        PASS_DEBUG,\n+        DROP_DEBUG\n@@ -163,1 +174,1 @@\n-     * Default is {@code PROCESS_LINE_NUMBERS} to process line numbers.\n+     * Default is {@code PASS_LINE_NUMBERS} to process line numbers.\n@@ -166,1 +177,1 @@\n-        PROCESS_LINE_NUMBERS,\n+        PASS_LINE_NUMBERS,\n@@ -183,1 +194,1 @@\n-     * Default is {@code GENERATE_STACK_MAPS_BY_CLASS_VERSION} to generate stack\n+     * Default is {@code STACK_MAPS_WHEN_REQUIRED} to generate stack\n@@ -189,3 +200,3 @@\n-        GENERATE_STACK_MAPS_BY_CLASS_VERSION,\n-        ALWAYS_GENERATE_STACK_MAPS,\n-        DO_NOT_GENERATE_STACK_MAPS\n+        STACK_MAPS_WHEN_REQUIRED,\n+        STACK_MAPS_ALWAYS,\n+        STACK_MAPS_NEVER\n@@ -196,1 +207,1 @@\n-     * Default is {@code PROCESS_UNKNOWN_ATTRIBUTES} to process unrecognized\n+     * Default is {@code PASS_UNKNOWN_ATTRIBUTES} to process unrecognized\n@@ -200,1 +211,1 @@\n-        PROCESS_UNKNOWN_ATTRIBUTES,\n+        PASS_UNKNOWN_ATTRIBUTES,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/Classfile.java","additions":31,"deletions":20,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-            } else if (((ClassReaderImpl)reader).context().unknownAttributesOption() == Classfile.UnknownAttributesOption.PROCESS_UNKNOWN_ATTRIBUTES) {\n+            } else if (((ClassReaderImpl)reader).context().unknownAttributesOption() == Classfile.UnknownAttributesOption.PASS_UNKNOWN_ATTRIBUTES) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/BoundAttribute.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,5 +57,5 @@\n-        this(StackMapsOption.GENERATE_STACK_MAPS_BY_CLASS_VERSION,\n-             DebugElementsOption.PROCESS_DEBUG_ELEMENTS,\n-             LineNumbersOption.PROCESS_LINE_NUMBERS,\n-             UnknownAttributesOption.PROCESS_UNKNOWN_ATTRIBUTES,\n-             ConstantPoolSharingOption.SHARE_CONSTANT_POOL,\n+        this(StackMapsOption.STACK_MAPS_WHEN_REQUIRED,\n+             DebugElementsOption.PASS_DEBUG,\n+             LineNumbersOption.PASS_LINE_NUMBERS,\n+             UnknownAttributesOption.PASS_UNKNOWN_ATTRIBUTES,\n+             ConstantPoolSharingOption.SHARED_POOL,\n@@ -121,1 +121,1 @@\n-        ConstantPoolBuilder constantPool = constantPoolSharingOption() == ConstantPoolSharingOption.SHARE_CONSTANT_POOL\n+        ConstantPoolBuilder constantPool = constantPoolSharingOption() == ConstantPoolSharingOption.SHARED_POOL\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/ClassfileImpl.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-            if (((ClassReaderImpl)classReader).context().lineNumbersOption() == Classfile.LineNumbersOption.PROCESS_LINE_NUMBERS)\n+            if (((ClassReaderImpl)classReader).context().lineNumbersOption() == Classfile.LineNumbersOption.PASS_LINE_NUMBERS)\n@@ -170,3 +170,1 @@\n-        var debugElementsOption = ((ClassReaderImpl)classReader).context().debugElementsOption();\n-        if (debugElementsOption == Classfile.DebugElementsOption.PROCESS_DEBUG_ELEMENTS ||\n-            debugElementsOption == Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS_ON_WRITE)\n+        if (((ClassReaderImpl)classReader).context().debugElementsOption() == Classfile.DebugElementsOption.PASS_DEBUG)\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/CodeImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -213,1 +213,1 @@\n-                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.FILTER_DEAD_LABELS) {\n+                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.DROP_DEAD_LABELS) {\n@@ -237,2 +237,1 @@\n-        if (context.debugElementsOption() == Classfile.DebugElementsOption.PROCESS_DEBUG_ELEMENTS ||\n-            context.debugElementsOption() == Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS_ON_READ) {\n+        if (context.debugElementsOption() == Classfile.DebugElementsOption.PASS_DEBUG) {\n@@ -251,1 +250,1 @@\n-                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.FILTER_DEAD_LABELS) {\n+                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.DROP_DEAD_LABELS) {\n@@ -280,1 +279,1 @@\n-                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.FILTER_DEAD_LABELS) {\n+                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.DROP_DEAD_LABELS) {\n@@ -303,1 +302,1 @@\n-                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.FILTER_DEAD_LABELS) {\n+                                if (context.deadLabelsOption() == Classfile.DeadLabelsOption.DROP_DEAD_LABELS) {\n@@ -339,1 +338,1 @@\n-                if (!needsStackMap || context.stackMapsOption() == Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS) {\n+                if (!needsStackMap || context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_NEVER) {\n@@ -349,1 +348,1 @@\n-                           context.stackMapsOption() == Classfile.StackMapsOption.ALWAYS_GENERATE_STACK_MAPS) {\n+                           context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_ALWAYS) {\n@@ -359,1 +358,1 @@\n-                            context.stackMapsOption() == Classfile.StackMapsOption.GENERATE_STACK_MAPS_BY_CLASS_VERSION) {\n+                            context.stackMapsOption() == Classfile.StackMapsOption.STACK_MAPS_WHEN_REQUIRED) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -239,1 +239,1 @@\n-        this.filterDeadLabels = context.deadLabelsOption() == Classfile.DeadLabelsOption.FILTER_DEAD_LABELS;\n+        this.filterDeadLabels = context.deadLabelsOption() == Classfile.DeadLabelsOption.DROP_DEAD_LABELS;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/StackMapGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n- * -- generate stackmaps (default is {@code GENERATE_STACK_MAPS_BY_CLASS_VERSION})<\/li>\n+ * -- generate stackmaps (default is {@code STACK_MAPS_WHEN_REQUIRED})<\/li>\n@@ -181,1 +181,1 @@\n- * -- processing of debug information, such as local variable metadata (default is {@code PROCESS_DEBUG_ELEMENTS}) <\/li>\n+ * -- processing of debug information, such as local variable metadata (default is {@code PASS_DEBUG}) <\/li>\n@@ -183,1 +183,1 @@\n- * -- processing of line numbers (default is {@code PROCESS_LINE_NUMBERS}) <\/li>\n+ * -- processing of line numbers (default is {@code PASS_LINE_NUMBERS}) <\/li>\n@@ -185,1 +185,1 @@\n- * -- processing of unrecognized attributes (default is {@code PROCESS_UNKNOWN_ATTRIBUTES})<\/li>\n+ * -- processing of unrecognized attributes (default is {@code PASS_UNKNOWN_ATTRIBUTES})<\/li>\n@@ -187,1 +187,1 @@\n- * -- share constant pool when transforming (default is {@code SHARE_CONSTANT_POOL})<\/li>\n+ * -- share constant pool when transforming (default is {@code SHARED_POOL})<\/li>\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/package-info.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-                                Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS,\n+                                Classfile.DebugElementsOption.DROP_DEBUG,\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/StripJavaDebugAttributesPlugin.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-                                     ? Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS)\n+                                     ? Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER)\n@@ -216,1 +216,1 @@\n-        byte[] noStackMaps = Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS)\n+        byte[] noStackMaps = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER)\n","filename":"test\/jdk\/jdk\/classfile\/CorpusTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-                Classfile.of(Classfile.StackMapsOption.ALWAYS_GENERATE_STACK_MAPS)\n+                Classfile.of(Classfile.StackMapsOption.STACK_MAPS_ALWAYS)\n","filename":"test\/jdk\/jdk\/classfile\/DiscontinuedInstructionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        var cc = Classfile.of(Classfile.DeadLabelsOption.FILTER_DEAD_LABELS);\n+        var cc = Classfile.of(Classfile.DeadLabelsOption.DROP_DEAD_LABELS);\n","filename":"test\/jdk\/jdk\/classfile\/FilterDeadLabelsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -307,1 +307,1 @@\n-        ClassModel c = Classfile.of(Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS).parse(fileBytes);\n+        ClassModel c = Classfile.of(Classfile.DebugElementsOption.DROP_DEBUG).parse(fileBytes);\n","filename":"test\/jdk\/jdk\/classfile\/LvtTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            CC_No_Stack_No_Patch = Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS,\n+            CC_No_Stack_No_Patch = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER,\n","filename":"test\/jdk\/jdk\/classfile\/ShortJumpsFixTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        return Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS,\n+        return Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER,\n","filename":"test\/jdk\/jdk\/classfile\/StackMapsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        return Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS).build(clm.thisClass().asSymbol(), clb -> {\n+        return Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER).build(clm.thisClass().asSymbol(), clb -> {\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/RebuildingTransformation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -132,2 +132,2 @@\n-        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS),\n-        SHARED_3_NO_DEBUG(true, threeLevelNoop, Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS, Classfile.LineNumbersOption.DROP_LINE_NUMBERS),\n+        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.STACK_MAPS_NEVER),\n+        SHARED_3_NO_DEBUG(true, threeLevelNoop, Classfile.DebugElementsOption.DROP_DEBUG, Classfile.LineNumbersOption.DROP_LINE_NUMBERS),\n@@ -191,1 +191,1 @@\n-                    : Stream.concat(Stream.of(options), Stream.of(Classfile.ConstantPoolSharingOption.DO_NOT_SHARE_CONSTANT_POOL)).toArray(Classfile.Option[]::new));\n+                    : Stream.concat(Stream.of(options), Stream.of(Classfile.ConstantPoolSharingOption.NEW_POOL)).toArray(Classfile.Option[]::new));\n","filename":"test\/jdk\/jdk\/classfile\/helpers\/Transforms.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        var cc = Classfile.of(Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS);\n+        var cc = Classfile.of(Classfile.DebugElementsOption.DROP_DEBUG);\n@@ -54,1 +54,1 @@\n-        var cc = Classfile.of(Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS);\n+        var cc = Classfile.of(Classfile.StackMapsOption.STACK_MAPS_NEVER);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/ParseOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,2 +57,2 @@\n-                            Classfile.ConstantPoolSharingOption.SHARE_CONSTANT_POOL,\n-                            Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS,\n+                            Classfile.ConstantPoolSharingOption.SHARED_POOL,\n+                            Classfile.DebugElementsOption.DROP_DEBUG,\n@@ -61,2 +61,2 @@\n-                            Classfile.ConstantPoolSharingOption.DO_NOT_SHARE_CONSTANT_POOL,\n-                            Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS,\n+                            Classfile.ConstantPoolSharingOption.NEW_POOL,\n+                            Classfile.DebugElementsOption.DROP_DEBUG,\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/RebuildMethodBodies.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -129,2 +129,2 @@\n-        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.DO_NOT_GENERATE_STACK_MAPS),\n-        SHARED_3_NO_DEBUG(true, threeLevelNoop, Classfile.DebugElementsOption.DROP_DEBUG_ELEMENTS, Classfile.LineNumbersOption.DROP_LINE_NUMBERS),\n+        SHARED_3_NO_STACKMAP(true, threeLevelNoop, Classfile.StackMapsOption.STACK_MAPS_NEVER),\n+        SHARED_3_NO_DEBUG(true, threeLevelNoop, Classfile.DebugElementsOption.DROP_DEBUG, Classfile.LineNumbersOption.DROP_LINE_NUMBERS),\n@@ -188,1 +188,1 @@\n-                    : Stream.concat(Stream.of(options), Stream.of(Classfile.ConstantPoolSharingOption.DO_NOT_SHARE_CONSTANT_POOL)).toArray(Classfile.Option[]::new));\n+                    : Stream.concat(Stream.of(options), Stream.of(Classfile.ConstantPoolSharingOption.NEW_POOL)).toArray(Classfile.Option[]::new));\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Transforms.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}