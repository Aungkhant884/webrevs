{"files":[{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+  @test\n+  @bug 6271792 8227077\n+  @key headful\n+  @summary Tests that all the blocked frames stay below their modal blocker dialog.\n+  @run main ZOrderTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.Dialog;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+\n+public class ZOrderTest\n+{\n+    private static Frame f1, f2, f3;\n+    private static Dialog d;\n+\n+    private static int width=400, height=400;\n+\n+    public static void main( String args[] ) throws Exception\n+    {\n+        try {\n+            f1 = new Frame(\"F1\");\n+            f1.setBounds(0, 0, width, height);\n+            f1.setBackground(Color.RED);\n+            f1.setLayout(new BorderLayout());\n+            Button b = new Button(\"Click\");\n+            b.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    d.setVisible(true);\n+                }\n+            });\n+            f1.add(b, BorderLayout.SOUTH);\n+            f1.setVisible(true);\n+\n+            f2 = new Frame(\"F2\");\n+            f2.setBounds(width + 1, 0, width, height);\n+            f2.setBackground(Color.RED);\n+            f2.setVisible(true);\n+\n+            f3 = new Frame(\"F3\");\n+            f3.setBounds(width + 1, 0 + height + 1, width, height);\n+            f3.setBackground(Color.RED);\n+            f3.setVisible(true);\n+\n+            d = new Dialog(f1, \"D\", true);\n+            d.setBounds(3 * width \/ 4, 3 * height \/ 4,\n+                    width \/ 2, height \/ 2);\n+            d.setBackground(Color.BLUE);\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+\n+            Point bl = b.getLocationOnScreen();\n+            mouseClick(robot, bl.x + b.getBounds().width \/ 2, bl.y + b.getBounds().height \/ 2);\n+\n+            clickFrame(robot, f1);\n+            Color color = robot.getPixelColor(d.getBounds().x + 10,\n+                    d.getBounds().y + d.getInsets().top + 10);\n+            if (!color.equals(Color.BLUE)) {\n+                System.out.println(color);\n+                throw new RuntimeException(\"Frame F1 is above its modal blocker dialog\");\n+            }\n+\n+            clickFrame(robot, f2);\n+            color = robot.getPixelColor(d.getBounds().x + d.getBounds().width - 10,\n+                    d.getBounds().y + d.getInsets().top + 10);\n+            if (!color.equals(Color.BLUE)) {\n+                throw new RuntimeException(\"Frame F2 is above its modal blocker dialog\");\n+            }\n+\n+            clickFrame(robot, f3);\n+            color = robot.getPixelColor(d.getBounds().x + d.getBounds().width - 10,\n+                    d.getBounds().y + d.getBounds().height - 10);\n+            if (!color.equals(Color.BLUE)) {\n+                throw new RuntimeException(\"Frame F3 is above its modal blocker dialog\");\n+            }\n+        } finally {\n+            if (f1 != null) {\n+                f1.dispose();\n+            }\n+            if (f2 != null) {\n+                f2.dispose();\n+            }\n+            if (f3 != null) {\n+                f3.dispose();\n+            }\n+            if (d != null) {\n+                d.dispose();\n+            }\n+        }\n+    }\n+\n+    private static void clickFrame(Robot robot, Frame frame) {\n+        Rectangle bounds = frame.getBounds();\n+        \/\/ click the title of frame\n+        mouseClick(robot, bounds.x + bounds.width \/ 2,\n+                bounds.y + frame.getInsets().top \/ 2 + 1);\n+        \/\/ click interior of frame\n+        mouseClick(robot, bounds.x + bounds.width \/ 2,\n+                bounds.y + frame.getInsets().top + 10);\n+    }\n+\n+    private static void mouseClick(Robot robot, int x, int y) {\n+        robot.mouseMove(x, y);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Modal\/ZOrderTest\/ZOrderTest.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"}]}