{"files":[{"patch":"@@ -28,0 +28,3 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n+ * @run main\/othervm CheckCleanerBound\n@@ -31,1 +34,2 @@\n-import java.util.WeakHashMap;\n+import java.lang.ref.WeakReference;\n+import jdk.test.lib.util.ForceGC;\n@@ -34,2 +38,0 @@\n-    private final static WeakHashMap<PasswordCallback, ?> weakHashMap =\n-            new WeakHashMap<>();\n@@ -43,1 +45,2 @@\n-        weakHashMap.put(passwordCallback, null);\n+        WeakReference<PasswordCallback> weakRef =\n+                new WeakReference<>(passwordCallback);\n@@ -46,7 +49,0 @@\n-        \/\/ Check if the PasswordCallback object could be collected.\n-        \/\/ Wait to trigger the cleanup.\n-        for (int i = 0; i < 10 && weakHashMap.size() != 0; i++) {\n-            System.gc();\n-            Thread.sleep(100);\n-        }\n-\n@@ -56,1 +52,2 @@\n-        if (weakHashMap.size() > 0) {\n+        ForceGC gc = new ForceGC();\n+        if (!gc.await(() -> weakRef.get() == null)) {\n","filename":"test\/jdk\/javax\/security\/auth\/callback\/PasswordCallback\/CheckCleanerBound.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n@@ -36,1 +38,1 @@\n-import java.util.WeakHashMap;\n+import java.lang.ref.WeakReference;\n@@ -38,2 +40,1 @@\n-public final class GssContextCleanup {\n-    private final static WeakHashMap<GSSContext, ?> whm = new WeakHashMap<>();\n+import jdk.test.lib.util.ForceGC;\n@@ -41,0 +42,1 @@\n+public final class GssContextCleanup {\n@@ -51,1 +53,1 @@\n-        whm.put(context, null);\n+        WeakReference<GSSContext> weakRef = new WeakReference<>(context);\n@@ -54,6 +56,0 @@\n-        \/\/ Wait to trigger the cleanup.\n-        for (int i = 0; i < 10 && whm.size() > 0; i++) {\n-            System.gc();\n-            Thread.sleep(100);\n-        }\n-\n@@ -61,1 +57,2 @@\n-        if (whm.size() > 0) {\n+        ForceGC gc = new ForceGC();\n+        if (!gc.await(() -> weakRef.get() == null)) {\n","filename":"test\/jdk\/sun\/security\/jgss\/GssContextCleanup.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+ * @library \/test\/lib\/\n+ * @build jdk.test.lib.util.ForceGC\n@@ -32,1 +34,1 @@\n-import java.util.WeakHashMap;\n+import java.lang.ref.WeakReference;\n@@ -37,2 +39,1 @@\n-public final class GssNameCleanup {\n-    private final static WeakHashMap<GSSName, ?> whm = new WeakHashMap<>();\n+import jdk.test.lib.util.ForceGC;\n@@ -40,0 +41,1 @@\n+public final class GssNameCleanup {\n@@ -52,1 +54,1 @@\n-            whm.put(name, null);\n+            WeakReference<GSSName> weakRef = new WeakReference<>(name);\n@@ -54,0 +56,6 @@\n+\n+            \/\/ Check if the object has been collected.\n+            ForceGC gc = new ForceGC();\n+            if (!gc.await(() -> weakRef.get() == null)) {\n+                throw new RuntimeException(\"GSSName object is not released\");\n+            }\n@@ -60,11 +68,0 @@\n-\n-        \/\/ Wait to trigger the cleanup.\n-        for (int i = 0; i < 10 && whm.size() > 0; i++) {\n-            System.gc();\n-            Thread.sleep(100);\n-        }\n-\n-        \/\/ Check if the object has been collected.\n-        if (whm.size() > 0) {\n-            throw new RuntimeException(\"GSSName object is not released\");\n-        }\n","filename":"test\/jdk\/sun\/security\/jgss\/GssNameCleanup.java","additions":12,"deletions":15,"binary":false,"changes":27,"status":"modified"}]}