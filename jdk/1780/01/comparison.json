{"files":[{"patch":"@@ -1854,1 +1854,0 @@\n-\n@@ -2130,0 +2129,2 @@\n+  log_trace(class, sealed)(\"Calling GetPermittedSubclasses for %s type %s\",\n+                           ik->is_sealed() ? \"sealed\" : \"non-sealed\", ik->external_name());\n@@ -2134,0 +2135,3 @@\n+\n+    log_trace(class, sealed)(\" - sealed class has %d permitted subclasses\", length);\n+\n@@ -2145,0 +2149,8 @@\n+        if (log_is_enabled(Trace, class, sealed)) {\n+          stringStream ss;\n+          char* permitted_subclass = ik->constants()->klass_name_at(cp_index)->as_C_string();\n+          ss.print(\" - resolution of permitted subclass %s failed: \", permitted_subclass);\n+          java_lang_Throwable::print(PENDING_EXCEPTION, &ss);\n+          log_trace(class, sealed)(\"%s\", ss.as_string());\n+        }\n+\n@@ -2150,0 +2162,1 @@\n+        log_trace(class, sealed)(\" - [%d] = %s\", count, k->external_name());\n@@ -2153,0 +2166,4 @@\n+      \/\/ we had invalid entries so we need to compact the array\n+      log_trace(class, sealed)(\" - compacting array from length %d to %d\",\n+                               length, count);\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"}]}