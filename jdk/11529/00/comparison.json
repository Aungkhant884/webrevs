{"files":[{"patch":"@@ -1780,0 +1780,1 @@\n+  DEBUG_ONLY(Unique_Node_List worklist_verify;)\n@@ -1788,0 +1789,1 @@\n+    DEBUG_ONLY(worklist_verify.push(n);)\n@@ -1801,0 +1803,1 @@\n+  DEBUG_ONLY(verify_analyze(worklist_verify);)\n@@ -1803,0 +1806,47 @@\n+#ifdef ASSERT\n+\/\/ For every node n on verify list, check if type(n) == n->Value()\n+\/\/ We have a list of exceptions, see comments in code.\n+void PhaseCCP::verify_analyze(Unique_Node_List& worklist_verify) {\n+  bool failure = false;\n+  while (worklist_verify.size()) {\n+    Node* n = worklist_verify.pop();\n+    const Type* told = type(n);\n+    const Type* tnew = n->Value(this);\n+    if (told != tnew) {\n+      \/\/ Check special cases that are ok\n+      if (told->isa_int() && tnew->isa_int() ) {\n+        const TypeInt *t0 = told->is_int();\n+        const TypeInt *t1 = tnew->is_int();\n+        if (t0->_lo == t1->_lo && t0->_hi == t1->_hi) {\n+          continue; \/\/ ignore int widen\n+        }\n+      } else if (told->isa_long() && tnew->isa_long() ) {\n+        const TypeLong *t0 = told->is_long();\n+        const TypeLong *t1 = tnew->is_long();\n+        if (t0->_lo == t1->_lo && t0->_hi == t1->_hi) {\n+          continue; \/\/ ignore long widen\n+        }\n+      }\n+      if (n->is_Load()) {\n+        \/\/ MemNode::can_see_stored_value looks up through many memory nodes,\n+        \/\/ which means we would need to notify modifications from far up in\n+        \/\/ the inputs all the way down to the LoadNode. We don't do that.\n+        continue;\n+      }\n+      tty->print_cr(\"Missed optimization (PhaseCCP):\");\n+      n->dump_bfs(1, 0, \"\");\n+      tty->print_cr(\"Current type:\");\n+      told->dump_on(tty);\n+      tty->print_cr(\"\");\n+      tty->print_cr(\"Optimized type:\");\n+      tnew->dump_on(tty);\n+      tty->print_cr(\"\");\n+      failure = true;\n+    }\n+  }\n+  \/\/ If you get this assert, check if the node was notified of changes in\n+  \/\/ the inputs. See PhaseCCP::push_child_nodes_to_worklist\n+  assert(!failure, \"Missed optimization opportunity in PhaseCCP\");\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -606,0 +606,4 @@\n+#ifdef ASSERT\n+  \/\/ For every node n on verify list, check if type(n) == n->Value()\n+  void verify_analyze(Unique_Node_List& worklist_verify);\n+#endif\n","filename":"src\/hotspot\/share\/opto\/phaseX.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}