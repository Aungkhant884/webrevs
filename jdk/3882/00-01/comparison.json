{"files":[{"patch":"@@ -24,1 +24,2 @@\n-\/* @test\n+\/*\n+ * @test\n@@ -27,1 +28,0 @@\n- * @modules java.base\/jdk.internal.misc java.base\/jdk.internal.org.objectweb.asm\n@@ -34,0 +34,3 @@\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n@@ -38,2 +41,0 @@\n-import jdk.internal.org.objectweb.asm.*;\n-import static jdk.internal.org.objectweb.asm.Opcodes.*;\n@@ -43,0 +44,5 @@\n+final class MyClass {\n+    MyClass() {}\n+    public Object get(int i) { return null; }\n+}\n+\n@@ -45,1 +51,0 @@\n-    static final String CLASS_NAME = \"MyClass\";\n@@ -48,1 +53,1 @@\n-        byte[] classBytes = dumpClass();\n+        byte[] classBytes = readClassFile(\"MyClass.class\");\n@@ -51,1 +56,1 @@\n-        if (!WhiteBox.getWhiteBox().isClassAlive(CLASS_NAME)) {\n+        if (!WhiteBox.getWhiteBox().isClassAlive(\"MyClass\")) {\n@@ -56,21 +61,4 @@\n-    \/*\n-     * Constructs bytecode for the following class:\n-     * public class MyClass {\n-     *     MyClass() {}\n-     *     public Object get(int i) { return null; }\n-     * }\n-     *\/\n-    public static byte[] dumpClass() {\n-        ClassWriter cw = new ClassWriter(0);\n-        MethodVisitor mv;\n-\n-        cw.visit(52, ACC_SUPER | ACC_PUBLIC, CLASS_NAME, null, \"java\/lang\/Object\", null);\n-        {\n-            mv = cw.visitMethod(0, \"<init>\", \"()V\", null, null);\n-            mv.visitCode();\n-            mv.visitVarInsn(ALOAD, 0);\n-            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n-        }\n+    static byte[] readClassFile(String classFileName) throws Exception {\n+        File classFile = new File(System.getProperty(\"test.classes\") + File.separator + classFileName);\n+        try (FileInputStream in = new FileInputStream(classFile);\n+             ByteArrayOutputStream out = new ByteArrayOutputStream())\n@@ -78,6 +66,5 @@\n-            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"get\", \"(I)Ljava\/lang\/Object;\", null, null);\n-            mv.visitCode();\n-            mv.visitInsn(ACONST_NULL);\n-            mv.visitInsn(ARETURN);\n-            mv.visitMaxs(1, 1);\n-            mv.visitEnd();\n+            int b;\n+            while ((b = in.read()) != -1) {\n+                out.write(b);\n+            }\n+            return out.toByteArray();\n@@ -85,2 +72,0 @@\n-        cw.visitEnd();\n-        return cw.toByteArray();\n","filename":"test\/hotspot\/jtreg\/runtime\/whitebox\/TestHiddenClassIsAlive.java","additions":21,"deletions":36,"binary":false,"changes":57,"status":"modified"}]}