{"files":[{"patch":"@@ -183,0 +183,19 @@\n+      } else if (k->is_instance_klass()) {\n+        \/\/ Need special handling for hidden classes because the JVM\n+        \/\/ appends \"+<hex-address>\" to hidden class names.\n+        InstanceKlass *ik = InstanceKlass::cast(k);\n+        if (ik->is_hidden()) {\n+          ResourceMark rm;\n+          char* k_name = ksym->as_C_string();\n+          \/\/ Find the first '+' char and truncate the string at that point.\n+          \/\/ NOTE: This will not work correctly if the original hidden class\n+          \/\/ name contains a '+'.\n+          char* plus_char = strchr(k_name, '+');\n+          if (plus_char != NULL) {\n+            *plus_char = 0;\n+            char* c_name = _name->as_C_string();\n+            if (strcmp(c_name, k_name) == 0) {\n+              _count++;\n+            }\n+          }\n+        }\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8266496\n+ * @summary Test that Whitebox.isClassAlive() works with hidden classes.\n+ * @modules java.base\/jdk.internal.misc java.base\/jdk.internal.org.objectweb.asm\n+ * @library \/test\/lib\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI TestHiddenClassIsAlive\n+ *\/\n+\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodHandles.Lookup;\n+import java.lang.invoke.MethodType;\n+import jdk.internal.org.objectweb.asm.*;\n+import static jdk.internal.org.objectweb.asm.Opcodes.*;\n+\n+import sun.hotspot.WhiteBox;\n+\n+public class TestHiddenClassIsAlive {\n+\n+    static final String CLASS_NAME = \"MyClass\";\n+\n+    public static void main(String[] args) throws Throwable {\n+        byte[] classBytes = dumpClass();\n+        Lookup lookup = MethodHandles.lookup();\n+        Class<?> c = lookup.defineHiddenClass(classBytes, true).lookupClass();\n+        if (!WhiteBox.getWhiteBox().isClassAlive(CLASS_NAME)) {\n+            throw new RuntimeException(\"Hidden class should be alive\");\n+        }\n+    }\n+\n+    \/*\n+     * Constructs bytecode for the following class:\n+     * public class MyClass {\n+     *     MyClass() {}\n+     *     public Object get(int i) { return null; }\n+     * }\n+     *\/\n+    public static byte[] dumpClass() {\n+        ClassWriter cw = new ClassWriter(0);\n+        MethodVisitor mv;\n+\n+        cw.visit(52, ACC_SUPER | ACC_PUBLIC, CLASS_NAME, null, \"java\/lang\/Object\", null);\n+        {\n+            mv = cw.visitMethod(0, \"<init>\", \"()V\", null, null);\n+            mv.visitCode();\n+            mv.visitVarInsn(ALOAD, 0);\n+            mv.visitMethodInsn(INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n+            mv.visitInsn(RETURN);\n+            mv.visitMaxs(1, 1);\n+            mv.visitEnd();\n+        }\n+        {\n+            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"get\", \"(I)Ljava\/lang\/Object;\", null, null);\n+            mv.visitCode();\n+            mv.visitInsn(ACONST_NULL);\n+            mv.visitInsn(ARETURN);\n+            mv.visitMaxs(1, 1);\n+            mv.visitEnd();\n+        }\n+        cw.visitEnd();\n+        return cw.toByteArray();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/whitebox\/TestHiddenClassIsAlive.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}