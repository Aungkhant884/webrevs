[{"commit":{"message":"Fixing infinite loop where a binding pattern is replaced with a binding pattern for the same type."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"}],"sha":"a6ba602b5d809a3895095f92a87d53ccca7d1f9b"},{"commit":{"message":"Reflecting review comments."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"}],"sha":"4a70b8d9710a21a7c230fe747af3f4f7ba6a388a"},{"commit":{"message":"Fixing exhaustiveness for unsealed supertype pattern."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java"},{"filename":"test\/langtools\/tools\/javac\/patterns\/Exhaustiveness.java"}],"sha":"857980847e21aee0dee4665f19c1a8a54cff4973"},{"commit":{"message":"No need to enable features after error reported."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java"}],"sha":"bb26b52268c25863ba358843441d4c4352f877fd"},{"commit":{"message":"SwitchBootstraps.typeSwitch should not initialize enum classes."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symtab.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Names.java"},{"filename":"test\/jdk\/java\/lang\/runtime\/SwitchBootstrapsTest.java"}],"sha":"c36e8853466346508ec0594219af7d996a56e61b"},{"commit":{"message":"A prototype of avoiding enum initialization."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java"},{"filename":"test\/jdk\/java\/lang\/runtime\/SwitchBootstrapsTest.java"}],"sha":"118dd03962895bc6562fb963b0d8d8c1fbc4e117"}]