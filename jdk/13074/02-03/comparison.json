{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -57,1 +58,0 @@\n-    private static final MethodHandle LAZY_DO_ENUM_SWITCH;\n@@ -64,3 +64,2 @@\n-                                           MethodType.methodType(int.class, Enum.class, int.class, Object[].class));\n-            LAZY_DO_ENUM_SWITCH = LOOKUP.findStatic(SwitchBootstraps.class, \"lazyDoEnumSwitch\",\n-                                                    MethodType.methodType(int.class, Enum.class, int.class, Object[].class, MethodHandles.Lookup.class, Class.class, MutableCallSite.class));\n+                                           MethodType.methodType(int.class, Enum.class, int.class, Object[].class,\n+                                                                 MethodHandles.Lookup.class, Class.class, ResolvedEnumLabels.class));\n@@ -252,3 +251,0 @@\n-        MutableCallSite result =\n-                new MutableCallSite(invocationType);\n-\n@@ -256,1 +252,1 @@\n-                MethodHandles.insertArguments(LAZY_DO_ENUM_SWITCH, 2, labels, lookup, enumClass, result);\n+                MethodHandles.insertArguments(DO_ENUM_SWITCH, 2, labels, lookup, enumClass, new ResolvedEnumLabels());\n@@ -259,3 +255,1 @@\n-        result.setTarget(temporary);\n-\n-        return result;\n+        return new ConstantCallSite(temporary);\n@@ -280,16 +274,0 @@\n-    private static int lazyDoEnumSwitch(Enum<?> target, int startIndex, Object[] labels, MethodHandles.Lookup lookup, Class<?> enumClass, MutableCallSite callSite) throws Throwable {\n-        if (target == null) {\n-            return -1;\n-        }\n-\n-        labels = Stream.of(labels).map(l -> convertEnumConstants(lookup, enumClass, l)).toArray();\n-\n-        MethodHandle optimized =\n-                MethodHandles.insertArguments(DO_ENUM_SWITCH, 2, (Object) labels);\n-        optimized = optimized.asType(callSite.type());\n-\n-        callSite.setTarget(optimized);\n-\n-        return (int) optimized.invoke(target, startIndex);\n-    }\n-\n@@ -321,2 +299,4 @@\n-    private static int doEnumSwitch(Enum<?> target, int startIndex, Object[] labels) {\n-        Objects.checkIndex(startIndex, labels.length + 1);\n+    private static int doEnumSwitch(Enum<?> target, int startIndex, Object[] unresolvedLabels,\n+                                    MethodHandles.Lookup lookup, Class<?> enumClass,\n+                                    ResolvedEnumLabels resolvedLabels) {\n+        Objects.checkIndex(startIndex, unresolvedLabels.length + 1);\n@@ -327,0 +307,8 @@\n+        if (resolvedLabels.resolvedLabels == null) {\n+            resolvedLabels.resolvedLabels = Stream.of(unresolvedLabels)\n+                                                  .map(l -> convertEnumConstants(lookup, enumClass, l))\n+                                                  .toArray();\n+        }\n+\n+        Object[] labels = resolvedLabels.resolvedLabels;\n+\n@@ -342,0 +330,4 @@\n+    private static final class ResolvedEnumLabels {\n+        @Stable\n+        public Object[] resolvedLabels;\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":21,"deletions":29,"binary":false,"changes":50,"status":"modified"}]}