{"files":[{"patch":"@@ -1242,0 +1242,4 @@\n+    \/* Setting this flag is needed for a very special case. See the reference in findThread(). *\/\n+    gdata->handlingVMDeath = JNI_TRUE;\n+\n+\n@@ -1296,0 +1300,2 @@\n+    gdata->handlingVMDeath = JNI_FALSE;\n+\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/eventHandler.c","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -257,2 +257,16 @@\n-         * Search runningThreads list. The TLS lookup may have failed because the\n-         * thread has terminated, but the ThreadNode may still be present.\n+         * Normally we can assume that a thread with no TLS will never be in the runningThreads\n+         * list. This is because we always set the TLS when adding to runningThreads.\n+         * However, when a thread exits, its TLS is automatically cleared. Normally this\n+         * is not a problem because the debug agent will first get a THREAD_END event,\n+         * and that will cause the thread to be removed from runningThreads, thus we\n+         * avoid this situation of having a thread in runningThreads, but with no TLS.\n+         *\n+         * However... there is one exception to this. While handling VM_DEATH, the first thing\n+         * the debug agent does is clear all the callbacks. This means we will no longer\n+         * get THREAD_END events as threads exit. This means we might find threads on\n+         * runningThreads with no TLS during VM_DEATH. Essentially the THREAD_END that\n+         * would normally have resulted in removing the thread from runningThreads is\n+         * missed, so the thread remains on runningThreads.\n+         *\n+         * The end result of all this is that if the TLS lookup failed, we still need to\n+         * check if the thread is on runningThreads, but only if we are handling VM_DEATH.\n@@ -260,3 +274,12 @@\n-        if ( node == NULL ) {\n-            if ( list == NULL || list == &runningThreads ) {\n-                node = nonTlsSearch(getEnv(), &runningThreads, thread);\n+        if ( !gdata->handlingVMDeath ) {\n+            \/* The thread better not be on runningThreads is the TLS lookup failed. *\/\n+            JDI_ASSERT(!nonTlsSearch(getEnv(), &runningThreads, thread));\n+        } else {\n+            \/*\n+             * Search the runningThreads list. The TLS lookup may have failed because the\n+             * thread has terminated, but we never got the THREAD_END event.\n+             *\/\n+            if ( node == NULL ) {\n+                if ( list == NULL || list == &runningThreads ) {\n+                    node = nonTlsSearch(getEnv(), &runningThreads, thread);\n+                }\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":28,"deletions":5,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -136,2 +136,5 @@\n-     \/* Indication that the agent has been loaded *\/\n-     jboolean isLoaded;\n+    \/* Indication that the agent has been loaded *\/\n+    jboolean isLoaded;\n+\n+    \/* Indication that we are currently handling VM_DEATH event. *\/\n+    jboolean handlingVMDeath;\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}