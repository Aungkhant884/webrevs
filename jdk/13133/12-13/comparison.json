{"files":[{"patch":"@@ -42,1 +42,1 @@\n-\/\/ The TestedThread just mimics some thread activity, but it is important\n+\/\/ The TestTask mimics some thread activity, but it is important\n@@ -45,1 +45,2 @@\n-class TestedThread extends Thread {\n+class TestTask implements Runnable {\n+    private String name;\n@@ -50,2 +51,2 @@\n-    public TestedThread(String name) {\n-        super(name);\n+    public TestTask(String name) {\n+        this.name = name;\n@@ -58,0 +59,2 @@\n+        System.out.println(\"# Started: \" + name);\n+\n@@ -89,3 +92,3 @@\n- *  - start the platform launcher thread which starts N of virtual thread\n- *  - enable notifyJvmti events mode after about hapf of virtual thread started\n- *  - then shut the virtual threads down\n+ *  - start N virtual thread\n+ *  - enable notifyJvmti events mode\n+ *  - shut the virtual threads down\n@@ -113,1 +116,1 @@\n-            throw new RuntimeException(\"Interruption in TestedThread.sleep: \\n\\t\" + e);\n+            throw new RuntimeException(\"Interruption in TestTask.sleep: \\n\\t\" + e);\n@@ -117,2 +120,2 @@\n-    static TestedThread[] threads = new TestedThread[VTHREADS_CNT];\n-    static Thread vts[] = new Thread[VTHREADS_CNT];\n+    static TestTask[] tasks = new TestTask[VTHREADS_CNT];\n+    static Thread vthreads[] = new Thread[VTHREADS_CNT];\n@@ -120,7 +123,5 @@\n-    static private void startThread(int i) {\n-        String name = \"TestedThread\" + i;\n-        TestedThread thread = new TestedThread(name);\n-        vts[i] = Thread.ofVirtual().name(name).start(thread);\n-        thread.ensureReady();\n-        threads[i] = thread;\n-        log(\"# Java: started vthread: \" + name);\n+    static private void startVirtualThread(int i) {\n+        String name = \"TestTask\" + i;\n+        TestTask task = new TestTask(name);\n+        vthreads[i] = Thread.ofVirtual().name(name).start(task);\n+        tasks[i] = task;\n@@ -129,1 +130,1 @@\n-    static synchronized private void startThreads() {\n+    static private void startVirtualThreads() {\n@@ -132,2 +133,1 @@\n-            sleep(1);\n-            startThread(i);\n+            startVirtualThread(i);\n@@ -137,1 +137,1 @@\n-    static private synchronized void finishThreads() {\n+    static private void finishVirtualThreads() {\n@@ -140,3 +140,3 @@\n-                TestedThread thread = threads[i];\n-                thread.letFinish();\n-                vts[i].join();\n+                tasks[i].ensureReady();\n+                tasks[i].letFinish();\n+                vthreads[i].join();\n@@ -154,1 +154,1 @@\n-        log(\"# main: SetNotifyJvmtiEvents: #\" + iter + \" enable: \" + enable);\n+        log(\"\\n# main: SetNotifyJvmtiEvents: #\" + iter + \" enable: \" + enable);\n@@ -172,2 +172,1 @@\n-        Thread tt = Thread.ofPlatform().name(\"StartThreadsTest\").start(ToggleNotifyJvmtiTest::startThreads);\n-        sleep(20); \/\/ give some time for launcher thread to start\n+        startVirtualThreads();\n@@ -177,1 +176,0 @@\n-        sleep(20); \/\/ give some time for virtual threads to execute\n@@ -179,3 +177,1 @@\n-        finishThreads();\n-        tt.join();\n-        sleep(20); \/\/ give some time for virtual threads to finish\n+        finishVirtualThreads();\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ToggleNotifyJvmtiTest\/ToggleNotifyJvmtiTest.java","additions":27,"deletions":31,"binary":false,"changes":58,"status":"modified"}]}