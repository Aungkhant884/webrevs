{"files":[{"patch":"@@ -1534,0 +1534,1 @@\n+  static bool _whitebox_used;\n@@ -1554,1 +1555,1 @@\n-    } else { \n+    } else {\n@@ -1569,0 +1570,8 @@\n+        oop  vt_oop = jt->vthread();\n+        if (vt_oop != nullptr && java_lang_VirtualThread::is_instance(vt_oop)) {\n+          \/\/ restore VTMS transition bit in j.l.Thread object\n+          java_lang_Thread::set_is_in_VTMS_transition(vt_oop, true);\n+        }\n+      }\n+      if (_whitebox_used) {\n+        correct_jvmti_thread_state(jt); \/\/ needed in testing environment only\n@@ -1570,1 +1579,0 @@\n-      correct_jvmti_thread_state(jt);\n@@ -1578,1 +1586,5 @@\n-  VM_SetNotifyJvmtiEventsMode(bool enable) : _enable(enable) {}\n+  VM_SetNotifyJvmtiEventsMode(bool enable) : _enable(enable) {\n+    if (!enable) {\n+      _whitebox_used = true; \/\/ disabling is available via WhiteBox only\n+    }\n+  }\n@@ -1588,0 +1600,2 @@\n+bool VM_SetNotifyJvmtiEventsMode::_whitebox_used = false;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-    static private synchronized void startThread(int i) {\n+    static private void startThread(int i) {\n@@ -129,1 +129,1 @@\n-    static private void startThreads() {\n+    static synchronized private void startThreads() {\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ToggleNotifyJvmtiTest\/ToggleNotifyJvmtiTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}