{"files":[{"patch":"@@ -404,3 +404,1 @@\n-#ifndef PRODUCT\n-\n-extern \"C\" void blob(CodeBlob* cb) {\n+extern \"C\" JNIEXPORT void blob(CodeBlob* cb) {\n@@ -412,1 +410,1 @@\n-extern \"C\" void dump_vtable(address p) {\n+extern \"C\" JNIEXPORT void dump_vtable(address p) {\n@@ -419,1 +417,1 @@\n-extern \"C\" void nm(intptr_t p) {\n+extern \"C\" JNIEXPORT void nm(intptr_t p) {\n@@ -431,1 +429,1 @@\n-extern \"C\" void disnm(intptr_t p) {\n+extern \"C\" JNIEXPORT void disnm(intptr_t p) {\n@@ -446,1 +444,1 @@\n-extern \"C\" void printnm(intptr_t p) {\n+extern \"C\" JNIEXPORT void printnm(intptr_t p) {\n@@ -458,1 +456,1 @@\n-extern \"C\" void universe() {\n+extern \"C\" JNIEXPORT void universe() {\n@@ -464,1 +462,1 @@\n-extern \"C\" void verify() {\n+extern \"C\" JNIEXPORT void verify() {\n@@ -481,1 +479,1 @@\n-extern \"C\" void pp(void* p) {\n+extern \"C\" JNIEXPORT void pp(void* p) {\n@@ -494,4 +492,5 @@\n-extern \"C\" void pa(intptr_t p)   { ((AllocatedObj*) p)->print(); }\n-extern \"C\" void findpc(intptr_t x);\n-\n-#endif \/\/ !PRODUCT\n+#ifndef PRODUCT\n+\/\/ AllocatedObj in allocation.hpp is not defined for PRODUCT\n+extern \"C\" JNIEXPORT void pa(intptr_t p)   { ((AllocatedObj*) p)->print(); }\n+#endif\n+extern \"C\" JNIEXPORT void findpc(intptr_t x);\n@@ -499,1 +498,1 @@\n-extern \"C\" void ps() { \/\/ print stack\n+extern \"C\" JNIEXPORT void ps() { \/\/ print stack\n@@ -503,1 +502,0 @@\n-\n@@ -531,1 +529,1 @@\n-extern \"C\" void pfl() {\n+extern \"C\" JNIEXPORT void pfl() {\n@@ -543,3 +541,1 @@\n-#ifndef PRODUCT\n-\n-extern \"C\" void psf() { \/\/ print stack frames\n+extern \"C\" JNIEXPORT void psf() { \/\/ print stack frames\n@@ -559,1 +555,1 @@\n-extern \"C\" void threads() {\n+extern \"C\" JNIEXPORT void threads() {\n@@ -565,1 +561,1 @@\n-extern \"C\" void psd() {\n+extern \"C\" JNIEXPORT void psd() {\n@@ -570,1 +566,0 @@\n-#endif \/\/ !PRODUCT\n@@ -572,1 +567,1 @@\n-extern \"C\" void pss() { \/\/ print all stacks\n+extern \"C\" JNIEXPORT void pss() { \/\/ print all stacks\n@@ -578,1 +573,1 @@\n-#ifndef PRODUCT\n+\/\/ #ifndef PRODUCT\n@@ -580,1 +575,1 @@\n-extern \"C\" void debug() {               \/\/ to set things up for compiler debugging\n+extern \"C\" JNIEXPORT void debug() {               \/\/ to set things up for compiler debugging\n@@ -582,1 +577,1 @@\n-  WizardMode = true;\n+  NOT_PRODUCT(WizardMode = true;)\n@@ -589,1 +584,1 @@\n-extern \"C\" void ndebug() {              \/\/ undo debug()\n+extern \"C\" JNIEXPORT void ndebug() {              \/\/ undo debug()\n@@ -597,1 +592,1 @@\n-extern \"C\" void flush()  {\n+extern \"C\" JNIEXPORT void flush()  {\n@@ -602,1 +597,1 @@\n-extern \"C\" void events() {\n+extern \"C\" JNIEXPORT void events() {\n@@ -607,1 +602,1 @@\n-extern \"C\" Method* findm(intptr_t pc) {\n+extern \"C\" JNIEXPORT Method* findm(intptr_t pc) {\n@@ -614,1 +609,1 @@\n-extern \"C\" nmethod* findnm(intptr_t addr) {\n+extern \"C\" JNIEXPORT nmethod* findnm(intptr_t addr) {\n@@ -621,1 +616,1 @@\n-extern \"C\" void hsfind(intptr_t x) {\n+extern \"C\" JNIEXPORT void hsfind(intptr_t x) {\n@@ -627,1 +622,1 @@\n-extern \"C\" void find(intptr_t x) {\n+extern \"C\" JNIEXPORT void find(intptr_t x) {\n@@ -633,1 +628,1 @@\n-extern \"C\" void findpc(intptr_t x) {\n+extern \"C\" JNIEXPORT void findpc(intptr_t x) {\n@@ -640,1 +635,1 @@\n-extern \"C\" void findbcp(intptr_t method, intptr_t bcp) {\n+extern \"C\" JNIEXPORT void findbcp(intptr_t method, intptr_t bcp) {\n@@ -684,1 +679,2 @@\n-extern \"C\" void pns(void* sp, void* fp, void* pc) { \/\/ print native stack\n+#ifndef PRODUCT\n+extern \"C\" JNIEXPORT void pns(void* sp, void* fp, void* pc) { \/\/ print native stack\n@@ -701,1 +697,1 @@\n-extern \"C\" void pns2() { \/\/ print native stack\n+extern \"C\" JNIEXPORT void pns2() { \/\/ print native stack\n@@ -713,0 +709,1 @@\n+#endif\n@@ -714,1 +711,0 @@\n-#endif \/\/ !PRODUCT\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":35,"deletions":39,"binary":false,"changes":74,"status":"modified"}]}