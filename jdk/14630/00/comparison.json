{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -3924,0 +3924,1 @@\n+    @Override\n@@ -3952,6 +3953,3 @@\n-        for (int i = 0; i < len1; i++) {\n-            int a = m1[i];\n-            int b = m2[i];\n-            if (a != b)\n-                return ((a & LONG_MASK) < (b & LONG_MASK)) ? -1 : 1;\n-        }\n+        int i = Arrays.mismatch(m1, 0, len1, m2, 0, len2);\n+        if (i != -1)\n+            return ((m1[i] & LONG_MASK) < (m2[i] & LONG_MASK)) ? -1 : 1;\n@@ -4011,0 +4009,1 @@\n+    @Override\n@@ -4022,11 +4021,1 @@\n-        int[] m = mag;\n-        int len = m.length;\n-        int[] xm = xInt.mag;\n-        if (len != xm.length)\n-            return false;\n-\n-        for (int i = 0; i < len; i++)\n-            if (xm[i] != m[i])\n-                return false;\n-\n-        return true;\n+        return Arrays.equals(mag, 0, mag.length, xInt.mag, 0, xInt.mag.length);\n@@ -4061,3 +4050,1 @@\n-     * Returns the hash code for this BigInteger.\n-     *\n-     * @return hash code for this BigInteger.\n+     * {@return the hash code for this BigInteger}\n@@ -4065,0 +4052,1 @@\n+    @Override\n@@ -4066,6 +4054,1 @@\n-        int hashCode = 0;\n-\n-        for (int i=0; i < mag.length; i++)\n-            hashCode = (int)(31*hashCode + (mag[i] & LONG_MASK));\n-\n-        return hashCode * signum;\n+        return Arrays.hashCode(mag) * signum;\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":10,"deletions":27,"binary":false,"changes":37,"status":"modified"}]}