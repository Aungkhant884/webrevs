{"files":[{"patch":"@@ -73,1 +73,1 @@\n-    __ incrementw(Address(r16));\n+    __ increment(Address(r16));\n@@ -148,0 +148,1 @@\n+\n@@ -162,1 +163,1 @@\n-    __ incrementw(Address(r10));\n+    __ increment(Address(r10));\n","filename":"src\/hotspot\/cpu\/aarch64\/vtableStubs_aarch64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    __ lwz(R12_scratch2, offs, R11_scratch1);\n+    __ ld(R12_scratch2, offs, R11_scratch1);\n@@ -78,1 +78,1 @@\n-    __ stw(R12_scratch2, offs, R11_scratch1);\n+    __ std(R12_scratch2, offs, R11_scratch1);\n@@ -144,0 +144,1 @@\n+\n@@ -163,1 +164,1 @@\n-    __ lwz(R12_scratch2, offs, R11_scratch1);\n+    __ ld(R12_scratch2, offs, R11_scratch1);\n@@ -165,1 +166,1 @@\n-    __ stw(R12_scratch2, offs, R11_scratch1);\n+    __ std(R12_scratch2, offs, R11_scratch1);\n","filename":"src\/hotspot\/cpu\/ppc\/vtableStubs_ppc_64.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    __ add2mem_32(Address(Z_R1_scratch), 1, Z_method);\n+    __ add2mem_64(Address(Z_R1_scratch), 1, Z_method);\n@@ -161,0 +161,1 @@\n+\n@@ -182,1 +183,1 @@\n-    __ add2mem_32(Address(Z_R1_scratch), 1, Z_method);\n+    __ add2mem_64(Address(Z_R1_scratch), 1, Z_method);\n","filename":"src\/hotspot\/cpu\/s390\/vtableStubs_s390.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    __ incrementl(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n+    __ incrementq(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n@@ -159,0 +159,1 @@\n+\n@@ -174,1 +175,1 @@\n-    __ incrementl(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n+    __ incrementq(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n","filename":"src\/hotspot\/cpu\/x86\/vtableStubs_x86_32.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    __ incrementl(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n+    __ incrementq(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n@@ -151,0 +151,1 @@\n+\n@@ -166,1 +167,1 @@\n-    __ incrementl(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n+    __ incrementq(ExternalAddress((address) SharedRuntime::nof_megamorphic_calls_addr()));\n","filename":"src\/hotspot\/cpu\/x86\/vtableStubs_x86_64.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -537,1 +537,1 @@\n-    tty->print_cr (\"  compiled_invocation_count:    \" INT64_FORMAT_W(11), compiled_invocation_count64());\n+    tty->print_cr (\"  compiled_invocation_count:    \" INT64_FORMAT_W(11), compiled_invocation_count());\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,16 +101,1 @@\n-  union {\n-    int64_t _compiled_invocation_count64;\n-#if defined(VM_LITTLE_ENDIAN)\n-    struct {\n-      int     _compiled_invocation_count;  \/\/ Number of nmethod invocations so far (for perf. debugging)\n-                                           \/\/ Must preserve this as int. Is used outside the jdk by SA.\n-      int     _cic_high;\n-    };\n-#else\n-    struct {\n-      int     _cic_high;\n-      int     _compiled_invocation_count;  \/\/ Number of nmethod invocations so far (for perf. debugging)\n-                                           \/\/ Must preserve this as int. Is used outside the jdk by SA.\n-    };\n-#endif\n-  };\n+  int64_t _compiled_invocation_count;\n@@ -454,2 +439,2 @@\n-  int64_t  compiled_invocation_count64() const  { return _compiled_invocation_count64;}\n-  void set_compiled_invocation_count(int count) { _compiled_invocation_count64 = (int64_t)count; }\n+  int64_t  compiled_invocation_count() const    { return _compiled_invocation_count;}\n+  void set_compiled_invocation_count(int count) { _compiled_invocation_count = (int64_t)count; }\n@@ -458,1 +443,1 @@\n-  int64_t  compiled_invocation_count64() const  { return 0; }\n+  int64_t  compiled_invocation_count() const    { return 0; }\n@@ -725,1 +710,1 @@\n-  static ByteSize compiled_invocation_counter_offset64() { return byte_offset_of(Method, _compiled_invocation_count64); }\n+  static ByteSize compiled_invocation_counter_offset() { return byte_offset_of(Method, _compiled_invocation_count); }\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":5,"deletions":20,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1051,1 +1051,1 @@\n-        Node* adr2 = basic_plus_adr(adr1, adr1, in_bytes(Method::compiled_invocation_counter_offset64()));\n+        Node* adr2 = basic_plus_adr(adr1, adr1, in_bytes(Method::compiled_invocation_counter_offset()));\n","filename":"src\/hotspot\/share\/opto\/doCall.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,2 +101,2 @@\n-  return ((uint32_t)(*b)->invocation_count() + (*b)->compiled_invocation_count64())\n-       - ((uint32_t)(*a)->invocation_count() + (*a)->compiled_invocation_count64());\n+  return (uint32_t)(((*b)->invocation_count() + (*b)->compiled_invocation_count())\n+                   -((*a)->invocation_count() + (*a)->compiled_invocation_count()));\n@@ -154,1 +154,1 @@\n-  if ((uint32_t)m->invocation_count() + m->compiled_invocation_count64() >= 1 ) {\n+  if (m->invocation_count() + m->compiled_invocation_count() >= 1 ) {\n@@ -188,1 +188,1 @@\n-    uint64_t cic = m->compiled_invocation_count64();\n+    uint64_t cic = m->compiled_invocation_count();\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-int SharedRuntime::_nof_megamorphic_calls = 0;     \/\/ asm adaptations required\n+int64_t SharedRuntime::_nof_megamorphic_calls = 0;\n@@ -2229,1 +2229,1 @@\n-      uint64_t count = (uint64_t)method->compiled_invocation_count64();\n+      uint64_t count = (uint64_t)method->compiled_invocation_count();\n@@ -2293,1 +2293,1 @@\n-  int64_t mono_c = _nof_normal_calls - _nof_optimized_calls - (int64_t)_nof_megamorphic_calls;\n+  int64_t mono_c = _nof_normal_calls - _nof_optimized_calls - _nof_megamorphic_calls;\n@@ -2300,1 +2300,1 @@\n-  tty->print_cr(\"\\t\" INT32_FORMAT_W(12) \" (%4.0f%%) |  |- megamorphic      \", _nof_megamorphic_calls, percent((int64_t)_nof_megamorphic_calls, _nof_normal_calls));\n+  tty->print_cr(\"\\t\" INT64_FORMAT_W(12) \" (%4.0f%%) |  |- megamorphic      \", _nof_megamorphic_calls, percent(_nof_megamorphic_calls, _nof_normal_calls));\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-  static int     _nof_megamorphic_calls;         \/\/ total # of megamorphic calls (through vtable)\n+  static int64_t _nof_megamorphic_calls;         \/\/ total # of megamorphic calls (through vtable)\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -310,1 +310,0 @@\n-  nonproduct_nonstatic_field(Method,           _compiled_invocation_count,                    int)                                   \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}