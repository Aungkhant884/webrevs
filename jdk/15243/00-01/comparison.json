{"files":[{"patch":"@@ -154,8 +154,5 @@\n-      bool should_add =\n-        \/\/ We will skip any region that's currently used as an old GC\n-        \/\/ alloc region (we should not consider those for collection\n-        \/\/ before we fill them up). Otherwise the Old region must satisfy the liveness\n-        \/\/ condition and have a complete remembered set.\n-        !G1CollectedHeap::heap()->is_old_gc_alloc_region(r) &&\n-        G1CollectionSetChooser::region_occupancy_low_enough_for_evac(r->live_bytes()) &&\n-        r->rem_set()->is_complete();\n+      \/\/ Can not add a region without a remembered set to the candidates.\n+      assert(!r->rem_set()->is_updating(), \"must be\");\n+      if (!r->rem_set()->is_complete()) {\n+        return false;\n+      }\n@@ -163,0 +160,9 @@\n+      \/\/ Skip any region that is currently used as an old GC alloc region. We should\n+      \/\/ not consider those for collection before we fill them up as the effective\n+      \/\/ gain from them is small. I.e. we only actually reclaim from the filled part,\n+      \/\/ as the remainder is still eligible for allocation. These objects are also\n+      \/\/ likely to have already survived a few collections, so they might be longer\n+      \/\/ lived anyway.\n+      \/\/ Otherwise the Old region must satisfy the liveness condition.\n+      bool should_add = !G1CollectedHeap::heap()->is_old_gc_alloc_region(r) ||\n+                        G1CollectionSetChooser::region_occupancy_low_enough_for_evac(r->live_bytes());\n@@ -166,1 +172,0 @@\n-        \/\/ Clear remembered sets of not-used regions (if there is any).\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetChooser.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}