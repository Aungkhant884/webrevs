{"files":[{"patch":"@@ -111,1 +111,1 @@\n-  static int write_fully(int s, char* buf, int len);\n+  static int write_fully(int s, char* buf, size_t len);\n@@ -279,1 +279,1 @@\n-  const int max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n+  const size_t max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n@@ -288,2 +288,2 @@\n-  int off = 0;\n-  int left = max_len;\n+  size_t off = 0;\n+  size_t left = max_len;\n@@ -292,1 +292,1 @@\n-    int n;\n+    ssize_t n;\n@@ -296,1 +296,1 @@\n-    assert(n <= left, \"buffer was too small, impossible!\");\n+    assert(n <= checked_cast<ssize_t>(left), \"buffer was too small, impossible!\");\n@@ -417,1 +417,1 @@\n-int AixAttachListener::write_fully(int s, char* buf, int len) {\n+int AixAttachListener::write_fully(int s, char* buf, size_t len) {\n@@ -419,1 +419,1 @@\n-    int n = ::write(s, buf, len);\n+    ssize_t n = ::write(s, buf, len);\n","filename":"src\/hotspot\/os\/aix\/attachListener_aix.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2988,1 +2988,1 @@\n-  return strlen(buffer);\n+  return checked_cast<int>(strlen(buffer));\n@@ -3026,1 +3026,1 @@\n-  return t1 - t2;\n+  return primitive_compare(t1, t2);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  int len;\n+  size_t len;\n","filename":"src\/hotspot\/os\/aix\/os_perf_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  static int write_fully(int s, char* buf, int len);\n+  static int write_fully(int s, char* buf, size_t len);\n@@ -260,1 +260,1 @@\n-  const int max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n+  const size_t max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n@@ -269,2 +269,2 @@\n-  int off = 0;\n-  int left = max_len;\n+  size_t off = 0;\n+  size_t left = max_len;\n@@ -273,1 +273,1 @@\n-    int n;\n+    ssize_t n;\n@@ -275,1 +275,1 @@\n-    assert(n <= left, \"buffer was too small, impossible!\");\n+    assert(n <= checked_cast<ssize_t>(left), \"buffer was too small, impossible!\");\n@@ -283,1 +283,1 @@\n-    for (int i=0; i<n; i++) {\n+    for (ssize_t i=0; i<n; i++) {\n@@ -386,1 +386,1 @@\n-int BsdAttachListener::write_fully(int s, char* buf, int len) {\n+int BsdAttachListener::write_fully(int s, char* buf, size_t len) {\n@@ -388,1 +388,1 @@\n-    int n = ::write(s, buf, len);\n+    ssize_t n = ::write(s, buf, len);\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2211,1 +2211,1 @@\n-  int diff = filetime1.tv_sec - filetime2.tv_sec;\n+  int diff = primitive_compare(filetime1.tv_sec, filetime2.tv_sec);\n@@ -2213,1 +2213,1 @@\n-    return filetime1.tv_nsec - filetime2.tv_nsec;\n+    diff = primitive_compare(filetime1.tv_nsec, filetime2.tv_nsec);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-  static int write_fully(int s, char* buf, int len);\n+  static int write_fully(int s, char* buf, size_t len);\n@@ -260,1 +260,1 @@\n-  const int max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n+  const size_t max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n@@ -269,2 +269,2 @@\n-  int off = 0;\n-  int left = max_len;\n+  size_t off = 0;\n+  size_t left = max_len;\n@@ -273,1 +273,1 @@\n-    int n;\n+    ssize_t n;\n@@ -275,1 +275,1 @@\n-    assert(n <= left, \"buffer was too small, impossible!\");\n+    assert(n <= checked_cast<ssize_t>(left), \"buffer was too small, impossible!\");\n@@ -283,1 +283,1 @@\n-    for (int i=0; i<n; i++) {\n+    for (ssize_t i=0; i<n; i++) {\n@@ -386,1 +386,1 @@\n-int LinuxAttachListener::write_fully(int s, char* buf, int len) {\n+int LinuxAttachListener::write_fully(int s, char* buf, size_t len) {\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -404,1 +404,1 @@\n-  int rslt = syscall(SYS_gettid);\n+  long rslt = syscall(SYS_gettid);\n@@ -426,1 +426,1 @@\n-  set_processor_count(sysconf(_SC_NPROCESSORS_CONF));\n+  set_processor_count((int)sysconf(_SC_NPROCESSORS_CONF));\n@@ -745,1 +745,1 @@\n-  osthread->set_thread_id(os::current_thread_id());\n+  osthread->set_thread_id(checked_cast<OSThread::thread_id_t>(os::current_thread_id()));\n@@ -1268,1 +1268,1 @@\n-    int statlen;\n+    size_t statlen;\n@@ -1477,1 +1477,1 @@\n-      if (offset != nullptr) *offset = addr - (address)dlinfo.dli_saddr;\n+      if (offset != nullptr) *offset = pointer_delta_as_int(addr, (address)dlinfo.dli_saddr);\n@@ -1505,1 +1505,1 @@\n-      *offset = addr - (address)dlinfo.dli_fbase;\n+      *offset = pointer_delta_as_int(addr, (address)dlinfo.dli_fbase);\n@@ -1604,4 +1604,2 @@\n-  int diag_msg_max_length=ebuflen-strlen(ebuf);\n-  char* diag_msg_buf=ebuf+strlen(ebuf);\n-\n-  if (diag_msg_max_length==0) {\n+  size_t ebuf_len = strlen(ebuf);\n+  if (ebuflen <= ebuf_len) {\n@@ -1611,0 +1609,1 @@\n+  size_t diag_msg_max_length = ebuflen - ebuf_len;\n@@ -1612,0 +1611,1 @@\n+  char* diag_msg_buf=ebuf+ebuf_len;\n@@ -1894,1 +1894,1 @@\n-  int bytes;\n+  ssize_t bytes;\n@@ -2385,1 +2385,1 @@\n-        steal_ticks_perc = (double) steal_ticks_difference \/ total_ticks_difference;\n+        steal_ticks_perc = (double) steal_ticks_difference \/ (double)total_ticks_difference;\n@@ -2427,1 +2427,1 @@\n-      if (fgets(buf, buflen, fp)) {\n+      if (fgets(buf, (int)buflen, fp)) {\n@@ -2670,1 +2670,1 @@\n-        len = strlen(buf);\n+        len = checked_cast<int>(strlen(buf));\n@@ -2680,1 +2680,1 @@\n-          len = strlen(buf);\n+          len = (int)strlen(buf);\n@@ -2973,1 +2973,1 @@\n-  int retval = -1;\n+  long retval = -1;\n@@ -2992,1 +2992,1 @@\n-  return (retval == -1) ? retval : cpu;\n+  return (retval == -1) ? -1 : cpu;\n@@ -3145,12 +3145,12 @@\n-  const size_t NCPUS = 32768; \/\/ Since the buffer size computation is very obscure\n-                              \/\/ in libnuma (possible values are starting from 16,\n-                              \/\/ and continuing up with every other power of 2, but less\n-                              \/\/ than the maximum number of CPUs supported by kernel), and\n-                              \/\/ is a subject to change (in libnuma version 2 the requirements\n-                              \/\/ are more reasonable) we'll just hardcode the number they use\n-                              \/\/ in the library.\n-  const size_t BitsPerCLong = sizeof(long) * CHAR_BIT;\n-\n-  size_t cpu_num = processor_count();\n-  size_t cpu_map_size = NCPUS \/ BitsPerCLong;\n-  size_t cpu_map_valid_size =\n+  const int NCPUS = 32768; \/\/ Since the buffer size computation is very obscure\n+                           \/\/ in libnuma (possible values are starting from 16,\n+                           \/\/ and continuing up with every other power of 2, but less\n+                           \/\/ than the maximum number of CPUs supported by kernel), and\n+                           \/\/ is a subject to change (in libnuma version 2 the requirements\n+                           \/\/ are more reasonable) we'll just hardcode the number they use\n+                           \/\/ in the library.\n+  constexpr int BitsPerCLong = (int)sizeof(long) * CHAR_BIT;\n+\n+  int cpu_num = processor_count();\n+  int cpu_map_size = NCPUS \/ BitsPerCLong;\n+  int cpu_map_valid_size =\n@@ -3162,1 +3162,1 @@\n-  size_t node_num = get_existing_num_nodes();\n+  int node_num = get_existing_num_nodes();\n@@ -3168,1 +3168,1 @@\n-  for (size_t i = 0; i < node_num; i++) {\n+  for (int i = 0; i < node_num; i++) {\n@@ -3179,1 +3179,1 @@\n-      for (size_t m = 0; m < node_num; m++) {\n+      for (int m = 0; m < node_num; m++) {\n@@ -3201,2 +3201,2 @@\n-    if (numa_node_to_cpus(nindex_to_node()->at(i), cpu_map, cpu_map_size * sizeof(unsigned long)) != -1) {\n-      for (size_t j = 0; j < cpu_map_valid_size; j++) {\n+    if (numa_node_to_cpus(nindex_to_node()->at(i), cpu_map, cpu_map_size * (int)sizeof(unsigned long)) != -1) {\n+      for (int j = 0; j < cpu_map_valid_size; j++) {\n@@ -3204,1 +3204,1 @@\n-          for (size_t k = 0; k < BitsPerCLong; k++) {\n+          for (int k = 0; k < BitsPerCLong; k++) {\n@@ -3289,1 +3289,1 @@\n-  unsigned pages = size \/ page_sz;\n+  unsigned pages = checked_cast<unsigned>(size \/ page_sz);\n@@ -3339,1 +3339,1 @@\n-  size_t pages = size \/ page_sz;\n+  uintx pages = size \/ page_sz;\n@@ -3346,1 +3346,1 @@\n-  int loops = (pages + stripe - 1) \/ stripe;\n+  int loops = checked_cast<int>((pages + stripe - 1) \/ stripe);\n@@ -3353,1 +3353,1 @@\n-    int pages_to_query = (pages >= stripe) ? stripe : pages;\n+    uintx pages_to_query = (pages >= stripe) ? stripe : pages;\n@@ -3369,1 +3369,1 @@\n-    for (int vecIdx = 0; vecIdx < pages_to_query; vecIdx ++) {\n+    for (uintx vecIdx = 0; vecIdx < pages_to_query; vecIdx ++) {\n@@ -4396,2 +4396,2 @@\n-  clock_tics_per_sec = sysconf(_SC_CLK_TCK);\n-  int sys_pg_size = sysconf(_SC_PAGESIZE);\n+  clock_tics_per_sec = checked_cast<int>(sysconf(_SC_CLK_TCK));\n+  int sys_pg_size = checked_cast<int>(sysconf(_SC_PAGESIZE));\n@@ -4402,1 +4402,1 @@\n-  size_t page_size = (size_t) sys_pg_size;\n+  size_t page_size = sys_pg_size;\n@@ -4746,1 +4746,1 @@\n-  int cpus_size = sizeof(cpu_set_t);\n+  size_t cpus_size = sizeof(cpu_set_t);\n@@ -4770,1 +4770,1 @@\n-       int online_cpus = ::sysconf(_SC_NPROCESSORS_ONLN);\n+       int online_cpus = checked_cast<int>(::sysconf(_SC_NPROCESSORS_ONLN));\n@@ -4802,1 +4802,1 @@\n-    cpu_count = ::sysconf(_SC_NPROCESSORS_ONLN);\n+    cpu_count = checked_cast<int>(::sysconf(_SC_NPROCESSORS_ONLN));\n@@ -5164,1 +5164,1 @@\n-  int statlen;\n+  size_t statlen;\n@@ -5310,1 +5310,1 @@\n-  return strlen(buffer);\n+  return checked_cast<int>(strlen(buffer));\n@@ -5445,1 +5445,1 @@\n-  int diff = filetime1.tv_sec - filetime2.tv_sec;\n+  int diff = primitive_compare(filetime1.tv_sec, filetime2.tv_sec);\n@@ -5447,1 +5447,1 @@\n-    return filetime1.tv_nsec - filetime2.tv_nsec;\n+    diff = primitive_compare(filetime1.tv_nsec, filetime2.tv_nsec);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-  int n;\n+  ssize_t n;\n@@ -385,1 +385,1 @@\n-  *pkernelLoad = (kdiff \/ (double)tdiff);\n+  *pkernelLoad = ((double)kdiff \/ (double)tdiff);\n@@ -390,1 +390,1 @@\n-  user_load = (udiff \/ (double)tdiff);\n+  user_load = ((double)udiff \/ (double)tdiff);\n@@ -476,1 +476,1 @@\n-      *rate      = ( (double)(sw - lastSwitches) \/ d ) * 1000;\n+      *rate      = ( (double)(sw - lastSwitches) \/ (double)d ) * 1000;\n","filename":"src\/hotspot\/os\/linux\/os_perf_linux.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-static int membarrier(int cmd, unsigned int flags, int cpu_id) {\n+static long membarrier(int cmd, unsigned int flags, int cpu_id) {\n@@ -64,1 +64,1 @@\n-  int ret = membarrier(MEMBARRIER_CMD_QUERY, 0, 0);\n+  long ret = membarrier(MEMBARRIER_CMD_QUERY, 0, 0);\n@@ -81,1 +81,1 @@\n-  int s = membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0, 0);\n+  long s = membarrier(MEMBARRIER_CMD_PRIVATE_EXPEDITED, 0, 0);\n","filename":"src\/hotspot\/os\/linux\/systemMemoryBarrier_linux.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-static int futex(volatile int *addr, int futex_op, int op_arg) {\n+static long futex(volatile int *addr, int futex_op, int op_arg) {\n@@ -54,3 +54,3 @@\n-  int s = futex(&_futex_barrier,\n-                FUTEX_WAKE_PRIVATE,\n-                INT_MAX \/* wake a max of this many threads *\/);\n+  long s = futex(&_futex_barrier,\n+                 FUTEX_WAKE_PRIVATE,\n+                 INT_MAX \/* wake a max of this many threads *\/);\n@@ -68,3 +68,3 @@\n-    int s = futex(&_futex_barrier,\n-                  FUTEX_WAIT_PRIVATE,\n-                  barrier_tag \/* should be this tag *\/);\n+    long s = futex(&_futex_barrier,\n+                   FUTEX_WAIT_PRIVATE,\n+                   barrier_tag \/* should be this tag *\/);\n","filename":"src\/hotspot\/os\/linux\/waitBarrier_linux.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -448,1 +448,1 @@\n-  int currsec = time(nullptr);\n+  time_t currsec = time(nullptr);\n@@ -459,1 +459,1 @@\n-    os::print_dhm(st, \"OS uptime:\", (long) (currsec-bootsec));\n+    os::print_dhm(st, \"OS uptime:\", currsec-bootsec);\n@@ -802,2 +802,2 @@\n-int os::recv(int fd, char* buf, size_t nBytes, uint flags) {\n-  RESTARTABLE_RETURN_INT(::recv(fd, buf, nBytes, flags));\n+ssize_t os::recv(int fd, char* buf, size_t nBytes, uint flags) {\n+  RESTARTABLE_RETURN_SSIZE_T(::recv(fd, buf, nBytes, flags));\n@@ -806,2 +806,2 @@\n-int os::send(int fd, char* buf, size_t nBytes, uint flags) {\n-  RESTARTABLE_RETURN_INT(::send(fd, buf, nBytes, flags));\n+ssize_t os::send(int fd, char* buf, size_t nBytes, uint flags) {\n+  RESTARTABLE_RETURN_SSIZE_T(::send(fd, buf, nBytes, flags));\n@@ -810,1 +810,1 @@\n-int os::raw_send(int fd, char* buf, size_t nBytes, uint flags) {\n+ssize_t os::raw_send(int fd, char* buf, size_t nBytes, uint flags) {\n@@ -814,2 +814,2 @@\n-int os::connect(int fd, struct sockaddr* him, socklen_t len) {\n-  RESTARTABLE_RETURN_INT(::connect(fd, him, len));\n+ssize_t os::connect(int fd, struct sockaddr* him, socklen_t len) {\n+  RESTARTABLE_RETURN_SSIZE_T(::connect(fd, him, len));\n@@ -1211,1 +1211,1 @@\n-  clock_tics_per_sec = sysconf(_SC_CLK_TCK);\n+  clock_tics_per_sec = checked_cast<int>(sysconf(_SC_CLK_TCK));\n@@ -1335,1 +1335,1 @@\n-  DEBUG_ONLY(int max_secs = MAX_SECS;)\n+  DEBUG_ONLY(time_t max_secs = MAX_SECS;)\n@@ -1417,1 +1417,1 @@\n-  return ((double)os::elapsed_counter()) \/ os::elapsed_frequency(); \/\/ nanosecond resolution\n+  return ((double)os::elapsed_counter()) \/ (double)os::elapsed_frequency(); \/\/ nanosecond resolution\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -47,2 +47,2 @@\n-#define RESTARTABLE_RETURN_INT(_cmd) do { \\\n-  int _result; \\\n+#define RESTARTABLE_RETURN_SSIZE_T(_cmd) do { \\\n+  ssize_t _result; \\\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+#include \"utilities\/parseInteger.hpp\"\n@@ -684,1 +685,1 @@\n-  os::print_function_and_library_name(os, handler, buf, buflen,\n+  os::print_function_and_library_name(os, handler, buf, checked_cast<int>(buflen),\n@@ -1729,2 +1730,3 @@\n-    int sig = ::strtol(s, 0, 10);\n-    if (sig > MAX2(SIGSEGV, SIGBUS) &&  \/\/ See 4355769.\n+    int sig;\n+    bool result = parse_integer(s, &sig);\n+    if (result && sig > MAX2(SIGSEGV, SIGBUS) &&  \/\/ See 4355769.\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1765,1 +1765,1 @@\n-  return t1 - t2;\n+  return primitive_compare(t1, t2);\n@@ -5611,1 +5611,1 @@\n-int os::connect(int fd, struct sockaddr* him, socklen_t len) {\n+ssize_t os::connect(int fd, struct sockaddr* him, socklen_t len) {\n@@ -5615,1 +5615,1 @@\n-int os::recv(int fd, char* buf, size_t nBytes, uint flags) {\n+ssize_t os::recv(int fd, char* buf, size_t nBytes, uint flags) {\n@@ -5619,1 +5619,1 @@\n-int os::send(int fd, char* buf, size_t nBytes, uint flags) {\n+ssize_t os::send(int fd, char* buf, size_t nBytes, uint flags) {\n@@ -5623,1 +5623,1 @@\n-int os::raw_send(int fd, char* buf, size_t nBytes, uint flags) {\n+ssize_t os::raw_send(int fd, char* buf, size_t nBytes, uint flags) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -466,1 +466,1 @@\n-    size_t len = sizeof(data);\n+    int len = (int)sizeof(data);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -889,4 +889,4 @@\n-  static int recv(int fd, char* buf, size_t nBytes, uint flags);\n-  static int send(int fd, char* buf, size_t nBytes, uint flags);\n-  static int raw_send(int fd, char* buf, size_t nBytes, uint flags);\n-  static int connect(int fd, struct sockaddr* him, socklen_t len);\n+  static ssize_t recv(int fd, char* buf, size_t nBytes, uint flags);\n+  static ssize_t send(int fd, char* buf, size_t nBytes, uint flags);\n+  static ssize_t raw_send(int fd, char* buf, size_t nBytes, uint flags);\n+  static ssize_t connect(int fd, struct sockaddr* him, socklen_t len);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1099,2 +1099,2 @@\n-int networkStream::read(char *buf, size_t len) {\n-  return os::recv(_socket, buf, (int)len, 0);\n+ssize_t networkStream::read(char *buf, size_t len) {\n+  return os::recv(_socket, buf, len, 0);\n@@ -1105,1 +1105,1 @@\n-    int result = os::raw_send(_socket, (char *)base(), size(), 0);\n+    ssize_t result = os::raw_send(_socket, (char *)base(), size(), 0);\n@@ -1107,1 +1107,1 @@\n-    assert(result == (int)size(), \"didn't send enough data\");\n+    assert(result >= 0 && (size_t)result == size(), \"didn't send enough data\");\n@@ -1146,1 +1146,1 @@\n-  ret = os::connect(_socket, addr_info->ai_addr, (socklen_t)addr_info->ai_addrlen);\n+  ssize_t conn = os::connect(_socket, addr_info->ai_addr, (socklen_t)addr_info->ai_addrlen);\n@@ -1148,1 +1148,1 @@\n-  return (ret >= 0);\n+  return (conn >= 0);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -324,1 +324,1 @@\n-    int read(char *buf, size_t len);\n+    ssize_t read(char *buf, size_t len);\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}