{"files":[{"patch":"@@ -89,1 +89,1 @@\n-        List<? extends ParamTree> tags = input.isTypeVariableParamTag\n+        List<ParamTree> tags = input.isTypeVariableParamTag\n@@ -163,1 +163,1 @@\n-                                  List<? extends ParamTree> tags,\n+                                  List<ParamTree> tags,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import javax.lang.model.element.ElementKind;\n@@ -101,1 +102,1 @@\n-        ExecutableElement execHolder = (ExecutableElement) holder;\n+        var executable = (ExecutableElement) holder;\n@@ -103,1 +104,1 @@\n-                writer.getCurrentPageElement(), (ExecutableElement) holder);\n+                writer.getCurrentPageElement(), executable);\n@@ -107,1 +108,1 @@\n-                ((ExecutableElement) holder).getThrownTypes(),\n+                executable.getThrownTypes(),\n@@ -109,2 +110,2 @@\n-        Map<List<? extends ThrowsTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n-        tagsMap.put(utils.getThrowsTrees(execHolder), execHolder);\n+        Map<List<ThrowsTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n+        tagsMap.put(utils.getThrowsTrees(executable), executable);\n@@ -114,1 +115,1 @@\n-        result.add(inheritThrowsDocumentation(holder, thrownTypes, alreadyDocumented, typeSubstitutions, writer));\n+        result.add(inheritThrowsDocumentation(executable, thrownTypes, alreadyDocumented, typeSubstitutions, writer));\n@@ -154,1 +155,1 @@\n-    protected Content throwsTagsOutput(Map<List<? extends ThrowsTree>, ExecutableElement> throwsTags,\n+    protected Content throwsTagsOutput(Map<List<ThrowsTree>, ExecutableElement> throwsTags,\n@@ -161,1 +162,1 @@\n-        for (Entry<List<? extends ThrowsTree>, ExecutableElement> entry : throwsTags.entrySet()) {\n+        for (Entry<List<ThrowsTree>, ExecutableElement> entry : throwsTags.entrySet()) {\n@@ -194,1 +195,1 @@\n-    private Content inheritThrowsDocumentation(Element holder,\n+    private Content inheritThrowsDocumentation(ExecutableElement holder,\n@@ -199,1 +200,0 @@\n-        Utils utils = writer.configuration().utils;\n@@ -201,19 +201,22 @@\n-        if (utils.isMethod(holder)) {\n-            Map<List<? extends ThrowsTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n-            for (TypeMirror declaredExceptionType : declaredExceptionTypes) {\n-                Input input = new DocFinder.Input(utils, holder, this,\n-                        utils.getTypeName(declaredExceptionType, false));\n-                DocFinder.Output inheritedDoc = DocFinder.search(writer.configuration(), input);\n-                if (inheritedDoc.tagList.isEmpty()) {\n-                    String typeName = utils.getTypeName(declaredExceptionType, true);\n-                    input = new DocFinder.Input(utils, holder, this, typeName);\n-                    inheritedDoc = DocFinder.search(writer.configuration(), input);\n-                }\n-                if (!inheritedDoc.tagList.isEmpty()) {\n-                    if (inheritedDoc.holder == null) {\n-                        inheritedDoc.holder = holder;\n-                    }\n-                    List<? extends ThrowsTree> inheritedTags = inheritedDoc.tagList.stream()\n-                            .map(t -> (ThrowsTree) t)\n-                            .toList();\n-                    declaredExceptionTags.put(inheritedTags, (ExecutableElement) inheritedDoc.holder);\n+        if (holder.getKind() != ElementKind.METHOD) {\n+            \/\/ (Optimization.)\n+            \/\/ Of all executable elements, only methods and constructors are documented.\n+            \/\/ Of these two, only methods inherit documentation.\n+            \/\/ Don't waste time on constructors.\n+            assert holder.getKind() == ElementKind.CONSTRUCTOR : holder.getKind();\n+            return result;\n+        }\n+        Utils utils = writer.configuration().utils;\n+        Map<List<ThrowsTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n+        for (TypeMirror declaredExceptionType : declaredExceptionTypes) {\n+            Input input = new DocFinder.Input(utils, holder, this,\n+                    utils.getTypeName(declaredExceptionType, false));\n+            DocFinder.Output inheritedDoc = DocFinder.search(writer.configuration(), input);\n+            if (inheritedDoc.tagList.isEmpty()) {\n+                String typeName = utils.getTypeName(declaredExceptionType, true);\n+                input = new DocFinder.Input(utils, holder, this, typeName);\n+                inheritedDoc = DocFinder.search(writer.configuration(), input);\n+            }\n+            if (!inheritedDoc.tagList.isEmpty()) {\n+                if (inheritedDoc.holder == null) {\n+                    inheritedDoc.holder = holder;\n@@ -221,0 +224,4 @@\n+                List<ThrowsTree> inheritedTags = inheritedDoc.tagList.stream()\n+                        .map(t -> (ThrowsTree) t)\n+                        .toList();\n+                declaredExceptionTags.put(inheritedTags, (ExecutableElement) inheritedDoc.holder);\n@@ -222,2 +229,0 @@\n-            result.add(throwsTagsOutput(declaredExceptionTags, writer, alreadyDocumented,\n-                    typeSubstitutions, false));\n@@ -225,0 +230,2 @@\n+        result.add(throwsTagsOutput(declaredExceptionTags, writer, alreadyDocumented,\n+                typeSubstitutions, false));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":38,"deletions":31,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -2233,1 +2233,1 @@\n-    public <T extends DocTree> List<? extends T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass) {\n+    public <T extends DocTree> List<T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass) {\n@@ -2480,1 +2480,1 @@\n-    public List<? extends ThrowsTree> getThrowsTrees(Element element) {\n+    public List<ThrowsTree> getThrowsTrees(Element element) {\n@@ -2486,1 +2486,1 @@\n-    public List<? extends ParamTree> getTypeParamTrees(Element element) {\n+    public List<ParamTree> getTypeParamTrees(Element element) {\n@@ -2490,1 +2490,1 @@\n-    public List<? extends ParamTree> getParamTrees(Element element) {\n+    public List<ParamTree> getParamTrees(Element element) {\n@@ -2494,1 +2494,1 @@\n-    private  List<? extends ParamTree> getParamTrees(Element element, boolean isTypeParameters) {\n+    private  List<ParamTree> getParamTrees(Element element, boolean isTypeParameters) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}