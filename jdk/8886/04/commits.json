[{"commit":{"message":"Merge branch 'master' into 8287333\n\nIt's two days before RDP1, the codebase changes quickly. This merge is to keep up with it."},"files":[],"sha":"9c91efb0f770cc95f65b4c9d7225b254a5595893"},{"commit":{"message":"Address feedback\n\nAlso removes unneeded import."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"195f093ec554b92b7d065b6abb05ebf6ff0eaf2e"},{"commit":{"message":"Merge branch 'master' into 8287333\n\nThis resolves a conflict in ParamTaglet."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"6bbe871b475442700b0fd41571418b1dc7f4ced4"},{"commit":{"message":"Clean up if-branch"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"40ca80881d021f6e1316fbbd73c3bb61ceb8c461"},{"commit":{"message":"Remove upper-bounded wildcard\n\nThis change simplifies code without any disadvantages:\n\n  * Those `List<? extends XTree>` are read-only\n  * An argument of the `List<XTree>` type can still be passed to a `List<? extends XTree>` parameter"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java"}],"sha":"fbd9d76ac7c579aab371cc9af18f794e529bea9c"},{"commit":{"message":"Simplify inheritThrowsDocumentation"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"79d946a83eecf19296122a887a1f4c953a1389ec"},{"commit":{"message":"Reuse more specific variable"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"ed185d5b9f1575320fdf0a2e5700982d4d57ab04"},{"commit":{"message":"Merge branch 'master' into 8287333"},"files":[],"sha":"7f1d9324562bc05550ddbdd5858c5449603f235c"},{"commit":{"message":"Incremental update\n\n- Renames local variables and method parameters\n- Improves comments\n- Removes debug leftovers"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"6d51f62aa20037f07fc1b98a42b0adbb3e0c9618"},{"commit":{"message":"Update top-level doc comment"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"03ec6e6ff7a0d5ef322bc31b7afcc398dc13769a"},{"commit":{"message":"Trivially re-order assignments\n\n...for re-use"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"a1063de942951e8d85f715281751b8caf90742ad"},{"commit":{"message":"Reformat for clarity\n\nNow it's very clear that the \"Throws:\" section consists of three types of exceptions:\n\n  1. documented\n  2. inherited\n  3. undocumented"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"e29b9a849f42cb75d8dd875c27051268ba59744a"},{"commit":{"message":"Remove dead condition\n\ntagsMap is never empty by the time that check is reached: a mapping being put into it 3 lines above the check."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"28959f43e8bcb8b905b605e940de4c15b9b38070"},{"commit":{"message":"Remove emptiness check\n\nWhy bother in this case? It only wastes indentation."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"2ba11409c4a5a85d21f52045e88df180d7ce339f"},{"commit":{"message":"Remove comments\n\nTwo very similar comments to a private, self-documenting method is a bit too much."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"b911b06b10cd3f012ab2d3cb42af264b4eddeeb3"},{"commit":{"message":"Use consistent order\n\nUse \"decalred\" then \"instantiated\"."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"24e3025e160b8113ac089dc274b07721e792fdf1"},{"commit":{"message":"Rename and clarify\n\n - Renames a parameter to the throwsTagsOutput method\n - Widens the type of a local variable"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"cd7f3b3b9d9719163d7cef1e7c176dbfa0b25239"},{"commit":{"message":"Improve `inherit`\n\nSimilarly to ParamTaglet, there's no conditionality as to which subclass of DocTree is going to be passed to the inherit method. If it isn't ThrowsTree, it's an error."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"}],"sha":"240ad8d4b5377e74fcd563310d2d56f5a88ae014"},{"commit":{"message":"Rearrange methods"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"e0f32d950ee3b868adf022b753ee688afde3d023"},{"commit":{"message":"Rename local variables\n\n- in lname \"l\" seems to stand for \"label\", which is not very descriptive\n- `md` seems like a vestige from the MethodDoc days\n- name entities that are searched for as \"targets\" and entities among which the search is performed as \"candidates\""},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java"}],"sha":"8e146b16aafafda64cbe7d0c324bf5c59b5c3471"},{"commit":{"message":"Remove unused method"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"4140eb0eb91a2caacc881834045ca51602a1b682"},{"commit":{"message":"Change getTagletOutput signature"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"1a83b4b93aab62defc34dd570d54f55751081bd7"},{"commit":{"message":"Rearrange methods in depth-first order"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"89fdead58808d3216b06a083f8156e26dc33d03a"},{"commit":{"message":"Rename processParamTags"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"08b9edb810e53c47c4aa19af259e0a20d98e5476"},{"commit":{"message":"Remove bloated parts of commentary\n\nObvious or purely ceremonial parts of internal comments are not needed."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"a53255c6363024737c507428c0b6f1474f1e1b82"},{"commit":{"message":"Revert \"Compute isFirstParam more directly\"\n\nThis reverts commit f5cd03331d58b13ed61d80c23a60e02c0c637f25. Ugh... getInheritedTagletOutput may return an empty content builder."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"22f4d6b16d7637331b1fdae83d2d88359cd679f8"},{"commit":{"message":"Improve the `inherit` method"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"998e73aed4e66f1ff81a3e89c5464a38012b7d8c"},{"commit":{"message":"Compute isFirstParam more directly\n\nTagletWriter.getOutputInstance (result) might not be empty to begin with."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"adef4c4153afb1ed9e666367f141e524e87726ae"},{"commit":{"message":"Improve comments"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"70e66540334cf01630379bae4af3ab1342240840"},{"commit":{"message":"Convert int i to String using Integer.toString(i)"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"02021a27969d7c6a6071ffa2779c2e0f471f6089"},{"commit":{"message":"Improve processParamTags doc comment"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"cd3ac31ac098f43c9e329a92457df65c5c314dc6"},{"commit":{"message":"Rename a Map"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"9dbb00c9fca1f2715241bf1e8b2254f832cbffa7"},{"commit":{"message":"Update processParamTags doc comment"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"02483b2365ee84452f659d8f99676d8d3974cba8"},{"commit":{"message":"Rename and re-document \"rank\"\n\n\"Rank\" is a misnomer: these aren't \"ranks\", these are \"positions\" or \"indices\" in the list of formal or type parameters."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"}],"sha":"1a71296a830a3db34d66ce323ecab602bbc48f1c"},{"commit":{"message":"Remove null-conscious code and leverage subtypes\n\nNotes:\n\n  1. Judging from all the current call sites, `params` in getRankMap cannot be null.\n  2. CommentHelper.getParameterName should be called with ParamTree, not DocTree; fixing this also removes yet another `return null`.\n  3. CommentHelper.isTypeParameter is unused; remove"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java"}],"sha":"bb8339097226751783d6df6222c13a715074882d"}]