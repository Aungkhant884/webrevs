{"files":[{"patch":"@@ -48,17 +48,0 @@\n-    public void setData(RangeSliderModel model) {\n-        boolean changed = (positions != model.positions);\n-        positions = model.positions;\n-        changed |= (firstPosition != model.firstPosition);\n-        firstPosition = model.firstPosition;\n-        changed |= (secondPosition != model.secondPosition);\n-        secondPosition = model.secondPosition;\n-        boolean colorChanged = (colors != model.colors);\n-        colors = model.colors;\n-        if (changed) {\n-            changedEvent.fire();\n-        }\n-        if (colorChanged) {\n-            colorChangedEvent.fire();\n-        }\n-    }\n-\n@@ -93,6 +76,0 @@\n-    public RangeSliderModel copy() {\n-        RangeSliderModel newModel = new RangeSliderModel(positions);\n-        newModel.setData(this);\n-        return newModel;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/RangeSliderModel.java","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -87,2 +87,2 @@\n-    private DiagramViewModel model;\n-    private DiagramViewModel modelCopy;\n+    private final DiagramViewModel model;\n+    private ModelState modelState;\n@@ -90,3 +90,0 @@\n-    private boolean undoRedoEnabled = true;\n-\n-\n@@ -192,5 +189,21 @@\n-    public void centerFigures(List<Figure> list) {\n-        boolean enableUndoRedo = undoRedoEnabled;\n-        undoRedoEnabled = false;\n-        gotoFigures(list);\n-        undoRedoEnabled = enableUndoRedo;\n+    public void centerFigures(List<Figure> figures) {\n+        Rectangle overall = null;\n+        getModel().showFigures(figures);\n+        for (Figure f : figures) {\n+            FigureWidget fw = getWidget(f);\n+            if (fw != null) {\n+                Rectangle r = fw.getBounds();\n+                Point p = fw.getLocation();\n+                assert r != null;\n+                Rectangle r2 = new Rectangle(p.x, p.y, r.width, r.height);\n+\n+                if (overall == null) {\n+                    overall = r2;\n+                } else {\n+                    overall = overall.union(r2);\n+                }\n+            }\n+        }\n+        if (overall != null) {\n+            centerRectangle(overall);\n+        }\n@@ -369,4 +382,0 @@\n-        boolean enableUndoRedo = undoRedoEnabled;\n-        undoRedoEnabled = false;\n-        setNewModel(model);\n-        undoRedoEnabled = enableUndoRedo;\n@@ -458,0 +467,8 @@\n+\n+        this.model = model;\n+        this.modelState = new ModelState(model);\n+        this.model.getDiagramChangedEvent().addListener(m -> update());\n+        this.model.getGraphChangedEvent().addListener(m -> addUndo());\n+        this.model.getSelectedNodesChangedEvent().addListener(m -> selectedNodesChanged());\n+        this.model.getHiddenNodesChangedEvent().addListener(m -> hiddenNodesChanged());\n+        update();\n@@ -515,12 +532,0 @@\n-    private void setNewModel(DiagramViewModel model) {\n-        assert this.model == null : \"can set model only once!\";\n-        this.model = model;\n-        this.modelCopy = null;\n-\n-        model.getDiagramChangedEvent().addListener(fullChange);\n-        model.getViewPropertiesChangedEvent().addListener(fullChange);\n-        model.getViewChangedEvent().addListener(selectionChange);\n-        model.getHiddenNodesChangedEvent().addListener(hiddenNodesChange);\n-        update();\n-    }\n-\n@@ -594,1 +599,1 @@\n-        smallUpdate(true);\n+        updateHiddenNodes(model.getHiddenNodes(), true);\n@@ -597,2 +602,3 @@\n-    protected boolean isRebuilding() {\n-        return rebuilding;\n+    private void hiddenNodesChanged() {\n+        updateHiddenNodes(model.getHiddenNodes(), true);\n+        addUndo();\n@@ -601,6 +607,6 @@\n-    private void smallUpdate(boolean relayout) {\n-        updateHiddenNodes(model.getHiddenNodes(), relayout);\n-        boolean enableUndoRedo = undoRedoEnabled;\n-        undoRedoEnabled = false;\n-        undoRedoEnabled = enableUndoRedo;\n-        validate();\n+    private void selectedNodesChanged() {\n+        updateHiddenNodes(model.getHiddenNodes(), false);\n+    }\n+\n+    protected boolean isRebuilding() {\n+        return rebuilding;\n@@ -906,24 +912,0 @@\n-    private void gotoFigures(final List<Figure> figures) {\n-        Rectangle overall = null;\n-        getModel().showFigures(figures);\n-        for (Figure f : figures) {\n-\n-            FigureWidget fw = getWidget(f);\n-            if (fw != null) {\n-                Rectangle r = fw.getBounds();\n-                Point p = fw.getLocation();\n-                assert r != null;\n-                Rectangle r2 = new Rectangle(p.x, p.y, r.width, r.height);\n-\n-                if (overall == null) {\n-                    overall = r2;\n-                } else {\n-                    overall = overall.union(r2);\n-                }\n-            }\n-        }\n-        if (overall != null) {\n-            centerRectangle(overall);\n-        }\n-    }\n-\n@@ -1141,1 +1123,0 @@\n-        addUndo();\n@@ -1186,1 +1167,1 @@\n-    private static class DiagramUndoRedo extends AbstractUndoableEdit implements ChangedListener<DiagramViewModel> {\n+    private static class DiagramUndoRedo extends AbstractUndoableEdit {\n@@ -1188,3 +1169,4 @@\n-        private final DiagramViewModel oldModel;\n-        private final DiagramViewModel newModel;\n-        private final Point oldScrollPosition;\n+        private final ModelState oldState;\n+        private final ModelState newState;\n+        private Point oldScrollPosition;\n+        private Point newScrollPosition;\n@@ -1193,5 +1175,5 @@\n-        public DiagramUndoRedo(DiagramScene scene, Point oldScrollPosition, DiagramViewModel oldModel, DiagramViewModel newModel) {\n-            assert oldModel != null;\n-            assert newModel != null;\n-            this.oldModel = oldModel;\n-            this.newModel = newModel;\n+        public DiagramUndoRedo(DiagramScene scene, Point oldScrollPosition, ModelState oldState, ModelState newState) {\n+            assert oldState != null;\n+            assert newState != null;\n+            this.oldState = oldState;\n+            this.newState = newState;\n@@ -1205,7 +1187,4 @@\n-            boolean enableUndoRedo = scene.undoRedoEnabled;\n-            scene.undoRedoEnabled = false;\n-            scene.getModel().getViewChangedEvent().addListener(this);\n-            scene.getModel().setData(newModel);\n-            scene.getModel().getViewChangedEvent().removeListener(this);\n-            scene.undoRedoEnabled = enableUndoRedo;\n-\n+            oldScrollPosition = scene.getScrollPosition();\n+            scene.getModel().setHiddenNodes(newState.hiddenNodes);\n+            scene.getModel().setPositions(newState.firstPos, newState.secondPos);\n+            scene.setScrollPosition(newScrollPosition);\n@@ -1217,15 +1196,4 @@\n-            boolean enableUndoRedo = scene.undoRedoEnabled;\n-            scene.undoRedoEnabled = false;\n-            scene.getModel().getViewChangedEvent().addListener(this);\n-            scene.getModel().setData(oldModel);\n-            scene.getModel().getViewChangedEvent().removeListener(this);\n-\n-            SwingUtilities.invokeLater(() -> scene.setScrollPosition(oldScrollPosition));\n-\n-            scene.undoRedoEnabled = enableUndoRedo;\n-        }\n-\n-        @Override\n-        public void changed(DiagramViewModel source) {\n-            scene.getModel().getViewChangedEvent().removeListener(this);\n-            scene.smallUpdate(!oldModel.getHiddenNodes().equals(newModel.getHiddenNodes()));\n+            newScrollPosition = scene.getScrollPosition();\n+            scene.getModel().setHiddenNodes(oldState.hiddenNodes);\n+            scene.getModel().setPositions(oldState.firstPos, oldState.secondPos);\n+            scene.setScrollPosition(oldScrollPosition);\n@@ -1235,17 +1203,4 @@\n-    private final ChangedListener<DiagramViewModel> fullChange = new ChangedListener<DiagramViewModel>() {\n-        @Override\n-        public void changed(DiagramViewModel source) {\n-            assert source == model : \"Receive only changed event from current model!\";\n-            assert source != null;\n-            update();\n-        }\n-    };\n-\n-    private final ChangedListener<DiagramViewModel> hiddenNodesChange = new ChangedListener<DiagramViewModel>() {\n-        @Override\n-        public void changed(DiagramViewModel source) {\n-            assert source == model : \"Receive only changed event from current model!\";\n-            assert source != null;\n-            smallUpdate(true);\n-        }\n-    };\n+    private static class ModelState {\n+        public final Set<Integer> hiddenNodes;\n+        public final int firstPos;\n+        public final int secondPos;\n@@ -1253,6 +1208,4 @@\n-    private final ChangedListener<DiagramViewModel> selectionChange = new ChangedListener<DiagramViewModel>() {\n-        @Override\n-        public void changed(DiagramViewModel source) {\n-            assert source == model : \"Receive only changed event from current model!\";\n-            assert source != null;\n-            smallUpdate(false);\n+        public ModelState(DiagramViewModel model) {\n+            hiddenNodes = new HashSet<>(model.getHiddenNodes());\n+            firstPos = model.getFirstPosition();\n+            secondPos = model.getSecondPosition();\n@@ -1260,2 +1213,1 @@\n-    };\n-\n+    }\n@@ -1264,5 +1216,4 @@\n-        DiagramViewModel newModelCopy = model.copy();\n-        if (undoRedoEnabled) {\n-            getUndoRedoManager().undoableEditHappened(new UndoableEditEvent(this, new DiagramUndoRedo(this, getScrollPosition(), modelCopy, newModelCopy)));\n-        }\n-        modelCopy = newModelCopy;\n+        ModelState newModelState = new ModelState(model);\n+        DiagramUndoRedo undoRedo = new DiagramUndoRedo(this, getScrollPosition(), modelState, newModelState);\n+        getUndoRedoManager().undoableEditHappened(new UndoableEditEvent(this, undoRedo));\n+        modelState = newModelState;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":72,"deletions":121,"binary":false,"changes":193,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    private Group group;\n+    private final Group group;\n@@ -53,2 +53,2 @@\n-    private FilterChain filterChain;\n-    private FilterChain sequenceFilterChain;\n+    private final FilterChain filterChain;\n+    private final FilterChain sequenceFilterChain;\n@@ -58,1 +58,2 @@\n-    private final ChangedEvent<DiagramViewModel> viewChangedEvent;\n+    private final ChangedEvent<DiagramViewModel> graphChangedEvent;\n+    private final ChangedEvent<DiagramViewModel> selectedNodesChangedEvent;\n@@ -60,1 +61,0 @@\n-    private final ChangedEvent<DiagramViewModel> viewPropertiesChangedEvent;\n@@ -68,8 +68,1 @@\n-    private final ChangedListener<FilterChain> filterChainChangedListener = source -> updateDiagram();\n-\n-    @Override\n-    public DiagramViewModel copy() {\n-        DiagramViewModel result = new DiagramViewModel(cachedInputGraph, filterChain, sequenceFilterChain);\n-        result.setData(this);\n-        return result;\n-    }\n+    private final ChangedListener<FilterChain> filterChainChangedListener = source -> rebuildDiagram();\n@@ -81,47 +74,0 @@\n-    public void setData(DiagramViewModel newModel) {\n-        super.setData(newModel);\n-\n-        if (group != newModel.group) {\n-            if (group != null) {\n-                group.getChangedEvent().removeListener(groupContentChangedListener);\n-            }\n-            group = newModel.group;\n-            if (group != null) {\n-                group.getChangedEvent().addListener(groupContentChangedListener);\n-            }\n-            filterGraphs();\n-        }\n-\n-        boolean diagramChanged = filterChain != newModel.filterChain;\n-        diagramChanged |= (sequenceFilterChain != newModel.sequenceFilterChain);\n-        diagramChanged |= (diagram != newModel.diagram);\n-\n-        boolean viewChanged = hiddenNodes != newModel.hiddenNodes;\n-        viewChanged |= (selectedNodes != newModel.selectedNodes);\n-\n-        boolean viewPropertiesChanged = (showSea != newModel.showSea);\n-        viewPropertiesChanged |= (showBlocks != newModel.showBlocks);\n-        viewPropertiesChanged |= (showCFG != newModel.showCFG);\n-        viewPropertiesChanged |= (showNodeHull != newModel.showNodeHull);\n-\n-        filterChain = newModel.filterChain;\n-        sequenceFilterChain = newModel.sequenceFilterChain;\n-        diagram = newModel.diagram;\n-        hiddenNodes = newModel.hiddenNodes;\n-        selectedNodes = newModel.selectedNodes;\n-        showSea = newModel.showSea;\n-        showBlocks = newModel.showBlocks;\n-        showCFG = newModel.showCFG;\n-        showNodeHull = newModel.showNodeHull;\n-\n-        if (diagramChanged) {\n-            diagramChangedEvent.fire();\n-        }\n-        if (viewPropertiesChanged) {\n-            viewPropertiesChangedEvent.fire();\n-        }\n-        if (viewChanged) {\n-            viewChangedEvent.fire();\n-        }\n-    }\n-\n@@ -134,1 +80,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -143,1 +89,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -152,1 +98,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -161,1 +107,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -170,1 +116,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -185,1 +131,1 @@\n-        viewPropertiesChangedEvent.fire();\n+        diagramChangedEvent.fire();\n@@ -191,0 +137,2 @@\n+        assert filterChain != null;\n+        assert sequenceFilterChain != null;\n@@ -192,0 +140,2 @@\n+        this.filterChain = filterChain;\n+        this.sequenceFilterChain = sequenceFilterChain;\n@@ -198,6 +148,0 @@\n-        group.getChangedEvent().addListener(groupContentChangedListener);\n-        filterGraphs();\n-        assert filterChain != null;\n-        this.filterChain = filterChain;\n-        assert sequenceFilterChain != null;\n-        this.sequenceFilterChain = sequenceFilterChain;\n@@ -206,1 +150,1 @@\n-        super.getChangedEvent().addListener(this);\n+\n@@ -208,1 +152,2 @@\n-        viewChangedEvent = new ChangedEvent<>(this);\n+        graphChangedEvent = new ChangedEvent<>(this);\n+        selectedNodesChangedEvent = new ChangedEvent<>(this);\n@@ -210,7 +155,0 @@\n-        viewPropertiesChangedEvent = new ChangedEvent<>(this);\n-\n-        filterChain.getChangedEvent().addListener(filterChainChangedListener);\n-        sequenceFilterChain.getChangedEvent().addListener(filterChainChangedListener);\n-\n-        selectGraph(graph);\n-    }\n@@ -218,1 +156,1 @@\n-    private final ChangedListener<Group> groupContentChangedListener = new ChangedListener<Group>() {\n+        super.getChangedEvent().addListener(this);\n@@ -220,3 +158,4 @@\n-        @Override\n-        public void changed(Group source) {\n-            assert source == group;\n+        \/\/ If the group has been emptied, all corresponding graph views\n+        \/\/ will be closed, so do nothing.\n+        ChangedListener<Group> groupContentChangedListener = g -> {\n+            assert g == group;\n@@ -230,2 +169,9 @@\n-        }\n-    };\n+        };\n+\n+        group.getChangedEvent().addListener(groupContentChangedListener);\n+        filterChain.getChangedEvent().addListener(filterChainChangedListener);\n+        sequenceFilterChain.getChangedEvent().addListener(filterChainChangedListener);\n+\n+        filterGraphs();\n+        selectGraph(graph);\n+    }\n@@ -237,2 +183,2 @@\n-    public ChangedEvent<DiagramViewModel> getViewChangedEvent() {\n-        return viewChangedEvent;\n+    public ChangedEvent<DiagramViewModel> getGraphChangedEvent() {\n+        return graphChangedEvent;\n@@ -241,2 +187,2 @@\n-    public ChangedEvent<DiagramViewModel> getHiddenNodesChangedEvent() {\n-        return hiddenNodesChangedEvent;\n+    public ChangedEvent<DiagramViewModel> getSelectedNodesChangedEvent() {\n+        return selectedNodesChangedEvent;\n@@ -245,2 +191,2 @@\n-    public ChangedEvent<DiagramViewModel> getViewPropertiesChangedEvent() {\n-        return viewPropertiesChangedEvent;\n+    public ChangedEvent<DiagramViewModel> getHiddenNodesChangedEvent() {\n+        return hiddenNodesChangedEvent;\n@@ -295,1 +241,1 @@\n-        viewChangedEvent.fire();\n+        selectedNodesChangedEvent.fire();\n@@ -317,4 +263,0 @@\n-    public void showAll(final Collection<Figure> f) {\n-        showFigures(f);\n-    }\n-\n@@ -336,1 +278,1 @@\n-    private void updateDiagram() {\n+    private void rebuildDiagram() {\n@@ -359,1 +301,1 @@\n-        getDiagramChangedEvent().fire();\n+        diagramChangedEvent.fire();\n@@ -457,1 +399,2 @@\n-        updateDiagram();\n+        rebuildDiagram();\n+        graphChangedEvent.fire();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":44,"deletions":101,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -241,2 +241,0 @@\n-\n-        getModel().getDiagramChangedEvent().fire();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-            editor.getModel().showAll(figures);\n+            editor.getModel().showFigures(figures);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandAdjacentAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        model.getViewChangedEvent().addListener(this);\n+        model.getSelectedNodesChangedEvent().addListener(this);\n@@ -59,1 +59,1 @@\n-        model.getViewPropertiesChangedEvent().addListener(this);\n+        model.getGraphChangedEvent().addListener(this);\n@@ -65,1 +65,1 @@\n-        model.getViewChangedEvent().removeListener(this);\n+        model.getSelectedNodesChangedEvent().removeListener(this);\n@@ -67,1 +67,1 @@\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n+        model.getGraphChangedEvent().removeListener(this);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ModelAwareAction.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}