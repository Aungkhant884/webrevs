{"files":[{"patch":"@@ -89,7 +89,2 @@\n-            case ENUM:\n-                setEnumDocumentation(typeElement);\n-                break;\n-\n-            case RECORD:\n-                setRecordDocumentation(typeElement);\n-                break;\n+            case ENUM   -> setEnumDocumentation(typeElement);\n+            case RECORD -> setRecordDocumentation(typeElement);\n@@ -122,21 +117,9 @@\n-        String key;\n-         switch (typeElement.getKind()) {\n-             case INTERFACE:\n-                 key = \"doclet.Interface\";\n-                 break;\n-             case ENUM:\n-                 key = \"doclet.Enum\";\n-                 break;\n-             case RECORD:\n-                 key = \"doclet.RecordClass\";\n-                 break;\n-             case ANNOTATION_TYPE:\n-                 key = \"doclet.AnnotationType\";\n-                 break;\n-             case CLASS:\n-                 key = \"doclet.Class\";\n-                 break;\n-             default:\n-                 throw new IllegalStateException(typeElement.getKind() + \" \" + typeElement);\n-         }\n-        Content contentTree = writer.getHeader(resources.getText(key) + \" \"\n+        String key = switch (typeElement.getKind()) {\n+            case INTERFACE       -> \"doclet.Interface\";\n+            case ENUM            -> \"doclet.Enum\";\n+            case RECORD          -> \"doclet.RecordClass\";\n+            case ANNOTATION_TYPE -> \"doclet.AnnotationType\";\n+            case CLASS           -> \"doclet.Class\";\n+            default -> throw new IllegalStateException(typeElement.getKind() + \" \" + typeElement);\n+        };\n+         Content contentTree = writer.getHeader(resources.getText(key) + \" \"\n@@ -470,1 +453,4 @@\n-        for (VariableElement ve : utils.getFields(elem)) {\n+        var fields = utils.isSerializable(elem)\n+                ? utils.getFieldsUnfiltered(elem)\n+                : utils.getFields(elem);\n+        for (VariableElement ve : fields) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ClassBuilder.java","additions":15,"deletions":29,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug      8225055 8239804 8246774 8258338 8261976\n+ * @bug      8225055 8239804 8246774 8258338 8261976 8275199\n@@ -54,3 +54,1 @@\n-    \/\/ The following constants are set up for use with -linkoffline\n-    \/\/ (but note: JDK 11 does not include java.lang.Record, so expect\n-    \/\/ some 404 broken links until we can update this to a stable version.)\n+    \/\/ The following constants are set up for use with -linkoffline.\n@@ -58,1 +56,1 @@\n-        \"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/docs\/api\";\n+        \"https:\/\/docs.oracle.com\/en\/java\/javase\/17\/docs\/api\";\n@@ -60,1 +58,1 @@\n-        Path.of(testSrc).resolve(\"jdk11\").toUri().toString();\n+        Path.of(testSrc).resolve(\"jdk17\").toUri().toString();\n@@ -394,1 +392,1 @@\n-    public void testExamples(Path base) throws IOException {\n+    public void testExamples(Path base) {\n@@ -397,1 +395,1 @@\n-                \"-sourcepath\", testSrc.toString(),\n+                \"-sourcepath\", testSrc,\n@@ -404,1 +402,1 @@\n-                \"-sourcepath\", testSrc.toString(),\n+                \"-sourcepath\", testSrc,\n@@ -563,0 +561,47 @@\n+\n+    @Test\n+    public void testSerializableType(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    \/**\n+                     * A point,\n+                     * @param x the x coord\n+                     * @param y the y coord\n+                     *\/\n+                    public record Point(int x, int y) implements java.io.Serializable { }\"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-quiet\", \"-noindex\", \"--no-platform-links\",\n+                src.resolve(\"Point.java\").toString());\n+        checkExit(Exit.OK);\n+\n+        checkOutput(Output.OUT, false,\n+                \"warning: no comment\");\n+\n+        checkOutput(\"serialized-form.html\", true,\n+                \"\"\"\n+                    <section class=\"serialized-class-details\" id=\"Point\">\n+                    <h3>Record Class&nbsp;<a href=\"Point.html\" title=\"class in Unnamed Package\">Point<\/a><\/h3>\n+                    <div class=\"type-signature\">class Point extends java.lang.Record implements java.io.Serializable<\/div>\n+                    <ul class=\"block-list\">\n+                    <li>\n+                    <section class=\"detail\">\n+                    <h4>Serialized Fields<\/h4>\n+                    <ul class=\"block-list\">\n+                    <li class=\"block-list\">\n+                    <h5>x<\/h5>\n+                    <pre>int x<\/pre>\n+                    <div class=\"block\">The field for the <a href=\".\/Point.html#param-x\"><code>x<\/code><\/a> record component.<\/div>\n+                    <\/li>\n+                    <li class=\"block-list\">\n+                    <h5>y<\/h5>\n+                    <pre>int y<\/pre>\n+                    <div class=\"block\">The field for the <a href=\".\/Point.html#param-y\"><code>y<\/code><\/a> record component.<\/div>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/section>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/section>\"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/TestRecordTypes.java","additions":54,"deletions":9,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -5,0 +5,1 @@\n+java.lang.constant\n@@ -9,0 +10,1 @@\n+java.lang.runtime\n@@ -21,1 +23,0 @@\n-java.security.acl\n@@ -38,0 +39,1 @@\n+java.util.random\n@@ -134,0 +136,1 @@\n+javax.naming.ldap.spi\n@@ -141,1 +144,0 @@\n-java.rmi.activation\n@@ -222,0 +224,4 @@\n+module:jdk.incubator.foreign\n+jdk.incubator.foreign\n+module:jdk.incubator.vector\n+jdk.incubator.vector\n@@ -226,2 +232,0 @@\n-com.sun.javadoc\n-com.sun.tools.javadoc\n@@ -244,0 +248,1 @@\n+module:jdk.jpackage\n@@ -263,4 +268,2 @@\n-module:jdk.pack\n-module:jdk.scripting.nashorn\n-jdk.nashorn.api.scripting\n-jdk.nashorn.api.tree\n+module:jdk.nio.mapmode\n+jdk.nio.mapmode\n@@ -281,2 +284,1 @@\n-module:jdk.zipfs\n-\n+module:jdk.zipfs\n\\ No newline at end of file\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/jdk17\/element-list","additions":12,"deletions":10,"binary":false,"changes":22,"previous_filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRecordTypes\/jdk11\/element-list","status":"renamed"}]}