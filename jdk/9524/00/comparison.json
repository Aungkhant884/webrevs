{"files":[{"patch":"@@ -1,1 +1,1 @@\n-## The FreeType Project: Freetype v2.12.0\n+## The FreeType Project: Freetype v2.12.1\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4945,1 +4945,1 @@\n-#define FREETYPE_PATCH  0\n+#define FREETYPE_PATCH  1\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/freetype.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -531,1 +531,1 @@\n-   *     @FT_Get_Colorline_Stops.\n+   *     @FT_Get_Paint.\n@@ -537,2 +537,2 @@\n-   *     An opaque pointer into 'COLR' table data.  The caller must set this\n-   *     to `NULL` before the first call of @FT_Get_Colorline_Stops.\n+   *     An opaque pointer into 'COLR' table data.  Set by @FT_Get_Paint.\n+   *     Updated by @FT_Get_Colorline_Stops.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcolor.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-    return ((FInfo *)(info.finderInfo))->fdType;\n+    return ( (FInfo *)( info.finderInfo ) )->fdType;\n@@ -465,1 +465,1 @@\n-          ft_memcpy(ps_name, names[0] + 1, ps_name_len);\n+          ft_memcpy( ps_name, names[0] + 1, ps_name_len );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmac.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -405,11 +405,11 @@\n-  CONST_FT_RFORK_RULE_ARRAY_BEGIN(ft_raccess_guess_table,\n-                                  ft_raccess_guess_rec)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(apple_double,      apple_double)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(apple_single,      apple_single)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(darwin_ufs_export, darwin_ufs_export)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(darwin_newvfs,     darwin_newvfs)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(darwin_hfsplus,    darwin_hfsplus)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(vfat,              vfat)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(linux_cap,         linux_cap)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(linux_double,      linux_double)\n-  CONST_FT_RFORK_RULE_ARRAY_ENTRY(linux_netatalk,    linux_netatalk)\n+  CONST_FT_RFORK_RULE_ARRAY_BEGIN( ft_raccess_guess_table,\n+                                                      ft_raccess_guess_rec )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( apple_double,      apple_double )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( apple_single,      apple_single )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( darwin_ufs_export, darwin_ufs_export )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( darwin_newvfs,     darwin_newvfs )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( darwin_hfsplus,    darwin_hfsplus )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( vfat,              vfat )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( linux_cap,         linux_cap )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( linux_double,      linux_double )\n+  CONST_FT_RFORK_RULE_ARRAY_ENTRY( linux_netatalk,    linux_netatalk )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftrfork.c","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-      FT_UInt  code = (FT_UInt)(char_code + 1);\n+      FT_UInt  code = (FT_UInt)( char_code + 1 );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-      CFF_Font  cff = (CFF_Font)(face->extra.data);\n+      CFF_Font  cff = (CFF_Font)( face->extra.data );\n@@ -114,1 +114,1 @@\n-      CFF_Font  cff = (CFF_Font)(face->extra.data);\n+      CFF_Font  cff = (CFF_Font)( face->extra.data );\n@@ -373,2 +373,2 @@\n-      if ( size->root.metrics.x_ppem < 1 ||\n-           size->root.metrics.y_ppem < 1 )\n+      if ( size && (size->root.metrics.x_ppem < 1 ||\n+                    size->root.metrics.y_ppem < 1 ) )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-      CFF_Font cff = (CFF_Font)(face->extra.data);\n+      CFF_Font cff = (CFF_Font)( face->extra.data );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -538,1 +538,1 @@\n-        *buffer = (FT_Byte)(*buffer + c);\n+        *buffer = (FT_Byte)( *buffer + c );\n@@ -542,1 +542,1 @@\n-        *buffer = (FT_Byte)(c << 4);\n+        *buffer = (FT_Byte)( c << 4 );\n@@ -575,2 +575,2 @@\n-    if ( n > (FT_UInt)(limit - p) )\n-      n = (FT_UInt)(limit - p);\n+    if ( n > (FT_UInt)( limit - p ) )\n+      n = (FT_UInt)( limit - p );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -521,1 +521,1 @@\n-      if ( cur + 1 < limit && *(cur + 1) == '<' )   \/* << *\/\n+      if ( cur + 1 < limit && *( cur + 1 ) == '<' ) \/* << *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2272,1 +2272,1 @@\n-          *(++target) = 0xFF;\n+          *( ++target ) = 0xFF;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-    if ( png_get_valid(png, info, PNG_INFO_tRNS ) )\n+    if ( png_get_valid( png, info, PNG_INFO_tRNS ) )\n@@ -390,1 +390,1 @@\n-    png_read_update_info(png, info );\n+    png_read_update_info( png, info );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1069,1 +1069,2 @@\n-           face->colr                                       )\n+           face->colr                                       ||\n+           face->svg                                        )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.c","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -976,1 +976,1 @@\n-        FT_ULong   composite_size;\n+        FT_ULong   composite_size    = 0;\n@@ -2107,1 +2107,1 @@\n-      file_offset = ROUND4(woff2.metaOffset + woff2.metaLength);\n+      file_offset = ROUND4( woff2.metaOffset + woff2.metaLength );\n@@ -2117,1 +2117,1 @@\n-      file_offset = ROUND4(woff2.privOffset + woff2.privLength);\n+      file_offset = ROUND4( woff2.privOffset + woff2.privLength );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.c","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -468,1 +468,1 @@\n-      FT_UInt   idx = (FT_UInt)(char_code & 0xFF);\n+      FT_UInt   idx = (FT_UInt)( char_code & 0xFF );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1107,2 +1107,2 @@\n-            vec->x = ( FT_MulFix( u->x, x_scale ) + 32 ) >> 6;\n-            vec->y = ( FT_MulFix( u->y, y_scale ) + 32 ) >> 6;\n+            vec->x = ADD_LONG( FT_MulFix( u->x, x_scale ), 32 ) >> 6;\n+            vec->y = ADD_LONG( FT_MulFix( u->y, y_scale ), 32 ) >> 6;\n@@ -1231,2 +1231,2 @@\n-      x = p1->x - p2->x;\n-      y = p1->y - p2->y;\n+      x = SUB_LONG( p1->x, p2->x );\n+      y = SUB_LONG( p1->y, p2->y );\n@@ -2258,1 +2258,1 @@\n-      glyph->metrics.horiAdvance = SUB_LONG(loader->pp2.x, loader->pp1.x);\n+      glyph->metrics.horiAdvance = SUB_LONG( loader->pp2.x, loader->pp1.x );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -519,8 +519,0 @@\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n-    exec->iup_called  = FALSE;\n-#endif\n-#ifdef TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL\n-    exec->iupx_called = FALSE;\n-    exec->iupy_called = FALSE;\n-#endif\n-\n@@ -7850,0 +7842,9 @@\n+    \/* These flags cancel execution of some opcodes after IUP is called *\/\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY\n+    exc->iup_called  = FALSE;\n+#endif\n+#ifdef TT_SUPPORT_SUBPIXEL_HINTING_MINIMAL\n+    exc->iupx_called = FALSE;\n+    exc->iupy_called = FALSE;\n+#endif\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.c","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -206,1 +206,1 @@\n-      kp->x = (FT_Int)FT_PEEK_SHORT_LE(p + 2);\n+      kp->x = (FT_Int)FT_PEEK_SHORT_LE( p + 2 );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2060,1 +2060,1 @@\n-        if ( *cur == '.'                                              &&\n+        if ( *cur == '.'                                                &&\n@@ -2062,1 +2062,1 @@\n-                        (const char*)(name_table->elements[n]) ) == 0 )\n+                        (const char*)( name_table->elements[n] ) ) == 0 )\n@@ -2334,2 +2334,2 @@\n-      else if ( *cur == 'R' && cur + 6 < limit && *(cur + 1) == 'D' &&\n-                have_integer )\n+      else if ( *cur == 'R' && cur + 6 < limit && *( cur + 1 ) == 'D' &&\n+                have_integer                                          )\n@@ -2347,2 +2347,2 @@\n-      else if ( *cur == '-' && cur + 6 < limit && *(cur + 1) == '|' &&\n-                have_integer )\n+      else if ( *cur == '-' && cur + 6 < limit && *( cur + 1 ) == '|' &&\n+                have_integer                                          )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.c","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}