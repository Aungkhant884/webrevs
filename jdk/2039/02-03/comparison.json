{"files":[{"patch":"@@ -92,1 +92,0 @@\n-        rp = getRevocationProperties();\n@@ -94,1 +93,0 @@\n-        setDefaultNonce();\n@@ -100,1 +98,0 @@\n-        rp = getRevocationProperties();\n@@ -102,1 +99,0 @@\n-        setDefaultNonce();\n@@ -106,21 +102,0 @@\n-    private void setDefaultNonce() {\n-        byte[] nonce = null;\n-\n-        \/\/ Set the nonce by default in OCSP request extension when the sytem property\n-        \/\/ jdk.security.certpath.ocspNonce=true.\n-        if (rp.ocspNonce) {\n-            try {\n-                setOcspExtensions(List.of(new OCSPNonceExtension(DEFAULT_NONCE_BYTES)));\n-                ocspExtensions = getOcspExtensions();\n-\n-                if (debug != null) {\n-                    debug.println(\"Default nonce has been set in the OCSP extensions\");\n-                }\n-            } catch (IOException e) {\n-                if (debug != null) {\n-                    debug.println(\"Default nonce not set in the OCSP extensions\");\n-                }\n-            }\n-        }\n-    }\n-\n@@ -130,0 +105,1 @@\n+        rp = getRevocationProperties();\n@@ -744,0 +720,7 @@\n+            byte[] nonce = null;\n+            for (Extension ext : ocspExtensions) {\n+                if (ext.getId().equals(KnownOIDs.OCSPNonceExt.value())) {\n+                    nonce = ext.getValue();\n+                }\n+            }\n+\n@@ -753,6 +736,0 @@\n-                byte[] nonce = null;\n-                for (Extension ext : ocspExtensions) {\n-                    if (ext.getId().equals(KnownOIDs.OCSPNonceExt.value())) {\n-                        nonce = ext.getValue();\n-                    }\n-                }\n@@ -772,0 +749,28 @@\n+                List<Extension> tmpExtensions = new ArrayList<Extension>();\n+                if (rp.ocspNonce) {\n+                    if (nonce == null) {\n+                        try {\n+                            \/\/ create the 16-byte nonce by default\n+                            Extension nonceExt = new OCSPNonceExtension(DEFAULT_NONCE_BYTES);\n+                            tmpExtensions.add(nonceExt);\n+\n+                            if (debug != null) {\n+                                debug.println(\"Default nonce has been created in the OCSP extensions\");\n+                            }\n+                        } catch (IOException e) {\n+                            throw new CertPathValidatorException(\"Failed to create the default nonce \" +\n+                                    \"in OCSP entensions\");\n+                        }\n+                    } else {\n+                        throw new CertPathValidatorException(\"Application provided nonce cannot be \" +\n+                                \"used if the value of the jdk.security.certpath.ocspNonce system \" +\n+                                \"property is true\");\n+                    }\n+                } else {\n+                    if (nonce != null) {\n+                        if (debug != null) {\n+                            debug.println(\"Using application provided nonce\");\n+                        }\n+                    }\n+                }\n+\n@@ -774,1 +779,1 @@\n-                        ocspExtensions, params.variant());\n+                        rp.ocspNonce ? tmpExtensions : ocspExtensions, params.variant());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":37,"deletions":32,"binary":false,"changes":69,"status":"modified"}]}