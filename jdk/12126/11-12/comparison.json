{"files":[{"patch":"@@ -2168,0 +2168,3 @@\n+  __ emit_data64(0xffffffffffffffff, relocInfo::none);\n+  __ emit_data64(0xfcfcfcfcfcfcfcfc, relocInfo::none);  \/\/ for URL\n+\n@@ -2227,1 +2230,1 @@\n-  __ emit_data64(0xb9b9bfbf04111000, relocInfo::none);\n+  __ emit_data64(0xb9b9bfbf0411e000, relocInfo::none);\n@@ -2229,1 +2232,1 @@\n-  __ emit_data64(0xb9b9bfbf04111000, relocInfo::none);\n+  __ emit_data64(0xb9b9bfbf0411e000, relocInfo::none);\n@@ -2674,6 +2677,6 @@\n-    __ vmovdqu(xmm10, xmm4);\n-    __ vmovdqu(xmm12, Address(r13, 0x10));  \/\/ permute\n-    __ vmovdqu(xmm9, Address(r13, 0x30));  \/\/ lut_hi\n-    __ vmovdqu(xmm7, Address(r13, 0x50)); \/\/ merge\n-    __ vmovdqu(xmm6, Address(r13, 0x70)); \/\/ merge mult\n-    __ vmovdqu(xmm13, Address(r13, 0x90)); \/\/ shuffle\n+    __ vpbroadcastq(xmm10, Address(r13, isURL, Address::times_1, 0x10), Assembler::AVX_256bit);  \/\/ -1 or -4\n+    __ vmovdqu(xmm12, Address(r13, 0x20));  \/\/ permute\n+    __ vmovdqu(xmm9, Address(r13, 0x40));  \/\/ lut_hi\n+    __ vmovdqu(xmm7, Address(r13, 0x60)); \/\/ merge\n+    __ vmovdqu(xmm6, Address(r13, 0x80)); \/\/ merge mult\n+    __ vmovdqu(xmm13, Address(r13, 0xa0)); \/\/ shuffle\n@@ -2682,1 +2685,1 @@\n-    __ shll(isURL, 2);\n+    __ shll(isURL, 3);\n@@ -2685,1 +2688,1 @@\n-    __ shrl(isURL, 5);  \/\/ restore isURL\n+    __ shrl(isURL, 6);  \/\/ restore isURL\n@@ -2714,1 +2717,1 @@\n-    __ vpcmpeqb(xmm0, xmm10, xmm2, Assembler::AVX_256bit);\n+    __ vpcmpeqb(xmm0, xmm4, xmm2, Assembler::AVX_256bit);\n@@ -2719,0 +2722,6 @@\n+    \/\/ Make sure 2F \/ 5F shows as valid\n+    __ vpandn(xmm3, xmm0, xmm3, Assembler::AVX_256bit);\n+    \/\/ Make adjustment for roll index.  For non-URL, this is a no-op,\n+    \/\/ for URL, this adjusts by -4.  This is to properly index the\n+    \/\/ roll value for 2F \/ 5F.\n+    __ vpand(xmm0, xmm0, xmm10, Assembler::AVX_256bit);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"}]}