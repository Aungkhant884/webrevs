{"files":[{"patch":"@@ -2159,1 +2159,1 @@\n-address StubGenerator::base64_AVX2_tables_addr() {\n+address StubGenerator::base64_AVX2_decode_tables_addr() {\n@@ -2167,0 +2167,1 @@\n+  __ emit_data64(0x5f5f5f5f5f5f5f5f, relocInfo::none);  \/\/ for URL\n@@ -2174,6 +2175,0 @@\n-  \/\/ lut_lo\n-  __ emit_data64(0x1111111111111115, relocInfo::none);\n-  __ emit_data64(0x1a1b1b1b1a131111, relocInfo::none);\n-  __ emit_data64(0x1111111111111115, relocInfo::none);\n-  __ emit_data64(0x1a1b1b1b1a131111, relocInfo::none);\n-\n@@ -2186,6 +2181,0 @@\n-  \/\/ lut_roll\n-  __ emit_data64(0xb9b9bfbf04131000, relocInfo::none);\n-  __ emit_data64(0x0000000000000000, relocInfo::none);\n-  __ emit_data64(0xb9b9bfbf04131000, relocInfo::none);\n-  __ emit_data64(0x0000000000000000, relocInfo::none);\n-\n@@ -2213,0 +2202,34 @@\n+address StubGenerator::base64_AVX2_decode_URL_tables_addr() {\n+  __ align64();\n+  StubCodeMark mark(this, \"StubRoutines\", \"AVX2_tables_URL_base64\");\n+  address start = __ pc();\n+\n+  assert(((unsigned long long)start & 0x3f) == 0,\n+         \"Alignment problem (0x%08llx)\", (unsigned long long)start);\n+  \/\/ lut_lo\n+  __ emit_data64(0x1111111111111115, relocInfo::none);\n+  __ emit_data64(0x1a1b1b1b1a131111, relocInfo::none);\n+  __ emit_data64(0x1111111111111115, relocInfo::none);\n+  __ emit_data64(0x1a1b1b1b1a131111, relocInfo::none);\n+\n+  \/\/ lut_roll\n+  __ emit_data64(0xb9b9bfbf04131000, relocInfo::none);\n+  __ emit_data64(0x0000000000000000, relocInfo::none);\n+  __ emit_data64(0xb9b9bfbf04131000, relocInfo::none);\n+  __ emit_data64(0x0000000000000000, relocInfo::none);\n+\n+  \/\/ lut_lo URL\n+  __ emit_data64(0x1111111111111115, relocInfo::none);\n+  __ emit_data64(0x1b1b1a1b1b131111, relocInfo::none);\n+  __ emit_data64(0x1111111111111115, relocInfo::none);\n+  __ emit_data64(0x1b1b1a1b1b131111, relocInfo::none);\n+\n+  \/\/ lut_roll URL\n+  __ emit_data64(0xb9b9bfbf04111000, relocInfo::none);\n+  __ emit_data64(0x0000000000000000, relocInfo::none);\n+  __ emit_data64(0xb9b9bfbf04111000, relocInfo::none);\n+  __ emit_data64(0x0000000000000000, relocInfo::none);\n+\n+  return start;\n+}\n+\n@@ -2636,14 +2659,0 @@\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-    \/\/\n-    \/\/  **** Make sure inputs match ****\n-    \/\/ size_t fast_avx2_base64_decode(char *out, const char *src, size_t srclen)\n-    \/\/\n-    \/\/ Handle isURL \/ MIME?!?!  r12 is used for length calculation (from out)\n-    \/\/\n-    \/\/ rbx is out, r12 is saved out, rdx is size, rsi is src\n-    \/\/\n-    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n-    \/\/ *************** NEEDS TO BE FIXED ************\n-    __ cmpl(isURL, 0);\n-    __ jcc(Assembler::notZero, L_tailProc);\n@@ -2651,0 +2660,1 @@\n+    \/\/ Check for buffer too small (for algorithm)\n@@ -2657,0 +2667,2 @@\n+    __ shll(isURL, 3);\n+\n@@ -2658,8 +2670,2 @@\n-    __ lea(r13, ExternalAddress(StubRoutines::x86::base64_AVX2_tables_addr()));\n-    __ vpbroadcastq(xmm4, Address(r13, 0), Assembler::AVX_256bit);\n-    __ vmovdqu(xmm11, Address(r13, 0x28));\n-\n-    \/\/ The 0x2f2f..2f vector is used both as a table and a mask.  For now, just initialize\n-    \/\/ using movq instead of a broadcast (slight performance increase).\n-    \/\/ Will likely be changed back when URL is accelerated.\n-    \/\/ __ vpbroadcastb(xmm10, Address(r13, 0), Assembler::AVX_256bit);\n+    __ lea(r13, ExternalAddress(StubRoutines::x86::base64_AVX2_decode_tables_addr()));\n+    __ vpbroadcastq(xmm4, Address(r13, isURL, Address::times_1), Assembler::AVX_256bit);  \/\/ 2F or 5F\n@@ -2667,6 +2673,11 @@\n-    __ vmovdqu(xmm9, Address(r13, 0x48));\n-    __ vmovdqu(xmm8, Address(r13, 0x68));\n-    __ vmovdqu(xmm7, Address(r13, 0x88));\n-    __ vmovdqu(xmm6, Address(r13, 0xa8));\n-    __ vmovdqu(xmm13, Address(r13, 0xc8));\n-    __ vmovdqu(xmm12, Address(r13, 0x08));\n+    __ vmovdqu(xmm12, Address(r13, 0x10));  \/\/ permute\n+    __ vmovdqu(xmm9, Address(r13, 0x30));  \/\/ lut_hi\n+    __ vmovdqu(xmm7, Address(r13, 0x50)); \/\/ merge\n+    __ vmovdqu(xmm6, Address(r13, 0x70)); \/\/ merge mult\n+    __ vmovdqu(xmm13, Address(r13, 0x90)); \/\/ shuffle\n+\n+    __ lea(r13, ExternalAddress(StubRoutines::x86::base64_AVX2_decode_URL_tables_addr()));\n+    __ shll(isURL, 2);\n+    __ vmovdqu(xmm11, Address(r13, isURL, Address::times_1, 0x00));  \/\/ lut_lo\n+    __ vmovdqu(xmm8, Address(r13, isURL, Address::times_1, 0x20)); \/\/ lut_roll\n+    __ shrl(isURL, 5);  \/\/ restore isURL\n@@ -3987,1 +3998,2 @@\n-      StubRoutines::x86::_avx2_tables_base64 = base64_AVX2_tables_addr();\n+      StubRoutines::x86::_avx2_decode_tables_base64 = base64_AVX2_decode_tables_addr();\n+      StubRoutines::x86::_avx2_decode_tables_url_base64 = base64_AVX2_decode_URL_tables_addr();\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":54,"deletions":42,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -444,1 +444,2 @@\n-  address base64_AVX2_tables_addr();\n+  address base64_AVX2_decode_tables_addr();\n+  address base64_AVX2_decode_URL_tables_addr();\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -74,1 +74,2 @@\n-address StubRoutines::x86::_avx2_tables_base64 = NULL;\n+address StubRoutines::x86::_avx2_decode_tables_base64 = NULL;\n+address StubRoutines::x86::_avx2_decode_tables_url_base64 = NULL;\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -188,1 +188,2 @@\n-  static address _avx2_tables_base64;\n+  static address _avx2_decode_tables_base64;\n+  static address _avx2_decode_tables_url_base64;\n@@ -329,1 +330,2 @@\n-  static address base64_AVX2_tables_addr() { return _avx2_tables_base64; }\n+  static address base64_AVX2_decode_tables_addr() { return _avx2_decode_tables_base64; }\n+  static address base64_AVX2_decode_URL_tables_addr() { return _avx2_decode_tables_url_base64; }\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}