{"files":[{"patch":"@@ -95,3 +95,3 @@\n-     * Reads uncompressed data into an array of bytes. If {@code len} is not\n-     * zero, the method will block until some input can be decompressed; otherwise,\n-     * no bytes are read and {@code 0} is returned.\n+     * Reads uncompressed data into an array of bytes, returning the number of inflated\n+     * bytes. If {@code len} is not zero, the method will block until some input can be\n+     * decompressed; otherwise, no bytes are read and {@code 0} is returned.\n@@ -99,1 +99,1 @@\n-     * If <i>n<\/i> denotes the returned number of inflated bytes, then {@code buf[off]}\n+     * If <i>n<\/i> denotes a nonzero number of inflated bytes to return, then {@code buf[off]}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPInputStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -127,3 +127,3 @@\n-     * Reads uncompressed data into an array of bytes. If {@code len} is not\n-     * zero, the method will block until some input can be decompressed; otherwise,\n-     * no bytes are read and {@code 0} is returned.\n+     * Reads uncompressed data into an array of bytes, returning the number of inflated\n+     * bytes. If {@code len} is not zero, the method will block until some input can be\n+     * decompressed; otherwise, no bytes are read and {@code 0} is returned.\n@@ -131,1 +131,1 @@\n-     * If <i>n<\/i> denotes the returned number of inflated bytes, then {@code b[off]}\n+     * If <i>n<\/i> denotes a nonzero number of inflated bytes to return, then {@code b[off]}\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/InflaterInputStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -168,4 +168,3 @@\n-     * Reads from the current ZIP entry into an array of bytes.\n-     * If {@code len} is not zero, the method\n-     * blocks until some input is available; otherwise, no\n-     * bytes are read and {@code 0} is returned.\n+     * Reads from the current ZIP entry into an array of bytes, returning the number of\n+     * inflated bytes. If {@code len} is not zero, the method blocks until some input is\n+     * available; otherwise, no bytes are read and {@code 0} is returned.\n@@ -173,2 +172,2 @@\n-     * If the current entry is compressed and <i>n<\/i> denotes the returned number of\n-     * inflated bytes, then {@code b[off]} trough {@code b[off+}<i>n<\/i>{@code -1]} will\n+     * If the current entry is compressed and <i>n<\/i> denotes a nonzero number of inflated\n+     * bytes to return, then {@code b[off]} trough {@code b[off+}<i>n<\/i>{@code -1]} will\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipInputStream.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}