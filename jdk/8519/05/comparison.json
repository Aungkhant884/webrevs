{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"gc\/shared\/collectedHeap.hpp\"\n@@ -125,0 +126,2 @@\n+  resolve_through(VM_CLASS_ID(Object_klass), scan, CHECK);\n+  CollectedHeap::set_filler_klass(vmClasses::Object_klass());\n@@ -127,2 +130,0 @@\n-    resolve_through(VM_CLASS_ID(Object_klass), scan, CHECK);\n-\n@@ -194,0 +195,2 @@\n+  CollectedHeap::set_filler_klass(vmClasses::FillerObject_klass());\n+\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+Klass* CollectedHeap::_filler_klass = NULL;\n@@ -470,1 +471,1 @@\n-    ObjAllocator allocator(vmClasses::FillerObject_klass(), words);\n+    ObjAllocator allocator(CollectedHeap::filler_klass(), words);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -107,0 +107,4 @@\n+  \/\/ First, set it to java_lang_Object.\n+  \/\/ Then, set it to FillerObject after the FillerObject_klass loading is complete.\n+  static Klass* _filler_klass;\n+\n@@ -207,0 +211,8 @@\n+  static inline Klass* filler_klass() {\n+    return _filler_klass;\n+  }\n+\n+  static inline void set_filler_klass(Klass* k) {\n+    _filler_klass = k;\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * bug 8286066\n+ * @summary FillerObject_klass should be loaded as early as possible\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @requires vm.cds\n+ * @run driver FillerObjectLoadTest\n+ *\/\n+\n+import java.io.File;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class FillerObjectLoadTest {\n+    public static void main(String... args) throws Exception {\n+        String java_home_src = System.getProperty(\"java.home\");\n+        String java_home_dst = CDSTestUtils.getOutputDir() + File.separator + \"moved_jdk\";\n+        CDSTestUtils.clone(new File(java_home_src), new File(java_home_dst));\n+        String dstJava  = java_home_dst + File.separator + \"bin\" + File.separator + \"java\";\n+\n+        ProcessBuilder pb = CDSTestUtils.makeBuilder(dstJava,\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseCompressedClassPointers\",\n+                \"-XX:+UnlockExperimentalVMOptions\", \"-XX:+UseEpsilonGC\", \"-Xshare:dump\");\n+        OutputAnalyzer out = TestCommon.executeAndLog(pb, \"exec-dst\");\n+        out.shouldHaveExitValue(0);\n+\n+        pb = CDSTestUtils.makeBuilder(dstJava,\n+                \"-XX:+IgnoreUnrecognizedVMOptions\", \"-XX:-UseCompressedClassPointers\",\n+                \"-XX:TLABSize=2048\", \"-Xshare:dump\");\n+        out = TestCommon.executeAndLog(pb, \"exec-dst\");\n+        out.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/FillerObjectLoadTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}