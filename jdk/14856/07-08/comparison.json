{"files":[{"patch":"@@ -57,2 +57,2 @@\n-ShenandoahAdaptiveHeuristics::ShenandoahAdaptiveHeuristics(ShenandoahHeapStats* heap_stats) :\n-  ShenandoahHeuristics(heap_stats),\n+ShenandoahAdaptiveHeuristics::ShenandoahAdaptiveHeuristics(ShenandoahSpaceInfo* space_info) :\n+  ShenandoahHeuristics(space_info),\n@@ -87,1 +87,1 @@\n-  size_t capacity    = _heap_stats->soft_max_capacity();\n+  size_t capacity    = _space_info->soft_max_capacity();\n@@ -131,1 +131,1 @@\n-  size_t available = _heap_stats->available();\n+  size_t available = _space_info->available();\n@@ -199,4 +199,4 @@\n-  size_t max_capacity = _heap_stats->max_capacity();\n-  size_t capacity = _heap_stats->soft_max_capacity();\n-  size_t available = _heap_stats->available();\n-  size_t allocated = _heap_stats->bytes_allocated_since_gc_start();\n+  size_t max_capacity = _space_info->max_capacity();\n+  size_t capacity = _space_info->soft_max_capacity();\n+  size_t available = _space_info->available();\n+  size_t allocated = _space_info->bytes_allocated_since_gc_start();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"gc\/shenandoah\/heuristics\/shenandoahHeapStats.hpp\"\n+#include \"gc\/shenandoah\/heuristics\/shenandoahSpaceInfo.hpp\"\n@@ -68,1 +68,1 @@\n-  ShenandoahAdaptiveHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahAdaptiveHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-ShenandoahAggressiveHeuristics::ShenandoahAggressiveHeuristics(ShenandoahHeapStats* heap_stats) :\n-  ShenandoahHeuristics(heap_stats) {\n+ShenandoahAggressiveHeuristics::ShenandoahAggressiveHeuristics(ShenandoahSpaceInfo* space_info) :\n+  ShenandoahHeuristics(space_info) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  ShenandoahAggressiveHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahAggressiveHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,2 +35,2 @@\n-ShenandoahCompactHeuristics::ShenandoahCompactHeuristics(ShenandoahHeapStats* heap_stats) :\n-  ShenandoahHeuristics(heap_stats) {\n+ShenandoahCompactHeuristics::ShenandoahCompactHeuristics(ShenandoahSpaceInfo* space_info) :\n+  ShenandoahHeuristics(space_info) {\n@@ -49,3 +49,3 @@\n-  size_t max_capacity = _heap_stats->max_capacity();\n-  size_t capacity = _heap_stats->soft_max_capacity();\n-  size_t available = _heap_stats->available();\n+  size_t max_capacity = _space_info->max_capacity();\n+  size_t capacity = _space_info->soft_max_capacity();\n+  size_t available = _space_info->available();\n@@ -67,1 +67,1 @@\n-  size_t bytes_allocated = _heap_stats->bytes_allocated_since_gc_start();\n+  size_t bytes_allocated = _space_info->bytes_allocated_since_gc_start();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  ShenandoahCompactHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahCompactHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-ShenandoahHeuristics::ShenandoahHeuristics(ShenandoahHeapStats* heap_stats) :\n-  _heap_stats(heap_stats),\n+ShenandoahHeuristics::ShenandoahHeuristics(ShenandoahSpaceInfo* space_info) :\n+  _space_info(space_info),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/shenandoah\/heuristics\/shenandoahHeapStats.hpp\"\n+#include \"gc\/shenandoah\/heuristics\/shenandoahSpaceInfo.hpp\"\n@@ -78,2 +78,2 @@\n-  \/\/ Source of information about the heap\n-  ShenandoahHeapStats* _heap_stats;\n+  \/\/ Source of information about the memory space managed by this heuristic\n+  ShenandoahSpaceInfo* _space_info;\n@@ -105,1 +105,1 @@\n-  ShenandoahHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-ShenandoahPassiveHeuristics::ShenandoahPassiveHeuristics(ShenandoahHeapStats* heap_stats) :\n-  ShenandoahHeuristics(heap_stats) {}\n+ShenandoahPassiveHeuristics::ShenandoahPassiveHeuristics(ShenandoahSpaceInfo* space_info) :\n+  ShenandoahHeuristics(space_info) {}\n@@ -59,1 +59,1 @@\n-  size_t max_capacity = _heap_stats->max_capacity();\n+  size_t max_capacity = _space_info->max_capacity();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  ShenandoahPassiveHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahPassiveHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-class ShenandoahHeapStats {\n+class ShenandoahSpaceInfo {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahSpaceInfo.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeapStats.hpp","status":"renamed"},{"patch":"@@ -35,2 +35,2 @@\n-ShenandoahStaticHeuristics::ShenandoahStaticHeuristics(ShenandoahHeapStats* heap_stats) :\n-  ShenandoahHeuristics(heap_stats) {\n+ShenandoahStaticHeuristics::ShenandoahStaticHeuristics(ShenandoahSpaceInfo* space_info) :\n+  ShenandoahHeuristics(space_info) {\n@@ -44,3 +44,3 @@\n-  size_t max_capacity = _heap_stats->max_capacity();\n-  size_t capacity = _heap_stats->soft_max_capacity();\n-  size_t available = _heap_stats->available();\n+  size_t max_capacity = _space_info->max_capacity();\n+  size_t capacity = _space_info->soft_max_capacity();\n+  size_t available = _space_info->available();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  ShenandoahStaticHeuristics(ShenandoahHeapStats* heap_stats);\n+  ShenandoahStaticHeuristics(ShenandoahSpaceInfo* space_info);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"gc\/shenandoah\/heuristics\/shenandoahHeapStats.hpp\"\n+#include \"gc\/shenandoah\/heuristics\/shenandoahSpaceInfo.hpp\"\n@@ -120,1 +120,1 @@\n-class ShenandoahHeap : public CollectedHeap, public ShenandoahHeapStats {\n+class ShenandoahHeap : public CollectedHeap, public ShenandoahSpaceInfo {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}