{"files":[{"patch":"@@ -104,10 +104,8 @@\n-#define SAFEPOINT                                                                           \\\n-    {                                                                                       \\\n-       \/* zap freed handles rather than GC'ing them *\/                                      \\\n-       HandleMarkCleaner __hmc(THREAD);                                                     \\\n-       if (SafepointMechanism::should_process(THREAD)) {                                    \\\n-         CALL_VM(SafepointMechanism::process_if_requested(THREAD);                          \\\n-                 if (THREAD->has_special_runtime_exit_condition()) {                        \\\n-                   THREAD->handle_special_runtime_exit_condition(true \/* check asyncs *\/);  \\\n-                 }, handle_exception);                                                      \\\n-       }                                                                                    \\\n+#define SAFEPOINT                                                                                            \\\n+    {                                                                                                        \\\n+       \/* zap freed handles rather than GC'ing them *\/                                                       \\\n+       HandleMarkCleaner __hmc(THREAD);                                                                      \\\n+       if (SafepointMechanism::should_process(THREAD)) {                                                     \\\n+         CALL_VM(SafepointMechanism::process_if_requested_with_exit_check(THREAD, true \/* check asyncs *\/),  \\\n+                 handle_exception);                                                                          \\\n+       }                                                                                                     \\\n","filename":"src\/hotspot\/share\/interpreter\/zero\/bytecodeInterpreter.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -934,4 +934,1 @@\n-    SafepointMechanism::process_if_requested(self);\n-    if (self->has_special_runtime_exit_condition()) {\n-      self->handle_special_runtime_exit_condition(true \/* check asyncs *\/);\n-    }\n+    SafepointMechanism::process_if_requested_with_exit_check(self, true \/* check asyncs *\/);\n@@ -953,9 +950,6 @@\n-    SafepointMechanism::process_if_requested(self);\n-    if (self->has_special_runtime_exit_condition()) {\n-      \/\/ We never deliver an async exception at a polling point as the\n-      \/\/ compiler may not have an exception handler for it. The polling\n-      \/\/ code will notice the async and deoptimize and the exception will\n-      \/\/ be delivered. (Polling at a return point is ok though). Sure is\n-      \/\/ a lot of bother for a deprecated feature...\n-      self->handle_special_runtime_exit_condition(false \/* check asyncs *\/);\n-    }\n+    \/\/ We never deliver an async exception at a polling point as the\n+    \/\/ compiler may not have an exception handler for it. The polling\n+    \/\/ code will notice the async and deoptimize and the exception will\n+    \/\/ be delivered. (Polling at a return point is ok though). Sure is\n+    \/\/ a lot of bother for a deprecated feature...\n+    SafepointMechanism::process_if_requested_with_exit_check(self, false \/* check asyncs *\/);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -86,0 +86,1 @@\n+  static inline void process_if_requested_with_exit_check(JavaThread* thread, bool check_asyncs);\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -83,0 +83,7 @@\n+void SafepointMechanism::process_if_requested_with_exit_check(JavaThread* thread, bool check_asyncs) {\n+  process_if_requested(thread);\n+  if (thread->has_special_runtime_exit_condition()) {\n+    thread->handle_special_runtime_exit_condition(check_asyncs);\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.inline.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2501,4 +2501,1 @@\n-  SafepointMechanism::process_if_requested(thread);\n-  if (thread->has_special_runtime_exit_condition()) {\n-    thread->handle_special_runtime_exit_condition(false \/* check asyncs *\/);\n-  }\n+  SafepointMechanism::process_if_requested_with_exit_check(thread, false \/* check asyncs *\/);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}