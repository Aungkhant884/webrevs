{"files":[{"patch":"@@ -91,1 +91,1 @@\n-            changeFocusRingColor();\n+            reloadFocusRingColor();\n@@ -197,1 +197,1 @@\n-    private static void changeFocusRingColor() {\n+    private static void reloadFocusRingColor() {\n@@ -204,1 +204,3 @@\n-                    new BorderUIResource.LineBorderUIResource(prominentFocusRing, 2);\n+                    new BorderUIResource.LineBorderUIResource(\n+                            prominentFocusRing, 2);\n+\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaFocusHandler.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-            throw new RuntimeException(\"Unsupported Look&Feel Class\");\n+            throw new RuntimeException(\"Unsupported LAF Class\");\n@@ -60,2 +60,1 @@\n-        }\n-        else {\n+        } else {\n@@ -71,4 +70,0 @@\n-        Color selectionBck = null;\n-        Color originalRingColor = null;\n-        Color newRingColor = null;\n-\n@@ -78,16 +73,4 @@\n-        if (UIManager.getDefaults().get(prefix + \".selectionBackground\") != null\n-                && UIManager.getDefaults().get(prefix + \".selectionBackground\")\n-                instanceof Color) {\n-            selectionBck = (Color) UIManager.getDefaults()\n-                    .get(prefix + \".selectionBackground\");\n-        }\n-\n-        if (UIManager.getDefaults().get(\"CellFocus.color\") != null\n-                && UIManager.getDefaults().get(\"CellFocus.color\")\n-                instanceof Color) {\n-            originalRingColor = (Color) UIManager.getDefaults()\n-                    .get(\"CellFocus.color\");\n-        }\n-\n-        if (UIManager.getDefaults()\n-                .get(prefix + \".focusCellHighlightBorder\") != null &&\n+        if (UIManager.getDefaults().get(prefix + \".selectionBackground\")\n+                instanceof Color selectionBck &&\n+                UIManager.getDefaults().get(\"CellFocus.color\")\n+                instanceof Color originalRingColor &&\n@@ -95,6 +78,44 @@\n-                        instanceof LineBorderUIResource cellFocusBorderObj) {\n-            newRingColor = cellFocusBorderObj.getLineColor();\n-        }\n-\n-        if (selectionBck == null || originalRingColor == null ||\n-                newRingColor == null) {\n+                instanceof LineBorderUIResource lineBorderObj) {\n+\n+            Color newRingColor = lineBorderObj.getLineColor();\n+            System.out.println(UIManager.getLookAndFeel().getClass().getName());\n+            System.out.println(\"Selection Background Color: \"\n+                    + selectionBck);\n+\n+            System.out.println(\"Original FocusRing Color: \"\n+                    + originalRingColor);\n+\n+            System.out.println(\"Brighter FocusRing Color: \"\n+                    + newRingColor.toString());\n+\n+            int redValue = originalRingColor.getRed();\n+            int greenValue = originalRingColor.getGreen();\n+            int blueValue = originalRingColor.getBlue();\n+\n+            float[] hsbValues = new float[3];\n+            Color.RGBtoHSB(redValue, greenValue, blueValue, hsbValues);\n+\n+            \/\/ Edge case - Original Focus ring color: WHITE\/BLACK\/GRAY\n+            if (((hsbValues[0] == 0 && hsbValues[1] == 0)\n+                    || hsbValues[1] <= satGrayScale) &&\n+                    newRingColor.equals(Color.LIGHT_GRAY)) {\n+                System.out.println(\"Original Focus ring color:\" +\n+                        \"WHITE\/BLACK\/GRAYISH, Cell Focus Ring Color: LIGHT GRAY\");\n+                return;\n+            }\n+            selectionBck.getRGBColorComponents(bckRGB);\n+            originalRingColor.getRGBColorComponents(oldCellRingRGB);\n+            newRingColor.getRGBColorComponents(newCellRingRGB);\n+\n+            float originalRGBDiff = calculateRGBDiff(oldCellRingRGB, bckRGB);\n+            float brighterRGBDiff = calculateRGBDiff(newCellRingRGB, bckRGB);\n+\n+            System.out.println(\"Original RGB Diff: \"+ originalRGBDiff);\n+            System.out.println(\"Brighter RGB Diff: \"+ brighterRGBDiff);\n+\n+            if (brighterRGBDiff <= originalRGBDiff) {\n+                errorLog.append(prefix + \": New Cell Focus Ring Color\" +\n+                        \" Not Prominent.\\n\");\n+            }\n+\n+        } else {\n@@ -103,38 +124,0 @@\n-        System.out.println(UIManager.getLookAndFeel().toString());\n-        System.out.println(\"Selection Background Color: \"\n-                + selectionBck.toString());\n-\n-        System.out.println(\"Original FocusRing Color: \"\n-                + originalRingColor.toString());\n-\n-        System.out.println(\"Brighter FocusRing Color: \"\n-                + newRingColor.toString());\n-\n-        int redValue = originalRingColor.getRed();\n-        int greenValue = originalRingColor.getGreen();\n-        int blueValue = originalRingColor.getBlue();\n-\n-        float[] hsbValues = new float[3];\n-        Color.RGBtoHSB(redValue, greenValue, blueValue, hsbValues);\n-\n-        \/\/ Edge case - Original Focus ring color: WHITE\/BLACK\/GRAY\n-        if (((hsbValues[0] == 0 && hsbValues[1] == 0)\n-                || hsbValues[1] <= satGrayScale) &&\n-                newRingColor.equals(Color.LIGHT_GRAY)) {\n-            System.out.println(\"Original Focus ring color:\" +\n-                    \"WHITE\/BLACK\/GRAYISH, Cell Focus Ring Color: LIGHT GRAY\");\n-            return;\n-        }\n-        selectionBck.getRGBColorComponents(bckRGB);\n-        originalRingColor.getRGBColorComponents(oldCellRingRGB);\n-        newRingColor.getRGBColorComponents(newCellRingRGB);\n-\n-        float originalRGBDiff = calculateRGBDiff(oldCellRingRGB, bckRGB);\n-        float brighterRGBDiff = calculateRGBDiff(newCellRingRGB, bckRGB);\n-\n-        System.out.println(\"Original RGB Diff: \"+ originalRGBDiff);\n-        System.out.println(\"Brighter RGB Diff: \"+ brighterRGBDiff);\n-\n-        if (brighterRGBDiff <= originalRGBDiff) {\n-            errorLog.append(prefix + \": Cell Focus Ring Not Visible.\\n\");\n-        }\n","filename":"test\/jdk\/javax\/swing\/JTable\/CellFocusRingTest.java","additions":50,"deletions":67,"binary":false,"changes":117,"status":"modified"}]}