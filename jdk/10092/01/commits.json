[{"commit":{"message":"update according to feedbacks."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.cpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.hpp"}],"sha":"1950a63d981fa2404ee1bba26750ea1707927df3"},{"commit":{"message":"clean up code."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"}],"sha":"1e7b1e90f1b94e2a05856b2c69281ef3cb553f1f"},{"commit":{"message":"double async-logging buffer to ensure that -Xlog:all=debug doesn't drop\nanything."},"files":[{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"cbd3c68f8414f0c2c6c76033cb1017d7edd8f289"},{"commit":{"message":"refector buffer.push_back\n\n1. replace iterator with C++ lambda and don't enqueue counters.\n2. reserve space for flushing token, so push_back(token) is always\n   successful."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"948abd0ff353101ca069397c0ec3aab503101717"},{"commit":{"message":"replace linked-list with pre-allocated ping-pong buffer."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"294ff485b446bf5dac3ca6e6e1f66a8bb881768e"}]