[{"commit":{"message":"fixed for MSVC: error C2131: expression did not evaluate to a constant\n\nMSVC doesn't use C99."},"files":[{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"6b16302fb16e0688e5bbb4ae0ea3c31da5833427"},{"commit":{"message":"update per reviewer's feedback.\n\nAlso add a unit test for AsyncLogWriter::Buffer."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"06a0904a5ee8221a178e4e6aa473fae91e9cdff3"},{"commit":{"message":"fix MSVC warning C4267\n\nMSVC reports logAsyncWriter.cpp(62): warning C4267: 'initializing': conversion from\n'size_t' to 'int', possible loss of data"},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"}],"sha":"6508429cc2dc1b37598a1e3702330c17dc31a7e2"},{"commit":{"message":"Use implicit c-str field for message().\n\nThis saves a pointer(8-byte on LP64 machines) for each message.\nResume default size of buffer to 2M because -Xlog:all=debug\n-Xlog:async doesn't drop any message."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"}],"sha":"8c3efc1653803e11b5de04e330721f408a52109e"},{"commit":{"message":"update according to feedbacks."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.cpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.hpp"}],"sha":"1950a63d981fa2404ee1bba26750ea1707927df3"},{"commit":{"message":"clean up code."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"}],"sha":"1e7b1e90f1b94e2a05856b2c69281ef3cb553f1f"},{"commit":{"message":"double async-logging buffer to ensure that -Xlog:all=debug doesn't drop\nanything."},"files":[],"sha":"cbd3c68f8414f0c2c6c76033cb1017d7edd8f289"},{"commit":{"message":"refector buffer.push_back\n\n1. replace iterator with C++ lambda and don't enqueue counters.\n2. reserve space for flushing token, so push_back(token) is always\n   successful."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"948abd0ff353101ca069397c0ec3aab503101717"},{"commit":{"message":"replace linked-list with pre-allocated ping-pong buffer."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"294ff485b446bf5dac3ca6e6e1f66a8bb881768e"}]