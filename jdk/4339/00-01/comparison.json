{"files":[{"patch":"@@ -26,4 +26,0 @@\n-#ifndef UNICODE\n-#define UNICODE 1\n-#endif\n-\n@@ -96,1 +92,1 @@\n-        return 0;\n+        return JNI_FALSE;\n@@ -98,1 +94,1 @@\n-        return 0;\n+        return JNI_FALSE;\n@@ -100,2 +96,6 @@\n-        return 0;\n-    return !memcmp(g1->Data4, g2->Data4, 8);\n+        return JNI_FALSE;\n+    for (int i=0; i<8; i++) {\n+        if (g1->Data4[i] != g2->Data4[i])\n+            return JNI_FALSE;\n+    }\n+    return JNI_TRUE;\n@@ -104,1 +104,1 @@\n-static WSAPROTOCOL_INFO provider;\n+static WSAPROTOCOL_INFOW provider;\n@@ -109,2 +109,2 @@\n-    WSAPROTOCOL_INFO info[5]; \/\/ if not large enough, a buffer is malloc'd\n-    LPWSAPROTOCOL_INFO infoPtr = &info[0];\n+    WSAPROTOCOL_INFOW info[5]; \/\/ if not large enough, a buffer is malloc'd\n+    LPWSAPROTOCOL_INFOW infoPtr = &info[0];\n@@ -112,1 +112,1 @@\n-    jboolean found;\n+    jboolean found = JNI_FALSE;\n@@ -117,1 +117,1 @@\n-    int result = WSAEnumProtocols(0, infoPtr, &len);\n+    int result = WSAEnumProtocolsW(0, infoPtr, &len);\n@@ -120,2 +120,2 @@\n-            infoPtr = (LPWSAPROTOCOL_INFO)malloc(len);\n-            result = WSAEnumProtocols(0, infoPtr, &len);\n+            infoPtr = (LPWSAPROTOCOL_INFOW)malloc(len);\n+            result = WSAEnumProtocolsW(0, infoPtr, &len);\n@@ -130,1 +130,0 @@\n-    found = JNI_FALSE;\n@@ -132,7 +131,7 @@\n-        if (infoPtr[i].iAddressFamily != AF_UNIX)\n-            continue;\n-        GUID g = infoPtr[i].ProviderId;\n-        if (cmpGuid(&g, &MS_PROVIDER_ID)) {\n-            found = JNI_TRUE;\n-            provider = infoPtr[i];\n-            break;\n+        if (infoPtr[i].iAddressFamily == AF_UNIX) {\n+            GUID g = infoPtr[i].ProviderId;\n+            if (cmpGuid(&g, &MS_PROVIDER_ID)) {\n+                found = JNI_TRUE;\n+                provider = infoPtr[i];\n+                break;\n+            }\n@@ -148,1 +147,1 @@\n-        SOCKET s = WSASocket(PF_UNIX, SOCK_STREAM, 0, &provider, 0, WSA_FLAG_OVERLAPPED);\n+        SOCKET s = WSASocketW(PF_UNIX, SOCK_STREAM, 0, &provider, 0, WSA_FLAG_OVERLAPPED);\n@@ -160,1 +159,1 @@\n-    SOCKET s = WSASocket(PF_UNIX, SOCK_STREAM, 0, &provider, 0, WSA_FLAG_OVERLAPPED);\n+    SOCKET s = WSASocketW(PF_UNIX, SOCK_STREAM, 0, &provider, 0, WSA_FLAG_OVERLAPPED);\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/UnixDomainSockets.c","additions":24,"deletions":25,"binary":false,"changes":49,"status":"modified"}]}