{"files":[{"patch":"@@ -5635,1 +5635,1 @@\n-instruct vmask_tolong16B(iRegLNoSp dst, vecX src, iRegL tmp) %{\n+instruct vmask_tolong16B(iRegLNoSp dst, vecX src) %{\n@@ -5637,1 +5637,0 @@\n-  effect(TEMP_DEF dst, TEMP tmp);\n@@ -5645,1 +5644,1 @@\n-    __ umov(as_Register($tmp$$reg), as_FloatRegister($src$$reg), __ D, 1);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n@@ -5647,1 +5646,1 @@\n-    __ bytemask_compress(as_Register($tmp$$reg));\n+    __ bytemask_compress(rscratch1);\n@@ -5649,1 +5648,1 @@\n-           as_Register($tmp$$reg), Assembler::LSL, 8);\n+           rscratch1, Assembler::LSL, 8);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2499,1 +2499,1 @@\n-instruct vmask_tolong16B(iRegLNoSp dst, vecX src, iRegL tmp) %{\n+instruct vmask_tolong16B(iRegLNoSp dst, vecX src) %{\n@@ -2501,1 +2501,0 @@\n-  effect(TEMP_DEF dst, TEMP tmp);\n@@ -2509,1 +2508,1 @@\n-    __ umov(as_Register($tmp$$reg), as_FloatRegister($src$$reg), __ D, 1);\n+    __ umov(rscratch1, as_FloatRegister($src$$reg), __ D, 1);\n@@ -2511,1 +2510,1 @@\n-    __ bytemask_compress(as_Register($tmp$$reg));\n+    __ bytemask_compress(rscratch1);\n@@ -2513,1 +2512,1 @@\n-           as_Register($tmp$$reg), Assembler::LSL, 8);\n+           rscratch1, Assembler::LSL, 8);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -5749,1 +5749,1 @@\n-instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, iRegL tmp, rFlagsReg cr) %{\n+instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, rFlagsReg cr) %{\n@@ -5753,1 +5753,1 @@\n-  effect(TEMP_DEF dst, TEMP vtmp1, TEMP vtmp2, TEMP tmp, TEMP pgtmp, KILL cr);\n+  effect(TEMP vtmp1, TEMP vtmp2, TEMP pgtmp, KILL cr);\n@@ -5761,1 +5761,1 @@\n-                        as_Register($tmp$$reg), as_PRegister($pgtmp$$reg));\n+                        as_PRegister($pgtmp$$reg));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3179,1 +3179,1 @@\n-instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, iRegL tmp, rFlagsReg cr) %{\n+instruct vmask_tolong(iRegLNoSp dst, pReg src, vReg vtmp1, vReg vtmp2, pRegGov pgtmp, rFlagsReg cr) %{\n@@ -3183,1 +3183,1 @@\n-  effect(TEMP_DEF dst, TEMP vtmp1, TEMP vtmp2, TEMP tmp, TEMP pgtmp, KILL cr);\n+  effect(TEMP vtmp1, TEMP vtmp2, TEMP pgtmp, KILL cr);\n@@ -3191,1 +3191,1 @@\n-                        as_Register($tmp$$reg), as_PRegister($pgtmp$$reg));\n+                        as_PRegister($pgtmp$$reg));\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -962,0 +962,1 @@\n+\/\/ Clobbers: rscratch1\n@@ -963,2 +964,1 @@\n-                                         FloatRegister vtmp1, FloatRegister vtmp2, Register tmp,\n-                                         PRegister pgtmp) {\n+                                         FloatRegister vtmp1, FloatRegister vtmp2, PRegister pgtmp) {\n@@ -966,2 +966,2 @@\n-  assert(lane_cnt <=64 && lane_cnt % 8 == 0, \"Unsupported lane count\");\n-  assert_different_registers(dst, tmp);\n+  assert(lane_cnt <= 64 && is_power_of_2(lane_cnt), \"Unsupported lane count\");\n+  assert_different_registers(dst, rscratch1);\n@@ -985,3 +985,3 @@\n-    idx == 1 ? fmovhid(tmp, vtmp1) : sve_extract(tmp, D, pgtmp, vtmp1, idx);\n-    bytemask_compress(tmp);\n-    orr(dst, dst, tmp, Assembler::LSL, idx << 3);\n+    idx == 1 ? fmovhid(rscratch1, vtmp1) : sve_extract(rscratch1, D, pgtmp, vtmp1, idx);\n+    bytemask_compress(rscratch1);\n+    orr(dst, dst, rscratch1, Assembler::LSL, idx << 3);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-                        FloatRegister vtmp1, FloatRegister vtmp2, Register tmp, PRegister pgtmp);\n+                        FloatRegister vtmp1, FloatRegister vtmp2, PRegister pgtmp);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}