{"files":[{"patch":"@@ -8918,1 +8918,0 @@\n-\n@@ -9031,1 +9030,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1974,1 +1974,0 @@\n-\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+  public long[] ResL;\n@@ -41,0 +42,1 @@\n+  public int[] ResI;\n@@ -67,1 +69,1 @@\n-          DargV1[i] = r.nextDouble()*TESTSIZE;\n+          DargV1[i] = Double.longBitsToDouble(r.nextLong());;\n@@ -73,0 +75,1 @@\n+      i = 0;\n@@ -78,1 +81,1 @@\n-          FargV1[i] = r.nextFloat()*TESTSIZE;\n+          FargV1[i] = Float.intBitsToFloat(r.nextInt());\n@@ -80,0 +83,3 @@\n+\n+      ResI = new int[TESTSIZE];\n+      ResL = new long[TESTSIZE];\n@@ -106,1 +112,1 @@\n-          ResD[i] = Math.round(DargV1[i]);\n+          ResL[i] = Math.round(DargV1[i]);\n@@ -113,1 +119,1 @@\n-          ResF[i] = Math.round(FargV1[i]);\n+          ResI[i] = Math.round(FargV1[i]);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/math\/FpRoundingBenchmark.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}