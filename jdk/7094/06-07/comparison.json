{"files":[{"patch":"@@ -6475,16 +6475,0 @@\n-\n-void Assembler::vroundps(XMMRegister dst, XMMRegister src, int32_t rmode, int vector_len) {\n-  assert(VM_Version::supports_avx(), \"\");\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ true, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n-  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_3A, &attributes);\n-  emit_int24(0x08, (0xC0 | encode), (rmode));\n-}\n-\n-void Assembler::vrndscaleps(XMMRegister dst,  XMMRegister src,  int32_t rmode, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"requires EVEX support\");\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  attributes.set_is_evex_instruction();\n-  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_3A, &attributes);\n-  emit_int24(0x08, (0xC0 | encode), (rmode));\n-}\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2251,4 +2251,0 @@\n-  \/\/ Round Packed Single precision value.\n-  void vroundps(XMMRegister dst, XMMRegister src, int32_t rmode, int vector_len);\n-  void vrndscaleps(XMMRegister dst,  XMMRegister src,  int32_t rmode, int vector_len);\n-\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4145,2 +4145,1 @@\n-  evcvtpd2qq(dst, xtmp1, vec_enc);\n-  vector_cast_double_special_cases_evex(dst, src, xtmp1, xtmp2, ktmp1, ktmp2, scratch, double_sign_flip, vec_enc);\n+  vector_castD2L_evex(dst, src, xtmp1, xtmp2, ktmp1, ktmp2, double_sign_flip, scratch, vec_enc);\n@@ -4160,2 +4159,1 @@\n-  vcvtps2dq(dst, xtmp1, vec_enc);\n-  vector_cast_float_special_cases_evex(dst, src, xtmp1, xtmp2, ktmp1, ktmp2, scratch, float_sign_flip, vec_enc);\n+  vector_castF2I_evex(dst, src, xtmp1, xtmp2, ktmp1, ktmp2, float_sign_flip, scratch, vec_enc);\n@@ -4177,1 +4175,1 @@\n-  vector_cast_float_special_cases_avx(dst, src, xtmp1, xtmp2, xtmp3, xtmp4, scratch, float_sign_flip, vec_enc);\n+  vector_castF2I_avx(dst, src, xtmp1, xtmp2, xtmp3, xtmp4, float_sign_flip, scratch, vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -436,0 +436,2 @@\n+      a1[12] = 1.7976931348623157E19;\n+      a1[13] = -1.7976931348623157E19;\n@@ -451,1 +453,3 @@\n-      for (int i=12; i<ARRLEN; i++) {\n+      errn += verify(\"test_round: \", 12, l0[12], Long.MAX_VALUE);\n+      errn += verify(\"test_round: \", 13, l0[13], Long.MIN_VALUE);\n+      for (int i=14; i<ARRLEN; i++) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestDoubleVect.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -382,0 +382,2 @@\n+      a1[12] = 3.4028235E10f;\n+      a1[13] = -3.4028235E10f;\n@@ -396,0 +398,2 @@\n+      errn += verify(\"test_round: \", 12, i0[12], Integer.MAX_VALUE);\n+      errn += verify(\"test_round: \", 13, i0[13], Integer.MIN_VALUE);\n@@ -397,1 +401,1 @@\n-      for (int i=12; i<ARRLEN; i++) {\n+      for (int i=14; i<ARRLEN; i++) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestFloatVect.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}