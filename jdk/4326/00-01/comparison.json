{"files":[{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n-        byte[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Byte128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Byte128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Byte128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n-        byte[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Byte256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Byte256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Byte256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n-        byte[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Byte512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Byte512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Byte512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n-        byte[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Byte64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Byte64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Byte64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n-        byte[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     ByteMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     ByteMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(ByteMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2180,0 +2180,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Byte> toShuffle0(ByteSpecies dsp) {\n+        byte[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Byte> toShuffleTemplate(Class<?> shuffleType) {\n+        ByteSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), byte.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     ByteVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n-        double[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Double128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Double128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Double128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n-        double[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Double256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Double256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Double256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n-        double[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Double512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Double512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Double512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n-        double[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Double64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Double64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Double64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n-        double[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     DoubleMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     DoubleMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(DoubleMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2093,0 +2093,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Double> toShuffle0(DoubleSpecies dsp) {\n+        double[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Double> toShuffleTemplate(Class<?> shuffleType) {\n+        DoubleSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), double.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     DoubleVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n-        float[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Float128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Float128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Float128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n-        float[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Float256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Float256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Float256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n-        float[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Float512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Float512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Float512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n-        float[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Float64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Float64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Float64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -327,11 +327,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n-        float[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -340,5 +329,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     FloatMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     FloatMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(FloatMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2105,0 +2105,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Float> toShuffle0(FloatSpecies dsp) {\n+        float[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Float> toShuffleTemplate(Class<?> shuffleType) {\n+        FloatSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), float.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     FloatVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n-        int[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Int128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Int128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Int128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n-        int[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Int256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Int256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Int256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n-        int[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Int512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Int512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Int512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n-        int[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Int64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Int64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Int64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n-        int[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     IntMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     IntMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(IntMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2179,0 +2179,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Integer> toShuffle0(IntSpecies dsp) {\n+        int[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Integer> toShuffleTemplate(Class<?> shuffleType) {\n+        IntSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), int.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     IntVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -328,11 +328,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n-        long[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -341,5 +330,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Long128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Long128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Long128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -328,11 +328,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n-        long[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -341,5 +330,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Long256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Long256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Long256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -328,11 +328,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n-        long[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -341,5 +330,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Long512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Long512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Long512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -328,11 +328,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n-        long[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -341,5 +330,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Long64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Long64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Long64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -328,11 +328,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n-        long[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -341,5 +330,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     LongMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     LongMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(LongMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2050,0 +2050,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Long> toShuffle0(LongSpecies dsp) {\n+        long[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Long> toShuffleTemplate(Class<?> shuffleType) {\n+        LongSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), long.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     LongVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n-        short[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Short128Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Short128Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Short128Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n-        short[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Short256Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Short256Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Short256Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n-        short[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Short512Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Short512Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Short512Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n-        short[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     Short64Shuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     Short64Vector::toShuffleTemplate);\n+        return super.toShuffleTemplate(Short64Shuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -333,11 +333,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n-        short[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -346,5 +335,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     ShortMaxShuffle.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     ShortMaxVector::toShuffleTemplate);\n+        return super.toShuffleTemplate(ShortMaxShuffle.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2180,0 +2180,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<Short> toShuffle0(ShortSpecies dsp) {\n+        short[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<Short> toShuffleTemplate(Class<?> shuffleType) {\n+        ShortSpecies vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), short.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     ShortVector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2449,0 +2449,23 @@\n+    @ForceInline\n+    private final\n+    VectorShuffle<$Boxtype$> toShuffle0($Type$Species dsp) {\n+        $type$[] a = toArray();\n+        int[] sa = new int[a.length];\n+        for (int i = 0; i < a.length; i++) {\n+            sa[i] = (int) a[i];\n+        }\n+        return VectorShuffle.fromArray(dsp, sa, 0);\n+    }\n+\n+    \/*package-private*\/\n+    @ForceInline\n+    final\n+    VectorShuffle<$Boxtype$> toShuffleTemplate(Class<?> shuffleType) {\n+        $Type$Species vsp = vspecies();\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     getClass(), $type$.class, length(),\n+                                     shuffleType, byte.class, length(),\n+                                     this, vsp,\n+                                     $Type$Vector::toShuffle0);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -337,11 +337,0 @@\n-    @ForceInline\n-    private final\n-    VectorShuffle<$Boxtype$> toShuffleTemplate(AbstractSpecies<$Boxtype$> dsp) {\n-        $type$[] a = toArray();\n-        int[] sa = new int[a.length];\n-        for (int i = 0; i < a.length; i++) {\n-            sa[i] = (int) a[i];\n-        }\n-        return VectorShuffle.fromArray(VSPECIES, sa, 0);\n-    }\n-\n@@ -350,5 +339,1 @@\n-        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n-                                     this.getClass(), ETYPE, VLENGTH,\n-                                     $shuffletype$.class, byte.class, VLENGTH,\n-                                     this, VSPECIES,\n-                                     $vectortype$::toShuffleTemplate);\n+        return super.toShuffleTemplate($shuffletype$.class); \/\/ specialize\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"}]}