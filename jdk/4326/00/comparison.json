{"files":[{"patch":"@@ -409,1 +409,0 @@\n-    BasicType elem_bt;\n@@ -414,3 +413,0 @@\n-      if (vec_unbox->is_shuffle_to_vector() == true) {\n-        elem_bt = bt;\n-      }\n@@ -462,7 +458,3 @@\n-    } else if (is_vector_shuffle(from_kls)) {\n-      if (vec_unbox->is_shuffle_to_vector() == false) {\n-        assert(vec_unbox->bottom_type()->is_vect()->element_basic_type() == masktype, \"expect shuffle type consistency\");\n-        vec_val_load = gvn.transform(new VectorLoadShuffleNode(vec_val_load, TypeVect::make(masktype, num_elem)));\n-      } else {\n-        vec_val_load = gvn.transform(VectorCastNode::make(Op_VectorCastB2X, vec_val_load, elem_bt, num_elem));\n-      }\n+    } else if (is_vector_shuffle(from_kls) && !vec_unbox->is_shuffle_to_vector()) {\n+      assert(vec_unbox->bottom_type()->is_vect()->element_basic_type() == masktype, \"expect shuffle type consistency\");\n+      vec_val_load = gvn.transform(new VectorLoadShuffleNode(vec_val_load, TypeVect::make(masktype, num_elem)));\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -510,1 +510,5 @@\n-  Node* shuffle_vec = unbox_vector(shuffle, shuffle_box_type, elem_bt, num_elem, true);\n+  \/\/ shuffle is a byte array\n+  Node* shuffle_vec = unbox_vector(shuffle, shuffle_box_type, T_BYTE, num_elem, true);\n+\n+  \/\/ cast byte to target element type\n+  shuffle_vec = gvn().transform(VectorCastNode::make(cast_vopc, shuffle_vec, elem_bt, num_elem));\n@@ -1427,1 +1431,1 @@\n-  if (is_vector_shuffle(vbox_klass_from) || is_vector_shuffle(vbox_klass_to)) {\n+  if (is_vector_shuffle(vbox_klass_from)) {\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1246,4 +1246,1 @@\n-          if (is_shuffle_to_vector()) {\n-            \/\/ VectorUnbox (VectorBox vshuffle) ==> VectorCastB2X vshuffle\n-            return new VectorCastB2XNode(value, out_vt);\n-          } else {\n+          if (!is_shuffle_to_vector()) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Byte> toShuffle() {\n+    private final\n+    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Byte> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Byte128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Byte128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Byte> toShuffle() {\n+    private final\n+    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Byte> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Byte256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Byte256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Byte> toShuffle() {\n+    private final\n+    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Byte> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Byte512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Byte512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Byte> toShuffle() {\n+    private final\n+    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Byte> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Byte64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Byte64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Byte> toShuffle() {\n+    private final\n+    VectorShuffle<Byte> toShuffleTemplate(AbstractSpecies<Byte> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Byte> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     ByteMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     ByteMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Double> toShuffle() {\n+    private final\n+    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Double> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Double128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Double128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Double> toShuffle() {\n+    private final\n+    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Double> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Double256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Double256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Double> toShuffle() {\n+    private final\n+    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Double> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Double512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Double512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Double> toShuffle() {\n+    private final\n+    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Double> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Double64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Double64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Double> toShuffle() {\n+    private final\n+    VectorShuffle<Double> toShuffleTemplate(AbstractSpecies<Double> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Double> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     DoubleMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     DoubleMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Float> toShuffle() {\n+    private final\n+    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Float> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Float128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Float128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Float> toShuffle() {\n+    private final\n+    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Float> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Float256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Float256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Float> toShuffle() {\n+    private final\n+    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Float> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Float512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Float512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Float> toShuffle() {\n+    private final\n+    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Float> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Float64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Float64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -327,1 +327,0 @@\n-    @Override\n@@ -329,1 +328,2 @@\n-    public VectorShuffle<Float> toShuffle() {\n+    private final\n+    VectorShuffle<Float> toShuffleTemplate(AbstractSpecies<Float> dsp) {\n@@ -338,0 +338,9 @@\n+    @ForceInline\n+    public VectorShuffle<Float> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     FloatMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     FloatMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Integer> toShuffle() {\n+    private final\n+    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Integer> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Int128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Int128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Integer> toShuffle() {\n+    private final\n+    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Integer> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Int256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Int256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Integer> toShuffle() {\n+    private final\n+    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Integer> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Int512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Int512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Integer> toShuffle() {\n+    private final\n+    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Integer> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Int64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Int64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Integer> toShuffle() {\n+    private final\n+    VectorShuffle<Integer> toShuffleTemplate(AbstractSpecies<Integer> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Integer> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     IntMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     IntMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -328,1 +328,0 @@\n-    @Override\n@@ -330,1 +329,2 @@\n-    public VectorShuffle<Long> toShuffle() {\n+    private final\n+    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n@@ -339,0 +339,9 @@\n+    @ForceInline\n+    public VectorShuffle<Long> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Long128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Long128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -328,1 +328,0 @@\n-    @Override\n@@ -330,1 +329,2 @@\n-    public VectorShuffle<Long> toShuffle() {\n+    private final\n+    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n@@ -339,0 +339,9 @@\n+    @ForceInline\n+    public VectorShuffle<Long> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Long256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Long256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -328,1 +328,0 @@\n-    @Override\n@@ -330,1 +329,2 @@\n-    public VectorShuffle<Long> toShuffle() {\n+    private final\n+    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n@@ -339,0 +339,9 @@\n+    @ForceInline\n+    public VectorShuffle<Long> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Long512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Long512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -328,1 +328,0 @@\n-    @Override\n@@ -330,1 +329,2 @@\n-    public VectorShuffle<Long> toShuffle() {\n+    private final\n+    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n@@ -339,0 +339,9 @@\n+    @ForceInline\n+    public VectorShuffle<Long> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Long64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Long64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -328,1 +328,0 @@\n-    @Override\n@@ -330,1 +329,2 @@\n-    public VectorShuffle<Long> toShuffle() {\n+    private final\n+    VectorShuffle<Long> toShuffleTemplate(AbstractSpecies<Long> dsp) {\n@@ -339,0 +339,9 @@\n+    @ForceInline\n+    public VectorShuffle<Long> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     LongMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     LongMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Short> toShuffle() {\n+    private final\n+    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Short> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Short128Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Short128Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Short> toShuffle() {\n+    private final\n+    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Short> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Short256Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Short256Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Short> toShuffle() {\n+    private final\n+    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Short> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Short512Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Short512Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Short> toShuffle() {\n+    private final\n+    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Short> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     Short64Shuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     Short64Vector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -333,1 +333,0 @@\n-    @Override\n@@ -335,1 +334,2 @@\n-    public VectorShuffle<Short> toShuffle() {\n+    private final\n+    VectorShuffle<Short> toShuffleTemplate(AbstractSpecies<Short> dsp) {\n@@ -344,0 +344,9 @@\n+    @ForceInline\n+    public VectorShuffle<Short> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     ShortMaxShuffle.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     ShortMaxVector::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -337,1 +337,0 @@\n-    @Override\n@@ -339,1 +338,2 @@\n-    public VectorShuffle<$Boxtype$> toShuffle() {\n+    private final\n+    VectorShuffle<$Boxtype$> toShuffleTemplate(AbstractSpecies<$Boxtype$> dsp) {\n@@ -348,0 +348,9 @@\n+    @ForceInline\n+    public VectorShuffle<$Boxtype$> toShuffle() {\n+        return VectorSupport.convert(VectorSupport.VECTOR_OP_CAST,\n+                                     this.getClass(), ETYPE, VLENGTH,\n+                                     $shuffletype$.class, byte.class, VLENGTH,\n+                                     this, VSPECIES,\n+                                     $vectortype$::toShuffleTemplate);\n+    }\n+\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}