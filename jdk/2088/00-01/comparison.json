{"files":[{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/gcTrace.hpp\"\n@@ -35,4 +36,0 @@\n-#if INCLUDE_JFR\n-#include \"jfr\/jfrEvents.hpp\"\n-#include \"jfr\/utilities\/jfrTime.hpp\"\n-#endif\n@@ -45,6 +42,0 @@\n-#if INCLUDE_JFR\n-volatile jlong _needs_gc_start_timestamp = 0;\n-volatile jint _jni_lock_count_cache = 0;\n-volatile jint _stall_count = 0;\n-#endif\n-\n@@ -110,6 +101,1 @@\n-#if INCLUDE_JFR\n-    if (EventGCLocker::is_enabled()) {\n-      _needs_gc_start_timestamp = JfrTicks::now();\n-      _jni_lock_count_cache = _jni_lock_count;\n-    }\n-#endif\n+    GCLockerTracer::start_gc_locker(_jni_lock_count);\n@@ -126,3 +112,1 @@\n-#if INCLUDE_JFR\n-    _stall_count++;\n-#endif\n+    GCLockerTracer::inc_stall_count();\n@@ -174,13 +158,1 @@\n-#if INCLUDE_JFR\n-    if (_needs_gc_start_timestamp != 0) {\n-      EventGCLocker event(UNTIMED);\n-      if (event.should_commit()) {\n-        event.set_starttime(JfrTicks(_needs_gc_start_timestamp));\n-        event.set_lockCount(_jni_lock_count_cache);\n-        event.set_stallCount(_stall_count);\n-        event.commit();\n-      }\n-      _needs_gc_start_timestamp = 0;\n-      _stall_count = 0;\n-    }\n-#endif\n+    GCLockerTracer::report_gc_locker();\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLocker.cpp","additions":4,"deletions":32,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -210,0 +210,13 @@\n+class GCLockerTracer : public AllStatic {\n+#if INCLUDE_JFR\n+private:\n+  static Ticks _needs_gc_start_timestamp;\n+  static volatile jint _jni_lock_count;\n+  static volatile jint _stall_count;\n+#endif\n+\n+public:\n+  static void start_gc_locker(jint jni_lock_count) NOT_JFR_RETURN();\n+  static void inc_stall_count() NOT_JFR_RETURN();\n+  static void report_gc_locker() NOT_JFR_RETURN();\n+};\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTrace.hpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -347,0 +347,35 @@\n+\n+#if INCLUDE_JFR\n+Ticks GCLockerTracer::_needs_gc_start_timestamp;\n+volatile jint GCLockerTracer::_jni_lock_count = 0;\n+volatile jint GCLockerTracer::_stall_count = 0;\n+\n+void GCLockerTracer::start_gc_locker(const jint jni_lock_count) {\n+  assert(SafepointSynchronize::is_at_safepoint(), \"sanity\");\n+  if (EventGCLocker::is_enabled()) {\n+    _needs_gc_start_timestamp.stamp();\n+    _jni_lock_count = jni_lock_count;\n+  }\n+}\n+\n+void GCLockerTracer::inc_stall_count() {\n+  if (EventGCLocker::is_enabled()) {\n+    _stall_count++;\n+  }\n+}\n+\n+void GCLockerTracer::report_gc_locker() {\n+  Ticks zero;\n+  if (_needs_gc_start_timestamp != zero) {\n+    EventGCLocker event(UNTIMED);\n+    if (event.should_commit()) {\n+      event.set_starttime(_needs_gc_start_timestamp);\n+      event.set_lockCount(_jni_lock_count);\n+      event.set_stallCount(_stall_count);\n+      event.commit();\n+    }\n+    _needs_gc_start_timestamp = zero;\n+    _stall_count = 0;\n+  }\n+}\n+#endif\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTraceSend.cpp","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -1076,5 +1076,0 @@\n-  <Event name=\"GCLocker\" category=\"Java Virtual Machine, GC, Detailed\" description=\"GC locker\" label=\"GC Locker\" startTime=\"true\" thread=\"true\" stackTrace=\"true\">\n-    <Field type=\"uint\" name=\"lockCount\" label=\"Lock Count\" \/>\n-    <Field type=\"uint\" name=\"stallCount\" label=\"Stall Count\" \/>\n-  <\/Event>\n-\n@@ -1098,0 +1093,5 @@\n+  <Event name=\"GCLocker\" category=\"Java Virtual Machine, GC, Detailed\" description=\"GC Locker Information\" label=\"GC Locker\" startTime=\"true\" thread=\"true\" stackTrace=\"true\">\n+    <Field type=\"uint\" name=\"lockCount\" label=\"Lock Count\" \/>\n+    <Field type=\"uint\" name=\"stallCount\" label=\"Stall Count\" \/>\n+  <\/Event>\n+\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include \"gc\/shared\/gcLocker.inline.hpp\"\n@@ -44,1 +45,0 @@\n-#include \"gc\/shared\/gcLocker.inline.hpp\"\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -241,1 +241,0 @@\n-  friend class GCLocker;\n","filename":"src\/hotspot\/share\/utilities\/ticks.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}