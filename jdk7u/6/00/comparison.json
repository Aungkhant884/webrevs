{"files":[{"patch":"@@ -2,2 +2,1 @@\n- * reserved comment block\n- * DO NOT REMOVE OR ALTER!\n+ * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -5,6 +4,8 @@\n-\/*\n- * Copyright 1999-2005 The Apache Software Foundation.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n+\/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n@@ -12,1 +13,1 @@\n- *     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+ * http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n@@ -14,5 +15,6 @@\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n@@ -138,0 +140,3 @@\n+  \/** The 'here()' id (XML Signature). *\/\n+  public static final int FUNC_HERE = 37;\n+\n@@ -165,1 +170,1 @@\n-  private static final int NUM_BUILT_IN_FUNCS = 37;\n+  private static final int NUM_BUILT_IN_FUNCS = 38;\n@@ -232,0 +237,2 @@\n+    m_functions[FUNC_HERE] =\n+      com.sun.org.apache.xpath.internal.functions.FuncHere.class;\n@@ -305,0 +312,2 @@\n+          m_functionID.put(Keywords.FUNC_HERE_STRING,\n+                          new Integer(FunctionTable.FUNC_HERE));\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xpath\/internal\/compiler\/FunctionTable.java","additions":24,"deletions":15,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -329,0 +329,3 @@\n+  \/** here function string (XML Signature). *\/\n+  public static final String FUNC_HERE_STRING = \"here\";\n+\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xpath\/internal\/compiler\/Keywords.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ *\/\n+\/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\/\n+package com.sun.org.apache.xpath.internal.functions;\n+\n+import javax.xml.transform.TransformerException;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Node;\n+import com.sun.org.apache.xml.internal.dtm.DTM;\n+import com.sun.org.apache.xpath.internal.NodeSetDTM;\n+import com.sun.org.apache.xpath.internal.XPathContext;\n+import com.sun.org.apache.xpath.internal.objects.XNodeSet;\n+import com.sun.org.apache.xpath.internal.objects.XObject;\n+import com.sun.org.apache.xpath.internal.res.XPATHErrorResources;\n+\n+\/**\n+ * Execute the XML Signature here() function.\n+ *\/\n+public final class FuncHere extends Function {\n+\n+    private static final long serialVersionUID = 4328660760070034592L;\n+\n+    @Override\n+    public XObject execute(XPathContext xctxt) throws TransformerException {\n+        Node xpathOwnerNode = (Node)xctxt.getOwnerObject();\n+        if (xpathOwnerNode == null) {\n+            return null;\n+        }\n+\n+        int xpathOwnerNodeDTM = xctxt.getDTMHandleFromNode(xpathOwnerNode);\n+        int currentNode = xctxt.getCurrentNode();\n+        DTM dtm = xctxt.getDTM(currentNode);\n+        int docContext = dtm.getDocument();\n+\n+        if (docContext == DTM.NULL) {\n+            error(xctxt, XPATHErrorResources.ER_CONTEXT_HAS_NO_OWNERDOC, null);\n+        }\n+\n+        \/\/ check whether currentNode and the node containing the XPath\n+        \/\/ expression are in the same document\n+        Document currentDoc = getOwnerDocument(dtm.getNode(currentNode));\n+        Document xpathOwnerDoc = getOwnerDocument(xpathOwnerNode);\n+\n+        if (currentDoc != xpathOwnerDoc) {\n+            throw new TransformerException(\"Owner documents differ\");\n+        }\n+\n+        XNodeSet nodes = new XNodeSet(xctxt.getDTMManager());\n+        NodeSetDTM nodeSet = nodes.mutableNodeset();\n+\n+        int hereNode = DTM.NULL;\n+\n+        switch (dtm.getNodeType(xpathOwnerNodeDTM)) {\n+\n+            case Node.ATTRIBUTE_NODE:\n+            case Node.PROCESSING_INSTRUCTION_NODE: {\n+                \/\/ returns a node-set containing the attribute \/  processing\n+                \/\/ instruction node\n+                hereNode = xpathOwnerNodeDTM;\n+                nodeSet.addNode(hereNode);\n+                break;\n+            }\n+            case Node.TEXT_NODE : {\n+                \/\/ returns a node-set containing the parent element of the\n+                \/\/ text node that directly bears the XPath expression\n+                hereNode = dtm.getParent(xpathOwnerNodeDTM);\n+                nodeSet.addNode(hereNode);\n+                break;\n+            }\n+            default :\n+                break;\n+        }\n+\n+        \/** $todo$ Do I have to do this detach() call? *\/\n+        nodeSet.detach();\n+\n+        return nodes;\n+    }\n+\n+    private static Document getOwnerDocument(Node node) {\n+        if (node.getNodeType() == Node.DOCUMENT_NODE) {\n+            return (Document)node;\n+        }\n+        return node.getOwnerDocument();\n+    }\n+\n+    @Override\n+    public void fixupVariables(java.util.Vector vars, int globalsSize) { }\n+}\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xpath\/internal\/functions\/FuncHere.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"}]}