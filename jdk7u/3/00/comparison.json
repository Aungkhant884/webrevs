{"files":[{"patch":"@@ -39,1 +39,8 @@\n-        final String invalidXPath = \">>\";\n+        final String[] invalidXPath = {\n+            \/\/ @bug JDK-8284548: expressions ending with relational operators\n+            \/\/ throw StringIndexOutOfBoundsException instead of XPathExpressionException\n+            \"\/a\/b\/c[@d >\",\n+            \"\/a\/b\/c[@d <\",\n+            \"\/a\/b\/c[@d >=\",\n+            \">>\"\n+        };\n@@ -41,10 +48,11 @@\n-        \/\/ expect XPathExpressionException when the invalid XPath expression is compiled\n-        try {\n-            XPathFactory.newInstance().newXPath().compile(invalidXPath);\n-        } catch (XPathExpressionException e) {\n-            System.out.println(\"Caught expected exception: \" + e.getClass().getName() +\n-                    \"(\" + e.getMessage() + \").\");\n-        } catch (Exception e) {\n-            System.out.println(\"Caught unexpected exception: \" + e.getClass().getName() +\n-                    \"(\" + e.getMessage() + \")!\");\n-            throw e;\n+        for(String s: invalidXPath) {\n+            try {\n+                XPathFactory.newInstance().newXPath().compile(s);\n+            } catch (XPathExpressionException e) {\n+                System.out.println(\"Caught expected exception: \" + e.getClass().getName() +\n+                        \"(\" + e.getMessage() + \").\");\n+            } catch (Exception e) {\n+                System.out.println(\"Caught unexpected exception: \" + e.getClass().getName() +\n+                        \"(\" + e.getMessage() + \")!\");\n+                throw e;\n+            }\n","filename":"jdk\/test\/javax\/xml\/jaxp\/XPath\/InvalidXPath.java","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"}]}