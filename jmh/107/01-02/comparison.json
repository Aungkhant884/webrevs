{"files":[{"patch":"@@ -21,1 +21,1 @@\n-        profile: [default, reflection, asm, executor-virtual-tpe, executor-fjp-common, executor-custom]\n+        profile: [default, reflection, asm, executor-virtual-tpe, executor-fjp, executor-custom]\n@@ -33,0 +33,5 @@\n+\n+    - name: Run build without tests\n+      run: mvn clean install -DskipTests -P ${{ matrix.profile }} -B --file pom.xml\n+      if: (runner.os != 'Linux') && (matrix.profile != 'default')\n+\n@@ -35,2 +40,3 @@\n-      if: (runner.os == 'Linux') || (matrix.profile == 'default')\n-    - name: Run build with tests (FJP Common)\n+      if: (matrix.profile == 'default')\n+\n+    - name: Run build with tests (Reflection)\n@@ -38,2 +44,11 @@\n-      if: (runner.os == 'Linux') && (matrix.profile == 'executor-fjp-common')\n-    - name: Run build with tests (Custom)\n+      if: (runner.os == 'Linux') && (matrix.profile == 'reflection')\n+\n+    - name: Run build with tests (ASM)\n+      run: mvn clean install -P ${{ matrix.profile }} -B --file pom.xml\n+      if: (runner.os == 'Linux') && (matrix.profile == 'asm')\n+\n+    - name: Run build with tests (FJP Executor)\n+      run: mvn clean install -P ${{ matrix.profile }} -B --file pom.xml\n+      if: (runner.os == 'Linux') && (matrix.profile == 'executor-fjp')\n+\n+    - name: Run build with tests (Custom Executor)\n@@ -42,0 +57,1 @@\n+\n@@ -45,3 +61,0 @@\n-    - name: Run build without tests\n-      run: mvn clean install -DskipTests -P ${{ matrix.profile }} -B --file pom.xml\n-      if: (runner.os != 'Linux') && (matrix.profile != 'default')\n","filename":".github\/workflows\/pre-integration.yml","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-            <id>executor-fjp-common<\/id>\n+            <id>executor-fjp<\/id>\n@@ -162,1 +162,1 @@\n-                <jmh.core.it.profile>executor-fjp-common<\/jmh.core.it.profile>\n+                <jmh.core.it.profile>executor-fjp<\/jmh.core.it.profile>\n@@ -182,1 +182,1 @@\n-                            <argLine>${jmh.testjvmargs} -Djmh.executor=FJP_COMMON<\/argLine>\n+                            <argLine>${jmh.testjvmargs} -Djmh.executor=FJP<\/argLine>\n","filename":"jmh-core-it\/pom.xml","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -31,1 +33,15 @@\n-    private static final int REPS = Integer.getInteger(\"jmh.it.reps\", 1);\n+    private static final int REPS;\n+    private static final String PROFILE;\n+\n+    static {\n+        REPS = AccessController.doPrivileged(new PrivilegedAction<Integer>() {\n+            public Integer run() {\n+                return Integer.getInteger(\"jmh.it.reps\", 1);\n+            }\n+        });\n+        PROFILE = AccessController.doPrivileged(new PrivilegedAction<String>() {\n+            public String run() {\n+                return System.getProperty(\"jmh.core.it.profile\");\n+            }\n+        });\n+    }\n@@ -55,2 +71,1 @@\n-        String profile = System.getProperty(\"jmh.core.it.profile\");\n-        return profile.equals(\"default\");\n+        return PROFILE.equals(\"default\");\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/Fixtures.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -254,1 +256,1 @@\n-    private static final boolean COMPILER_BLACKHOLE = Boolean.getBoolean(\"compilerBlackholesEnabled\");\n+    private static final boolean COMPILER_BLACKHOLE;\n@@ -257,0 +259,6 @@\n+        COMPILER_BLACKHOLE = AccessController.doPrivileged(new PrivilegedAction<Boolean>() {\n+            public Boolean run() {\n+                return Boolean.getBoolean(\"compilerBlackholesEnabled\");\n+            }\n+        });\n+\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/infra\/Blackhole.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}