{"files":[{"patch":"@@ -230,5 +230,12 @@\n-        \/\/ Try to check with JDK 9 canAccesss before doing this to avoid warnings.\n-        try {\n-            Method canAccess = AccessibleObject.class.getDeclaredMethod(\"canAccess\", Object.class);\n-            if (!(boolean) canAccess.invoke(o, holder)) {\n-                throw new IllegalAccessException(o + \" is not accessible\");\n+        \/\/ Try to check with JDK 9+ AccessibleObject.canAccess before doing this\n+        \/\/ to avoid the confusing console warnings. Force the break in if user asks\n+        \/\/ explicitly.\n+\n+        if (!Boolean.getBoolean(\"jmh.forceSetAccessible\")) {\n+            try {\n+                Method canAccess = AccessibleObject.class.getDeclaredMethod(\"canAccess\", Object.class);\n+                if (!(boolean) canAccess.invoke(o, holder)) {\n+                    throw new IllegalAccessException(o + \" is not accessible\");\n+                }\n+            } catch (NoSuchMethodException | InvocationTargetException e) {\n+                \/\/ fall-through\n@@ -236,2 +243,0 @@\n-        } catch (NoSuchMethodException | InvocationTargetException e) {\n-            \/\/ fall-through\n@@ -240,1 +245,0 @@\n-        \/\/ Try to force our way through.\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Utils.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"}]}