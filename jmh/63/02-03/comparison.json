{"files":[{"patch":"@@ -348,3 +348,0 @@\n-        BenchmarkResultMetaData md = br.getMetadata();\n-        long ops = md.getMeasurementOps();\n-\n@@ -421,0 +418,37 @@\n+        PrintContext context;\n+        {\n+            BenchmarkResultMetaData md = br.getMetadata();\n+            long ops = Math.max(1, md.getMeasurementOps());\n+            int majorScale;\n+            int minorScale;\n+            switch (showCounts) {\n+                case raw:\n+                    majorScale = 1;\n+                    minorScale = 0;\n+                    for (long c : events.totalCounts.values()) {\n+                        majorScale = Math.max(majorScale, (int)Math.ceil(Math.log10(c)));\n+                    }\n+                    break;\n+                case norm:\n+                    majorScale = 2;\n+                    minorScale = 1;\n+                    for (long c : events.totalCounts.values()) {\n+                        double d = Math.log10(1D * c \/ ops);\n+                        if (d < 0) {\n+                            minorScale = Math.max(minorScale, (int)Math.ceil(-d));\n+                        } else {\n+                            majorScale = Math.max(majorScale, (int)Math.ceil(d));\n+                        }\n+                    }\n+                    break;\n+                case percent_total:\n+                    majorScale = 3;\n+                    minorScale = 2;\n+                    break;\n+                default:\n+                    throw new IllegalStateException(\"Unhandled enum: \" + showCounts);\n+            }\n+\n+            context = new PrintContext(showCounts, ops, majorScale + minorScale + 2, minorScale);\n+        }\n+\n@@ -425,1 +459,1 @@\n-        final List<Region> regions = makeRegions(assembly, events, ops);\n+        final List<Region> regions = makeRegions(assembly, events, context);\n@@ -459,1 +493,1 @@\n-                            pw.println(\" Event counts are normalized to total event count.\");\n+                            pw.println(\" Event counts are percents of total event count.\");\n@@ -474,1 +508,1 @@\n-                    printLine(pw, events, event, r.getEventCount(events, event), showCounts, ops);\n+                    printLine(pw, events, event, r.getEventCount(events, event), context);\n@@ -505,1 +539,1 @@\n-                        printLine(pw, events, event, r.getEventCount(events, event), showCounts, ops);\n+                        printLine(pw, events, event, r.getEventCount(events, event), context);\n@@ -520,1 +554,1 @@\n-                    printLine(pw, events, event, other.count(event), showCounts, ops);\n+                    printLine(pw, events, event, other.count(event), context);\n@@ -527,1 +561,1 @@\n-                printLine(pw, events, event, total.count(event), showCounts, ops);\n+                printLine(pw, events, event, total.count(event), context);\n@@ -563,1 +597,1 @@\n-                        printLine(pw, events, event, methods.get(event).count(m), showCounts, ops);\n+                        printLine(pw, events, event, methods.get(event).count(m), context);\n@@ -578,1 +612,1 @@\n-                    printLine(pw, events, event, other.count(event), showCounts, ops);\n+                    printLine(pw, events, event, other.count(event), context);\n@@ -585,1 +619,1 @@\n-                printLine(pw, events, event, total.count(event), showCounts, ops);\n+                printLine(pw, events, event, total.count(event), context);\n@@ -599,1 +633,1 @@\n-                    printLine(pw, events, event, methodsByType.get(event).count(m), showCounts, ops);\n+                    printLine(pw, events, event, methodsByType.get(event).count(m), context);\n@@ -607,1 +641,1 @@\n-                printLine(pw, events, event, methodsByType.get(event).size(), showCounts, ops);\n+                printLine(pw, events, event, methodsByType.get(event).size(), context);\n@@ -687,1 +721,1 @@\n-                        printLine(pwAsm, events, event, count, showCounts, ops);\n+                        printLine(pwAsm, events, event, count, context);\n@@ -703,1 +737,1 @@\n-    private static void printLine(PrintWriter pw, PerfEvents events, String event, long count, ShowCounts showCount, long ops) {\n+    private static void printLine(PrintWriter pw, PerfEvents events, String event, long count, PrintContext context) {\n@@ -705,1 +739,1 @@\n-            switch (showCount) {\n+            switch (context.mode) {\n@@ -707,1 +741,1 @@\n-                    pw.printf(\"%7d  \", count);\n+                    pw.printf(\"%\" + context.formatWidth + \"d   \", count);\n@@ -710,1 +744,1 @@\n-                    pw.printf(\"%7.2f  \", 100.0 * count \/ ops);\n+                    pw.printf(\"%\" + context.formatWidth + \".\" + context.formatMinor + \"f   \", 100.0 * count \/ context.ops);\n@@ -713,1 +747,1 @@\n-                    pw.printf(\"%6.2f%%  \", 100.0 * count \/ events.getTotalEvents(event));\n+                    pw.printf(\"%\" + context.formatWidth + \".\" + context.formatMinor + \"f%%  \", 100.0 * count \/ events.getTotalEvents(event));\n@@ -716,1 +750,1 @@\n-                    throw new IllegalStateException(\"Unhandled enum: \" + showCount);\n+                    throw new IllegalStateException(\"Unhandled enum: \" + context.mode);\n@@ -719,1 +753,1 @@\n-            pw.printf(\"%9s\", \"\");\n+            pw.printf(\"%\" + context.formatWidth + \"s   \", \"\");\n@@ -744,1 +778,1 @@\n-    private List<Region> makeRegions(Assembly asms, PerfEvents events, long ops) {\n+    private List<Region> makeRegions(Assembly asms, PerfEvents events, PrintContext context) {\n@@ -765,1 +799,1 @@\n-                        drawIntraJumps, drawInterJumps, showCounts, ops));\n+                        drawIntraJumps, drawInterJumps, context));\n@@ -1195,2 +1229,1 @@\n-        final ShowCounts showCounts;\n-        final long ops;\n+        final PrintContext context;\n@@ -1200,2 +1233,2 @@\n-                        int threshold, boolean drawIntraJumps, boolean drawInterJumps, ShowCounts showCounts,\n-                        long ops) {\n+                        int threshold, boolean drawIntraJumps, boolean drawInterJumps,\n+                        PrintContext context) {\n@@ -1209,2 +1242,1 @@\n-            this.showCounts = showCounts;\n-            this.ops = ops;\n+            this.context = context;\n@@ -1249,1 +1281,1 @@\n-                        printLine(pw, events, event, count, showCounts, ops);\n+                        printLine(pw, events, event, count, context);\n@@ -1412,0 +1444,14 @@\n+    private static class PrintContext {\n+        private final ShowCounts mode;\n+        private final long ops;\n+        private final int formatWidth;\n+        private final int formatMinor;\n+\n+        public PrintContext(ShowCounts mode, long ops, int formatWidth, int formatMinor) {\n+            this.mode = mode;\n+            this.ops = ops;\n+            this.formatWidth = formatWidth;\n+            this.formatMinor = formatMinor;\n+        }\n+    }\n+\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/AbstractPerfAsmProfiler.java","additions":77,"deletions":31,"binary":false,"changes":108,"status":"modified"}]}