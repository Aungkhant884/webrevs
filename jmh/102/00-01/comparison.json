{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,1 @@\n-                return Executors.newCachedThreadPool(WorkerThreadFactories.getPlatformWorkerFactory(prefix));\n+                return Executors.newCachedThreadPool(WorkerThreadFactories.platformWorkerFactory(prefix));\n@@ -193,1 +193,1 @@\n-                return Executors.newFixedThreadPool(maxThreads, WorkerThreadFactories.getPlatformWorkerFactory(prefix));\n+                return Executors.newFixedThreadPool(maxThreads, WorkerThreadFactories.platformWorkerFactory(prefix));\n@@ -203,1 +203,1 @@\n-                return Executors.newFixedThreadPool(maxThreads, WorkerThreadFactories.getVirtualWorkerFactory(prefix));\n+                return Executors.newFixedThreadPool(maxThreads, WorkerThreadFactories.virtualWorkerFactory(prefix));\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/BenchmarkHandler.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.concurrent.ExecutorService;\n@@ -36,1 +35,1 @@\n-    static class WorkerThreadFactory implements ThreadFactory {\n+    static class PlatformThreadFactory implements ThreadFactory {\n@@ -42,1 +41,1 @@\n-        public WorkerThreadFactory(String prefix) {\n+        public PlatformThreadFactory(String prefix) {\n@@ -57,2 +56,2 @@\n-    static ThreadFactory getPlatformWorkerFactory(String prefix) {\n-        return new WorkerThreadFactory(prefix);\n+    static ThreadFactory platformWorkerFactory(String prefix) {\n+        return new PlatformThreadFactory(prefix);\n@@ -61,2 +60,2 @@\n-    static ThreadFactory getVirtualWorkerFactory(String prefix) {\n-        \/\/ requires reflection to be compilable in pre JDK 21\n+    static ThreadFactory virtualWorkerFactory(String prefix) {\n+        \/\/ This API is only available in JDK 21+. Use reflection to make the code compilable with lower JDKs.\n@@ -72,2 +71,2 @@\n-                 ClassNotFoundException  | NullPointerException e) {\n-            throw new RuntimeException(\"Can't instantiate VirtualThreadFactory\", e);\n+                 ClassNotFoundException | NullPointerException e) {\n+            throw new RuntimeException(\"Cannot instantiate VirtualThreadFactory\", e);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/WorkerThreadFactories.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}