{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Collections;\n@@ -51,1 +52,1 @@\n-    public static final int N = 200_000_000;\n+    public static final int N = 20_000_000;\n@@ -63,3 +64,4 @@\n-     * Benchmark                               Mode  Cnt    Score   Error  Units\n-     * JMHSample_39_MemoryAccess.sumArray      avgt   25   50.393 ± 0.407  ms\/op\n-     * JMHSample_39_MemoryAccess.sumArrayList  avgt   25  299.868 ± 1.591  ms\/op\n+     * Benchmark                                       Mode  Cnt    Score   Error  Units\n+     * JMHSample_39_MemoryAccess.sumArray              avgt   25    4.887 ± 0.008  ms\/op\n+     * JMHSample_39_MemoryAccess.sumArrayList          avgt   25   35.765 ± 0.112  ms\/op\n+     * JMHSample_39_MemoryAccess.sumArrayListShuffled  avgt   25  169.301 ± 1.064  ms\/op\n@@ -73,0 +75,1 @@\n+    private List<Integer> shuffledIntList = new ArrayList<>(N);\n@@ -80,0 +83,1 @@\n+            shuffledIntList.add(intArray[i]);\n@@ -81,0 +85,1 @@\n+        Collections.shuffle(shuffledIntList);\n@@ -101,0 +106,9 @@\n+    @Benchmark\n+    public long sumArrayListShuffled() {\n+        long sum = 0;\n+        for (int i = 0; i < N; i++) {\n+            sum += shuffledIntList.get(i);\n+        }\n+        return sum;\n+    }\n+\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_39_MemoryAccess.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"}]}