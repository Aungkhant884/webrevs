{"files":[{"patch":"@@ -204,3 +204,3 @@\n-                    setBlackholeOpts(BlackholeTestMode.noblackhole_inline);\n-                    new BlackholePipelinedTest(false, BlackholeTestMode.noblackhole_inline).runWith(pw, opts);\n-                    new BlackholePipelinedTest(true, BlackholeTestMode.noblackhole_inline).runWith(pw, opts);\n+                    setBlackholeOpts(BlackholeTestMode.nothing);\n+                    new BlackholePipelinedTest(false, BlackholeTestMode.nothing).runWith(pw, opts);\n+                    new BlackholePipelinedTest(true, BlackholeTestMode.nothing).runWith(pw, opts);\n@@ -214,2 +214,2 @@\n-                    setBlackholeOpts(BlackholeTestMode.noblackhole_inline);\n-                    new BlackholeConsecutiveTest(BlackholeTestMode.noblackhole_inline).runWith(pw, opts);\n+                    setBlackholeOpts(BlackholeTestMode.nothing);\n+                    new BlackholeConsecutiveTest(BlackholeTestMode.nothing).runWith(pw, opts);\n@@ -253,1 +253,1 @@\n-            case noblackhole_inline:\n+            case nothing:\n","filename":"jmh-core-benchmarks\/src\/main\/java\/org\/openjdk\/jmh\/validation\/Main.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n-                return \"COMPILER BLACKHOLE BROKEN\";\n-            case noblackhole_inline:\n-                return \"COMPILER BLACKHOLE BROKEN + INLINE HINTS BROKEN\";\n+                return \"COMPILER BLACKHOLE BROKEN, NO INLINE\";\n+            case nothing:\n+                return \"COMPILER BLACKHOLE BROKEN, NO INLINE BROKEN\";\n@@ -62,1 +62,1 @@\n-            case noblackhole_inline:\n+            case nothing:\n","filename":"jmh-core-benchmarks\/src\/main\/java\/org\/openjdk\/jmh\/validation\/ValidationTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-    noblackhole_inline,\n+    nothing,\n","filename":"jmh-core-benchmarks\/src\/main\/java\/org\/openjdk\/jmh\/validation\/tests\/BlackholeTestMode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,3 +70,1 @@\n-                    hints.add(\"dontinline,org\/openjdk\/jmh\/infra\/Blackhole.*\");\n-                } else {\n-                    hints.add(\"inline,org\/openjdk\/jmh\/infra\/Blackhole.*\");\n+                    hints.add(\"dontinline,org\/openjdk\/jmh\/infra\/Blackhole.consume\");\n@@ -74,0 +72,1 @@\n+                hints.add(\"dontinline,org\/openjdk\/jmh\/infra\/Blackhole.consumeCPU\");\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/CompilerHints.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}