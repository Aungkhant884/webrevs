{"files":[{"patch":"@@ -54,1 +54,1 @@\n-            Boolean.parseBoolean(System.getProperty(BLACKHOLE_AUTODETECT_NAME, \"true\"));\n+            Boolean.parseBoolean(System.getProperty(BLACKHOLE_AUTODETECT_NAME, \"false\"));\n@@ -274,1 +274,1 @@\n-        \/\/ Try to autodetect blackhole mode\n+        \/\/ Try to autodetect blackhole mode, fail if not available\n@@ -279,1 +279,3 @@\n-                return blackholeMode;\n+            } else {\n+                blackholeMode = BlackholeMode.FULL_DONTINLINE;\n+                blackholeSelect = BlackholeSelect.FALLBACK;\n@@ -281,0 +283,1 @@\n+            return blackholeMode;\n@@ -283,1 +286,1 @@\n-        \/\/ No dice, fallback to older mode\n+        \/\/ Not forced, not auto-detected, default\n@@ -285,1 +288,1 @@\n-        blackholeSelect = BlackholeSelect.FALLBACK;\n+        blackholeSelect = BlackholeSelect.DEFAULT;\n@@ -322,2 +325,3 @@\n-        FALLBACK(\"fallback, use -D\" + BLACKHOLE_MODE_NAME + \" to force another mode\"),\n-        AUTO(\"auto-detected, use -D\" + BLACKHOLE_AUTODETECT_NAME + \"=false to disable\"),\n+        DEFAULT(\"default, use -D\" + BLACKHOLE_AUTODETECT_NAME + \"=true to auto-detect\"),\n+        AUTO(\"auto-detected\"),\n+        FALLBACK(\"fallback, use -D\" + BLACKHOLE_MODE_NAME + \" to force\"),\n@@ -393,1 +397,1 @@\n-        out.print(\"# Blackhole: \" + mode.desc() + \" (\" + blackholeSelect().desc() + \")\");\n+        out.print(\"# Blackhole mode: \" + mode.desc() + \" (\" + blackholeSelect().desc() + \")\");\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/CompilerHints.java","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"}]}