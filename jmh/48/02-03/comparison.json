{"files":[{"patch":"@@ -269,1 +269,2 @@\n-        if (Boolean.getBoolean(BLACKHOLE_MODE_AUTODETECT_NAME)) {\n+        String autoDetectProp = System.getProperty(BLACKHOLE_MODE_AUTODETECT_NAME, \"true\");\n+        if (Boolean.parseBoolean(autoDetectProp)) {\n@@ -374,0 +375,11 @@\n+    public static void printWarnings(PrintStream out) {\n+        if (blackholeMode() == BlackholeMode.COMPILER) {\n+            out.println(\"NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise\");\n+            out.println(\"extra caution when trusting the results, look into the generated code to check the benchmark still\");\n+            out.println(\"works, and factor in a small probability of new VM bugs. Additionally, while comparisons between\");\n+            out.println(\"different JVMs are already problematic, the performance difference caused by different Blackhole\");\n+            out.println(\"modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.\");\n+            out.println();\n+        }\n+    }\n+\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/CompilerHints.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -244,0 +244,2 @@\n+        CompilerHints.printWarnings(out);\n+\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/format\/TextReportFormat.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}