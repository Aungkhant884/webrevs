{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,8 +141,0 @@\n-    public static Collection<MethodInfo> getMethods(ClassInfo ci) {\n-        List<MethodInfo> ls = new ArrayList<>();\n-        do {\n-            ls.addAll(ci.getMethods());\n-        } while ((ci = ci.getSuperClass()) != null);\n-        return ls;\n-    }\n-\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/BenchmarkGeneratorUtils.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-        for (MethodInfo mi : BenchmarkGeneratorUtils.getMethods(state)) {\n+        for (MethodInfo mi : BenchmarkGeneratorUtils.getAllMethods(state)) {\n@@ -255,1 +255,1 @@\n-            for (MethodInfo mi : BenchmarkGeneratorUtils.getMethods(ci.ci)) {\n+            for (MethodInfo mi : BenchmarkGeneratorUtils.getAllMethods(ci.ci)) {\n@@ -289,1 +289,1 @@\n-        for (MethodInfo mi : BenchmarkGeneratorUtils.getMethods(pci)) {\n+        for (MethodInfo mi : BenchmarkGeneratorUtils.getAllMethods(pci)) {\n@@ -375,1 +375,1 @@\n-        for (MethodInfo mi : BenchmarkGeneratorUtils.getMethods(ci)) {\n+        for (MethodInfo mi : BenchmarkGeneratorUtils.getAllMethods(ci)) {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/StateObjectHandler.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}