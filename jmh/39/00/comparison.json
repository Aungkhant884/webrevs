{"files":[{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import org.junit.Test;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.ct.CompileTest;\n+\n+public class UnnamedPackageTest {\n+    @Benchmark\n+    public void test() {\n+    }\n+\n+    @Test\n+    public void compileTest() {\n+        CompileTest.assertFail(getClass(), \"Benchmark class should have package other than default.\");\n+    }\n+}\n","filename":"jmh-core-ct\/src\/test\/java\/UnnamedPackageTest.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -82,5 +82,18 @@\n-        qualifiedName = name.replace(\"\/\", \".\");\n-        packageName = qualifiedName.substring(0, qualifiedName.lastIndexOf(\".\"));\n-        origQualifiedName = qualifiedName;\n-        qualifiedName = qualifiedName.replace('$', '.');\n-        this.name = qualifiedName.substring(qualifiedName.lastIndexOf(\".\") + 1);\n+        this.qualifiedName = name.replace(\"\/\", \".\");\n+\n+        int dotIndex = qualifiedName.lastIndexOf(\".\");\n+        if (dotIndex != -1) {\n+            packageName = qualifiedName.substring(0, dotIndex);\n+        } else {\n+            packageName = \"\";\n+        }\n+\n+        this.origQualifiedName = qualifiedName;\n+        this.qualifiedName = qualifiedName.replace('$', '.');\n+\n+        dotIndex = qualifiedName.lastIndexOf(\".\");\n+        if (dotIndex != -1) {\n+            this.name = qualifiedName.substring(dotIndex + 1);\n+        } else {\n+            this.name = qualifiedName;\n+        }\n","filename":"jmh-generator-asm\/src\/main\/java\/org\/openjdk\/jmh\/generators\/asm\/ASMClassInfo.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-            return klass.getDeclaringClass().getPackage().getName();\n+            return nameOf(klass.getDeclaringClass().getPackage());\n@@ -51,1 +51,1 @@\n-            return klass.getPackage().getName();\n+            return nameOf(klass.getPackage());\n@@ -174,0 +174,4 @@\n+\n+    private String nameOf(Package pack) {\n+        return pack == null ? \"\" : pack.getName();\n+    }\n","filename":"jmh-generator-reflection\/src\/main\/java\/org\/openjdk\/jmh\/generators\/reflection\/RFClassInfo.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}