{"files":[{"patch":"@@ -833,1 +833,1 @@\n-        \/\/ use supplied jvm, if given\n+        \/\/ use supplied jvm\n@@ -836,0 +836,4 @@\n+        \/\/ Avoid VM warnings interspersing with XML, eg \"Duplicate cpuset controllers detected\"\n+        command.add(\"-XX:+IgnoreUnrecognizedVMOptions\");\n+        command.add(\"-Xlog:all=error\");\n+\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/Runner.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -593,1 +593,16 @@\n-            out.loadFromXML(new ByteArrayInputStream(baos.toByteArray()));\n+            try {\n+                out.loadFromXML(new ByteArrayInputStream(baos.toByteArray()));\n+            } catch (InvalidPropertiesFormatException ex) {\n+                \/\/ Maybe some VM output has preceded the XML content?\n+                String output = new String(baos.toByteArray(), Charset.defaultCharset());\n+                int xmlStart = output.indexOf(\"<?xml\");\n+                if (xmlStart == -1) {\n+                    String msg = \"Unable to parse output of PrintPropertiesMain as XML. Return code \" + err + \", content: \" + System.lineSeparator() + output;\n+                    InvalidPropertiesFormatException wrappedEx = new InvalidPropertiesFormatException(msg);\n+                    wrappedEx.initCause(ex);\n+                    throw wrappedEx;\n+                } else {\n+                    String trimmedOutput = output.substring(xmlStart);\n+                    out.loadFromXML(new ByteArrayInputStream(trimmedOutput.getBytes(Charset.defaultCharset())));\n+                }\n+            }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/Utils.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"}]}