{"files":[{"patch":"@@ -62,6 +62,1 @@\n-    public Writer newClass(String className) throws IOException {\n-        return newClass(className, null);\n-    }\n-\n-    @Override\n-    public Writer newClass(String className, String originatingClassNames) throws IOException {\n+    public Writer newClass(String className, String originatingClassName) throws IOException {\n","filename":"jmh-core-ct\/src\/test\/java\/org\/openjdk\/jmh\/ct\/InMemoryGeneratorDestination.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    public Writer newClass(String className, String originatingClassNames) throws IOException {\n+    public Writer newClass(String className, String originatingClassName) throws IOException {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/FileSystemDestination.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-     * @param originatingClassNames class name(s) causing the creation of this class\n+     * @param originatingClassName class name causing the creation of this class\n@@ -65,1 +65,1 @@\n-    Writer newClass(String className, String originatingClassNames) throws IOException;\n+    Writer newClass(String className, String originatingClassName) throws IOException;\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/GeneratorDestination.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,7 +57,2 @@\n-    public Writer newClass(String className) throws IOException {\n-        return newClass(className, null);\n-    }\n-\n-    @Override\n-    public Writer newClass(String className, String originatingClassNames) throws IOException {\n-        if(originatingClassNames != null) {\n+    public Writer newClass(String className, String originatingClassName) throws IOException {\n+        if(originatingClassName != null) {\n@@ -66,1 +61,1 @@\n-            return processingEnv.getFiler().createSourceFile(className, originatingElements).openWriter();\n+            return processingEnv.getFiler().createSourceFile(className, processingEnv.getElementUtils().getTypeElement(originatingClassName)).openWriter();\n","filename":"jmh-generator-annprocess\/src\/main\/java\/org\/openjdk\/jmh\/generators\/annotations\/APGeneratorDestinaton.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"}]}