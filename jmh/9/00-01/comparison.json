{"files":[{"patch":"@@ -65,0 +65,22 @@\n+    @Test\n+    public void parseOptionalTag() {\n+        String[][] lines = new String[][] {\n+            { \"328650.667569: \", \"instructions:u\", \":      7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" },\n+            { \"328650.667569: \", \"instructions:uk\", \":     7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" },\n+            { \"328650.667569: \", \"instructions:k\", \":      7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" },\n+            { \"328650.667569: \", \"instructions:HG\", \":     7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" },\n+            { \"328650.667569: \", \"instructions:H\", \":      7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" },\n+            { \"328650.667569: \", \"instructions:\", \":       7f82b6a8beb4 ConstantPoolCache::allocate (\/somewhere\/on\/my\/filesystem\/libjvm.so)\" }\n+        };\n+        for (String[] line : lines) {\n+            LinuxPerfAsmProfiler.PerfLine perfLine = LinuxPerfAsmProfiler.parsePerfLine(line[0] + line[1] + line[2]);\n+\n+            Assert.assertEquals(328650.667569D, perfLine.time());\n+            Assert.assertEquals(line[1], perfLine.eventName());\n+            Assert.assertEquals(0x7f82b6a8beb4L, perfLine.addr());\n+            Assert.assertEquals(\"ConstantPoolCache::allocate\", perfLine.symbol());\n+            Assert.assertEquals(\"libjvm.so\", perfLine.lib());\n+        }\n+    }\n+\n+\n","filename":"jmh-core\/src\/test\/java\/org\/openjdk\/jmh\/profile\/PerfParseTest.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}