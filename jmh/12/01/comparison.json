{"files":[{"patch":"@@ -28,4 +28,1 @@\n-import org.openjdk.jmh.annotations.Benchmark;\n-import org.openjdk.jmh.annotations.Scope;\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.*;\n@@ -44,1 +41,5 @@\n-        public void setup(L l1) {\n+        public void setup(L l1, L l2) {\n+\n+        }\n+        @TearDown\n+        public void teardown(L l1, L l2) {\n","filename":"jmh-core-ct\/src\/test\/java\/org\/openjdk\/jmh\/ct\/states\/dag\/doublets\/BenchmarkBenchmarkTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,4 +28,1 @@\n-import org.openjdk.jmh.annotations.Benchmark;\n-import org.openjdk.jmh.annotations.Scope;\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.*;\n@@ -44,1 +41,5 @@\n-        public void setup(L l1) {\n+        public void setup(L l1, L l2) {\n+\n+        }\n+        @TearDown\n+        public void teardown(L l1, L l2) {\n","filename":"jmh-core-ct\/src\/test\/java\/org\/openjdk\/jmh\/ct\/states\/dag\/doublets\/BenchmarkThreadTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,4 +28,1 @@\n-import org.openjdk.jmh.annotations.Benchmark;\n-import org.openjdk.jmh.annotations.Scope;\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.*;\n@@ -44,1 +41,5 @@\n-        public void setup(L l1) {\n+        public void setup(L l1, L l2) {\n+\n+        }\n+        @TearDown\n+        public void teardown(L l1, L l2) {\n","filename":"jmh-core-ct\/src\/test\/java\/org\/openjdk\/jmh\/ct\/states\/dag\/doublets\/ThreadBenchmarkTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,4 +28,1 @@\n-import org.openjdk.jmh.annotations.Benchmark;\n-import org.openjdk.jmh.annotations.Scope;\n-import org.openjdk.jmh.annotations.Setup;\n-import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.*;\n@@ -44,1 +41,5 @@\n-        public void setup(L l1) {\n+        public void setup(L l1, L l2) {\n+\n+        }\n+        @TearDown\n+        public void teardown(L l1, L l2) {\n","filename":"jmh-core-ct\/src\/test\/java\/org\/openjdk\/jmh\/ct\/states\/dag\/doublets\/ThreadThreadTest.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -270,0 +270,1 @@\n+                        stateObjects.add(so);\n@@ -271,4 +272,1 @@\n-                        if (!pso.helperArgs.get(mi.getQualifiedName()).contains(so.toLocal())) {\n-                            stateObjects.add(so);\n-                            pso.depends.add(so);\n-                            pso.helperArgs.put(mi.getQualifiedName(), so.toLocal());\n+                        pso.helperArgs.put(mi.getQualifiedName(), so.toLocal());\n@@ -276,0 +274,2 @@\n+                        if (!pso.depends.contains(so)) {\n+                            pso.depends.add(so);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/StateObjectHandler.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}