{"files":[{"patch":"@@ -60,0 +60,7 @@\n+    private double compute(double d) {\n+        for (int c = 0; c < 10; c++) {\n+            d = d * d \/ Math.PI;\n+        }\n+        return d;\n+    }\n+\n@@ -68,1 +75,1 @@\n-        Math.log(x);\n+        compute(x);\n@@ -74,1 +81,1 @@\n-        return Math.log(x);\n+        return compute(x);\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_08_DeadCode.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -59,0 +59,7 @@\n+    private double compute(double d) {\n+        for (int c = 0; c < 10; c++) {\n+            d = d * d \/ Math.PI;\n+        }\n+        return d;\n+    }\n+\n@@ -60,1 +67,1 @@\n-     * Baseline measurement: how much single Math.log costs.\n+     * Baseline measurement: how much a single compute() costs.\n@@ -65,1 +72,1 @@\n-        return Math.log(x1);\n+        return compute(x1);\n@@ -69,1 +76,1 @@\n-     * While the Math.log(x2) computation is intact, Math.log(x1)\n+     * While the compute(x2) computation is intact, compute(x1)\n@@ -75,2 +82,2 @@\n-        Math.log(x1);\n-        return Math.log(x2);\n+        compute(x1);\n+        return compute(x2);\n@@ -89,1 +96,1 @@\n-        return Math.log(x1) + Math.log(x2);\n+        return compute(x1) + compute(x2);\n@@ -101,2 +108,2 @@\n-        bh.consume(Math.log(x1));\n-        bh.consume(Math.log(x2));\n+        bh.consume(compute(x1));\n+        bh.consume(compute(x2));\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_09_Blackholes.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -66,0 +66,7 @@\n+    private double compute(double d) {\n+        for (int c = 0; c < 10; c++) {\n+            d = d * d \/ Math.PI;\n+        }\n+        return d;\n+    }\n+\n@@ -75,1 +82,1 @@\n-        return Math.log(Math.PI);\n+        return compute(Math.PI);\n@@ -81,1 +88,1 @@\n-        return Math.log(wrongX);\n+        return compute(wrongX);\n@@ -87,1 +94,1 @@\n-        return Math.log(x);\n+        return compute(x);\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_10_ConstantFold.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -79,0 +79,7 @@\n+    private double compute(double d) {\n+        for (int c = 0; c < 10; c++) {\n+            d = d * d \/ Math.PI;\n+        }\n+        return d;\n+    }\n+\n@@ -95,1 +102,1 @@\n-                Math.log(x);\n+                compute(x);\n@@ -104,1 +111,1 @@\n-                bh.consume(Math.log(x));\n+                bh.consume(compute(x));\n","filename":"jmh-samples\/src\/main\/java\/org\/openjdk\/jmh\/samples\/JMHSample_28_BlackholeHelpers.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}