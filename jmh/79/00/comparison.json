{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-    private final Map<MethodInvocation, MethodInvocation> methods;\n+    private final Set<MethodInvocation> methods;\n@@ -46,1 +46,1 @@\n-        this.methods = new TreeMap<>();\n+        this.methods = new TreeSet<>();\n@@ -75,4 +75,1 @@\n-        MethodInvocation exist = methods.get(mi);\n-        if (exist == null) {\n-            methods.put(mi, mi);\n-        } else {\n+        if (methods.contains(mi)) {\n@@ -81,1 +78,1 @@\n-                           exist.method.getQualifiedName() + \". JMH needs an uniquely named method, regardless of the arguments list. \",\n+                            mi.method.getQualifiedName() + \". JMH needs an uniquely named method, regardless of the arguments list. \",\n@@ -83,0 +80,2 @@\n+        } else {\n+            methods.add(mi);\n@@ -88,1 +87,1 @@\n-        for (MethodInvocation m : methods.keySet()) {\n+        for (MethodInvocation m : methods) {\n@@ -134,1 +133,1 @@\n-        for (MethodInvocation mi : methods.keySet()) {\n+        for (MethodInvocation mi : methods) {\n@@ -143,1 +142,1 @@\n-            for (MethodInvocation mi : methods.keySet()) {\n+            for (MethodInvocation mi : methods) {\n@@ -286,1 +285,1 @@\n-        for (MethodInvocation mi : methods.keySet()) {\n+        for (MethodInvocation mi : methods) {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/MethodGroup.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"}]}