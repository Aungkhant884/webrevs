{"files":[{"patch":"@@ -745,2 +745,20 @@\n-            addStateInitializersParamsLabels(result, so);\n-            addStateInitializersHelpers(result, so);\n+            result.add(\"        if (val != null) {\");\n+            result.add(\"            return val;\");\n+            result.add(\"        }\");\n+            result.add(\"        val = new \" + so.type + \"();\");\n+            if (!so.getParamsLabels().isEmpty()) {\n+                result.add(\"        Field f;\");\n+            }\n+            for (String paramName : so.getParamsLabels()) {\n+                for (FieldInfo paramField : so.getParam(paramName)) {\n+                    result.add(\"        f = \" + paramField.getDeclaringClass().getQualifiedName() + \".class.getDeclaredField(\\\"\" + paramName + \"\\\");\");\n+                    result.add(\"        f.setAccessible(true);\");\n+                    result.add(\"        f.set(val, \" + so.getParamAccessor(paramField) + \");\");\n+                }\n+            }\n+            for (HelperMethodInvocation hmi : so.getHelpers()) {\n+                if (hmi.helperLevel != Level.Trial) continue;\n+                if (hmi.type != HelperType.SETUP) continue;\n+                Collection<String> args = so.helperArgs.get(hmi.method.getQualifiedName());\n+                result.add(\"        val.\" + hmi.method.getName() + \"(\" + Utils.join(args, \",\") + \");\");\n+            }\n@@ -780,1 +798,6 @@\n-            addStateInitializersHelpers(result, so);\n+            for (HelperMethodInvocation hmi : so.getHelpers()) {\n+                if (hmi.helperLevel != Level.Trial) continue;\n+                if (hmi.type != HelperType.SETUP) continue;\n+                Collection<String> args = so.helperArgs.get(hmi.method.getQualifiedName());\n+                result.add(\"        val.\" + hmi.method.getName() + \"(\" + Utils.join(args, \",\") + \");\");\n+            }\n@@ -803,2 +826,20 @@\n-            addStateInitializersParamsLabels(result, so);\n-            addStateInitializersHelpers(result, so);\n+            result.add(\"        if (val != null) {\");\n+            result.add(\"            return val;\");\n+            result.add(\"        }\");\n+            result.add(\"        val = new \" + so.type + \"();\");\n+            if (!so.getParamsLabels().isEmpty()) {\n+                result.add(\"        Field f;\");\n+            }\n+            for (String paramName : so.getParamsLabels()) {\n+                for(FieldInfo paramField : so.getParam(paramName)) {\n+                    result.add(\"        f = \" + paramField.getDeclaringClass().getQualifiedName() + \".class.getDeclaredField(\\\"\" + paramName + \"\\\");\");\n+                    result.add(\"        f.setAccessible(true);\");\n+                    result.add(\"        f.set(val, \" + so.getParamAccessor(paramField) + \");\");\n+                }\n+            }\n+            for (HelperMethodInvocation hmi : so.getHelpers()) {\n+                if (hmi.helperLevel != Level.Trial) continue;\n+                if (hmi.type != HelperType.SETUP) continue;\n+                Collection<String> args = so.helperArgs.get(hmi.method.getQualifiedName());\n+                result.add(\"        val.\" + hmi.method.getName() + \"(\" + Utils.join(args, \",\") + \");\");\n+            }\n@@ -818,26 +859,0 @@\n-    private void addStateInitializersHelpers(List<String> result, StateObject so) {\n-        for (HelperMethodInvocation hmi : so.getHelpers()) {\n-            if (hmi.helperLevel != Level.Trial) continue;\n-            if (hmi.type != HelperType.SETUP) continue;\n-            Collection<String> args = so.helperArgs.get(hmi.method.getQualifiedName());\n-            result.add(\"        val.\" + hmi.method.getName() + \"(\" + Utils.join(args, \",\") + \");\");\n-        }\n-    }\n-\n-    private void addStateInitializersParamsLabels(List<String> result, StateObject so) {\n-        result.add(\"        if (val != null) {\");\n-        result.add(\"            return val;\");\n-        result.add(\"        }\");\n-        result.add(\"        val = new \" + so.type + \"();\");\n-        if (!so.getParamsLabels().isEmpty()) {\n-            result.add(\"        Field f;\");\n-        }\n-        for (String paramName : so.getParamsLabels()) {\n-            for (FieldInfo paramField : so.getParam(paramName)) {\n-                result.add(\"        f = \" + paramField.getDeclaringClass().getQualifiedName() + \".class.getDeclaredField(\\\"\" + paramName + \"\\\");\");\n-                result.add(\"        f.setAccessible(true);\");\n-                result.add(\"        f.set(val, \" + so.getParamAccessor(paramField) + \");\");\n-            }\n-        }\n-    }\n-\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/StateObjectHandler.java","additions":46,"deletions":31,"binary":false,"changes":77,"status":"modified"}]}