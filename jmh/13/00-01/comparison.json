{"files":[{"patch":"@@ -627,1 +627,1 @@\n-            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult(res.allOps, res.measuredOps);\");\n+            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult((long)res.allOps, (long)res.measuredOps);\");\n@@ -759,1 +759,1 @@\n-            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult(res.allOps, res.measuredOps);\");\n+            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult((long)res.allOps, (long)res.measuredOps);\");\n@@ -916,1 +916,1 @@\n-            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult(res.allOps, res.measuredOps);\");\n+            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult((long)res.allOps, (long)res.measuredOps);\");\n@@ -1025,1 +1025,1 @@\n-            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult(totalOps, totalOps);\");\n+            writer.println(ident(3) + \"BenchmarkTaskResult results = new BenchmarkTaskResult((long)totalOps, (long)totalOps);\");\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/BenchmarkGenerator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        double allOps = result.getMetadata().getAllOps();\n+        long allOps = result.getMetadata().getAllOps();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/ClassloaderProfiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-                double allOps = iResult.getMetadata().getAllOps();\n+                long allOps = iResult.getMetadata().getAllOps();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/GCProfiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -318,1 +318,1 @@\n-            double totalOpts;\n+            long totalOpts;\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/LinuxPerfNormProfiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,2 +37,2 @@\n-    private final double warmupOps;\n-    private final double measurementOps;\n+    private final long warmupOps;\n+    private final long measurementOps;\n@@ -40,1 +40,1 @@\n-    public BenchmarkResultMetaData(long warmupTime, long measurementTime, long stopTime, double warmupOps, double measurementOps) {\n+    public BenchmarkResultMetaData(long warmupTime, long measurementTime, long stopTime, long warmupOps, long measurementOps) {\n@@ -68,1 +68,1 @@\n-    public double getMeasurementOps() {\n+    public long getMeasurementOps() {\n@@ -72,1 +72,1 @@\n-    public double getWarmupOps() {\n+    public long getWarmupOps() {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/results\/BenchmarkResultMetaData.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private final double allOperations;\n+    private final long allOperations;\n@@ -40,1 +40,1 @@\n-    private final double measuredOperations;\n+    private final long measuredOperations;\n@@ -44,1 +44,1 @@\n-    public BenchmarkTaskResult(double allOperations, double measuredOperations) {\n+    public BenchmarkTaskResult(long allOperations, long measuredOperations) {\n@@ -58,1 +58,1 @@\n-    public double getAllOps() {\n+    public long getAllOps() {\n@@ -62,1 +62,1 @@\n-    public double getMeasuredOps() {\n+    public long getMeasuredOps() {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/results\/BenchmarkTaskResult.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,2 +33,2 @@\n-    private final double allOps;\n-    private final double measuredOps;\n+    private final long allOps;\n+    private final long measuredOps;\n@@ -36,1 +36,1 @@\n-    public IterationResultMetaData(double allOps, double measuredOps) {\n+    public IterationResultMetaData(long allOps, long measuredOps) {\n@@ -41,1 +41,1 @@\n-    public double getMeasuredOps() {\n+    public long getMeasuredOps() {\n@@ -45,1 +45,1 @@\n-    public double getAllOps() {\n+    public long getAllOps() {\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/results\/IterationResultMetaData.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -248,2 +248,2 @@\n-        double allWarmup = 0;\n-        double allMeasurement = 0;\n+        long allWarmup = 0;\n+        long allMeasurement = 0;\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/BaseRunner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -396,2 +396,2 @@\n-        double allOps = 0;\n-        double measuredOps = 0;\n+        long allOps = 0;\n+        long measuredOps = 0;\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/BenchmarkHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}