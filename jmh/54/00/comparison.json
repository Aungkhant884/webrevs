{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,15 @@\n-    final SortedMap<Long, T> from;\n+    static final class Interval implements Comparable<Interval> {\n+        final long from, to;\n+\n+        public Interval(long from, long to) {\n+            this.from = from;\n+            this.to = to;\n+        }\n+\n+        @Override\n+        public int compareTo(Interval other) {\n+            return (int)(this.from - other.from);\n+        }\n+    }\n+\n+    final SortedMap<Interval, T> from;\n@@ -40,1 +54,1 @@\n-        this.from.put(from, val);\n+        this.from.put(new Interval(from, to), val);\n@@ -44,1 +58,2 @@\n-        T key = from.get(k);\n+        Interval i = new Interval(k, k);\n+        T key = from.get(i);\n@@ -48,1 +63,1 @@\n-        SortedMap<Long, T> head = from.headMap(k);\n+        SortedMap<Interval, T> head = from.headMap(i);\n@@ -52,1 +67,6 @@\n-            return from.get(head.lastKey());\n+            Interval last = head.lastKey();\n+            if (k >= last.from && k < last.to) {\n+                return from.get(last);  \/\/ Interval from..to contains k\n+            } else {\n+                return null;\n+            }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/util\/IntervalMap.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"}]}