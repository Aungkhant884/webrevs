{"files":[{"patch":"@@ -76,3 +76,3 @@\n-        double instructions = ProfilerTestUtils.checkedGet(sr, \"instructions\").getScore();\n-        double cycles = ProfilerTestUtils.checkedGet(sr, \"cycles\").getScore();\n-        double branches = ProfilerTestUtils.checkedGet(sr, \"branches\").getScore();\n+        double instructions = ProfilerTestUtils.checkedGet(sr, \"instructions\", \"instructions:u\").getScore();\n+        double cycles = ProfilerTestUtils.checkedGet(sr, \"cycles\", \"cycles:u\").getScore();\n+        double branches = ProfilerTestUtils.checkedGet(sr, \"branches\", \"branches:u\").getScore();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/LinuxPerfNormProfilerTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.Arrays;\n@@ -33,11 +34,5 @@\n-    public static Result checkedGet(Map<String, Result> sr, String name) {\n-        Result r = sr.get(name);\n-        if (r != null) {\n-            return r;\n-        } else {\n-            StringBuilder sb = new StringBuilder();\n-            for (String k : sr.keySet()) {\n-                sb.append(k);\n-                sb.append(\" = \");\n-                sb.append(sr.get(k));\n-                sb.append(System.lineSeparator());\n+    public static Result checkedGet(Map<String, Result> sr, String... names) {\n+        for (String name : names) {\n+            Result r = sr.get(name);\n+            if (r != null) {\n+                return r;\n@@ -45,1 +40,0 @@\n-            throw new IllegalStateException(\"Cannot find the result \\\"\" + name + \"\\\". Available entries: \" + sb);\n@@ -47,0 +41,9 @@\n+\n+        StringBuilder sb = new StringBuilder();\n+        for (String k : sr.keySet()) {\n+            sb.append(k);\n+            sb.append(\" = \");\n+            sb.append(sr.get(k));\n+            sb.append(System.lineSeparator());\n+        }\n+        throw new IllegalStateException(\"Cannot find the result for \" + Arrays.toString(names) + \"\\\". Available entries: \" + sb);\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/ProfilerTestUtils.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -49,1 +49,3 @@\n-        Collection<String> failMsg = Utils.tryWith(PerfSupport.PERF_EXEC, \"stat\", \"--event\", Utils.join(requestedEventNames, \",\"), \"--log-fd\", \"2\", \"echo\", \"1\");\n+        String[] senseCmd = { PerfSupport.PERF_EXEC, \"stat\", \"--event\", Utils.join(requestedEventNames, \",\"), \"--log-fd\", \"2\", \"echo\", \"1\" };\n+\n+        Collection<String> failMsg = Utils.tryWith(senseCmd);\n@@ -54,3 +56,5 @@\n-        Collection<String> passMsg = Utils.tryWith(PerfSupport.PERF_EXEC, \"stat\", \"--event\", Utils.join(requestedEventNames, \",\"), \"--log-fd\", \"2\", \"echo\", \"1\");\n-        if (PerfSupport.containsUnsupported(passMsg, \"\")) {\n-            throw new ProfilerException(\"Unsupported events: \" + passMsg);\n+        Collection<String> passMsg = Utils.tryWith(senseCmd);\n+        for (String ev : requestedEventNames) {\n+            if (PerfSupport.containsUnsupported(passMsg, ev)) {\n+                throw new ProfilerException(\"Unsupported event: \" + ev);\n+            }\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/LinuxPerfAsmProfiler.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -134,1 +134,2 @@\n-            Collection<String> res = Utils.tryWith(PerfSupport.PERF_EXEC, \"stat\", \"--log-fd\", \"2\", \"--field-separator\", \",\", \"--event\", ev, \"echo\", \"1\");\n+            String[] senseCmd = { PerfSupport.PERF_EXEC, \"stat\", \"--log-fd\", \"2\", \"--field-separator\", \",\", \"--event\", ev, \"echo\", \"1\" };\n+            Collection<String> res = Utils.tryWith(senseCmd);\n@@ -136,1 +137,1 @@\n-                Collection<String> out = Utils.runWith(PerfSupport.PERF_EXEC, \"stat\", \"--log-fd\", \"2\", \"--field-separator\", \",\", \"--event\", ev, \"echo\", \"1\");\n+                Collection<String> out = Utils.runWith(senseCmd);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/LinuxPerfNormProfiler.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}