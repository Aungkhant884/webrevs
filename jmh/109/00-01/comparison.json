{"files":[{"patch":"@@ -33,0 +33,7 @@\n+    - name: Set up perf (Linux)\n+      run: |\n+        sudo apt-get update\n+        sudo apt-get install -y linux-tools-common linux-tools-generic linux-tools-`uname -r`\n+        echo -1 | sudo tee \/proc\/sys\/kernel\/perf_event_paranoid\n+        perf stat echo 1\n+      if: (runner.os == 'Linux')\n","filename":".github\/workflows\/pre-integration.yml","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    public Class<?> allocClass() throws Exception {\n+    public Class<?> work() throws Exception {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/ClassloadProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    public void empty() {\n+    public void work() {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/CompilerProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -48,1 +49,1 @@\n-    public void empty() {\n+    public void work() {\n@@ -54,1 +55,1 @@\n-        Fixtures.work();\n+        Blackhole.consumeCPU(1);\n@@ -74,1 +75,1 @@\n-        String out = sr.get(\"asm\").extendedInfo();\n+        String out = sr.get(\"·asm\").extendedInfo();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/DTraceAsmProfilerTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    public void empty() {\n+    public void work() {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/JavaFlightRecorderProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -48,1 +49,1 @@\n-    public void empty() {\n+    public void work() {\n@@ -54,1 +55,1 @@\n-        Fixtures.work();\n+        Blackhole.consumeCPU(1);\n@@ -74,1 +75,1 @@\n-        String out = sr.get(\"asm\").extendedInfo();\n+        String out = sr.get(\"·asm\").extendedInfo();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/LinuxPerfAsmProfilerTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    public void empty() {\n+    public void work() {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/LinuxPerfC2CProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -49,1 +50,1 @@\n-    public void empty() {\n+    public void work() {\n@@ -55,1 +56,1 @@\n-        Fixtures.work();\n+        Blackhole.consumeCPU(1);\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/LinuxPerfNormProfilerTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -50,1 +51,1 @@\n-    public void empty() {\n+    public void work() {\n@@ -56,1 +57,1 @@\n-        Fixtures.work();\n+        Blackhole.consumeCPU(1);\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/LinuxPerfProfilerTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    public void empty() {\n+    public void work() {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/MemPoolProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    public void empty() {\n+    public void work() {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/StackProfilerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.infra.Blackhole;\n@@ -49,1 +50,1 @@\n-    public void empty() {\n+    public void work() {\n@@ -55,1 +56,1 @@\n-        Fixtures.work();\n+        Blackhole.consumeCPU(1);\n@@ -75,1 +76,1 @@\n-        String out = sr.get(\"asm\").extendedInfo();\n+        String out = sr.get(\"·asm\").extendedInfo();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/profilers\/WinPerfAsmProfilerTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}