{"files":[{"patch":"@@ -46,1 +46,1 @@\n-            \/\/ this body is intentionally left blank\n+            Thread.yield();\n@@ -54,1 +54,1 @@\n-            \/\/ this body is intentionally left blank\n+            Thread.yield();\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/control\/ControlStopTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -571,0 +571,1 @@\n+            writer.println(ident(4) + \"if (control.shouldYield) Thread.yield();\");\n@@ -596,0 +597,1 @@\n+            writer.println(ident(5) + \"if (control.shouldYield) Thread.yield();\");\n@@ -705,0 +707,1 @@\n+            writer.println(ident(4) + \"if (control.shouldYield) Thread.yield();\");\n@@ -729,0 +732,1 @@\n+            writer.println(ident(5) + \"if (control.shouldYield) Thread.yield();\");\n@@ -863,0 +867,1 @@\n+            writer.println(ident(4) + \"if (control.shouldYield) Thread.yield();\");\n@@ -892,0 +897,1 @@\n+            writer.println(ident(5) + \"if (control.shouldYield) Thread.yield();\");\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/generators\/core\/BenchmarkGenerator.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -207,0 +207,5 @@\n+\n+            @Override\n+            boolean shouldYield() {\n+                return true;\n+            }\n@@ -239,0 +244,5 @@\n+\n+        \/**\n+         * @return Executing threads should yield occasionally to guarantee progress?\n+         *\/\n+        boolean shouldYield() { return false; }\n@@ -312,0 +322,1 @@\n+                EXECUTOR_TYPE.shouldYield(),\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/BenchmarkHandler.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+        Utils.check(InfraControl.class, \"shouldYield\");\n@@ -62,0 +63,1 @@\n+                        boolean shouldYield,\n@@ -63,1 +65,1 @@\n-        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, notifyControl);\n+        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, shouldYield, notifyControl);\n@@ -168,0 +170,1 @@\n+    public final boolean shouldYield;\n@@ -183,0 +186,1 @@\n+                          boolean shouldYield,\n@@ -202,0 +206,2 @@\n+        this.shouldYield = shouldYield;\n+\n@@ -284,0 +290,1 @@\n+                          boolean shouldYield,\n@@ -285,1 +292,1 @@\n-        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, notifyControl);\n+        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, shouldYield, notifyControl);\n@@ -295,0 +302,1 @@\n+                          boolean shouldYield,\n@@ -296,1 +304,1 @@\n-        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, notifyControl);\n+        super(benchmarkParams, iterationParams, preSetup, preTearDown, firstIteration, lastIteration, shouldYield, notifyControl);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/InfraControl.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}