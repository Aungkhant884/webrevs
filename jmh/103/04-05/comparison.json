{"files":[{"patch":"@@ -165,1 +165,1 @@\n-    @Threads(4)\n+    @Threads(16)\n@@ -221,14 +221,14 @@\n-    @Test\n-    public void invokeAPI_fjp_common() throws RunnerException {\n-        int cores = Runtime.getRuntime().availableProcessors();\n-        for (int c = 0; c < Fixtures.repetitionCount(); c++) {\n-            Options opt = new OptionsBuilder()\n-                    .include(Fixtures.getTestMask(this.getClass()))\n-                    .jvmArgsAppend(\"-Djmh.executor=FJP_COMMON\")\n-                    .param(\"benchmarkExecutorType\", \"FJP\")\n-                    .threads(cores)\n-                    .shouldFailOnError(true)\n-                    .build();\n-            new Runner(opt).run();\n-        }\n-    }\n+\/\/    @Test\n+\/\/    public void invokeAPI_fjp_common() throws RunnerException {\n+\/\/        int cores = Runtime.getRuntime().availableProcessors();\n+\/\/        for (int c = 0; c < Fixtures.repetitionCount(); c++) {\n+\/\/            Options opt = new OptionsBuilder()\n+\/\/                    .include(Fixtures.getTestMask(this.getClass()))\n+\/\/                    .jvmArgsAppend(\"-Djmh.executor=FJP_COMMON\")\n+\/\/                    .param(\"benchmarkExecutorType\", \"FJP\")\n+\/\/                    .threads(cores)\n+\/\/                    .shouldFailOnError(true)\n+\/\/                    .build();\n+\/\/            new Runner(opt).run();\n+\/\/        }\n+\/\/    }\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/threads\/BenchmarkBenchSameThreadTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}