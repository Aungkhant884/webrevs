{"files":[{"patch":"@@ -165,1 +165,1 @@\n-    @Threads(16)\n+    @Threads(4)\n@@ -221,15 +221,0 @@\n-\/\/    @Test\n-\/\/    public void invokeAPI_fjp_common() throws RunnerException {\n-\/\/        int cores = Runtime.getRuntime().availableProcessors();\n-\/\/        for (int c = 0; c < Fixtures.repetitionCount(); c++) {\n-\/\/            Options opt = new OptionsBuilder()\n-\/\/                    .include(Fixtures.getTestMask(this.getClass()))\n-\/\/                    .jvmArgsAppend(\"-Djmh.executor=FJP_COMMON\")\n-\/\/                    .param(\"benchmarkExecutorType\", \"FJP\")\n-\/\/                    .threads(cores)\n-\/\/                    .shouldFailOnError(true)\n-\/\/                    .build();\n-\/\/            new Runner(opt).run();\n-\/\/        }\n-\/\/    }\n-\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/threads\/BenchmarkBenchSameThreadTest.java","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    private final BlockingQueue<WorkerData> orphanedWokerData;\n+    private final BlockingQueue<WorkerData> orphanedWorkerData;\n@@ -83,1 +83,1 @@\n-        orphanedWokerData = new ArrayBlockingQueue<>(threads);\n+        orphanedWorkerData = new ArrayBlockingQueue<>(threads);\n@@ -448,1 +448,1 @@\n-        orphanedWokerData.addAll(workerData.values());\n+        orphanedWorkerData.addAll(workerData.values());\n@@ -480,1 +480,1 @@\n-            wd = orphanedWokerData.poll();\n+            wd = orphanedWorkerData.poll();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/BenchmarkHandler.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}