{"files":[{"patch":"@@ -56,1 +56,1 @@\n- * Tests if harness executes setup, run, and tearDown in the same workers.\n+ * Tests if harness executes setup, run, and tearDown in the virtual or platform threads.\n@@ -59,1 +59,1 @@\n-public class BenchExecutorTest {\n+public class BenchVirtualThreadExecutorTest {\n@@ -62,1 +62,1 @@\n-    boolean expected;\n+    boolean isVirtual;\n@@ -105,1 +105,1 @@\n-        expected.add(this.expected);\n+        expected.add(this.isVirtual);\n@@ -131,1 +131,1 @@\n-                    .param(\"expected\", \"false\")\n+                    .param(\"isVirtual\", \"false\")\n@@ -144,1 +144,1 @@\n-                    .param(\"expected\", \"false\")\n+                    .param(\"isVirtual\", \"false\")\n@@ -158,1 +158,1 @@\n-                        .param(\"expected\", \"true\")\n+                        .param(\"isVirtual\", \"true\")\n@@ -190,7 +190,6 @@\n-            if (IS_VIRTUAL != null) {\n-                try {\n-                    return (boolean) IS_VIRTUAL.invoke(t);\n-                } catch (IllegalAccessException | InvocationTargetException e) {\n-                    return false;\n-                }\n-            } else {\n+            if (!hasVirtualThreads()) {\n+                return false;\n+            }\n+            try {\n+                return (boolean) IS_VIRTUAL.invoke(t);\n+            } catch (IllegalAccessException | InvocationTargetException e) {\n","filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/threads\/BenchVirtualThreadExecutorTest.java","additions":13,"deletions":14,"binary":false,"changes":27,"previous_filename":"jmh-core-it\/src\/test\/java\/org\/openjdk\/jmh\/it\/threads\/BenchExecutorTest.java","status":"renamed"}]}