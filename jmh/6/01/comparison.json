{"files":[{"patch":"@@ -184,0 +184,4 @@\n+        if (JMH_LOCK_IGNORE) {\n+            out.println(\"# WARNING: JMH lock is ignored by user request, make sure no other JMH instances are running\");\n+            return internalRun();\n+        }\n@@ -202,6 +206,1 @@\n-                String msg = \"Unable to acquire the JMH lock (\" + JMH_LOCK_FILE + \"): already taken by another JMH instance\";\n-                if (JMH_LOCK_IGNORE) {\n-                    out.println(\"# WARNING: \" + msg + \", ignored by user's request.\");\n-                } else {\n-                    throw new RunnerException(\"ERROR: \" + msg + \", exiting. Use -Djmh.ignoreLock=true to forcefully continue.\");\n-                }\n+                throw new RunnerException(\"ERROR: Unable to acquire the JMH lock (\" + JMH_LOCK_FILE + \"): already taken by another JMH instance, exiting. Use -Djmh.ignoreLock=true to forcefully continue.\");\n@@ -212,7 +211,1 @@\n-            String msg = \"Exception while trying to acquire the JMH lock (\" + JMH_LOCK_FILE + \"): \" + e.getMessage();\n-            if (JMH_LOCK_IGNORE) {\n-                out.println(\"# WARNING: \" + msg + \", ignored by user's request.\");\n-                return internalRun();\n-            } else {\n-                throw new RunnerException(\"ERROR: \" + msg  + \", exiting. Use -Djmh.ignoreLock=true to forcefully continue.\");\n-            }\n+            throw new RunnerException(\"ERROR: Exception while trying to acquire the JMH lock (\" + JMH_LOCK_FILE + \"), exiting. Use -Djmh.ignoreLock=true to forcefully continue.\", e);\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/runner\/Runner.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"}]}