{"files":[{"patch":"@@ -44,7 +44,1 @@\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.EnumSet;\n-import java.util.HashSet;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n+import java.util.*;\n@@ -86,1 +80,1 @@\n-                .withRequiredArg().ofType(OutputType.class).withValuesSeparatedBy(\",\").describedAs(\"format+\");\n+                .withRequiredArg().ofType(OutputType.class).withValuesSeparatedBy(\",\").describedAs(\"format+\").defaultsTo(OutputType.text);\n@@ -106,0 +100,1 @@\n+\n@@ -198,2 +193,0 @@\n-        StringBuilder profilerOptions = new StringBuilder();\n-\n@@ -201,1 +194,1 @@\n-            ProfilerOptionsBuilder builder = new ProfilerOptionsBuilder(set, profilerOptions);\n+            ProfilerOptionsBuilder builder = new ProfilerOptionsBuilder(set);\n@@ -260,0 +253,3 @@\n+            output = optOutput.values(set);\n+            builder.appendMulti(optOutput);\n+\n@@ -263,1 +259,1 @@\n-            HashSet<String> secondaryEvents = new HashSet<>();\n+            Set<String> secondaryEvents = new HashSet<>();\n@@ -276,0 +272,5 @@\n+                String evName = set.valueOf(optEvent);\n+                if (evName.contains(\",\")) {\n+                    throw new ProfilerException(\"Event name should not contain commas: \" + evName);\n+                }\n+                outputFilePrefix = evName;\n@@ -277,1 +278,0 @@\n-                outputFilePrefix = set.valueOf(optEvent);\n@@ -279,1 +279,1 @@\n-                if (secondaryEvents.size() == 0) {\n+                if (secondaryEvents.isEmpty()) {\n@@ -293,6 +293,1 @@\n-            List<OutputType> output = new ArrayList<>(optOutput.values(set));\n-            if (secondaryEvents.isEmpty()) {\n-                if (output.isEmpty()) {\n-                    output.add(OutputType.text);\n-                }\n-            } else {\n+            if (!secondaryEvents.isEmpty()) {\n@@ -300,1 +295,1 @@\n-                    throw new ProfilerException(\"Multiple event capture not supported on async-profiler 1.x\");\n+                    throw new ProfilerException(\"Secondary event capture not supported on async-profiler 1.x\");\n@@ -302,4 +297,2 @@\n-                if (output.isEmpty()) {\n-                    output.add(OutputType.jfr);\n-                } else if (output.size() > 1 || output.get(0) != OutputType.jfr) {\n-                    throw new ProfilerException(\"When multiple events are selected, only output=\" + OutputType.jfr.name() + \" is supported, found: \" + output);\n+                if (output.size() > 1 || output.get(0) != OutputType.jfr) {\n+                    throw new ProfilerException(\"Secondary event capture is only supported with output=\" + OutputType.jfr.name());\n@@ -308,3 +301,2 @@\n-            builder.appendMulti(optOutput, output);\n-            this.output = output;\n-            profilerConfig = profilerOptions.toString();\n+\n+            profilerConfig = builder.profilerOptions();\n@@ -334,0 +326,1 @@\n+                \/\/ ...and start collecting again.\n@@ -341,1 +334,0 @@\n-        String fileConfig = \"\";\n@@ -343,1 +335,3 @@\n-            fileConfig = \",file=\" + outputFile(trialOutDir, \"%s.jfr\").getAbsolutePath();\n+            execute(\"start,\" + profilerConfig + \",file=\" + outputFile(\"jfr-%s.jfr\").getAbsolutePath());\n+        } else {\n+            execute(\"start,\" + profilerConfig);\n@@ -345,1 +339,0 @@\n-        execute(\"start,\" + profilerConfig + fileConfig);\n@@ -374,2 +367,2 @@\n-        StringWriter outputWriter = new StringWriter();\n-        PrintWriter printWriter = new PrintWriter(outputWriter);\n+        StringWriter sw = new StringWriter();\n+        PrintWriter pw = new PrintWriter(sw);\n@@ -379,1 +372,2 @@\n-                    File textOutput = dump(trialOutDir, \"summary-%s.txt\", \"summary,flat=\" + flat + \",traces=\" + traces);\n+                    File out = outputFile(\"summary-%s.txt\");\n+                    dump(out, \"summary,flat=\" + flat + \",traces=\" + traces);\n@@ -381,2 +375,2 @@\n-                        for (String line : FileUtils.readAllLines(textOutput)) {\n-                            printWriter.println(line);\n+                        for (String line : FileUtils.readAllLines(out)) {\n+                            pw.println(line);\n@@ -389,1 +383,1 @@\n-                    dump(trialOutDir, \"collapsed-%s.csv\", \"collapsed\");\n+                    dump(outputFile(\"collapsed-%s.csv\"), \"collapsed\");\n@@ -395,1 +389,1 @@\n-                        dump(trialOutDir, \"flame-%s-forward.\" + ext, \"flamegraph\");\n+                        dump(outputFile(\"flame-%s-forward.\" + ext), \"flamegraph\");\n@@ -398,1 +392,1 @@\n-                        dump(trialOutDir, \"flame-%s-reverse.\" + ext, \"flamegraph,reverse\");\n+                        dump(outputFile(\"flame-%s-reverse.\" + ext), \"flamegraph,reverse\");\n@@ -402,1 +396,1 @@\n-                    dump(trialOutDir, \"tree-%s.html\", \"tree\");\n+                    dump(outputFile(\"tree-%s.html\"), \"tree\");\n@@ -410,1 +404,1 @@\n-        printWriter.println(\"Async profiler results:\");\n+        pw.println(\"Async profiler results:\");\n@@ -412,2 +406,2 @@\n-            printWriter.print(\"  \");\n-            printWriter.println(file.getPath());\n+            pw.print(\"  \");\n+            pw.println(file.getPath());\n@@ -415,2 +409,2 @@\n-        printWriter.flush();\n-        printWriter.close();\n+        pw.flush();\n+        pw.close();\n@@ -418,1 +412,1 @@\n-        return new TextResult(outputWriter.toString(), \"async\");\n+        return new TextResult(sw.toString(), \"async\");\n@@ -421,4 +415,2 @@\n-    private File dump(File specificOutDir, String fileNameFormatString, String content) {\n-        File output = outputFile(specificOutDir, fileNameFormatString);\n-        execute(content + \",\" + profilerConfig + \",file=\" + output.getAbsolutePath());\n-        return output;\n+    private void dump(File target, String command) {\n+        execute(command + \",\" + profilerConfig + \",file=\" + target.getAbsolutePath());\n@@ -427,2 +419,2 @@\n-    private File outputFile(File specificOutDir, String fileNameFormatString) {\n-        File output = new File(specificOutDir, String.format(fileNameFormatString, outputFilePrefix));\n+    private File outputFile(String fileNameFormat) {\n+        File output = new File(trialOutDir, String.format(fileNameFormat, outputFilePrefix));\n@@ -468,1 +460,1 @@\n-        ProfilerOptionsBuilder(OptionSet optionSet, StringBuilder profilerOptions) {\n+        ProfilerOptionsBuilder(OptionSet optionSet) {\n@@ -470,1 +462,1 @@\n-            this.profilerOptions = profilerOptions;\n+            this.profilerOptions = new StringBuilder();\n@@ -510,2 +502,5 @@\n-                List<T> ts = optionSet.valuesOf(option);\n-                appendMulti(option, ts);\n+                String optionName = option.options().iterator().next();\n+                for (T value : optionSet.valuesOf(option)) {\n+                    separate();\n+                    profilerOptions.append(optionName).append('=').append(value.toString());\n+                }\n@@ -515,5 +510,2 @@\n-        private <T> void appendMulti(OptionSpec<T> option, List<T> ts) {\n-            String optionName = option.options().iterator().next();\n-            for (T value : ts) {\n-                profilerOptions.append(',').append(optionName).append('=').append(value.toString());\n-            }\n+        public String profilerOptions() {\n+            return profilerOptions.toString();\n","filename":"jmh-core\/src\/main\/java\/org\/openjdk\/jmh\/profile\/AsyncProfiler.java","additions":53,"deletions":61,"binary":false,"changes":114,"status":"modified"}]}