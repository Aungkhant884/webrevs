{"files":[{"patch":"@@ -999,1 +999,1 @@\n-      __ addw(dest->as_register_lo(), src->as_register(), zr); break;\n+      __ sign_extend(dest->as_register_lo(), src->as_register(), 32); break;\n@@ -1005,2 +1005,1 @@\n-      _masm->block_comment(\"FIXME: This coulde be no-op\");\n-      __ addw(dest->as_register(), src->as_register_lo(), zr); break;\n+      __ sign_extend(dest->as_register(), src->as_register_lo(), 32); break;\n@@ -1319,1 +1318,1 @@\n-        __ addw(Rdst, Rdst, zr);\n+        __ sign_extend(Rdst, Rdst, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -82,1 +82,0 @@\n-  \/\/ Nothing to do for T_INT\n@@ -84,1 +83,1 @@\n-  addw(result, result, zr);\n+  sign_extend(result, result, 32);\n@@ -206,1 +205,1 @@\n-    addw(index, index, zr);\n+    sign_extend(index, index, 32);\n@@ -363,1 +362,1 @@\n-  addw(r, r, zr); \/\/ signed extended\n+  sign_extend(r, r, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-  \/\/ Load float value from 'address'. The value is loaded onto the FPU register v0.\n+  \/\/ Load float value from 'address'. The value is loaded onto the fp register f10.\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1561,3 +1561,1 @@\n-  \/\/ addw: The result is clipped to 32 bits, then the sign bit is extended,\n-  \/\/ and the result is stored in Rd\n-  addw(Rd, Rd, zr);\n+  sign_extend(Rd, Rd, 32);\n@@ -1568,3 +1566,1 @@\n-  \/\/ addw: The result is clipped to 32 bits, then the sign bit is extended,\n-  \/\/ and the result is stored in Rd\n-  addw(Rd, Rd, zr);\n+  sign_extend(Rd, Rd, 32);\n@@ -1575,3 +1571,1 @@\n-  \/\/ addw: The result is clipped to 32 bits, then the sign bit is extended,\n-  \/\/ and the result is stored in Rd\n-  addw(Rd, Rd, zr);\n+  sign_extend(Rd, Rd, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1213,1 +1213,1 @@\n-        addw(Rt, Rt, zr);\n+        sign_extend(Rt, Rt, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7926,1 +7926,1 @@\n-    __ addw(as_Register($dst$$reg), as_Register($src$$reg), zr);\n+    __ sign_extend(as_Register($dst$$reg), as_Register($src$$reg), 32);\n@@ -7938,1 +7938,1 @@\n-    __ addw(as_Register($dst$$reg), as_Register($src$$reg), zr);\n+    __ sign_extend(as_Register($dst$$reg), as_Register($src$$reg), 32);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -782,1 +782,1 @@\n-      __ addw(dst.first()->as_Register(), src.first()->as_Register(), zr);\n+      __ sign_extend(dst.first()->as_Register(), src.first()->as_Register(), 32);\n@@ -1644,1 +1644,0 @@\n-    __ addw(t0, t0, zr);\n@@ -2430,1 +2429,1 @@\n-  __ addiw(c_rarg1, j_rarg0, 0);\n+  __ sign_extend(c_rarg1, j_rarg0, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1787,3 +1787,2 @@\n-    \/\/ i.e. sign bit set\n-    __ test_bit(t0, src_pos, 31);\n-    __ bnez(t0, L_failed);\n+    __ sign_extend(t0, src_pos, 32);\n+    __ bltz(t0, L_failed);\n@@ -1795,3 +1794,2 @@\n-    \/\/ i.e. sign bit set\n-    __ test_bit(t0, dst_pos, 31);\n-    __ bnez(t0, L_failed);\n+    __ sign_extend(t0, dst_pos, 32);\n+    __ bltz(t0, L_failed);\n@@ -1805,4 +1803,2 @@\n-    __ addw(scratch_length, length, zr);    \/\/ length (elements count, 32-bits value)\n-    \/\/ i.e. sign bit set\n-    __ test_bit(t0, scratch_length, 31);\n-    __ bnez(t0, L_failed);\n+    __ sign_extend(scratch_length, length, 32);    \/\/ length (elements count, 32-bits value)\n+    __ bltz(scratch_length, L_failed);\n@@ -1847,2 +1843,1 @@\n-    __ test_bit(t0, lh, 31);\n-    __ beqz(t0, L_failed);\n+    __ bgez(lh, L_failed);\n@@ -1873,1 +1868,1 @@\n-    const Register x22_elsize = lh;   \/\/ element size\n+    const Register x30_elsize = lh;   \/\/ element size\n@@ -1898,1 +1893,1 @@\n-    __ test_bit(t0, x22_elsize, 1);\n+    __ test_bit(t0, x30_elsize, 1);\n@@ -1900,1 +1895,1 @@\n-    __ test_bit(t0, x22_elsize, 0);\n+    __ test_bit(t0, x30_elsize, 0);\n@@ -1904,1 +1899,1 @@\n-    __ addw(count, scratch_length, zr); \/\/ length\n+    __ sign_extend(count, scratch_length, 32); \/\/ length\n@@ -1910,1 +1905,1 @@\n-    __ addw(count, scratch_length, zr); \/\/ length\n+    __ sign_extend(count, scratch_length, 32); \/\/ length\n@@ -1914,1 +1909,1 @@\n-    __ test_bit(t0, x22_elsize, 0);\n+    __ test_bit(t0, x30_elsize, 0);\n@@ -1918,1 +1913,1 @@\n-    __ addw(count, scratch_length, zr); \/\/ length\n+    __ sign_extend(count, scratch_length, 32); \/\/ length\n@@ -1926,2 +1921,2 @@\n-      __ andi(lh, lh, Klass::_lh_log2_element_size_mask); \/\/ lh -> x22_elsize\n-      __ addw(lh, lh, zr);\n+      __ andi(lh, lh, Klass::_lh_log2_element_size_mask); \/\/ lh -> x30_elsize\n+      __ sign_extend(lh, lh, 32);\n@@ -1929,1 +1924,1 @@\n-      __ beq(x22_elsize, t0, L);\n+      __ beq(x30_elsize, t0, L);\n@@ -1937,1 +1932,1 @@\n-    __ addw(count, scratch_length, zr); \/\/ length\n+    __ sign_extend(count, scratch_length, 32); \/\/ length\n@@ -1957,1 +1952,1 @@\n-    __ addw(count, scratch_length, zr); \/\/ length\n+    __ sign_extend(count, scratch_length, 32); \/\/ length\n@@ -1980,1 +1975,1 @@\n-      __ addw(count, length, zr);           \/\/ length (reloaded)\n+      __ sign_extend(count, length, 32);      \/\/ length (reloaded)\n@@ -2842,1 +2837,1 @@\n-    __ addw(haystack_len, haystack_len, zr);\n+    __ sign_extend(haystack_len, haystack_len, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":21,"deletions":26,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -727,1 +727,1 @@\n-  __ addw(index, index, zr);\n+  __ sign_extend(index, index, 32);\n@@ -746,1 +746,1 @@\n-  __ addw(x10, x10, zr); \/\/ signed extended\n+  __ sign_extend(x10, x10, 32);\n@@ -1623,1 +1623,1 @@\n-      __ addw(x10, x10, zr);\n+      __ sign_extend(x10, x10, 32);\n@@ -1850,1 +1850,1 @@\n-  __ addw(x10, x10, zr);\n+  __ sign_extend(x10, x10, 32);\n@@ -1885,1 +1885,1 @@\n-  __ addw(x10, x10, zr);\n+  __ sign_extend(x10, x10, 32);\n@@ -2468,1 +2468,1 @@\n-  __ addw(x10, x10, zr); \/\/ signed extended\n+  __ sign_extend(x10, x10, 32);\n@@ -3073,1 +3073,1 @@\n-      __ addw(x10, x10, zr); \/\/ signed extended\n+      __ sign_extend(x10, x10, 32);\n@@ -3121,1 +3121,1 @@\n-      __ addw(x10, x10, zr); \/\/ signed extended\n+      __ sign_extend(x10, x10, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}