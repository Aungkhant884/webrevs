{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -48,1 +48,0 @@\n-  assert_cond(masm != NULL);\n@@ -91,1 +90,0 @@\n-  assert_cond(masm != NULL);\n@@ -112,1 +110,0 @@\n-  assert_cond(masm != NULL);\n@@ -186,1 +183,0 @@\n-  assert_cond(masm != NULL);\n@@ -261,1 +257,0 @@\n-  assert_cond(masm != NULL);\n@@ -285,1 +280,0 @@\n-  assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,2 +43,0 @@\n-  assert_cond(masm != NULL);\n-\n@@ -85,1 +83,0 @@\n-  assert_cond(masm != NULL);\n@@ -127,1 +124,0 @@\n-  assert_cond(masm != NULL);\n@@ -142,1 +138,0 @@\n-  assert_cond(masm != NULL);\n@@ -222,1 +217,0 @@\n-  assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  assert_cond(masm != NULL);\n@@ -65,1 +64,0 @@\n-  assert_cond(masm != NULL);\n@@ -106,1 +104,0 @@\n-      assert_cond(masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -34,1 +34,0 @@\n-\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/modRefBarrierSetAssembler_riscv.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -67,1 +67,0 @@\n-    assert_cond(masm != NULL);\n@@ -74,1 +73,0 @@\n-    assert_cond(masm != NULL);\n@@ -81,1 +79,0 @@\n-    assert_cond(masm != NULL);\n@@ -88,1 +85,0 @@\n-    assert_cond(masm != NULL);\n@@ -2045,1 +2041,0 @@\n-  assert_cond(masm != NULL);\n@@ -2058,1 +2053,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-  assert_cond(_masm != NULL);\n@@ -73,1 +72,0 @@\n-  assert_cond(_masm != NULL);\n@@ -102,1 +100,0 @@\n-  assert_cond(_masm != NULL);\n@@ -133,1 +130,0 @@\n-  assert_cond(_masm != NULL);\n@@ -172,1 +168,0 @@\n-  assert_cond(_masm != NULL);\n@@ -267,1 +262,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/methodHandles_riscv.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -154,1 +154,0 @@\n-  assert_cond(masm != NULL && total_frame_words != NULL);\n@@ -209,1 +208,0 @@\n-  assert_cond(masm != NULL);\n@@ -334,1 +332,0 @@\n-  assert_cond(masm != NULL);\n@@ -770,1 +767,0 @@\n-  assert_cond(masm != NULL);\n@@ -800,1 +796,0 @@\n-  assert_cond(masm != NULL && map != NULL && receiver_offset != NULL);\n@@ -883,1 +878,0 @@\n-  assert_cond(masm != NULL);\n@@ -904,1 +898,0 @@\n-  assert_cond(masm != NULL);\n@@ -928,1 +921,0 @@\n-  assert_cond(masm != NULL);\n@@ -948,1 +940,0 @@\n-  assert_cond(masm != NULL);\n@@ -966,1 +957,0 @@\n-  assert_cond(masm != NULL);\n@@ -984,1 +974,0 @@\n-  assert_cond(masm != NULL && args != NULL);\n@@ -998,1 +987,0 @@\n-  assert_cond(masm != NULL && args != NULL);\n@@ -1080,1 +1068,0 @@\n-  assert_cond(masm != NULL);\n@@ -2748,1 +2735,1 @@\n-  assert (StubRoutines::forward_exception_entry() != NULL, \"must be generated before\");\n+  assert(StubRoutines::forward_exception_entry() != NULL, \"must be generated before\");\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -73,2 +73,1 @@\n-static inline Address iaddress(Register r,  Register temp, InterpreterMacroAssembler* _masm) {\n-  assert_cond(_masm != NULL);\n+static inline Address iaddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -79,3 +78,1 @@\n-static inline Address laddress(Register r, Register temp,\n-                               InterpreterMacroAssembler* _masm) {\n-  assert_cond(_masm != NULL);\n+static inline Address laddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -90,2 +87,1 @@\n-static inline Address daddress(Register r, Register temp,\n-                               InterpreterMacroAssembler* _masm) {\n+static inline Address daddress(Register r, Register temp, InterpreterMacroAssembler* _masm) {\n@@ -137,1 +133,0 @@\n-  assert_cond(_masm != NULL);\n@@ -145,1 +140,0 @@\n-  assert_cond(_masm != NULL);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}