{"files":[{"patch":"@@ -153,1 +153,1 @@\n-    __ mvw(t1, objArray_lh);\n+    __ mv(t1, objArray_lh);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_arraycopy_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-      __ mvw(dest->as_register(), c->as_jint());\n+      __ mv(dest->as_register(), c->as_jint());\n@@ -531,1 +531,1 @@\n-        __ mvw(t1, c->as_jint_bits());\n+        __ mv(t1, c->as_jint_bits());\n@@ -1024,1 +1024,1 @@\n-    __ mvw(t1, InstanceKlass::fully_initialized);\n+    __ mv(t1, (u1)InstanceKlass::fully_initialized);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-  mvw(t0, (int) ilgl);\n+  mv(t0, (int)ilgl);\n@@ -1498,2 +1498,2 @@\n-    mvw(reg2, in_bytes(MultiBranchData::per_case_size()));\n-    mvw(t0, in_bytes(MultiBranchData::case_array_offset()));\n+    mv(reg2, in_bytes(MultiBranchData::per_case_size()));\n+    mv(t0, in_bytes(MultiBranchData::case_array_offset()));\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -2086,1 +2086,1 @@\n-  if (((uint64_t)(uintptr_t)CompressedKlassPointers::base() & 0xffffffff) == 0 &&\n+  if (((uint64_t)CompressedKlassPointers::base() & 0xffffffff) == 0 &&\n@@ -2098,1 +2098,1 @@\n-  mv(xbase, (intptr_t)CompressedKlassPointers::base());\n+  mv(xbase, (uintptr_t)CompressedKlassPointers::base());\n@@ -2106,1 +2106,1 @@\n-void  MacroAssembler::decode_heap_oop_not_null(Register r) {\n+void MacroAssembler::decode_heap_oop_not_null(Register r) {\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -668,1 +668,1 @@\n-  void li(Register Rd, int64_t imm);  \/\/ optimized load immediate\n+  void li  (Register Rd, int64_t imm);  \/\/ optimized load immediate\n@@ -682,2 +682,0 @@\n-  inline void mvw(Register Rd, int32_t imm32)         { mv(Rd, imm32); }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3790,3 +3790,3 @@\n-\/\/ (actually a mvw $dst $src) and the downstream instructions consume\n-\/\/ the result of the l2i as an iRegI input. That's a shame since the\n-\/\/ mvw is actually redundant but its not too costly.\n+\/\/ (actually an addiw $dst, $src, 0) and the downstream instructions\n+\/\/ consume the result of the L2I as an iRegI input. That's a shame since\n+\/\/ the addiw is actually redundant but its not too costly.\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -437,1 +437,1 @@\n-        if ( sig_bt[i] == T_LONG || sig_bt[i] == T_DOUBLE) {\n+        if (sig_bt[i] == T_LONG || sig_bt[i] == T_DOUBLE) {\n@@ -2122,1 +2122,1 @@\n-  __ mvw(xcpool, Deoptimization::Unpack_deopt); \/\/ callee-saved\n+  __ mv(xcpool, Deoptimization::Unpack_deopt); \/\/ callee-saved\n@@ -2133,1 +2133,1 @@\n-  __ mvw(xcpool, Deoptimization::Unpack_reexecute); \/\/ callee-saved\n+  __ mv(xcpool, Deoptimization::Unpack_reexecute); \/\/ callee-saved\n@@ -2447,1 +2447,1 @@\n-  __ mvw(c_rarg2, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ mv(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n@@ -2473,1 +2473,1 @@\n-    __ mvw(t1, Deoptimization::Unpack_uncommon_trap);\n+    __ mv(t1, Deoptimization::Unpack_uncommon_trap);\n@@ -2574,1 +2574,1 @@\n-  __ mvw(c_rarg1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ mv(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -1838,1 +1838,1 @@\n-    __ mvw(t0, objArray_lh);\n+    __ mv(t0, objArray_lh);\n@@ -1855,1 +1855,1 @@\n-      __ mvw(t1, Klass::_lh_array_tag_type_value << Klass::_lh_array_tag_shift);\n+      __ mv(t1, (int32_t)(Klass::_lh_array_tag_type_value << Klass::_lh_array_tag_shift));\n@@ -1928,1 +1928,1 @@\n-      __ mvw(t0, LogBytesPerLong);\n+      __ mv(t0, LogBytesPerLong);\n@@ -1966,1 +1966,1 @@\n-      __ mvw(t1, objArray_lh);\n+      __ mv(t1, objArray_lh);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    __ mvw(t1, vtable_index * vtableEntry::size());\n+    __ mv(t1, vtable_index * vtableEntry::size());\n","filename":"src\/hotspot\/cpu\/riscv\/vtableStubs_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}