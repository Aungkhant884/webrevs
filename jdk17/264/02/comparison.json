{"files":[{"patch":"@@ -338,1 +338,1 @@\n-            writer.addSummaryLinkComment(this, element, desc);\n+            writer.addSummaryLinkComment(element, desc);\n@@ -366,1 +366,1 @@\n-        writer.addSummaryLinkComment(this, member, firstSentenceTrees, desc);\n+        writer.addSummaryLinkComment(member, firstSentenceTrees, desc);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractMemberWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1165,1 +1165,1 @@\n-        addCommentTags(element, tag, description, false, false, false, htmltree);\n+        addCommentTags(element, description, false, false, false, htmltree);\n@@ -1252,16 +1252,0 @@\n-        addCommentTags(element, null, tags, depr, first, inSummary, htmltree);\n-    }\n-\n-    \/**\n-     * Adds the comment tags.\n-     *\n-     * @param element for which the comment tags will be generated\n-     * @param holderTag the block tag context for the inline tags\n-     * @param tags the first sentence tags for the doc\n-     * @param depr true if it is deprecated\n-     * @param first true if the first sentence tags should be added\n-     * @param inSummary true if the comment tags are added into the summary section\n-     * @param htmltree the documentation tree to which the comment tags will be added\n-     *\/\n-    private void addCommentTags(Element element, DocTree holderTag, List<? extends DocTree> tags, boolean depr,\n-            boolean first, boolean inSummary, Content htmltree) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.javadoc.internal.doclets.formats.html.markup.RawHtml;\n@@ -139,1 +138,0 @@\n-     * @param mw the writer for the member being documented\n@@ -143,1 +141,1 @@\n-    public void addSummaryLinkComment(AbstractMemberWriter mw, Element member, Content contentTree) {\n+    public void addSummaryLinkComment(Element member, Content contentTree) {\n@@ -145,1 +143,1 @@\n-        addSummaryLinkComment(mw, member, tags, contentTree);\n+        addSummaryLinkComment(member, tags, contentTree);\n@@ -151,1 +149,0 @@\n-     * @param mw the writer for the member being documented\n@@ -156,2 +153,1 @@\n-    public void addSummaryLinkComment(AbstractMemberWriter mw,\n-            Element member, List<? extends DocTree> firstSentenceTags, Content tdSummary) {\n+    public void addSummaryLinkComment(Element member, List<? extends DocTree> firstSentenceTags, Content tdSummary) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -100,1 +100,0 @@\n-                ch.setOverrideElement(inheritedDoc.holder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/InheritDocTaglet.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -209,3 +209,1 @@\n-                    CommentHelper ch = utils.getCommentHelper(holder);\n-                    ch.setOverrideElement(inheritedDoc.holder);\n-                    Content content = processParamTag(holder, kind, writer,\n+                    Content content = processParamTag(inheritedDoc.holder, kind, writer,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,3 +124,1 @@\n-            CommentHelper ch = utils.getCommentHelper(input.element);\n-            ch.setOverrideElement(inheritedDoc.holder);\n-            return writer.returnTagOutput(holder, (ReturnTree) inheritedDoc.holderTag, false);\n+            return writer.returnTagOutput(inheritedDoc.holder, (ReturnTree) inheritedDoc.holderTag, false);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,14 +168,1 @@\n-        \/\/ case A: the element contains no comments associated and\n-        \/\/ the comments need to be copied from ancestor\n-        \/\/ case B: the element has @inheritDoc, then the ancestral comment\n-        \/\/ as appropriate has to be copied over.\n-\n-        \/\/ Case A.\n-        if (dcTree == null && overriddenElement != null) {\n-            CommentHelper ovch = utils.getCommentHelper(overriddenElement);\n-            return ovch.getElement(rtree);\n-        }\n-        if (dcTree == null) {\n-            return null;\n-        }\n-        DocTreePath docTreePath = DocTreePath.getPath(path, dcTree, rtree);\n+        DocTreePath docTreePath = getDocTreePath(rtree);\n@@ -183,5 +170,0 @@\n-            \/\/ Case B.\n-            if (overriddenElement != null) {\n-                CommentHelper ovch = utils.getCommentHelper(overriddenElement);\n-                return ovch.getElement(rtree);\n-            }\n@@ -195,4 +177,1 @@\n-        \/\/ Workaround for JDK-8269706\n-        if (path == null || dcTree == null || rtree == null)\n-            return null;\n-        DocTreePath docTreePath = DocTreePath.getPath(path, dcTree, rtree);\n+        DocTreePath docTreePath = getDocTreePath(rtree);\n@@ -703,1 +682,4 @@\n-        if (path == null || dcTree == null || dtree == null)\n+        if (dcTree == null && overriddenElement != null) {\n+            \/\/ This is an inherited comment, return path from ancestor.\n+            return configuration.utils.getCommentHelper(overriddenElement).getDocTreePath(dtree);\n+        } else if (path == null || dcTree == null || dtree == null) {\n@@ -705,1 +687,7 @@\n-        return DocTreePath.getPath(path, dcTree, dtree);\n+        }\n+        DocTreePath dtPath = DocTreePath.getPath(path, dcTree, dtree);\n+        if (dtPath == null && overriddenElement != null) {\n+            \/\/ The overriding element has a doc tree, but it doesn't contain what we're looking for.\n+            return configuration.utils.getCommentHelper(overriddenElement).getDocTreePath(dtree);\n+        }\n+        return dtPath;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":13,"deletions":25,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8269722\n+ * @bug 8269722 8270866\n@@ -70,0 +70,8 @@\n+        checkOutput(\"BadParam.Base.html\", true, \"\"\"\n+                <dt>Parameters:<\/dt>\n+                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                \"\"\");\n+        checkOutput(\"BadParam.Sub.html\", true, \"\"\"\n+                <dt>Parameters:<\/dt>\n+                <dd><code>i<\/code> - a &lt; b<\/dd>\n+                \"\"\");\n@@ -94,0 +102,59 @@\n+        checkOutput(\"BadReturn.Base.html\", true, \"\"\"\n+                <dt>Returns:<\/dt>\n+                <dd>a &lt; b<\/dd>\n+                \"\"\");\n+        checkOutput(\"BadReturn.Sub.html\", true, \"\"\"\n+                <dt>Returns:<\/dt>\n+                <dd>a &lt; b<\/dd>\n+                \"\"\");\n+    }\n+\n+    @Test\n+    public void testBadInheritedReference(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                public class BadReference {\n+                    public interface Intf {\n+                        \/**\n+                         * {@link NonExistingClass}\n+                         *\/\n+                        public void m();\n+                    }\n+\n+                    public static class Impl1 implements Intf {\n+                        public void m() { }\n+                    }\n+\n+                    public static class Impl2 implements Intf {\n+                        \/**\n+                         * {@inheritDoc}\n+                         *\/\n+                        public void m() { }\n+                    }\n+\n+                    \/\/ subclass has doc comment but inherits main description\n+                    public static class Impl3 implements Intf {\n+                        \/**\n+                         * @since 1\n+                         *\/\n+                        public void m() { }\n+                    }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"-Xdoclint:-reference\",\n+                src.resolve(\"BadReference.java\").toString());\n+        checkExit(Exit.OK);\n+        checkOutput(\"BadReference.Intf.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl1.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl2.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n+        checkOutput(\"BadReference.Impl3.html\", true, \"\"\"\n+                <div class=\"block\"><code>NonExistingClass<\/code><\/div>\n+                \"\"\");\n@@ -95,1 +162,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testInherited\/TestInherited.java","additions":69,"deletions":2,"binary":false,"changes":71,"status":"modified"}]}