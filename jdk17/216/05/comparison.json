{"files":[{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/os.inline.hpp\"\n@@ -54,1 +55,2 @@\n-  _sem.signal();\n+  _data_available = true;\n+  _cv.notify();\n@@ -78,1 +80,1 @@\n-  : _lock(1), _sem(0), _flush_sem(0),\n+  : _lock(1), _flush_sem(0), _cv(), _data_available(false),\n@@ -128,0 +130,1 @@\n+    _data_available = false;\n@@ -155,3 +158,10 @@\n-    \/\/ The value of a semphore cannot be negative. Therefore, the current thread falls asleep\n-    \/\/ when its value is zero. It will be waken up when new messages are enqueued.\n-    _sem.wait();\n+    {\n+      AsyncLogLocker locker;\n+\n+      while (!_data_available) {\n+        _lock.signal();\n+        _cv.wait(0\/* no timeout *\/);\n+        _lock.wait();\n+      }\n+    }\n+\n@@ -201,1 +211,2 @@\n-      _instance->_sem.signal();\n+      _instance->_data_available = true;\n+      _instance->_cv.notify();\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":17,"deletions":6,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -140,3 +140,0 @@\n-  \/\/ _sem is a semaphore whose value denotes how many messages have been enqueued.\n-  \/\/ It decreases in AsyncLogWriter::run()\n-  Semaphore _sem;\n@@ -144,1 +141,2 @@\n-\n+  os::PlatformMonitor _cv;\n+  bool _data_available;\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}