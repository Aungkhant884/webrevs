{"files":[{"patch":"@@ -38,1 +38,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -129,1 +128,1 @@\n-        if (Optional.ofNullable(\n+        if (Optional.ofNullable(MacAppImageBuilder.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -147,0 +146,10 @@\n+    public static final StandardBundlerParam<Boolean> SIGN_BUNDLE  =\n+            new StandardBundlerParam<>(\n+            Arguments.CLIOptions.MAC_SIGN.getId(),\n+            Boolean.class,\n+            params -> false,\n+            \/\/ valueOf(null) is false, we actually do want null in some cases\n+            (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n+                    null : Boolean.valueOf(s)\n+        );\n+\n@@ -857,0 +866,1 @@\n+\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.Optional;\n@@ -45,1 +44,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -139,14 +137,0 @@\n-            if (Optional.ofNullable(\n-                    SIGN_BUNDLE.fetchFrom(params)).orElse(Boolean.FALSE)) {\n-                \/\/ if signing bundle with app-image, warn user if app-image\n-                \/\/ is not allready signed.\n-                try {\n-                    if (!(AppImageFile.load(applicationImage).isSigned())) {\n-                        Log.info(MessageFormat.format(I18N.getString(\n-                                 \"warning.unsigned.app.image\"), getID()));\n-                    }\n-                } catch (IOException ioe) {\n-                    \/\/ Ignore - In case of a forign or tampered with app-image,\n-                    \/\/ user is notified of this when the name is extracted.\n-                }\n-            }\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacBaseInstallerBundler.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -503,1 +502,1 @@\n-            if (Optional.ofNullable(\n+            if (Optional.ofNullable(MacAppImageBuilder.\n@@ -607,1 +606,1 @@\n-            if (Optional.ofNullable(\n+            if (Optional.ofNullable(MacAppImageBuilder.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -91,1 +91,0 @@\n-warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,1 +90,0 @@\n-warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,1 +90,0 @@\n-warning.unsigned.app.image=Warning: Using unsigned app-image to build signed {0}.\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import static jdk.jpackage.internal.StandardBundlerParam.SIGN_BUNDLE;\n@@ -58,1 +57,0 @@\n-    private final boolean signed;\n@@ -68,1 +66,1 @@\n-        this(null, null, null, null, null);\n+        this(null, null, null, null);\n@@ -72,1 +70,1 @@\n-            String creatorVersion, String creatorPlatform, String signedStr) {\n+            String creatorVersion, String creatorPlatform) {\n@@ -77,1 +75,0 @@\n-        this.signed = \"true\".equals(signedStr);\n@@ -96,4 +93,0 @@\n-    boolean isSigned() {\n-        return signed;\n-    }\n-\n@@ -135,4 +128,0 @@\n-            xml.writeStartElement(\"signed\");\n-            xml.writeCharacters(SIGN_BUNDLE.fetchFrom(params).toString());\n-            xml.writeEndElement();\n-\n@@ -178,3 +167,0 @@\n-            String signedStr = xpathQueryNullable(xPath,\n-                    \"\/jpackage-state\/@signed\", doc);\n-\n@@ -190,1 +176,1 @@\n-                    mainLauncher, addLaunchers, version, platform, signedStr);\n+                    mainLauncher, addLaunchers, version, platform);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -470,10 +470,0 @@\n-    static final StandardBundlerParam<Boolean> SIGN_BUNDLE =\n-            new StandardBundlerParam<>(\n-                    Arguments.CLIOptions.MAC_SIGN.getId(),\n-                    Boolean.class,\n-                    params -> false,\n-                    (s, p) -> (s == null || \"null\".equalsIgnoreCase(s)) ?\n-                    null : Boolean.valueOf(s)\n-        );\n-\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}