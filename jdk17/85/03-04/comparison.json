{"files":[{"patch":"@@ -42,0 +42,6 @@\n+    static {\n+        \/\/ Enable logging\n+        System.setProperty(\"java.util.logging.config.file\",\n+                System.getProperty(\"test.src\", \".\") + \"\/logging.properties\");\n+    }\n+\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFactoryFaults.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,3 +46,5 @@\n- * @run testng\/othervm  SerialFilterFactoryTest\n- * @run testng\/othervm -Djdk.serialFilterFactory=SerialFilterFactoryTest$PropertyFilterFactory SerialFilterFactoryTest\n- * @run testng\/othervm -Djdk.serialFilterFactory=SerialFilterFactoryTest$NotMyFilterFactory SerialFilterFactoryTest\n+ * @run testng\/othervm SerialFilterFactoryTest\n+ * @run testng\/othervm -Djdk.serialFilterFactory=SerialFilterFactoryTest$PropertyFilterFactory\n+ *                     -Djava.util.logging.config.file=${test.src}\/logging.properties SerialFilterFactoryTest\n+ * @run testng\/othervm -Djdk.serialFilterFactory=SerialFilterFactoryTest$NotMyFilterFactory\n+ *                     -Djava.util.logging.config.file=${test.src}\/logging.properties SerialFilterFactoryTest\n@@ -54,1 +56,0 @@\n-\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterFactoryTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -39,1 +39,2 @@\n- * @run testng\/othervm SerialFilterFunctionTest\n+ * @run testng\/othervm -Djava.util.logging.config.file=${test.src}\/logging.properties\n+ *                      SerialFilterFunctionTest\n@@ -45,0 +46,6 @@\n+    static {\n+        \/\/ Enable logging\n+        System.setProperty(\"java.util.logging.config.file\",\n+                System.getProperty(\"test.src\", \".\") + \"\/logging.properties\");\n+    }\n+\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterFunctionTest.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n- * @run testng\/othervm SerialFilterTest\n+ * @run testng\/othervm -Djava.util.logging.config.file=${test.src}\/logging.properties\n+ *                      SerialFilterTest\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-# disabled till JDK-8219408 is fixed\n-allowSmartActionArgs=false\n+# Allow substitution of ${test.src}\n+allowSmartActionArgs=true\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/TEST.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+############################################################\n+#  \tDefault Logging Configuration File\n+#\n+# You can use a different file by specifying a filename\n+# with the java.util.logging.config.file system property.\n+# For example, java -Djava.util.logging.config.file=myfile\n+############################################################\n+\n+############################################################\n+#  \tGlobal properties\n+############################################################\n+\n+# \"handlers\" specifies a comma-separated list of log Handler\n+# classes.  These handlers will be installed during VM startup.\n+# Note that these classes must be on the system classpath.\n+# By default we only configure a ConsoleHandler, which will only\n+# show messages at the INFO and above levels.\n+handlers= java.util.logging.ConsoleHandler\n+\n+# To also add the FileHandler, use the following line instead.\n+#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler\n+\n+# Default global logging level.\n+# This specifies which kinds of events are logged across\n+# all loggers.  For any given facility this global level\n+# can be overridden by a facility-specific level\n+# Note that the ConsoleHandler also has a separate level\n+# setting to limit messages printed to the console.\n+.level= INFO\n+\n+############################################################\n+# Handler specific properties.\n+# Describes specific configuration info for Handlers.\n+############################################################\n+\n+# default file output is in user's home directory.\n+java.util.logging.FileHandler.pattern = %h\/java%u.log\n+java.util.logging.FileHandler.limit = 50000\n+java.util.logging.FileHandler.count = 1\n+# Default number of locks FileHandler can obtain synchronously.\n+# This specifies maximum number of attempts to obtain lock file by FileHandler\n+# implemented by incrementing the unique field %u as per FileHandler API documentation.\n+java.util.logging.FileHandler.maxLocks = 100\n+java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter\n+\n+# Limit the messages that are printed on the console to INFO and above.\n+java.util.logging.ConsoleHandler.level = FINEST\n+java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter\n+\n+# Example to customize the SimpleFormatter output format\n+# to print one-line log message like this:\n+#     <level>: <log message> [<date\/time>]\n+#\n+# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n\n+java.util.logging.SimpleFormatter.format=%3$s %4$s %5$s %6$s%n\n+\n+############################################################\n+# Facility-specific properties.\n+# Provides extra control for each logger.\n+############################################################\n+\n+java.io.serialization.level = FINER\n+\n+\n+\n+\n+############################################################\n+# Facility-specific properties.\n+# Provides extra control for each logger.\n+############################################################\n+\n+# For example, set the com.xyz.foo logger to only log SEVERE\n+# messages:\n+java.io.serialization.level = FINER\n+\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/logging.properties","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}