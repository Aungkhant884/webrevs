{"files":[{"patch":"@@ -530,3 +530,0 @@\n-     * <p> If only `jdk.serialFilter` is set and not `jdk.serialFilterFactory` the builtin\n-     * filter factory, compatible with previous versions, is set and can not be replaced,\n-     * see below to override the builtin filter factory.\n@@ -537,1 +534,1 @@\n-     * filter factory or the special value `OVERRIDE`.\n+     * filter factory.\n@@ -540,3 +537,0 @@\n-     *\n-     * If the value is `OVERRIDE`, the filter factory can be set by the application before\n-     * the first deserialization using {@link Config#setSerialFilterFactory(BinaryOperator)};\n@@ -546,1 +540,1 @@\n-     * <p>If not `OVERRIDE`, the class must be public, must have a public zero-argument constructor, implement the\n+     * <p>The class must be public, must have a public zero-argument constructor, implement the\n@@ -625,1 +619,1 @@\n-             * <li>The property jdk.serialFilterTrace, is read, and if set enables tracing of filters.\n+             * <li>The property jdk.serialFilterTrace, is read, and if true enables tracing of filters.\n@@ -667,1 +661,1 @@\n-            if (factoryClassName == null || \"OVERRIDE\".equals(factoryClassName)) {\n+            if (factoryClassName == null) {\n@@ -669,6 +663,0 @@\n-                if (serialFilter != null && factoryClassName == null) {\n-                    \/\/ Ensure backward compatibility, unless factory is explicitly allowed to override\n-                    \/\/ Do not allow factory to be overridden by Config.setSerialFilterFactory\n-                    filterFactoryNoReplace.set(true);\n-                }\n-\n@@ -849,0 +837,3 @@\n+            if (configLog != null)\n+                configLog.log(DEBUG,\n+                    \"Setting deserialization filter factory to {0}\", filterFactory.getClass().getName());\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputFilter.java","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,0 +57,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -68,0 +69,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -91,0 +93,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/FilterWithSecurityManagerTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -145,0 +145,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/GlobalFilterTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n- * @run testng\/othervm -Djdk.serialFilter=\"*\" -Djdk.serialFilterFactory=OVERRIDE SerialFilterFactoryTest\n@@ -124,0 +123,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -166,0 +166,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -201,0 +202,1 @@\n+    @SuppressWarnings(\"removal\")\n@@ -256,1 +258,1 @@\n-        if (jdkSerialFilterFactoryProp != null && !jdkSerialFilterFactoryProp.equals(\"OVERRIDE\")) {\n+        if (jdkSerialFilterFactoryProp != null) {\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/SerialFilterFactoryTest.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}