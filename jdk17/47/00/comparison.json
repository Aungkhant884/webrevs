{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Platform;\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.spi.ToolProvider;\n+\n+\/**\n+ * @test\n+ * @summary Tests that the SVML shared library is present in an image only when jdk.incubator.vector is present\n+ * @requires os.arch == \"x86_64\" | os.arch == \"amd64\"\n+ * @requires os.family == \"linux\" | os.family == \"windows\"\n+ * @modules jdk.incubator.vector jdk.jlink\n+ * @library \/test\/lib\n+ * @run testng ImageTest\n+ *\/\n+\n+public class ImageTest {\n+    static final ToolProvider JLINK_TOOL = ToolProvider.findFirst(\"jlink\")\n+            .orElseThrow(() ->\n+                    new RuntimeException(\"jlink tool not found\")\n+            );\n+\n+    static final String SVML_LIBRARY_NAME = Platform.isWindows()\n+            ? \"svml.dll\"\n+            : \"libsvml.so\";\n+\n+    static void link(String module, Path output) {\n+        int e = JLINK_TOOL.run(System.out, System.err,\n+                \"--add-modules\", module,\n+                \"--output\", output.toString()\n+        );\n+        if (e != 0) {\n+            throw new RuntimeException(\"Error running jlink\");\n+        }\n+    }\n+\n+    static void checkSVML(Path image, boolean shouldBepresent) {\n+        Path libsvml = Platform.libDir(image).resolve(SVML_LIBRARY_NAME);\n+\n+        boolean exists = Files.exists(libsvml);\n+        if (shouldBepresent) {\n+            Assert.assertTrue(exists, libsvml + \" should be present\");\n+        } else {\n+            Assert.assertFalse(exists, libsvml + \"should be absent\");\n+        }\n+    }\n+\n+\n+    @Test\n+    public void withVectorModule() {\n+        Path output = Path.of(\"withVectorModuleImage\");\n+        link(\"jdk.incubator.vector\", output);\n+        checkSVML(output, true);\n+    }\n+\n+    @Test\n+    public void withoutVectorModule() {\n+        Path output = Path.of(\"withoutVectorModuleImage\");\n+        link(\"java.base\", output);\n+        checkSVML(output, false);\n+    }\n+}\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ImageTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -336,1 +336,10 @@\n-        Path dir = Paths.get(testJdk);\n+        return libDir(Paths.get(testJdk)).toAbsolutePath();\n+    }\n+\n+    \/**\n+     * Resolves a given path, to a JDK image, to the directory containing shared libraries.\n+     *\n+     * @param image the path to a JDK image\n+     * @return the resolved path to the directory containing shared libraries\n+     *\/\n+    public static Path libDir(Path image) {\n@@ -338,1 +347,1 @@\n-            return dir.resolve(\"bin\").toAbsolutePath();\n+            return image.resolve(\"bin\");\n@@ -340,1 +349,1 @@\n-            return dir.resolve(\"lib\").toAbsolutePath();\n+            return image.resolve(\"lib\");\n","filename":"test\/lib\/jdk\/test\/lib\/Platform.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}