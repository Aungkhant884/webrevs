{"files":[{"patch":"@@ -57,0 +57,1 @@\n+import java.util.Collections;\n@@ -64,0 +65,1 @@\n+import java.util.WeakHashMap;\n@@ -329,0 +331,7 @@\n+    private static class CallersHolder {\n+        \/\/ Remember callers of setSecurityManager() here so that warning\n+        \/\/ is only printed once for each different caller\n+        final static Map<Class<?>, Boolean> callers\n+            = Collections.synchronizedMap(new WeakHashMap<>());\n+    }\n+\n@@ -381,6 +390,14 @@\n-            URL url = codeSource(callerClass);\n-            final String source;\n-            if (url == null) {\n-                source = callerClass.getName();\n-            } else {\n-                source = callerClass.getName() + \" (\" + url + \")\";\n+            if (CallersHolder.callers.putIfAbsent(callerClass, true) == null) {\n+                URL url = codeSource(callerClass);\n+                final String source;\n+                if (url == null) {\n+                    source = callerClass.getName();\n+                } else {\n+                    source = callerClass.getName() + \" (\" + url + \")\";\n+                }\n+                initialErrStream.printf(\"\"\"\n+                        WARNING: A terminally deprecated method in java.lang.System has been called\n+                        WARNING: System::setSecurityManager has been called by %s\n+                        WARNING: Please consider reporting this to the maintainers of %s\n+                        WARNING: System::setSecurityManager will be removed in a future release\n+                        \"\"\", source, callerClass.getName());\n@@ -388,6 +405,0 @@\n-            initialErrStream.printf(\"\"\"\n-                    WARNING: A terminally deprecated method in java.lang.System has been called\n-                    WARNING: System::setSecurityManager has been called by %s\n-                    WARNING: Please consider reporting this to the maintainers of %s\n-                    WARNING: System::setSecurityManager will be removed in a future release\n-                    \"\"\", source, callerClass.getName());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":23,"deletions":12,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266459 8268349\n+ * @bug 8266459 8268349 8269543\n@@ -65,1 +65,3 @@\n-                    Path.of(\"SecurityManagerWarnings.class\"));\n+                    Path.of(\"SecurityManagerWarnings.class\"),\n+                    Path.of(\"A.class\"),\n+                    Path.of(\"B.class\"));\n@@ -75,1 +77,6 @@\n-                System.setSecurityManager(new SecurityManager());\n+                \/\/ Run A.run() twice will show only one warning\n+                \/\/ (setSecurityManager(null) to ensure the next set is permitted)\n+                \/\/ Run B.run() and a new warning will appear\n+                A.run();    \/\/ System.setSecurityManager(null);\n+                A.run();    \/\/ System.setSecurityManager(null);\n+                B.run();    \/\/ System.setSecurityManager(new SecurityManager());\n@@ -116,3 +123,6 @@\n-                .stderrShouldContain(\"WARNING: System::setSecurityManager has been called by SecurityManagerWarnings (\" + uri + \")\")\n-                .stderrShouldContain(\"WARNING: Please consider reporting this to the maintainers of SecurityManagerWarnings\")\n-                .stderrShouldContain(\"WARNING: System::setSecurityManager will be removed in a future release\");\n+                .stderrShouldContain(\"WARNING: System::setSecurityManager has been called by A (\" + uri + \")\")\n+                .stderrShouldContain(\"WARNING: System::setSecurityManager has been called by B (\" + uri + \")\")\n+                .stderrShouldContain(\"WARNING: Please consider reporting this to the maintainers of A\")\n+                .stderrShouldContain(\"WARNING: Please consider reporting this to the maintainers of B\")\n+                .stderrShouldContain(\"WARNING: System::setSecurityManager will be removed in a future release\")\n+                .stderrShouldNotMatch(\"(?s)by A.*by A\");    \/\/ \"by A\" appears only once\n@@ -136,1 +146,14 @@\n-        return ProcessTools.executeProcess(pb);\n+        return ProcessTools.executeProcess(pb)\n+                .stderrShouldNotContain(\"AccessControlException\");\n+    }\n+}\n+\n+class A {\n+    static void run() {\n+        System.setSecurityManager(null);\n+    }\n+}\n+\n+class B {\n+    static void run() {\n+        System.setSecurityManager(new SecurityManager());\n","filename":"test\/jdk\/java\/lang\/System\/SecurityManagerWarnings.java","additions":30,"deletions":7,"binary":false,"changes":37,"status":"modified"}]}