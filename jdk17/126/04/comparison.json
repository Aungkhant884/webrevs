{"files":[{"patch":"@@ -88,0 +88,5 @@\n+    \/**\n+     * true if the last character was derived from an unicode escape sequence.\n+     *\/\n+    private boolean wasUnicodeEscape;\n+\n@@ -108,0 +113,1 @@\n+        this.wasUnicodeEscape = false;\n@@ -151,0 +157,4 @@\n+    \/**\n+     * Fetches the next 16-bit character from the buffer. If an unicode escape\n+     * is detected then converts the unicode escape to a character.\n+     *\/\n@@ -164,6 +174,2 @@\n-        \/\/ If second backslash is detected.\n-        if (wasBackslash) {\n-            \/\/ Treat like a normal character (not part of unicode escape.)\n-            wasBackslash = false;\n-        } else if (character == '\\\\') {\n-            \/\/ May be an unicode escape.\n+        if (character == '\\\\' && (!wasBackslash || wasUnicodeEscape)) {\n+            \/\/ Is a backslash and may be an unicode escape.\n@@ -171,2 +177,8 @@\n-                case BACKSLASH -> wasBackslash = true;\n-                case VALID_ESCAPE -> wasBackslash = false;\n+                case BACKSLASH -> {\n+                    wasUnicodeEscape = false;\n+                    wasBackslash = !wasBackslash;\n+                }\n+                case VALID_ESCAPE -> {\n+                    wasUnicodeEscape = true;\n+                    wasBackslash = character == '\\\\' && !wasBackslash;\n+                }\n@@ -175,0 +187,3 @@\n+        } else {\n+            wasBackslash = false;\n+            wasUnicodeEscape = false;\n@@ -300,0 +315,1 @@\n+        wasUnicodeEscape = false;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/UnicodeReader.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8269150\n+ * @summary Unicode \\ u 0 0 5 C not treated as an escaping backslash\n+ * @run main UnicodeBackslash\n+ *\/\n+\n+public class UnicodeBackslash {\n+    static boolean failed = false;\n+    static int counter = 0;\n+\n+    public static void main(String... args) {\n+        \/\/   source                           expected\n+        test(\"\\\\]\",                           \"\\\\]\");\n+        test(\"\\u005C\\]\",                      \"\\\\]\");\n+        test(\"\\\\u005C]\",                      \"\\\\u005C]\");\n+        test(\"\\u005C\\u005C]\",                 \"\\\\]\");\n+\n+        test(\"\\\\\\\\]\",                         \"\\\\\\\\]\");\n+        test(\"\\u005C\\\\\\]\",                    \"\\\\\\\\]\");\n+        test(\"\\\\u005C\\\\]\",                    \"\\\\u005C\\\\]\");\n+        test(\"\\u005C\\u005C\\\\]\",               \"\\\\\\\\]\");\n+        test(\"\\\\\\u005C\\]\",                    \"\\\\\\\\]\");\n+        test(\"\\u005C\\\\u005C\\]\",               \"\\\\\\\\]\");\n+        test(\"\\\\u005C\\u005C\\]\",               \"\\\\u005C\\\\]\");\n+        test(\"\\u005C\\u005C\\u005C\\]\",          \"\\\\\\\\]\");\n+        test(\"\\\\\\\\u005C]\",                    \"\\\\\\\\u005C]\");\n+        test(\"\\u005C\\\\\\u005C]\",               \"\\\\\\\\u005C]\");\n+        test(\"\\\\u005C\\\\u005C]\",               \"\\\\u005C\\\\u005C]\");\n+        test(\"\\u005C\\u005C\\\\u005C]\",          \"\\\\\\\\u005C]\");\n+        test(\"\\\\\\u005C\\u005C]\",               \"\\\\\\\\]\");\n+        test(\"\\u005C\\\\u005C\\u005C]\",          \"\\\\\\\\]\");\n+        test(\"\\\\u005C\\u005C\\u005C]\",          \"\\\\u005C\\\\]\");\n+        test(\"\\u005C\\u005C\\u005C\\u005C]\",     \"\\\\\\\\]\");\n+\n+        if (failed) {\n+            throw new RuntimeException(\"Unicode escapes not handled correctly\");\n+        }\n+    }\n+\n+    static void test(String source, String expected) {\n+        counter++;\n+        if (!source.equals(expected)) {\n+            System.err.println(counter + \": expected: \" +  expected + \", found: \" + source);\n+            failed = true;\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/UnicodeBackslash\/UnicodeBackslash.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}