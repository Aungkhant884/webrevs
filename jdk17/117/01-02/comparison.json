{"files":[{"patch":"@@ -129,1 +129,2 @@\n-    permission java.lang.RuntimePermission \"accessClassInPackage.com.sun.crypto.provider\";\n+    permission java.lang.RuntimePermission\n+                   \"accessClassInPackage.com.sun.crypto.provider\";\n@@ -131,1 +132,2 @@\n-    permission java.lang.RuntimePermission \"accessClassInPackage.sun.security.*\";\n+    permission java.lang.RuntimePermission\n+                   \"accessClassInPackage.sun.security.*\";\n@@ -142,1 +144,2 @@\n-    permission java.security.SecurityPermission \"getProperty.auth.login.defaultCallbackHandler\";\n+    permission java.security.SecurityPermission\n+                   \"getProperty.auth.login.defaultCallbackHandler\";\n","filename":"src\/java.base\/share\/lib\/security\/default.policy","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -950,10 +950,7 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Thread t = InnocuousThread.newSystemThread(\n-                    \"Poller \" + getName(),\n-                    poller);\n-            assert t.getContextClassLoader() == null;\n-            t.setDaemon(true);\n-            t.setPriority(Thread.MIN_PRIORITY);\n-            t.start();\n-            return null;\n-        });\n+        Thread t = InnocuousThread.newSystemThread(\n+                \"Poller-\" + getName(),\n+                poller,\n+                Thread.MIN_PRIORITY);\n+        assert t.getContextClassLoader() == null;\n+        t.setDaemon(true);\n+        t.start();\n@@ -1029,3 +1026,0 @@\n-        if (cleaner != null) {\n-            return;\n-        }\n@@ -1033,10 +1027,7 @@\n-        AccessController.doPrivileged((PrivilegedAction<Void>) () -> {\n-            Thread t = InnocuousThread.newSystemThread(\n-                    \"Cleanup-SunPKCS11\",\n-                    cleaner);\n-            assert t.getContextClassLoader() == null;\n-            t.setDaemon(true);\n-            t.setPriority(Thread.MIN_PRIORITY);\n-            t.start();\n-            return null;\n-        });\n+        Thread t = InnocuousThread.newSystemThread(\n+                \"Cleanup-SunPKCS11\",\n+                cleaner,\n+                Thread.MIN_PRIORITY);\n+        assert t.getContextClassLoader() == null;\n+        t.setDaemon(true);\n+        t.start();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":14,"deletions":23,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -50,0 +50,6 @@\n+        if (nssConfig == null) {\n+            \/\/ No test framework support yet. Ignore\n+            System.out.println(\"No NSS config found. Skipping.\");\n+            return;\n+        }\n+\n@@ -52,5 +58,0 @@\n-            if (nssConfig == null) {\n-                \/\/ No test framework support yet. Ignore\n-                System.out.println(\"No NSS config found. Skipping.\");\n-                return;\n-            }\n@@ -131,2 +132,0 @@\n-            perms.add(new RuntimePermission(\"accessClassInPackage.sun.*\"));\n-            perms.add(new RuntimePermission(\"accessClassInPackage.sun.security.pkcs11.*\"));\n@@ -134,1 +133,0 @@\n-            perms.add(new SecurityPermission(\"clearProviderProperties.*\"));\n@@ -144,1 +142,0 @@\n-\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -117,3 +117,1 @@\n-# run test without security manager\n-${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} \\\n-        -classpath ${TESTCLASSPATH} \\\n+TEST_ARGS=\"${TESTVMOPTS} -classpath ${TESTCLASSPATH} \\\n@@ -128,2 +126,4 @@\n-        -Djava.security.debug=${DEBUG} \\\n-        MultipleLogins || exit 10\n+        -Djava.security.debug=${DEBUG}\"\n+\n+# run test without security manager\n+${TESTJAVA}${FS}bin${FS}java ${TEST_ARGS} MultipleLogins || exit 10\n@@ -132,12 +132,1 @@\n-${TESTJAVA}${FS}bin${FS}java ${TESTVMOPTS} \\\n-        -classpath ${TESTCLASSPATH} \\\n-        --add-modules jdk.crypto.cryptoki \\\n-        --add-exports jdk.crypto.cryptoki\/sun.security.pkcs11=ALL-UNNAMED \\\n-        -DCUSTOM_DB_DIR=${TESTCLASSES} \\\n-        -DCUSTOM_P11_CONFIG=${TESTSRC}${FS}MultipleLogins-nss.txt \\\n-        -DNO_DEFAULT=true \\\n-        -DNO_DEIMOS=true \\\n-        -Dtest.src=${TESTSRC} \\\n-        -Dtest.classes=${TESTCLASSES} \\\n-        -Djava.security.debug=${DEBUG} \\\n-        MultipleLogins ${TESTSRC}${FS}MultipleLogins.policy || exit 11\n+${TESTJAVA}${FS}bin${FS}java ${TEST_ARGS} MultipleLogins useSimplePolicy || exit 11\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Provider\/MultipleLogins.sh","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"}]}