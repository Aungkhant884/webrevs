{"files":[{"patch":"@@ -1465,1 +1465,1 @@\n-void C2_MacroAssembler::load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt) {\n+void C2_MacroAssembler::load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt, bool is_legacy) {\n@@ -1480,0 +1480,1 @@\n+    assert(!is_legacy || !is_subword_type(elem_bt) || vlen_in_bytes < 64, \"\");\n@@ -1483,1 +1484,2 @@\n-    vpsubb(dst, dst, src, vlen_enc);\n+    vpsubb(dst, dst, src, is_legacy ? AVX_256bit : vlen_enc);\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-  void load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt);\n+  void load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt, bool is_legacy);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7457,1 +7457,2 @@\n-instruct loadMask(vec dst, vec src) %{\n+instruct loadMask(legVec dst, legVec src) %{\n+  predicate(!VM_Version::supports_avx512vlbw());\n@@ -7465,1 +7466,15 @@\n-    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt);\n+    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt, true);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct loadMask_evex(vec dst, vec src) %{\n+  predicate(VM_Version::supports_avx512vlbw());\n+  match(Set dst (VectorLoadMask src));\n+  effect(TEMP dst);\n+  format %{ \"vector_loadmask_byte $dst,$src\\n\\t\" %}\n+  ins_encode %{\n+    int vlen_in_bytes = vector_length_in_bytes(this);\n+    BasicType elem_bt = vector_element_basic_type(this);\n+\n+    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt, false);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"}]}