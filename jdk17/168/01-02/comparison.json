{"files":[{"patch":"@@ -3866,3 +3866,0 @@\n-  if (masklen < 64) {\n-    andq(tmp, (((jlong)1 << masklen) - 1));\n-  }\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1135,5 +1135,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5264,1 +5259,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5289,1 +5284,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5314,1 +5309,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte128VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1135,5 +1135,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5264,1 +5259,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5289,1 +5284,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5314,1 +5309,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte256VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1135,5 +1135,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5264,1 +5259,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5289,1 +5284,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5314,1 +5309,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte512VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1135,5 +1135,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5264,1 +5259,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5289,1 +5284,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5314,1 +5309,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Byte64VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1140,5 +1140,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5269,1 +5264,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5294,1 +5289,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5319,1 +5314,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ByteMaxVectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1271,5 +1271,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4815,1 +4810,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4840,1 +4835,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4865,1 +4860,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double128VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1271,5 +1271,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4815,1 +4810,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4840,1 +4835,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4865,1 +4860,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double256VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1271,5 +1271,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4815,1 +4810,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4840,1 +4835,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4865,1 +4860,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double512VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1271,5 +1271,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4815,1 +4810,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4840,1 +4835,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4865,1 +4860,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Double64VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1276,5 +1276,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4820,1 +4815,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4845,1 +4840,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4870,1 +4865,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/DoubleMaxVectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1281,5 +1281,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4793,1 +4788,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4818,1 +4813,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4843,1 +4838,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float128VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1281,5 +1281,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4793,1 +4788,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4818,1 +4813,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4843,1 +4838,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float256VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1281,5 +1281,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4793,1 +4788,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4818,1 +4813,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4843,1 +4838,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float512VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1281,5 +1281,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4793,1 +4788,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4818,1 +4813,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4843,1 +4838,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Float64VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1286,5 +1286,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -4798,1 +4793,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4823,1 +4818,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -4848,1 +4843,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/FloatMaxVectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1095,1 +1095,0 @@\n-\n@@ -5214,1 +5213,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5239,1 +5238,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5264,1 +5263,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int128VectorTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1095,1 +1095,0 @@\n-\n@@ -5214,1 +5213,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5239,1 +5238,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5264,1 +5263,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int256VectorTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1095,1 +1095,0 @@\n-\n@@ -5214,1 +5213,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5239,1 +5238,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5264,1 +5263,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int512VectorTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1095,1 +1095,0 @@\n-\n@@ -5214,1 +5213,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5239,1 +5238,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5264,1 +5263,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Int64VectorTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1100,1 +1100,0 @@\n-\n@@ -5219,1 +5218,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5244,1 +5243,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5269,1 +5268,1 @@\n-        int[] r = fr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/IntMaxVectorTests.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1121,5 +1121,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5102,1 +5097,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5127,1 +5122,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5152,1 +5147,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long128VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1121,5 +1121,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5102,1 +5097,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5127,1 +5122,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5152,1 +5147,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long256VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1121,5 +1121,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5102,1 +5097,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5127,1 +5122,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5152,1 +5147,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long512VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1121,5 +1121,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5102,1 +5097,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5127,1 +5122,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5152,1 +5147,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Long64VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1126,5 +1126,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5107,1 +5102,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5132,1 +5127,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5157,1 +5152,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LongMaxVectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1125,5 +1125,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5243,1 +5238,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5268,1 +5263,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5293,1 +5288,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short128VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1125,5 +1125,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5243,1 +5238,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5268,1 +5263,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5293,1 +5288,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short256VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1125,5 +1125,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5243,1 +5238,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5268,1 +5263,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5293,1 +5288,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short512VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1125,5 +1125,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5243,1 +5238,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5268,1 +5263,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5293,1 +5288,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Short64VectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1130,5 +1130,0 @@\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-\n@@ -5248,1 +5243,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5273,1 +5268,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n@@ -5298,1 +5293,1 @@\n-        int[] r = ifr.apply(SPECIES.length());\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/ShortMaxVectorTests.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -425,5 +425,1 @@\n-#if[Int]\n-        int[] r = fr.apply(SPECIES.length());\n-#else[Int]\n-        int[] r = ifr.apply(SPECIES.length());\n-#end[Int]\n+        int[] r = new int[a.length];\n@@ -454,5 +450,1 @@\n-#if[Int]\n-        int[] r = fr.apply(SPECIES.length());\n-#else[Int]\n-        int[] r = ifr.apply(SPECIES.length());\n-#end[Int]\n+        int[] r = new int[a.length];\n@@ -483,5 +475,1 @@\n-#if[Int]\n-        int[] r = fr.apply(SPECIES.length());\n-#else[Int]\n-        int[] r = ifr.apply(SPECIES.length());\n-#end[Int]\n+        int[] r = new int[a.length];\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-Miscellaneous.template","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1363,7 +1363,0 @@\n-#if[!Int]\n-    static final IntFunction<int[]> ifr = (vl) -> {\n-        int length = BUFFER_REPS * vl;\n-        return new int[length];\n-    };\n-#end[!Int]\n-\n","filename":"test\/jdk\/jdk\/incubator\/vector\/templates\/Unit-header.template","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}