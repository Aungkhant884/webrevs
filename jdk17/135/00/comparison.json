{"files":[{"patch":"@@ -1378,2 +1378,1 @@\n-                code.resolve(switchEnv.info.cont);\n-                code.resolve(code.branch(goto_), switchStart);\n+                code.resolve(switchEnv.info.cont, switchStart);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @bug 8262891 8268333\n+ * @bug 8262891 8268333 8268896\n@@ -63,0 +63,2 @@\n+        runFallThrough(this::testFallThroughStatement);\n+        runFallThrough(this::testFallThroughExpression);\n@@ -107,0 +109,4 @@\n+    void runFallThrough(Function<Integer, Integer> mapper) {\n+        assertEquals(2, mapper.apply(1));\n+    }\n+\n@@ -312,0 +318,25 @@\n+    Integer testFallThroughStatement(Integer i) {\n+        int r = 0;\n+\n+        switch (i) {\n+            case Integer o && o != null:\n+                r = 1;\n+            default:\n+                r = 2;\n+        }\n+\n+        return r;\n+    }\n+\n+    Integer testFallThroughExpression(Integer i) {\n+        int r = switch (i) {\n+            case Integer o && o != null:\n+                r = 1;\n+            default:\n+                r = 2;\n+                yield r;\n+        };\n+\n+        return r;\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Switches.java","additions":32,"deletions":1,"binary":false,"changes":33,"status":"modified"}]}