{"files":[{"patch":"@@ -299,0 +299,11 @@\n+    if (bt == T_OBJECT) {\n+      \/\/ BarrierSetC2::arraycopy_payload_base_offset 8-byte aligns the offset.\n+      \/\/ Make sure the offset points to the first element in the array when cloning\n+      \/\/ object arrays. Otherwise, load barriers are applied to parts of the header.\n+      assert(src_offset == dest_offset, \"should be equal\");\n+      assert((src_offset->get_long() == arrayOopDesc::base_offset_in_bytes(T_OBJECT) && UseCompressedClassPointers) ||\n+             (src_offset->get_long() == arrayOopDesc::length_offset_in_bytes() && !UseCompressedClassPointers),\n+             \"unexpected offset for object array clone\");\n+      src_offset = phase->longcon(arrayOopDesc::base_offset_in_bytes(T_OBJECT));\n+      dest_offset = src_offset;\n+    }\n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -310,2 +310,2 @@\n-  const TypeInt* src_offset_inttype  = _igvn.find_int_type(src_offset);;\n-  const TypeInt* dest_offset_inttype = _igvn.find_int_type(dest_offset);;\n+  const TypeInt* src_offset_inttype  = _igvn.find_int_type(src_offset);\n+  const TypeInt* dest_offset_inttype = _igvn.find_int_type(dest_offset);\n","filename":"src\/hotspot\/share\/opto\/macroArrayCopy.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n- * @bug 8155643\n- * @summary Test Object.clone() intrinsic if ReduceInitialCardMarks is disabled.\n+ * @bug 8155643 8268125 8270461\n+ * @summary Test Object.clone() intrinsic.\n@@ -32,2 +32,3 @@\n- *\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.arraycopy.TestObjectArrayClone::testClone*\n+ *                   compiler.arraycopy.TestObjectArrayClone\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedClassPointers -Xmx128m\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestObjectArrayClone.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}