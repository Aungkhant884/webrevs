{"files":[{"patch":"@@ -2671,0 +2671,3 @@\n+                    case BANG: case TILDE:\n+                        isYieldStatement = S.token(1).kind != SEMI;\n+                        break;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * @bug 8206986 8222169 8224031 8240964 8267119\n+ * @bug 8206986 8222169 8224031 8240964 8267119 8268670\n@@ -123,0 +123,20 @@\n+    private int yieldUnaryNumberOperator(String s, int a) {\n+        return switch (s) {\n+            case \"a\": yield +a;\n+            case \"b\": yield -a;\n+            case \"c\": yield ~a; \/\/ intentionally repeated ~a, test the case clause\n+            case \"d\": yield ++a;\n+            case \"e\": yield --a;\n+            case \"f\": yield a++;\n+            case \"g\": yield a--;\n+            default: yield ~a; \/\/ intentionally repeated ~a, test the default clause\n+        };\n+    }\n+\n+    private boolean yieldUnaryNotOperator(String s, boolean b) {\n+        return switch (s) {\n+            case \"a\": yield !b; \/\/ intentionally repeated !b, test the case clause\n+            default: yield !b; \/\/ intentionally repeated !b, test the default clause\n+        };\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/ExpressionSwitch.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"}]}