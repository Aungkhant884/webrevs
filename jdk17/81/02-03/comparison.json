{"files":[{"patch":"@@ -174,3 +174,5 @@\n-     * implements a {@code switch} on a target of an enum type.  The static\n-     * arguments are an array of case labels which must be non-null and of type\n-     * {@code String} (representing enum constants) or {@code Class}.\n+     * implements a {@code switch} on a target of an enum type. The static\n+     * arguments are used to encode the case labels associated to the switch\n+     * construct, where each label can be encoded as a String (to represent\n+     * an enum constant), or, alternatively, as a Class of the target enum type\n+     * (to represent a type test pattern whose type is the enum type).\n@@ -214,1 +216,1 @@\n-     * {@code Class}.\n+     * {@code Class} of the target enum type.\n@@ -249,0 +251,3 @@\n+            if (label != enumClassTemplate) {\n+                throw new IllegalArgumentException(\"illegal Class label: \" + label);\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -116,0 +116,12 @@\n+        try {\n+            testEnum(E1.B, 1, 3, \"B\", \"C\", \"A\", E2.class);\n+            fail(\"Didn't get the expected exception.\");\n+        } catch (IllegalArgumentException ex) {\n+            \/\/OK\n+        }\n+        try {\n+            testEnum(E1.B, 1, 3, \"B\", \"C\", \"A\", String.class);\n+            fail(\"Didn't get the expected exception.\");\n+        } catch (IllegalArgumentException ex) {\n+            \/\/OK\n+        }\n","filename":"test\/jdk\/java\/lang\/runtime\/SwitchBootstrapsTest.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}