{"files":[{"patch":"@@ -362,1 +362,1 @@\n-                         .map(l -> toLoadableConstant(l))\n+                         .map(l -> toLoadableConstant(l, seltype))\n@@ -484,1 +484,1 @@\n-    private LoadableConstant toLoadableConstant(JCCaseLabel l) {\n+    private LoadableConstant toLoadableConstant(JCCaseLabel l, Type selector) {\n@@ -486,1 +486,6 @@\n-            return (LoadableConstant) principalType((JCPattern) l);\n+            Type principalType = principalType((JCPattern) l);\n+            if (types.isSubtype(selector, principalType)) {\n+                return (LoadableConstant) selector;\n+            } else {\n+                return (LoadableConstant) principalType;\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+        runEnumTest(this::testEnumWithGuards3);\n@@ -57,0 +58,1 @@\n+        runEnumTest(this::testEnumWithGuardsExpression3);\n@@ -272,0 +274,20 @@\n+    String testEnumWithGuards3(E e) {\n+        switch (e) {\n+            case A: return \"a\";\n+            case B: return \"b\";\n+            case Object x && \"C\".equals(x.toString()): return \"C\";\n+            case C: return \"broken\";\n+            case null, E x: return String.valueOf(x);\n+        }\n+    }\n+\n+    String testEnumWithGuardsExpression3(E e) {\n+        return switch (e) {\n+            case A -> \"a\";\n+            case B -> \"b\";\n+            case Object x && \"C\".equals(x.toString()) -> \"C\";\n+            case C -> \"broken\";\n+            case null, E x -> String.valueOf(x);\n+        };\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Switches.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}