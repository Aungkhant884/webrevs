{"files":[{"patch":"@@ -70,1 +70,1 @@\n-\/\/ If the upshifted traceid value is less than this threshold (1 073 741 824),\n+\/\/ If the traceid value is less than this threshold (1 073 741 824),\n@@ -124,0 +124,8 @@\n+template <typename T>\n+static inline void store_traceid(T* element, traceid id, bool uncompressed) {\n+#ifdef VM_LITTLE_ENDIAN\n+  id <<= METADATA_SHIFT;\n+#endif\n+  element->id = uncompressed ? id | UNCOMPRESSED : id;\n+}\n+\n@@ -125,0 +133,1 @@\n+  assert(can_compress_element(id), \"invariant\");\n@@ -126,1 +135,1 @@\n-  element->id = id;\n+  store_traceid(element, id, false);\n@@ -132,1 +141,1 @@\n-  element->id = id | UNCOMPRESSED;\n+  store_traceid(element, id, true);\n@@ -139,4 +148,1 @@\n-  traceid id = JfrTraceId::load_raw(klass);\n-#ifdef VM_LITTLE_ENDIAN\n-  id <<= METADATA_SHIFT;\n-#endif\n+  const traceid id = JfrTraceId::load_raw(klass);\n@@ -145,2 +151,1 @@\n-  } else {\n-    store_uncompressed_element(id, klass, pos);\n+    return;\n@@ -148,0 +153,1 @@\n+  store_uncompressed_element(id, klass, pos);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdKlassQueue.cpp","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-  static size_t element_size = _policy.element_size(t);\n+  size_t element_size = _policy.element_size(t);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrEpochQueue.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}