{"files":[{"patch":"@@ -53,9 +53,1 @@\n-    \/**\n-     * Construct a public key from its encoding.\n-     *\n-     * @param encodedKey the encoding of a public key.\n-     *\n-     * @param encodedKeyAlgorithm the algorithm the encodedKey is for.\n-     *\n-     * @return a public key constructed from the encodedKey.\n-     *\/\n+\n@@ -63,1 +55,1 @@\n-            String encodedKeyAlgorithm)\n+            int ofs, int len, String encodedKeyAlgorithm)\n@@ -66,0 +58,3 @@\n+        byte[] keyBytes = (ofs == 0 && encodedKey.length == len)\n+                ? encodedKey : Arrays.copyOfRange(encodedKey, ofs, ofs + len);\n+        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes);\n@@ -70,1 +65,0 @@\n-            X509EncodedKeySpec keySpec = new X509EncodedKeySpec(encodedKey);\n@@ -78,2 +72,0 @@\n-                X509EncodedKeySpec keySpec =\n-                    new X509EncodedKeySpec(encodedKey);\n@@ -102,9 +94,0 @@\n-    \/**\n-     * Construct a private key from its encoding.\n-     *\n-     * @param encodedKey the encoding of a private key.\n-     *\n-     * @param encodedKeyAlgorithm the algorithm the wrapped key is for.\n-     *\n-     * @return a private key constructed from the encodedKey.\n-     *\/\n@@ -112,1 +95,1 @@\n-            String encodedKeyAlgorithm)\n+            int ofs, int len, String encodedKeyAlgorithm)\n@@ -115,2 +98,3 @@\n-\n-        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encodedKey);\n+        byte[] keyBytes = (ofs == 0 && encodedKey.length == len)\n+                ? encodedKey : Arrays.copyOfRange(encodedKey, ofs, ofs + len);\n+        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(keyBytes);\n@@ -147,0 +131,3 @@\n+            if (keyBytes != encodedKey) {\n+                Arrays.fill(keyBytes, (byte)0);\n+            }\n@@ -152,9 +139,0 @@\n-    \/**\n-     * Construct a secret key from its encoding.\n-     *\n-     * @param encodedKey the encoding of a secret key.\n-     *\n-     * @param encodedKeyAlgorithm the algorithm the secret key is for.\n-     *\n-     * @return a secret key constructed from the encodedKey.\n-     *\/\n@@ -175,30 +153,9 @@\n-        switch (keyType) {\n-        case Cipher.SECRET_KEY:\n-            try {\n-                return ConstructKeys.constructSecretKey(encoding, ofs, len,\n-                        keyAlgorithm);\n-            } finally {\n-                Arrays.fill(encoding, ofs, len, (byte)0);\n-            }\n-        case Cipher.PRIVATE_KEY:\n-            byte[] encoding2 = encoding;\n-            try {\n-                if (ofs != 0 || len != encoding.length) {\n-                    encoding2 = Arrays.copyOfRange(encoding, ofs, ofs + len);\n-                }\n-                return ConstructKeys.constructPrivateKey(encoding2,\n-                        keyAlgorithm);\n-            } finally {\n-                Arrays.fill(encoding, ofs, len, (byte)0);\n-                if (encoding2 != encoding) {\n-                    Arrays.fill(encoding2, (byte)0);\n-                }\n-            }\n-        case Cipher.PUBLIC_KEY:\n-            if (ofs != 0 || len != encoding.length) {\n-                encoding = Arrays.copyOfRange(encoding, ofs, ofs + len);\n-            }\n-            return ConstructKeys.constructPublicKey(encoding, keyAlgorithm);\n-        default:\n-            throw new NoSuchAlgorithmException(\"Unsupported key type\");\n-        }\n+        return switch (keyType) {\n+            case Cipher.SECRET_KEY -> ConstructKeys.constructSecretKey(\n+                    encoding, ofs, len, keyAlgorithm);\n+            case Cipher.PRIVATE_KEY -> ConstructKeys.constructPrivateKey(\n+                    encoding, ofs, len, keyAlgorithm);\n+            case Cipher.PUBLIC_KEY -> ConstructKeys.constructPublicKey(\n+                    encoding, ofs, len, keyAlgorithm);\n+            default -> throw new NoSuchAlgorithmException(\"Unsupported key type\");\n+        };\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/ConstructKeys.java","additions":21,"deletions":64,"binary":false,"changes":85,"status":"modified"}]}