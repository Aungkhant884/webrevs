{"files":[{"patch":"@@ -510,1 +510,1 @@\n-void PhaseIdealLoop::peeled_dom_test_elim(IdealLoopTree *loop, Node_List &old_new) {\n+void PhaseIdealLoop::peeled_dom_test_elim(IdealLoopTree* loop, Node_List& old_new) {\n@@ -513,3 +513,3 @@\n-    progress = false;           \/\/ Reset for next iteration\n-    Node *prev = loop->_head->in(LoopNode::LoopBackControl);\/\/loop->tail();\n-    Node *test = prev->in(0);\n+    progress = false; \/\/ Reset for next iteration\n+    Node* prev = loop->_head->in(LoopNode::LoopBackControl); \/\/ loop->tail();\n+    Node* test = prev->in(0);\n@@ -517,1 +517,0 @@\n-\n@@ -519,5 +518,9 @@\n-      if ((p_op == Op_IfFalse || p_op == Op_IfTrue) &&\n-          test->is_If() &&      \/\/ Test?\n-          !test->in(1)->is_Con() && \/\/ And not already obvious?\n-          \/\/ Condition is not a member of this loop?\n-          !loop->is_member(get_loop(get_ctrl(test->in(1))))){\n+      assert(test != NULL, \"test cannot be NULL\");\n+      Node* test_cond = NULL;\n+      if ((p_op == Op_IfFalse || p_op == Op_IfTrue) && test->is_If()) {\n+        test_cond = test->in(1);\n+      }\n+      if (test_cond != NULL && \/\/ Test?\n+          !test_cond->is_Con() && \/\/ And not already obvious?\n+          \/\/ And condition is not a member of this loop?\n+          !loop->is_member(get_loop(get_ctrl(test_cond)))) {\n@@ -526,2 +529,4 @@\n-          Node *n = loop->_body.at(i);\n-          if (n->is_If() && n->in(1) == test->in(1) \/*&& n != loop->tail()->in(0)*\/) {\n+          Node* n = loop->_body.at(i);\n+          \/\/ Check against cached test condition because dominated_by()\n+          \/\/ replaces the test condition with a constant.\n+          if (n->is_If() && n->in(1) == test_cond) {\n@@ -537,1 +542,0 @@\n-\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @requires vm.compiler2.enabled\n+ * @bug 8269795\n+ * @summary PhaseIdealLoop::peeled_dom_test_elim wrongly moves a non-dominated test out of a loop together with control dependent data nodes.\n+ *          This results in a crash due to an out of bounds read of an array.\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -Xcomp -XX:-TieredCompilation -XX:+StressGCM\n+ *                   -XX:CompileCommand=compileonly,compiler.loopopts.TestPeelingRemoveDominatedTest compiler.loopopts.TestPeelingRemoveDominatedTest\n+ *\/\n+\n+package compiler.loopopts;\n+\n+public class TestPeelingRemoveDominatedTest {\n+    public static int N = 400;\n+    static boolean bFld = true;\n+    static int iArrFld[] = new int[N];\n+\n+    public static void main(String[] strArr) {\n+        TestPeelingRemoveDominatedTest _instance = new TestPeelingRemoveDominatedTest();\n+        for (int i = 0; i < 10; i++) {\n+            _instance.mainTest();\n+        }\n+    }\n+\n+    public void mainTest() {\n+        vMeth();\n+    }\n+\n+\n+    static void vMeth() {\n+        iArrFld[1] = 2;\n+        int i6 = 2;\n+        while (--i6 > 0) {\n+            try {\n+                int i3 = (iArrFld[i6 - 1] \/ 56);\n+                iArrFld[1] = (-139 % i3);\n+            } catch (ArithmeticException a_e) {\n+            }\n+            if (bFld) {\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestPeelingRemoveDominatedTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}