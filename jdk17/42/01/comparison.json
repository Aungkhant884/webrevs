{"files":[{"patch":"@@ -471,1 +471,1 @@\n-            sb.append(tsym.name);\n+            sb.append(tsym.name.toString());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Type.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1435,1 +1435,1 @@\n-                    StringBuilder sb = new StringBuilder(SPACER).append(node.getName());\n+                    StringBuilder sb = new StringBuilder(SPACER).append(node.getName().toString());\n@@ -2053,1 +2053,1 @@\n-            CharSequence name;\n+            String name;\n@@ -2057,1 +2057,1 @@\n-                    name = ((QualifiedNameable) e).getQualifiedName();\n+                    name = ((QualifiedNameable) e).getQualifiedName().toString();\n@@ -2064,1 +2064,1 @@\n-                    name = e.getSimpleName();\n+                    name = e.getSimpleName().toString();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-        final StringBuilder buf = new StringBuilder(executableElement.getSimpleName());\n+        final StringBuilder buf = new StringBuilder(executableElement.getSimpleName().toString());\n@@ -240,1 +240,1 @@\n-                    buf.append(utils.asTypeElement(t).getQualifiedName());\n+                    buf.append(utils.asTypeElement(t).getQualifiedName().toString());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIds.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,2 +73,4 @@\n-        for (int i = 0; i < s.length(); i++) {\n-            char ch = s.charAt(i);\n+        \/\/ Convert to string as CharSequence implementations can be slow - see JDK-8263321\n+        String str = s.toString();\n+        for (int i = 0; i < str.length(); i++) {\n+            char ch = str.charAt(i);\n@@ -78,2 +80,2 @@\n-                    StringBuilder sb = new StringBuilder(s.subSequence(0, i));\n-                    escapeHtmlChars(s, i, sb);\n+                    StringBuilder sb = new StringBuilder(str.substring(0, i));\n+                    escapeHtmlChars(str, i, sb);\n@@ -83,1 +85,1 @@\n-        return s.toString();\n+        return str;\n@@ -94,1 +96,1 @@\n-        escapeHtmlChars(s, 0, sb);\n+        escapeHtmlChars(s.toString(), 0, sb);\n@@ -97,1 +99,1 @@\n-    private static void escapeHtmlChars(CharSequence s, int start, StringBuilder sb) {\n+    private static void escapeHtmlChars(String s, int start, StringBuilder sb) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Entity.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-     * Constructor to construct FixedStringContent object.\n+     * Constructs an immutable text object.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Text.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-                sb.append(SPACER).append(node.getName());\n+                sb.append(SPACER).append(node.getName().toString());\n@@ -255,1 +255,1 @@\n-                        .append(node.getName())\n+                        .append(node.getName().toString())\n@@ -310,1 +310,1 @@\n-                sb.append(node.getName());\n+                sb.append(node.getName().toString());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2161,1 +2161,1 @@\n-                    StringBuilder sb = new StringBuilder(e.getSimpleName());\n+                    StringBuilder sb = new StringBuilder(e.getSimpleName().toString());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}