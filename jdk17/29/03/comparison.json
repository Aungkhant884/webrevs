{"files":[{"patch":"@@ -108,1 +108,1 @@\n-            return valueOf(refKind, false);\n+            return valueOf(refKind, refKind == REF_invokeInterface);\n@@ -137,8 +137,2 @@\n-            if (i >= 0 && i < TABLE.length) {\n-                Kind kind = TABLE[i];\n-                if (kind == null) {\n-                    throw new IllegalArgumentException(String.format(\"refKind=%d\", refKind));\n-                }\n-                if (kind.refKind == refKind && kind.isInterface == isInterface) {\n-                    return kind;\n-                }\n+            if (i >= 2 && i < TABLE.length) {\n+                return TABLE[i];\n@@ -146,1 +140,1 @@\n-            throw new IllegalArgumentException(String.format(\"refKind=%d\", refKind));\n+            throw new IllegalArgumentException(String.format(\"refKind=%d isInterface=%s\", refKind, isInterface));\n@@ -183,3 +177,1 @@\n-                        \/\/ There is not a specific Kind for interfaces\n-                        if (kind == VIRTUAL)  kind = INTERFACE_VIRTUAL;\n-                        if (TABLE[i] == null)  TABLE[i] = kind;\n+                        TABLE[i] = kind;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DirectMethodHandleDesc.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+import static java.lang.invoke.MethodHandleInfo.*;\n@@ -57,0 +58,1 @@\n+import static org.testng.Assert.assertNotEquals;\n@@ -362,0 +364,1 @@\n+            assertEquals(Kind.valueOf(k.refKind), Kind.valueOf(k.refKind, k.refKind == MethodHandleInfo.REF_invokeInterface));\n@@ -364,0 +367,20 @@\n+        \/\/ let's now verify those cases for which the value of the isInterface parameter is ignored\n+        int[] isInterfaceIgnored = new int[] {\n+                REF_getField,\n+                REF_getStatic,\n+                REF_putField,\n+                REF_putStatic,\n+                REF_newInvokeSpecial,\n+                REF_invokeInterface\n+        };\n+        for (int refKind : isInterfaceIgnored) {\n+            assertEquals(Kind.valueOf(refKind, false), Kind.valueOf(refKind, true));\n+        }\n+\n+        \/\/ some explicit tests for REF_invokeStatic and REF_invokeSpecial\n+        assertNotEquals(Kind.valueOf(REF_invokeStatic, false), Kind.valueOf(REF_invokeStatic, true));\n+        assertNotEquals(Kind.valueOf(REF_invokeSpecial, false), Kind.valueOf(REF_invokeSpecial, true));\n+        assertEquals(Kind.valueOf(REF_invokeStatic, false), Kind.STATIC);\n+        assertEquals(Kind.valueOf(REF_invokeStatic, true), Kind.INTERFACE_STATIC);\n+        assertEquals(Kind.valueOf(REF_invokeSpecial, false), Kind.SPECIAL);\n+        assertEquals(Kind.valueOf(REF_invokeSpecial, true), Kind.INTERFACE_SPECIAL);\n","filename":"test\/jdk\/java\/lang\/constant\/MethodHandleDescTest.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"}]}