{"files":[{"patch":"@@ -1014,0 +1014,27 @@\n+\n+    int lo = igvn->type(adjusted_lim)->is_int()->_lo;\n+    if (lo < 0) {\n+      \/\/ If range check elimination applies to this comparison, it includes code to protect from overflows that may\n+      \/\/ cause the main loop to be skipped entirely. Delay this transformation.\n+      \/\/ Example:\n+      \/\/ for (int i = 0; i < limit; i++) {\n+      \/\/   if (i < max_jint && i > min_jint) {...\n+      \/\/ }\n+      \/\/ Comparisons folded as:\n+      \/\/ i - min_jint - 1 <u -2\n+      \/\/ when RC applies, main loop limit becomes:\n+      \/\/ min(limit, max(-2 + min_jint + 1, min_jint))\n+      \/\/ = min(limit, min_jint)\n+      \/\/ = min_jint\n+      if (!igvn->C->post_loop_opts_phase()) {\n+        if (adjusted_val->outcnt() == 0) {\n+          igvn->remove_dead_node(adjusted_val);\n+        }\n+        if (adjusted_lim->outcnt() == 0) {\n+          igvn->remove_dead_node(adjusted_lim);\n+        }\n+        igvn->C->record_for_post_loop_opts_igvn(this);\n+        return false;\n+      }\n+    }\n+\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"}]}