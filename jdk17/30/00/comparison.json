{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import java.net.StandardSocketOptions;\n@@ -270,1 +271,1 @@\n-            Thread.sleep(5*1000);\n+            awaitNoFurtherWrites(bytesWritten);\n@@ -282,5 +283,1 @@\n-            out.println(\"outstanding writes: \" + outstandingWriteOps.get());\n-            while (outstandingWriteOps.get() > 0 )  {\n-                out.println(\"spinning\");\n-                Thread.onSpinWait();\n-            }\n+            awaitOutstandingWrites(outstandingWriteOps);\n@@ -291,0 +288,29 @@\n+    \/** Waits for outstandingWriteOps to complete (become 0). *\/\n+    static void awaitOutstandingWrites(AtomicInteger outstandingWriteOps) {\n+        boolean initial = true;\n+        while (outstandingWriteOps.get() > 0 )  {\n+            if (initial) {\n+                out.print(\"awaiting outstanding writes\");\n+                initial = false;\n+            }\n+            out.print(\".\");\n+            Thread.onSpinWait();\n+        }\n+        out.println(\"outstanding writes: \" + outstandingWriteOps.get());\n+    }\n+\n+    \/** Waits, at most 20secs, for bytesWritten to stabilize. *\/\n+    static void awaitNoFurtherWrites(AtomicLong bytesWritten) throws Exception {\n+        int i;\n+        long prevN = 0;\n+        for (i=0; i<10; i++) {\n+            long n = bytesWritten.get();\n+            Thread.sleep(2 * 1000);\n+            if (bytesWritten.get() == n && prevN == n) {\n+                break;\n+            }\n+            prevN = n;\n+        }\n+        out.println(\"awaitNoFurtherWrites: i=\" + i +\" , bytesWritten=\" + bytesWritten.get());\n+    }\n+\n@@ -360,0 +386,1 @@\n+        setBufferSized(assc, asc);\n@@ -365,0 +392,15 @@\n+    \/** Sets the send\/receive buffer sizes in an attempt\/hint to limit the\n+     * accepted\/connected socket buffer sizes. Actual buffer sizes in use will\n+     * likely be larger due to TCP auto-tuning, but the hint typically reduces\n+     * the overall scaled sizes. This is primarily to stabilize outstanding\n+     * write operations.\n+     *\/\n+    static void setBufferSized(AsynchronousServerSocketChannel assc,\n+                               AsynchronousSocketChannel asc)\n+        throws Exception\n+    {\n+        assc.setOption(StandardSocketOptions.SO_RCVBUF, 32 * 1024);\n+        asc.setOption(StandardSocketOptions.SO_SNDBUF, 32 * 1024);\n+        asc.setOption(StandardSocketOptions.SO_RCVBUF, 32 * 1024);\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/channels\/TestAsyncSocketChannels.java","additions":48,"deletions":6,"binary":false,"changes":54,"status":"modified"}]}