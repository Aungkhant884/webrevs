{"files":[{"patch":"@@ -458,1 +458,1 @@\n-  if (_new_checkpoint.is_signaled()) {\n+  if (_new_checkpoint.is_signaled_with_reset()) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrCheckpointManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1106,0 +1106,4 @@\n+  \/\/ JfrTraceIdEpoch::has_changed_tag_state_no_reset() is a load-acquire we issue to see side-effects (i.e. tags).\n+  \/\/ The JfrRecorderThread does this as part of normal processing, but with concurrent class unloading, which can\n+  \/\/ happen in arbitrary threads, we invoke it explicitly.\n+  JfrTraceIdEpoch::has_changed_tag_state_no_reset();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,0 +111,4 @@\n+    return _tag_state.is_signaled_with_reset();\n+  }\n+\n+  static bool has_changed_tag_state_no_reset() {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/traceid\/jfrTraceIdEpoch.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  return _new_string.is_signaled();\n+  return _new_string.is_signaled_with_reset();\n","filename":"src\/hotspot\/share\/jfr\/recorder\/stringpool\/jfrStringPool.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,3 +37,1 @@\n-    if (!Atomic::load_acquire(&_signaled)) {\n-      Atomic::release_store(&_signaled, true);\n-    }\n+    Atomic::release_store(&_signaled, true);\n@@ -43,2 +41,6 @@\n-    if (Atomic::load_acquire(&_signaled)) {\n-      Atomic::release_store(&_signaled, false); \/\/ auto-reset\n+    return Atomic::load_acquire(&_signaled);\n+  }\n+\n+  bool is_signaled_with_reset() const {\n+    if (is_signaled()) {\n+      Atomic::release_store(&_signaled, false);\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrSignal.hpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}