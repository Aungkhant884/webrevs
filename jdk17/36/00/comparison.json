{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import sun.security.x509.AlgorithmId;\n@@ -153,0 +154,9 @@\n+        clearCachedValues();\n+    }\n+\n+    \/**\n+     * Clears the cached provider-list-specific values. These values need to\n+     * be re-generated whenever provider list is changed. The logic for\n+     * generating them is in the respective classes.\n+     *\/\n+    private static void clearCachedValues() {\n@@ -154,0 +164,1 @@\n+        AlgorithmId.clearAliasOidsTable();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/Providers.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -539,0 +539,5 @@\n+    \/\/ called by sun.security.jca.Providers whenever provider list is changed\n+    public static void clearAliasOidsTable() {\n+        aliasOidsTable = null;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 4162868 8130181 8242151\n+ * @bug 4162868 8130181 8242151 8267397\n@@ -30,1 +30,2 @@\n- * @summary Algorithm Name-to-OID mapping needs to be made extensible.\n+ * @summary Check that AlgorithmId Name-to-OID mapping is extensible and\n+ *      up-to-date.\n@@ -33,2 +34,0 @@\n-\/\/ Run in othervm, coz AlgorithmId.oidTable is only initialized once\n-\n@@ -40,0 +39,37 @@\n+    private static void test(String alg, String expOid) throws Exception {\n+        System.out.println(\"Testing \" + alg + \" and \" + expOid );\n+        try {\n+            AlgorithmId algid = AlgorithmId.get(alg);\n+            if (expOid == null) {\n+                throw new Exception(\"Expected NSAE not thrown\");\n+            }\n+            if (!expOid.equals(algid.getOID().toString())) {\n+                throw new Exception(\"Oid mismatch, expected \" + expOid +\n+                        \", got \" + algid.getOID().toString());\n+            }\n+            if (!alg.equals(algid.getName())) {\n+                throw new Exception(\"Name mismatch, expected \" + alg +\n+                        \", got \" + algid.getName());\n+            }\n+            \/\/ try AlgorithmId.get() using 'expOid' if (alg != expOid)\n+            if (alg != expOid) {\n+                algid = AlgorithmId.get(expOid);\n+                if (!expOid.equals(algid.getOID().toString())) {\n+                    throw new Exception(\"Oid2 mismatch, expected \" + expOid +\n+                        \", got \" + algid.getOID().toString());\n+                }\n+                if (!alg.equals(algid.getName())) {\n+                    throw new Exception(\"Name2 mismatch, expected \" + alg +\n+                            \", got \" + algid.getName());\n+                }\n+            }\n+            System.out.println(\" => passed\");\n+        } catch (NoSuchAlgorithmException nsae) {\n+            if (expOid != null) {\n+                nsae.printStackTrace();\n+                throw new Exception(\"Unexpected NSAE for \" + alg);\n+            }\n+            System.out.println(\" => expected NSAE thrown\");\n+        }\n+    }\n+\n@@ -41,0 +77,1 @@\n+\n@@ -42,11 +79,1 @@\n-        Security.addProvider(p);\n-        AlgorithmId algid = AlgorithmId.getAlgorithmId(TestProvider.ALG_NAME);\n-        String oid = algid.getOID().toString();\n-        if (!oid.equals(TestProvider.ALG_OID)) {\n-            throw new Exception(\"Provider alias oid not used, found \" + oid);\n-        }\n-        String name = algid.getName();\n-        if (!name.equalsIgnoreCase(TestProvider.ALG_NAME)) {\n-            throw new Exception(\"provider alias name not used, found \" + name);\n-        }\n-        String alias = \"Alg.Alias.Signature.OID.\" + oid;\n+        String alias = \"Alg.Alias.Signature.OID.\" + TestProvider.ALG_OID;\n@@ -58,0 +85,20 @@\n+\n+        \/\/ scenario#1: test before adding TestProvider\n+        System.out.println(\"Before adding test provider\");\n+        test(TestProvider.ALG_NAME, null);\n+        test(TestProvider.ALG_OID, TestProvider.ALG_OID);\n+        test(TestProvider.ALG_OID2, TestProvider.ALG_OID2);\n+\n+        Security.addProvider(p);\n+        \/\/ scenario#2: test again after adding TestProvider\n+        System.out.println(\"After adding test provider\");\n+        test(TestProvider.ALG_NAME, TestProvider.ALG_OID);\n+        test(TestProvider.ALG_OID2, TestProvider.ALG_OID2);\n+\n+        Security.removeProvider(p.getName());\n+        \/\/ scenario#3: test after removing TestProvider; should be same as\n+        \/\/ scenario#1\n+        System.out.println(\"After removing test provider\");\n+        test(TestProvider.ALG_NAME, null);\n+        test(TestProvider.ALG_OID, TestProvider.ALG_OID);\n+        test(TestProvider.ALG_OID2, TestProvider.ALG_OID2);\n@@ -63,0 +110,1 @@\n+        static String ALG_OID2 = \"0.2.7.6.5.4.3.2.1.0\";\n@@ -66,1 +114,1 @@\n-        super(\"Dummy\", \"1.0\", \"XYZ algorithm\");\n+            super(\"Dummy\", \"1.0\", \"XYZ algorithm\");\n@@ -68,12 +116,4 @@\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-\n-                    put(\"Signature.\" + ALG_NAME, \"test.xyz\");\n-                    \/\/ preferred OID\n-                    put(\"Alg.Alias.Signature.OID.\" + ALG_OID,\n-                        ALG_NAME);\n-                    put(\"Alg.Alias.Signature.9.8.7.6.5.4.3.2.1.0\",\n-                        ALG_NAME);\n-                    return null;\n-                }\n-            });\n+            put(\"Signature.\" + ALG_NAME, \"test.xyz\");\n+            \/\/ preferred OID for name<->oid mapping\n+            put(\"Alg.Alias.Signature.OID.\" + ALG_OID, ALG_NAME);\n+            put(\"Alg.Alias.Signature.\" + ALG_OID2, ALG_NAME);\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/ExtensibleAlgorithmId.java","additions":69,"deletions":29,"binary":false,"changes":98,"status":"modified"}]}