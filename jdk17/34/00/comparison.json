{"files":[{"patch":"@@ -44,1 +44,1 @@\n-    private static final byte[] ICV1 = { \/\/ SEMI_BLKSIZE long\n+    static final byte[] ICV1 = { \/\/ SEMI_BLKSIZE long\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESKeyWrap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    private static final byte[] ICV2 = { \/\/ SEMI_BLKSIZE\/2 long\n+    static final byte[] ICV2 = { \/\/ SEMI_BLKSIZE\/2 long\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESKeyWrapPadded.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,0 +164,1 @@\n+    \/\/ AESKeyWrap for KW, AESKeyWrapPadded for KWP\n@@ -282,1 +283,1 @@\n-     * Returns the initialization vector (IV).\n+     * Returns the initialization vector (IV) in a new buffer.\n@@ -284,1 +285,2 @@\n-     * @return the user-specified iv or null if default iv is used.\n+     * @return the user-specified iv, or null if the underlying algorithm does\n+     * not use an IV, or if the IV has not yet been set.\n@@ -288,1 +290,2 @@\n-        return cipher.getIV().clone();\n+        byte[] iv = cipher.getIV();\n+        return (iv == null? null : iv.clone());\n@@ -626,1 +629,2 @@\n-     * @return AlgorithmParameters object containing IV.\n+     * @return AlgorithmParameters object containing IV, or null if this cipher\n+     * does not use any parameters.\n@@ -633,0 +637,4 @@\n+        if (iv == null) {\n+            iv = (cipher instanceof AESKeyWrap?\n+                    AESKeyWrap.ICV1 : AESKeyWrapPadded.ICV2);\n+        }\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/KeyWrapCipher.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8248268\n+ * @bug 8248268 8268621\n@@ -32,1 +32,0 @@\n-import java.util.Random;\n@@ -40,1 +39,4 @@\n-    private static final SecretKey KEY = new SecretKeySpec(new byte[16], \"AES\");;\n+    private static final byte[] DATA_128 =\n+            Arrays.copyOf(\"1234567890123456789012345678901234\".getBytes(), 128);\n+    private static final SecretKey KEY =\n+            new SecretKeySpec(DATA_128, 0, 16, \"AES\");\n@@ -136,0 +138,11 @@\n+        \/\/ get a fresh Cipher instance so we can test iv with pre-init state\n+        Cipher c2 = Cipher.getInstance(c.getAlgorithm(), c.getProvider());\n+        if (c2.getIV() != null) {\n+            throw new RuntimeException(\"Expects null iv\");\n+        }\n+        if (c2.getParameters() == null) {\n+            throw new RuntimeException(\"Expects non-null default parameters\");\n+        }\n+\n+        c2.init(Cipher.ENCRYPT_MODE, KEY);\n+        byte[] defIv2 = c2.getIV();\n@@ -138,1 +151,4 @@\n-        \/\/ try init w\/ an iv w\/ different length\n+        if (!Arrays.equals(defIv, defIv2)) {\n+            throw new RuntimeException(\"Failed default iv check\");\n+        }\n+        \/\/ try init w\/ an iv w\/ invalid length\n@@ -142,0 +158,1 @@\n+            throw new RuntimeException(\"Invalid iv accepted\");\n@@ -149,1 +166,5 @@\n-            throw new RuntimeException(\"Failed iv check\");\n+            throw new RuntimeException(\"Failed set iv check\");\n+        }\n+        byte[] newIv2 = c.getIV();\n+        if (newIv == newIv2) {\n+            throw new RuntimeException(\"Failed getIV copy check\");\n@@ -154,3 +175,1 @@\n-        \/\/ test all possible pad lengths, i.e. 1 - 16\n-        byte[] data = new byte[128];\n-        new Random().nextBytes(data);\n+        byte[] data = DATA_128;\n@@ -161,1 +180,3 @@\n-        for (int i = 0; i < MAX_KW_PKCS5PAD_LEN; i++) {\n+\n+        \/\/ test all possible pad lengths, i.e. 1 - 16\n+        for (int i = 1; i <= MAX_KW_PKCS5PAD_LEN; i++) {\n@@ -179,1 +200,3 @@\n-        for (int i = 0; i < MAX_KWP_PAD_LEN; i++) {\n+\n+        \/\/ test all possible pad lengths, i.e. 0 - 7\n+        for (int i = 0; i <= MAX_KWP_PAD_LEN; i++) {\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/KeyWrap\/TestGeneral.java","additions":33,"deletions":10,"binary":false,"changes":43,"status":"modified"}]}