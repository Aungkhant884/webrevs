{"files":[{"patch":"@@ -266,2 +266,2 @@\n-        recordCall(new HotSpotForeignCallTarget(config.handleDeoptStub), 5, true, null);\n-        code.emitInt(0x94000000);  \/\/ bl <imm26>\n+        recordCall(new HotSpotForeignCallTarget(config.handleDeoptStub), 4*4, true, null);\n+        emitCall(0xdeaddeaddeadL);\n@@ -288,1 +288,1 @@\n-        emitLoadLong(scratchRegister, addr);\n+        emitLoadPointer48(scratchRegister, addr);\n@@ -323,0 +323,24 @@\n+    private void emitLoadPointer32(Register ret, long addr) {\n+        long a = addr;\n+        long al = a;\n+        a >>= 16;\n+        long ah = a;\n+        a >>= 16;\n+        assert a == 0 : \"invalid pointer\" + Long.toHexString(addr);\n+        \/\/ Set upper 16 bits first. See MacroAssembler::patch_oop().\n+        emitMovz(ret, ((int)ah & 0xffff), 16);\n+        emitMovk(ret, ((int)al & 0xffff), 0);\n+    }\n+\n+    private void emitLoadPointer48(Register ret, long addr) {\n+        \/\/ 48-bit VA\n+        long a = addr;\n+        emitMovz(ret, ((int)a & 0xffff), 0);\n+        a >>= 16;\n+        emitMovk(ret, ((int)a & 0xffff), 16);\n+        a >>= 16;\n+        emitMovk(ret, ((int)a & 0xffff), 32);\n+        a >>= 16;\n+        assert a == 0 : \"invalid pointer\" + Long.toHexString(addr);\n+    }\n+\n@@ -329,3 +353,1 @@\n-            \/\/ Set upper 16 bits first. See MacroAssembler::patch_oop().\n-            emitMovz(ret, 0xdead, 16);\n-            emitMovk(ret, 0xdead, 0);\n+            emitLoadPointer32(ret, 0xdeaddeadL);\n@@ -333,4 +355,1 @@\n-            \/\/ 48-bit VA\n-            emitMovz(ret, 0xdead, 0);\n-            emitMovk(ret, 0xdead, 16);\n-            emitMovk(ret, 0xdead, 32);\n+            emitLoadPointer48(ret, 0xdeaddeaddeadL);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/aarch64\/AArch64TestAssembler.java","additions":29,"deletions":10,"binary":false,"changes":39,"status":"modified"}]}