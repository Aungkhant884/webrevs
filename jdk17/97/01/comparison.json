{"files":[{"patch":"@@ -332,0 +332,1 @@\n+    output.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    output.shouldNotHaveExitValue(0);\n@@ -79,1 +80,0 @@\n-      throw new Exception(\"Call of readFromNoaccessArea succeeded! This is wrong. Crash expected. Test failed.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReadFromNoaccessArea.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+      \/\/ expected to crash\n@@ -48,18 +49,0 @@\n-\n-      throw new Exception(\"Read of reserved\/uncommitted memory unexpectedly succeeded, expected crash!\");\n-    }\n-\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-          \"-Xbootclasspath\/a:.\",\n-          \"-XX:+UnlockDiagnosticVMOptions\",\n-          \"-XX:+WhiteBoxAPI\",\n-          \"-XX:-CreateCoredumpOnCrash\",\n-          \"-Xmx128m\",\n-          \"ReserveMemory\",\n-          \"test\");\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-    if (Platform.isWindows()) {\n-      output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n-    } else if (Platform.isOSX()) {\n-      output.shouldContain(\"SIGBUS\");\n@@ -67,1 +50,18 @@\n-      output.shouldContain(\"SIGSEGV\");\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-Xbootclasspath\/a:.\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            \"-XX:-CreateCoredumpOnCrash\",\n+            \"-Xmx128m\",\n+            \"ReserveMemory\",\n+            \"test\");\n+\n+      OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+      output.shouldNotHaveExitValue(0);\n+      if (Platform.isWindows()) {\n+        output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n+      } else if (Platform.isOSX()) {\n+        output.shouldContain(\"SIGBUS\");\n+      } else {\n+        output.shouldContain(\"SIGSEGV\");\n+      }\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReserveMemory.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}