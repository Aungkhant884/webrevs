{"files":[{"patch":"@@ -47,0 +47,1 @@\n+      \/\/ expected to crash\n@@ -48,19 +49,0 @@\n-\n-      throw new Exception(\"Read of reserved\/uncommitted memory unexpectedly succeeded, expected crash!\");\n-    }\n-\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-          \"-Xbootclasspath\/a:.\",\n-          \"-XX:+UnlockDiagnosticVMOptions\",\n-          \"-XX:+WhiteBoxAPI\",\n-          \"-XX:-CreateCoredumpOnCrash\",\n-          \"-Xmx128m\",\n-          \"ReserveMemory\",\n-          \"test\");\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-    output.shouldNotHaveExitValue(0);\n-    if (Platform.isWindows()) {\n-      output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n-    } else if (Platform.isOSX()) {\n-      output.shouldContain(\"SIGBUS\");\n@@ -68,1 +50,18 @@\n-      output.shouldContain(\"SIGSEGV\");\n+      ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-Xbootclasspath\/a:.\",\n+            \"-XX:+UnlockDiagnosticVMOptions\",\n+            \"-XX:+WhiteBoxAPI\",\n+            \"-XX:-CreateCoredumpOnCrash\",\n+            \"-Xmx128m\",\n+            \"ReserveMemory\",\n+            \"test\");\n+\n+      OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+      output.shouldNotHaveExitValue(0);\n+      if (Platform.isWindows()) {\n+        output.shouldContain(\"EXCEPTION_ACCESS_VIOLATION\");\n+      } else if (Platform.isOSX()) {\n+        output.shouldContain(\"SIGBUS\");\n+      } else {\n+        output.shouldContain(\"SIGSEGV\");\n+      }\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/ReserveMemory.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"}]}