{"files":[{"patch":"@@ -244,1 +244,1 @@\n-    static Object[][] fixedShapeXSegmentedCastSpeciesArgs(VectorShape srcShape) {\n+    static Object[][] fixedShapeXSegmentedCastSpeciesArgs(VectorShape srcShape, boolean legal) {\n@@ -246,1 +246,0 @@\n-\n@@ -249,1 +248,1 @@\n-\n+            List<VectorSpecies> sps = new ArrayList<VectorSpecies>();\n@@ -253,6 +252,4 @@\n-\n-                    List<VectorSpecies> legal = new ArrayList<VectorSpecies>();\n-                    List<VectorSpecies> illegal = new ArrayList<VectorSpecies>();\n-\n-                    if (dst.length() == src.length()) {\n-                        legal.add(dst);\n+                    if (legal) {\n+                        if (dst.length() == src.length()) {\n+                            sps.add(dst);\n+                        }\n@@ -260,1 +257,3 @@\n-                        illegal.add(dst);\n+                        if (dst.length() != src.length()) {\n+                            sps.add(dst);\n+                        }\n@@ -262,2 +261,0 @@\n-\n-                    args.add(new Object[]{src, legal, illegal});\n@@ -266,0 +263,1 @@\n+            args.add(new Object[]{src, sps});\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorConversionTest.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -60,2 +60,7 @@\n-    public Object[][] fixedShapeXSegmentedCastSpecies() {\n-        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE);\n+    public Object[][] fixedShapeXSegmentedLegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, true);\n+    }\n+\n+    @DataProvider\n+    public Object[][] fixedShapeXSegmentedIllegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, false);\n@@ -88,2 +93,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -95,1 +100,0 @@\n-\n@@ -100,0 +104,1 @@\n+    }\n@@ -101,0 +106,7 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void shuffleCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        int [] arr = new int[src.length()];\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = i;\n+        }\n+        VectorShuffle shuffle = VectorShuffle.fromArray(src, arr, 0);\n@@ -110,2 +122,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void maskCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void maskCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -114,1 +126,0 @@\n-\n@@ -119,0 +130,1 @@\n+    }\n@@ -120,0 +132,4 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void maskCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        long val = (1L << (src.length() & 63)) - 1L;\n+        VectorMask mask = VectorMask.fromLong(src, val);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Vector128ConversionTests.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -60,2 +60,7 @@\n-    public Object[][] fixedShapeXSegmentedCastSpecies() {\n-        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE);\n+    public Object[][] fixedShapeXSegmentedLegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, true);\n+    }\n+\n+    @DataProvider\n+    public Object[][] fixedShapeXSegmentedIllegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, false);\n@@ -88,2 +93,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -95,1 +100,0 @@\n-\n@@ -100,0 +104,1 @@\n+    }\n@@ -101,0 +106,7 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void shuffleCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        int [] arr = new int[src.length()];\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = i;\n+        }\n+        VectorShuffle shuffle = VectorShuffle.fromArray(src, arr, 0);\n@@ -110,2 +122,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void maskCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void maskCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -114,1 +126,0 @@\n-\n@@ -119,0 +130,1 @@\n+    }\n@@ -120,0 +132,4 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void maskCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        long val = (1L << (src.length() & 63)) - 1L;\n+        VectorMask mask = VectorMask.fromLong(src, val);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Vector256ConversionTests.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -60,2 +60,7 @@\n-    public Object[][] fixedShapeXSegmentedCastSpecies() {\n-        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE);\n+    public Object[][] fixedShapeXSegmentedLegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, true);\n+    }\n+\n+    @DataProvider\n+    public Object[][] fixedShapeXSegmentedIllegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, false);\n@@ -88,2 +93,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -100,0 +105,1 @@\n+    }\n@@ -101,0 +107,7 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void shuffleCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        int [] arr = new int[src.length()];\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = i;\n+        }\n+        VectorShuffle shuffle = VectorShuffle.fromArray(src, arr, 0);\n@@ -110,2 +123,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void maskCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void maskCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -114,1 +127,0 @@\n-\n@@ -119,0 +131,1 @@\n+    }\n@@ -120,0 +133,4 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void maskCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        long val = (1L << (src.length() & 63)) - 1L;\n+        VectorMask mask = VectorMask.fromLong(src, val);\n@@ -128,0 +145,1 @@\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Vector512ConversionTests.java","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -81,2 +81,7 @@\n-    public Object[][] fixedShapeXSegmentedCastSpecies() {\n-        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE);\n+    public Object[][] fixedShapeXSegmentedLegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, true);\n+    }\n+\n+    @DataProvider\n+    public Object[][] fixedShapeXSegmentedIllegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, false);\n@@ -109,2 +114,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -116,1 +121,0 @@\n-\n@@ -121,0 +125,1 @@\n+    }\n@@ -122,0 +127,7 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void shuffleCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        int [] arr = new int[src.length()];\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = i;\n+        }\n+        VectorShuffle shuffle = VectorShuffle.fromArray(src, arr, 0);\n@@ -131,2 +143,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void maskCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void maskCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -135,1 +147,0 @@\n-\n@@ -140,0 +151,1 @@\n+    }\n@@ -141,0 +153,4 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void maskCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        long val = (1L << (src.length() & 63)) - 1L;\n+        VectorMask mask = VectorMask.fromLong(src, val);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/Vector64ConversionTests.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -59,2 +59,7 @@\n-    public Object[][] fixedShapeXSegmentedCastSpecies() {\n-        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE);\n+    public Object[][] fixedShapeXSegmentedLegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, true);\n+    }\n+\n+    @DataProvider\n+    public Object[][] fixedShapeXSegmentedIllegalCastSpecies() {\n+        return fixedShapeXSegmentedCastSpeciesArgs(SHAPE, false);\n@@ -87,2 +92,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void shuffleCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -94,1 +99,0 @@\n-\n@@ -99,0 +103,1 @@\n+    }\n@@ -100,0 +105,7 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void shuffleCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        int [] arr = new int[src.length()];\n+        for(int i = 0; i < arr.length; i++) {\n+            arr[i] = i;\n+        }\n+        VectorShuffle shuffle = VectorShuffle.fromArray(src, arr, 0);\n@@ -109,2 +121,2 @@\n-    @Test(dataProvider = \"fixedShapeXSegmentedCastSpecies\")\n-    static void maskCast(VectorSpecies src, List<VectorSpecies> legal, List<VectorSpecies> illegal) {\n+    @Test(dataProvider = \"fixedShapeXSegmentedLegalCastSpecies\")\n+    static void maskCast(VectorSpecies src, List<VectorSpecies> legal) {\n@@ -113,1 +125,0 @@\n-\n@@ -118,0 +129,1 @@\n+    }\n@@ -119,0 +131,4 @@\n+    @Test(dataProvider = \"fixedShapeXSegmentedIllegalCastSpecies\")\n+    static void maskCastNeg(VectorSpecies src, List<VectorSpecies> illegal) {\n+        long val = (1L << (src.length() & 63)) - 1L;\n+        VectorMask mask = VectorMask.fromLong(src, val);\n","filename":"test\/jdk\/jdk\/incubator\/vector\/VectorMaxConversionTests.java","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"}]}