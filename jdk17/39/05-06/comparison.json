{"files":[{"patch":"@@ -253,8 +253,2 @@\n-                    if (legal) {\n-                        if (dst.length() == src.length()) {\n-                            args.add(new Object[]{src, dst});\n-                        }\n-                    } else {\n-                        if (dst.length() != src.length()) {\n-                            args.add(new Object[]{src, dst});\n-                        }\n+                    if (legal == (dst.length() == src.length())) {\n+                        args.add(new Object[]{src, dst});\n@@ -524,7 +518,5 @@\n-        for(int i = 0; i < INVOC_COUNT; i++) {\n-            VectorMask<E> mask = VectorMask.fromLong(src, i);\n-            try {\n-                mask.cast(dst);\n-                Assert.fail();\n-            } catch (IllegalArgumentException e) {\n-            }\n+        VectorMask<E> mask = VectorMask.fromLong(src, -1);\n+        try {\n+            mask.cast(dst);\n+            Assert.fail();\n+        } catch (IllegalArgumentException e) {\n@@ -547,1 +539,1 @@\n-        int [] arr = new int[src.length()*INVOC_COUNT];\n+        int [] arr = new int[src.length()];\n@@ -551,7 +543,5 @@\n-        for(int i = 0; i < INVOC_COUNT; i++) {\n-            VectorShuffle<E> shuffle = VectorShuffle.fromArray(src, arr, i);\n-            try {\n-                shuffle.cast(dst);\n-                Assert.fail();\n-            } catch (IllegalArgumentException e) {\n-            }\n+        VectorShuffle<E> shuffle = VectorShuffle.fromArray(src, arr, 0);\n+        try {\n+            shuffle.cast(dst);\n+            Assert.fail();\n+        } catch (IllegalArgumentException e) {\n","filename":"test\/jdk\/jdk\/incubator\/vector\/AbstractVectorConversionTest.java","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"}]}