{"files":[{"patch":"@@ -1216,2 +1216,2 @@\n-  \/\/ For the main loop, the opaque node is the second input to zer_cmp, for the post loop it's the first input node\n-  Node* zer_opaq = zer_cmp->in(is_main_loop ? 2 : 1);\n+  \/\/ For the main loop, the opaque node might at any input to zer_cmp, for the post loop it's the first input node\n+  Node* zer_opaq = is_main_loop ? get_opaque_from_cmp(zer_cmp) : zer_cmp->in(1);\n@@ -3147,1 +3147,2 @@\n-  if (pre_cmp->in(2)->Opcode() != Op_Opaque1) {\n+  Node* pre_cmp_opaq = PhaseIdealLoop::get_opaque_from_cmp(pre_cmp);\n+  if (pre_cmp_opaq != NULL) {\n@@ -3172,1 +3173,1 @@\n-  phase->_igvn.replace_input_of(pre_cmp, 2, pre_cmp->in(2)->in(2));\n+  phase->_igvn.replace_input_of(pre_cmp, pre_cmp->in(1) == pre_cmp_opaq ? 1 : 2, pre_cmp_opaq->in(2));\n@@ -3175,2 +3176,3 @@\n-  assert(main_cmp->in(2)->Opcode() == Op_Opaque1, \"main loop has no opaque node?\");\n-  phase->_igvn.replace_input_of(main_cmp, 2, main_cmp->in(2)->in(1));\n+  Node* opaq = PhaseIdealLoop::get_opaque_from_cmp(main_cmp);\n+  assert(opaq != NULL, \"main loop has no opaque node?\");\n+  phase->_igvn.replace_input_of(main_cmp, main_cmp->in(1) == opaq ? 1 : 2, opaq->in(1));\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}