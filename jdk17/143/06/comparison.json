{"files":[{"patch":"@@ -42,0 +42,1 @@\n+#include \"runtime\/arguments.hpp\"\n@@ -7003,1 +7004,4 @@\n-    libsvml = os::dll_load(JNI_LIB_PREFIX \"svml\" JNI_LIB_SUFFIX, ebuf, sizeof ebuf);\n+    char dll_name[JVM_MAXPATHLEN];\n+    if (os::dll_locate_lib(dll_name, sizeof(dll_name), Arguments::get_dll_dir(), \"svml\")) {\n+      libsvml = os::dll_load(dll_name, ebuf, sizeof ebuf);\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8269335\n+ * @summary Tests SVML shared library is loaded successfully.\n+ * @modules jdk.incubator.vector\n+ * @requires vm.compiler2.enabled\n+ * @requires os.arch == \"x86_64\" | os.arch == \"amd64\"\n+ * @requires os.family == \"linux\" | os.family == \"windows\"\n+ * @library \/test\/lib\n+ * @run main LoadSvmlTest\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import jdk.incubator.vector.FloatVector;\n+import jdk.incubator.vector.VectorOperators;\n+import jdk.incubator.vector.Vector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\n+public class LoadSvmlTest {\n+\n+    private static class VectorTest {\n+\n+        static final VectorSpecies<Float> SPECIES = FloatVector.SPECIES_PREFERRED;\n+\n+        public static void main(String[] args) throws Exception {\n+            float a[] = new float [1024];\n+            float r[] = new float [1024];\n+\n+            for (int i = 0; i < a.length; i += SPECIES.length()) {\n+                FloatVector av = FloatVector.fromArray(SPECIES, a, i);\n+                av.lanewise(VectorOperators.SINH).intoArray(r, i);\n+            }\n+        }\n+    }\n+\n+    public static void main(String... args) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+            \"-Xmn8m\", \"-Xlog:library=info\",\n+            \"--add-modules=jdk.incubator.vector\",\n+            \"LoadSvmlTest$VectorTest\");\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        output.shouldMatch(\"Loaded library .*svml\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/incubator\/vector\/LoadSvmlTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}