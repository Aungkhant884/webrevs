{"files":[{"patch":"@@ -0,0 +1,12 @@\n+package com.sun.javatest;\n+\n+import com.sun.javatest.interview.BasicInterviewParameters;\n+\n+public class CrashOnlyHarness extends Harness{\n+    @Override\n+    protected TestRunner prepareTestRunner(Parameters p) throws Fault, TestSuite.Fault{\n+        CrashOnlyTestRunner r = (CrashOnlyTestRunner)super.prepareTestRunner(p);\n+        r.setCrashOnly();\n+        return r;\n+    }\n+}\n","filename":"src\/com\/sun\/javatest\/CrashOnlyHarness.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+package com.sun.javatest;\n+\n+public interface CrashOnlyParameters extends Parameters {\n+\n+}\n","filename":"src\/com\/sun\/javatest\/CrashOnlyParameters.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+package com.sun.javatest;\n+\n+import com.sun.javatest.util.BackupPolicy;\n+import com.sun.javatest.util.Crash;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n+public class CrashOnlyTestRunner extends DefaultTestRunner{\n+\n+    private boolean crashOnly = false;\n+\n+    public void setCrashOnly(){\n+        crashOnly = true;\n+    }\n+    @Override\n+    protected TestResult runTestGiveResult(TestDescription td) {\n+        TestResult result = super.runTestGiveResult(td);\n+        if(this.crashOnly && result.getStatus().getType() == Status.FAILED && ! this.didCrash(td)){\n+            result = new com.sun.javatest.TestResult(td, new Status(Status.PASSED, \"only a regular fail\"));\n+        }\n+        return result;\n+    }\n+\n+    \/**\n+     * checks for the occurrence of hs_err_pid file that suggest that crash happened during execution\n+     **\/\n+    private boolean didCrash(TestDescription td){\n+        return !getCrashes(td).isEmpty();\n+    }\n+\n+    private List<Crash> getCrashes(TestDescription td){\n+        Pattern pattern = Pattern.compile(\"^hs_err_pid(\\\\d+)\\\\.log\");\n+        List<String> hs_errs = Arrays.stream(td.getDir().list()).filter(pattern.asPredicate()).toList();\n+        List<Crash> crashes = new ArrayList<>();\n+        for(String hs_err : hs_errs){\n+            String pid = pattern.matcher(hs_err).group(1);\n+            crashes.add(new Crash(td, hs_err, pid));\n+        }\n+        return crashes;\n+    }\n+}\n","filename":"src\/com\/sun\/javatest\/CrashOnlyTestRunner.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -160,1 +160,1 @@\n-    protected boolean runTest(TestDescription td) {\n+    protected TestResult runTestGiveResult(TestDescription td){\n@@ -217,1 +217,5 @@\n-        return result.getStatus().getType() == Status.PASSED;\n+        return result;\n+    }\n+\n+    protected boolean runTest(TestDescription td) {\n+        return runTestGiveResult(td).getStatus().getType() == Status.PASSED;\n","filename":"src\/com\/sun\/javatest\/DefaultTestRunner.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -688,4 +688,1 @@\n-    private boolean runTests(Parameters p, boolean zeroTestsOK)\n-            throws Fault, TestSuite.Fault {\n-\n-        boolean ok = true; \/\/ default return\/finished notification value\n+    protected TestRunner prepareTestRunner(Parameters p) throws Fault, TestSuite.Fault{\n@@ -775,0 +772,2 @@\n+        return r;\n+    }\n@@ -779,0 +778,1 @@\n+        boolean ok = true; \/\/ default return\/finished notification value\n","filename":"src\/com\/sun\/javatest\/Harness.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,29 @@\n+package com.sun.javatest.util;\n+\n+import com.sun.javatest.TestDescription;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ *  Basic class for information about a crash of jvm.\n+ *\/\n+public class Crash {\n+    private String pid;\n+    private File file;\n+\n+\n+    public Crash(TestDescription td, String hs_err, String pid) {\n+        this.pid = pid;\n+        this.file = new File(td.getDir(), hs_err);\n+    }\n+\n+    public String getPid() {\n+        return pid;\n+    }\n+\n+    public File getFile() {\n+        return file;\n+    }\n+}\n","filename":"src\/com\/sun\/javatest\/util\/Crash.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"}]}