{"files":[{"patch":"@@ -34,2 +34,2 @@\n-\tpublic void testImpl() throws Exception {\n-\t\tJTFrame mainFrame = new JTFrame(true);\n+    public void testImpl() throws Exception {\n+        JTFrame mainFrame = new JTFrame(true);\n@@ -37,2 +37,2 @@\n-\t\tmainFrame.openDefaultTestSuite();\n-\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n@@ -40,3 +40,3 @@\n-\t\tif (mainFrame.getConfiguration().create(false).isFullConfiguration()) {\n-\t\t\terrors.add(\"Newly created configuration is full while unexpected\");\n-\t\t}\n+        if (mainFrame.getConfiguration().create(false).isFullConfiguration()) {\n+            errors.add(\"Newly created configuration is full while unexpected\");\n+        }\n@@ -44,1 +44,1 @@\n-\t}\n+    }\n@@ -46,4 +46,4 @@\n-\t\/** TestCase Description *\/\n-\tpublic String getDescription() {\n-\t\treturn \"Verify that menu item \\\"Configure-> New configuration\\\" will bring up an empty configuration editor.\";\n-\t}\n+    \/** TestCase Description *\/\n+    public String getDescription() {\n+        return \"Verify that menu item \\\"Configure-> New configuration\\\" will bring up an empty configuration editor.\";\n+    }\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_New2.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -42,20 +42,20 @@\n-\tpublic static void main(String[] args) {\n-\t\tJUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Test_Suite1\");\n-\t}\n-\n-\t@Test\n-\tpublic void testOpenTestSuite1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n-\n-\t\t\/** Open existing test suite *\/\n-\t\topenTestSuite(mainFrame);\n-\t\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n-\t\tJTabbedPaneOperator tab = new JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n-\t\tif (!tab.isVisible()) {\n-\t\t\tfail(\"Error while opening an existing test suite.\");\n-\t\t}\n-\t}\n-\n-\t\/** TestCase Description *\/\n-\tpublic String getDescription() {\n-\t\treturn \"This test case verifies that opening an existing test suite would correctly load tests.\";\n-\t}\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Test_Suite1\");\n+    }\n+\n+    @Test\n+    public void testOpenTestSuite1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+        \/** Open existing test suite *\/\n+        openTestSuite(mainFrame);\n+        waitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+        JTabbedPaneOperator tab = new JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n+        if (!tab.isVisible()) {\n+            fail(\"Error while opening an existing test suite.\");\n+        }\n+    }\n+\n+    \/** TestCase Description *\/\n+    public String getDescription() {\n+        return \"This test case verifies that opening an existing test suite would correctly load tests.\";\n+    }\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Open_Test_Suite1.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -48,38 +48,38 @@\n-\tpublic static void main(String[] args) {\n-\t\tJUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Work_Dir1\");\n-\t}\n-\n-\t@Test\n-\tpublic void testOpenTestSuite1()\n-\t\t\tthrows ClassNotFoundException, InvocationTargetException, NoSuchMethodException, FileNotFoundException {\n-\n-\t\t\/** Opening work directory *\/\n-\t\tMenu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n-\n-\t\tJDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n-\t\tString dirname = \"demowd\";\n-\t\tnew JTextFieldOperator(openDialog, \"\").enterText(dirname);\n-\n-\t\tif (openDialog.isVisible()) {\n-\t\t\tfail(\"Failure because the open work directory dialog window did not close.\");\n-\t\t}\n-\n-\t\t\/** Finding the text field which displays the current work directory name *\/\n-\t\tComponentChooser ncc = new NameComponentChooser(\"bcc.WorkDir\");\n-\t\tJTextFieldOperator work_directory_dialog = new JTextFieldOperator(mainFrame, ncc);\n-\n-\t\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n-\t\tnew JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n-\n-\t\t\/**\n-\t\t * verifying that name of our work directory matches with the one written in the\n-\t\t * text field\n-\t\t *\/\n-\t\tassertEquals(\"opening an existing work directory should correctly load tests.\" + dirname + \".\",\n-\t\t\t\twork_directory_dialog.getText(), dirname);\n-\t}\n-\n-\t\/** TestCase Description *\/\n-\tpublic String getDescription() {\n-\t\treturn \"This test case verifies that opening an existing work directory would correctly load tests.\";\n-\t}\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Work_Dir1\");\n+    }\n+\n+    @Test\n+    public void testOpenTestSuite1()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, FileNotFoundException {\n+\n+        \/** Opening work directory *\/\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        String dirname = \"demowd\";\n+        new JTextFieldOperator(openDialog, \"\").enterText(dirname);\n+\n+        if (openDialog.isVisible()) {\n+            fail(\"Failure because the open work directory dialog window did not close.\");\n+        }\n+\n+        \/** Finding the text field which displays the current work directory name *\/\n+        ComponentChooser ncc = new NameComponentChooser(\"bcc.WorkDir\");\n+        JTextFieldOperator work_directory_dialog = new JTextFieldOperator(mainFrame, ncc);\n+\n+        waitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+        new JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n+\n+        \/**\n+         * verifying that name of our work directory matches with the one written in the\n+         * text field\n+         *\/\n+        assertEquals(\"opening an existing work directory should correctly load tests.\" + dirname + \".\",\n+                work_directory_dialog.getText(), dirname);\n+    }\n+\n+    \/** TestCase Description *\/\n+    public String getDescription() {\n+        return \"This test case verifies that opening an existing work directory would correctly load tests.\";\n+    }\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Open_Work_Dir1.java","additions":38,"deletions":38,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n-\tpublic static void main(String[] args) {\n-\t\tJUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Work_Dir2\");\n-\t}\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Open_Work_Dir2\");\n+    }\n@@ -47,2 +47,2 @@\n-\t@Test\n-\tpublic void testOpenTestSuite1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+    @Test\n+    public void testOpenTestSuite1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n@@ -50,2 +50,2 @@\n-\t\t\/** navigating to a non work directory *\/\n-\t\tMenu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+        \/** navigating to a non work directory *\/\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n@@ -53,1 +53,1 @@\n-\t\tJDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n@@ -55,2 +55,2 @@\n-\t\t\/** Trying to open a non work directory *\/\n-\t\tnew JTextFieldOperator(openDialog, \"\").enterText(\"classes\");\n+        \/** Trying to open a non work directory *\/\n+        new JTextFieldOperator(openDialog, \"\").enterText(\"classes\");\n@@ -58,6 +58,6 @@\n-\t\t\/** Checking if work directory opens or not *\/\n-\t\tif (!openDialog.isVisible()) {\n-\t\t\tfail(\"Failure... because the work directory dialog window closed after selecting non-work directory.\");\n-\t\t} else {\n-\t\t\topenDialog.close();\n-\t\t}\n+        \/** Checking if work directory opens or not *\/\n+        if (!openDialog.isVisible()) {\n+            fail(\"Failure... because the work directory dialog window closed after selecting non-work directory.\");\n+        } else {\n+            openDialog.close();\n+        }\n@@ -65,1 +65,1 @@\n-\t}\n+    }\n@@ -67,4 +67,4 @@\n-\t\/** TestCase Description *\/\n-\tpublic String getDescription() {\n-\t\treturn \"This test case verifies that opening a non-work directory should navigate through directory.\";\n-\t}\n+    \/** TestCase Description *\/\n+    public String getDescription() {\n+        return \"This test case verifies that opening a non-work directory should navigate through directory.\";\n+    }\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Open_Work_Dir2.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}