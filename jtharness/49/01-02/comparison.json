{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import com.sun.javatest.util.Crash;\n@@ -37,0 +38,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -232,2 +235,12 @@\n-        Pattern pattern = Pattern.compile(\"^hs_err_.*\");\n-        return Arrays.stream(td.getDir().list()).anyMatch(pattern.asPredicate());\n+        return !getCrashes(td).isEmpty();\n+    }\n+\n+    private List<Crash> getCrashes(TestDescription td){\n+        Pattern pattern = Pattern.compile(\"^hs_err_pid(\\\\d+)\\\\.log\");\n+        List<String> hs_errs = Arrays.stream(td.getDir().list()).filter(pattern.asPredicate()).toList();\n+        List<Crash> crashes = new ArrayList<>();\n+        for(String hs_err : hs_errs){\n+            String pid = pattern.matcher(hs_err).group(1);\n+            crashes.add(new Crash(td, hs_err, pid));\n+        }\n+        return crashes;\n","filename":"src\/com\/sun\/javatest\/DefaultTestRunner.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.lang.reflect.Parameter;\n","filename":"src\/com\/sun\/javatest\/TestRunner.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+package com.sun.javatest.util;\n+\n+import com.sun.javatest.TestDescription;\n+\n+import java.io.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ *  Basic class for information about a crash of jvm.\n+ *\/\n+public class Crash {\n+    private String pid;\n+    private List<String> lines;\n+\n+\n+    public Crash(TestDescription td, String hs_err, String pid) {\n+        File hs_err_File = new File(td.getDir(), hs_err);\n+        this.pid = pid;\n+        List <String> lines = new ArrayList<>();\n+        try (BufferedReader reader = new BufferedReader(new FileReader(hs_err_File))){\n+            String line;\n+            \/\/ Read all lines from the file\n+            while ((line = reader.readLine()) != null) {\n+                lines.add(line);\n+            }\n+        } catch (\n+                FileNotFoundException e) {\n+            throw new RuntimeException(e);\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+        this.lines = lines;\n+    }\n+\n+    public String getPid() {\n+        return pid;\n+    }\n+\n+    public List<String> getLines() {\n+        return lines;\n+    }\n+}\n","filename":"src\/com\/sun\/javatest\/util\/Crash.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}