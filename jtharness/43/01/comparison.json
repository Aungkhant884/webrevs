{"files":[{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+\/**\n+ * This test case verifies that selecting clear the response to the current question button will clear the answer to that question.\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Markers10 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+\n+        cd.getBookmarks_EnableBookmarks().push();\n+        cd.selectQuestion(2);\n+        JTextFieldOperator op = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        op.typeText(\"some description that must be cleared\");\n+        cd.setBookmarkedByMenu(2);\n+        cd.clearByMenu(2);\n+\n+        op = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        if (!op.getText().equals(\"\")) {\n+            errors.add(\"Text wasn't cleared up: '\" + op.getText() + \"' while expected ''\");\n+        }\n+        warnings.add(\n+                \"Pre-defined warning: Mark sometimes desapperas while clearing by menu - bookmark saves current state of answer; First question is 'Configuratoin name' and it can't be cleared; a new question is generated while clearing up\");\n+    }\n+}\n+\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Markers\/Markers10.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+\/**\n+ * This test case verifies that answer for current question could be cleared from a popup menu.\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Markers11 extends Markers {\n+    public static void main(String args[]) {\n+        JUnitCore.main(\"jthtest.gui.Markers.Markers11\");\n+    }\n+\n+    @Test\n+    public void testMarkers11() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        startJavatestNewDesktop();\n+\n+        JFrameOperator mainFrame = findMainFrame();\n+\n+        closeQS(mainFrame);\n+        openTestSuite(mainFrame);\n+        createWorkDirInTemp(mainFrame);\n+        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        Config_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\n+        openConfigDialogByKey(mainFrame);\n+        JDialogOperator config = findConfigEditor(mainFrame);\n+\n+        pushEnableBookmarks(config);\n+\n+        selectQuestion(config, 2);\n+        new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\"))\n+                .typeText(\"some description that must be cleared\");\n+        setBookmarkedByMenu(config, 2);\n+        clearByPopup(config, 2);\n+\n+        if (!new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText().equals(\"\"))\n+            throw new JemmyException(\"Text wasn't cleared up: '\"\n+                    + new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText()\n+                    + \"' while expected ''\");\n+        System.out.println(\n+                \"Pre-defined warning: Mark sometimes desapperas while clearing by menu - bookmark saves current state of answer; First question is 'Configuratoin name' and it can't be cleared; a new question is generated while clearing up\");\n+    }\n+}\n+\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Markers\/Markers11.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+\/**\n+ * This test case verifies that not responding to the cleared response of the current question will display an invalid answer.\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Markers12 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        config.getBookmarks_EnableBookmarks().push();\n+        config.setBookmarkedByMenu(4);\n+        config.clearByMenu(4);\n+        config.pushNextConfigEditor();\n+\n+        if (!new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"qu.vmsg\")).getText()\n+                .equals(\"Invalid response\")) {\n+            errors.add(\"Error message wasn't found: '\"\n+                    + new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"qu.vmsg\")).getText()\n+                    + \"' while expected 'Invalud response'\");\n+        }\n+\n+        warnings.add(\"Pre-defined warning: Some questions can be optional and some can have default value\");\n+    }\n+}\n+\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Markers\/Markers12.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+\/**\n+ * This test case verifies that the Show only Marked Questions will create a sequences of \"...\" for marked questions.\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Markers13 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[] { 2, 3, 4, 7, 8, 10 };\n+        String[] names = config.getElementsNames(indexes);\n+\n+        config.getBookmarks_EnableBookmarks().push();\n+        config.setBookmarkedByMenu(indexes);\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+\n+        indexes = config.checkVisibility(names);\n+        config.checkHiddenGroups(indexes, names);\n+    }\n+}\n+\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Markers\/Markers13.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+\/**\n+ * This test case verifies that marked question could be unmarked from a popup menu.\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Markers9 extends Test {\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+\n+        cd.getBookmarks_EnableBookmarks().push();\n+        Icon emptyIcon = cd.getIcon(1);\n+        cd.setBookmarkedByMenu(1);\n+        if (cd.getIcon(1) == emptyIcon)\n+            errors.add(\"Bookmark Icon was not found after marking\");\n+\n+        cd.unsetBookmarkedByPopup(1);\n+        if (cd.getIcon(1) != emptyIcon)\n+            errors.add(\"Empty Icon was not found after unmarking\");\n+    }\n+}\n+\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Markers\/Markers9.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}