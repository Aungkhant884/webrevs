{"files":[{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import javax.swing.JTextField;\n+\n+import jthtest.Tools;\n+import jthtest.Config_Edit.Config_Edit;\n+\n+public class Test_Config_Edit3 extends Config_Edit {\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Config_Edit3\");\n+    }\n+\n+   \/**\n+     * This test case Verify that \\\"Done\\\" button in an empty Configuration Editor\n+     * will bring up a Save Configuration file browser.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+    @Test\n+    public void testConfig_Edit7() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+        startJavatestNewDesktop();\n+        JFrameOperator mainFrame = findMainFrame();\n+        openTestSuite(mainFrame);\n+        createWorkDirInTemp(mainFrame);\n+\n+        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+        openConfigCreation(mainFrame);\n+        JDialogOperator config = findConfigEditor(mainFrame);\n+\n+        pushNextConfigEditor(config);\n+        new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some_jti\");\n+\n+        pushDoneConfigEditor(config);\n+        saveConfig();\n+        openConfigDialogByKey(mainFrame);\n+\n+        if (!findConfigEditor(mainFrame).getTitle().contains(\"some_jti\")) {\n+            File f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+            f.delete();\n+            throw new JemmyException(\"Wrong jti filename in config editor: \" + findConfigEditor(mainFrame).getTitle());\n+        }\n+        File f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+        f.delete();\n+    }\n+\n+    \/**\n+     * This method clicks on OK button on Save Configuration file browser and save\n+     * the configuration (.jti) file.\n+     *\n+     * @throws IOException\n+     *\n+     *\/\n+    @SuppressWarnings(\"deprecation\")\n+    private void saveConfig() {\n+        File f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+        if (f.exists())\n+            f.delete();\n+        JDialogOperator save = new JDialogOperator(getExecResource(\"ce.okToClose.title\"));\n+        new JButtonOperator(save, \"Ok\").push();\n+        save = new JDialogOperator(getExecResource(\"ce.save.title\"));\n+        JTextFieldOperator tf;\n+\n+        tf = new JTextFieldOperator(\n+                (JTextField) Tools.getComponent(save, new String[] { \"Folder name:\", \"File name:\" }));\n+        tf.enterText(\"jt_gui_test_temp_some_jti-this_file_will_be_deleted\");\n+    }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Edit3.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.fail;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Config_Load.Config_Load;\n+\n+public class Test_Config_Load1 extends ConfigTools {\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Config_Load.Config_Load1\");\n+    }\n+\n+   \/**\n+     * This test is to verify that Load button under configuration will bring up a\n+     * file browser to select a jti file to be used.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+    @Test\n+    public void testConfig_Load1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+        startJavatestNewDesktop();\n+        JFrameOperator mainFrame = findMainFrame();\n+        closeQS(mainFrame);\n+\n+        openTestSuite(mainFrame);\n+        createWorkDirInTemp(mainFrame);\n+\n+        if (!(openLoadConfigDialogByMenu(mainFrame).isVisible())) {\n+            fail(\"Load button under configuration does not bring up a file browser to select a jti file to be used\");\n+        }\n+\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Load1.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+\n+public class Test_Config_New1 extends Test {\n+   \/**\n+     * This test is to verify that menu item \\\"Configure-> New configuration\\\" in an\n+     * existing directory and configuration will reset it to an empty state.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+   public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+        JTFrame frame = JTFrame.startJTWithDefaultWorkDirectory();\n+        ConfigDialog cd = frame.getConfiguration().openByKey();\n+        boolean firstly = cd.isFullConfiguration();\n+        cd.closeByMenu();\n+\n+        cd = frame.getConfiguration().create(true);\n+        boolean secondly = cd.isFullConfiguration();\n+\n+        if (secondly) {\n+            errors.add(\"Configuration is full after creation\");\n+        }\n+        if (!firstly) {\n+            errors.add(\"Warning: configuration was not full before creation\");\n+        }\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_New1.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Config_SaveEdit.Config_SaveEdit;\n+\n+public class Test_Config_Save2 extends ConfigTools {\n+    public static void main(String args[]) {\n+        JUnitCore.main(\"jthtest.gui.Config_SaveEdit.Test_Config_SaveEdit2\");\n+    }\n+   \/**\n+     * Verify that \"File->Save\" menu item in Configuration Editor will save the\n+     * current configuration in a new file if there is no file name.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\n+     *\/\n+    @Test\n+    public void testConfig_SaveEdit2()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+        File f = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+        if (f.exists())\n+            f.delete();\n+        f = null;\n+        startJavatestNewDesktop();\n+        JFrameOperator mainFrame = findMainFrame();\n+        closeQS(mainFrame);\n+\n+        openTestSuite(mainFrame);\n+        createWorkDirInTemp(mainFrame);\n+        openConfigCreation(mainFrame);\n+        JDialogOperator config = findConfigEditor(mainFrame);\n+        saveConfig(config, \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted\");\n+\n+        f = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+        int t = 0;\n+        while (t < 1000 && !f.exists()) {\n+            f = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+            t += 100;\n+            Thread.sleep(100);\n+        }\n+        if (!f.exists())\n+            throw new JemmyException(\"File was not created\");\n+        f.delete();\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Save2.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"}]}