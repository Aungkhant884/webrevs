{"files":[{"patch":"@@ -0,0 +1,73 @@\n+#\n+# $Id$\n+#\n+# Copyright (c) 2006, 2011, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+build.version = 4.2.1\n+build.milestone = dev\n+build.number = b00\n+\n+build.classes = ${BUILD_DIR}\/classes\n+build.junit.classes = ${BUILD_DIR}\/classes.junit\n+build.dir = build\n+build.tmp = ${BUILD_DIR}\/tmp\n+legal.dir = legal\n+src.dir = src\n+doc.dir = doc\n+exam.dir = examples\n+javadoc.dir = ${BUILD_DIR}\/javadoc\n+\n+javadoc.additionalparam =\n+javadoc.author = false\n+javadoc.encoding = iso-8859-1\n+javadoc.noindex = false\n+javadoc.nonavbar = false\n+javadoc.notree = false\n+javadoc.private = false\n+javadoc.splitindex = true\n+javadoc.use = true\n+javadoc.version = false\n+javadoc.windowtitle = JT Harness Version 4.2.1\n+javadoc.footer = Copyright 1996-2009 Sun Microsystems, Inc. All Rights Reserved.\n+\n+run.class = com.sun.javatest.tool.Main\n+jdk14.classpath = ${jhalljar}:${servletjar}\n+jdk11.classpath = ${jcommjar}\n+javadoc.classpath = ${jdk11.classpath}:${jdk14.classpath}\n+run.classpath = ${build.classes}:${jhjar}\n+\n+javahelp.missing = Please specify a 'jhall.jar' location in the 'local.properties' file.\n+jcomm.missing = Please specify the location of the serial communcations API implementation jar (comm.jar) in the 'local.properties' file.\n+servlet.missing = Please specify a 'servlet.jar' location in the 'local.properties' file.\n+junit.missing = Please specify a 'junit.jar' location in the 'local.properties' file.\n+jemmy.missing = Please specify a 'jemmy.jar' location in the 'local.properties' file.\n+\n+run.class.missing = Must select one file in the IDE or set run.class\n+\n+javatest.splash = spl_42\n+\n+test.i18n.dynamic.class = com.sun.jct.utils.i18ncheck.I18NDynamicMain\n+test.i18n.static.class = com.sun.jct.utils.i18ncheck.I18NStaticMain\n+test.dir = tests\n","filename":"jt_gui_tests\/src\/build.properties","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,161 @@\n+<?xml version='1.0' encoding='ISO-8859-1' ?>\n+<!--\n+  $Id$\n+\n+  Copyright 1996-2009 Sun Microsystems, Inc.  All Rights Reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+ This code is free software; you can redistribute it and\/or modify it\n+ under the terms of the GNU General Public License version 2 only, as\n+ published by the Free Software Foundation.  Sun designates this\n+ particular file as subject to the \"Classpath\" exception as provided\n+ by Sun in the LICENSE file that accompanied this code.\n+\n+ This code is distributed in the hope that it will be useful, but WITHOUT\n+ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ version 2 for more details (a copy is included in the LICENSE file that\n+ accompanied this code).\n+\n+ You should have received a copy of the GNU General Public License version\n+ 2 along with this work; if not, write to the Free Software Foundation,\n+ Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+ Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,\n+ CA 95054 USA or visit www.sun.com if you need additional information or\n+ have any questions.\n+-->\n+<project name=\"jtharness\" default=\"test-gui\" basedir=\"..\">\n+\n+    <property file=\"src\/local.properties\"\/>\n+    <property file=\"src\/build.properties\"\/>\n+    \n+    <property environment=\"env\"\/>\n+    \n+    <patternset id=\"helpset\">\n+        <include name=\"**\/*.hs\"\/>        \n+        <include name=\"**\/default\/**\"\/>\n+        <include name=\"**\/images\/**\"\/>\n+        <exclude name=\"com\/sun\/javatest\/tool\/images\/spl_*.gif\"\/>\n+    <\/patternset>\n+    \n+    <presetdef name=\"buildinfo\">\n+        <echo file=\"${build.classes}\/buildInfo.txt\"># Build info\n+            date=${build.date}\n+            version=${build.version}\n+            milestone=${build.milestone}\n+            build=${build.number}\n+            java=Java(TM) 2 SDK, Version ${java.version}\n+        <\/echo>\n+    <\/presetdef>\n+    \n+    <!-- ********** JT Harness *********************************************** -->\n+\n+    <property name=\"src.javatest.help\" location=\"${src.dir}\/com\/sun\/javatest\/help\"\/>\n+    <property name=\"src.javatestAgent.help\" location=\"${src.dir}\/com\/sun\/javatest\/agent\/help\"\/>\n+    <!--\n+    <property name=\"src.javatest.help\" location=\"${doc.dir}\/javatest\/help\"\/>\n+    <property name=\"src.javatestAgent.help\" location=\"${doc.dir}\/javatest\/agent\/help\"\/>\n+    -->\n+    <property name=\"build.javatest.help\" location=\"${build.classes}\/com\/sun\/javatest\/help\"\/>\n+    <property name=\"build.javatestAgent.help\" location=\"${build.classes}\/com\/sun\/javatest\/agent\/help\"\/>\n+    \n+    <patternset id=\"interview.resources\">\n+        <include name=\"com\/sun\/interview\/**\/*.properties\"\/>\n+        <include name=\"com\/sun\/interview\/wizard\/*.gif\"\/>\n+    <\/patternset>\n+    \n+    <patternset id=\"javatest.resources\">\n+        <include name=\"com\/sun\/javatest\/**\/*.properties\"\/>\n+        <include name=\"com\/sun\/javatest\/**\/*.xsd\"\/>\n+        <include name=\"com\/sun\/javatest\/**\/*.gif\"\/>\n+        <include name=\"com\/sun\/javatest\/**\/*.css\"\/>\n+        <exclude name=\"com\/sun\/javatest\/tool\/images\/spl_*.gif\"\/>\n+    <\/patternset>\n+    \n+    <patternset id=\"javatest.junit.resources\">\n+        <include name=\"com\/sun\/javatest\/junit\/**\/*.properties\"\/>\n+    <\/patternset>\n+    \n+    <patternset id=\"javatest.packages\">\n+        <include name=\"com\/sun\/interview\/**\"\/>\n+        <include name=\"com\/sun\/javatest\/**\"\/>\n+        <exclude name=\"com\/sun\/javatest\/junit\/**\"\/>\n+\t<\/patternset>\n+\n+\t<patternset id=\"test.packages\">\n+\t\t<include name=\"com\/sun\/jct\/utils\/copyrightcheck\/**\" \/>\n+\t<\/patternset>\n+    \n+    <patternset id=\"javatest.jdk11.files\">\n+        <include name=\"com\/sun\/javatest\/Command.java\"\/>\n+        <include name=\"com\/sun\/javatest\/JavaTestSecurityManager.java\"\/>\n+        <include name=\"com\/sun\/javatest\/ProductInfo.java\"\/>\n+        <include name=\"com\/sun\/javatest\/Test.java\"\/>\n+        <include name=\"com\/sun\/javatest\/Status.java \"\/>\n+        <include name=\"com\/sun\/javatest\/agent\/*.java\"\/>\n+        <exclude name=\"com\/sun\/javatest\/agent\/AgentClassLoader2.java\"\/>\n+        <exclude name=\"com\/sun\/javatest\/agent\/AgentMonitorCommandManager.java\"\/>\n+        <exclude name=\"com\/sun\/javatest\/agent\/AgentMonitorTool.java\"\/>\n+        <exclude name=\"com\/sun\/javatest\/agent\/AgentMonitorToolManager.java\"\/>\n+        <include name=\"com\/sun\/javatest\/util\/*.java\"\/>\n+        <include name=\"com\/sun\/javatest\/util\/FileInfoCache.java\"\/>\n+        <include name=\"com\/sun\/javatest\/util\/ReadAheadIterator.java\"\/>\n+    <\/patternset>\n+    \n+    <patternset id=\"javatest.junit.packages\">\n+        <include name=\"com\/sun\/javatest\/junit\/**\"\/>\n+    <\/patternset>\n+    \n+    <!-- JAR Section -->\n+    <target name=\"jar_artifactory\">\n+        <get usetimestamp=\"true\" dest=\".\" ignoreerrors=\"false\">\n+             <url url=\"${javatest.binaries}\/lib\/javatest.jar\"\/>\n+        <\/get>\n+\t<get usetimestamp=\"true\" dest=\"src\/lib\" ignoreerrors=\"false\">\n+             <url url=\"${hamcrest-core.binaries}\/hamcrest-core-1.3.jar\"\/>\n+        <\/get>\t\t\n+\t<get usetimestamp=\"true\" dest=\"src\/lib\" ignoreerrors=\"false\">\n+             <url url=\"${junit.binaries}\/junit-4.13.2.jar\"\/>\n+        <\/get>\n+\t\t \n+\t<get usetimestamp=\"true\" dest=\"src\/lib\" ignoreerrors=\"false\">\n+             <url url=\"${jemmy.binaries}\/jemmy-2.2.7.5.jar\"\/>\n+        <\/get>\n+\t\t\n+\t<get usetimestamp=\"true\" dest=\"src\/lib\" ignoreerrors=\"false\">\n+             <url url=\"${jhall.binaries}\/jhall-2.0_05.jar\"\/>\n+        <\/get>\n+\t\t\n+\t<rename src=\"src\/lib\/junit-4.13.2.jar\" dest=\"src\/lib\/junit.jar\"\/>\n+\t<rename src=\"src\/lib\/hamcrest-core-1.3.jar\" dest=\"src\/lib\/hamcrest.jar\"\/>\n+\t<rename src=\"src\/lib\/jemmy-2.2.7.5.jar\" dest=\"src\/lib\/jemmy.jar\"\/>\n+\t<rename src=\"src\/lib\/jhall-2.0_05.jar\" dest=\"src\/lib\/jh.jar\"\/>\n+\t\t\n+    <\/target>\n+    \n+    <!-- JAR - JUnit Support Section -->\n+\n+    <!-- Compilation Section -->\n+    <target name=\"build\">\t\t\n+    <\/target>\n+    \n+\t<target name=\"test-gui\" depends=\"jar_artifactory\">\n+\t\t\n+\t\t<property name=\"tests.gui.path\" value=\"\"\/>\n+\n+\t\t<property name=\"datapath\" value=\"src\/gui\/data\"\/>\n+\t\t<property name=\"example_ts_path\" value=\"${datapath}\/demots\"\/>\n+\t\t<property name=\"javatestjar_path\" value=\"javatest.jar\"\/>\n+\n+\t\t<property name=\"tests.gui.srcpath\" value=\"src\/gui\/src\"\/>\n+\t\t<property name=\"tests.tempdir\" value=\"build\/tests\/gui\"\/>\n+\t\t\n+\t\t<ant antfile=\"src\/gui-test.xml\" target=\"run\"\/>\n+\t<\/target>\n+\n+\t<target name=\"genreport\">\n+\t\t<ant antfile=\"src\/gui-test.xml\" target=\"genreport\"\/>\n+\t<\/target>\n+\t\n+<\/project>\n","filename":"jt_gui_tests\/src\/build.xml","additions":161,"deletions":0,"binary":false,"changes":161,"status":"added"},{"patch":"@@ -0,0 +1,271 @@\n+<?xml version='1.0' encoding='ISO-8859-1' ?>\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2006, 2011, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+\n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+\n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+\n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+<project name=\"jt_gui_test\" default=\"init\">\n+<!--\t<property name=\"jemmylib\" value=\".\/lib\/jemmy.jar\" used from  local.props \/>\n+\t<property name=\"junitlib\" value=\".\/lib\/junit-4.4.jar\" used from  local.props \/>\n+\t<property name=\"jhjar\" value=\".\/lib\/jh.jar\"\/> used from  local.props -->\n+\n+\t<property name=\"TESTS_BUILD_DIR\" value=\".\/build\/\"\/>\n+\t<property name=\"tests.gui.path\" value=\".\/tests\/gui\"\/>\n+\t<property name=\"example_ts_path\" value=\".\/data\/demots\"\/>\n+<!--\t<property name=\"javatestjar_path\" value=\".\/lib\/javatest.jar\"\/> moved to local.props -->\n+\t<property name=\"tests.gui.srcpath\" value=\".\/src\"\/>\n+\t<property name=\"tests.tempdir\" value=\"${TESTS_BUILD_DIR}\/tests\/gui\"\/>\n+\n+\t<property name=\"datapath\" value=\".\/data\"\/>\n+\t<property name=\"tests.classesdir\" value=\"${tests.tempdir}\/classes\"\/>\n+\t<property name=\"report.dir\" value=\"${tests.tempdir}\/report\" \/>\n+\t<property name=\"htmlreport.dir\" value=\"${tests.tempdir}\/htmlreport\" \/>\n+\n+<!--\t<property name=\"product.name\" value=\"JavaTest\" \/> moved to local.props -->\n+\t<property name=\"inittimeout\" value=\"300000\"\/> \n+\n+\t<path id=\"classpath\">\n+\t\t<fileset dir=\"${tests.tempdir}\">\n+\t\t\t<include name=\"*.jar\" \/>\n+\t\t<\/fileset>\n+\t<\/path>    \n+\n+\t<target name=\"build_demoapi_simpleTags\">\n+                <mkdir dir=\"${tests.tempdir}\/temp\/demoapi\"\/>\n+\n+                <javac encoding=\"iso-8859-1\" debug=\"true\" source=\"7\"\n+                        srcdir=\".\/src\/gui\/testsuite_src\/demoapi\" \n+                        destdir=\"${tests.tempdir}\/temp\/demoapi\">\n+                <\/javac>\n+\t\t<jar destfile=\"${tests.tempdir}\/temp\/demoapi.jar\" \n+\t\t\tbasedir=\"${tests.tempdir}\/temp\/demoapi\" index=\"false\">\n+\t\t<\/jar>\n+\n+\t\t<mkdir dir=\"${tests.tempdir}\/temp\/simpleTags\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/temp\/simpleTags_tc\"\/>\n+\n+\t\t<javac encoding=\"iso-8859-1\" debug=\"true\" source=\"7\"\n+\t\t\tsrcdir=\".\/src\/gui\/testsuite_src_clean\" \n+\t\t\tdestdir=\"${tests.tempdir}\/temp\/simpleTags\"\n+\t\t\tclasspath=\"${javatestjar_path}:${tests.tempdir}\/temp\/demoapi.jar:${jhalljar}\">\n+\t\t<\/javac>\n+\n+\t\t<javac encoding=\"iso-8859-1\" debug=\"true\" source=\"7\"\n+\t\t\tsrcdir=\".\/src\/gui\/testsuite_src\" \n+\t\t\tdestdir=\"${tests.tempdir}\/temp\/simpleTags_tc\"\n+\t\t\tclasspath=\"${javatestjar_path}:${tests.tempdir}\/temp\/demoapi.jar:${jhalljar}\">\n+\t\t<\/javac>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/temp\/simpleTags_tc\">\n+\t\t\t<fileset dir=\".\/src\/gui\/testsuite_src\/src\">\n+\t\t\t\t<include name=\"**\/moreInfo\/**\"\/>\n+\t\t\t\t<include name=\"**\/*.properties\"\/>\n+\t\t\t<\/fileset>\n+\t\t<\/copy>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/temp\/simpleTags\">\n+\t\t\t<fileset dir=\".\/src\/gui\/testsuite_src\/src\">\n+\t\t\t\t<include name=\"**\/moreInfo\/**\"\/>\n+\t\t\t\t<include name=\"**\/*.properties\"\/>\n+\t\t\t<\/fileset>\n+\t\t<\/copy>\n+\t<\/target>\n+\n+\t<target name=\"build_testsuite\" depends=\"build_demoapi_simpleTags\">\n+\t\t<mkdir dir=\"${tests.tempdir}\/demots\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/demots\/lib\"\/>\n+\n+\t\t<copy file=\"${tests.tempdir}\/temp\/demoapi.jar\" todir=\"${tests.tempdir}\/demots\/lib\/\"\/>\n+\n+\t\t<jar destfile=\"${tests.tempdir}\/demots\/lib\/jtdemots.jar\" \n+\t\t\tbasedir=\"${tests.tempdir}\/temp\/simpleTags\" index=\"false\">\n+\t\t<\/jar>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/demots\/lib\">\n+\t\t\t<fileset file=\"${javatestjar_path}\"\/>\n+\t\t\t<fileset file=\"${jhjar}\"\/>\n+\t\t<\/copy>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/demots\">\n+\t\t\t<fileset dir=\".\/src\/gui\/testsuite_src_clean\/demots\"\/>\n+\t\t<\/copy>\n+\t<\/target>\n+\n+\t<target name=\"build_testsuite_tc\" depends=\"build_demoapi_simpleTags\">\n+\t\t<mkdir dir=\"${tests.tempdir}\/demots_withtestcases\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/demots_withtestcases\/lib\"\/>\n+\n+\t\t<copy file=\"${tests.tempdir}\/temp\/demoapi.jar\" todir=\"${tests.tempdir}\/demots_withtestcases\/lib\/\"\/>\n+\n+\t\t<jar destfile=\"${tests.tempdir}\/demots_withtestcases\/lib\/jtdemots.jar\" \n+\t\t\tbasedir=\"${tests.tempdir}\/temp\/simpleTags_tc\" index=\"false\">\n+\t\t<\/jar>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/demots_withtestcases\/lib\">\n+\t\t\t<fileset file=\"${javatestjar_path}\"\/>\n+\t\t\t<fileset file=\"${jhjar}\"\/>\n+\t\t<\/copy>\n+\n+\t\t<copy todir=\"${tests.tempdir}\/demots_withtestcases\">\n+\t\t\t<fileset dir=\".\/src\/gui\/testsuite_src\/demots\"\/>\n+\t\t<\/copy>\n+\t<\/target>\n+\t\n+\t<target name=\"create\" depends=\"replace\" unless=\"jt_gui_test.ignore_init\">\n+\t\t<delete dir=\"${TESTS_BUILD_DIR}\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/report\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/htmlreport\"\/>\n+\t\t<mkdir dir=\"${tests.tempdir}\/demots\"\/>\n+\t\t<mkdir dir=\"${tests.classesdir}\"\/>\n+\t\t<loadfile property=\"message\" srcFile=\"src\/local.properties\" \/>\n+\t\t<copy todir=\"${tests.tempdir}\" file=\"${javatestjar_path}\"\/>\n+\t\t<copy todir=\"${tests.tempdir}\" file=\"${jemmylib}\"\/>\n+\t\t<copy todir=\"${tests.tempdir}\" file=\"${junitlib}\"\/>\n+\t\t<copy todir=\"${tests.tempdir}\" file=\"${hamcrestlib}\"\/>\n+\t\t<copy todir=\"${tests.tempdir}\" file=\"${jhjar}\"\/>\n+\t\t<copy todir=\"${tests.tempdir}\">\n+\t\t\t<fileset dir=\"${datapath}\"\/>\n+\t\t<\/copy>\n+\t<\/target>\n+\n+\t<target name=\"replace\">\n+\t\t<replace file=\"src\/local.properties\" token=\"javatest_jar\" value=\"javatest.jar\"\/>\n+\t\t<replace file=\"src\/local.properties\" token=\"jemmy_jar\" value=\"jemmy.jar\"\/>\n+\t\t<replace file=\"src\/local.properties\" token=\"junit_jar\" value=\"junit.jar\"\/>\n+\t\t<replace file=\"src\/local.properties\" token=\"hamcrest_jar\" value=\"hamcrest.jar\"\/>\n+\t\t<replace file=\"src\/local.properties\" token=\"jh_jar\" value=\"jh.jar\"\/>\n+\t<\/target>\n+\n+\t<target name=\"compile\" depends=\"create,build_testsuite,build_testsuite_tc\">\n+\t\t<javac srcdir=\"${tests.gui.srcpath}\" destdir=\"${tests.classesdir}\" debug=\"true\">\n+                        <classpath refid=\"classpath\"\/>\n+\t\t<\/javac>\n+\t<\/target>\n+\n+\t<target name=\"init\" depends=\"compile\" unless=\"jt_gui_test.ignore_init\">\n+ \t\t<java timeout=\"${inittimeout}\" fork=\"true\" dir=\"${tests.tempdir}\" failonerror=\"true\" classname=\"jthtest.Init\">\n+ \t\t\t<classpath refid=\"classpath\"\/>\n+                        <classpath>\n+\t\t\t\t<pathelement path=\"${tests.classesdir}\"\/>\n+\t\t\t<\/classpath>\n+\t\t\t<sysproperty key=\"jt_gui_test.name\" value=\"${product.name}\" \/>\n+\t\t\t<sysproperty key=\"javatest.security.noSecurityManager\" value=\"true\" \/>\n+                        <sysproperty key=\"javatest.desktop.file\" value=\"${javatest.desktop.file}\"\/>\n+                        <sysproperty key=\"javatest.preferences.file\" value=\"${javatest.preferences.file}\"\/>\n+\n+\t\t\t<arg value=\"democonfig.jti\"\/>\n+\t\t\t<arg value=\"demotemplate.jtm\"\/>\n+\t\t<\/java>\n+\t<\/target>\n+\t\n+\t<target name=\"jar\" depends=\"init\">\n+\t\t<jar destfile=\"${tests.tempdir}\/${ant.project.name}.jar\" basedir=\"${tests.classesdir}\" \/>\n+\t<\/target>\n+\n+\t<target name=\"run\" depends=\"jar\">\n+\t\t<junit printsummary=\"yes\" showoutput=\"true\" dir=\"${tests.tempdir}\">\n+\t\t\t\n+\t\t\t<sysproperty key=\"jt_gui_test.QSdefault\" value=\"true\" \/>\n+\t\t\t<sysproperty key=\"jt_gui_test.name\" value=\"${product.name}\" \/>\n+\t\t\t<sysproperty key=\"jt_gui_test.showWarnings\" value=\"${jt_gui_test.showWarnings}\" \/>\n+\t\t\t<sysproperty key=\"jt_gui_test.ignoreDepricated\" value=\"${jt_gui_test.ignoreDepricated}\" \/>\n+\t\t\t<sysproperty key=\"jt_gui_test.not_run_knownfail\" value=\"${jt_gui_test.not_run_knownfail}\" \/>\n+\t\t\t<sysproperty key=\"jt_gui_test.override_knownfail\" value=\"${jt_gui_test.override_knownfail}\" \/><!-- -->\n+\t\t\t<sysproperty key=\"javatest.security.noSecurityManager\" value=\"true\" \/>\n+\t\t\t<sysproperty key=\"javatest.desktop.file\" value=\"${javatest.directory.file}\"\/>\n+\t\t\t<sysproperty key=\"javatest.preferences.file\" value=\"${javatest.preferences.file}\"\/>\n+\n+\t\t\t<classpath refid=\"classpath\" \/>\n+\n+\t\t\t<formatter type=\"xml\" \/>\n+\t\t\t<formatter type=\"plain\" \/>\n+\n+\t\t\t<batchtest fork=\"true\" todir=\"${report.dir}\" unless=\"testfile\">\n+\t\t\t\t<fileset dir=\"${tests.gui.srcpath}\" >\n+\t\t\t\t\t<include name=\"**\/*0.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*1.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*2.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*3.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*4.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*5.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*6.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*7.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*8.java\" \/>\n+\t\t\t\t\t<include name=\"**\/*9.java\" \/>\n+\t\t\t\t<\/fileset>\n+\t\t\t<\/batchtest>\n+\t\t\t<batchtest fork=\"true\" todir=\"${report.dir}\" if=\"testfile\">\n+\t\t\t\t<fileset dir=\"${tests.gui.srcpath}\">\n+\t\t\t\t\t<include name=\"**\/${testfile}\"\/>\n+\t\t\t\t<\/fileset>\n+\t\t\t<\/batchtest>\n+\t\t<\/junit>\n+\n+\t\t<antcall target=\"genHtmlReport\"\/>\n+\t<\/target>\n+\n+\t<target name=\"genHtmlReport\">\n+\t\t<delete dir=\"${htmlreport.dir}\"\/>\n+\t\t<mkdir dir=\"${htmlreport.dir}\"\/>\n+\t\t\n+                <junitreport todir=\"${htmlreport.dir}\">\n+                        <fileset dir=\"${report.dir}\">\n+                                <include name=\"*.xml\"\/>\n+                        <\/fileset>\n+                        <report todir=\"${htmlreport.dir}\"\/>\n+                <\/junitreport>\n+        <\/target>\n+\n+\t<target name=\"report\" depends=\"run\">\n+\t\t<exec executable=\"cp\" >\n+\t\t\t<arg value=\"${datapath}\/failed.sh\" \/>\n+\t\t\t<arg value=\"${datapath}\/summary.sh\" \/>\n+\t\t\t<arg value=\"${report.dir}\" \/>\n+\t\t<\/exec>\n+\t\t<exec executable=\".\/summary.sh\" dir=\"${report.dir}\" \/>\n+\t\t<exec executable=\".\/failed.sh\" dir=\"${report.dir}\" \/>\n+\n+\t\t<junitreport todir=\"${report.dir}\">\n+\t\t\t<fileset dir=\"${report.dir}\">\n+\t\t\t\t<include name=\"*.xml\"\/>\n+\t\t\t<\/fileset>\n+\t\t\t<report todir=\"${report.dir}\"\/>\n+\t\t<\/junitreport>\n+\t<\/target>\n+\n+\t<target name=\"genreport\">\n+                <junitreport todir=\"${report.dir}\">\n+                        <fileset dir=\"${report.dir}\">\n+                                <include name=\"*.xml\"\/>\n+                        <\/fileset>\n+                        <report todir=\"${report.dir}\"\/>\n+                <\/junitreport>\n+\t<\/target>\n+\n+\t<target name=\"clean\">\n+\t\t<delete dir=\"${TESTS_BUILD_DIR}\" \/>\n+\t<\/target>\n+<\/project>\n","filename":"jt_gui_tests\/src\/gui-test.xml","additions":271,"deletions":0,"binary":false,"changes":271,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+# demo exclude list\r\n+\r\n+# test name\t\t\t\tbugid(s)   keyword(s)  brief description \r\n+lists\/DoublyLinkedList\/insertTest.html  0  \t   test        test contains error\r\n","filename":"jt_gui_tests\/src\/gui\/data\/demo.jtx","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+#JT Harness Configuration Interview\n+#Mon Apr 12 18:56:01 MSD 2010\n+DESCRIPTION=demo config\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+LOCALE=ru_RU\n+NAME=democonfig\n+QUESTION=demoTS.name\n+demoTS.cmdType=otherVM\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=demo config\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=democonfig\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.testVerboseLevel=low\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/democonfig with spaces.jti","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,26 @@\n+#JT Harness Configuration Interview\n+#Mon Apr 12 18:56:17 MSD 2010\n+DESCRIPTION=demo config\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+LOCALE=ru_RU\n+NAME=democonfig\n+QUESTION=demoTS.jvm\n+WORKDIR=\/tmp\/aaaa\n+demoTS.cmdType=otherVM\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=demo config\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.jvm=\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=democonfig\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.testVerboseLevel=low\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/democonfig.jti","additions":26,"deletions":0,"binary":false,"changes":26,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+#JT Harness Configuration Interview\n+#Fri Jul 10 21:00:22 BST 2009\n+DESCRIPTION=demo config\n+INTERVIEW=com.sun.demos.DemoTSInterview\n+LOCALE=ru_RU\n+NAME=democonfiguration\n+QUESTION=demoTS.epilog\n+demoTS.cmdType=otherVM\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=demo config\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=democonfiguration\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.testVerboseLevel=low\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/democonfig_another_suite.jti","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,22 @@\n+#JT Harness Configuration Interview\n+#Fri Jul 17 15:31:14 BST 2009\n+CHECKSUM=5f9cae841e494\n+DESCRIPTION=some broken config\n+LOCALE=ru_RU\n+NAME=broken_democonfig\n+QUESTIOdemoTS.epilog\n+demoTS.cmdType=otherVM\n+demoTS.desc=some broken config\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=broken_democonfig\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/democonfig_broken.jti","additions":22,"deletions":0,"binary":false,"changes":22,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+#JT Harness Configuration Interview\n+#Mon Apr 12 19:04:37 MSD 2010\n+DESCRIPTION=demo config\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+LOCALE=ru_RU\n+NAME=democonfig_second.jti\n+QUESTION=demoTS.cmdType\n+demoTS.cmdType=otherVM\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=demo config\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=democonfig_second.jti\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.testVerboseLevel=low\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/democonfig_second.jti","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+#JT Harness Configuration Interview\n+#Fri Jul 10 21:01:23 BST 2009\n+DESCRIPTION=demo template\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+IS_TEMPLATE=true\n+LOCALE=ru_RU\n+NAME=demotemplate\n+QUESTION=demoTS.epilog\n+demoTS.cmdType=otherVM\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=demo template\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=demotemplate\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/demotemplate.jtm","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,23 @@\n+#JT Harness Configuration Interview\n+#Fri Jul 17 15:24:52 BST 2009\n+DSCRIPTION=some broken template\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+IS_TEMPLATE=true\n+LOCALE=ru_RU\n+NAME=broken_demotemplate\n+QUESTION=demoTS.cmdType\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=some broken template\n+demoTS.excludeList.latestAutoCheck=No\n+emoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=broken_demotemplate\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/demotemplate_broken.jtm","additions":23,"deletions":0,"binary":false,"changes":23,"status":"added"},{"patch":"@@ -0,0 +1,24 @@\n+#JT Harness Configuration Interview\n+#Fri Jul 17 15:24:17 BST 2009\n+CHECKSUM=16fb412345678988\n+DESCRIPTION=\n+INTERVIEW=com.sun.demots.DemoTSInterview\n+IS_TEMPLATE=true\n+LOCALE=ru_RU\n+NAME=demotemplate_with_brokenchecksum\n+QUESTION=demoTS.desc\n+demoTS.concurrency.concurrency=1\n+demoTS.desc=\n+demoTS.excludeList.latestAutoCheck=No\n+demoTS.excludeList.latestAutoCheckInterval=7\n+demoTS.excludeList.latestAutoCheckMode=everyXDays\n+demoTS.excludeList.needExcludeList=No\n+demoTS.keywords.keywords.mode=expr\n+demoTS.keywords.needKeywords=No\n+demoTS.name=demotemplate_with_brokenchecksum\n+demoTS.priorStatus.needStatus=No\n+demoTS.priorStatus.status=\n+demoTS.tests.needTests=No\n+demoTS.tests.tests=\n+demoTS.tests.treeOrFile=tree\n+demoTS.timeout.timeout=1\n","filename":"jt_gui_tests\/src\/gui\/data\/demotemplate_brokenchecksum.jtm","additions":24,"deletions":0,"binary":false,"changes":24,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+#!\/bin\/bash\n+\n+#\n+# $Id$\n+#\n+# Copyright (c) 2006, 2011, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+LINE=\"============================================================\"\n+\n+FILE=ERRORS.txt\n+\n+rm $FILE 2> \/dev\/null\n+for i in $(grep -l ERROR TEST-*.txt); do\n+\techo $i | sed 's\/TEST-\/\/; s\/\\.txt$\/\/' >> $FILE\n+\techo $LINE >> $FILE\n+\tsed -n '\/ERROR\/,$p' < $i >> $FILE\n+\techo $LINE >> $FILE\n+done\n","filename":"jt_gui_tests\/src\/gui\/data\/failed.sh","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,22 @@\n+TestCasesTests\/ManyTest.java[PassingTest01]\n+TestCasesTests\/ManyTest.java[PassingTest02]\n+TestCasesTests\/ManyTest.java[PassingTest03]\n+TestCasesTests\/ManyTest.java[PassingTest04]\n+TestCasesTests\/ManyTest.java[PassingTest05]\n+TestCasesTests\/ManyTest.java[FailingTest01]\n+TestCasesTests\/ManyTest.java[FailingTest02]\n+TestCasesTests\/ManyTest.java[ErrorTest01]\n+TestCasesTests\/ManyTest.java[ErrorTest02]\n+TestCasesTests\/PassingTest.java[PassingTest01]\n+TestCasesTests\/PassingTest.java[PassingTest02]\n+TestCasesTests\/PassingTest.java[PassingTest03]\n+TestCasesTests\/FailingTest1.java[FailingTest01]\n+TestCasesTests\/FailingTest1.java[FailingTest02]\n+TestCasesTests\/FailingTest1.java[FailingTest03]\n+TestCasesTests\/FailingTest2.java[PassingTest01]\n+TestCasesTests\/FailingTest2.java[PassingTest02]\n+TestCasesTests\/FailingTest2.java[FailingTest01]\n+TestCasesTests\/FailingTest2.java[FailingTest02]\n+TestCasesTests\/ErrorTest.java[ErrorTest01]\n+TestCasesTests\/ErrorTest.java[PassingTest01]\n+TestCasesTests\/ErrorTest.java[PassingTest02]\n","filename":"jt_gui_tests\/src\/gui\/data\/kfl_tc_all.kfl","additions":22,"deletions":0,"binary":false,"changes":22,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+lists\/DoublyLinkedList\/InsertTest.java\n","filename":"jt_gui_tests\/src\/gui\/data\/knownfailures.kfl","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,5 @@\n+lists\/DoublyLinkedList\/AppendTest.java\n+lists\/DoublyLinkedList\/InsertTest.java\n+BigNum\/AddTest.java\n+BigNum\/EqualsTest.java\n+missing_package\/MissingTest.java\n","filename":"jt_gui_tests\/src\/gui\/data\/knownfailures_missing.kfl","additions":5,"deletions":0,"binary":false,"changes":5,"status":"added"},{"patch":"@@ -0,0 +1,4 @@\n+lists\/DoublyLinkedList\/AppendTest.java\n+lists\/DoublyLinkedList\/InsertTest.java\n+BigNum\/AddTest.java\n+BigNum\/EqualsTest.java\n","filename":"jt_gui_tests\/src\/gui\/data\/knownfailures_passed.kfl","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+lists\/\n","filename":"jt_gui_tests\/src\/gui\/data\/knownfailures_recursive.kfl","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+#!\/bin\/bash\n+\n+#\n+# $Id$\n+#\n+# Copyright (c) 2006, 2011, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+FILE=summary.txt\n+\n+(\n+\tgrep -l ERROR TEST-*.txt | sed 's\/TEST-\/\/; s\/\\.txt$\/\t\t\t\tERROR\/'\n+\tgrep -L ERROR TEST-*.txt | sed 's\/TEST-\/\/; s\/\\.txt$\/\t\t\t\tPASSED\/'\n+) > $FILE\n+\n","filename":"jt_gui_tests\/src\/gui\/data\/summary.sh","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,191 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Audit;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JEditorPaneOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit extends Tools {\n+    \/\/throw new UnsupportedOperationException(\"Not yet implemented\");\n+    public static class AuditTool {\n+    public enum AuditTabs {Summary, BadResultFile, BadChecksum, BadDescription, BadTestClasses};\n+    private AuditTabs openedTab;\n+    private JFrameOperator mainFrame;\n+    private boolean isOptionsOpened;\n+\n+    public static class AuditOptions {\n+        JDialogOperator dialog;\n+\n+        public AuditOptions(JDialogOperator dialog) {\n+        this.dialog = dialog;\n+        }\n+        public AuditOptions(AuditTool audit) {\n+        new JMenuOperator(audit.getFrame(), \"Audit\").pushMenu(new String[] {\"Audit\", \"Options\"});\n+        dialog = findDialog();\n+        }\n+        public AuditOptions() {\n+        dialog = findDialog();\n+        }\n+\n+        public void setTestsuite(String testsuite) {\n+\/\/      getComboBox(dialog, \"Test Suite:\").getTextField().typeText(testsuite);\n+        getComboBox(dialog, \"Test Suite:\").typeText(testsuite);\n+        }\n+        public void setWorkdir(String workdir) {\n+        getComboBox(dialog, \"Work Directory:\").typeText(workdir);\/\/getTextField().typeText(workdir);\n+        }\n+        public void setConfigFile(String config) {\n+        getComboBox(dialog, \"Configuration File:\").typeText(config);\/\/getTextField().typeText(config);\n+        }\n+\n+        public void pushStartAudit() {\n+\n+        new JButtonOperator(dialog, \"Start Audit\").getFocus();\n+        new JButtonOperator(dialog, \"Start Audit\").push();\n+        }\n+        public void pushCancel() {\n+        new JButtonOperator(dialog, \"Cancel\").push();\n+        }\n+        public void pushHelp() {\n+        new JButtonOperator(dialog, \"Help\").push();\n+        }\n+\n+        public JDialogOperator getDialog() {\n+        return dialog;\n+        }\n+        public static JDialogOperator findDialog() {\n+        return new JDialogOperator(\"Audit Test Results: Options\");\n+        }\n+    }\n+\n+    public static void openAuditTool(JFrameOperator mainFrame) {\n+        new JMenuOperator(mainFrame, \"Tools\").pushMenu(new String[] {\"Tools\", \"Test Results Auditor\"});\n+    }\n+\n+    public static void waitForLoading(AuditTool tool) throws InterruptedException {\n+        int t = 0;\n+        while(tool.getSummary().contains(\"<p style=\\\"margin-top: 0\\\">\")) {\n+        Thread.sleep(100);\n+        t+=100;\n+        if(t > 60000)\n+            throw new InterruptedException();\n+        }\n+    }\n+\n+    public AuditTool(JFrameOperator mainFrame) {\n+        this.mainFrame = mainFrame;\n+        openAuditTool(mainFrame);\n+        isOptionsOpened = true;\n+    }\n+\n+    \/\/ testsuite and config can be null\n+    public AuditTool(JFrameOperator mainFrame, String testsuite, String workdir, String config) {\n+        this.mainFrame = mainFrame;\n+        openAuditTool(mainFrame);\n+        AuditOptions options = new AuditOptions();\n+        options.setConfigFile(config);\n+        options.setTestsuite(testsuite);\n+        options.setWorkdir(workdir);\n+        options.pushStartAudit();\n+        openedTab = AuditTabs.Summary;\n+        isOptionsOpened = false;\n+    }\n+\n+    public JFrameOperator getFrame() {\n+        return mainFrame;\n+    }\n+\n+    public AuditOptions openOptions() {\n+        return new AuditOptions(this);\n+    }\n+\n+    public void setOptions(String testsuite, String workdir, String config) {\n+        AuditOptions newOptinos;\n+        if(!isOptionsOpened) {\n+        newOptinos = openOptions();\n+        } else {\n+        newOptinos = new AuditOptions();\n+        }\n+\n+        newOptinos.setConfigFile(config);\n+        newOptinos.setTestsuite(testsuite);\n+        newOptinos.setWorkdir(workdir);\n+    }\n+\n+    public String getSummary() {\n+        if(openedTab != AuditTabs.Summary) {\n+        openTab(AuditTabs.Summary);\n+        }\n+        return new JEditorPaneOperator(mainFrame, new NameComponentChooser(\"smry.html\")).getText();\n+    }\n+\n+    public String getBadResultFile() {\n+        return null;\n+    }\n+\n+    public String getBadChecksum() {\n+        return null;\n+    }\n+\n+    public String getBadDescription() {\n+        return null;\n+    }\n+\n+    public String getBadTestClasses() {\n+        return null;\n+    }\n+\n+    public String getUsedTestSuite() {\n+        return null;\n+    }\n+\n+    public String getUsedWorkDirectory() {\n+        return null;\n+    }\n+\n+    public String getUsedConfigFile() {\n+        return null;\n+    }\n+\n+    private void openTab(AuditTabs tab) {\n+    }\n+\n+    public AuditOptions findAuditOptions() {\n+        return new AuditOptions();\n+    }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit.java","additions":191,"deletions":0,"binary":false,"changes":191,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit1 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\t\tAudit.AuditTool tool = new Audit.AuditTool(mainFrame.getJFrameOperator(), Tools.LOCAL_PATH + Tools.TEST_SUITE_NAME, Tools.LOCAL_PATH + Tools.DEFAULT_WD_NAME, \"\");\n+\t\ttry {\n+\t\t\tAudit.AuditTool.waitForLoading(tool);\n+\t\t} catch (InterruptedException ex) {\n+\t\t\terrors.add(\"Error occured - summary was not loaded\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit1.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextAreaOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit2 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tString testsuitePath = Tools.LOCAL_PATH + \"this_test_suite_must_not_exist_here\";\n+\n+\t\tnew Audit.AuditTool(mainFrame.getJFrameOperator(), testsuitePath, Tools.LOCAL_PATH + Tools.DEFAULT_WD_NAME, \"\");\n+\n+\t\tif (!(new JTextAreaOperator(new JDialogOperator(Audit.WINDOWNAME + \" Harness: Error\")).getText().equals(\"Error in options: Cannot find test suite \" + testsuitePath))) {\n+\t\t\terrors.add(\"Error message text is unexpected\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit2.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit3 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tAudit.AuditTool tool = new Audit.AuditTool(mainFrame.getJFrameOperator(), \"\", Tools.LOCAL_PATH + Tools.DEFAULT_WD_NAME, \"\");\n+\t\ttry {\n+\t\t\tAudit.AuditTool.waitForLoading(tool);\n+\t\t} catch (InterruptedException ex) {\n+\t\t\terrors.add(\"Error occured - summary was not loaded\");\n+\t\t}\n+\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit3.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextAreaOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit4 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tnew Audit.AuditTool(mainFrame.getJFrameOperator(), \"\", \"this_work_directory_must_not_exist_here\", \"\");\n+\t\tif (!(new JTextAreaOperator(new JDialogOperator(Tools.WINDOWNAME + \" Harness: Error\")).getText().equals(\"Error in options: Cannot find work directory this_work_directory_must_not_exist_here\"))) {\n+\t\t\terrors.add(\"Error message is unexpected\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit4.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit5 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tAudit.AuditTool auditTool = new Audit.AuditTool(mainFrame.getJFrameOperator(), \"\", \"\", Tools.LOCAL_PATH + Tools.CONFIG_NAME);\n+\t\ttry {\n+\t\t\tAudit.AuditTool.waitForLoading(auditTool);\n+\t\t} catch (InterruptedException ex) {\n+\t\t\terrors.add(\"Error occured - summary was not loaded\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit5.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextAreaOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit6 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tnew Audit.AuditTool(mainFrame.getJFrameOperator(), \"\", \"\", \"this_config_file_must_not_be_here\");\n+\t\tif (!(new JTextAreaOperator(new JDialogOperator(Tools.WINDOWNAME + \" Harness: Error\")).getText().equals(\"Error in options: Cannot find configuration file this_config_file_must_not_be_here\"))) {\n+\t\t\terrors.add(\"Error message is unexpected\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit6.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextAreaOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit8 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\t\tnew Audit.AuditTool(mainFrame.getJFrameOperator(), Tools.LOCAL_PATH + Tools.TEST_SUITE_NAME, \"\", \"\");\n+\t\tif (!(new JTextAreaOperator(new JDialogOperator(Tools.WINDOWNAME + \" Harness: Error\")).getText().equals(\"You must specify a work directory containing the results to be audited.\"))) {\n+\t\t\terrors.add(\"Error message is unexpected\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit8.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Audit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Audit9 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\t\n+\t\tnew Audit.AuditTool(mainFrame.getJFrameOperator()).findAuditOptions().pushHelp();\n+\t\tnew JFrameOperator(Tools.WINDOWNAME + \" Harness User's Guide\");\n+    }\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Audit\/Audit9.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Browse;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import jthtest.CreateWorkdir.CreateWorkdir;\n+import org.junit.Before;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+\n+import jthtest.Tools;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse extends Tools {\n+\tstatic void browseTestsuite(JDialogOperator quickStartDialog) {\n+\t\t\/\/Click on the \"Browse\" radio button\n+\t\tnew JRadioButtonOperator(quickStartDialog, \"Browse the test suite\").push();\n+\t}\n+\t\n+\tpublic static void pickWorkDir(JFrameOperator mainFrame) {\n+\t\t\n+\/\/\t\tJDialogOperator wrkDir = new JDialogOperator(mainFrame, \"Work Directory Required\");\n+\t\t\n+\/\/\t\tnew JButtonOperator(wrkDir, \"Create Work Directory\").push();\n+\n+\t    JDialogOperator wd = CreateWorkdir.findWorkDir(mainFrame);\n+\t    CreateWorkdir.createWorkDirInTemp(CreateWorkdir.findWorkDirectoryCreation(mainFrame), true);\n+\t}\n+\n+\tprotected JFrameOperator mainFrame;\n+\tprotected JDialogOperator quickStartDialog;\n+\t\n+\t@Before\n+\tpublic void setUp() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(NEWDESKTOP_ARG);\n+\t\tmainFrame = findMainFrame();\n+\/\/\t\tnew JMenuOperator(mainFrame).pushMenuNoBlock(\"File|Open Quick Start Wizard ...\", \"|\");\n+\t\tquickStartDialog = findQuickStart(mainFrame);\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with -newdesktop. The JavaTest Quick Start wizard will be displayed. \n+ * Click on Browse the testsuite and click on Next button. Specify an exiting test \n+ * suite and click on Next. Choose the Create a new configuration and click on Next. \n+ * Check the Start the configuration editor. Click on Finish button. Click on Create \n+ * Work directory. Specify a new directory and click on Create. Verify that the \n+ * configuration editor is displayed\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse2 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.Browse.Browse2\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse2() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+        try {\n+            Thread.sleep(1000);\n+        } catch (InterruptedException ex) {\n+        }\n+\n+        next(quickStartDialog);\n+\t\t\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tcreateConfiguration(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tfinish(quickStartDialog, true);\n+\t\t\n+\t\tpickWorkDir(mainFrame);\n+\t\t\n+\t\tnew JDialogOperator(mainFrame, \"Configuration Editor\");\n+\t\t\n+\t}\n+\t\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse2.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse3 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.Browse.Browse3\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse3() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tgetTextField(quickStartDialog, \"Test Suite\");\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse3.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse4 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.Browse.Browse4\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse4() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse4.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse5 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.Browse.Browse5\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse5() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse5.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with -newdesktop. The JavaTest Quick Start wizard will be displayed. \n+ * Click on Browse the testsuite and click on Next button. Specify the testsuite. \n+ * Click on Next button. Choose the Use the configuration template , specify a valid \n+ * and complete configuration file and click on Next. The text should specify that \n+ * the configuration is complete. Check the Start the configuration check and click \n+ * on Finish button and then choose workdir. Verify that the configuration editor \n+ * will be displayed to make changes\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse7 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"com.sun.javatest.tests.Browse.Browse7\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse7() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tuseConfigTemplate(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tstartConfigEditor(quickStartDialog);\n+\t\t\n+\t\tfinish(quickStartDialog, true);\n+\t\t\n+\t\tpickWorkDir(mainFrame);\n+\t\t\n+\t\tnew JDialogOperator(mainFrame, \"Configuration Editor\");\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse7.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Browse;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Browse8 extends Browse {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.Browse.Browse8\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testBrowse8() {\n+\t\tbrowseTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tuseConfigTemplate(quickStartDialog);\n+\t\t\n+\t\tnext(quickStartDialog);\n+\t\t\n+\t\tstartConfigEditor(quickStartDialog);\n+\t\t\n+\t\tfinish(quickStartDialog, false);\n+\t\t\n+\t\tcheckCounters(mainFrame, new int[] {0, 0, 0, 17, 17, 0, 17});\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Browse\/Browse8.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,244 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.io.File;\n+import javax.swing.JLabel;\n+import javax.swing.JTextField;\n+import jthtest.menu.Menu;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ConfigTools extends Tools {\n+\n+    public static class ConfigDialog {\n+\n+\tprivate JDialogOperator config;\n+\tprivate JTFrame mainFrame;\n+\n+\tprivate ConfigDialog(JTFrame mainFrame) {\n+\t    this.mainFrame = mainFrame;\n+\t    config = new JDialogOperator(mainFrame.getJFrameOperator(), getExecResource(\"ce.name\"));\n+\t}\n+\n+\tpublic static ConfigDialog openConfigCreation(JTFrame mainFrame) {\n+\t    new JMenuOperator(mainFrame.getJFrameOperator(), getExecResource(\"ch.menu\")).pushMenuNoBlock(new String[]{getExecResource(\"ch.menu\"), getExecResource(\"ch.new.act\")});\n+\t    return new ConfigDialog(mainFrame);\n+\t}\n+\n+\tpublic static ConfigDialog openConfigCreationBlock(JTFrame mainFrame) {\n+\t    new JMenuOperator(mainFrame.getJFrameOperator(), getExecResource(\"ch.menu\")).pushMenu(new String[]{getExecResource(\"ch.menu\"), getExecResource(\"ch.new.act\")});\n+\t    return new ConfigDialog(mainFrame);\n+\t}\n+\n+\tpublic static ConfigDialog openConfigDialogByKey(JTFrame mainFrame) {\n+\t    mainFrame.getJFrameOperator().pressKey(KeyEvent.VK_E, InputEvent.CTRL_DOWN_MASK);\n+\t    return new ConfigDialog(mainFrame);\n+\t}\n+\n+\tpublic static ConfigDialog openConfigDialogByMenu(JTFrame mainFrame) {\n+\t    Menu.getConfigure_EditConfigurationMenu(mainFrame.getJFrameOperator());\n+\t    return new ConfigDialog(mainFrame);\n+\t}\n+\n+\tpublic void pushDoneConfigEditor() {\n+\t    new JButtonOperator(config, DONE_BUTTON).push();\n+\t}\n+\n+\tpublic void pushNextConfigEditor() {\n+\t    new JButtonOperator(config, NEXT_BUTTON).push();\n+\t}\n+\n+\tpublic void pushBackConfigEditor() {\n+\t    new JButtonOperator(config, PREV_BUTTON).push();\n+\t}\n+\n+\tpublic void pushLastConfigEditor() {\n+\t    new JButtonOperator(config, LAST_BUTTON).push();\n+\t}\n+\n+\tpublic void selectQuestion(int index) {\n+\t    new JListOperator(config).selectItem(index);\n+\t}\n+\n+\tpublic void saveConfig(String name) {\n+\t    getFile_SaveMenu(config).pushNoBlock();\n+\t    JDialogOperator saving = new JDialogOperator(getSaveConfigurationDialogName());\n+\n+\t    JTextFieldOperator tf;\n+\n+\t    tf = new JTextFieldOperator((JTextField) Tools.getComponent(saving, new String[]{\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"}));\n+\t    tf.enterText(name);\n+\t}\n+\n+\tpublic boolean isFullConfiguration() {\n+\t    JListOperator list = new JListOperator(config);\n+\t    return ((JLabel) list.getRenderedComponent(list.getModel().getSize() - 1)).getText().equals(\" Congratulations!\");\n+\t}\n+    }\n+    public static final String SECOND_CONFIG_NAME = \"democonfig_second.jti\";\n+    public static final String DONE_BUTTON = \"Done\";\n+    public static final String NEXT_BUTTON = \"Next\";\n+    public static final String PREV_BUTTON = \"Back\";\n+    public static final String LAST_BUTTON = \"Last\";\n+    public static final String CONFIG_LOADER_DIALOG_NAME_EI18N = \"wdc.loadconfig\";\n+    public static final String CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N = \"wdc.load.btn\";\n+    public static final String CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N = \"wdc.configchoosertitle\";\n+    public static final String CONFIG_LOADER_BROWSE_BUTTON = \"Browse\";\n+    public static final String SAVE_CONFIG_FILE_DIALOG_NAME_EI18N = \"ce.save.title\";\n+\n+    public boolean isFullConfiguration(JDialogOperator config) {\n+\tJListOperator list = new JListOperator(config);\n+\treturn ((JLabel) list.getRenderedComponent(list.getModel().getSize() - 1)).getText().equals(\" Congratulations!\");\n+    }\n+\n+    public static int findRow(JTableOperator table, String searching) {\n+\tint i;\n+\tfor (i = 0; i < table.getRowCount(); i++) {\n+\t    if (table.getValueAt(i, 0).toString().equals(searching)) {\n+\t\treturn i;\n+\t    }\n+\t}\n+\treturn -1;\n+    }\n+\n+    public static JDialogOperator openLoadConfigDialogByMenu(JFrameOperator mainFrame) {\n+\tMenu.getConfigure_LoadConfigurationMenu(mainFrame).pushNoBlock();\n+\treturn new JDialogOperator(getLoadConfigurationDialogName());\n+    }\n+\n+    public static void openConfigDialogByKey(JFrameOperator mainFrame) {\n+\tmainFrame.requestFocus();\n+\tmainFrame.clickMouse();\n+        pause(1);\n+\tmainFrame.requestFocus();\n+\tmainFrame.pressKey(KeyEvent.VK_E, InputEvent.CTRL_DOWN_MASK);\n+    }\n+\n+    public static void openConfigDialogByMenu(JFrameOperator mainFrame) {\n+\tMenu.getConfigure_EditConfigurationMenu(mainFrame);\n+    }\n+\n+    public static void pushDoneConfigEditor(JDialogOperator config) {\n+\tnew JButtonOperator(config, DONE_BUTTON).push();\n+    }\n+\n+    public static void pushNextConfigEditor(JDialogOperator config) {\n+\tnew JButtonOperator(config, NEXT_BUTTON).push();\n+    }\n+\n+    public static void pushBackConfigEditor(JDialogOperator config) {\n+\tnew JButtonOperator(config, PREV_BUTTON).push();\n+    }\n+\n+    public static void pushLastConfigEditor(JDialogOperator config) {\n+\tnew JButtonOperator(config, LAST_BUTTON).push();\n+    }\n+\n+    public static void openConfigFile(JDialogOperator fileChooser, String path, String name) {\n+\tnew JButtonOperator(fileChooser, CONFIG_LOADER_BROWSE_BUTTON).push();\n+\n+\tJDialogOperator fc = new JDialogOperator(getConfigLocationDialogName());\n+\tJTextFieldOperator tf = new JTextFieldOperator(fc);\n+\ttf.enterText(path + File.separator + name);\n+\n+\tnew JButtonOperator(fileChooser, getConfigLoaderLoadButtonName()).push();\n+    }\n+\n+    public static void openConfigFile(JDialogOperator fileChooser, String name) {\n+\topenConfigFile(fileChooser, LOCAL_PATH, name);\n+    }\n+\n+    public static void openConfigCreation(JFrameOperator mainFrame) {\n+\tMenu.getConfigure_NewConfigurationMenu(mainFrame).pushNoBlock();\n+    }\n+\n+    public static void openConfigCreationBlock(JFrameOperator mainFrame) {\n+\tMenu.getConfigure_NewConfigurationMenu(mainFrame).push();\n+    }\n+\n+    public static void selectQuestion(JDialogOperator config, int index) {\n+\tnew JListOperator(config).selectItem(index);\n+    }\n+\n+    public static void saveConfig(JDialogOperator config, String name) {\n+\tgetFile_SaveMenu(config).pushNoBlock();\n+\tJDialogOperator saving = new JDialogOperator(getSaveConfigurationDialogName());\n+\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField) Tools.getComponent(saving, new String[]{\"Folder name:\", \"File name:\", \"File Name:\", \"Folder Name:\"}));\n+\ttf.enterText(name);\n+    }\n+\n+    public static JMenuBarOperator getMenu(JDialogOperator configDialog) {\n+\treturn new JMenuBarOperator(configDialog);\n+    }\n+\n+    public static JMenuItemOperator getFile_SaveMenu(JDialogOperator configDialog) {\n+\treturn getMenu(configDialog).showMenuItem(new String[]{getFileMenuName(), getFile_SaveMenuName()});\n+    }\n+\n+    public static String getLoadConfigurationDialogName() {\n+\treturn getExecResource(CONFIG_LOADER_DIALOG_NAME_EI18N);\n+    }\n+\n+    public static String getSaveConfigurationDialogName() {\n+\treturn getExecResource(SAVE_CONFIG_FILE_DIALOG_NAME_EI18N);\n+    }\n+\n+    public static String getConfigLocationDialogName() {\n+\treturn getExecResource(CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N);\n+    }\n+\n+    public static String getConfigLoaderLoadButtonName() {\n+\treturn getExecResource(CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N);\n+    }\n+\n+    public static String getFileMenuName() {\n+\treturn \"File\";\n+    }\n+\n+    public static String getFile_SaveMenuName() {\n+\treturn \"Save\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ConfigTools.java","additions":244,"deletions":0,"binary":false,"changes":244,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Edit;\n+\n+import jthtest.ConfigTools;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit extends ConfigTools {\n+    public static void waitForConfigurationLoading(JFrameOperator mainFrame, String name) {\n+\tJTextFieldOperator label = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\"));\n+\tint time = 0;\n+\twhile(!label.getText().equals(name)) {\n+\t    try {\n+\t\tThread.sleep(100);\n+\t\ttime += 100;\n+\t\tif(time > MAX_WAIT_TIME)\n+\t\t    throw new JemmyException(\"Configuration loading error\");\n+\t    } catch (InterruptedException ex) {\n+\t\tLogger.getLogger(Config_Edit.class.getName()).log(Level.SEVERE, null, ex);\n+\t    }\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Edit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JListOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit05 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tmainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog dialog = configuration.openByKey();\n+\tdialog.pushLastConfigEditor();\n+\tJListOperator list = new JListOperator(dialog.getConfigDialog());\n+\tif (list.getSelectedIndex() != list.getModel().getSize() - 1) {\n+\t    errors.add(\"Selected element (\" + list.getSelectedIndex() + \") is not the last (\" + (list.getModel().getSize() - 1) + \") after last button pushing\");\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\twaitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tpushLastConfigEditor(config);\n+\/\/\tJListOperator list = new JListOperator(config);\n+\/\/\tif(list.getSelectedIndex() != list.getModel().getSize()-1)\n+\/\/\t    throw new JemmyException(\"Selected element (\" + list.getSelectedIndex() + \") is not the last (\" + (list.getModel().getSize()-1) + \") after last button pushing\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\t\/*\n+\t * Start JavaTest with the -NewDesktop option. Create a new workdirectory.\n+\t * Bring up Load confiugration under Configure menu. Bring up\n+\t * configuration editor by doing Ctrl-E. Click on Last button. It will navigate\n+\t * to the last question. The Last button should navigates to the last question\n+\t * where it says Completed.\n+\t *\/\n+\treturn \"Start JavaTest with the -NewDesktop option. Create a new workdirectory. Bring up Load confiugration under Configure menu. Bring up configuration editor by doing Ctrl-E. Click on Last button. It will navigate to the last question. The Last button should navigates to the last question where it says Completed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit05.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Edit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit06 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tmainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, false);\n+\n+\tConfigDialog config = configuration.openByKey();\n+\tconfig.pushDoneConfigEditor();\n+\tif (config.getConfigDialog().isVisible()) {\n+\t    errors.add(\"Config editor is not closed\");\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\twaitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tpushDoneConfigEditor(config);\n+\/\/\tif(config.isVisible())\n+\/\/\t    throw new JemmyException(\"Config editor is not closed\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\t\/*\n+\t * Start JavaTest with the -NewDesktop option. Create a new workdirectory.\n+\t * Bring up Load confiugration under Configure menu. Bring up Bring up\n+\t * configuration editor by doing Ctrl-E. Click on Done button. It will dismiss\n+\t * the editor dialog box. The Done button should dismiss the editor dialog box.\n+\t *\/\n+\treturn \"Start JavaTest with the -NewDesktop option. Create a new workdirectory. Bring up Load confiugration under Configure menu. Bring up Bring up configuration editor by doing Ctrl-E. Click on Done button. It will dismiss the editor dialog box. The Done button should dismiss the editor dialog box. \";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit06.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Edit;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit1 extends Test {\n+\n+    public Config_Edit1() {\n+        super();\n+        depricated = true;\n+    }\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration conf = mainFrame.getConfiguration();\n+        conf.load(CONFIG_NAME, true);\n+\n+        ConfigDialog cd = conf.openByKey();\n+        checkAnswers(cd.getConfigDialog());\n+        cd.closeByMenu();\n+        cd = conf.openByKey();\n+        checkAnswers(cd.getConfigDialog());\n+\n+        \/\/\tstartJavatestNewDesktop();\n+        \/\/\n+        \/\/\tJFrameOperator mainFrame = findMainFrame();\n+        \/\/\n+        \/\/\topenTestSuite(mainFrame);\n+        \/\/\n+        \/\/\tcreateWorkDirInTemp(mainFrame);\n+        \/\/\n+        \/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        \/\/\twaitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+        \/\/\n+        \/\/\topenConfigDialogByKey(mainFrame);\n+        \/\/\tcheckAnswers(findConfigEditor(mainFrame));\n+        \/\/\topenConfigDialogByKey(mainFrame);\n+        \/\/\tcheckAnswers(findConfigEditor(mainFrame));\n+    }\n+\n+    private void checkAnswers(JDialogOperator config) {\n+        JListOperator list = new JListOperator(config);\n+        list.setSelectedIndex(list.getModel().getSize() - 1);\n+        if (!new JTextFieldOperator(config, new NameComponentChooser(\"qu.title\")).getText().equals(\"Congratulations!\")) {\n+            throw new JemmyException(\"Configuration is not complete\");\n+        }\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that reopening Config Editor will show 2 full configurations. This test is depricated as far as Config Editor is now modal and it is not possible to open 2 such dialogs.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit1.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Edit;\n+\n+import java.util.Hashtable;\n+import java.util.Iterator;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit2 extends Test {\n+    private final static Hashtable standartTable;\n+\n+    public Config_Edit2() {\n+\tdepricated = true;\n+    }\n+    \n+    static {\n+\tstandartTable = new Hashtable();\n+\tstandartTable.put(\"Cell_5_1\", \"false\");\n+\tstandartTable.put(\"Cell_5_0\", \"val6\");\n+\tstandartTable.put(\"Cell_7_1\", \"drinkme\");\n+\tstandartTable.put(\"Cell_7_0\", \"unclassified\");\n+\tstandartTable.put(\"Cell_0_1\", \"foo\");\n+\tstandartTable.put(\"Cell_0_0\", \"value1\");\n+\tstandartTable.put(\"Cell_2_1\", \"65000\");\n+\tstandartTable.put(\"Cell_2_0\", \"colors\");\n+\tstandartTable.put(\"Cell_4_1\", \"\/tmp\/foo\");\n+\tstandartTable.put(\"Cell_4_0\", \"value5\");\n+\tstandartTable.put(\"Cell_6_1\", \"yEs\");\n+\tstandartTable.put(\"Cell_6_0\", \"val7\");\n+\tstandartTable.put(\"Cell_1_1\", \"1050\");\n+\tstandartTable.put(\"Cell_1_0\", \"port\");\n+\tstandartTable.put(\"Cell_3_1\", \"baz\");\n+\tstandartTable.put(\"Cell_3_0\", \"val4\");\n+    }\n+    \n+    public void testImpl() throws Exception {\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\tCreateWorkdir.createWorkDir(CreateWorkdir.openWorkDirectoryOpening(mainFrame), LOCAL_PATH, WD_RUN, false);\n+\/\/\n+\/\/\tnew JTextFieldOperator(mainFrame, getExecResource(\"br.worst.1\"));\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tcheckAnswers(findConfigEditor(mainFrame));\n+    }\n+    \n+    private void checkAnswers(JDialogOperator config) {\n+\tJListOperator list = new JListOperator(config);\n+\tlist.setSelectedIndex(7);\n+\t\n+\tHashtable table = new JTableOperator(config).getDump();\n+\tIterator iter = standartTable.keySet().iterator();\n+\twhile(iter.hasNext()) {\n+\t    Object key = iter.next();\n+\t    if(!table.containsKey(key) || !table.containsValue(standartTable.get(key)))\n+\t\tthrow new JemmyException(\"Element \" + key + \"=\" + standartTable.get(key) + \" was not found in table 'Capability settings'\");\n+\t}\n+\/\/\tif(!new JTextFieldOperator(config, new NameComponentChooser(\"qu.title\")).getText().equals(\"Congratulations!\")) {\n+\/\/\t    throw new JemmyException(\"Configuration is not complete\");\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"Test is depricated. TestSuite's configuration is too small\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit2.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a new workdirectory. \n+ * Bring up Load confiugration under Configure menu. Bring up \n+ * configuration editor by doing Ctrl-E. The Back button is grayed out. Click \n+ * on Next button. It will navigate to the next question. Click on Back button. \n+ * It should navigate to the previous question. The Back button navigates back \n+ * an forth between questions. \n+ *\/\n+package jthtest.Config_Edit;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit3 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration conf = mainFrame.getConfiguration();\n+        conf.load(CONFIG_NAME, true);\n+\n+        ConfigDialog cd = conf.openByKey();\n+        cd.pushBackConfigEditor();\n+        if (cd.getBackButton().isEnabled()) {\n+            errors.add(\"Back button is enabled while unexpected\");\n+        }\n+        cd.pushNextConfigEditor();\n+        cd.pushBackConfigEditor();\n+        if (!cd.isSelectedIndex(0)) {\n+            errors.add(\"After back button pushing list selection is not on first question\");\n+        }\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\twaitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tJButtonOperator previous = new JButtonOperator(config, \"Back\");\n+\/\/\tprevious.push();\n+\/\/\tif(previous.isEnabled())\n+\/\/\t    throw new JemmyException(\"Back button is enabled while unexpected\");\n+\/\/\tpushNextConfigEditor(config);\n+\/\/\tprevious.push();\n+\/\/\tif(!new JListOperator(config).isSelectedIndex(0))\n+\/\/\t    throw new JemmyException(\"After back button pushing list selection is not on first page\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a new workdirectory. Bring up Load confiugration under Configure menu. Bring up configuration editor by doing Ctrl-E. The Back button is grayed out. Click on Next button. It will navigate to the next question. Click on Back button. It should navigate to the previous question. The Back button navigates back an forth between questions.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit3.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a new workdirectory. \n+ * Bring up Load confiugration under Configure menu. Bring up Bring up \n+ * configuration editor by doing Ctrl-E. Click on Next button. It will \n+ * navigate to the next question. The Next button navigates to the next question. \n+ *\/\n+\n+package jthtest.Config_Edit;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit4 extends Config_Edit {\n+    public static void main(String args[])  {\n+\tJUnitCore.main(\"jthtest.gui.Config_Edit.Config_Edit4\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Edit4() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\twaitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\t\n+\tpushNextConfigEditor(config);\n+\tif(!new JListOperator(config).isSelectedIndex(2))\n+\t    throw new JemmyException(\"After next button pushing list selection is not on third page\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit4.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ *  Start JavaTest with the -NewDesktop option. Create a new workdirectory. \n+ * Bring up Bring up configuration editor by doing Ctrl-E. Answer one question \n+ * in the interview. Click on Done button. A Save configuration file chooser \n+ * will display. Enter a valid jti name. Bring up Bring up configuration editor \n+ * by doing Ctrl-E. The name of the jti file should be displayed. A Save \n+ * Configuration File chooser should be display to save the jti file. \n+ *\/\n+\n+package jthtest.Config_Edit;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JTextField;\n+import jthtest.Tools;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Edit7 extends Config_Edit {\n+    public static void main(String args[])  {\n+\tJUnitCore.main(\"jthtest.gui.Config_Edit.Config_Edit7\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Edit7() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\twaitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\n+\topenConfigCreation(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\tpushNextConfigEditor(config);\n+\tnew JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some_jti\");\n+\tpushDoneConfigEditor(config);\n+\t\n+\tsaveConfig();\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tif(!findConfigEditor(mainFrame).getTitle().contains(\"some_jti\")) {\n+        File f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+\t    f.delete();\n+\t    throw new JemmyException(\"Wrong jti filename in config editor: \" + findConfigEditor(mainFrame).getTitle());\n+    }\n+        File f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+\t    f.delete();\n+    }\n+\n+    private void saveConfig() {\n+\tFile f = new File(LOCAL_PATH + \"jt_gui_test_temp_some_jti-this_file_will_be_deleted.jti\");\n+\tif(f.exists())\n+\t    f.delete();\n+\tJDialogOperator save = new JDialogOperator(getExecResource(\"ce.okToClose.title\"));\n+\tnew JButtonOperator(save, \"Ok\").push();\n+\tsave = new JDialogOperator(getExecResource(\"ce.save.title\"));\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField)Tools.getComponent(save, new String[] {\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(\"jt_gui_test_temp_some_jti-this_file_will_be_deleted\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Edit\/Config_Edit7.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import jthtest.ConfigTools;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load extends ConfigTools {\n+    \n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load05 extends Test {\n+\n+\/\/    JFrameOperator mainFrame;\n+\/\/    JDialogOperator config;\n+    public void testImpl() throws Exception {\n+\n+\tmainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog config = configuration.openByKey();\n+\tmakeChange(config);\n+\n+\tconfig.load(Tools.CONFIG_NAME, true);\n+\n+\tJDialogOperator warningDialog = new JDialogOperator(mainFrame.getJFrameOperator(), \"Warning: Unsaved Changes\");\n+\tif (!warningDialog.isVisible()) {\n+\t    throw new JemmyException(\"Dialog is not visible\");\n+\t}\n+\tnew JButtonOperator(warningDialog, \"Yes\").push();\n+\n+\trestoreChange(config);\n+\tconfig.pushDoneConfigEditor();\n+\n+\/\/\ttry {\n+\/\/\t    startJavatestNewDesktop();\n+\/\/\n+\/\/\t    mainFrame = findMainFrame();\n+\/\/\n+\/\/\t    openTestSuite(mainFrame);\n+\/\/\n+\/\/\t    createWorkDirInTemp(mainFrame);\n+\/\/\n+\/\/\t    openConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\t    Config_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\t    openConfigDialogByKey(mainFrame);\n+\/\/\t    config = findConfigEditor(mainFrame);\n+\/\/\t    makeChange();\n+\/\/\n+\/\/\t    openConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\n+\/\/\t    JDialogOperator warningDialog = new JDialogOperator(mainFrame, \"Warning: Unsaved Changes\");\n+\/\/\t    if (!warningDialog.isVisible()) {\n+\/\/\t\tthrow new JemmyException(\"Dialog is not visible\");\n+\/\/\t    }\n+\/\/\t    new JButtonOperator(warningDialog, \"Yes\").push();\n+\/\/\n+\/\/\t    openConfigDialogByMenu(mainFrame);\n+\/\/\t    config = findConfigEditor(mainFrame);\n+\/\/\t    restoreChange();\n+\/\/\t    pushDoneConfigEditor(config);\n+\/\/\t} finally {\n+\/\/\t}\n+    }\n+\n+\/\/    private void makeChange() {\n+    private void makeChange(ConfigDialog config) {\n+\tJListOperator list = new JListOperator(config.getConfigDialog());\n+\tlist.selectItem(1);\n+\tnew JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\")).setText(\"changed democonfig\");\n+    }\n+\n+\/\/    private void restoreChange() {\n+    private void restoreChange(ConfigDialog config) {\n+\tJListOperator list = new JListOperator(config.getConfigDialog());\n+\tlist.selectItem(1);\n+\tJTextFieldOperator text = new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+\tif (!text.getText().equals(\"changed democonfig\")) {\n+\t    throw new JemmyException(\"Config file wasn't saved\");\n+\t}\n+\ttext.setText(\"democonfig\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load05.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import java.awt.Component;\n+import javax.swing.JMenuItem;\n+import javax.swing.MenuElement;\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load06 extends Test {\n+\/\/    private JFrameOperator mainFrame;\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\tconfiguration.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\n+\tcheckMenu(mainFrame);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tmainFrame = findMainFrame();\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), SECOND_JTI);\n+\/\/\n+\/\/\tcheckMenu();\n+    }\n+\n+\/\/    private void checkMenu() {\n+    private void checkMenu(JTFrame mainFrame) {\n+\tJMenuItemOperator item = mainFrame.getConfigure_LoadRecentConfigurationMenu();\n+\tif(!item.isEnabled()) {\n+\t    errors.add(\"Configuration -> Load Recent Configuration menu is not enabled while expected\");\n+\t    return;\n+\t}\n+\tJMenuItemOperator[] elements = mainFrame.getConfigure_LoadRecentConfiguration_subMenu();\n+\tif (elements.length != 2) {\n+\t    errors.add(\"Count of elements is \" + elements.length + \" while expected 2\");\n+\t}\n+\tif (elements.length > 0) {\n+\t    if (!elements[0].getText().endsWith(ConfigTools.SECOND_CONFIG_NAME)) {\n+\t\terrors.add(\"First element in the list is not 'democonfig_second.jti'\");\n+\t    }\n+\t}\n+\tif (elements.length > 1) {\n+\t    if (!elements[1].getText().endsWith(ConfigTools.CONFIG_NAME)) {\n+\t\terrors.add(\"Second element in the list is not 'democonfig.jti'\");\n+\t    }\n+\t}\n+\n+\/\/\tJMenuItem item = new JMenuOperator(mainFrame, getExecResource(\"ch.menu\")).pushMenu((\"ch.menu\") + \"|\" + getExecResource(\"ce.history.menu\"), \"|\");\n+\/\/\tMenuElement[] elements = item.getSubElements()[0].getSubElements();\n+\/\/\tif (elements.length != 2) {\n+\/\/\t    throw new JemmyException(\"Count of elements is not 2\");\n+\/\/\t}\n+\/\/\tif (!((JMenuItem) elements[0]).getText().endsWith(SECOND_JTI)) {\n+\/\/\t    throw new JemmyException(\"First element in the list is not 'democonfig_second.jti'\");\n+\/\/\t}\n+\/\/\tif (!((JMenuItem) elements[1]).getText().endsWith(DEFAULT_JTI)) {\n+\/\/\t    throw new JemmyException(\"Second element in the list is not 'democonfig.jti'\");\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test loads 2 different configuration files and checks that Recent Configuration menu contains both of them\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load06.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+\n+public class Config_Load06_1 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\tconfiguration.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\tcheckMenu(configuration.openByKey());\n+    }\n+\n+    private void checkMenu(ConfigDialog config) {\n+\tJMenuItemOperator item = config.getFile_LoadRecentConfigurationMenu();\n+\tif(!item.isEnabled()) {\n+\t    errors.add(\"Configuration Dialog: File -> Load Recent Configuration menu is not enabled while expected\");\n+\t    return;\n+\t}\n+\tJMenuItemOperator[] elements = config.getFile_LoadRecentConfiguration_subMenu();\n+\tif (elements.length != 2) {\n+\t    errors.add(\"Count of elements is \" + elements.length + \" while expected 2\");\n+\t}\n+\tif (elements.length > 0) {\n+\t    if (!elements[0].getText().endsWith(ConfigTools.SECOND_CONFIG_NAME)) {\n+\t\terrors.add(\"First element in the list is not 'democonfig_second.jti'\");\n+\t    }\n+\t}\n+\tif (elements.length > 1) {\n+\t    if (!elements[1].getText().endsWith(ConfigTools.CONFIG_NAME)) {\n+\t\terrors.add(\"Second element in the list is not 'democonfig.jti'\");\n+\t    }\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test loads 2 different configuration files and checks that File -> Recent Configuration menu in Configuration Editor dialog contains both of them\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load06_1.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_Load;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load07 extends Test {\n+\/\/    JFrameOperator mainFrame;\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(ConfigTools.CONFIG_NAME, true);\n+\n+\tConfigDialog config = configuration.openByKey();\n+\tconfig.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\n+\tverifyOpeningNewConfigFile(config);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tmainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\n+\/\/\tJDialogOperator fileChooser = openLoadConfigDialogByMenu(mainFrame);\n+\/\/\topenConfigFile(fileChooser, DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\n+\/\/\tfileChooser = openLoadConfigDialogByMenu(mainFrame);\n+\/\/\topenConfigFile(fileChooser, SECOND_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, SECOND_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\n+\/\/\tverifyOpeningNewConfigFile();\n+    }\n+\n+\/\/    private boolean verifyOpeningNewConfigFile() {\n+    private boolean verifyOpeningNewConfigFile(ConfigDialog config) {\n+\tJListOperator list = new JListOperator(config.getConfigDialog());\n+\tlist.selectItem(1);\n+\treturn new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\")).getText().equals(ConfigTools.SECOND_CONFIG_NAME);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"Load a configuration, open Configuration Editor. Load another configuration from it. Configuration Editor internals should be repainted\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load07.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load1 extends Config_Load {\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.Config_Load.Config_Load1\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Load1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame); \n+\t\n+\topenTestSuite(mainFrame);\n+\t\n+\tcreateWorkDirInTemp(mainFrame);\n+\t\n+\topenLoadConfigDialogByMenu(mainFrame);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load1.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load2 extends Config_Load {\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.Config_Load.Config_Load2\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Load2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame); \n+\t\n+\topenTestSuite(mainFrame);\n+\t\n+\tcreateWorkDirInTemp(mainFrame);\n+\t\n+\tJDialogOperator fileChooser = openLoadConfigDialogByMenu(mainFrame);\n+\topenConfigFile(fileChooser, CONFIG_NAME);\n+\t\n+\tif(!new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\")).getText().equals(CONFIG_NAME)) {\n+\t    throw new JemmyException(\"Configuration file wasn't opened\"); \n+\t}\n+\n+\topenConfigDialogByKey(mainFrame);\n+\t\n+\tfindConfigEditor(mainFrame);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load2.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load3 extends Config_Load {\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.Config_Load.Config_Load3\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Load3() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame); \n+\t\n+\topenTestSuite(mainFrame);\n+\t\n+\tcreateWorkDirInTemp(mainFrame);\n+\t\n+\tJDialogOperator fileChooser = openLoadConfigDialogByMenu(mainFrame);\n+\topenConfigFile(fileChooser, \"democonfig_another_suite.jti\");\n+\t\n+\tnew JDialogOperator(WINDOWNAME + \" Harness: Error\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load3.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load4 extends Config_Load {\n+    private JFrameOperator mainFrame;\n+    \n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.Config_Load.Config_Load4\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Load4() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tmainFrame = findMainFrame();\n+\t\n+\topenTestSuite(mainFrame);\n+\t\n+\tcreateWorkDirInTemp(mainFrame);\n+\t\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\t\n+\tpushDoneConfigEditor(findConfigEditor(mainFrame));\n+\t\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), SECOND_CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, SECOND_CONFIG_NAME);\n+\n+\topenConfigDialogByKey(mainFrame);\n+\t\n+\tif(!verifyOpeningNewConfigFile()) {\n+\t    throw new JemmyException(\"Old config is shown in config editor\");\n+\t}\n+    }\n+    \n+    private boolean verifyOpeningNewConfigFile() {\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\tJListOperator list = new JListOperator(config);\n+\tlist.selectItem(1);\n+\treturn new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText().equals(SECOND_CONFIG_NAME);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load4.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_Load;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_Load8 extends Config_Load {\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.Config_Load.Config_Load8\");\n+    }\n+    \n+    @Test\n+    public void testConfig_Load8() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame); \n+\t\n+\topenTestSuite(mainFrame);\n+\t\n+\tcreateWorkDirInTemp(mainFrame);\n+\t\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), \"democonfig with spaces.jti\");\n+\topenConfigDialogByKey(mainFrame);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_Load\/Config_Load8.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_LoadEdit;\n+\n+import jthtest.ConfigTools;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_LoadEdit extends ConfigTools {\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_LoadEdit\/Config_LoadEdit.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_LoadEdit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_LoadEdit01 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog configDialog = configuration.openByKey();\n+\tconfigDialog.openBrowser(true);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tfindConfigEditor(mainFrame);\n+\/\/\n+\/\/\topenLoadConfigDialogByMenu(mainFrame);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\t\/*\n+\t * Start JavaTest with the -NewDesktop option. Create an new workdirectory.\n+\t * Bring up Load configuration under Configure menu. Bring up Edit\n+\t * configuration by doing Ctrl-E. Bring Load under file menu. A file chooser\n+\t * will be displayed to select a jti file to be used. Click on Cancel button\n+\t * to dismiss the dialog box. A file chooser should be displayed for loading\n+\t * an existing jti file.\n+\t *\/\n+\treturn \"Start JavaTest with the -NewDesktop option. Create an new workdirectory. Bring up Load configuration under Configure menu. Bring up Edit configuration by doing Ctrl-E. Bring Load under file menu. A file chooser will be displayed to select a jti file to be used. Click on Cancel button to dismiss the dialog box. A file chooser should be displayed for loading an existing jti file.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_LoadEdit\/Config_LoadEdit01.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_LoadEdit;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_LoadEdit02 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog configDialog = configuration.openByKey();\n+\tconfigDialog.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\n+\tif (!configDialog.getConfigDialog().getTitle().contains(ConfigTools.SECOND_CONFIG_NAME)) {\n+\t    errors.add(\"Configuration editor dialog box has invalid title - \" + configDialog.getConfigDialog().getTitle());\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), SECOND_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, SECOND_JTI);\n+\/\/\tif(!findConfigEditor(mainFrame).getTitle().contains(SECOND_JTI)) {\n+\/\/\t    throw new JemmyException(\"Configuration editor dialog box has invalid title - \" + findConfigEditor(mainFrame).getTitle() + \" (exptcted \" + SECOND_JTI + \")\");\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\t\/*\n+\t * Start JavaTest with the -NewDesktop option. Create an new workdirectory.\n+\t * Bring up Load configuration under Configure menu. Bring up Edit\n+\t * configuration by doing Ctrl-E. Bring Load under file menu. A file chooser\n+\t * will be displayed to select a jti file to be used. Select a valid and\n+\t * existing jti file. Click on Load File. A configuration editor will be\n+\t * displayed. The selected jti file should be displayed.\n+\t *\/\n+\treturn \"Start JavaTest with the -NewDesktop option. Create an new workdirectory. Bring up Load configuration under Configure menu. Bring up Edit configuration by doing Ctrl-E. Bring Load under file menu. A file chooser will be displayed to select a jti file to be used. Select a valid and existing jti file. Click on Load File. A configuration editor will be displayed. The selected jti file should be displayed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_LoadEdit\/Config_LoadEdit02.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_LoadEdit;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+public class Config_LoadEdit03 extends Test {\n+\n+\tpublic Config_LoadEdit03() {\n+\t\tsuper();\n+\t\ttoCopyFiles.add(new File(\"democonfig_another_suite.jti\"));\n+\t}\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\t\tConfiguration configuration = mainFrame.getConfiguration();\n+\t\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\t\tconfiguration.openByKey().load(\"democonfig_another_suite.jti\", true);\n+\n+\t\tJDialogOperator error = new JDialogOperator(Tools.WINDOWNAME + \" Harness: Error\");\n+\t\tnew JButtonOperator(error, \"Ok\").push();\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), \"democonfig_another_suite.jti\");\n+\/\/\n+\/\/\tJDialogOperator error = new JDialogOperator(NAME + \" Harness: Error\");\n+\/\/\tnew JButtonOperator(error, \"Ok\").push();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\t\/*\n+\t\t * Start JavaTest with the -NewDesktop option. Create an new workdirectory.\n+\t\t * Bring up Bring up configuration editor by doing Ctrl-E. Select a jti file\n+\t\t * that was created for a different testsuite. Click on Load File. An error\n+\t\t * message should generate indicating that the file data does not apply to\n+\t\t * this interview. Click on Ok button to exit. An error should generated\n+\t\t * indicating that data does not apply to the interview.\n+\t\t *\/\n+\t\treturn \"Start JavaTest with the -NewDesktop option. Create an new workdirectory. Bring up Bring up configuration editor by doing Ctrl-E. Select a jti file that was created for a different testsuite. Click on Load File. An error message should generate indicating that the file data does not apply to this interview. Click on Ok button to exit. An error should generated indicating that data does not apply to the interview.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_LoadEdit\/Config_LoadEdit03.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_LoadEdit;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_LoadEdit05 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog configDialog = configuration.openByKey();\n+\tnew JTextFieldOperator(configDialog.getConfigDialog(), new NameComponentChooser(\"str.txt\")).typeText(\"some_change\");\n+\n+\tconfigDialog.load(ConfigTools.SECOND_CONFIG_NAME, true);\n+\tJDialogOperator warning = new JDialogOperator(Tools.getExecResource(\"ce.load.warn.title\"));\n+\tnew JButtonOperator(warning, \"Cancel\").push();\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tnew JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some_change\");\n+\/\/\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), SECOND_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, SECOND_JTI);\n+\/\/\n+\/\/\tJDialogOperator warning = new JDialogOperator(getExecResource(\"ch.edited.warn.title\"));\n+\/\/\tnew JButtonOperator(warning, \"Cancel\").push();\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\t\/*\n+\t * Start JavaTest with the -NewDesktop option. Create a new workdirectory.\n+\t * Bring up Load configuration under Configure menu. Select an existing jti\n+\t * file. Click on Load File. Bring up Edit configuration by doing Ctrl-E to\n+\t * verify that the jti is loaded. Make one change to the config file. Bring\n+\t * up Load configuration under file menu. A warning should be displayed to\n+\t * ask if the changes need to be saved. Click on NO button. The new change\n+\t * will be saved.\n+\t *\/\n+\treturn \"Start JavaTest with the -NewDesktop option. Create a new workdirectory. Bring up Load configuration under Configure menu. Select an existing jti file. Click on Load File. Bring up Edit configuration by doing Ctrl-E to verify that the jti is loaded. Make one change to the config file. Bring up Load configuration under file menu. A warning should be displayed to ask if the changes need to be saved. Click on NO button. The new change will be saved.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_LoadEdit\/Config_LoadEdit05.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_New;\n+\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_New01 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame frame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\tConfigDialog cd = frame.getConfiguration().openByKey();\n+\tboolean firstly = cd.isFullConfiguration();\n+\n+\tcd.closeByMenu();\n+\n+\tcd = frame.getConfiguration().create(true);\n+\n+\tboolean secondly = cd.isFullConfiguration();\n+\n+\tif (secondly) {\n+\t    errors.add(\"Configuration is full after creation\");\n+\t}\n+\tif (!firstly) {\n+\t    errors.add(\"Warning: configuration was not full before creation\");\n+\t}\n+\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tboolean firstly = isFullConfiguration(config);\n+\/\/\n+\/\/\topenConfigCreationBlock(mainFrame);\n+\/\/\tconfig = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tboolean secondly = isFullConfiguration(config);\n+\/\/\tif(secondly)\n+\/\/\t    throw new JemmyException(\"Configuration is full after creation\");\n+\/\/\n+\/\/\tif(!firstly)\n+\/\/\t    throw new JemmyException(\"Warning: configuration was not full before creation\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This tests checks that configuration is loaded properly whith -open \" +\n+\t\t\"<WD_with_config> option and is nullified when creating new config. \" +\n+\t\t\"Is depricated because configuration can't be changed when Configuration \" +\n+\t\t\"Editor is shown (initially this feature was tested).\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_New\/Config_New01.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_New;\n+\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_New02 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\t\/\/ This one works veeeery slow. I don't know why. Something with menus. \n+\tif (mainFrame.getConfiguration().create(false).isFullConfiguration()) {\n+\t    errors.add(\"Newly created configuration is full while unexpected\");\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\n+\/\/\topenConfigCreationBlock(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tif (isFullConfiguration(config)) {\n+\/\/\t    throw new JemmyException(\"Configuration is full after creation\");\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks that a newly created configuration is not full.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_New\/Config_New02.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_New;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_New03 extends Test {\n+\/\/    JDialogOperator config;\n+\n+    ConfigDialog cd;\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tcd = mainFrame.getConfiguration().create(true);\n+\n+\tfillConfiguration();\n+\n+\tif (!cd.isFullConfiguration()) {\n+\t    errors.add(\"\");\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\n+\/\/\topenConfigCreationBlock(mainFrame);\n+\/\/\tconfig = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tfillConfiguration();\n+\/\/\tif(!isFullConfiguration(config))\n+\/\/\t    throw new JemmyException(\"Configuration is not full after filling while expected\");\n+    }\n+\n+    private void fillConfiguration() {\n+\tJDialogOperator config = cd.getConfigDialog();\n+\tcd.pushLastConfigEditor();\n+\tnew JTextFieldOperator(config, 1).typeText(\"some config\");\n+\tcd.pushLastConfigEditor();\n+\tnew JTextFieldOperator(config, 1).typeText(\"some description\");\n+\tcd.pushLastConfigEditor();\n+\tJTableOperator table = new JTableOperator(config);\n+\ttable.clickOnCell(0, 0);\n+\tcd.pushLastConfigEditor();\n+        String text; \n+        if (File.separatorChar == '\/') {\n+            text = System.getProperty(\"java.home\") + \"\/bin\/java\";\n+        } else {\n+            text = System.getProperty(\"java.home\") + \"\\\\bin\\\\java.exe\";\n+        }\n+\tnew JTextFieldOperator(config, new NameComponentChooser(\"file.txt\")).typeText(text);\n+\tcd.pushLastConfigEditor();\n+\n+\n+\/\/        pushLastConfigEditor(config);\n+\/\/        new JTextFieldOperator(config, 1).typeText(\"some config\");\n+\/\/        pushLastConfigEditor(config);\n+\/\/        new JTextFieldOperator(config, 1).typeText(\"some description\");\n+\/\/\tpushLastConfigEditor(config);\n+\/\/\tJTableOperator table = new JTableOperator(config);\n+\/\/\ttable.clickOnCell(0, 0);\n+\/\/\tpushLastConfigEditor(config);\n+\/\/\tnew JTextFieldOperator(config, new NameComponentChooser(\"file.txt\")).typeText(System.getProperty(\"java.home\") + File.separator + \"bin\" + File.separator + \"java\");\n+\/\/\tpushLastConfigEditor(config);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_New\/Config_New03.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_New;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_New04 extends Test {\n+\n+    public Config_New04() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.LOCAL_PATH, Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog configDialog = configuration.openByKey();\n+\tconfigDialog.selectQuestion(2);\n+\tnew JTextFieldOperator(configDialog.getConfigDialog(), new NameComponentChooser(\"str.txt\")).typeText(\"some_text\");\n+\tconfigDialog.closeByMenu();\n+\n+\tnew JDialogOperator(\"Warning: Unsaved Changes\");\n+\n+\/\/\tmainFrame.getConfiguration().\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tselectQuestion(config, 2);\n+\/\/\tnew JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some_text\");\n+\/\/\topenConfigCreation(mainFrame);\n+\/\/\tnew JDialogOperator(\"Warning: Unsaved Changes\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated - Configuration menu items are disabled when editing\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_New\/Config_New04.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_NewEdit;\n+\n+import jthtest.ConfigTools;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_NewEdit extends  ConfigTools{\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_NewEdit\/Config_NewEdit.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_NewEdit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_NewEdit01 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\tmainFrame.getWorkDirectory().openWorkDirectory(Tools.LOCAL_PATH, Tools.DEFAULT_WD_NAME);\n+\n+\t\tConfigDialog config = mainFrame.getConfiguration().openByKey();\n+\t\tif (!config.isFullConfiguration()) {\n+\t\t\terrors.add(\"Warning! Configuration in trunk directory isn't full for default WD. This can make tests unstable.\");\n+\t\t}\n+\n+\t\tconfig.getFile_NewConfigurationMenu().push();\n+\n+\t\tif (config.isFullConfiguration()) {\n+\t\t\terrors.add(\"Configuration was not reset after creation\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that after new configuration creation the Config Editor's contains would be refreshed. Open Work Directory with configuration, open Configuration Editor, create new configuration. Configuration Editor should be repainted.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_NewEdit\/Config_NewEdit01.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_NewEdit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_NewEdit02 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tmainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog config = configuration.openByKey();\n+\tif (!config.isFullConfiguration()) {\n+\t    errors.add(\"Warning! Configuration in trunk directory isn't full for default WD. This can make tests unstable.\");\n+\t}\n+\tconfig.getFile_NewConfigurationMenu().push();\n+\tif (config.isFullConfiguration()) {\n+\t    errors.add(\"Configuration was not reset after creation\");\n+\t}\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tString warning = \"\";\n+\/\/\tif(!isFullConfiguration(config))\n+\/\/\t    warning = \"Warning! Configuration in trunk directory isn't full for default WD. This can make tests unstable.\\n\";\n+\/\/\n+\/\/\topenConfigCreationBlock(mainFrame);\n+\/\/\tif(isFullConfiguration(config))\n+\/\/\t    throw new JemmyException(warning + \"Configuration was not reset after creation\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks that after new configuration creation the Config Editor's contains would be refreshed. Load configuration, open Configuration Editor, create new configuration. Configuration Editor should be repainted\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_NewEdit\/Config_NewEdit02.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_NewEdit;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_NewEdit03 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = new JTFrame(true);\n+\n+\tmainFrame.openDefaultTestSuite();\n+\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\tConfiguration configuration = mainFrame.getConfiguration();\n+\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\tConfigDialog config = configuration.openByKey();\n+\tif (!config.isFullConfiguration()) {\n+\t    errors.add(\"Warning! Configuration in trunk directory isn't full for default WD. This can make tests unstable.\");\n+\t}\n+\n+\tconfig.getFile_NewConfigurationMenu().push();\n+\tif (config.isFullConfiguration()) {\n+\t    errors.add(\"Configuration was not reset after creation\");\n+\t}\n+\tconfig.pushDoneConfigEditor();\n+\tnew JDialogOperator(ConfigDialog.getConfirmCloseIncomleteConfigurationDialogName());\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tString warning = \"\";\n+\/\/\tif(!isFullConfiguration(config))\n+\/\/\t    warning = \"Warning! Configuration in trunk directory isn't full for default WD. This can make tests unstable.\\n\";\n+\/\/\n+\/\/\topenConfigCreationBlock(mainFrame);\n+\/\/\tif(isFullConfiguration(config))\n+\/\/\t    throw new JemmyException(warning + \"Configuration was not reset after creation\");\n+\/\/\n+\/\/\tpushDoneConfigEditor(config);\n+\/\/\tnew JDialogOperator(\"Configuration Editor: Confirm Close\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks that warning message is shown if user tryes to close Configuration Editor with unsaved configuration.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_NewEdit\/Config_NewEdit03.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_SaveEdit;\n+\n+import jthtest.ConfigTools;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_SaveEdit extends ConfigTools {\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_SaveEdit\/Config_SaveEdit.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Load a configuration file, open Configuration Editor. Change value in description \n+ * and save configuration. Close WD, reopen it, value should be changed\n+ *\/\n+package jthtest.Config_SaveEdit;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_SaveEdit01 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\tFile createdWD = mainFrame.createWorkDirectoryInTemp();\n+\t\taddUsedFile(createdWD);\n+\n+\t\tConfiguration configuration = mainFrame.getConfiguration();\n+\t\tconfiguration.load(Tools.CONFIG_NAME, true);\n+\n+\t\tConfigDialog config = configuration.openByKey();\n+\t\tconfig.selectQuestion(2);\n+\t\tJTextFieldOperator jTextFieldOperator = new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+\t\tString save = jTextFieldOperator.getText();\n+\t\tjTextFieldOperator.setText(\"some_description\");\n+\t\tconfig.getFile_SaveMenu().push();\n+\t\tconfig.pushDoneConfigEditor();\n+\n+\t\tmainFrame.closeCurrentTool();\n+\n+\t\tmainFrame.getWorkDirectory().openWorkDirectory(createdWD);\n+\t\tTools.waitForWDLoading(mainFrame.getJFrameOperator(), Tools.WDLoadingResult.SOME_NOTRUN);\n+\n+\t\tconfig = configuration.openByKey();\n+\t\tconfig.selectQuestion(2);\n+\t\tjTextFieldOperator = new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+\t\tif (!jTextFieldOperator.getText().equals(\"some_description\")) {\n+\t\t\terrors.add(\"description was not saved\");\n+\t\t}\n+\t\tjTextFieldOperator.setText(save);\n+\t\tconfig.pushDoneConfigEditor();\n+\t\tmainFrame.closeAllTools();\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tcloseQS(mainFrame);\n+\/\/\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), DEFAULT_JTI);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, DEFAULT_JTI);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tselectQuestion(config, 2); \/\/ description\n+\/\/\tJTextFieldOperator jTextFieldOperator = new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\"));\n+\/\/\tString save = jTextFieldOperator.getText();\n+\/\/\tjTextFieldOperator.setText(\"some_description\");\n+\/\/\tnew JMenuOperator(config, \"File\").pushMenuNoBlock(new String[] {\"File\", \"Save\"});\n+\/\/\tpushDoneConfigEditor(config);\n+\/\/\n+\/\/\tnew JMenuOperator(mainFrame, \"File\").pushMenu(new String[] {\"File\", \"Close\"});\n+\/\/\tCreateWorkdir.createWorkDir(CreateWorkdir.openWorkDirectoryOpening(mainFrame), TEMP_PATH, TEMP_WD, false);\n+\/\/\/\/\topenWorkDirectory(mainFrame, TEMP_PATH + TEMP_WD);\n+\/\/\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tconfig = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tselectQuestion(config, 2);\n+\/\/\tjTextFieldOperator = new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\"));\n+\/\/\tif(!jTextFieldOperator.getText().equals(\"some_description\"))\n+\/\/\t    throw new JemmyException(\"description was not saved\");\n+\/\/\tjTextFieldOperator.setText(save);\n+\/\/\tpushDoneConfigEditor(config);\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"Load a configuration file, open Configuration Editor. Change value in description and save configuration. Close WD, reopen it, value should be changed.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_SaveEdit\/Config_SaveEdit01.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Config_SaveEdit;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Config_SaveEdit2 extends Config_SaveEdit {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Config_SaveEdit.Config_SaveEdit2\");\n+    }\n+    \n+    @Test\n+    public void testConfig_SaveEdit2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+\tFile f = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+    if(f.exists())\n+        f.delete();\n+    f = null;\n+\tstartJavatestNewDesktop();\n+\tJFrameOperator mainFrame = findMainFrame();\n+\tcloseQS(mainFrame);\n+\t\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigCreation(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\t\n+\tsaveConfig(config, \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted\");\n+\t\n+\tf = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+\tint t = 0; \n+\twhile(t < 1000 && !f.exists()) {\n+\t    f = new File(LOCAL_PATH + \"jt_gui_test_Config_SaveEdit2_test_this_file_will_be_deleted.jti\");\n+\t    t += 100; \n+\t    Thread.sleep(100);\n+\t}\n+\tif(!f.exists())\n+\t    throw new JemmyException(\"File was not created\");\n+\tf.delete();\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_SaveEdit\/Config_SaveEdit2.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class Config_TestTree1 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration conf = mainFrame.getConfiguration();\n+        conf.load(CONFIG_NAME, true);\n+        \n+        ConfigDialog cd = conf.openByMenu(true);\n+        ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+        \n+        int initRowCount = tree.getRowCount();\n+        SelectionTree stree = tree.getTree();\n+        int initSelected = stree.getSelection().length;\n+        if (initRowCount != 3) {\n+            errors.add(\"Initially there are not 3 visible rows in the tree\");\n+        }\n+        if (initSelected != 1) {\n+            errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+        }\n+\n+        tree.clickOnRow(0);\n+        if (stree.getSelectionRows()[0] != 0) {\n+            errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 0\");\n+        }\n+        tree.clickOnRow(1);\n+        if (stree.getSelectionRows()[0] != 1) {\n+            errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 1\");\n+        }\n+        tree.clickOnRow(2);\n+        if (stree.getSelectionRows()[0] != 2) {\n+            errors.add(stree.getSelectionRows()[0] + \" row is selected while expected 2\");\n+        }\n+        \n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"Visible row count changes after clicking on row\");\n+        }\n+        if (initSelected != stree.getSelection().length) {\n+            errors.add(\"Selected row count changed: was \" + initSelected + \" now \" + stree.getSelection().length);\n+        }\n+        \n+        tree.clickOnCheckbox(0);\n+        if (stree.getSelection().length != 0) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected row while 0 expected\");\n+        }\n+        tree.clickOnCheckbox(1);\n+        if (stree.getSelection().length != 1) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected\");\n+        }\n+        tree.clickOnCheckbox(2);\n+        if (stree.getSelection().length != 1) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected row while 1 expected (root)\");\n+        }\n+        \n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"Visible row count changes after clicking on checkbox\");\n+        }\n+        \n+        tree.clickOnArrow(0);\n+        if (tree.getRowCount() != 1) {\n+            errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+        }\n+        \n+        tree.clickOnArrow(0);\n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"Tree is not expanded after clicking on first row\");\n+        }\n+        \n+        tree.clickOnArrow(2);\n+        if (tree.getRowCount() == initRowCount) {\n+            errors.add(\"Tree is not expanded after clicking on 2 row. Rows visible: \" + tree.getRowCount());\n+        }\n+        initRowCount = tree.getRowCount();\n+        \n+        \n+        tree.clickOnArrow(0);\n+        if (tree.getRowCount() != 1) {\n+            errors.add(\"Tree is not collapsed after clicking on first row. Rows visible: \" + tree.getRowCount());\n+        }\n+        \n+        tree.clickOnArrow(0);\n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"Tree is not expanded after clicking on first row\");\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree1.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class Config_TestTree2 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration conf = mainFrame.getConfiguration();\n+        conf.load(CONFIG_NAME, true);\n+        \n+        ConfigDialog cd = conf.openByMenu(true);\n+        ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+        \n+        int initRowCount = tree.getRowCount();\n+        SelectionTree stree = tree.getTree();\n+        int initSelected = stree.getSelection().length;\n+        if (initRowCount != 3) {\n+            errors.add(\"Initially there are not 3 visible rows in the tree\");\n+        }\n+        if (initSelected != 1) {\n+            errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+        }\n+        \n+        tree.openContextMenu(-1).pushCollapseAll();\n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3\");\n+        }\n+        \n+        tree.openContextMenu(-1).pushExpandAll();\n+        if (tree.getRowCount() != 23) {\n+            errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 23\");\n+        }\n+\n+        tree.openContextMenu(-1).pushCollapseAll();\n+        if (tree.getRowCount() != initRowCount) {\n+            errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 3 (after collapsing)\");\n+        }\n+        \n+        tree.openContextMenu(-1).pushDeselectAll();\n+        if (stree.getSelection().length != 0) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+        }\n+        \n+        tree.openContextMenu(-1).pushSelectAll();\n+        if (stree.getSelection().length != 1) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 1\");\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree2.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Config_TestTree;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class Config_TestTree3 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration conf = mainFrame.getConfiguration();\n+        conf.load(CONFIG_NAME, true);\n+        \n+        ConfigDialog cd = conf.openByMenu(true);\n+        ConfigDialog.QuestionTree tree = cd.getQuestionTree();\n+        \n+        int initRowCount = tree.getRowCount();\n+        SelectionTree stree = tree.getTree();\n+        int initSelected = stree.getSelection().length;\n+        if (initRowCount != 3) {\n+            errors.add(\"Initially there are not 3 visible rows in the tree\");\n+        }\n+        if (initSelected != 1) {\n+            errors.add(\"Initially there are \" + initSelected + \" selected rows in the tree while 1 (root) expected\");\n+        }\n+        \n+        tree.openContextMenu(-1).pushExpandAll();\n+        if (tree.getRowCount() != 23) {\n+            errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 23\");\n+        }\n+\n+        tree.clickOnCheckbox(7);\n+        tree.clickOnCheckbox(8);\n+        if (stree.getSelection().length != 5) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 5\");\n+        }\n+\n+        tree.openContextMenu(9).pushSelectAll();\n+        if (stree.getSelection().length != 6) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 6\");\n+        }\n+        \n+        tree.openContextMenu(1).pushDeselectAll();\n+        tree.clickOnCheckbox(10);\n+        if (stree.getSelection().length != 3) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 3\");\n+        }\n+\n+        tree.openContextMenu(0).pushDeselectAll();\n+        if (stree.getSelection().length != 0) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 0\");\n+        }\n+\n+        tree.openContextMenu(3).pushSelectAll();\n+        tree.openContextMenu(4).pushSelectAll();\n+        if (stree.getSelection().length != 2) {\n+            errors.add(\"There are \" + stree.getSelection().length + \" selected rows while expected 2\");\n+        }\n+        \n+        tree.openContextMenu(9).pushCollapseAll();\n+        if (tree.getRowCount() != 19) {\n+            errors.add(\"There are \" + tree.getRowCount() + \" visible rows while expected 19\");\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Config_TestTree\/Config_TestTree3.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,262 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * System.getProperty(\"user.dir\");\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import jthtest.Tools;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.logging.Logger;\n+\n+import javax.swing.JTextField;\n+import org.netbeans.jemmy.ClassReference;\n+import org.netbeans.jemmy.operators.ComponentOperator;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.Operator.StringComparator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir extends Tools {\n+\n+    public static String NEW_WD_NAME = \"some_temp_wd_that_will_be_deleted\";\n+\n+    public static class WorkdirOperator extends JDialogOperator {\n+\tprivate JDialogOperator dialog;\n+\tprivate String commitButtonName;\n+\n+\tprivate static final String CREATE_DIALOG_NAME = getToolResource(\"wdc.new.title\");\n+\tprivate static final String OPEN_DIALOG_NAME = getToolResource(\"wdc.open.title\");\n+\tprivate static final String MENU_OPEN_PATH = getExecResource(\"qlb.file.menu\") + \"|Open|Work Directory ...\";\n+\tprivate static final String MENU_CREATE_PATH = getExecResource(\"qlb.file.menu\") + \"|\" + getExecResource(\"ch.newWorkDir.act\");\n+\n+\tprivate WorkdirOperator() {}\n+\n+\tprivate WorkdirOperator(JFrameOperator mainFrame, String name) {\n+\t    super(mainFrame, name);\n+\t}\n+\n+\tprivate WorkdirOperator(String name) {\n+\t    super(name);\n+\t}\n+\n+\tpublic String getCommitButtonName() {\n+\t    return commitButtonName;\n+\t}\n+\n+\tpublic void setPath(String path) {\n+\t}\n+\n+\tpublic void dismiss() {\n+\t}\n+\n+\tpublic void accept() {\n+\t}\n+\n+\tpublic static WorkdirOperator openWorkdirByMenu() {\n+\t    WorkdirOperator workdirOperator = new WorkdirOperator();\n+\t    workdirOperator.dialog = callOpenByMenu();\n+\t    \n+\t    return workdirOperator;\n+\t}\n+\n+\tpublic static WorkdirOperator createWorkdirByMenu() {\n+\t    WorkdirOperator workdirOperator = new WorkdirOperator();\n+\t    workdirOperator.dialog = callCreateByMenu();\n+\n+\t    return workdirOperator;\n+\t}\n+\n+\tprivate static JDialogOperator callOpenByMenu() {\n+\t    JFrameOperator mainFrame = findMainFrame();\n+\t    new JMenuOperator(mainFrame).pushMenu(MENU_OPEN_PATH, \"|\");\n+\t    return new JDialogOperator(mainFrame, OPEN_DIALOG_NAME);\n+\t}\n+\n+\tprivate static JDialogOperator callCreateByMenu() {\n+\t    JFrameOperator mainFrame = findMainFrame();\n+\t    new JMenuOperator(mainFrame).pushMenu(MENU_CREATE_PATH, \"|\");\n+\t    return new JDialogOperator(mainFrame, CREATE_DIALOG_NAME);\n+\t}\n+    }\n+\n+    public static final String OPEN_WD_MENU_PATH = getExecResource(\"tmgr.openMenu.menu\") + \"|\" + getExecResource(\"ch.setWorkDir.act\");\n+    public static final String CREATE_WD_MENU_PATH = getExecResource(\"ch.newWorkDir.act\");\n+    public static final String OPEN_DIALOG_NAME = getToolResource(\"wdc.open.title\");\n+    public static final String CREATE_DIALOG_NAME = getToolResource(\"wdc.new.title\");\n+    public static final String COMMIT_BUTTON_NAME = getExecResource(\"wdc.create.btn\");\n+    public static final String[] TEXT_FIELD_NAMES = {\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"};\n+\n+    public static void startJavaTestWithDefaultTestSuite() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-NewDesktop\", \"-open\", TEST_SUITE_NAME});\n+    }\n+\n+    public static WorkdirOperator openWorkDirectoryOpening(JFrameOperator mainFrame) {\n+\tnew JMenuOperator(mainFrame, getExecResource(\"qlb.file.menu\")).pushMenuNoBlock(getExecResource(\"qlb.file.menu\") + \"|\" + OPEN_WD_MENU_PATH, \"|\", new SimpleStringComparator());\n+\tWorkdirOperator workdirOperator = new WorkdirOperator(OPEN_DIALOG_NAME);\n+\tworkdirOperator.commitButtonName = \"Open\";\n+\treturn workdirOperator;\n+    }\n+\n+    public static WorkdirOperator openWorkDirectoryCreation(JFrameOperator mainFrame) {\n+\tnew JMenuOperator(mainFrame, getExecResource(\"qlb.file.menu\")).pushMenuNoBlock(getExecResource(\"qlb.file.menu\") + \"|\" + CREATE_WD_MENU_PATH, \"|\");\n+\treturn findWorkDirectoryCreation(mainFrame);\n+    }\n+\n+    public static WorkdirOperator findWorkDirectoryCreation(JFrameOperator mainFrame) {\n+\tWorkdirOperator workdirOperator = new WorkdirOperator(mainFrame, CREATE_DIALOG_NAME);\n+\tworkdirOperator.commitButtonName = COMMIT_BUTTON_NAME;\n+\treturn workdirOperator;\n+    }\n+\n+    private static void setPath(WorkdirOperator dialog, String path) {\n+\tJTextFieldOperator tf = new JTextFieldOperator((JTextField)Tools.getComponent(dialog, TEXT_FIELD_NAMES));\n+\ttf.setText(path);\n+    }\n+\n+    private static void commit(WorkdirOperator dialog) {\n+\tnew JButtonOperator(dialog, dialog.commitButtonName).push();\n+    }\n+\n+    \/\/ creates standard work directory using menu, deleting previous optionary\n+    public static void createWorkDirInTemp(WorkdirOperator mainFrame, boolean delete) {\n+\tString path = TEMP_PATH + TEMP_WD_NAME;\n+\tcreateWorkDir(mainFrame, TEMP_PATH, TEMP_WD_NAME, delete);\n+    }\n+\n+    \/\/ creates standard work directory using menu\n+    public static String createWorkDirInCurrent(WorkdirOperator mainFrame) {\n+\tString path = new File(\"\").getAbsolutePath();\n+\tcreateWorkDir(mainFrame, path, TEMP_WD_NAME, true);\n+\treturn path;\n+    }\n+\n+    public static void createWorkDir_(JFrameOperator mainFrame, String path, String workDir, boolean delete) {\n+\tcreateWorkDir(openWorkDirectoryCreation(mainFrame), path, workDir, delete);\n+    }\n+\n+    public static void createWorkDir(WorkdirOperator wrkDir, String path, String workDir, boolean delete) {\n+\tString fullPath;\n+\tif(path != null)\n+\t    fullPath = path + File.separator + workDir;\n+\telse\n+\t    fullPath = workDir;\n+\t\n+\tif (delete) {\n+\t    deleteDirectory(new File(fullPath));\n+\t}\n+\n+\tsetPath(wrkDir,fullPath);\n+\n+\tcommit(wrkDir);\n+    }\n+    \n+    public static boolean verifyWorkdirCreation() {\n+\treturn new File(TEMP_PATH + TEMP_WD_NAME).exists();\n+    }\n+\n+    public static boolean verifyWorkdirCreation(String path) {\n+\treturn new File(path).exists();\n+    }\n+\n+    public static JDialogOperator getOpenErrorDialog(JFrameOperator mainFrame) {\n+\treturn new JDialogOperator(mainFrame, getToolResource(\"wdc.exists_openIt.title\"));\n+    }\n+\n+    public static String createWorkDirDefWithConfig_() {\n+\tString path;\n+\tJFrameOperator mainFrame = findMainFrame();\n+\tnew JMenuOperator(mainFrame).pushMenuNoBlock(OPEN_WD_MENU_PATH, \"|\");\n+\n+\tJDialogOperator wrkDir = new JDialogOperator(mainFrame, CREATE_DIALOG_NAME);\n+\n+\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.browse.btn\")).push();\n+\tJDialogOperator filer = new JDialogOperator(mainFrame, getExecResource(\"wdc.filechoosertitle\"));\n+\tJTextFieldOperator tf;\n+\ttf = new JTextFieldOperator((JTextField)Tools.getComponent(filer, new String[] {\"Folder name:\", \"File name:\"}));\n+\tpath = tf.getText() + \"\/\";\n+\ttf.typeText(path);\n+\tdeleteDirectory(new File(path + TEMP_WD_NAME));\n+\tnew JButtonOperator(filer, \"Open\").push();\n+\n+\tgetTextField(wrkDir, getExecResource(\"wdc.dir.name.lbl\")).typeText(TEMP_WD_NAME);\n+\n+\tnew JRadioButtonOperator(wrkDir, getExecResource(\"wdc.template.rb\")).push();\n+\n+\tnew JButtonOperator(wrkDir, new NameComponentChooser(\"wdc.template.browse\")).push();\n+\n+\tfiler = new JDialogOperator(mainFrame, getExecResource(\"wdc.templchoosertitle\"));\n+\n+\ttf = new JTextFieldOperator((JTextField)Tools.getComponent(filer, new String[] {\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(TEMPLATE_NAME);\n+\n+\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.create.btn\")).push();\n+\n+\treturn path;\n+    }\n+\n+    public static void createWorkDirWithTemplate_(String basePath) {\n+\tJFrameOperator mainFrame = findMainFrame();\n+\tnew JMenuOperator(mainFrame).pushMenuNoBlock(OPEN_WD_MENU_PATH, \"|\");\n+\n+\tJDialogOperator wrkDir = new JDialogOperator(mainFrame, CREATE_DIALOG_NAME);\n+\n+\tdeleteDirectory(new File(basePath + TEMP_WD_NAME));\n+\tgetTextField(wrkDir, getExecResource(\"wdc.dir.name.lbl\")).typeText(TEMP_WD_NAME);\n+\n+\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.browse.btn\")).push();\n+\n+\tJDialogOperator filer = new JDialogOperator(mainFrame, getExecResource(\"wdc.filechoosertitle\"));\n+\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField)Tools.getComponent(filer, new String[] {\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(basePath);\n+\n+\tnew JRadioButtonOperator(wrkDir, getExecResource(\"wdc.template.rb\")).push();\n+\n+\tnew JButtonOperator(wrkDir, new NameComponentChooser(\"wdc.template.browse\")).push();\n+\n+\tfiler = new JDialogOperator(mainFrame, getExecResource(\"wdc.templchoosertitle\"));\n+\n+\ttf = new JTextFieldOperator((JTextField)Tools.getComponent(filer, new String[] {\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(TEMPLATE_NAME);\n+\n+\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.create.btn\")).push();\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir.java","additions":262,"deletions":0,"binary":false,"changes":262,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+import jthtest.Test;\n+\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir01 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = JTFrame.startJTWithDefaultTestSuite();\n+\n+\tFile created = mainFrame.createWorkDirectoryInTemp();\n+\taddUsedFile(created);\n+\n+\tif (!created.exists()) {\n+\t    errors.add(\"Work directory wasn't created propertly with path \" + created.getPath() + \" \" + created.exists());\n+\t}\n+\n+\/\/\tstartJavaTestWithDefaultTestSuite();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tString createdPath = Workdir.createWorkDirectoryInTemp(mainFrame);\n+\/\/\taddUsedFile(createdPath);\n+\/\/\n+\/\/\tif (!Workdir.verifyWorkdirCreation(createdPath)) {\n+\/\/\t    errors.add(\"Work directory wasn't created propertly with path \" + createdPath + \" \" + new File(createdPath).exists());\n+\/\/\t    Tools.pause(300000);\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test tryes to create a work directory in temp directory using default test suite\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir01.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir02 extends Test {\n+\n+    public CreateWorkdir02() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tdeleteDirectory(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\n+\tJTFrame mainFrame = JTFrame.startJTWithDefaultTestSuite();\n+\n+\tFile created = mainFrame.getWorkDirectory().createWorkDirectory(TO_DELETE_TEMP_WD_NAME, true);\n+\taddUsedFile(created);\n+\n+\tif (!created.exists()) {\n+\t    errors.add(\"Work directory wasn't created propertly with path \" + DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\t}\n+\n+\/\/\tstartJavaTestWithDefaultTestSuite();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tWorkdir.createWorkDirectory(TO_DELETE_TEMP_WD_NAME, true, mainFrame);\n+\/\/\taddUsedFile(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\/\/\n+\/\/\tif (!verifyWorkdirCreation(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME)) {\n+\/\/\t    errors.add(\"Work directory wasn't created propertly with path \" + DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\/\/\treturn \"This test tryes to create work directory in the directory where Work Directory Creation dialog is initialised. It should be user.dir\";\n+\treturn \"This test is depricated - initial directory in 'Create Work Directory' dialog is not 'user.dir' now\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir02.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir03 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tString path = DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME;\n+\tdeleteDirectory(path);\n+\tcreateWorkDirectory(path, true, mainFrame);\n+\tcreateWorkDirectory(path, false, mainFrame);\n+\taddUsedFile(path);\n+\n+\ttry {\n+\t    new JDialogOperator(getToolResource(\"wdc.exists_openIt.title\"));\n+\t} catch (JemmyException e) {\n+\t    errors.add(\"Error message offering user to open existing work directory insted of creation it was not found\");\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks that if user is trying to create existing work directory he will get an error message\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir03.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.JTextComponentOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir04 extends Test {\n+    \/*\n+     * There should be a warning-message when trying to create inexisting path\n+     *\/\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tdeleteDirectory(TEMP_PATH + \"bad_dir\");\n+\tcreateWorkDirectory(TEMP_PATH + \"bad_dir\" + File.separator + TEMP_WD_NAME, false, mainFrame);\n+\tFile f = new File(TEMP_PATH + \"bad_dir\" + File.separator + TEMP_WD_NAME);\n+\taddUsedFile(f);\n+\n+\ttry {\n+\t    new JTextComponentOperator(mainFrame, TEMP_WD_NAME);\n+\t} catch(TimeoutExpiredException e) {\n+\t    errors.add(\"Component with WD name was not found\");\n+\t}\n+\tif (!f.exists()) {\n+\t    errors.add(\"Work Directory was not created properly\");\n+\t}\n+\tif (!mainFrame.getTitle().endsWith(f.getAbsolutePath())) {\n+\t    errors.add(\"Title has not new WD path (\" + f.getAbsolutePath() + \"), title: \" + mainFrame.getTitle());\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"WD directory should be created recursively\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir04.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import jthtest.workdir.*;\n+import java.io.File;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir05 extends Test {\n+\n+    JFrameOperator mainFrame;\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tmainFrame = findMainFrame();\n+\n+\tdeleteDirectory(TEMP_PATH + TEMP_WD_NAME);\n+\tWorkdir.createWorkDirectory(TEMP_PATH + TEMP_WD_NAME, true, mainFrame);\n+\taddUsedFile(TEMP_PATH + TEMP_WD_NAME);\n+\n+\tif (new File(TEMP_PATH + TEMP_WD_NAME + File.separator + \"jtData\" + File.separator + \"template.data\").exists()) {\n+\t    throw new JemmyException(\"Found template config in workdir while not expected\");\n+\t}\n+\n+\tif (new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\")).getText().equals(\"demotemplate.jtm\")) {\n+\t    throw new JemmyException(\"Template is opened while not expected\");\n+\t}\n+\n+\tif (new JMenuOperator(mainFrame, getExecResource(\"ch.menu\")).getMenuComponent(1).isEnabled()) {\n+\t    throw new JemmyException(\"Template editing found while not expected\");\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir05.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Test;\n+import jthtest.ConfigTools;\n+\n+import static jthtest.workdir.Workdir.*;\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir06 extends Test {\n+\n+    JFrameOperator mainFrame;\n+\n+    public CreateWorkdir06() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\tmainFrame = findMainFrame();\n+\n+\tdeleteDirectory(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\tcreateWorkDirectory(TEMP_PATH + TO_DELETE_TEMP_WD_NAME, true, mainFrame);\n+\taddUsedFile(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\tConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), TEMPLATE_NAME);\n+\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.WorkDir\")).getText().equals(TO_DELETE_TEMP_WD_NAME))) {\n+\t    throw new JemmyException(\"Work Directory is not shown in status bar\");\n+\t}\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\")).getText().equals(TEMPLATE_NAME))) {\n+\t    throw new JemmyException(\"Template is not shown in status bar\");\n+\t}\n+\tif (!verifyWorkdirCreation(TEMP_PATH + TO_DELETE_TEMP_WD_NAME)) {\n+\t    throw new JemmyException(\"Work directory wasn't created propertly with path \" + TEMP_PATH + TO_DELETE_TEMP_WD_NAME);\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir06.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir07 extends Test {\n+\n+    public CreateWorkdir07() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tdeleteDirectory(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\tcreateWorkDirectory(TO_DELETE_TEMP_WD_NAME, true, mainFrame);\n+\taddUsedFile(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\tConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), TEMPLATE_NAME);\n+\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.WorkDir\")).getText().equals(TO_DELETE_TEMP_WD_NAME))) {\n+\t    throw new JemmyException(\"Work Directory is not shown in status bar\");\n+\t}\n+\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\")).getText().equals(TEMPLATE_NAME))) {\n+\t    throw new JemmyException(\"Template is not shown in status bar\");\n+\t}\n+\n+\tif (!verifyWorkdirCreation(DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME)) {\n+\t    throw new JemmyException(\"Work directory wasn't created propertly with path \" + DEFAULT_PATH + TO_DELETE_TEMP_WD_NAME);\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir07.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JLabelOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir08 extends Test {\n+\n+    public CreateWorkdir08() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tString path;\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tdeleteDirectory(DEFAULT_PATH+TEMP_WD_NAME);\n+\tJDialogOperator wrkDir = openCreateWorkDirectoryDialog(mainFrame);\n+\tchooseWorkDirectoryInDialog(wrkDir, TEMP_WD_NAME);\n+\n+\tnew JRadioButtonOperator(wrkDir, getExecResource(\"wdc.template.rb\")).push();\n+\n+\tJTextField templatePath = (JTextField)(new JLabelOperator(wrkDir, getExecResource(\"wdc.template.path.lbl\")).getLabelFor());\n+\tif(templatePath.getText().equals(\"\"))\n+\t    throw new JemmyException(\"Default template path is empty!\");\n+\tif(!((templatePath.getText() + File.separator).equals(DEFAULT_PATH)))\n+\t    throw new JemmyException(\"Default template path doesn't match default path: \" + templatePath.getText() + File.separator + \" != \" + DEFAULT_PATH);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir08.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir09 extends Test {\n+\n+    public CreateWorkdir09() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tcreateWorkDirectory(TO_DELETE_TEMP_WD_NAME, true, mainFrame);\n+\taddUsedFile(TO_DELETE_TEMP_WD_NAME);\n+\tConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), \"demotemplate_brokenchecksum.jtm\");\n+\n+\tnew JDialogOperator(mainFrame, WINDOWNAME + \" Harness: Error\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir09.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import javax.swing.JTextField;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir11 extends Test {\n+\n+    public CreateWorkdir11() {\n+\tdepricated = true;\n+    }\n+    private JFrameOperator mainFrame;\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tmainFrame = findMainFrame();\n+\n+\t\/\/ using especial function as a \"Create\" button must be inactive\n+\tcreateWorkDirWithBadTemplate();\n+    }\n+\n+    private void createWorkDirWithBadTemplate() {\n+\tnew JMenuOperator(mainFrame).pushMenuNoBlock(getExecResource(\"qlb.file.menu\") + \"|\" + getExecResource(\"mgr.newWorkDir.act\"), \"|\");\n+\n+\tJDialogOperator wrkDir = new JDialogOperator(mainFrame, getToolResource(\"wdc.new.title\"));\n+\n+\tdeleteDirectory(TEMP_PATH + TEMP_WD_NAME);\n+\n+\tgetTextField(wrkDir, getExecResource(\"wdc.dir.name.lbl\")).typeText(TEMP_WD_NAME);\n+\n+\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.browse.btn\")).push();\n+\n+\tJDialogOperator filer = new JDialogOperator(mainFrame, getExecResource(\"wdc.filechoosertitle\"));\n+\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField) getComponent(filer, new String[]{\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(TEMP_PATH);\n+\n+\tnew JRadioButtonOperator(wrkDir, getExecResource(\"wdc.template.rb\")).push();\n+\n+\tnew JButtonOperator(wrkDir, new NameComponentChooser(\"wdc.template.browse\")).push();\n+\n+\tfiler = new JDialogOperator(mainFrame, getExecResource(\"wdc.templchoosertitle\"));\n+\n+\ttf = new JTextFieldOperator((JTextField) getComponent(filer, new String[]{\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(\"\/brokenpath\/\");\n+\n+\tif (new JButtonOperator(wrkDir, getExecResource(\"wdc.create.btn\")).isEnabled()) {\n+\t    throw new JemmyException(\"Create button is available while template path is broken\");\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir11.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+import jthtest.ConfigTools;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir13 extends Test {\n+\n+    public CreateWorkdir13() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tcreateWorkDirectory(TEMP_PATH + TEMP_WD_NAME, true, mainFrame);\n+\taddUsedFile(TEMP_PATH + TEMP_WD_NAME);\n+\tConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), TEMPLATE_NAME);\n+\n+\tnew JDialogOperator(mainFrame, getExecResource(\"ep.ce.title\"));\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated \";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir13.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir14 extends Test {\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\tJDialogOperator wdCreate = openOpenWorkDirectoryDialog(mainFrame);\n+\n+\tnew JButtonOperator(wdCreate, \"Cancel\").push();\n+\n+\tif(wdCreate.isVisible())\n+\t    throw new JemmyException(\"Dialog box is visible after pressing Cancel button\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir14.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir15 extends Test {\n+\n+    public CreateWorkdir15() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavatestNewDesktop();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\topenTestSuite(mainFrame);\n+\n+\tJDialogOperator wdCreate = openOpenWorkDirectoryDialog(mainFrame);\n+\n+\tJComboBoxOperator cbOperator = new JComboBoxOperator(wdCreate);\n+\n+\tif (!((new JComboBoxOperator(wdCreate).getSelectedItem() + File.separator).equals(LOCAL_PATH))) {\n+\t    throw new JemmyException(\"Default work directory doesn't match directory from which JavaTest was opened\");\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"Test is depricated - default work directory should not match directory from which JavaTest was opened\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir15.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JLabelOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+import static jthtest.workdir.Workdir.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir16 extends Test {\n+\n+    public CreateWorkdir16() {\n+\tdepricated = true;\n+    }\n+\n+    public void testImpl() throws Exception {\n+\tstartJavaTestWithDefaultTestSuite();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\tJDialogOperator wdCreate = openOpenWorkDirectoryDialog(mainFrame);\n+\t\n+\tnew JButtonOperator(wdCreate, getExecResource(\"wdc.browse.btn\")).push();\n+\tJDialogOperator filer = new JDialogOperator(mainFrame, getExecResource(\"wdc.filechoosertitle\"));\n+\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField)getComponent(filer, new String[] {\"Folder name:\", \"File name:\"}));\n+\ttf.enterText(TEMP_PATH);\n+\t\n+\tJTextField browsePath = (JTextField)(new JLabelOperator(wdCreate, getExecResource(\"wdc.dir.path.lbl\")).getLabelFor());\n+\tif(!(browsePath.getText() + File.separator).equals(TEMP_PATH))\n+\t    throw new JemmyException(\"Browsing works not correctly\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir16.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Test;\n+\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir17 extends Test {\n+\n+    public CreateWorkdir17() {\n+\tdepricated = true;\n+    }\n+    JFrameOperator mainFrame;\n+\n+    public void testImpl() throws Exception {\n+\tstartJavatest(new String[]{\"-workdir\", \"demowd_template\"});\n+\n+\tmainFrame = findMainFrame();\n+\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.WorkDir\")).getText().equals(\"demowd_template\"))) {\n+\t    throw new JemmyException(\"Work Directory is not shown in status bar\");\n+\t}\n+\tif (!(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"bcc.Configuration\")).getText().equals(\"demotemplate.jtm\"))) {\n+\t    throw new JemmyException(\"Template is not shown in status bar\");\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test is depricated\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir17.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CreateWorkdir;\n+\n+import java.io.File;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CreateWorkdir21 extends Test {\n+    \/*\n+     * Any WD should be opened normaly with any name - even spaces\n+     *\/\n+\n+    public void testImpl() throws Exception {\n+\tJTFrame mainFrame = JTFrame.startJTWithDefaultTestSuite();\n+\n+\tFile wd = mainFrame.getWorkDirectory().createWorkDirectory(Tools.TEMP_PATH, \"path with spaces\", true);\n+\taddUsedFile(wd);\n+\n+\tif (!wd.exists()) {\n+\t    errors.add((\"Workdir with spaces ('path with spaces') was not created in temp directory. Tried to create \" + wd.getAbsolutePath()));\n+\t}\n+\n+\/\/\tstartJavaTestWithDefaultTestSuite();\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tString name = TEMP_PATH + \"path with spaces\";\n+\/\/\tcreateWorkDirectory(name, true, mainFrame);\n+\/\/\taddUsedFile(name);\n+\/\/\n+\/\/\tif (!verifyWorkdirCreation(name)) {\n+\/\/\t    throw new JemmyException(\"Workdir with spaces '\" + name + \"' was not created\");\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"Any WD should be opened normaly with any name - even with spaces\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CreateWorkdir\/CreateWorkdir21.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+import jthtest.ReportTools;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.ReportDialog;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public abstract class CReport extends Test {\n+    private String path;\n+    private boolean html;\n+    private boolean plain;\n+    private boolean xml;\n+\n+    public CReport(boolean html, boolean plain, boolean xml) {\n+        this.html = html;\n+        this.plain = plain;\n+        this.xml = xml;\n+        path = TEMP_PATH + REPORT_NAME + (html ? ReportTools.REPORT_POSTFIX_HTML : \"\") + (plain ? ReportTools.REPORT_POSTFIX_PLAIN : \"\") + (xml ? ReportTools.REPORT_POSTFIX_XML : \"\");\n+    }\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+        ReportDialog rd = mainFrame.openReportDialog();\n+        rd.setHtmlChecked(html);\n+        rd.setPlainChecked(plain);\n+        rd.setXmlChecked(xml);\n+        rd.setPath(path);\n+        rd.pushCreate();\n+        new JButtonOperator(ReportDialog.findShowReportDialog(), \"Yes\").push();\n+\n+        JDialogOperator report = new JDialogOperator(ReportTools.getExecResource(\"rb.title\"));\n+        CustomReport.checkReportBrowser(report, path, html, plain, xml);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CReport.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/\/\tJOptionPane.showMessageDialog(null, \"element found\");\n+\n+\n+package jthtest.CustomReport;\n+\n+import jthtest.ReportTools;\n+import java.io.File;\n+import javax.swing.JCheckBox;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JEditorPaneOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport extends ReportTools {\n+    public static JCheckBox selectType(JDialogOperator rep, ReportType sel) {\n+\tJListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+\tint index = 0;\n+\/*\tswitch(sel) {\n+\t    case HTML: index = 0; break; \n+\t    case PLAIN_TEXT: index = 1; break;\n+\t    case XML: index = 2; break;\n+\t    case CUSTOM_TEXT: index = 3; break;\n+\t    case CUSTOM_XML: index = 4; break;\n+\t}\/**\/\n+\tindex = sel.ordinal();\n+\ttypes.setSelectedIndex(index);\n+\treturn (JCheckBox) types.getModel().getElementAt(index);\n+    }\n+\n+    public static boolean checkReportFile(String path, ReportType type) {\n+\tString name = \"\"; \n+\tswitch(type) {\n+\t    case HTML: name = File.separator+\"html\"+File.separator+\"report.html\"; break; \n+\t    case PLAIN_TEXT: name = File.separator+\"text\"+File.separator+\"summary.txt\"; break;\n+\t    case XML: name = File.separator+\"xml\"+File.separator+\"report.xml\"; break;\n+\t}\n+\treturn new File(path+name).exists();\n+    }\n+    \n+    public static void checkReportBrowser(JDialogOperator report, String path,  boolean html, boolean plaintext, boolean xml) {\n+\tJEditorPaneOperator text = new JEditorPaneOperator(report, new NameComponentChooser(\"text\"));\n+\n+\tif(html) {\n+\t    if(!text.getText().contains(\"HTML Report\"))\n+\t\tthrow new JemmyException(\"'HTML Report' hyperlink was not found in the report\");\n+\t    if(!checkReportFile(path, ReportType.HTML))\n+\t\tthrow new JemmyException(\"Html report file was not found\");\n+\t}\n+\n+\tif(plaintext) {\n+\t    if(!text.getText().contains(\"Plain Text Report\"))\n+\t\tthrow new JemmyException(\"'Plain Text Report' hyperlink was not found in the report\");\n+\t    if(!checkReportFile(path, ReportType.PLAIN_TEXT))\n+\t\tthrow new JemmyException(\"Plain text report file was not found\");\n+\t}\n+\t\n+\tif(xml) {\n+\t    if(!text.getText().contains(\"XML Report\"))\n+\t\tthrow new JemmyException(\"'XML Report' hyperlink was not found in the report\");\n+\t    if(!checkReportFile(path, ReportType.XML))\n+\t\tthrow new JemmyException(\"xml report file was not found\");\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport1 extends CReport {\n+\n+    public CustomReport1() {\n+        super(true, false, false);\n+    }\n+\/\/    public void testCustomReport1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\tString path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML;\n+\/\/\t\n+\/\/\tJDialogOperator ask = createReports(mainFrame,path, true, false, false);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, true, false, false);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport1.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JCheckBox;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport10 extends CustomReport {\n+    \/\/ this test was excluded because current testsuite doesn't provide custom report formats\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"com.sun.javatest.tests.CustomReport.CustomReport10\");\n+    }\n+    \n+    @Test\n+    public void testCustomReport10() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tJDialogOperator rep = openReportCreation(mainFrame);\n+\/\/\n+\/\/\tJCheckBox t;\n+\/\/\tt = selectType(rep, ReportType.CUSTOM_TEXT);\n+\/\/\tt.setSelected(true);\n+\/\/\tif(!(new JTabbedPaneOperator(rep, new NameComponentChooser(\"nrd.custom.tabs\")).getTabCount() == 2))\n+\/\/\t    throw new JemmyException(\"Found another count of tabs in Custom Text Report but 2\");\n+\/\/\n+\/\/\tt = selectType(rep, ReportType.CUSTOM_XML);\n+\/\/\tt.setSelected(true);\n+\/\/\tif(!(new JTabbedPaneOperator(rep, \"Info\").getTabCount() == 1))\n+\/\/\t    throw new JemmyException(\"Found another count of tabs in Custom XML Report but 1\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport10.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JCheckBox;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport14 extends CustomReport {\n+    \/\/ this test was excluded because current testsuite doesn't provide custom report formats\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.CustomReport.CustomReport14\");\n+    }\n+    \n+    @Test\n+    public void testCustomReport14() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tJDialogOperator rep = openReportCreation(mainFrame);\n+\/\/\n+\/\/\tJCheckBox t;\n+\/\/\tt = selectType(rep, ReportType.CUSTOM_TEXT);\n+\/\/\tif(!t.getText().equals(\"4 Text Custom Report\"))\n+\/\/\t    throw new JemmyException(\"At the posistion 4 must be '4 Text Custom Report' but there is \" + t.getText());\n+\/\/\tt = selectType(rep, ReportType.CUSTOM_XML);\n+\/\/\tif(!t.getText().equals(\"5 XML Custom Report\"))\n+\/\/\t    throw new JemmyException(\"At the posistion 5 must be '5 XML Custom Report' but there is \" + t.getText());\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport14.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport2 extends CReport {\n+\n+    public CustomReport2() {\n+        super(false, true, false);\n+    }\n+\/\/    public void testCustomReport2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tString path = TEMP_PATH+REPORT_NAME+REPORT_POSTFIX_PLAIN;\n+\/\/\tJDialogOperator ask = createReports(mainFrame, path, false, true, false);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, false, true, false);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport2.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport3 extends CReport {\n+\n+    public CustomReport3() {\n+        super(false, false, true);\n+    }\n+\/\/    public void testCustomReport3() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tString path = TEMP_PATH+REPORT_NAME+REPORT_POSTFIX_XML;\n+\/\/\tJDialogOperator ask = createReports(mainFrame, path, false, false, true);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, false, false, true);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport3.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport4 extends CReport {\n+\n+    public CustomReport4() {\n+        super(false, true, true);\n+    }\n+\/\/    public void testCustomReport4() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tString path = TEMP_PATH+REPORT_NAME+REPORT_POSTFIX_PLAIN+REPORT_POSTFIX_XML;\n+\/\/\tJDialogOperator ask = createReports(mainFrame, path, false, true, true);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, false, true, true);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport4.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport5 extends CReport {\n+\n+    public CustomReport5() {\n+        super(true, false, true);\n+    }\n+\n+\/\/    public void testImpl() throws Exception {\n+        \/\/\tstartJavaTestWithDefaultWorkDirectory();\n+        \/\/\n+        \/\/\tJFrameOperator mainFrame = findMainFrame();\n+        \/\/\n+        \/\/\tString path = TEMP_PATH+REPORT_NAME+REPORT_POSTFIX_HTML+REPORT_POSTFIX_XML;\n+        \/\/\tJDialogOperator ask = createReports(mainFrame, path, true, false, true);\n+        \/\/\tpressYes(ask);\n+        \/\/\n+        \/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+        \/\/\tcheckReportBrowser(report, path, true, false, true);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport5.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport6 extends CReport {\n+\n+    public CustomReport6() {\n+        super(true, true, false);\n+    }\n+\n+\/\/    public void testImpl() throws Exception {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tString path = TEMP_PATH+REPORT_NAME+REPORT_POSTFIX_HTML+REPORT_POSTFIX_PLAIN;\n+\/\/\tJDialogOperator ask = createReports(mainFrame, path, true, true, false);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, true, true, false);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport6.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.CustomReport;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport7 extends CReport {\n+\n+    public CustomReport7() {\n+        super(true, true, true);\n+    }\n+\/\/    public void testImpl() throws Exception {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tString path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + REPORT_POSTFIX_PLAIN + REPORT_POSTFIX_XML;\n+\/\/\tJDialogOperator ask = createReports(mainFrame, path, true, true, false);\n+\/\/\tpressYes(ask);\n+\/\/\t\n+\/\/\tJDialogOperator report = new JDialogOperator(getExecResource(\"rb.title\"));\n+\/\/\tcheckReportBrowser(report, path, true, true, false);\n+\/\/    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport7.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.swing.DefaultListModel;\n+import javax.swing.JCheckBox;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport8 extends CustomReport {\n+    \/\/ this test was excluded because current testsuite doesn't provide custom report formats\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.CustomReport.CustomReport8\");\n+    }\n+    \n+    @Test\n+    public void testCustomReport8() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tJDialogOperator report = openReportCreation(mainFrame);\n+\/\/\n+\/\/\tDefaultListModel list = (DefaultListModel) getList(report).getModel();\n+\/\/\tboolean customText = false, customXML = false;\n+\/\/\tJCheckBox temp;\n+\/\/\tfor(int i = 0; i < list.size(); i++) {\n+\/\/\t    temp = (JCheckBox) list.get(i);\n+\/\/\t    String s = temp.getText();\n+\/\/\t    if(s.equals((i+1) + \" \" + \"Text Custom Report\"))\n+\/\/\t\tcustomText = true;\n+\/\/\t    if(s.equals((i+1) + \" \" + \"XML Custom Report\"))\n+\/\/\t\tcustomXML = true;\n+\/\/\t}\n+\/\/\tif(!customText)\n+\/\/\t    throw new JemmyException(\"Text Custom Report wasn't found in the list\");\n+\/\/\tif(!customXML)\n+\/\/\t    throw new JemmyException(\"XML Custom Report wasn't found in the list\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport8.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JScrollPane;\n+import javax.swing.JViewport;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport9 extends CustomReport {\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.CustomReport.CustomReport9\");\n+    }\n+    \n+    @Test\n+    public void testCustomReport9() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, Exception {\n+\tstartJavaTestWithDefaultWorkDirectory();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\n+\tJDialogOperator rep = openReportCreation(mainFrame);\n+\tJListOperator a = getList(rep);\n+\tif(!(a.getParent() instanceof JScrollPane || a.getParent() instanceof JViewport)) {\n+\t    throw new JemmyException(\"The list is not scrollable, list parent is \" + a.getParent().getClass().getName());\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport9.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.CustomReport;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JCheckBox;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class CustomReport9_2 extends CustomReport {\n+    \/\/ this test was excluded because current testsuite doesn't provide custom report formats\n+    public static void main(String[] args) {\n+\tJUnitCore.main(\"jthtest.gui.CustomReport.CustomReport9_2\");\n+    }\n+    \n+    @Test\n+    public void testCustomReport9_2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tJDialogOperator rep = openReportCreation(mainFrame);\n+\/\/\n+\/\/\tsetPath(rep, TEMP_PATH + REPORT_NAME + File.separator);\n+\/\/\n+\/\/\tJCheckBox t = selectType(rep, ReportType.CUSTOM_TEXT);\n+\/\/\tt.setSelected(true);\n+\/\/   \tselectType(rep, ReportType.CUSTOM_XML);\n+\/\/\tselectType(rep, ReportType.CUSTOM_TEXT);\n+\/\/\n+\/\/\tString repPath = \"customText\";\n+\/\/\tnew JTextFieldOperator(rep, \"\", 1).typeText(repPath);\n+\/\/\n+\/\/\tpressCreate(rep);\n+\/\/\n+\/\/\tif(!(new File(TEMP_PATH + REPORT_NAME + File.separator + \"customReport1\" + File.separator + repPath).exists()))\n+\/\/\t    throw new JemmyException(\"Report was not created\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/CustomReport\/CustomReport9_2.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+import java.io.File;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Init extends ConfigTools {\n+\n+\tprivate static JTFrame mainFrame;\n+\tprivate static String targetDir;\n+\n+\tprivate static abstract class RunManager {\n+\n+\t\tpublic abstract void runTests(JFrameOperator mainFrame);\n+\t}\n+\n+\tpublic static void main(String args[]) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+\t\tif (args.length < 2) {\n+\t\t\tSystem.out.println(\"please provide paths for config and template files: config_path template_path [javahome_path]\");\n+\t\t\tSystem.exit(1);\n+\t\t}\n+\t\tString javaPath;\n+\t\tif (args.length > 2) {\n+\t\t\tjavaPath = args[2];\n+\t\t} else {\n+\t\t\tjavaPath = System.getProperty(\"java.home\");\n+\t\t\tif (javaPath == null) {\n+\t\t\t\tSystem.out.println(\"please provide javahome path in arguments or in system properties: config_path template_path [javahome_path]\");\n+\t\t\t\tSystem.exit(1);\n+\t\t\t} else {\n+\t\t\t\tif (File.separatorChar == '\/') {\n+\t\t\t\t\tjavaPath += \"\/bin\/java\";\n+\t\t\t\t} else {\n+\t\t\t\t\tjavaPath += \"\\\\bin\\\\java.exe\";\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tSystem.setProperty(\"com.sun.javatest.exec.templateMode\", \"true\");\n+                JTFrame.closeQSOnOpen = false;\n+\t\tmainFrame = JTFrame.startJTWithDefaultTestSuite();\n+\/\/\t\tTools.pause(500);\n+\n+\t\tmainFrame.getFile_PreferencesMenu().pushNoBlock();\n+\t\tJDialogOperator prefs = new JDialogOperator(WINDOWNAME + \" Harness Preferences\");\n+\t\tnew JTreeOperator(prefs).selectRow(2);\n+\t\tnew JCheckBoxOperator(prefs, \"Warn if All Tests filter is selected when test runs starts\").setSelected(true);\n+\t\tnew JButtonOperator(prefs, \"OK\").push();\n+\n+\t\ttargetDir = new File(\"\").getAbsolutePath();\n+\t\tFile toDelete = mainFrame.createWorkDirectoryInTemp();\n+\t\trepairConfig(\"democonfig.jti\", javaPath);\n+\t\trepairConfig(\"democonfig_second.jti\", javaPath);\n+\t\trepairConfig(\"democonfig with spaces.jti\", javaPath);\n+\n+\t\tmainFrame.getMenuBar().showMenuItem(new String[]{\"Configure\", \"Load Template...\"}).push();\n+\t\tJDialogOperator dop = new JDialogOperator(\"Load Template\");\n+\t\tnew JButtonOperator(dop, \"Browse...\").push();\n+\t\tJDialogOperator locd = new JDialogOperator(\"Template Location\");\n+\t\tnew JTextFieldOperator(locd).enterText(Tools.LOCAL_PATH + File.separator + \"demotemplate.jtm\");\n+\t\tnew JCheckBoxOperator(dop, \"Launch Template Editor\").push();\n+\t\tnew JButtonOperator(dop, \"Load\").push();\n+\n+\t\tJDialogOperator edit = new JDialogOperator(\"Template Editor\");\n+\t\tnew JButtonOperator(edit, \"Last\").push();\n+\t\tnew JTextFieldOperator(edit, new NameComponentChooser(\"file.txt\")).enterText(javaPath);\n+\t\tnew JButtonOperator(edit, \"Last\").push();\n+\t\tnew JButtonOperator(edit, \"Done\").push();\n+\n+\t\tThread.sleep(500);\n+                mainFrame.closeAllTools();\n+\t\tThread.sleep(500);\n+\t\topenTestSuite(mainFrame.getJFrameOperator());\n+\t\tcreateWD(\"demowd\", null, null);\n+\t\tThread.sleep(500);\n+                mainFrame.closeAllTools();\n+\t\tThread.sleep(500);\n+\t\topenTestSuite(mainFrame.getJFrameOperator());\n+\t\tcreateWD(\"demowd_config\", args[0], null);\n+\t\tThread.sleep(500);\n+                mainFrame.closeAllTools();\n+\t\tThread.sleep(500);\n+\t\topenTestSuite(mainFrame.getJFrameOperator());\n+\t\tcreateWD(\"demowd_run\", args[0], new RunManager() {\n+\n+\t\t\tpublic void runTests(JFrameOperator mainFrame) {\n+\t\t\t\tfinal JTreeOperator tree = findTree(mainFrame);\n+\t\t\t\ttree.selectRow(2);\n+                                Init.mainFrame.runTests(2).startAndWaitForDone();\n+\t\t\t}\n+\t\t});\n+\t\tThread.sleep(500);\n+                mainFrame.closeAllTools();\n+\t\tThread.sleep(500);\n+\t\topenTestSuite(mainFrame.getJFrameOperator());\n+\t\tcreateWD(\"demowd_template\", args[0], null);\n+\t\tThread.sleep(500);\n+\n+\t\tTools.deleteDirectory(toDelete);\n+\t\tcloseJT(mainFrame.getJFrameOperator());\n+\t}\n+\n+\tstatic void createWD(String name, String config, RunManager run) {\n+\/\/        CreateWorkdir.createWorkDir(CreateWorkdir.openWorkDirectoryCreation(mainFrame), targetDir, name, true);\n+\t\tmainFrame.getWorkDirectory().createWorkDirectory(targetDir, name, true);\n+\t\tif (config != null) {\n+\t\t\tmainFrame.getConfiguration().load(targetDir, config, true);\n+\/\/\t    openConfigFile(openLoadConfigDialogByMenu(mainFrame), targetDir, config);\n+\t\t}\n+\t\tif (run != null && config != null) {\n+\t\t\trun.runTests(mainFrame.getJFrameOperator());\n+\t\t}\n+\t}\n+\n+\tpublic static void repairConfig(String name, String javaPath) {\n+\/\/        openConfigFile(openLoadConfigDialogByMenu(mainFrame), name);\n+\t\tmainFrame.getConfiguration().load(name, true);\n+\n+\t\tjthtest.tools.ConfigDialog configDialog = mainFrame.getConfiguration().openByMenu(true);\n+\/\/        openConfigDialogByMenu(mainFrame);\n+\/\/        JDialogOperator config = findConfigEditor(mainFrame);\n+\t\tconfigDialog.selectQuestion(4);\n+\t\tJTextFieldOperator file = new JTextFieldOperator(configDialog.getConfigDialog(), new NameComponentChooser(\"file.txt\"));\n+\t\tfile.setText(\"\");\n+\t\tfile.typeText(javaPath);\n+\n+\t\tconfigDialog.pushLastConfigEditor();\n+\t\tconfigDialog.selectQuestion(1);\n+\t\tconfigDialog.pushDoneConfigEditor();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Init.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,188 @@\n+\/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.KFL;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.ReportChecker;\n+import jthtest.tools.ReportChecker.KFLValues;\n+import jthtest.tools.ReportDialog;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public abstract class KFL extends Test {\n+\n+    public KFL(String kfllist, KFLValues golden, String testsuite, String excludelist) {\n+        this(kfllist, golden);\n+        addToCopyFile(testsuite);\n+        this.testsuite = testsuite;\n+        this.excludelist = excludelist;\n+        if (excludelist != null) {\n+            addToCopyFile(excludelist);\n+        }\n+    }\n+\n+    public KFL(String kfllist, KFLValues golden, String testsuite) {\n+        this(kfllist, golden);\n+        addToCopyFile(testsuite);\n+        this.testsuite = testsuite;\n+    }\n+\n+    public KFL(String kfllist, KFLValues golden) {\n+        super();\n+        this.kfl = kfllist;\n+        this.golden = golden;\n+        if (this.kfl != null) {\n+            addToCopyFile(this.kfl);\n+        }\n+    }\n+\n+    private KFL() {\n+        super();\n+    }\n+    private KFLValues golden;\n+    protected String kfl;\n+    protected ReportDialog rd;\n+    private ReportChecker checker;\n+    private String testsuite = null;\n+    protected String excludelist = null;\n+\n+    protected void init() throws Exception {\n+    }\n+\n+    public void testImpl() throws Exception {\n+        init();\n+\n+        mainFrame = new JTFrame(true);\n+\n+        if (testsuite == null) {\n+            mainFrame.openDefaultTestSuite();\n+        } else {\n+            mainFrame.getTestSuite().openTestSuite(testsuite);\n+        }\n+\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+\n+        {\n+            ConfigDialog cd = c.openByMenu(true);\n+            int kflindex = 9;\n+            if (excludelist != null) {\n+                kflindex = 10;\n+                cd.selectQuestion(8);\n+                new JRadioButtonOperator(cd.getConfigDialog()).push();\n+                cd.pushNextConfigEditor();\n+                new JButtonOperator(cd.getConfigDialog(), \"Add\").push();\n+\n+                JDialogOperator op = new JDialogOperator(\"Add File\");\n+                JTextFieldOperator tf = new JTextFieldOperator(op);\n+                tf.clearText();\n+                tf.typeText(DEFAULT_PATH + excludelist);\n+\n+                new JButtonOperator(op, \"Ok\").push();\n+                cd.pushNextConfigEditor();\n+            }\n+\n+            cd.selectQuestion(kflindex);\n+            new JRadioButtonOperator(cd.getConfigDialog()).push();\n+            cd.pushNextConfigEditor();\n+            new JButtonOperator(cd.getConfigDialog(), \"Add\").push();\n+\n+            JDialogOperator op = new JDialogOperator(\"Add File\");\n+            JTextFieldOperator tf = new JTextFieldOperator(op);\n+            tf.clearText();\n+            tf.typeText(DEFAULT_PATH + kfl);\n+\n+            new JButtonOperator(op, \"Ok\").push();\n+\n+            cd.pushDoneConfigEditor();\n+            cd = null;\n+        }\n+\n+        runTests();\n+\n+        initReportDialog0();\n+\n+        KFLValues k = checker.getKFLList();\n+\n+        if (!golden.equals(k)) {\n+            errors.add(\"Not proper KFL statistics. Expected: \\n\" + golden + \"\\nfound: \\n\" + k + \"\\n\");\n+        }\n+\n+        int summ = 0;\n+        if (k.f2e > 0) {\n+            summ += k.f2e;\n+        }\n+        if (k.f2m > 0) {\n+            summ += k.f2m;\n+        }\n+        if (k.f2n > 0) {\n+            summ += k.f2n;\n+        }\n+        if (k.f2p > 0) {\n+            summ += k.f2p;\n+        }\n+        if (k.nf > 0) {\n+            summ += k.nf;\n+        }\n+        if (k.tests != summ) {\n+            errors.add(\"Not proper tests summ in KFL statistics. Found: \\n\" + k.tests + \" while expected \" + summ + \" (\" + k + \")\\n\");\n+        }\n+\n+        if (k.testcases > 0) {\n+            summ = 0;\n+            if (k.tc_f2e > 0) {\n+                summ += k.tc_f2e;\n+            }\n+            if (k.tc_f2m > 0) {\n+                summ += k.tc_f2m;\n+            }\n+            if (k.tc_f2n > 0) {\n+                summ += k.tc_f2n;\n+            }\n+            if (k.tc_f2p > 0) {\n+                summ += k.tc_f2p;\n+            }\n+            if (k.tc_nf > 0) {\n+                summ += k.tc_nf;\n+            }\n+            if (k.testcases != summ) {\n+                errors.add(\"Not proper testscases summ in KFL statistics. Found: \\n\" + k.tests + \" while expected \" + summ + \" (\" + k + \")\\n\");\n+            }\n+        }\n+    }\n+\n+    private void initReportDialog0() {\n+        String path = TEMP_PATH + REPORT_NAME;\n+        rd = mainFrame.openReportDialog(false);\n+        initReportDialog();\n+        rd.setPath(path);\n+        rd.pushCreate();\n+        addUsedFile(path);\n+\n+        JDialogOperator showReport = ReportDialog.findShowReportDialog();\n+        new JButtonOperator(showReport, \"Yes\").push();\n+\n+        checker = new ReportChecker(path, rd);\n+    }\n+\n+    public void initReportDialog() {\n+    }\n+\n+    public void runTests() {\n+        mainFrame.runTests().waitForDone();\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL.java","additions":188,"deletions":0,"binary":false,"changes":188,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL09 extends KFL {\n+\n+    public KFL09() {\n+\/\/                                           s f2ff2ef2pf2mf2n n  tcf2ef2pf2mf2n n\n+        super(KFL_TC_ALL_PATH, new KFLValues(4, 2, 2, 1, 0, 0, 1, 8, 3, 5, 0, 0, 0), TESTCASES_TEST_SUITE_NAME);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL09.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+public class KFL1 extends KFL {\n+\n+    public KFL1() {\n+\/\/                                           s f2ff2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(KFL_NORMAL_PATH, new KFLValues(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL1.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL10 extends KFL {\n+\n+    public KFL10() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(2, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/FailingTest1.java[FailingTest01]\\nTestCasesTests\/FailingTest1.java[FailingTest02]\\nTestCasesTests\/FailingTest1.java[FailingTest03]\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL10.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL11 extends KFL {\n+\n+    public KFL11() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(5, 0, 2, 0, 0, 0, 3, 8, 3, 0, 0, 0, 5), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/ErrorTest.java[ErrorTest01]\\nTestCasesTests\/ManyTest.java[ErrorTest01]\\nTestCasesTests\/ManyTest.java[ErrorTest02]\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL11.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL12 extends KFL {\n+\n+    public KFL12() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(5, 0, 1, 0, 1, 0, 3, 6, 0, 0, 1, 0, 5), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/Missing.java[ErrorTest01]\\nTestCasesTests\/ManyTest.java[MissingTest01]\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL12.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL13 extends KFL {\n+\n+    public KFL13() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(null, new KFLValues(3, 0, 0, 0, 0, 0, 3, 5, 0, 0, 0, 0, 5), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"#EMPTY_KFL_LIST\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL13.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL14 extends KFL {\n+\n+    public KFL14() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(2, 1, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 3), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/FailingTest1.java[FailingTest01]\\nTestCasesTests\/FailingTest1.java[FailingTest02]\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL14.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL15 extends KFL {\n+\n+    public KFL15() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(2, 1, 0, 0, 0, 0, 2, 4, 0, 0, 0, 0, 4), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/FailingTest2.java[FailingTest01]\\n\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL15.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL16 extends KFL {\n+\n+    public KFL16() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(2, 1, 0, 0, 0, 0, 2, 4, 0, 1, 0, 0, 3), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/FailingTest2.java[FailingTest01]\\nTestCasesTests\/FailingTest2.java[FailingTest02]\\nTestCasesTests\/FailingTest2.java[PassingTest01]\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL16.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL17 extends KFL {\n+\n+    public KFL17() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(3, 1, 0, 0, 0, 1, 2, 4, 0, 0, 0, 0, 4), TESTCASES_TEST_SUITE_NAME, null);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/ManyTest.java[FailingTest01]\\nTestCasesTests\/FailingTest2.java[FailingTest02]\\n\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+\n+        out = new FileWriter(DEFAULT_PATH + File.separator + \"exclude.jtx\");\n+        out.write(\"TestCasesTests\/ManyTest.java\\n\");\n+        out.flush();\n+        out.close();\n+        this.excludelist = \"exclude.jtx\";\n+        addUsedFile(\"exclude.jtx\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL17.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL18 extends KFL {\n+\n+    public KFL18() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(4, 0, 0, 1, 0, 0, 3, 6, 0, 1, 0, 0, 5), TESTCASES_TEST_SUITE_NAME);\n+    }\n+\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/PassingTest.java[PassingTest01]\\n\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL18.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL19 extends KFL {\n+\n+    public KFL19() throws FileNotFoundException, IOException {\n+\/\/                                s f2ff2ef2pf2mf2n n tc f2ef2pf2mf2n n\n+        super(null, new KFLValues(4, 0, 0, 1, 0, 0, 3, 6, 0, 0, 1, 0, 5), TESTCASES_TEST_SUITE_NAME);\n+        knownFail = true;\n+    }\n+\n+    @Override\n+    protected void init() throws Exception {\n+        FileWriter out = new FileWriter(DEFAULT_PATH + File.separator + \"kfl.kfl\");\n+        out.write(\"TestCasesTests\/PassingTest.java[MissingTest01]\\n\");\n+        out.flush();\n+        out.close();\n+        this.kfl = \"kfl.kfl\";\n+        addUsedFile(\"kfl.kfl\");\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL19.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+public class KFL2 extends KFL {\n+\n+    public KFL2() {\n+\/\/                                           s f2ff2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(KFL_PASSED_PATH, new KFLValues(3, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0));\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL2.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+public class KFL3 extends KFL {\n+\n+    public KFL3() {\n+\/\/                                            s f2ff2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(KFL_MISSING_PATH, new KFLValues(4, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0));\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL3.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+public class KFL4 extends KFL {\n+\n+    public KFL4() {\n+\/\/                                              s f2ff2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(KFL_RECURSIVE_PATH, new KFLValues(2, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0));\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL4.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL5 extends KFL {\n+\n+    public KFL5() {\n+\/\/                                            s f2ff2ef2pf2mf2n n  tc  f2f f2e f2p f2m  n\n+        super(KFL_MISSING_PATH, new KFLValues(4, 1, 0, 3, 1, 0, 0, -1, -1, -1, -1, -1, -1));\n+    }\n+\n+    @Override\n+    public void initReportDialog() {\n+        rd.setKFLCheckForTestcases(false);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL5.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL6 extends KFL {\n+\n+    public KFL6() {\n+\/\/                                            s f2f f2ef2pf2mf2n n  tc  f2f f2e f2p f2m  n\n+        super(KFL_MISSING_PATH, new KFLValues(4, 1, -1, 3, 1, 0, 0, -1, -1, -1, -1, -1, -1));\n+    }\n+\n+    @Override\n+    public void initReportDialog() {\n+        rd.setKFLCheckForTestcases(false);\n+        rd.setKFLFail2Error(false);\n+        jthtest.Tools.pause(1);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL6.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL7 extends KFL {\n+\n+    public KFL7() {\n+\/\/                                            s f2f f2ef2pf2mf2n n tc f2ff2ef2pf2m n\n+        super(KFL_MISSING_PATH, new KFLValues(4, -1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0));\n+    }\n+\n+    @Override\n+    public void initReportDialog() {\n+        rd.setKFLFail2Fail(false);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL7.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.KFL;\n+\n+import jthtest.tools.ReportChecker.KFLValues;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class KFL8 extends KFL {\n+\n+    public KFL8() {\n+\/\/                                            s f2ff2ef2p f2mf2n n tc f2ff2e f2pf2m n\n+        super(KFL_MISSING_PATH, new KFLValues(3, 1, 0, 3, -1, 0, 0, 0, 0, 0, -1, 0, 0));\n+    }\n+\n+    @Override\n+    public void initReportDialog() {\n+        rd.setKFLFail2Missing(false);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/KFL\/KFL8.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -0,0 +1,458 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+import jthtest.ConfigTools;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.MouseEvent;\n+import javax.swing.Icon;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.QueueTool;\n+import org.netbeans.jemmy.operators.ContainerOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JPopupMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers extends ConfigTools {\n+\n+    public static Icon getIcon(JDialogOperator config, int index) {\n+\tIcon icon = ((JLabel) new JListOperator(config).getRenderedComponent(index)).getIcon();\n+\treturn icon;\n+    }\n+\n+    public static void pushEnableBookmarks(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", getExecResource(\"ct.markers.ckb\")});\n+    }\n+\n+    public static void pushShowOnlyBookmarked(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Show Only Bookmarked Questions\"});\n+    }\n+\n+    public static void pushClearBookmarkedAnswer(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Clear Answers For Current Question\"});\n+    }\n+\n+    public static void pushClearAllBookmarkedAnswers(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Clear Answers to Bookmarked Questions\"});\n+    }\n+\n+    public static void pushOpenHiddenGroupByMenu(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Open \\\". . .\\\" Group\"});\n+    }\n+\n+    public static void pushOpenHiddenGroupByMouse(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 2, MouseEvent.BUTTON1_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+    }\n+\n+    public static void pushCloseHiddenGroupByMouse(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 2, MouseEvent.BUTTON1_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+    }\n+\n+    public static void pushCloseByMenu(JDialogOperator config) {\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Close \\\". . .\\\" Group\"});\n+    }\n+\n+    public static void pushCloseByPopup(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Close \\\". . .\\\" Group\");\n+    }\n+\n+    public static void pushOpenHiddenGroupByPopup(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Open \\\". . .\\\" Group\");\n+    }\n+\n+    public static void clearByMenu(JDialogOperator config, int index) {\n+\tnew JListOperator(config).selectItem(index);\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Clear Answer For Current Question\"});\n+    }\n+\n+    public static void setBookmarkedByMenu(JDialogOperator config, int index) {\n+\tnew JListOperator(config).selectItem(index);\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Mark Current Question\"});\n+    }\n+\n+    public static void unsetBookmarkedByMenu(JDialogOperator config, int index) {\n+\tnew JListOperator(config).selectItem(index);\n+\tnew JMenuOperator(config, \"Bookmarks\").pushMenu(new String[]{\"Bookmarks\", \"Unmark Current Question\"});\n+    }\n+\n+    public static void setBookmarkedByMenu(JDialogOperator config, int[] indexes) {\n+\tJMenuOperator bookmarksMenu = new JMenuOperator(config, \"Bookmarks\");\n+\tString[] menuPath = new String[]{\"Bookmarks\", \"Mark Current Question\"};\n+\tJListOperator list = new JListOperator(config);\n+\tfor (int index : indexes) {\n+\t    list.selectItem(index);\n+\t    bookmarksMenu.pushMenu(menuPath);\n+\t}\n+    }\n+\n+    public static void setBookmarkedByPopup(JDialogOperator config, int[] indexes) {\n+\tfor (int index : indexes) \n+\t    setBookmarkedByPopup(config, index);\n+    }\n+\n+    public static void setBookmarkedByMouse(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1, MouseEvent.BUTTON1_MASK, 10);\n+    }\n+\n+    public static String[] getElementsNames(JDialogOperator config, int[] indexes) {\n+\tJListOperator list = new JListOperator(config);\n+\tString temp[] = new String[indexes.length];\n+\tfor (int i = 0; i < indexes.length; i++) {\n+\t    temp[i] = ((JLabel) list.getRenderedComponent(indexes[i])).getText();\n+\t}\n+\treturn temp;\n+    }\n+\n+    public static String[] getElementsNames(JDialogOperator config) {\n+\tJListOperator list = new JListOperator(config);\n+\tString temp[] = new String[list.getModel().getSize()];\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    temp[i] = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t}\n+\treturn temp;\n+    }\n+\n+    public static void setBookmarkedByPopup(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Mark Current Question\");\n+    }\n+\n+    public static void clickBookmarkedByMouse(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Mark Current Question\");\n+    }\n+\n+    public static void unsetBookmarkedByPopup(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Unmark Current Question\");\n+    }\n+\n+    public static void clearByPopup(JDialogOperator config, int index) {\n+\tJListOperatorExt list = new JListOperatorExt(config);\n+\tnew JListOperator(config).selectItem(index);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(config).pushMenu(\"Clear Answer For Current Question\");\n+    }\n+\n+    public static int[] checkVisibility(JDialogOperator config, String[] names) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint marks[] = new int[names.length];\n+\tfor (int mark : marks) {\n+\t    mark = -1;\n+\t}\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t    if (text != null) {\n+\t\tfor (int j = 0; j < names.length; j++) {\n+\t\t    if (text.equals(names[j])) {\n+\t\t\tmarks[j] = i;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+\n+\tfor (int i = 0; i < marks.length; i++) {\n+\t    if (marks[i] == -1) {\n+\t\tthrow new JemmyException(\"Element with name '\" + names[i] + \"' wasn't found\");\n+\t    }\n+\t}\n+\n+\treturn marks;\n+    }\n+\n+    public static void checkVisibilityAll(JDialogOperator config, String[] names) {\n+\tJListOperator list = new JListOperator(config);\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t    if (text == null) {\n+\t\tthrow new JemmyException(\"Element N\" + i + \" hasn't any name while expected '\" + names[i] + \"'\");\n+\t    }\n+\t    if (!text.equals(names[i])) {\n+\t\tthrow new JemmyException(\"Element N\" + i + \" has name '\" + list.getRenderedComponent(i).getName() + \"' while expected '\" + names[i] + \"'\");\n+\t    }\n+\t}\n+    }\n+\n+    public static void checkHiddenGroups(JDialogOperator config, int[] indexes, String[] names) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tif (indexes.length > 0) {\n+\t    int temp = 0;\n+\n+\t    for (int i = 0; i < indexes.length; i++) {\n+\t\tif (indexes[i] - temp > 1) {\n+\t\t    if (((JLabel) list.getRenderedComponent(indexes[i] - 1)).getText() != null) {\n+\t\t\tthrow new JemmyException(\"element \" + (indexes[i] - 1) + \" isn't '...'\");\n+\t\t    }\n+\t\t}\n+\t\ttemp = indexes[i];\n+\t    }\n+\t}\n+    }\n+\n+    public static void openGroupByMenu(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tlist.selectItem(i);\n+\tpushOpenHiddenGroupByMenu(config);\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+    }\n+\n+    public static void openGroupByMouse(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushOpenHiddenGroupByMouse(config, i);\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+    }\n+\n+    public static void openGroupByPopup(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushOpenHiddenGroupByPopup(config, i);\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+    }\n+\n+    public static void closeGroupByMenu(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tlist.selectItem(i);\n+\tpushCloseByMenu(config);\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+\n+    public static void closeGroupByPopup(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushCloseByPopup(config, i);\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+\n+    public static void closeGroupByMouse(JDialogOperator config, String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = new JListOperator(config);\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushCloseHiddenGroupByMouse(config, i);\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+    \n+    public static boolean checkBookmarked(JDialogOperator config, int index) {\n+\tJListOperator list = new JListOperator(config);\n+\treturn ((JLabel)list.getRenderedComponent(index)).getIcon() != null;\n+    }\n+\n+    static class JListOperatorExt extends JListOperator {\n+\n+\tpublic JListOperatorExt(ContainerOperator c) {\n+\t    super(c);\n+\t}\n+\n+\tpublic Object clickOnItem(final int itemIndex, final int clickCount, final int mouseButton) {\n+\t    if (itemIndex > getModel().getSize()) {\n+\t\tthrow new JemmyException(\"bad index\");\n+\t    }\n+\t    scrollToItem(itemIndex);\n+\n+\t    if (((JList) getSource()).getModel().getSize() <= itemIndex) {\n+\t\treturn (null);\n+\t    }\n+\t    if (((JList) getSource()).getAutoscrolls()) {\n+\t\t((JList) getSource()).ensureIndexIsVisible(itemIndex);\n+\t    }\n+\t    return (getQueueTool().invokeSmoothly(new QueueTool.QueueAction(\"Path selecting\") {\n+\n+\t\tpublic Object launch() {\n+\t\t    Rectangle rect = getCellBounds(itemIndex, itemIndex);\n+\t\t    if (rect == null) {\n+\t\t\treturn (null);\n+\t\t    }\n+\t\t    Point point = new Point((int) (rect.getX() + rect.getWidth() \/ 2),\n+\t\t\t    (int) (rect.getY() + rect.getHeight() \/ 2));\n+\t\t    Object result = getModel().getElementAt(itemIndex);\n+\t\t    clickMouse(point.x, point.y, clickCount, mouseButton);\n+\t\t    return (result);\n+\t\t}\n+\t    }));\n+\t}\n+\n+\tpublic Object clickOnItem(final int itemIndex, final int clickCount, final int mouseButton, final int x) {\n+\t    if (itemIndex > getModel().getSize()) {\n+\t\tthrow new JemmyException(\"bad index\");\n+\t    }\n+\t    scrollToItem(itemIndex);\n+\n+\t    if (((JList) getSource()).getModel().getSize() <= itemIndex) {\n+\t\treturn (null);\n+\t    }\n+\t    if (((JList) getSource()).getAutoscrolls()) {\n+\t\t((JList) getSource()).ensureIndexIsVisible(itemIndex);\n+\t    }\n+\t    return (getQueueTool().invokeSmoothly(new QueueTool.QueueAction(\"Path selecting\") {\n+\n+\t\tpublic Object launch() {\n+\t\t    Rectangle rect = getCellBounds(itemIndex, itemIndex);\n+\t\t    if (rect == null) {\n+\t\t\treturn (null);\n+\t\t    }\n+\t\t    Point point = new Point((int) (rect.getX() + x == 0 ? rect.getWidth() \/ 2:x),\n+\t\t\t    (int) (rect.getY() + rect.getHeight() \/ 2));\n+\t\t    Object result = getModel().getElementAt(itemIndex);\n+\t\t    clickMouse(point.x, point.y, clickCount, mouseButton);\n+\t\t    return (result);\n+\t\t}\n+\t    }));\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers.java","additions":458,"deletions":0,"binary":false,"changes":458,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers1 extends Markers {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Markers.Markers1\");\n+    }\n+    \n+    @Test\n+    public void testMarkers1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame);\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\t\n+\tJMenuOperator bmMenu = new JMenuOperator(config, \"Bookmarks\"); \n+\tfor(int i = 1; i < bmMenu.getComponentCount(); i++)\n+\t    if(bmMenu.getMenuComponent(i).isEnabled())\n+\t\tthrow new JemmyException(\"Menu subelement \" + i + \" is enabled while unexpected\"); \n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers1.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Mark the question by selecting Mark Current Question from the \n+ * Bookmarks menu. Select Clear the Answer for the Current Question from the \n+ * Bookmarks menu. Verify that the answer for selected question will be set to \n+ * empty. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers10 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+\n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        cd.selectQuestion(2);\n+        JTextFieldOperator op = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        op.typeText(\"some description that must be cleared\");\n+        cd.setBookmarkedByMenu(2);\n+        cd.clearByMenu(2);\n+\n+        op = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        if (!op.getText().equals(\"\")) {\n+            errors.add(\"Text wasn't cleared up: '\" + op.getText() + \"' while expected ''\");\n+        }\n+        warnings.add(\"Pre-defined warning: Mark sometimes desapperas while clearing by menu - bookmark saves current state of answer; First question is 'Configuratoin name' and it can't be cleared; a new question is generated while clearing up\");\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\t\n+\/\/\tselectQuestion(config, 2);\n+\/\/\tnew JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some description that must be cleared\");\n+\/\/\tsetBookmarkedByMenu(config, 2);\n+\/\/\tclearByMenu(config, 2);\n+\/\/\t\n+\/\/\tif(!new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText().equals(\"\"))\n+\/\/\t    throw new JemmyException(\"Text wasn't cleared up: '\" + new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText() + \"' while expected ''\");\n+\/\/\tSystem.out.println(\"Pre-defined warning: Mark sometimes desapperas while clearing by menu - bookmark saves current state of answer; First question is 'Configuratoin name' and it can't be cleared; a new question is generated while clearing up\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Bookmarks menu. Select Clear the Answer for the Current Question from the Bookmarks menu. Verify that the answer for selected question will be set to empty.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers10.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Mark the question by selecting Mark Current Question from the \n+ * Bookmarks menu. Select Clear the Answer for the Current Question from the \n+ * popup menu. Verify that the answer for selected question will be set to \n+ * empty. \n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers11 extends Markers {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Markers.Markers11\");\n+    }\n+    \n+    @Test\n+    public void testMarkers11() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame);\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\n+\tpushEnableBookmarks(config);\n+\t\n+\tselectQuestion(config, 2);\n+\tnew JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).typeText(\"some description that must be cleared\");\n+\tsetBookmarkedByMenu(config, 2);\n+\tclearByPopup(config, 2);\n+\t\n+\tif(!new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText().equals(\"\"))\n+\t    throw new JemmyException(\"Text wasn't cleared up: '\" + new JTextFieldOperator(config, new NameComponentChooser(\"str.txt\")).getText() + \"' while expected ''\");\n+\tSystem.out.println(\"Pre-defined warning: Mark sometimes desapperas while clearing by menu - bookmark saves current state of answer; First question is 'Configuratoin name' and it can't be cleared; a new question is generated while clearing up\");\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers11.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Mark the question by selecting Mark Current Question from the \n+ * Bookmarks menu. Select Clear the Answer for the Current Question from the \n+ * Bookmarks menu. The answer will be clear. Click on Next button. Verify that \n+ * the an invalid answer will be displayed if the question has not been \n+ * answered. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers12 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        config.getBookmarks_EnableBookmarks().push();\n+        config.setBookmarkedByMenu(4);\n+        config.clearByMenu(4);\n+        config.pushNextConfigEditor();\n+\n+        if (!new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"qu.vmsg\")).getText().equals(\"Invalid response\")) {\n+            errors.add(\"Error message wasn't found: '\" + new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"qu.vmsg\")).getText() + \"' while expected 'Invalud response'\");\n+        }\n+\n+        warnings.add(\"Pre-defined warning: Some questions can be optional and some can have default value\");\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\n+\/\/\tselectQuestion(config, 4);\n+\/\/\tsetBookmarkedByMenu(config, 4);\n+\/\/\tclearByMenu(config, 4);\n+\/\/\n+\/\/\tpushNextConfigEditor(config);\n+\/\/\tif(!new JTextFieldOperator(config, new NameComponentChooser(\"qu.vmsg\")).getText().equals(\"Invalid response\"))\n+\/\/\t    throw new JemmyException(\"Error message wasn't found: '\" + new JTextFieldOperator(config, new NameComponentChooser(\"qu.vmsg\")).getText() + \"' while expected 'Invalud response'\");\n+\/\/\n+\/\/\tSystem.out.println(\"Pre-defined warning: Some questions can be optional and some can have default value\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Bookmarks menu. Select Clear the Answer for the Current Question from the Bookmarks menu. The answer will be clear. Click on Next button. Verify that the an invalid answer will be displayed if the question has not been answered.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers12.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. Verify that \n+ * the abbreviated list, some sequences of questions will be replaces by \"...\". \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers13 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{2, 3, 4, 7, 8, 10};\n+        String[] names = config.getElementsNames(indexes);\n+\n+        config.getBookmarks_EnableBookmarks().push();\n+        config.setBookmarkedByMenu(indexes);\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+\n+        indexes = config.checkVisibility(names);\n+        config.checkHiddenGroups(indexes, names);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tint[] indexes = new int[] {2, 3, 4, 7, 8, 10};\n+\/\/\tString[] names = getElementsNames(config, indexes);\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, indexes);\n+\/\/\tpushShowOnlyBookmarked(config);\n+\/\/\n+\/\/\tindexes = checkVisibility(config, names);\n+\/\/\tcheckHiddenGroups(config, indexes, names);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks, that 'Bookmarks->Show Only Bookmarked Questions' function works properly. Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. Verify that the abbreviated list, some sequences of questions will be replaces by \\\"...\\\".\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers13.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Click on Open \n+ * \"...\" Group from the Bookmarks menu. Verify that all the questions will be \n+ * displayed. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers14 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+        config.getBookmarks_EnableBookmarks().push();\n+        String[] namesAll = config.getElementsNames();\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        String namesHidden[] = config.getElementsNames();\n+\n+        config.openGroupByMenu(namesAll, namesHidden);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tint[] indexes = new int[] {4, 5, 6, 8, 9};\n+\/\/\t\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, indexes);\n+\/\/\tString[] namesAll = getElementsNames(config);\n+\/\/\tpushShowOnlyBookmarked(config);\n+\/\/\tString[] namesHidden = getElementsNames(config);\n+\/\/\t\n+\/\/\topenGroupByMenu(config, namesAll, namesHidden);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. All the marked questions will be displayed as \\\"...\\\". Select one of the \\\"...\\\". Click on Open \\\"...\\\" Group from the Bookmarks menu. Verify that all the questions will be displayed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers14.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Click on Open \n+ * \"...\" Group from the popup menu. Verify that the next question will be \n+ * displayed. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers15 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+        config.getBookmarks_EnableBookmarks().push();\n+\n+        config.setBookmarkedByMenu(indexes);\n+        String[] namesAll = config.getElementsNames();\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        String namesHidden[] = config.getElementsNames();\n+\n+        config.openGroupByPopup(namesAll, namesHidden);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\t\n+\/\/\tint[] indexes = new int[] {4, 5, 6, 8, 9};\n+\/\/\t\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, indexes);\n+\/\/\tString[] namesAll = getElementsNames(config);\n+\/\/\tpushShowOnlyBookmarked(config);\n+\/\/\tString[] namesHidden = getElementsNames(config);\n+\/\/\t\n+\/\/\topenGroupByMenu(config, namesAll, namesHidden);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. All the marked questions will be displayed as \\\"...\\\". Select one of the \\\"...\\\". Click on Open \\\"...\\\" Group from the popup menu. Verify that the next question will be displayed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers15.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Click on Open\n+ * \"...\" Group from the Bookmarks menu. The Close \"...\" Group will be displayed \n+ * under Bookmarks menu. Click on Close \"...\" Group under the Bookmarks menu.\" \n+ * Verify that the \"...\" will be displayed in the history list. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers16 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+        config.getBookmarks_EnableBookmarks().push();\n+\n+        config.setBookmarkedByMenu(indexes);\n+        String[] namesAll = config.getElementsNames();\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        String namesHidden[] = config.getElementsNames();\n+\n+        config.openGroupByMenu(namesAll, namesHidden);\n+\n+        namesAll = config.getElementsNames();\n+\n+        config.closeGroupByMenu(namesAll, namesHidden);\n+\/\/        startJavatestNewDesktop();\n+\/\/\n+\/\/        JFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/        closeQS(mainFrame);\n+\/\/        openTestSuite(mainFrame);\n+\/\/        createWorkDirInTemp(mainFrame);\n+\/\/        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/        Config_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\n+\/\/        openConfigDialogByKey(mainFrame);\n+\/\/        JDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+\/\/\n+\/\/        pushEnableBookmarks(config);\n+\/\/        setBookmarkedByMenu(config, indexes);\n+\/\/        String[] namesAll = getElementsNames(config);\n+\/\/        pushShowOnlyBookmarked(config);\n+\/\/        String[] namesHidden = getElementsNames(config);\n+\/\/\n+\/\/        openGroupByMenu(config, namesAll, namesHidden);\n+\/\/\n+\/\/        namesAll = getElementsNames(config);\n+\/\/\n+\/\/        closeGroupByMenu(config, namesAll, namesHidden);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. All the marked questions will be displayed as \\\"...\\\". Select one of the \\\"...\\\". Click on Open \\\"...\\\" Group from the Bookmarks menu. The Close \\\"...\\\" Group will be displayed under Bookmarks menu. Click on Close \\\"...\\\" Group under the Bookmarks menu. Verify that the \\\"...\\\" will be displayed in the history list.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers16.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Click on Open\n+ * \"...\" Group from the Bookmarks menu. The Close \"...\" Group will be displayed \n+ * in the popup menu. Click on Close \"...\" Group from the popup menu.\" Verify \n+ * that the \"...\" will be displayed in the history list. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers17 extends Test {\n+\n+    public Markers17() {\n+        super();\n+        knownFail = true;\n+    }\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+        config.getBookmarks_EnableBookmarks().push();\n+\n+        config.setBookmarkedByMenu(indexes);\n+        String[] namesAll = config.getElementsNames();\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        String namesHidden[] = config.getElementsNames();\n+\n+        config.openGroupByMenu(namesAll, namesHidden);\n+\n+        namesAll = config.getElementsNames();\n+\n+        config.closeGroupByPopup(namesAll, namesHidden);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\t\n+\/\/\tint[] indexes = new int[]{4, 5, 6, 8, 9};\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, indexes);\n+\/\/\tString[] namesAll = getElementsNames(config);\n+\/\/\tpushShowOnlyBookmarked(config);\n+\/\/\tString[] namesHidden = getElementsNames(config);\n+\/\/\n+\/\/\topenGroupByMenu(config, namesAll, namesHidden);\n+\/\/\n+\/\/\tnamesAll = getElementsNames(config);\n+\n+\/\/\tcloseGroupByPopup(config, namesAll, namesHidden); \n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. All the marked questions will be displayed as \\\"...\\\". Select one of the \\\"...\\\". Click on Open \\\"...\\\" Group from the Bookmarks menu. The Close \\\"...\\\" Group will be displayed in the popup menu. Click on Close \\\"...\\\" Group from the popup menu. Verify that the \\\"...\\\" will be displayed in the history list.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers17.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers18 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+        config.getBookmarks_EnableBookmarks().push();\n+\n+        Icon emptyIcon = config.getIcon(1);\n+        config.setBookmarkedByMouse(1);\n+        if (config.getIcon(1) == emptyIcon) {\n+            errors.add(\"Icon wasn't found\");\n+        }\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\t\n+\/\/\tsetBookmarkedByMouse(config, 1);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that the user can enable a bookmark on some test using mouse. The test opens default test suite, creates a WD and loads configuration. Then it opens Config Editor and checks that clicking mouse on some question will change it's icon\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers18.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Double click \n+ * on \"...\" in the list. The open group of questions will be displayed. Verify \n+ * that all double click on the \"...\" in the list will open the the group \n+ * questions. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers19 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        int[] indexes = new int[]{4, 5, 6, 8, 9};\n+        config.getBookmarks_EnableBookmarks().push();\n+\n+        config.setBookmarkedByMenu(indexes);\n+        String[] namesAll = config.getElementsNames();\n+        config.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        String namesHidden[] = config.getElementsNames();\n+\n+        config.openGroupByMouse(namesAll, namesHidden);\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tint[] indexes = new int[]{4, 5, 6, 8, 9};\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, indexes);\n+\/\/\tString[] namesAll = getElementsNames(config);\n+\/\/\tpushShowOnlyBookmarked(config);\n+\/\/\tString[] namesHidden = getElementsNames(config);\n+\/\/\n+\/\/\topenGroupByMouse(config, namesAll, namesHidden);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the couple of questions from the history list. Mark the questions by selecting Mark Current Question from the Bookmarks menu. Click on Show Only Marked Questions. All the marked questions will be displayed as \\\"...\\\". Select one of the \\\"...\\\". Double click on \\\"...\\\" in the list. The open group of questions will be displayed. Verify that all double click on the \\\"...\\\" in the list will open the the group questions.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers19.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers2 extends Markers {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Markers.Markers2\");\n+    }\n+    \n+    @Test\n+    public void testMarkers2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame);\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\t\n+\tif(getIcon(config, 1) != null) {\n+\t    throw new JemmyException(\"Icon was found before enabling bookmark\");\n+\t}\n+\tpushEnableBookmarks(config);\n+\tif(getIcon(config, 1) == null) {\n+\t    throw new JemmyException(\"Icon wasn't found after enabling bookmark (list isn't shifted)\");\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers2.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the couple of questions \n+ * from the history list. Mark the questions by selecting Mark Current Question \n+ * from the Bookmarks menu. Click on Show Only Marked Questions. All the marked \n+ * questions will be displayed as \"...\". Select one of the \"...\". Double click \n+ * on \"...\" in the list. The open group of questions will be displayed. Double \n+ * click again and the list will be disappear. Verify that all double click on \n+ * the group of questions that were open will close the group. \n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers20 extends Markers {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Markers.Markers20\");\n+    }\n+    \n+    @Test\n+    public void testMarkers20() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame);\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\t\n+\tint[] indexes = new int[]{4, 5, 6, 8, 9};\n+\n+\tpushEnableBookmarks(config);\n+\tsetBookmarkedByMenu(config, indexes);\n+\tString[] namesAll = getElementsNames(config);\n+\tpushShowOnlyBookmarked(config);\n+\tString[] namesHidden = getElementsNames(config);\n+\n+\topenGroupByMouse(config, namesAll, namesHidden);\n+\tcloseGroupByMouse(config, namesAll, namesHidden);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers20.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select couple of questions from \n+ * the history list. Bring up the popup menu and mark the all the questions. \n+ * Bring up the Clear Answers to Marked Questions from the Bookmarks menu. \n+ * Verify that all the selected questions should be have empty answers. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers21 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+        String[] names = config.getElementsNames();\n+        int[] indexes = new int[]{-1, -1};\n+        int i = 0;\n+        for (String s : names) {\n+            if (\"Concurrency\".equalsIgnoreCase(s.trim())) {\n+                indexes[0] = i;\n+            }\n+            if (\"Time Factor\".equalsIgnoreCase(s.trim())) {\n+                indexes[1] = i;\n+            }\n+            if (indexes[1] > 0) {\n+                break;\n+            }\n+            i++;\n+        }\n+        config.getBookmarks_EnableBookmarks().push();\n+        setSomeValues(config.getConfigDialog(), indexes);\n+        config.setBookmarkedByMenu(indexes);\n+        config.getBookmarks_ClearAnswerToBookmarkedQuestionsMenu().push();\n+        checkValues(config.getConfigDialog(), indexes);\n+\n+\n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\tint[] indexes = new int[] {11, 12};\n+\/\/\t\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\t\n+\/\/\tsetSomeValues(config, indexes);\n+\/\/\tsetBookmarkedByPopup(config, indexes);\n+\/\/\tpushClearAllBookmarkedAnswers(config);\n+\/\/\tcheckValues(config, indexes);\n+    }\n+\n+    private void checkValues(JDialogOperator config, int[] indexes) {\n+        JListOperator list = new JListOperator(config);\n+\n+        list.selectItem(indexes[0]);\n+        if (!(new JTextFieldOperator(config, new NameComponentChooser(\"int.field.txt\")).getText().equals(\"1\"))) {\n+            throw new JemmyException(\"Value in Concurrency was not reset\");\n+        }\n+        list.selectItem(indexes[1]);\n+        if (!(new JTextFieldOperator(config, new NameComponentChooser(\"flt.field.txt\")).getText().equals(\"1\"))) {\n+            throw new JemmyException(\"Value in Time Factor was not reset\");\n+        }\n+    }\n+\n+    private void setSomeValues(JDialogOperator config, int[] indexes) {\n+        JListOperator list = new JListOperator(config);\n+\n+        list.selectItem(indexes[0]);\n+        new JTextFieldOperator(config, new NameComponentChooser(\"int.field.txt\")).setText(\"\");\n+        new JTextFieldOperator(config, new NameComponentChooser(\"int.field.txt\")).typeText(\"22\");\n+        list.selectItem(indexes[1]);\n+        new JTextFieldOperator(config, new NameComponentChooser(\"flt.field.txt\")).setText(\"\");\n+        new JTextFieldOperator(config, new NameComponentChooser(\"flt.field.txt\")).typeText(\"22\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select couple of questions from the history list. Bring up the popup menu and mark the all the questions. Bring up the Clear Answers to Marked Questions from the Bookmarks menu. Verify that all the selected questions should be have empty answers.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers21.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Click on Mark Current Question. The question will be marked. \n+ * Select the Remove Bookmarks from the Bookmarks menu. Verify that the marker \n+ * for the selected question will be removed. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers22 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+        config.getBookmarks_EnableBookmarks().push();\n+        config.setBookmarkedByMenu(1);\n+        config.getBookmarks_EnableBookmarks().push();\n+        \n+        if (config.checkBookmarked(1))\n+            errors.add(\"Question is bookmarked after disabling bookmarks while should not\");\n+        \n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\t\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tsetBookmarkedByMenu(config, 1);\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\t\n+\/\/\tif(checkBookmarked(config, 1))\n+\/\/\t    throw new JemmyException(\"Question is bookmarked\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Click on Mark Current Question. The question will be marked. Select the Remove Bookmarks from the Bookmarks menu. Verify that the marker for the selected question will be removed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers22.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers3 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+        Configuration config = mainFrame.getConfiguration();\n+        config.load(CONFIG_NAME, true);\n+\n+        ConfigDialog confDialog = config.openByMenu(true);\n+\n+        \/\/ test\n+        confDialog.getBookmarks_EnableBookmarks().push();\n+        Icon emptyIcon = confDialog.getIcon(1);\n+        confDialog.setBookmarkedByMenu(1);\n+        if (confDialog.getIcon(1) == emptyIcon) {\n+            errors.add(\"Icon wasn't found\");\n+        }\n+\n+        \/\/\tstartJavatestNewDesktop();\n+        \/\/\n+        \/\/\tJFrameOperator mainFrame = findMainFrame();\n+        \/\/\n+        \/\/\tcloseQS(mainFrame);\n+        \/\/\topenTestSuite(mainFrame);\n+        \/\/\tcreateWorkDirInTemp(mainFrame);\n+        \/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        \/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+        \/\/\n+        \/\/\topenConfigDialogByKey(mainFrame);\n+        \/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+        \/\/\n+        \/\/\tpushEnableBookmarks(config);\n+        \/\/\tIcon emptyIcon = getIcon(config, 1);\n+        \/\/\tsetBookmarkedByMenu(config, 1);\n+        \/\/\tif(getIcon(config, 1) == emptyIcon)\n+        \/\/\t    throw new JemmyException(\"Icon wasn't found\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks whether bookmark Icon is set to selected Question. The test starts JT, opens default TS, creates temporary WorkDirectory and loads default configuration. Then it takes Icon from second question, bookmarks this question by menu and checks that icon was changed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers3.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers4 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+        \n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration config = mainFrame.getConfiguration();\n+        config.load(CONFIG_NAME, true);\n+        ConfigDialog cd = config.openByKey();\n+        \n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        Icon emptyIcon = cd.getIcon(1);\n+        cd.setBookmarkedByPopup(1);\n+        if (cd.getIcon(1) == emptyIcon) {\n+            errors.add(\"Icon wasn't found\");\n+        }\n+        warnings.add(\"predefined warning: popup menu doesn't open without left clicking\");\n+        \n+        \/\/        startJavatestNewDesktop();\n+        \/\/\n+        \/\/        JFrameOperator mainFrame = findMainFrame();\n+        \/\/\n+        \/\/        closeQS(mainFrame);\n+        \/\/        openTestSuite(mainFrame);\n+        \/\/        createWorkDirInTemp(mainFrame);\n+        \/\/        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        \/\/        Config_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+        \/\/\n+        \/\/        openConfigDialogByKey(mainFrame);\n+        \/\/        JDialogOperator config = findConfigEditor(mainFrame);\n+        \/\/\n+        \/\/        pushEnableBookmarks(config);\n+        \/\/        Icon emptyIcon = getIcon(config, 1);\n+        \/\/        setBookmarkedByPopup(config, 1);\n+        \/\/        if (getIcon(config, 1) == emptyIcon) {\n+        \/\/            throw new JemmyException(\"Icon wasn't found\");\n+        \/\/        }\n+        \/\/        System.out.println(\"predefined warning: popup menu doesn't open without left clicking\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks whether bookmark Icon is set to selected Question. The test starts JT, opens default TS, creates temporary WorkDirectory and loads default configuration. Then it takes Icon from second question, bookmarks this question by popup and checks that icon was changed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers4.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Config_Edit.Config_Edit;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers5 extends Markers {\n+    public static void main(String args[]) {\n+\tJUnitCore.main(\"jthtest.gui.Markers.Markers5\");\n+    }\n+    \n+    @Test\n+    public void testMarkers5() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tstartJavatestNewDesktop();\n+\t\n+\tJFrameOperator mainFrame = findMainFrame();\n+\t\n+\tcloseQS(mainFrame);\n+\topenTestSuite(mainFrame);\n+\tcreateWorkDirInTemp(mainFrame);\n+\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\t\n+\topenConfigDialogByKey(mainFrame);\n+\tJDialogOperator config = findConfigEditor(mainFrame);\n+\n+\tpushEnableBookmarks(config);\n+\tIcon emptyIcon = getIcon(config, 1);\n+\tsetBookmarkedByPopup(config, 1);\n+\tif(getIcon(config, 1) == emptyIcon)\n+\t    throw new JemmyException(\"Icon wasn't found\");\n+\tunsetBookmarkedByPopup(config, 1);\n+\tif(getIcon(config, 1) != emptyIcon) {\n+\t    throw new JemmyException(\"Icon was found after unmarking\");\n+\t}\n+\t\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers5.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. \n+ * Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. \n+ * Select the Enable Bookmarks from the Bookmarks menu. Select the first \n+ * question from the history list. Mark the question by selecting Mark Current \n+ * Question from the Marker menu. Select the second question from the history \n+ * list. Mark the question by selecting Mark Current Question from the Marker \n+ * menu. Select Show Only Marked Question from the Bookmarks menu. Verify that \n+ * all the selected question will displayed. \n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Config_Edit.Config_Edit;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers6 extends Test {\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+        \n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+        \n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        int[] indexes = new int[] {1, 2};\n+        cd.setBookmarkedByMenu(indexes);\n+        String names[] = cd.getElementsNames(indexes);\n+        cd.getBookmarks_ShowOnlyBookmarkedMenu().push();\n+        \n+        cd.checkVisibility(names);\n+        \n+        \/\/\tstartJavatestNewDesktop();\n+        \/\/\n+        \/\/\tJFrameOperator mainFrame = findMainFrame();\n+        \/\/\n+        \/\/\tcloseQS(mainFrame);\n+        \/\/\topenTestSuite(mainFrame);\n+        \/\/\tcreateWorkDirInTemp(mainFrame);\n+        \/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        \/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+        \/\/\n+        \/\/\topenConfigDialogByKey(mainFrame);\n+        \/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+        \/\/\n+        \/\/\tpushEnableBookmarks(config);\n+        \/\/\tint[] indexes = new int[] {1, 2};\n+        \/\/\tsetBookmarkedByMenu(config,indexes);\n+        \/\/\tString names[] = getElementsNames(config, indexes);\n+        \/\/\tpushShowOnlyBookmarked(config);\n+        \/\/\n+        \/\/\tcheckVisibility(config, names);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Marker menu. Select the second question from the history list. Mark the question by selecting Mark Current Question from the Marker menu. Select Show Only Marked Question from the Bookmarks menu. Verify that all the selected question will displayed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers6.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Mark the question by selecting Mark Current Question from the \n+ * Marker menu. Select the second question from the history list. Mark the \n+ * question by selecting Mark Current Question from the Marker menu. Select \n+ * Show Only Marked Question from the Bookmarks menu. Only the marked questions \n+ * will be displayed. Unselect Show Only Marked Question from the Bookmarks \n+ * menu. Verify that the whole list of questions will be displayed. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers7 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+        \n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+        \n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        int[] indexes = new int[] {1, 2};\n+        String allNames[] = cd.getElementsNames();\n+        String bookmarkedNames[] = cd.getElementsNames(indexes);\n+        \n+        cd.setBookmarkedByMenu(indexes);\n+        cd.getBookmarks_ShowOnlyBookmarkedMenu().push(); \/\/ turn on\n+        cd.checkVisibility(bookmarkedNames);\n+        \n+        cd.getBookmarks_ShowOnlyBookmarkedMenu().push(); \/\/ turn off\n+        cd.checkVisibilityAll(allNames);\n+        \n+\/\/        startJavatestNewDesktop();\n+\/\/\n+\/\/        JFrameOperator mainFrame = findMainFrame();\n+\/\/\n+\/\/        closeQS(mainFrame);\n+\/\/        openTestSuite(mainFrame);\n+\/\/        createWorkDirInTemp(mainFrame);\n+\/\/        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/        Config_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\n+\/\/        openConfigDialogByKey(mainFrame);\n+\/\/        JDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/        pushEnableBookmarks(config);\n+\/\/        int indexes[] = new int[]{1, 2};\n+\/\/        String allNames[] = getElementsNames(config);\n+\/\/        String bookmarkedNames[] = getElementsNames(config, indexes);\n+\/\/\n+\/\/        setBookmarkedByMenu(config, indexes);\n+\/\/        pushShowOnlyBookmarked(config);\t\/\/ turn on\n+\/\/        checkVisibility(config, bookmarkedNames);\n+\/\/\n+\/\/        pushShowOnlyBookmarked(config);\t\/\/ turn off\n+\/\/        checkVisibilityAll(config, allNames);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Marker menu. Select the second question from the history list. Mark the question by selecting Mark Current Question from the Marker menu. Select Show Only Marked Question from the Bookmarks menu. Only the marked questions will be displayed. Unselect Show Only Marked Question from the Bookmarks menu. Verify that the whole list of questions will be displayed.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers7.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ * existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ * Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ * history list. Mark the question by selecting Mark Current Question from the \n+ * Marker menu. Select unmark the Current Question from the Bookmarkers menu. \n+ * Verify that the marked question will be unmarked and the icon will disappear. \n+ *\/\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers8 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+        \n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+        \n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        Icon emptyIcon = cd.getIcon(1);\n+        cd.setBookmarkedByMenu(1);\n+        if (cd.getIcon(1) == emptyIcon)\n+            errors.add(\"Bookmark Icon was not found after marking\");\n+        \n+        cd.unsetBookmarkedByMenu(1);\n+        if (cd.getIcon(1) != emptyIcon)\n+            errors.add(\"Empty Icon was not found after unmarking\");\n+        \n+\/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tIcon emptyIcon = getIcon(config, 1);\n+\/\/\tsetBookmarkedByMenu(config, 1);\n+\/\/\tif(getIcon(config, 1) == emptyIcon)\n+\/\/\t    throw new JemmyException(\"Icon was not found after marking\");\n+\/\/\t\n+\/\/\tunsetBookmarkedByMenu(config, 1);\n+\/\/\tif(getIcon(config, 1) != emptyIcon)\n+\/\/\t    throw new JemmyException(\"Icon was not found after marking\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Marker menu. Select unmark the Current Question from the Bookmarkers menu. Verify that the marked question will be unmarked and the icon will disappear.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers8.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an \n+ existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the \n+ Enable Bookmarks from the Bookmarks menu. Select the first question from the \n+ history list. Mark the question by selecting Mark Current Question from the \n+ Bookmarks menu. Select unmark the Current Question from the popup menu. Verify \n+ that the marked question will be unmarked and the icon will disappear. \n+ *\/\n+\n+package jthtest.Markers;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class Markers9 extends Test {\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        mainFrame = new JTFrame(true);\n+        \n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(CONFIG_NAME, true);\n+        ConfigDialog cd = configuration.openByKey();\n+        \n+        \/\/ test body\n+        cd.getBookmarks_EnableBookmarks().push();\n+        Icon emptyIcon = cd.getIcon(1);\n+        cd.setBookmarkedByMenu(1);\n+        if (cd.getIcon(1) == emptyIcon)\n+            errors.add(\"Bookmark Icon was not found after marking\");\n+        \n+        cd.unsetBookmarkedByPopup(1);\n+        if (cd.getIcon(1) != emptyIcon)\n+            errors.add(\"Empty Icon was not found after unmarking\");\n+\n+        \/\/\tstartJavatestNewDesktop();\n+\/\/\t\n+\/\/\tJFrameOperator mainFrame = findMainFrame();\n+\/\/\t\n+\/\/\tcloseQS(mainFrame);\n+\/\/\topenTestSuite(mainFrame);\n+\/\/\tcreateWorkDirInTemp(mainFrame);\n+\/\/\topenConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\/\/\tConfig_Edit.waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\/\/\t\n+\/\/\topenConfigDialogByKey(mainFrame);\n+\/\/\tJDialogOperator config = findConfigEditor(mainFrame);\n+\/\/\n+\/\/\tpushEnableBookmarks(config);\n+\/\/\tIcon emptyIcon = getIcon(config, 1);\n+\/\/\tsetBookmarkedByMenu(config, 1);\n+\/\/\tif(getIcon(config, 1) == emptyIcon)\n+\/\/\t    throw new JemmyException(\"Icon wasn't found after marking\");\n+\/\/\tunsetBookmarkedByPopup(config, 1);\n+\/\/\tif(getIcon(config, 1) != emptyIcon)\n+\/\/\t    throw new JemmyException(\"Icon was found after unmarking\");\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with the -NewDesktop option. Create a workdirectory. Load an existing JTI file. Bring up configuration editor by doing Ctrl-E. Select the Enable Bookmarks from the Bookmarks menu. Select the first question from the history list. Mark the question by selecting Mark Current Question from the Bookmarks menu. Select unmark the Current Question from the popup menu. Verify that the marked question will be unmarked and the icon will disappear.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Markers\/Markers9.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.New;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Before;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+\n+import jthtest.Tools;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New extends Tools {\n+\/\/\tprivate static final String TEMP_WD = \"New_temp_wd\";\n+\n+\tpublic static void startTestRun(JDialogOperator dialog) {\n+\t\t\/\/Click on the \"New\" radio button\n+\t\tnew JRadioButtonOperator(dialog, \"Start a new test run\").push();\n+\t}\n+\n+\tpublic static void pickTempWorkDir(JDialogOperator dialog) {\n+\n+\t\tdeleteDirectory(new File(TEMP_WD_NAME));\n+\t\tgetTextField(dialog, \"Work directory\").typeText(TEMP_WD_NAME);\n+\n+\t}\n+\n+\tpublic static void pickExistingWorkDir(JDialogOperator dialog) {\n+\n+\t\tgetTextField(dialog, \"Work directory\").typeText(TEMP_WD_NAME);\n+\n+\t}\n+\n+\tpublic static void pickWorkDirWithConfiguration(JDialogOperator dialog) {\n+\t\tgetTextField(dialog, \"Work directory\").typeText(DEFAULT_WD_NAME);\n+\t}\n+\n+\tpublic static void done(JDialogOperator dialog) {\n+\t\tnew JButtonOperator(dialog, \"Done\").push();\n+\t}\n+\n+\tprotected JFrameOperator mainFrame;\n+\tprotected JDialogOperator quickStartDialog;\n+\t\n+\t@Before\n+\tpublic void setUp() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(NEWDESKTOP_ARG);\n+\t\tmainFrame = findMainFrame();\n+\t\tquickStartDialog = openQuickStart(mainFrame);\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * To change this template, choose Browse | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JLabelOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New1 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New1\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew1() {\n+\n+            startTestRun(quickStartDialog);\n+            \n+\t\t\tnext(quickStartDialog);\n+\n+            \/\/Check that label \"Test suite\" exists in the dialog\n+            new JLabelOperator(quickStartDialog, \"Test suite\");\n+\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New1.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,161 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * Start JavaTest with -newdesktop. The JavaTest Quick Start wizard will be displayed. \n+ * Click on Start a new test run. Click on Next button. Specify an existing testsuite. \n+ * Click on Next button. Click on Use an configuration Template. Specify an exiting \n+ * template file and click on Next button. Click on Next button. Specify a new \n+ * workdirectory and click on Next button. Uncheck the Start the Configuration editor, \n+ * check the Start test run and click on Finish button. The tests will be run in \n+ * JavaTest. Verify the correct numbers of pass\/fail\/not run in the right panel\n+ *\/\n+package jthtest.New;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.QSWizard;\n+import jthtest.tools.QSWizard.ChooseConfigurationPanel;\n+import jthtest.tools.QSWizard.ChooseTestSuitePanel;\n+import jthtest.tools.QSWizard.ChooseWorkDirectoryPanel;\n+import jthtest.tools.QSWizard.NewTestsuiteAlmostDone;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New10 extends Test {\n+\n+    public void testImpl() throws Exception {\n+        JTFrame.closeQSOnOpen = false;\n+        mainFrame = new JTFrame(true);\n+\n+        QSWizard qs = new QSWizard();\n+        QSWizard.GreetingsPanel gp = (QSWizard.GreetingsPanel) qs.getPanel();\n+        gp.setStartNewTestRun();\n+        ChooseTestSuitePanel ctsp = gp.pushNext();\n+\n+        ctsp.setTestsuite(TEST_SUITE_NAME);\n+        ChooseConfigurationPanel ccp = ctsp.pushNext();\n+\n+        ccp.setUseAConfigurationTemplate();\n+        ccp.setPath(TEMPLATE_NAME);\n+        ChooseWorkDirectoryPanel cwdp = ccp.pushNext();\n+\n+        addUsedFile(LOCAL_PATH + TEMP_WD_NAME);\n+        cwdp.setWorkDirectory(LOCAL_PATH + TEMP_WD_NAME);\n+        NewTestsuiteAlmostDone ntad = cwdp.pushNext();\n+\n+        ntad.setStartTestRun(true);\n+        ntad.setStartTheConfigEditor(false);\n+        ntad.pushNext();\n+\n+        JDialogOperator create = new JDialogOperator(\"Configuration Required\");\n+        new JButtonOperator(create, \"OK\").push();\n+\n+        ConfigDialog cd = mainFrame.getConfiguration().findConfigEditorDialog();\n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+\n+        JDialogOperator save = new JDialogOperator(\"Save Configuration File\");\n+        JTextFieldOperator path =\n+                new JTextFieldOperator(Tools.<JTextField>getComponentPar(save, new String[]{\"File Name:\", \"Folder Name:\", \"File name:\", \"Folder name:\"}));\n+        File f = new File(LOCAL_PATH + File.separator + \"temp_configuration_file_that_will_be_deleted.jti\");\n+        if (f.exists()) {\n+            if (f.isDirectory()) {\n+                Tools.deleteDirectory(f);\n+            } else {\n+                f.delete();\n+            }\n+        }\n+\n+        addUsedFile(f);\n+        path.enterText(f.getAbsolutePath());\n+\n+        mainFrame.waitForExecutionDone();\n+        int[] expectedCounters = new int[]{16, 1, 0, 0, 17, 0, 17};\n+        mainFrame.waitForCounters(expectedCounters);\n+\n+\/\/        startTestRun(quickStartDialog);\n+\/\/\n+\/\/\tnext(quickStartDialog);\n+\/\/\n+\/\/\tpickDefaultTestsuite(quickStartDialog);\n+\/\/\n+\/\/\tnext(quickStartDialog);\n+\/\/\n+\/\/\tuseConfigTemplate(quickStartDialog);\n+\/\/\n+\/\/\tnext(quickStartDialog);\n+\/\/\n+\/\/\tpickTempWorkDir(quickStartDialog);\n+\/\/\n+\/\/\tnext(quickStartDialog);\n+\/\/\n+\/\/\tfinish(quickStartDialog, false, true);\n+\/\/\n+\/\/\tJDialogOperator create = new JDialogOperator(\"Configuration Required\");\n+\/\/\tnew JButtonOperator(create, \"OK\").push();\n+\/\/\n+\/\/\tJDialogOperator config = ConfigTools.findConfigEditor(mainFrame);\n+\/\/\tConfigTools.pushLastConfigEditor(config);\n+\/\/\tConfigTools.pushDoneConfigEditor(config);\n+\/\/\tJDialogOperator save = new JDialogOperator(\"Save Configuration File\");\n+\/\/\tJTextFieldOperator path =\n+\/\/\t\tnew JTextFieldOperator(Tools.<JTextField>getComponentPar(save, new String[]{\"File Name:\", \"Folder Name:\", \"File name:\", \"Folder name:\"}));\n+\/\/\tFile f = new File(Tools.LOCAL_PATH + File.separator + \"temp_configuration_file_that_will_be_deleted.jti\");\n+\/\/\tif (f.exists()) {\n+\/\/\t    if (f.isDirectory()) {\n+\/\/\t\tdeleteDirectory(f);\n+\/\/\t    } else {\n+\/\/\t\tf.delete();\n+\/\/\t    }\n+\/\/\t}\n+\/\/\n+\/\/\tpath.enterText(f.getAbsolutePath());\n+\/\/\n+\/\/\ttry {\n+\/\/\t    new JTextFieldOperator(mainFrame, \"Finished test run.\");\n+\/\/\t    pause(2);\n+\/\/\n+\/\/\t    checkCounters(mainFrame, new int[]{16, 1, 0, 0, 17, 0, 17});\n+\/\/\t} finally {\n+\/\/\t    f.deleteOnExit();\n+\/\/\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Start JavaTest with -newdesktop. The JavaTest Quick Start wizard will be displayed. Click on Start a new test run. Click on Next button. Specify an existing testsuite. Click on Next button. Click on Use an configuration Template. Specify an exiting template file and click on Next button. Click on Next button. Specify a new workdirectory and click on Next button. Uncheck the Start the Configuration editor, check the Start test run and click on Finish button. The tests will be run in JavaTest. Verify the correct numbers of pass\/fail\/not run in the right panel\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New10.java","additions":161,"deletions":0,"binary":false,"changes":161,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * To change this template, choose Browse | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.New;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+import jthtest.ConfigTools;\n+import jthtest.Tools;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.DialogOperator;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New10_1 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New10\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew10() throws InterruptedException {\n+\t\t\/\/ known problem - cr6957366\n+\n+\t\tif (true)\n+\t\t\treturn;\n+\n+\t\tstartTestRun(quickStartDialog);\n+\n+\t\tnext(quickStartDialog);\n+\n+\t\tpickDefaultTestsuite(quickStartDialog);\n+\n+\t\tnext(quickStartDialog);\n+\n+\t\tuseConfigTemplate(quickStartDialog);\n+\n+\t\tnext(quickStartDialog);\n+\n+\t\tpickTempWorkDir(quickStartDialog);\n+\n+\t\tnext(quickStartDialog);\n+\n+\t\tfinish(quickStartDialog, false, true);\n+\n+\t\tJDialogOperator create = new JDialogOperator(\"Configuration Required\");\n+\t\tnew JButtonOperator(create, \"OK\").push();\n+\n+\t\tJDialogOperator config = ConfigTools.findConfigEditor(mainFrame);\n+\t\tConfigTools.pushDoneConfigEditor(config);\n+\t\tJDialogOperator save = new JDialogOperator(\"Save Configuration File\");\n+\t\tJTextFieldOperator path =\n+\t\t\t\tnew JTextFieldOperator(Tools.<JTextField>getComponentPar(save, new String[]{\"File Name:\", \"Folder Name:\", \"File name:\", \"Folder name:\"}));\n+\t\tFile f = new File(Tools.LOCAL_PATH + File.separator + \"temp_configuration_file_that_will_be_deleted.jti\");\n+\t\tif (f.exists()) {\n+\t\t\tif (f.isDirectory()) {\n+\t\t\t\tdeleteDirectory(f);\n+\t\t\t} else {\n+\t\t\t\tf.delete();\n+\t\t\t}\n+\t\t}\n+\n+\t\tpath.typeText(f.getAbsolutePath());\n+\t\ttry {\n+\t\t\tnew JTextFieldOperator(mainFrame, \"Finished test run.\");\n+\n+\t\t\tcheckCounters(mainFrame, new int[]{16, 1, 0, 0, 17, 0, 17});\n+\n+\t\t} finally {\n+\t\t\tf.deleteOnExit();\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New10_1.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New3 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New3\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew3() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tcreateConfiguration(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickTempWorkDir(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tfinish(quickStartDialog, false, false);\n+\n+\t\t\tmainFrame = new JFrameOperator(WINDOWNAME);\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New3.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New5 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New5\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew5() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\t\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tuseConfigTemplate(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New5.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import static org.junit.Assert.fail;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New6 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New6\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew6() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\t\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tuseMissingConfigTemplate(quickStartDialog);\n+\n+\t\t\tif (isNextEnabled(quickStartDialog))\n+\t\t\t\tfail(\"Button 'Next' must be enabled\");\n+\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New6.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New7 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New7\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew7() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\t\n+\t\t\tnext(quickStartDialog);\n+\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New7.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New8 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New8\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew8() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\t\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tcreateConfiguration(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickTempWorkDir(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New8.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.New;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class New9 extends New {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.New.New9\");\n+\t}\n+\n+\t@Test\n+\tpublic void testNew9() {\n+\t\t\tstartTestRun(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickDefaultTestsuite(quickStartDialog);\n+\t\t\t\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tcreateConfiguration(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tpickExistingWorkDir(quickStartDialog);\n+\n+\t\t\tnext(quickStartDialog);\n+\n+\t\t\tnew JDialogOperator(mainFrame, \"Error\");\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/New\/New9.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,231 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.LinkedList;\n+import org.netbeans.jemmy.JemmyException;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public abstract class NonguiTest {\n+\n+    public static final String TEMP_WD_NAME = \"javatest_guitest_demowd\";\n+    public static final String DEFAULT_WD_NAME = \"demowd_config\";\n+    public static final String WD_RUN_NAME = \"demowd_run\";\n+    public static final String TEST_SUITE_NAME = \"demots\";\n+    public static final String TEMPLATE_NAME = \"demotemplate.jtm\";\n+    public static final String REPORT_NAME = \"demoreport\";\n+    public static String TEMP_PATH;\n+    public static String LOCAL_PATH;\n+    public static String DEFAULT_PATH;\n+    public static String USER_HOME_PATH;\n+    public static final String CONFIG_NAME = \"democonfig.jti\";\n+    public static final String TESTS_DIRECTORY_PREFIX = \"tests\" + File.separator;\n+    public static final String NEWDESKTOP_ARG = \"-newdesktop\";\n+    public static final String WINDOWNAME = System.getProperty(\"jt_gui_test.name\");\n+    public static final String TESTSUITENAME = \"DemoTS 1.0 Test Suite (Tag Tests)\";\n+    public static final String REPORT_WD_PATH = \"demowd_run\";\n+    public static final String KFL_NORMAL_PATH = \"knownfailures.kfl\";\n+    public static final String KFL_PASSED_PATH = \"knownfailures_passed.kfl\";\n+    public static boolean showWarnings = true;\n+\n+    static {\n+        String temp = System.getProperty(\"user.dir\") + File.separator;\n+        if (temp == null || \"\".equals(temp)) {\n+            File tmp = new File(\"\");\n+            temp = tmp.getAbsolutePath();\n+        }\n+        DEFAULT_PATH = LOCAL_PATH = temp;\n+\n+        TEMP_PATH = temp + File.separator + \"temp\";\n+\n+        USER_HOME_PATH = System.getProperty(\"user.home\") + File.separator;\n+\n+        String showWarningsStr = System.getProperty(\"jt_gui_test.showWarnings\");\n+        if (showWarningsStr != null) {\n+            showWarnings = Boolean.parseBoolean(showWarningsStr);\n+        }\n+    }\n+    protected LinkedList<String> errors;\n+    protected LinkedList<String> warnings;\n+    protected LinkedList<File> usedFiles;\n+    protected boolean depricated = false;\n+    private boolean ignoreDepricated = true;\n+    protected LinkedList<File> toCopyFiles;\n+\n+    public NonguiTest() {\n+        warnings = new LinkedList<String>();\n+        errors = new LinkedList<String>();\n+        usedFiles = new LinkedList<File>();\n+        toCopyFiles = new LinkedList<File>();\n+    }\n+\n+    public NonguiTest(File... files) {\n+        errors = new LinkedList<String>();\n+        warnings = new LinkedList<String>();\n+        usedFiles = new LinkedList<File>();\n+        toCopyFiles = new LinkedList<File>();\n+        for (File f : files) {\n+            toCopyFiles.add(f);\n+        }\n+    }\n+\n+    public void addUsedFile(File f) {\n+        usedFiles.add(f);\n+    }\n+\n+    public void addUsedFile(String f) {\n+        usedFiles.add(new File(f));\n+    }\n+\n+    public void addToCopyFile(String f) {\n+        toCopyFiles.add(new File(f));\n+    }\n+\n+    private void preTest() throws IOException {\n+        File name = new File(TESTS_DIRECTORY_PREFIX + this.getClass().getSimpleName());\n+        if (name.exists()) {\n+            Tools.deleteDirectory(name);\n+        }\n+        name.mkdirs();\n+        Tools.DEFAULT_PATH = Tools.USER_HOME_PATH = Tools.LOCAL_PATH = name.getAbsolutePath() + File.separator;\n+        Tools.TEMP_PATH = name.getAbsolutePath() + File.separator + \"temp\" + File.separator;\n+        DEFAULT_PATH = USER_HOME_PATH = LOCAL_PATH = name.getAbsolutePath() + File.separator;\n+        TEMP_PATH = name.getAbsolutePath() + File.separator + \"temp\" + File.separator;\n+        for (File f : toCopyFiles) {\n+            Tools.copyDirectory(f, name);\n+        }\n+    }\n+\n+    @org.junit.Test\/\/(timeout=1200000)\n+    public final void test() throws Throwable {\n+        if (!depricated || !ignoreDepricated) {\n+            Worker w = null;\n+            try {\n+                preTest();\n+                w = new Worker();\n+                Thread tr = new Thread(w);\n+                tr.start();\n+\n+                t = 0;\n+                while (t < maxTime && w.isWorking) {\n+                    try {\n+                        Thread.sleep(step);\n+                        t += step;\n+                    } catch (InterruptedException ex) {\n+                    }\n+                }\n+\n+                if (w.isWorking) {\n+                    tr.interrupt();\n+                    errors.add(\"Test was interrupted. Waited \" + t \/ 1000 + \"s\");\n+                    throw new InterruptedException();\n+                }\n+            } finally {\n+                releaseResources();\n+                if (w != null && w.error != null) {\n+                    throw w.error;\n+                }\n+                if (!warnings.isEmpty() && showWarnings) {\n+                    System.out.println(\"Warnings: \");\n+                    for (String s : warnings) {\n+                        System.out.println(s);\n+                    }\n+                }\n+                if (!errors.isEmpty()) {\n+                    StringBuilder builder = new StringBuilder(\"Failed: \\n\");\n+                    for (String s : errors) {\n+                        builder.append(s).append(\"\\n\");\n+                    }\n+                    String description = getDescription();\n+                    if (description != null) {\n+                        builder.append(\"\\n\").append(description).append(\"\\n\");\n+                    }\n+\n+                    throw new JemmyException(builder.toString());\n+                }\n+            }\n+        } else {\n+            System.out.println(\"Test is depticated. Marking as Passed. \");\n+        }\n+    }\n+\n+    public abstract void testImpl() throws Exception;\n+\n+    public String getDescription() {\n+        return null;\n+    }\n+\n+    public void releaseImpl() throws Exception {\n+    }\n+\n+    private void releaseResources() {\n+        try {\n+            releaseImpl();\n+        } catch (Exception e) {\n+        }\n+        for (File f : usedFiles) {\n+            try {\n+                if (f.exists()) {\n+                    if (f.isDirectory()) {\n+                        Tools.deleteDirectory(f);\n+                    } else if (f.isFile()) {\n+                        f.delete();\n+                    }\n+                    if (f.exists()) {\n+                        System.err.println(\"Temporary file \" + f.getAbsolutePath() + \" was not removed. Please remove it manualy.\");\n+                    }\n+                }\n+            } catch (Exception e) {\n+            }\n+        }\n+    }\n+    public int maxTime = 1200000; \/\/ 20 minutes\n+    public int step = 1000;\n+    public int t = 0;\n+    public boolean isWorkReady = false;\n+\n+    private class Worker implements Runnable {\n+\n+        public Throwable error = null;\n+        public boolean isWorking = true;\n+\n+        @Override\n+        public void run() {\n+            try {\n+                testImpl();\n+            } catch (Throwable ex) {\n+                this.error = ex;\n+            }\n+            isWorking = false;\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/NonguiTest.java","additions":231,"deletions":0,"binary":false,"changes":231,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.OpenTestSuite;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Before;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Tools;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class OpenTestSuite extends Tools {\n+\n+\tprotected static final String TAB_CAPTION = \"DemoTS 1.0 Test Suite (Tag Tests)\";\n+\n+\tprotected JFrameOperator mainFrame;\n+\n+\t@Before\n+\tpublic void setUp() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(NEWDESKTOP_ARG);\n+\t\t\n+\t\tmainFrame = findMainFrame();\n+\t}\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/OpenTestSuite\/OpenTestSuite.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.OpenTestSuite;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+\n+public class OpenTestSuite1 extends OpenTestSuite {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.OpenTestSuite.OpenTestSuite1\");\n+\t}\n+\n+\t@Test\n+\tpublic void testOpenTestSuite1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\t\/\/ Open the testsuite \n+\t\topenTestSuite(mainFrame);\n+\t\t\/\/ Find the \"DemoTS\" tab\n+        waitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+\t\tnew JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/OpenTestSuite\/OpenTestSuite1.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.OpenTestSuite;\n+\n+import static org.junit.Assert.fail;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+\n+public class OpenTestSuite2 extends OpenTestSuite {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.OpenTestSuite.OpenTestSuite2\");\n+\t}\n+\n+\t@Test\n+\tpublic void testOpenTestSuite2() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\/\/ Open the same testsuite twice\n+\t\topenTestSuite(mainFrame);\n+\t\topenTestSuite(mainFrame);\n+        waitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+\n+\t\t\/\/ Find the \"DemoTS\" tab\n+\t\tJTabbedPaneOperator tabs = new JTabbedPaneOperator(mainFrame, TAB_CAPTION);\n+\t\tif (tabs.getTabCount() != 2) {\n+\t\t\tfail(\"Wrong tab count after opening the same test suite twice\");\n+\t\t}\n+\n+\t\t\/\/ ensure that tabs have the right caption\n+\t\tif (!tabs.getTitleAt(0).contains(TAB_CAPTION) || !tabs.getTitleAt(1).contains(TAB_CAPTION)) {\n+\t\t\tfail(\"Tabs opened from the same teststuite have different captions\");\n+\t\t}\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/OpenTestSuite\/OpenTestSuite2.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.OpenTestSuite;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.WorkDirectory;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class OpenTestSuite_1 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\tFile temp = mainFrame.createWorkDirectoryInTemp();\n+\t\taddUsedFile(temp);\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\t\tmainFrame.runTests().waitForDone();\n+\n+\t\tmainFrame.closeCurrentTool();\n+\n+\t\tWorkDirectory wd = mainFrame.getWorkDirectory();\n+\t\twd.openWorkDirectory(temp);\n+\t\twd.waitForStatus(WorkDirectory.WDStatus.SOME_FAILED);\n+\t\tif (!new JTabbedPaneOperator(mainFrame.getJFrameOperator(), new NameComponentChooser(\"br.tabs\")).isEnabledAt(2)) {\n+\t\t\tthrow new JemmyException(\"'Passed' tab is inactive\");\n+\t\t}\n+\n+\/*\t\topenTestSuite(mainFrame);\n+\t\tcreateWorkDirInTemp(mainFrame);\n+\t\tConfigTools.openConfigFile(ConfigTools.openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+\t\tstartTests(mainFrame);\n+\t\tnew JButtonOperator(new JDialogOperator(\"View Filter Info\"), \"OK\").push();\n+\t\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_FAILED);\n+\n+\t\tnew JMenuOperator(mainFrame, \"File\").pushMenu(new String[]{\"File\", \"Close\"});\n+\n+\t\tCreateWorkdir.createWorkDir(CreateWorkdir.openWorkDirectoryOpening(mainFrame), TEMP_PATH, TEMP_WD_NAME, false);\n+\/\/\topenWorkDirectory(mainFrame, TEMP_PATH + TEMP_WD);\n+\n+\t\twaitForWDLoading(mainFrame, WDLoadingResult.SOME_FAILED);\n+\t\tif (!new JTabbedPaneOperator(mainFrame, new NameComponentChooser(\"br.tabs\")).isEnabledAt(2)) {\n+\t\t\tthrow new JemmyException(\"'Passed' tab is inactive\");\n+\t\t}*\/\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/OpenTestSuite\/OpenTestSuite_1.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.ReportConverter;\n+\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.Task.Waiter;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JEditorPaneOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class ReportConverter1 extends Test {\n+    String find1 = \"Greetings!Thistoolisusedtomergemanyxmlreportsintoone.Selectoutputdirectoryand2ormorexmlreports.\";\n+    String find2 = \"Greetings!Thistoolisusedtomergemanyxmlreportsintoone.PushSettings->New...menutoopenconverterdialog.orSettings->Opentoopenafileforreading\";\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.getTools_ReportConverterMenu().push();\n+        \n+        JEditorPaneOperator op = new JEditorPaneOperator(mainFrame.getJFrameOperator());\n+        Waiter waiter = new WaiterImpl(op, find1);\n+        waiter.waitForDone();\n+        \n+        JDialogOperator d = new JDialogOperator(\"Create a Report\");\n+        new JButtonOperator(d, \"Cancel\").push();\n+\n+        waiter = new WaiterImpl(op, find2);\n+        waiter.waitForDone();\n+    }\n+\n+    private static class WaiterImpl extends Waiter {\n+        private final JEditorPaneOperator editpane;\n+        private final String toFind;\n+\n+        public WaiterImpl(JEditorPaneOperator op, String toFind) {\n+            super(false);\n+            this.editpane = op;\n+            if (toFind == null || toFind.equals(\"\")) {\n+                throw new IllegalArgumentException();\n+            }\n+            this.toFind = toFind.replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+            start();\n+        }\n+\n+        @Override\n+        protected boolean check() {\n+            String txt = editpane.getDisplayedText();\n+            if (txt == null)\n+                return false;\n+            String text = txt.replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+            return text != null && text.equals(toFind);\n+        }\n+    }\n+    \n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportConverter\/ReportConverter1.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,853 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.net.MalformedURLException;\n+import jthtest.ReportTools;\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.HyperlinkEvent;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JEditorPaneOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate extends ReportTools {\n+\n+    public static void selectCustomFilter(JFrameOperator mainFrame) {\n+        new JMenuOperator(mainFrame, getExecResource(\"ce.view.menu\")).pushMenu(getExecResource(\"ce.view.menu\") + \"|\" + getExecResource(\"fconfig.submenu.menu\") + \"|4 Custom\", \"|\");\n+    }\n+\n+    public static void chooseFilter(JDialogOperator rep, FiltersType type) {\n+        JComboBoxOperator chooser = new JComboBoxOperator(rep, new NameComponentChooser(\"fconfig.box\"));\n+        switch (type) {\n+            case LAST_TEST_RUN:\n+                chooser.setSelectedIndex(0);\n+                break;\n+            case CURRENT_CONFIGURATION:\n+                chooser.setSelectedIndex(1);\n+                break;\n+\/\/\t    case CURRENT_TEMPLATE: chooser.setSelectedIndex(2); break;\n+            case ALL_TESTS:\n+                chooser.setSelectedIndex(2);\n+                break;\n+            case CUSTOM:\n+                chooser.setSelectedIndex(3);\n+                break;\n+        }\n+    }\n+\n+    public static class HtmlReport {\n+\n+        private JDialogOperator rep;\n+        private final String TAB_FILES_NAME = \"HTML Files\";\n+        private final String TAB_OPTIONS_NAME = \"HTML Options\";\n+        private Tabs tab;\n+        private boolean fPutInIndex, fPutInReport, fGeneratePassed, fGenerateError, fGenerateFailed,\n+                fGenerateNotRun;\n+        private boolean eBackUp;\n+        private int eBackUpNum;\n+\n+        public boolean isEBackUp() {\n+            return eBackUp;\n+        }\n+\n+        public int getEBackUpNum() {\n+            return eBackUpNum;\n+        }\n+\n+        public boolean isFGenerateError() {\n+            return fGenerateError;\n+        }\n+\n+        public boolean isFGenerateFailed() {\n+            return fGenerateFailed;\n+        }\n+\n+        public boolean isFGenerateNotRun() {\n+            return fGenerateNotRun;\n+        }\n+\n+        public boolean isFGeneratePassed() {\n+            return fGeneratePassed;\n+        }\n+\n+        public boolean isFPutInIndex() {\n+            return fPutInIndex;\n+        }\n+\n+        public boolean isFPutInReport() {\n+            return fPutInReport;\n+        }\n+\n+        public boolean isOConfig() {\n+            return oConfig;\n+        }\n+\n+        public boolean isOConfig_QuestionLog() {\n+            return oConfig_QuestionLog;\n+        }\n+\n+        public boolean isOConfig_StdValues() {\n+            return oConfig_StdValues;\n+        }\n+\n+        public boolean isOConfig_TestEnv() {\n+            return oConfig_TestEnv;\n+        }\n+\n+        public boolean isOKeywords() {\n+            return oKeywords;\n+        }\n+\n+        public boolean isOResults() {\n+            return oResults;\n+        }\n+        private boolean oConfig, oConfig_QuestionLog, oConfig_TestEnv, oConfig_StdValues, oResults, oKeywords;\n+\n+        public enum Tabs {\n+\n+            HTML_FILES_TAB, HTML_OPTIONS_TAB, UNSET\n+        }\n+\n+        public HtmlReport(JDialogOperator d) {\n+            rep = d;\n+            tab = Tabs.HTML_OPTIONS_TAB;\n+            select();\n+        }\n+\n+        public HtmlReport(JDialogOperator d, boolean init) {\n+            rep = d;\n+            tab = Tabs.UNSET;\n+            select();\n+\n+            if (init) {\n+                eBackUp = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.backup.bak\")).isSelected();\n+                eBackUpNum = Integer.parseInt(getTextField(rep, getExecResource(\"nrd.backup.bak.level.lbl\")).getText());\n+                selectTab(Tabs.HTML_FILES_TAB);\n+                fPutInIndex = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).isSelected();\n+                fPutInReport = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).isSelected();\n+                fGeneratePassed = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).isSelected();\n+                fGenerateError = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).isSelected();\n+                fGenerateFailed = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).isSelected();\n+                fGenerateNotRun = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).isSelected();\n+                selectTab(Tabs.HTML_OPTIONS_TAB);\n+                oConfig = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).isSelected();\n+                oConfig_QuestionLog = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).isSelected();\n+                oConfig_TestEnv = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).isSelected();\n+                oConfig_StdValues = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).isSelected();\n+                oResults = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).isSelected();\n+                oKeywords = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).isSelected();\n+            } else {\n+                setExtraBackUp(true);\n+                setExtraBackUpNum(1);\n+                setFilesAll(true);\n+                setOptionsAll(true);\n+            }\n+        }\n+\n+        private void select() {\n+            setHtmlChecked(rep, true);\n+        }\n+\n+        public void selectTab(Tabs tab) {\n+            switch (tab) {\n+                case HTML_FILES_TAB:\n+                    new JTabbedPaneOperator(rep, new NameComponentChooser(\"nrd.tabs\")).selectPage(TAB_FILES_NAME);\n+                    break;\n+                case HTML_OPTIONS_TAB:\n+                    new JTabbedPaneOperator(rep, new NameComponentChooser(\"nrd.tabs\")).selectPage(TAB_OPTIONS_NAME);\n+                    break;\n+            }\n+            this.tab = Tabs.HTML_FILES_TAB;\n+        }\n+\n+        public void setExtraBackUp(boolean b) {\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.backup.bak\")).setSelected(b);\n+            eBackUp = b;\n+        }\n+\n+        public void setExtraBackUpNum(Integer num) {\n+            getTextField(rep, getExecResource(\"nrd.backup.bak.level.lbl\")).typeText(num.toString());\n+            eBackUpNum = num;\n+        }\n+\n+        public void setFilesPutInIndex(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).setSelected(b);\n+            fPutInIndex = b;\n+        }\n+\n+        public void setFilesPutInReport(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).setSelected(b);\n+            fPutInReport = b;\n+        }\n+\n+        public void setFilesGeneratePassedTests(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).setSelected(b);\n+            fGeneratePassed = b;\n+        }\n+\n+        public void setFilesGenerateErrorTests(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).setSelected(b);\n+            fGenerateError = b;\n+        }\n+\n+        public void setFilesGenerateFailedTests(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).setSelected(b);\n+            fGenerateFailed = b;\n+        }\n+\n+        public void setFilesGenerateNotRunTests(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).setSelected(b);\n+            fGenerateNotRun = b;\n+        }\n+\n+        public void setOptionsConfiguration(boolean config, boolean questionLog, boolean testEnviroment, boolean standartVal) {\n+            if (tab != Tabs.HTML_OPTIONS_TAB) {\n+                selectTab(Tabs.HTML_OPTIONS_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).setSelected(config);\n+            oConfig = config;\n+            if (config) {\n+                new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).setSelected(questionLog);\n+                oConfig_QuestionLog = questionLog;\n+                new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).setSelected(testEnviroment);\n+                oConfig_TestEnv = testEnviroment;\n+                new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).setSelected(standartVal);\n+                oConfig_StdValues = standartVal;\n+            } else {\n+                oConfig_QuestionLog = oConfig_StdValues = oConfig_TestEnv = false;\n+            }\n+        }\n+\n+        public void setOptionsResults(boolean b) {\n+            if (tab != Tabs.HTML_OPTIONS_TAB) {\n+                selectTab(Tabs.HTML_OPTIONS_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).setSelected(b);\n+            oResults = b;\n+        }\n+\n+        public void setOptionsKeyword(boolean b) {\n+            if (tab != Tabs.HTML_OPTIONS_TAB) {\n+                selectTab(Tabs.HTML_OPTIONS_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).setSelected(b);\n+            oKeywords = b;\n+        }\n+\n+        public void setOptionsAll(boolean b) {\n+            if (tab != Tabs.HTML_OPTIONS_TAB) {\n+                selectTab(Tabs.HTML_OPTIONS_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).setSelected(b);\n+            oConfig = oConfig_QuestionLog = oConfig_StdValues = oConfig_TestEnv = oKeywords = oResults = b;\n+        }\n+\n+        public void setFilesAll(boolean b) {\n+            if (tab != Tabs.HTML_FILES_TAB) {\n+                selectTab(Tabs.HTML_FILES_TAB);\n+            }\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).setSelected(b);\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).setSelected(b);\n+            fGenerateError = fGenerateFailed = fGenerateNotRun = fGeneratePassed = fPutInIndex = fPutInReport = b;\n+        }\n+    }\n+\n+    public static class ReportBrowser {\n+\n+        private JDialogOperator browser;\n+        private String text;\n+        private String[] urls;\n+        private String basePath;\n+\n+        public void waitForPageLoading(String ends, String contains) {\n+            int time = 0;\n+            ends = ends.replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+            contains = contains.replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+            String text = getTextForced().replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+            do {\n+                try {\n+                    if (time > 60000) {\n+                        throw new JemmyException(\"Page containing '\" + contains + \"' and '\" + ends + \"' was not opened. Full page: \\n\" + text);\n+                    }\n+                    Thread.sleep(100);\n+                    time += 100;\n+                    text = getTextForced().replaceAll(\"[\\t\\n\\r\\f ]\", \"\");\n+                } catch (InterruptedException ex) {\n+                    Logger.getLogger(ReportCreate.class.getName()).log(Level.SEVERE, null, ex);\n+                }\n+            } while (!text.contains(ends) || !text.contains(contains));\n+        }\n+\n+        public JDialogOperator getBrowser() {\n+            return browser;\n+        }\n+\n+        public ReportBrowser(String path) {\n+            browser = new JDialogOperator(\"Report Browser\");\n+            text = null;\n+            urls = null;\n+            basePath = path;\n+        }\n+\n+        public void home() {\n+            new JButtonOperator(browser, new NameComponentChooser(\"Home\")).push();\n+            urls = null;\n+            text = null;\n+        }\n+\n+        public String[] getUrls() {\n+            if (urls != null) {\n+                return urls;\n+            }\n+            if (text == null) {\n+                getText();\n+            }\n+\n+            int pos = 0;\n+            int last = 0;\n+            ArrayList<String> tempList = new ArrayList<String>();\n+            while ((pos = text.indexOf(\"href\", pos)) != -1) {\n+                pos += 6;\n+                last = text.indexOf(\"\\\"\", pos);\n+                tempList.add(text.substring(pos, last));\n+                pos = last;\n+            }\n+            urls = new String[tempList.size()];\n+            urls = tempList.toArray(urls);\n+            return urls;\n+        }\n+\n+        public void clickUrl(String url) throws MalformedURLException {\n+            clickUrl(new URL(url));\n+        }\n+\n+        public void clickUrl(final URL url) {\n+            try {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+\n+                    public void run() {\n+                        JEditorPane editor = (JEditorPane) (new JEditorPaneOperator(browser).getSource());\n+                        final HyperlinkEvent hyperlinkEvent = new HyperlinkEvent(editor, HyperlinkEvent.EventType.ACTIVATED, url);\n+                        new JEditorPaneOperator(browser, new NameComponentChooser(\"text\")).fireHyperlinkUpdate(hyperlinkEvent);\n+                        urls = null;\n+                        text = null;\n+                        Tools.pause(2);\n+                    }\n+                });\n+            } catch (InterruptedException ex) {\n+                Logger.getLogger(ReportCreate.class.getName()).log(Level.SEVERE, null, ex);\n+            } catch (InvocationTargetException ex) {\n+                Logger.getLogger(ReportCreate.class.getName()).log(Level.SEVERE, null, ex);\n+            }\n+            urls = null;\n+            text = null;\n+        }\n+\n+        public String getText() {\n+            if (text == null) {\n+                text = new JEditorPaneOperator(browser, new NameComponentChooser(\"text\")).getText();\n+            }\n+            return text;\n+        }\n+\n+        public URL getPath() {\n+            JComboBoxOperator p = new JComboBoxOperator(browser, new NameComponentChooser(\"np.choice\"));\n+            URL u = (URL) (p.getModel().getSelectedItem());\n+            return u;\n+        }\n+\n+        private String getTextForced() {\n+            text = new JEditorPaneOperator(browser, new NameComponentChooser(\"text\")).getText();\n+            return text;\n+        }\n+    }\n+\n+    public static class HtmlReportChecker {\n+\n+        private String basePath;\n+        private ReportBrowser browser;\n+        private HtmlReport htmlReport;\n+\n+        private enum ReportType {\n+\n+            INDEX_HTML, REPORT_HTML\n+        };\n+\n+        public HtmlReportChecker(String path, HtmlReport report) {\n+            basePath = path;\n+            browser = new ReportBrowser(path);\n+            htmlReport = report;\n+        }\n+\n+        private void checkReportPage() throws JemmyException {\n+            String htmlPath = basePath + \"html\" + File.separator;\n+            String[] urls = browser.getUrls();\n+            StringBuffer error = new StringBuffer(\"\");\n+            int i = -1;\n+\n+            if (htmlReport.isFGenerateError()) {\n+                if (!(new File(htmlPath + \"error.html\").exists())) {\n+                    error.append(\"error.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"error.html\").exists()) {\n+                    error.append(\"error.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isFGenerateFailed()) {\n+                if (!(new File(htmlPath + \"failed.html\").exists())) {\n+                    error.append(\"failed.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"failed.html\").exists()) {\n+                    error.append(\"failed.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isFGenerateNotRun()) {\n+                if (!(new File(htmlPath + \"notRun.html\").exists())) {\n+                    error.append(\"notRun.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"notRun.html\").exists()) {\n+                    error.append(\"notRun.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isFGeneratePassed()) {\n+                if (!(new File(htmlPath + \"passed.html\").exists())) {\n+                    error.append(\"passed.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"passed.html\").exists()) {\n+                    error.append(\"passed.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isFPutInIndex()) {\n+                if (!(new File(htmlPath + \"index.html\").exists())) {\n+                    error.append(\"index.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"index.html\").exists()) {\n+                    error.append(\"index.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isFPutInReport()) {\n+                if (!(new File(htmlPath + \"report.html\").exists())) {\n+                    error.append(\"report.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                if (new File(htmlPath + \"report.html\").exists()) {\n+                    error.append(\"report.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isOConfig()) {\n+                checkFileUrls(urls);\n+                i = findInStringArray(urls, \"#Configuration and Other Settings\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain configuration url '#Configuration and Other Settings'\\n\");\n+                }\n+                if (!browser.getText().contains(\"name=\\\"Configuration and Other Settings\\\"\")) {\n+                    error.append(\"report doesn't contain configuration block\\n\");\n+                }\n+\/\/\t\ti = findInStringArray(urls, \"#locations\");\n+\/\/\t\tif (i == -1) {\n+\/\/\t\t    error.append(\"report doesn't contain url to 'Where to put the results' block\\n\");\n+\/\/\t\t}\n+                if (!browser.getText().contains(\"name=locations\") && !browser.getText().contains(\"name=\\\"locations\\\"\")) {\n+                    error.append(\"report doesn't contain 'Where to put the results' block\\n\");\n+                }\n+\n+                if (htmlReport.isOConfig_QuestionLog()) {\n+                    i = findInStringArray(urls, \"config.html\");\n+                    if (i == -1) {\n+                        error.append(\"report doesn't contain url to config.html\\n\");\n+                    }\n+                    if (!(new File(htmlPath + \"config.html\").exists())) {\n+                        error.append(\"config.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                    }\n+                } else {\n+                    i = findInStringArray(urls, \"config.html\");\n+                    if (i != -1) {\n+                        error.append(\"report contains url to config.html while unexpected\\n\");\n+                    }\n+                    if (new File(htmlPath + \"config.html\").exists()) {\n+                        error.append(\"config.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                    }\n+                }\n+\n+                if (htmlReport.isOConfig_StdValues()) {\n+                    i = findInStringArray(urls, \"#selection\");\n+                    if (i == -1) {\n+                        error.append(\"report doesn't contain url to standart values block\\n\");\n+                    }\n+                    if (!browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                        error.append(\"report doesn't contain standart values block\\n\");\n+                    }\n+                    if (!new File(htmlPath + \"excluded.html\").exists()) {\n+                        error.append(\"excluded.html wasn't found at the path '\" + htmlPath + \"'\\n\");\n+                    }\n+                } else {\n+                    i = findInStringArray(urls, \"#selection\");\n+                    if (i != -1) {\n+                        error.append(\"report contains url to standart values block while unexpected\\n\");\n+                    }\n+                    if (browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                        error.append(\"report contains standart values block while unexpected\\n\");\n+                    }\n+                    if (new File(htmlPath + \"excluded.html\").exists()) {\n+                        error.append(\"excluded.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                    }\n+                }\n+\n+                if (htmlReport.isOConfig_TestEnv()) {\n+\/\/\t\t    i = findInStringArray(urls, \"#execution\");\n+\/\/\t\t    if (i == -1) {\n+\/\/\t\t\terror.append(\"report doesn't contain url to test enviroment ('How to run') block\\n\");\n+\/\/\t\t    }\n+                    if (!browser.getText().contains(\"name=execution\") && !browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                        error.append(\"report doesn't contain test enviroment ('How to run') block\\n\");\n+                    }\n+                    if (!(new File(htmlPath + \"env.html\").exists())) {\n+                        error.append(\"env.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                    }\n+                } else {\n+                    i = findInStringArray(urls, \"#execution\");\n+                    if (i != -1) {\n+                        error.append(\"report contains url to test enviroment ('How to run') block while unexpected\\n\");\n+                    }\n+                    if (browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                        error.append(\"report contains test enviroment ('How to run') block while unexpected\\n\");\n+                    }\n+                    if (new File(htmlPath + \"env.html\").exists()) {\n+                        error.append(\"env.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                    }\n+                }\n+            } else {\n+                i = findInStringArray(urls, \"#Configuration and Other Settings\");\n+                if (i != -1) {\n+                    error.append(\"report contains configuration url '#Configuration and Other Settings' while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"Configuration and Other Settings\\\"\")) {\n+                    error.append(\"report contains configuration block while unexpected\\n\");\n+                }\n+                i = findInStringArray(urls, \"config.html\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to config.html while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"config.html\").exists()) {\n+                    error.append(\"config.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+                i = findInStringArray(urls, \"#selection\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to standart values block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                    error.append(\"report contains standart values block while unexpected\\n\");\n+                }\n+                i = findInStringArray(urls, \"#locations\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to 'Where to put the results' block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"locations\\\"\")) {\n+                    error.append(\"report contains 'Where to put the results' block while unexpected\\n\");\n+                }\n+                i = findInStringArray(urls, \"#execution\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to test enviroment ('How to run') block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                    error.append(\"report contains test enviroment ('How to run') block while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"env.html\").exists()) {\n+                    error.append(\"env.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"excluded.html\").exists()) {\n+                    error.append(\"excluded.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isOKeywords()) {\n+                i = findInStringArray(urls, \"#Statistics\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain url to Statistics block (produced by options-keywords)\\n\");\n+                }\n+                if (!browser.getText().contains(\"name=Statistics\") && !browser.getText().contains(\"name=\\\"Statistics\\\"\")) {\n+                    error.append(\"report doesn't contain Statistics block (produced by options-keywords)\\n\");\n+                }\n+                i = findInStringArray(urls, \"#keywordSummary\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain url to keywordSummary block\\n\");\n+                }\n+                if (!browser.getText().contains(\"name=keywordSummary\") && !browser.getText().contains(\"name=\\\"keywordSummary\\\"\")) {\n+                    error.append(\"report doesn't contain keywordSummary block\\n\");\n+                }\n+            } else {\n+                i = findInStringArray(urls, \"#Statistics\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to Statistics block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"Statistics\\\"\")) {\n+                    error.append(\"report contains Statistics block while unexpected\\n\");\n+                }\n+                i = findInStringArray(urls, \"#keywordSummary\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to keywordSummary block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"keywordSummary\\\"\")) {\n+                    error.append(\"report contains keywordSummary block while unexpected\\n\");\n+                }\n+            }\n+\n+            if (htmlReport.isOResults()) {\n+                i = findInStringArray(urls, \"#Results\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain url to Results block\\n\");\n+                }\n+                if (!browser.getText().contains(\"name=Results\") && !browser.getText().contains(\"name=\\\"Results\\\"\")) {\n+                    error.append(\"report doesn't contain Results block\\n\");\n+                }\n+            } else {\n+                i = findInStringArray(urls, \"#Results\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to Results block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"Results\\\"\")) {\n+                    error.append(\"report contains Results block while unexpected\\n\");\n+                }\n+            }\n+            if (error.length() > 0) {\n+                throw new JemmyException(error.toString());\n+            }\n+        }\n+\n+        private String getUrlToHtmlReportPage() {\n+            String[] urls = browser.getUrls();\n+            int i = -1;\n+            String t = \"\";\n+            if (htmlReport.isFPutInIndex()) {\n+                i = findInStringArray(urls, \"html\/index.html\");\n+                t = \"index\";\n+            } else {\n+                if (htmlReport.isFPutInReport()) {\n+                    i = findInStringArray(urls, \"html\/report.html\");\n+                    t = \"report\";\n+                } else {\n+                    throw new JemmyException(\"NIY - nor index.html nor report.html selected\");\n+                }\n+            }\n+            if (i == -1) {\n+                throw new JemmyException(\"Url to html report page was not found. Tring to browse from '\" + browser.getPath().toString() + \"' to \" + t);\n+            }\n+\n+            return urls[i];\n+        }\n+\n+        private void goToHtmlReport(ReportType type) {\n+            String path = browser.getPath().getPath();\n+            if (path.equals(basePath + \"html\/report.html\") && type == ReportType.REPORT_HTML) {\n+                return;\n+            }\n+            if (path.equals(basePath + \"html\/index.html\") && type == ReportType.INDEX_HTML) {\n+                return;\n+            }\n+\n+            if (type == ReportType.INDEX_HTML && htmlReport.isFPutInIndex()) {\n+                if (!path.equals(basePath + \"index.html\")) {\n+                    browser.home();\n+                    browser.waitForPageLoading(\"<\/html>\", TESTSUITENAME);\n+                }\n+                String url = getUrlToHtmlReportPage();\n+\n+                URL u = urlFile(basePath + File.separator + url);\n+                browser.clickUrl(u);\n+                browser.waitForPageLoading(\"<\/html>\", \"<title>\" + WINDOWNAME + \" Harness : Report\");\n+            }\n+\n+            if (type == ReportType.REPORT_HTML && htmlReport.isFPutInReport()) {\n+                URL u = urlFile(basePath + File.separator + \"html\");\n+                browser.clickUrl(u);\n+                browser.waitForPageLoading(\"<\/html>\", \"Directory listing for html\");\n+                u = urlFile(basePath + File.separator + \"html\" + File.separator + \"report.html\");\n+                browser.clickUrl(u);\n+                browser.waitForPageLoading(\"<\/html>\", \"<title>\" + WINDOWNAME + \" Harness : Report\");\n+            }\n+        }\n+\n+        public void commitMainCheck() {\n+            if (htmlReport.isFPutInIndex()) {\n+                goToHtmlReport(ReportType.INDEX_HTML);\n+                checkReportPage();\n+            }\n+            if (htmlReport.isFPutInReport()) {\n+                goToHtmlReport(ReportType.REPORT_HTML);\n+                checkReportPage();\n+            }\n+            if (!htmlReport.isFPutInIndex() && !htmlReport.isFPutInReport()) {\n+                throw new JemmyException(\"NIY\");\n+            }\n+\n+\n+        }\n+\n+        private StringBuffer checkFileUrls(String urls[]) {\n+            StringBuffer temp = new StringBuffer(\"\");\n+            boolean ts = false, wd = false, rp = false;\n+            for (int i = 0; i < urls.length; i++) {\n+                if (urls[i].equals(LOCAL_PATH + TEST_SUITE_NAME)) {\n+                    ts = true;\n+                }\n+                if (urls[i].equals(LOCAL_PATH + REPORT_WD_PATH)) {\n+                    wd = true;\n+                }\n+                if (urls[i].equals(basePath + \"html\")) {\n+                    rp = true;\n+                }\n+            }\n+            if (!ts) {\n+                temp.append(\"Url for testsuite was not found\");\n+            }\n+            if (!wd) {\n+                temp.append(\"Url for workdirektory was not found\");\n+            }\n+            if (!rp) {\n+                temp.append(\"Url for report directory was not found\");\n+            }\n+            return temp;\n+        }\n+    }\n+\n+    public static void checkSpecifiedReportFiles(HtmlReport report, String path) {\n+        if (report.isFGenerateFailed()) {\n+            if (!(new File(path + \"html\" + File.separator + \"failed.html\").exists())) {\n+                throw new JemmyException(\"failed.html was not created\");\n+            }\n+        } else {\n+            if (new File(path + \"html\" + File.separator + \"falied.html\").exists()) {\n+                throw new JemmyException(\"failed.html was created while unexpected\");\n+            }\n+        }\n+\n+        if (report.isFGenerateError()) {\n+            if (!(new File(path + \"html\" + File.separator + \"error.html\").exists())) {\n+                throw new JemmyException(\"passed.html was not created\");\n+            }\n+        } else {\n+            if (new File(path + \"html\" + File.separator + \"error.html\").exists()) {\n+                throw new JemmyException(\"passed.html was created while unexpected\");\n+            }\n+        }\n+\n+        if (report.isFGenerateNotRun()) {\n+            if (!(new File(path + \"html\" + File.separator + \"notRun.html\").exists())) {\n+                throw new JemmyException(\"passed.html was not created\");\n+            }\n+        } else {\n+            if (new File(path + \"html\" + File.separator + \"notRun.html\").exists()) {\n+                throw new JemmyException(\"passed.html was created while unexpected\");\n+            }\n+        }\n+\n+        if (report.isFGeneratePassed()) {\n+            if (!(new File(path + \"html\" + File.separator + \"passed.html\").exists())) {\n+                throw new JemmyException(\"passed.html was not created\");\n+            }\n+        } else {\n+            if (new File(path + \"html\" + File.separator + \"passed.html\").exists()) {\n+                throw new JemmyException(\"passed.html was created while unexpected\");\n+            }\n+        }\n+\n+    }\n+\n+    public static void createFakeRepDir(String path) {\n+        try {\n+            if (new File(path).exists()) {\n+                deleteDirectory(new File(path));\n+            }\n+            new File(path).mkdirs();\n+            new File(path + \"index.html\").createNewFile();\n+            new File(path + \"reportdir.dat\").createNewFile();\n+            new File(path + \"html\").mkdir();\n+            new File(path + \"html\" + File.separator + \"report.html\").createNewFile();\n+            new File(path + \"html\" + File.separator + \"report.css\").createNewFile();\n+        } catch (IOException ex) {\n+            Logger.getLogger(ReportCreate.class.getName()).log(Level.SEVERE, null, ex);\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate.java","additions":853,"deletions":0,"binary":false,"changes":853,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate1 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\t\tString path = TEMP_PATH + REPORT_NAME + \"_default\" + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\n+\t\tfindShowReportDialog();\n+\n+\t\tif (!new File(path + \"html\" + File.separator + \"report.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"report.html was not found in\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"error.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"error.html was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"notRun.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"notRun.html was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"failed.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"failed.html was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"passed.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"passed.html was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"report.css\").exists()) {\n+\t\t\tthrow new JemmyException(\"report.css was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"text\" + File.separator + \"summary.txt\").exists()) {\n+\t\t\tthrow new JemmyException(\"summary.txt was not found\");\n+\t\t}\n+\t\tif (!new File(path + \"html\" + File.separator + \"excluded.html\").exists()) {\n+\t\t\tthrow new JemmyException(\"excluded.html was not found\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate1.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import jthtest.ViewFilter.ViewFilter;\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate10 extends ReportCreate {\n+\n+\tJFrameOperator mainFrame;\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ReportCreate.ReportCreate10\");\n+\t}\n+\n+\t@Test\n+\tpublic void testReportCreate10() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\tdeleteUserData();\n+\/\/\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\tmainFrame = findMainFrame();\n+\/\/\n+\/\/\tselectEnableTSFilter();\n+\/\/\n+\/\/\tJDialogOperator rep = openReportCreation(mainFrame);\n+\/\/\n+\/\/\tfinal String path = TEMP_PATH + REPORT_NAME + \"_customfilter\" + File.separator;\n+\/\/\tsetPath(rep, path);\n+\/\/\n+\/\/\tchooseFilter(rep, FiltersType.CUSTOM);\n+\/\/\n+\/\/\tpressCreate(rep);\n+\/\/\n+\/\/\tpressYes(findShowReportDialog());\n+\t}\n+\n+\tpublic void selectEnableTSFilter() {\n+\t\tJDialogOperator filterEditor = ViewFilter.openFilterEditor(mainFrame);\n+\n+\t\tViewFilter.selectFilter(filterEditor, 4);\n+\n+\t\tViewFilter.chooseTab(filterEditor, \"Special\");\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Enable test suite filter.\").setSelected(true);\n+\n+\t\tViewFilter.ok(filterEditor);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate10.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import jthtest.ViewFilter.ViewFilter;\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate11 extends Test {\n+\n+\tJFrameOperator mainFrame;\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tmainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tsetPath(rep, path);\n+\n+\t\tsetPlainChecked(rep, false);\n+\t\tsetXmlChecked(rep, false);\n+\t\tHtmlReport html = new HtmlReport(rep);\n+\t\thtml.setOptionsAll(false);\n+\t\thtml.setOptionsConfiguration(true, false, true, false);\n+\t\thtml.setFilesAll(false);\n+\t\thtml.setFilesPutInReport(true);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, html).commitMainCheck();\n+\t}\n+\n+\tpublic void selectEnableTSFilter() {\n+\t\tJDialogOperator filterEditor = ViewFilter.openFilterEditor(mainFrame);\n+\n+\t\tViewFilter.selectFilter(filterEditor, 4);\n+\n+\t\tViewFilter.chooseTab(filterEditor, \"Special\");\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Enable test suite filter.\").setSelected(true);\n+\n+\t\tViewFilter.ok(filterEditor);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate11.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate12 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tString path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tsetPath(rep, path);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport html = new HtmlReport(rep);\n+\t\thtml.setFilesAll(false);\n+\t\thtml.setFilesPutInReport(true);\n+\t\thtml.setOptionsAll(false);\n+\t\thtml.setOptionsConfiguration(true, false, false, true);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tHtmlReportChecker check = new HtmlReportChecker(path, html);\n+\t\tcheck.commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate12.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate13 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport html = new HtmlReport(rep);\n+\t\thtml.setOptionsAll(false);\n+\t\thtml.setOptionsKeyword(true);\n+\t\thtml.setFilesAll(false);\n+\t\thtml.setFilesPutInReport(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tsetPath(rep, path);\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, html).commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate13.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate14 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesPutInReport(true);\n+\t\treport.setOptionsAll(false);\n+\t\treport.setOptionsResults(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tsetPath(rep, path);\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, report).commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate14.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate15 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesPutInReport(true);\n+\t\treport.setOptionsAll(false);\n+\t\treport.setOptionsResults(true);\n+\t\treport.setOptionsConfiguration(true, true, false, true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tHtmlReportChecker check = new HtmlReportChecker(path, report);\n+\t\tcheck.commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate15.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate16 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesPutInReport(true);\n+\t\treport.setOptionsResults(true);\n+\t\treport.setOptionsKeyword(true);\n+\t\treport.setOptionsConfiguration(true, false, true, true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tHtmlReportChecker check = new HtmlReportChecker(path, report);\n+\t\tcheck.commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate16.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate17 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesPutInIndex(true);\n+\t\treport.setOptionsResults(true);\n+\t\treport.setOptionsKeyword(true);\n+\t\treport.setOptionsConfiguration(true, false, true, true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tHtmlReportChecker check = new HtmlReportChecker(path, report);\n+\t\tcheck.commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate17.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate18 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesPutInIndex(true);\n+\t\treport.setFilesPutInReport(true);\n+\t\treport.setOptionsResults(true);\n+\t\treport.setOptionsKeyword(true);\n+\t\treport.setOptionsConfiguration(true, true, false, false);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tHtmlReportChecker check = new HtmlReportChecker(path, report);\n+\t\tcheck.commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate18.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate19 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGeneratePassedTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate19.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate2 extends Test {\n+\/\/\tprivate JFrameOperator mainFrame;\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\n+\t\tmainFrame = JTFrame.startJTWithRunWD();\n+\n+\/\/\t\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\t\tmainFrame = findMainFrame();\n+\/\/\n+\t\tJDialogOperator rep = openReportCreation(mainFrame.getJFrameOperator());\n+\t\tString path = TEMP_PATH + REPORT_NAME + \"_new\" + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\n+\t\tif (!new File(path).exists()) {\n+\t\t\tthrow new JemmyException(\"Directory was not created\");\n+\t\t}\n+\t}\n+\n+\/\/\t@Override\n+\/\/\tpublic void releaseImpl() throws Exception {\n+\/\/\t\tif (mainFrame != null)\n+\/\/\t\t\tcloseAll(mainFrame);\n+\/\/\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate2.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate20 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateFailedTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate20.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate21 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateErrorTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate21.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate22 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateNotRunTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate22.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate23 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateNotRunTests(true);\n+\t\treport.setFilesGeneratePassedTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate23.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate24 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateNotRunTests(true);\n+\t\treport.setFilesGeneratePassedTests(true);\n+\t\treport.setFilesGenerateFailedTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate24.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate25 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport report = new HtmlReport(rep);\n+\t\treport.setFilesAll(false);\n+\t\treport.setFilesGenerateNotRunTests(true);\n+\t\treport.setFilesGeneratePassedTests(true);\n+\t\treport.setFilesGenerateFailedTests(true);\n+\t\treport.setFilesGenerateErrorTests(true);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tcheckSpecifiedReportFiles(report, path);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate25.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate26 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, true);\n+\t\tsetHtmlChecked(rep, false);\n+\t\tchooseFilter(rep, FiltersType.CURRENT_CONFIGURATION);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tfindShowReportDialog();\n+\n+\t\tFile plainReport = new File(path + \"text\" + File.separator + \"summary.txt\");\n+\t\tif (!plainReport.canRead()) {\n+\t\t\tthrow new JemmyException(\"can't read text file\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate26.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * These test doesn't check any point of Html report as it doesn't affect xml report\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate27 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, true);\n+\t\tsetPlainChecked(rep, false);\n+\t\tsetHtmlChecked(rep, false);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tReportBrowser browser = new ReportBrowser(path);\n+\n+\t\tString[] urls = browser.getUrls();\n+\t\tint i = findInStringArray(urls, \"xml\/report.xml\");\n+\t\tif (i == -1) {\n+\t\t\tthrow new JemmyException(\"Expected 'xml\/report.xml' url in report browser\");\n+\t\t}\n+\t\tbrowser.clickUrl(urlFile(path + urls[i]));\n+\t\tbrowser.waitForPageLoading(\"<\/Report>\\n\", \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\");\n+\t\tString text = browser.getText();\n+\t\tif (!text.contains(\"<Interview>\")) {\n+\t\t\tthrow new JemmyException(\"Summary wasn't found ('<Interview>' expected)\");\n+\t\t}\n+\t\tif (!text.contains(\"<Environment name=\\\"\")) {\n+\t\t\tthrow new JemmyException(\"Test enviroment wasn't found ('<Environment name=\\\"' expected)\");\n+\t\t}\n+\t\tif (!text.contains(\"<StandardValues>\")) {\n+\t\t\tthrow new JemmyException(\"Standart values wasn't found ('<StandardValues>' expected)\");\n+\t\t}\n+\t\tif (!text.contains(\"<TestResults>\")) {\n+\t\t\tthrow new JemmyException(\"Result summary wasn't found ('<TestResults>' expected\");\n+\t\t}\n+\/\/\tif(!text.contains(\"<Keywords>\")) {\n+\/\/\t    throw new JemmyException(\"Keywords wasn't found (predefined warning: there isn't any similar block)\");\n+\/\/\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate27.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * These test doesn't check any point of Html report as it doesn't affect xml report\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate28 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\n+\t\tdeleteUserData();\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tcreateFakeRepDir(path);\n+\t\taddUsedFile(path);\n+\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport htmlReport = new HtmlReport(rep);\n+\t\thtmlReport.setOptionsAll(false);\n+\t\thtmlReport.setOptionsResults(true);\n+\t\thtmlReport.setFilesAll(false);\n+\t\thtmlReport.setExtraBackUp(false);\n+\t\thtmlReport.setFilesPutInReport(true);\n+\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, htmlReport).commitMainCheck();\n+\t\tif (new File(path + \"html~1~\").exists()) {\n+\t\t\tthrow new JemmyException(\"backup directory was created\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate28.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * These test doesn't check any point of Html report as it doesn't affect xml report\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate29 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tcreateFakeRepDir(path);\n+\t\taddUsedFile(path);\n+\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport htmlReport = new HtmlReport(rep);\n+\t\thtmlReport.setOptionsAll(false);\n+\t\thtmlReport.setOptionsResults(true);\n+\t\thtmlReport.setFilesAll(false);\n+\t\thtmlReport.setFilesPutInReport(true);\n+\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, htmlReport).commitMainCheck();\n+\t\tif (!(new File(path + \"html~1~\").exists())) {\n+\t\t\tthrow new JemmyException(\"backup directory wasn't created as expected\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate29.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate3 extends ReportCreate {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ReportCreate.ReportCreate3\");\n+\t}\n+\n+\t@Test\n+\tpublic void testReportCreate3() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tpressCreate(rep);\n+\n+\t\tnew JDialogOperator(WINDOWNAME + \" Harness: Error\");\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate3.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * These test doesn't check any point of Html report as it doesn't affect xml report\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate30 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tcreateFakeRepDir(path);\n+\t\taddUsedFile(path);\n+\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport htmlReport = new HtmlReport(rep);\n+\t\thtmlReport.setOptionsAll(false);\n+\t\thtmlReport.setOptionsResults(true);\n+\t\thtmlReport.setFilesAll(false);\n+\t\thtmlReport.setFilesPutInReport(true);\n+\n+\t\tsetPath(rep, path);\n+\t\tnew JButtonOperator(rep, \"Cancel\").push();\n+\n+\t\tif (new File(path + \"html~1~\").exists()) {\n+\t\t\tthrow new JemmyException(\"backup directory was created\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate30.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * These test doesn't check any point of Html report as it doesn't affect xml report\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate31 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tcreateFakeRepDir(path);\n+\t\taddUsedFile(path);\n+\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport htmlReport = new HtmlReport(rep, false);\n+\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\tnew JButtonOperator(findShowReportDialog(), \"No\").push();\n+\n+\t\trep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\thtmlReport = new HtmlReport(rep);\n+\t\thtmlReport.setExtraBackUp(false);\n+\n+\t\tnew JButtonOperator(rep, \"Cancel\").push();\n+\n+\t\trep = openReportCreation(mainFrame);\n+\t\thtmlReport = new HtmlReport(rep, true);\n+\n+\t\tif (!htmlReport.isEBackUp()) {\n+\t\t\tthrow new JemmyException(\"configuration was saved\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate31.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate32 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, true);\n+\t\tsetHtmlChecked(rep, false);\n+\t\tchooseFilter(rep, FiltersType.LAST_TEST_RUN);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\t\tfindShowReportDialog();\n+\n+\t\tFile plainReport = new File(path + \"text\" + File.separator + \"summary.txt\");\n+\t\tif (!plainReport.canRead()) {\n+\t\t\tthrow new JemmyException(\"can't read text file\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate32.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate33 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, true);\n+\t\tsetHtmlChecked(rep, false);\n+\t\tchooseFilter(rep, FiltersType.CUSTOM);\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\t\tfindShowReportDialog();\n+\n+\t\tFile plainReport = new File(path + \"text\" + File.separator + \"summary.txt\");\n+\t\tif (!plainReport.canRead()) {\n+\t\t\tthrow new JemmyException(\"can't read text file\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate33.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate34 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, true);\n+\t\tsetHtmlChecked(rep, false);\n+\t\tchooseFilter(rep, FiltersType.CUSTOM);\n+\t\tnew JButtonOperator(rep, new NameComponentChooser(\"fconfig.config\")).push();\n+\t\tJDialogOperator filter = new JDialogOperator(mainFrame, \"Filter Editor\");\n+\t\tnew JButtonOperator(filter, \"Cancel\").push();\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\t\tfindShowReportDialog();\n+\n+\t\tFile plainReport = new File(path + \"text\" + File.separator + \"summary.txt\");\n+\t\tif (!plainReport.canRead()) {\n+\t\t\tthrow new JemmyException(\"can't read text file\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate34.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate35 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+                Tools.deleteUserData();\n+                mainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\/\/\t\tdeleteUserData();\n+\/\/\t\tstartJavaTestWithDefaultWorkDirectory();\n+\/\/\n+\/\/\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame.getJFrameOperator());\n+\n+\t\tsetXmlChecked(rep, false);\n+\t\tsetPlainChecked(rep, false);\n+\t\tHtmlReport htmlReport = new HtmlReport(rep);\n+\t\thtmlReport.setFilesAll(false);\n+\t\thtmlReport.setFilesPutInIndex(true);\n+\t\thtmlReport.setOptionsAll(true);\n+\n+\t\tchooseFilter(rep, FiltersType.CUSTOM);\n+\t\tnew JButtonOperator(rep, new NameComponentChooser(\"fconfig.config\")).push();\n+\t\tJDialogOperator filter = new JDialogOperator(mainFrame.getJFrameOperator(), \"Filter Editor\");\n+\t\tnew JButtonOperator(filter, \"Cancel\").push();\n+\n+\t\tfinal String path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_PLAIN + File.separator;\n+\t\tdeleteDirectory(path);\n+\t\tsetPath(rep, path);\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(path);\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, htmlReport).commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate35.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate4 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tString path = TEMP_PATH + \"new\" + File.separator + \"directory\";\n+\t\tFile file = new File(path);\n+\t\tdeleteDirectory(file);\n+\n+\t\tsetPath(rep, path);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(file);\n+\n+\t\tif (!file.exists()) {\n+\t\t\tthrow new JemmyException(\"directory \" + path + \" was not created\");\n+\t\t} else {\n+\t\t\tdeleteDirectory(file);\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate4.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* Start JavaTest with an existing workdirectory. Bring up Create Report from \n+ * the Report menu. Enter a \/foo\/bar\/report path for report directory name. \n+ * Click on Create Reports button. An error message should be displayed. Verify \n+ * that an error message is displayed indicating cannot write reports: \n+ * \/foo\/bar\/report\/report.html(No such file or directory)\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate5 extends Test {\n+\n+\tpublic ReportCreate5() {\n+\t\tknownFail = true; \/\/ fails on Windows platform\n+\t}\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tString path = \"\/broken\/path!@#$%^&\";\n+\n+\t\tsetPath(rep, path);\n+\n+\t\tpressCreate(rep);\n+\n+\t\tnew JDialogOperator(WINDOWNAME + \" Harness: Error\");\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test case verifies that Create Report button under Report menu will produce an error message for if a non-existing path is specified for a report directory name. This test fails on Windows platfom.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate5.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate6 extends ReportCreate {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ReportCreate.ReportCreate6\");\n+\t}\n+\n+\t@Test\n+\tpublic void testReportCreate6() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tnew JButtonOperator(rep, \"Help\").push();\n+\n+\t\tnew JButtonOperator(rep, \"Cancel\").push();\n+\n+\t\tnew JFrameOperator(WINDOWNAME + \" Harness User's Guide\");\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate6.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.io.File;\n+import jthtest.Test;\n+import static jthtest.ReportCreate.ReportCreate.*;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate8 extends Test {\n+\n+\tpublic void testImpl() throws Exception {\n+\t\tdeleteUserData();\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\t\tsetPlainChecked(rep, false);\n+\t\tsetXmlChecked(rep, false);\n+\t\tString path = TEMP_PATH + REPORT_NAME + REPORT_POSTFIX_HTML + File.separator;\n+\t\tFile f = new File(path);\n+\t\tdeleteDirectory(f);\n+\n+\t\tsetPath(rep, path);\n+\n+\t\tHtmlReport html = new HtmlReport(rep);\n+\t\thtml.setFilesAll(false);\n+\t\thtml.setFilesPutInReport(true);\n+\t\thtml.setOptionsAll(false);\n+\t\thtml.setOptionsConfiguration(true, true, false, false);\n+\n+\t\tpressCreate(rep);\n+\t\taddUsedFile(f);\n+\n+\t\tpressYes(findShowReportDialog());\n+\n+\t\tnew HtmlReportChecker(path, html).commitMainCheck();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate8.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ReportCreate;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportCreate9 extends ReportCreate {\n+\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ReportCreate.ReportCreate9\");\n+\t}\n+\n+\t@Test\n+\tpublic void testReportCreate9() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavaTestWithDefaultWorkDirectory();\n+\n+\t\tString path = \"\/badpath\";\n+\n+\t\tJFrameOperator mainFrame = findMainFrame();\n+\n+\t\tJDialogOperator rep = openReportCreation(mainFrame);\n+\n+\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportCreate\/ReportCreate9.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JCheckBox;\n+import org.netbeans.jemmy.ClassReference;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class ReportTools extends Tools {\n+    public enum ReportType {HTML, PLAIN_TEXT, XML, CUSTOM_TEXT, CUSTOM_XML}; \n+\n+    public static final String REPORT_POSTFIX_HTML = \"_html\";\n+    public static final String REPORT_POSTFIX_XML = \"_xml\";\n+    public static final String REPORT_POSTFIX_PLAIN = \"_text\";\n+    public static final String REPORT_WD_PATH = \"demowd_run\";\n+    \n+    public static void startJavaTestWithDefaultWorkDirectory() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-NewDesktop\", \"-open\", LOCAL_PATH + java.io.File.separator + REPORT_WD_PATH});\n+    }\n+\n+    public static void setPath(JDialogOperator rep, String path) {\n+\tnew JButtonOperator(rep, getExecResource(\"nrd.browse.btn\")).push();\n+\tJDialogOperator browser = new JDialogOperator(\"Report Directory\");\n+\tgetTextField(browser, \"File Name:\").typeText(path);\n+        try { Thread.sleep(1000); } catch(Exception e) {}\n+\tnew JButtonOperator(browser, \"Open\").push();\n+    }\n+    \n+    public static void pressCreate(JDialogOperator rep) {\n+\tnew JButtonOperator(rep, getExecResource(\"nrd.ok.btn\")).push();\n+    }\n+\n+    public static JDialogOperator openReportCreation(JFrameOperator mainFrame) {\n+\tnew JMenuOperator(mainFrame, getExecResource(\"rpth.menu\")).pushMenuNoBlock((\"rpth.menu\") + \"|\" + getExecResource(\"rpth.new.act\"), \"|\");\n+\treturn new JDialogOperator(getExecResource(\"nrd.title\"));\n+    }\n+\n+    public static JCheckBox getListElement(JDialogOperator rep, int index) {\n+\tJListOperator types = getList(rep);\n+\treturn (JCheckBox) types.getModel().getElementAt(index);\n+    }\n+\n+    public static JListOperator getList(JDialogOperator rep) {\n+\tJListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+\treturn types;\n+    }\n+    \n+    public static JDialogOperator createReports(JFrameOperator mainFrame, String path, boolean createHtml, boolean createPlain, boolean createXml) {\n+\tJDialogOperator rep = openReportCreation(mainFrame);\n+\t\n+\tsetPath(rep, path);\n+\t\n+\tsetHtmlChecked(rep, createHtml);\n+\tsetPlainChecked(rep, createPlain);\n+\tsetXmlChecked(rep, createXml);\n+\n+\trep.invalidate();\n+\t\n+\tpressCreate(rep);\n+\t\n+\treturn findShowReportDialog();\n+    }\n+    \n+    public static JDialogOperator findShowReportDialog() {\n+\treturn new JDialogOperator(getExecResource(\"nrd.showReport.title\"));\n+    }\n+    \n+    \/\/ returns previous state\n+    public static boolean setHtmlChecked(JDialogOperator rep, boolean set) {\n+\tJCheckBox element = getListElement(rep, 0);\n+\tboolean temp = element.isSelected();\n+\telement.setSelected(set);\n+\treturn temp; \n+    }\n+    \n+    \/\/ returns previous state\n+    public static boolean setPlainChecked(JDialogOperator rep, boolean set) {\n+\/\/\tJListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+\/\/\tJCheckBoxOperator element = new JCheckBoxOperator(types, getExecResource(\"nrd.type.pt.ckb\"));\n+\/\/\tJListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+\tJCheckBox element = getListElement(rep, 1);\n+\tboolean temp = element.isSelected();\n+\telement.setSelected(set);\n+\treturn temp; \n+    }\n+    \n+    \/\/ returns previous state\n+    public static boolean setXmlChecked(JDialogOperator rep, boolean set) {\n+\/\/\tJListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+\/\/\tJCheckBox element = (JCheckBox)types.getModel().getElementAt(2);\n+\tJCheckBox element = getListElement(rep, 2);\n+\tboolean temp = element.isSelected();\n+\telement.setSelected(set);\n+\treturn temp; \n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ReportTools.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.StandardConfig_View;\n+\n+import jthtest.Tools;\n+import java.lang.reflect.InvocationTargetException;\n+import org.junit.Before;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ * The description of the tests has evaluated - it's impossible now to create configs without testsuite and workdirektory - there aren't defaults for them\n+ *\/\n+public class View extends Tools {\n+\tprotected JFrameOperator mainFrame;\n+\n+        public JDialogOperator callNewConfigurationEditor() {\n+            new JMenuOperator(mainFrame, \"Configure\").pushMenuNoBlock(\"Configure|New Configuration\", \"|\");\n+            return findConfigEditor(mainFrame); \n+        }\/**\/\n+\n+        @Before\n+        public void setUp() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(NEWDESKTOP_ARG);\n+\t\tmainFrame = findMainFrame();\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/StandardConfig_View\/View.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.StandardConfig_View;\n+\n+import javax.swing.JMenuItem;\n+import javax.swing.JRadioButtonMenuItem;\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class View1 extends View {\n+\t\n+\tpublic static void main(String[] args) {\n+            JUnitCore.main(\"jthtest.gui.StandardConfig_View.View1\");\n+\t}\n+        \n+        @Test\n+        public void testView1() {\n+            openTestSuite(mainFrame);\n+            createWorkDirInTemp(mainFrame);\n+            JDialogOperator editor = callNewConfigurationEditor();\n+\t    JMenuItem findJMenu = null;\n+            if(!((JRadioButtonMenuItem)new JMenuOperator(editor, \"View\").getMenuComponent(0)).isSelected()) { \/\/ TODO findJComponent\n+\t\tthrow new JemmyException(\"Radio button is not selected\");\n+\t    }\n+\/\/            new JRadioButtonOperator(editor).isSelected();\n+        }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/StandardConfig_View\/View1.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.StandardConfig_View;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class View2 extends View {\n+\n+\tpublic static void main(String[] args) {\n+            JUnitCore.main(\"jthtest.gui.StandardConfig_View.View2\");\n+\t}\n+        \n+        @Test\n+        public void testView2() {\n+            openTestSuite(mainFrame);\n+            createWorkDirInTemp(mainFrame);\n+            JDialogOperator editor = callNewConfigurationEditor(); \n+            new JMenuOperator(editor, \"View\").pushMenuNoBlock(\"View|Quick Set Mode\", \"|\");\n+            checkPanel(); \/\/ TODO\n+            new JMenuOperator(editor, \"View\").pushMenuNoBlock(\"View|Question Mode\", \"|\"); \n+            checkPanel(); \/\/ TODO\n+        }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/StandardConfig_View\/View2.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.StandardConfig_View;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author linfar\n+ *\/\n+public class View3 extends View {\n+\n+\tpublic static void main(String[] args) {\n+            JUnitCore.main(\"jthtest.gui.StandardConfig_View.View3\");\n+\t}\n+        \n+        @Test\n+        public void testView3() {\n+            openTestSuite(mainFrame);\n+            createWorkDirInTemp(mainFrame);\n+            JDialogOperator editor = callNewConfigurationEditor(); \n+            new JMenuOperator(editor, \"View\").pushMenuNoBlock(\"View|More Info\", \"|\");\n+            checkPanel(); \/\/ TODO\n+        }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/StandardConfig_View\/View3.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,406 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintStream;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+import java.security.Permission;\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.Task.Waiter;\n+import org.netbeans.jemmy.JemmyException;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public abstract class Test {\n+\n+    public static final String TEMP_WD_NAME = \"javatest_guitest_demowd\";\n+    public static final String DEFAULT_WD_NAME = \"demowd_config\";\n+    public static final String WD_RUN_NAME = \"demowd_run\";\n+    public static final String TEST_SUITE_NAME = \"demots\";\n+    public static final String TESTCASES_TEST_SUITE_NAME = \"demots_withtestcases\";\n+    public static final String TEMPLATE_NAME = \"demotemplate.jtm\";\n+    public static final String REPORT_NAME = \"demoreport\";\n+    public static String TEMP_PATH;\n+    public static String LOCAL_PATH;\n+    public static String DEFAULT_PATH;\n+    public static String USER_HOME_PATH;\n+    public static final String CONFIG_NAME = \"democonfig.jti\";\n+    public static final String TESTS_DIRECTORY_PREFIX = \"tests\" + File.separator;\n+    public static final String NEWDESKTOP_ARG = \"-newdesktop\";\n+    public static final String WINDOWNAME = System.getProperty(\"jt_gui_test.name\");\n+    public static final String TESTSUITENAME = \"DemoTS 1.0 Test Suite (Tag Tests)\";\n+    public static final String REPORT_WD_PATH = \"demowd_run\";\n+    public static final String KFL_NORMAL_PATH = \"knownfailures.kfl\";\n+    public static final String KFL_PASSED_PATH = \"knownfailures_passed.kfl\";\n+    public static final String KFL_MISSING_PATH = \"knownfailures_missing.kfl\";\n+    public static final String KFL_RECURSIVE_PATH = \"knownfailures_recursive.kfl\";\n+    public static final String KFL_TC_ALL_PATH = \"kfl_tc_all.kfl\";\n+    public static boolean showWarnings = true;\n+    public static boolean ignoreDepricated = true;\n+    public static boolean notrunKnownFail = false;\n+    public static boolean overrideKnownFail = false;\n+\n+    public static void printBools() {\n+        System.out.println(\"showWarnings \" + showWarnings);\n+        System.out.println(\"ignoreDepricated \" + ignoreDepricated);\n+        System.out.println(\"notrunKnownFail \" + notrunKnownFail);\n+        System.out.println(\"overrideKnownFail \" + overrideKnownFail);\n+    }\n+\n+    static {\n+        String temp = System.getProperty(\"user.dir\") + File.separator;\n+        if (temp == null || \"\".equals(temp)) {\n+            File tmp = new File(\"\");\n+            temp = tmp.getAbsolutePath();\n+        }\n+        DEFAULT_PATH = LOCAL_PATH = temp;\n+\n+        TEMP_PATH = temp + File.separator + \"temp\";\n+\n+        USER_HOME_PATH = System.getProperty(\"user.home\") + File.separator;\n+\n+        showWarnings = getBooleanProperty(\"jt_gui_test.showWarnings\");\n+        ignoreDepricated = getBooleanProperty(\"jt_gui_test.ignoreDepricated\");\n+        notrunKnownFail = getBooleanProperty(\"jt_gui_test.not_run_knownfail\");\n+        overrideKnownFail = getBooleanProperty(\"jt_gui_test.override_knownfail\");\n+    }\n+\n+    private static boolean getBooleanProperty(String property) {\n+        String prop = System.getProperty(property);\n+\/\/        System.out.println(property + \" \" + prop);\n+        return prop != null && Boolean.parseBoolean(prop);\n+    }\n+    protected LinkedList<String> errors;\n+    protected LinkedList<String> warnings;\n+    protected LinkedList<File> usedFiles;\n+    protected boolean depricated = false;\n+    protected boolean knownFail = false;\n+    protected boolean catchAnyExceptions = false;\n+    protected JTFrame mainFrame;\n+    protected LinkedList<File> toCopyFiles;\n+    protected final StringWriter OUT = new StringWriter();\n+    protected final StringWriter ERR = new StringWriter();\n+    private final PrintStream ST_OUT = System.out;\n+    private final PrintStream ST_ERR = System.err;\n+\n+    public Test() {\n+        System.setOut(new java.io.PrintStream(new java.io.OutputStream() {\n+\n+            @Override\n+            public void write(int b) throws IOException {\n+                OUT.write(b);\n+                ST_OUT.write(b);\n+            }\n+        }));\n+        System.setErr(new java.io.PrintStream(new java.io.OutputStream() {\n+\n+            @Override\n+            public void write(int b) throws IOException {\n+                ERR.write(b);\n+                ST_ERR.write(b);\n+            }\n+        }));\n+\n+        warnings = new LinkedList<String>();\n+        errors = new LinkedList<String>();\n+        usedFiles = new LinkedList<File>();\n+        toCopyFiles = new LinkedList<File>();\n+        toCopyFiles.add(new File(DEFAULT_WD_NAME));\n+        toCopyFiles.add(new File(TEST_SUITE_NAME));\n+        toCopyFiles.add(new File(CONFIG_NAME));\n+        toCopyFiles.add(new File(REPORT_WD_PATH));\n+        toCopyFiles.add(new File(ConfigTools.SECOND_CONFIG_NAME));\n+    }\n+\n+    public Test(File... files) {\n+        errors = new LinkedList<String>();\n+        warnings = new LinkedList<String>();\n+        usedFiles = new LinkedList<File>();\n+        toCopyFiles = new LinkedList<File>();\n+        for (File f : files) {\n+            toCopyFiles.add(f);\n+        }\n+    }\n+\n+    public void addUsedFile(File f) {\n+        usedFiles.add(f);\n+    }\n+\n+    public void addUsedFile(String f) {\n+        usedFiles.add(new File(f));\n+    }\n+\n+    public void addToCopyFile(String f) {\n+        toCopyFiles.add(new File(f));\n+    }\n+\n+    private String getErrorMessage() {\n+        if (errors.isEmpty()) {\n+            return \"\";\n+        }\n+        StringBuilder builder = new StringBuilder(\"Failed: \\n\");\n+        for (String s : errors) {\n+            builder.append(s).append(\"\\n\");\n+        }\n+        String description = getDescription();\n+        if (description != null) {\n+            builder.append(\"\\n\").append(description).append(\"\\n\");\n+        }\n+        return builder.toString();\n+    }\n+\n+    private void preTest() throws IOException {\n+        File name = new File(TESTS_DIRECTORY_PREFIX + this.getClass().getSimpleName());\n+        if (name.exists()) {\n+            Tools.deleteDirectory(name);\n+        }\n+        name.mkdirs();\n+        Tools.DEFAULT_PATH = Tools.USER_HOME_PATH = Tools.LOCAL_PATH = name.getAbsolutePath() + File.separator;\n+        Tools.TEMP_PATH = name.getAbsolutePath() + File.separator + \"temp\" + File.separator;\n+        DEFAULT_PATH = USER_HOME_PATH = LOCAL_PATH = name.getAbsolutePath() + File.separator;\n+        TEMP_PATH = name.getAbsolutePath() + File.separator + \"temp\" + File.separator;\n+        for (File f : toCopyFiles) {\n+            Tools.copyDirectory(f, name);\n+        }\n+    }\n+\n+    @org.junit.Test\/\/(timeout=1200000)\n+    public final void test() throws Throwable {\n+\/\/        printBools();\n+        if (!depricated || ignoreDepricated) {\n+            Worker w = null;\n+            try {\n+                if (!knownFail || !notrunKnownFail) {\n+                    preTest();\n+                    w = new Worker();\n+                    Thread tr = new Thread(w);\n+                    tr.start();\n+\n+                    t = 0;\n+                    while (t < maxTime && w.isWorking) {\n+                        try {\n+                            Thread.sleep(step);\n+                            t += step;\n+                        } catch (InterruptedException ex) {\n+                        }\n+                    }\n+\n+                    if (w.isWorking) {\n+                        tr.interrupt();\n+                        errors.add(\"Test was interrupted. Waited \" + t \/ 1000 + \"s\");\n+                        throw new InterruptedException();\n+                    }\n+                }\n+            } finally {\n+                System.setOut(ST_OUT);\n+                System.setErr(ST_ERR);\n+                String outString = OUT.getBuffer().toString();\n+                \n+                BufferedReader readOut = new BufferedReader(new java.io.StringReader(outString));\n+                String line; \n+                LinkedList<String> exceptions = new LinkedList<String>();\n+                boolean outCatch = false;\n+                while ((line = readOut.readLine()) != null) {\n+                    if (line.contains(\"Exception in thread\")) {\n+                        outCatch = true;\n+                        exceptions.add(line);\n+                    }\n+                }\n+                readOut.close();\n+                String errString = ERR.getBuffer().toString();\n+                \n+                readOut = new BufferedReader(new java.io.StringReader(errString));\n+                boolean errCatch = false;\n+                while ((line = readOut.readLine()) != null) {\n+                    if (line.contains(\"Exception in thread\")) {\n+                        errCatch = true;\n+                        exceptions.add(line);\n+                    }\n+                }\n+                \n+                if (catchAnyExceptions && !exceptions.isEmpty()) {\n+                    errors.add(\"JavaTest threw exceptions in system output:\\n\" + Arrays.toString(exceptions.toArray(new String[exceptions.size()])));\n+                    if (outCatch) {\n+                        System.out.println(outString);\n+                    }\n+                    if (errCatch) {\n+                        System.out.println(errString);\n+                    }\n+                }\n+\n+                try {\n+                    Waiter releaser = new Waiter(20000) { \/\/ 20 seconds to remove temp files and close JT\n+\n+                        @Override\n+                        protected boolean check() {\n+                            return true;\n+                        }\n+                    };\n+                    releaseResources(w.error == null); \/\/ if passed - delete test directory forcely\n+                    releaser.stopWaiter();\n+                } catch (Exception e) {\n+                    warnings.add(\"Timeout exception while releasing resources. \" + e.getMessage());\n+                }\n+\n+                if (knownFail && !overrideKnownFail) {\n+                    if (w != null && w.error != null) {\n+                        warnings.add(\"Test is failed but is marked as known failure. Exception: \" + w.error.getMessage());\n+                    } else if (!errors.isEmpty()) {\n+                        warnings.add(\"Test is failed but is marked as known failure. Errors: \" + getErrorMessage());\n+                    } else {\n+                        warnings.add(\"Test is passed but is marked as known failure\");\n+                    }\n+                    if (showWarnings) {\n+                        showWarnings();\n+                    }\n+                } else {\n+                    if (showWarnings) {\n+                        showWarnings();\n+                    }\n+\n+                    if (!errors.isEmpty() || (w != null && w.error != null)) {\n+                        JemmyException ex;\n+                        if (w != null && w.error != null) {\n+                            ex = new JemmyException(getErrorMessage(), w.error);\n+                        } else {\n+                            ex = new JemmyException(getErrorMessage());\n+                        }\n+                        throw ex;\n+                    }\n+                }\n+            }\n+        } else {\n+            System.out.println(\"Test is depticated. Marking as Passed. \");\n+        }\n+    }\n+\n+    private void showWarnings() {\n+        if (!warnings.isEmpty() && showWarnings) {\n+            System.out.println(\"Warnings: \");\n+            for (String s : warnings) {\n+                System.out.println(s);\n+            }\n+        }\n+    }\n+\n+    public abstract void testImpl() throws Exception;\n+\n+    public String getDescription() {\n+        return null;\n+    }\n+\n+    public void releaseImpl() throws Exception {\n+    }\n+\n+    private void releaseResources(boolean force) {\n+        try {\n+            releaseImpl();\n+            if (mainFrame != null && mainFrame.getJFrameOperator().isVisible()) {\n+                mainFrame.closeAllTools();\n+                mainFrame.closeFrame();\n+            }\n+        } catch (Exception e) {\n+        }\n+        for (File f : usedFiles) {\n+            try {\n+                if (f.exists()) {\n+                    if (f.isDirectory()) {\n+                        Tools.deleteDirectory(f);\n+                    } else if (f.isFile()) {\n+                        f.delete();\n+                    }\n+                    if (f.exists()) {\n+                        System.err.println(\"Temporary file \" + f.getAbsolutePath() + \" was not removed. Please remove it manualy.\");\n+                    }\n+                }\n+            } catch (Exception e) {\n+            }\n+        }\n+        if (force && LOCAL_PATH.contains(TESTS_DIRECTORY_PREFIX + this.getClass().getSimpleName())) {\n+            Tools.deleteDirectory(LOCAL_PATH);\n+        }\n+    }\n+    public int maxTime = 600000; \/\/ 10 minutes\n+    public int step = 1000;\n+    public int t = 0;\n+    public boolean isWorkReady = false;\n+\n+    private class Worker implements Runnable {\n+\n+        public Throwable error = null;\n+        public boolean isWorking = true;\n+\n+        @Override\n+        public void run() {\n+            try {\n+                testImpl();\n+            } catch (ExitException ex) {\n+            } catch (Throwable ex) {\n+                this.error = ex;\n+            }\n+            isWorking = false;\n+        }\n+    }\n+\n+    @org.junit.Before\n+    public void setUp() {\n+        System.setSecurityManager(new ExceptionOnExitSecurityManager());\n+    }\n+\n+    @org.junit.After\n+    public void tearDown() {\n+        System.setSecurityManager(null);\n+    }\n+\n+    public static class ExitException extends SecurityException {\n+    }\n+\n+    public static class ExceptionOnExitSecurityManager extends SecurityManager {\n+\n+        @Override\n+        public void checkPermission(Permission perm) {\n+        }\n+\n+        @Override\n+        public void checkPermission(Permission perm, Object context) {\n+        }\n+\n+        @Override\n+        public void checkExit(int status) {\n+            super.checkExit(status);\n+            throw new ExitException();\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Test.java","additions":406,"deletions":0,"binary":false,"changes":406,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import java.util.Arrays;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.Task.Waiter;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public abstract class TT_SelectionCE extends Test {\n+\n+    public TT_SelectionCE(String description, int[] rows) {\n+        this.testDescription = description;\n+        this.rows = rows;\n+    }\n+\n+    protected abstract void make();\n+\n+    protected void openTree() {\n+        tree.click(2);\n+        tree.click(1);\n+    }\n+\n+    protected boolean check(int init[], int res[]) {\n+        return !Arrays.equals(init, res);\n+    }\n+\n+    @Override\n+    public final void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+        tree = mainFrame.getTestTree();\n+\n+        openTree();\n+        tree.selectRows(rows);\n+        make();\n+\n+        \/\/ waiter 10 sec\n+        Waiter waiter = new Waiter() {\n+\n+            @Override\n+            protected boolean check() {\n+                res = tree.getSelectedRowsIndexes();\n+                if (res == null) {\n+                    return false;\n+                }\n+                Arrays.sort(res);\n+\n+                return !TT_SelectionCE.this.check(rows, res);\n+            }\n+            int[] res = {};\n+\n+            @Override\n+            protected String getTimeoutExceptionDescription() {\n+                return String.format(\"Error occured - selection lost. Initialy selected rows: %s. After %s selected rows: %s\", Arrays.toString(rows), testDescription, Arrays.toString(res));\n+            }\n+        };\n+        \n+        waiter.getResult();\n+    }\n+    protected TestTree tree;\n+    private String testDescription = \"\";\n+    private int[] rows;\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE01 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE01() {\n+        super(\"creating and cancelling ConfigEditor\", new int[]{0, 1, 2, 3, 5, 8, 10});\n+        knownFail = true;\n+    }\n+\n+    public void make() {\n+        ConfigDialog cd = mainFrame.getConfiguration().create(true);\n+        cd.closeByMenu();\n+\/\/        new JButtonOperator(new JDialogOperator(\"Warning: Unsaved Changes\"), \"No\").push();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when opening Create New Configuration and closing it without saving. Includes root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE01.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE02 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE02() {\n+        super(\"creating and cancelling ConfigEditor\", new int[]{1, 2, 3, 5, 8, 10});\n+    }\n+\n+    public void make() {\n+        ConfigDialog cd = mainFrame.getConfiguration().create(true);\n+        cd.closeByMenu();\n+\/\/        new JButtonOperator(new JDialogOperator(\"Warning: Unsaved Changes\"), \"No\").push();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when opening Create New Configuration and closing it without saving. Doesn't include root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE02.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE03 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE03() {\n+        super(\"loading and editing (without changes) ConfigEditor\", new int[]{0, 1, 2, 3, 5, 8, 10});\n+        knownFail = true;\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        if (cd.getSelectedQuestionNumber() > 1)\n+            cd.pushBackConfigEditor();\n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when opening Configuration Editor and closing it without any changes. Includes root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE03.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE04 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE04() {\n+        super(\"loading and editing (without changes) ConfigEditor\", new int[]{1, 2, 3, 5, 8, 10});\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        if (cd.getSelectedQuestionNumber() > 1)\n+            cd.pushBackConfigEditor();\n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when opening Configuration Editor and closing it without any changes. Doesn't include root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE04.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE05 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE05() {\n+        super(\"loading and editing (with unimportant changes) ConfigEditor\", new int[]{0, 1, 2, 3, 5, 8, 10});\n+        knownFail = true;\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        \n+        cd.selectQuestion(2);\n+        JTextFieldOperator tf = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        tf.clearText();\n+        tf.typeText(\"some_new_text\");\n+        \n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when editing unimportant value (Description) in Configuration Editor and closing it with save. Includes root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE05.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE06 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE06() {\n+        super(\"loading and editing (with unimportant changes) ConfigEditor\", new int[]{1, 2, 3, 5, 8, 10});\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        \n+        cd.selectQuestion(2);\n+        JTextFieldOperator tf = new JTextFieldOperator(cd.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        tf.clearText();\n+        tf.typeText(\"some_new_text\");\n+        \n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when editing unimportant value (Description) in Configuration Editor and closing it with save. Doesn't include root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE06.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.ConfigDialog.QuestionTree;\n+import jthtest.tools.Configuration;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE07 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE07() {\n+        super(\"loading and editing (with changes in TestsToRun list) ConfigEditor\", new int[]{0, 1, 2, 3, 5, 8, 10});\n+        knownFail = true;\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        \n+        QuestionTree qt = cd.getQuestionTree();\n+        qt.clickOnArrow(1);\n+        qt.clickOnArrow(2);\n+        qt.clickOnCheckbox(0);\n+        qt.clickOnCheckbox(8);\n+        qt.clickOnCheckbox(6);\n+        qt.clickOnCheckbox(4);\n+        qt.clickOnCheckbox(2);\n+        \n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when editing TestsToRun list in Configuration Editor and closing it with save. Includes root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE07.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.ConfigDialog.QuestionTree;\n+import jthtest.tools.Configuration;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE08 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE08() {\n+        super(\"loading and editing (with changes in TestsToRun list) ConfigEditor\", new int[]{1, 2, 3, 5, 8, 10});\n+    }\n+\n+    public void make() {\n+        Configuration c = mainFrame.getConfiguration();\n+        c.load(CONFIG_NAME, true);\n+        ConfigDialog cd = c.openByMenu(true);\n+        \n+        QuestionTree qt = cd.getQuestionTree();\n+        qt.clickOnArrow(1);\n+        qt.clickOnArrow(2);\n+        qt.clickOnCheckbox(0);\n+        qt.clickOnCheckbox(8);\n+        qt.clickOnCheckbox(6);\n+        qt.clickOnCheckbox(4);\n+        qt.clickOnCheckbox(2);\n+        \n+        cd.pushLastConfigEditor();\n+        cd.pushDoneConfigEditor();\n+    }\n+\n+    public String getDescription() {\n+        return \"Check that selection on TestTree on main page doesn't dissapear when editing TestsToRun list in Configuration Editor and closing it with save. Doesn't include root path.\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE08.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class TT_SelectionCE09 extends TT_SelectionCE {\n+\n+    public TT_SelectionCE09() {\n+        super(\"opening 2 new ExecTools (by TestSuite loading and by new WD creating)\", new int[]{0, 1, 5, 7, 9});\n+        knownFail = true;\n+    }\n+\n+    @Override\n+    protected void make() {\n+        mainFrame.openDefaultTestSuite();\n+        mainFrame.closeCurrentTool();\n+        mainFrame.getFile_CreateWorkDirectoryMenu().push();\n+        new JButtonOperator(new JDialogOperator(\"Create Work Directory\"), \"Cancel\").push();\n+        mainFrame.closeCurrentTool();\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TT_SelectionCE09.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree01 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\n+\t\tTestTree tree = mainFrame.getTestTree();\n+\t\tTreePath root = tree.getRoot();\n+\t\tif (!tree.isExpanded(root)) {\n+\t\t\ttree.click(root);\n+\t\t}\n+\t\ttree.click(root);\n+\t\ttry {\n+\t\t\ttree.waitForCollapse(root);\n+\t\t} catch (TimeoutExpiredException e) {\n+\t\t\tif (!tree.isExpanded(root)) {\n+\t\t\t\terrors.add(\"Tree root is not collapsed after mouse click\");\n+\t\t\t}\n+\t\t}\n+\t\ttree.click(root);\n+\t\ttry {\n+\t\t\ttree.waitForExpand(root);\n+\t\t} catch (TimeoutExpiredException e) {\n+\t\t\tif (!tree.isExpanded(root)) {\n+\t\t\t\terrors.add(\"Tree root is not expanded after mouse click\");\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that root element would be collapsed and expanded after double click on it\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree01.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree02 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(false);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\n+\t\tTestTree testTree = mainFrame.getTestTree();\n+\t\tTreePath[] visibleRows = testTree.getVisibleRows();\n+\t\ttestTree.click(visibleRows[1]);\n+\t\tif(testTree.getVisibleRowCount() != 9) {\n+\t\t\terrors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 9 expected (1st click)\");\n+\t\t}\n+\t\ttestTree.click(visibleRows[1]);\n+\t\tif(testTree.getVisibleRowCount() != 3) {\n+\t\t\terrors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 3 expected (2nd click)\");\n+\t\t}\n+\t\tTreePath[] click = testTree.click(visibleRows[2]);\n+\t\tif(testTree.getVisibleRowCount() != 6) {\n+\t\t\terrors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 6 expected (3rd click)\");\n+\t\t}\n+\t\ttestTree.click(click[2]);\n+\t\tif(testTree.getVisibleRowCount() != 9) {\n+\t\t\terrors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 9 expected (4th click)\");\n+\t\t}\n+\t\ttestTree.click(visibleRows[2]);\n+\t\tif(testTree.getVisibleRowCount() != 3) {\n+\t\t\terrors.add(\"There are \" + testTree.getVisibleRowCount() + \" visible rows in the tree while 3 expected (5th click)\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that rows are expanded\/collapsed normaly.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree02.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree03 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\tTestTree tree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(4);\n+\t\ttree.click(1);\n+\n+\t\ttree.selectRows(2, 3, 5, 7, 9, 10);\n+\n+\t\tIcon testNotRunIcon = IconFactory.getTestIcon(IconFactory.NOT_RUN, false, true);\n+\t\tIcon dirNotRunIcon = IconFactory.getTestFolderIcon(IconFactory.NOT_RUN, false, true);\n+\n+\t\tIcon testPassedIcon = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\t\tIcon directoryPassedIcon = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\n+\t\tIcon testFiledIcon = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\t\tIcon dirFiledIcon = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t\ttree.runTests().waitForDone();\n+\n+\t\tTreePath[] paths = tree.getSelectedRows();\n+\t\tfor (TreePath path : paths) {\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (tree.isTest(path)) {\n+\t\t\t\tif (icon != testPassedIcon) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is invalid\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (path.toString().contains(\"DoublyLinkedList\")) {\n+\t\t\t\t\tif (icon != dirFiledIcon) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is invalid\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != directoryPassedIcon) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is invalid\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\ttree.click(9);\n+\t\tif (tree.getIcon(10) != testPassedIcon) {\n+\t\t\terrors.add(\"Icon on path \" + tree.getPathForRow(10) + \" is invalid\");\n+\t\t}\n+\t\tif (tree.getIcon(11) != testPassedIcon) {\n+\t\t\terrors.add(\"Icon on path \" + tree.getPathForRow(11) + \" is invalid\");\n+\t\t}\n+\t\tif (tree.getIcon(12) != testFiledIcon) {\n+\t\t\terrors.add(\"Icon on path \" + tree.getPathForRow(12) + \" is invalid\");\n+\t\t}\n+\t\tif (tree.getIcon(13) != testPassedIcon) {\n+\t\t\terrors.add(\"Icon on path \" + tree.getPathForRow(13) + \" is invalid\");\n+\t\t}\n+\n+\t\ttree.clearResults();\n+\n+\t\ttree.click(19);\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (tree.isTest(path)) {\n+\t\t\t\tif (icon != testNotRunIcon) {\n+\t\t\t\t\terrors.add(\"Icon on tests path \" + path + \" is invalid after clearing\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (icon != dirNotRunIcon) {\n+\t\t\t\t\terrors.add(\"Icon on directories path \" + path + \" is invalid after clearing\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test selects some tests in the test tree, executes them, checks their icons, clears them and checks icons again.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree03.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,89 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree04 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\tTestTree tree = mainFrame.getTestTree();\n+\n+\t\ttree.click(1);\n+\t\ttree.selectRows(3);\n+\n+\t\tIcon passedTestIcon = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\t\tIcon passedTestFolderIcon = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\t\tIcon notrunTestFolderIcon = IconFactory.getTestFolderIcon(IconFactory.NOT_RUN, false, true);\n+\t\tIcon notrunTestIcon = IconFactory.getTestIcon(IconFactory.NOT_RUN, false, true);\n+\n+\t\ttree.runTests().waitForDone();\n+\n+\t\tif (tree.getIcon(3) != passedTestIcon) {\n+\t\t\terrors.add(\"Incorrect icon for path \" + tree.getPathForRow(3) + \", passed icon expected\");\n+\t\t}\n+\t\tif (tree.getIcon(2) != notrunTestIcon) {\n+\t\t\terrors.add(\"Incorrect icon for path \" + tree.getPathForRow(2) + \", not run icon expected\");\n+\t\t}\n+\t\tif (tree.getIcon(4) != notrunTestIcon) {\n+\t\t\terrors.add(\"Incorrect icon for path \" + tree.getPathForRow(4) + \", not run icon expected\");\n+\t\t}\n+\n+\t\tif (tree.getIcon(1) != notrunTestFolderIcon) {\n+\t\t\terrors.add(\"Incorrect icon for path \" + tree.getPathForRow(1) + \", not run icon expected\");\n+\t\t}\n+\n+\t\ttree.selectRows(2, 4, 5, 6, 7);\n+\n+\t\ttree.runTests().waitForDone();\n+\n+\t\tif (tree.getIcon(1) != passedTestFolderIcon) {\n+\t\t\terrors.add(\"Incorrect icon for path \" + tree.getPathForRow(1) + \", passed icon expected\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that is case when one of many test is runned in test folder, folder will have 'not run' icon. When all others tests are runned - it should obtain new status.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree04.java","additions":89,"deletions":0,"binary":false,"changes":89,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree05 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\tTestTree tree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(1);\n+\n+\t\ttree.selectRows(1, 2);\n+\t\tTreePath[] selectedPaths = tree.getSelectedRows();\n+\t\t\n+\t\tTreePath root = tree.getRoot();\n+\t\ttree.clickPopup(root);\n+\t\tTreePath[] selectedPaths1 = tree.getSelectedRows();\n+\t\tif (selectedPaths.length != selectedPaths1.length) {\n+\t\t\terrors.add(\"Selection changed when performing right click\");\n+\t\t} else {\n+\t\t\tfor (int i = 0; i < selectedPaths.length; i++) {\n+\t\t\t\tif (!selectedPaths[i].equals(selectedPaths1[i])) {\n+\t\t\t\t\terrors.add(\"Selection changed when performing right click\");\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+                mainFrame.click();\n+\t\ttree.selectRows(1);\n+\t\ttree.clickPopup(root);\n+\t\tselectedPaths = tree.getSelectedRows();\n+\t\tif (selectedPaths.length != 1) {\n+\t\t\terrors.add(\"Selection has \" + selectedPaths.length + \" elements while expected 1\");\n+\t\t}\n+\t\tif (!selectedPaths[0].equals(root)) {\n+\t\t\terrors.add(\"Root element \" + root + \" was expected to be selected, found \" + selectedPaths[0]);\n+\t\t}\n+\n+                mainFrame.click();\n+\t\ttree.selectRows(1, 2, 3, 4);\n+\t\tTreePath path = tree.getPathForRow(5);\n+\t\ttree.click(path);\n+\t\tselectedPaths = tree.getSelectedRows();\n+\t\tif (selectedPaths.length != 1) {\n+\t\t\terrors.add(\"Selection has \" + selectedPaths.length + \" elements while expected 1\");\n+\t\t}\n+\t\tif (!selectedPaths[0].equals(path)) {\n+\t\t\terrors.add(\"Element \" + path + \" was expected to be selected, found \" + selectedPaths[0]);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that performing right-click when only 1 test is selected will replace selection and in case when many tests are selecter will not replace selection.\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree05.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.TestTree;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree06 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\tTestTree tree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\tif (tree.getVisibleRowCount() != 23) {\n+\t\t\terrors.add(\"Tree contains \" + tree.getVisibleRowCount() + \" rows when 23 expected (all paths are expanded)\");\n+\t\t}\n+\n+\t\ttree.click(8);\n+\n+\t\tif (tree.getVisibleRowCount() != 9) {\n+\t\t\terrors.add(\"Tree contains \" + tree.getVisibleRowCount() + \" rows when 9 expected\");\n+\t\t}\n+\n+\t\ttree.click(8);\n+\n+\t\tif (tree.getVisibleRowCount() != 23) {\n+\t\t\terrors.add(\"Tree contains \" + tree.getVisibleRowCount() + \" rows when 23 expected (all paths are expanded)\");\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that collapsing and expanding again nesting test folder will not collapse nested test folders\";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree06.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree07 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test twisely runs all tests by menu and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree07.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree08 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test twisely runs all tests by menu clearing results between the attempts and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree08.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree09 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.runAllTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test runs all tests firstly by menu and then by mouse and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree09.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree10 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.clearResults();\n+\t\ttree.runAllTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test runs all tests firstly by menu and then after clearing by mouse and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree10.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree11 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test clears all the tree, then twisely runs all tests by menu and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree11.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree12 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test clears all the tree, then twisely runs all tests by menu clearing results between the attempts and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree12.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree13 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.runAllTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test clears all the tree, then runs all tests firstly by menu and then by mouse and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree13.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.TestTree;\n+\n+import javax.swing.tree.TreePath;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.JTFrame;\n+import jthtest.tools.TestTree;\n+import com.sun.javatest.tool.IconFactory;\n+import javax.swing.Icon;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree14 extends Test {\n+\tprivate TestTree tree;\n+\tprivate Icon passedTest = IconFactory.getTestIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTest = IconFactory.getTestIcon(IconFactory.FAILED, false, true);\n+\tprivate Icon passedTestFolder = IconFactory.getTestFolderIcon(IconFactory.PASSED, false, true);\n+\tprivate Icon failedTestFolder = IconFactory.getTestFolderIcon(IconFactory.FAILED, false, true);\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\t\tmainFrame.getConfiguration().load(Tools.CONFIG_NAME, true);\n+\n+\t\ttree = mainFrame.getTestTree();\n+\n+\t\ttree.click(2);\n+\t\ttree.click(5);\n+\t\ttree.click(4);\n+\t\ttree.click(3);\n+\t\ttree.click(1);\n+\n+\t\ttree.clearResults();\n+\t\tmainFrame.runTests().waitForDone();\n+\t\tcheckTests();\n+\t\ttree.clearResults();\n+\t\ttree.runAllTests().waitForDone();\n+\t\tcheckTests();\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test clears all the tree, then runs all tests firstly by menu and then after clearing by mouse and checks icons\";\n+\t}\n+\n+\tprivate void checkTests() {\n+\t\tfor (int i = 0; i < tree.getVisibleRowCount(); i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tIcon icon = tree.getIcon(path);\n+\t\t\tif (i == 0) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Tree root icon is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 8) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 9) {\n+\t\t\t\tif (icon != failedTestFolder) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else if (i == 12) {\n+\t\t\t\tif (icon != failedTest) {\n+\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not failed as expected\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (tree.isTest(path)) {\n+\t\t\t\t\tif (icon != passedTest) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tif (icon != passedTestFolder) {\n+\t\t\t\t\t\terrors.add(\"Icon on path \" + path + \" is not passed as expected\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/TestTree\/TestTree14.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,920 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.ResourceBundle;\n+\n+import java.awt.Component;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.swing.JDialog;\n+import javax.swing.JTextField;\n+\n+import org.netbeans.jemmy.ClassReference;\n+import org.netbeans.jemmy.ComponentChooser;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JLabelOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+import org.netbeans.jemmy.JemmyProperties;\n+import org.netbeans.jemmy.TestOut;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.Operator.StringComparator;\n+\n+import com.sun.javatest.TestResult;\n+import java.io.BufferedReader;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.FileReader;\n+import java.io.FileWriter;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.nio.channels.FileChannel;\n+import java.util.LinkedList;\n+import javax.swing.JComboBox;\n+import javax.swing.JComponent;\n+import jthtest.menu.Menu;\n+import org.junit.After;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class Tools {\n+\n+\tprivate static ResourceBundle i18nExecResources;    \/\/ reading resources exacly from the javatest.jar to not to do mistakes in element's names\n+\tprivate static ResourceBundle i18nToolResources;  \/\/ reading resources of dialog boxes exacly from the javatest.jar to not to do mistakes in element's names\n+\n+        @Deprecated\n+\tpublic static final String TEMP_WD_NAME = \"javatest_guitest_demowd\";\n+        @Deprecated\n+\tpublic static final String DEFAULT_WD_NAME = \"demowd_config\";\n+        @Deprecated\n+\tpublic static final String WD_RUN_NAME = \"demowd_run\";\n+        @Deprecated\n+\tpublic static final String TEST_SUITE_NAME = \"demots\";\n+        @Deprecated\n+\tpublic static final String TEMPLATE_NAME = \"demotemplate.jtm\";\n+        @Deprecated\n+\tpublic static final String REPORT_NAME = \"demoreport\";\n+        @Deprecated\n+\tpublic static String TEMP_PATH;\n+        @Deprecated\n+\tpublic static String LOCAL_PATH;\n+        @Deprecated\n+\tpublic static String DEFAULT_PATH;\n+        @Deprecated\n+\tpublic static String USER_HOME_PATH;\n+        @Deprecated\n+\tpublic static final String CONFIG_NAME = \"democonfig.jti\";\n+        @Deprecated\n+\tpublic static final String TESTS_DIRECTORY_PREFIX = \"tests\" + File.separator;\n+        @Deprecated\n+\tpublic static final String NEWDESKTOP_ARG = \"-newdesktop\";\n+        @Deprecated\n+\tpublic static final String WINDOWNAME = System.getProperty(\"jt_gui_test.name\");\n+        @Deprecated\n+\tpublic static final String TESTSUITENAME = \"DemoTS 1.0 Test Suite (Tag Tests)\";\n+\tpublic static final int MAX_WAIT_TIME = 20000;\n+\n+\tpublic static enum TestList {\n+\n+\t\tPASSED, FAILED, ERROR, NOT_RUN, FILTERED_OUT\n+\t}\n+\n+\tpublic enum FiltersType {\n+\n+\t\tLAST_TEST_RUN, CURRENT_CONFIGURATION, ALL_TESTS, CUSTOM\n+\t};\n+\n+\tstatic {\n+\t\tJemmyProperties.getCurrentTimeouts().setTimeout(\"ComponentOperator.WaitComponentTimeout\", MAX_WAIT_TIME);\n+\t\tJemmyProperties.setCurrentOutput(new TestOut(null, (PrintWriter) null, null));\n+\n+\t\ti18nExecResources = ResourceBundle.getBundle(\"com.sun.javatest.exec.i18n\");\n+\t\ti18nToolResources = ResourceBundle.getBundle(\"com.sun.javatest.tool.i18n\");\n+\n+\t\tString temp = System.getProperty(\"user.dir\") + File.separator;\n+\t\tif (temp == null || \"\".equals(temp)) {\n+\t\t\tFile tmp = new File(\"\");\n+\t\t\ttemp = tmp.getAbsolutePath();\n+\t\t}\n+\t\tDEFAULT_PATH = LOCAL_PATH = temp;\n+\n+\n+\/\/\t\tStringBuffer tempPath = new StringBuffer();\n+\/\/\t\ttry {\n+\/\/\t\t\tFile tmp = File.createTempFile(\"xxxxxxx\", \"yyy\");\n+\/\/\t\t\ttempPath.append(tmp.getCanonicalPath().split(\"xxxxxxx\")[0]);\n+\/\/\t\t\ttmp.delete();\n+\/\/\t\t} catch (IOException e) {\n+\/\/\t\t\tSystem.err.println(\"Error while initialization: cannot create temp file\");\n+\/\/\t\t}\n+\/\/\t\ttemp = tempPath.toString();\n+\/\/\t\tif (temp == null || \"\".equals(temp)) {\n+\/\/\t\t\ttemp = LOCAL_PATH;\n+\/\/\t\t}\n+\/\/\t\tTEMP_PATH = temp;\n+\t\tTEMP_PATH = LOCAL_PATH + File.separator + \"temp\";\n+\n+\t\tUSER_HOME_PATH = System.getProperty(\"user.home\") + File.separator;\n+\t}\n+\n+\tpublic static JTabbedPaneOperator getPage(JFrameOperator frame, TestList list) {\n+\t\tJTabbedPaneOperator tabs = new JTabbedPaneOperator(frame, new NameComponentChooser(\"br.tabs\"));\n+\n+\t\tswitch (list) {\n+\t\t\tcase PASSED:\n+\t\t\t\ttabs.selectPage(getExecResource(\"br.tabs.tl0.tab\"));\n+\t\t\t\tbreak;\n+\t\t\tcase FAILED:\n+\t\t\t\ttabs.selectPage(getExecResource(\"br.tabs.tl1.tab\"));\n+\t\t\t\tbreak;\n+\t\t\tcase ERROR:\n+\t\t\t\ttabs.selectPage(getExecResource(\"br.tabs.tl2.tab\"));\n+\t\t\t\tbreak;\n+\t\t\tcase NOT_RUN:\n+\t\t\t\ttabs.selectPage(getExecResource(\"br.tabs.tl3.tab\"));\n+\t\t\t\tbreak;\n+\t\t\tcase FILTERED_OUT:\n+\t\t\t\ttabs.selectPage(getExecResource(\"br.tabs.fo.tab\"));\n+\t\t\t\tbreak;\n+\t\t}\n+\t\treturn tabs;\n+\t}\n+\n+\tpublic static String getExecResource(String key) {\n+\t\treturn i18nExecResources.getString(key);\n+\t}\n+\n+\tpublic static String getToolResource(String key) {\n+\t\treturn i18nToolResources.getString(key);\n+\t}\n+\n+\t\/\/ TODO\n+\t\/\/ checks if panel is opened\n+\tpublic static boolean checkPanel() {\n+\t\treturn true;\n+\t}\n+\n+\t\/\/ TODO\n+\t\/\/ checks if configuration editor contains standard config file\n+\tpublic static boolean checkStandardConfig(JDialogOperator configEditor) {\n+\t\treturn true;\n+\t}\n+\n+\t\/\/ opens standard test suite\n+\tpublic static void openTestSuite(JFrameOperator frame) {\n+\t\tMenu.getFile_Open_TestSuiteMenu(frame).pushNoBlock();\n+\n+\t\t\/\/Wait for dialog box to appear\n+\t\tJDialogOperator openDialog = new JDialogOperator(getToolResource(\"tsc.title\"));\n+\t\t\/\/Find edit box for file name\n+\t\tnew JTextFieldOperator(openDialog, \"\").enterText(TEST_SUITE_NAME);\n+\t}\n+\n+\t\/\/ creates standard work directory using menu\n+\t@Deprecated\n+\tpublic static String createWorkDirInTemp(JFrameOperator mainFrame) {\n+\t\tint attempts = 0;\n+\n+\t\tnew JMenuOperator(mainFrame).pushMenuNoBlock(getExecResource(\"qlb.file.menu\") + \"|\" + getExecResource(\"ch.newWorkDir.act\"), \"|\");\n+\n+\t\tJDialogOperator filer = new JDialogOperator(mainFrame, getToolResource(\"wdc.new.title\"));\n+\t\tString path = TEMP_PATH + TEMP_WD_NAME;\n+\t\twhile (attempts < 10) {\n+\t\t\tFile file = new File(path);\n+\t\t\tif (!file.exists()) {\n+\t\t\t\tusedFiles.add(file);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tdeleteDirectory(file);\n+\t\t\tfile = new File(path);\n+\t\t\tif (!file.exists()) {\n+\t\t\t\tusedFiles.add(file);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tpath = TEMP_PATH + TEMP_WD_NAME + (int) (Math.random() * 10000);\n+\t\t\tattempts++;\n+\t\t}\n+\t\tif (attempts >= 10) {\n+\t\t\tthrow new JemmyException(\"error\");\n+\t\t}\n+\t\tJTextFieldOperator tf;\n+\n+\t\ttf = new JTextFieldOperator((JTextField) Tools.getComponent(filer, new String[]{\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"}));\n+\t\ttf.enterText(path);\n+\t\treturn path;\n+\t}\n+\n+\t\/\/ picks standatd work directory using dialog box \"work directory needed\"\n+\tpublic static void pickWorkDir(JFrameOperator mainFrame) {\n+\t\tJDialogOperator wrkDir = new JDialogOperator(mainFrame, getExecResource(\"exec.wd.need.title\"));\n+\n+\t\tnew JButtonOperator(wrkDir, getExecResource(\"exec.wd.new.btn\")).push();\n+\n+\t\twrkDir = new JDialogOperator(mainFrame, getExecResource(\"wdc.createtitle\"));\n+\n+\t\tdeleteDirectory(new File(TEMP_PATH + TEMP_WD_NAME));\n+\t\tgetTextField(wrkDir, getExecResource(\"wdc.dir.name.lbl\")).typeText(TEMP_WD_NAME);\n+\n+\t\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.browse.btn\")).push();\n+\n+\t\tJDialogOperator filer = new JDialogOperator(mainFrame, getExecResource(\"wdc.filechoosertitle\"));\n+\n+\t\tJTextFieldOperator tf;\n+\n+\t\ttf = new JTextFieldOperator((JTextField) Tools.getComponent(filer, new String[]{\"Folder name:\", \"File name:\"}));\n+\t\ttf.enterText(TEMP_WD_NAME);\n+\n+\t\tnew JButtonOperator(wrkDir, getExecResource(\"wdc.create.btn\")).push();\n+\t}\n+\n+\t\/\/ gets TextField in dialog by it's caption\n+\tpublic static JTextFieldOperator getTextField(JDialogOperator dialog, String caption) {\n+\t\tJLabelOperator label = new JLabelOperator(dialog, caption);\n+\t\treturn new JTextFieldOperator((JTextField) label.getLabelFor());\n+\t}\n+\n+\tpublic static JComponent getComponent(final JDialogOperator dialog, final String captions[]) {\n+\t\tComponentFinder threads[] = new ComponentFinder[captions.length];\n+\t\tfinal JLabelOperatorRef ref = new JLabelOperatorRef();\n+\t\tfor (int i = 0; i < captions.length; i++) {\n+\t\t\tthreads[i] = new ComponentFinder(ref, dialog, captions[i]);\n+\t\t\tthreads[i].start();\n+\t\t}\n+                boolean someIsAlive = true;\n+\t\twhile (ref.isOpNull() && someIsAlive) {\n+                        someIsAlive = false;\n+                        for (ComponentFinder finder : threads) {\n+                                if (finder.isAlive) {\n+                                        someIsAlive = true;\n+                                }\n+                                if (!ref.isOpNull())\n+                                    break;\n+                        }\n+\t\t}\n+\t\tif (!ref.isOpNull()) {\n+\t\t\treturn (JComponent) ref.getOp().getLabelFor();\n+\t\t}\n+\t\tStringBuilder build = new StringBuilder(\"Was not found any of components: \");\n+\t\tfor (String caption : captions) {\n+\t\t\tbuild.append(caption).append(\" \");\n+\t\t}\n+\t\tthrow new JemmyException(\"Error occured while searching components\", new TimeoutExpiredException(build.toString()));\n+\t}\n+\n+\tpublic static <ComponentClass extends JComponent> ComponentClass getComponentPar(final JDialogOperator dialog, final String captions[]) {\n+\t\tComponentFinder threads[] = new ComponentFinder[captions.length];\n+\t\tfinal JLabelOperatorRef ref = new JLabelOperatorRef();\n+\t\tfor (int i = 0; i < captions.length; i++) {\n+\t\t\tthreads[i] = new ComponentFinder(ref, dialog, captions[i]);\n+\t\t\tthreads[i].start();\n+\t\t}\n+\t\tboolean anyFinderAlive;\n+\t\tComponentFindersCheck:\n+\t\tdo {\n+\t\t\tanyFinderAlive = false;\n+\t\t\tfor (ComponentFinder finder : threads) {\n+\t\t\t\tif (!ref.isOpNull()) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tComponentClass check = (ComponentClass) ref.getOp().getLabelFor();\n+\t\t\t\t\t\treturn check;\n+\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (finder.isAlive) {\n+\t\t\t\t\tanyFinderAlive = true;\n+\t\t\t\t\tcontinue ComponentFindersCheck;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} while (anyFinderAlive);\n+\t\tStringBuilder build = new StringBuilder(\"Was not found any of components: \");\n+\t\tfor (String caption : captions) {\n+\t\t\tbuild.append(caption).append(\" \");\n+\t\t}\n+\t\tthrow new JemmyException(\"Error occured while searching components\", new TimeoutExpiredException(build.toString()));\n+\t}\n+\n+\tprivate static class JLabelOperatorRef {\n+\n+\t\tprivate JLabelOperator op1 = null;\n+                public synchronized boolean isOpNull() {\n+                    return op1 == null;\n+                }\n+                public synchronized void setOp(JLabelOperator op) {\n+                    this.op1 = op;\n+                }\n+                public JLabelOperator getOp() {\n+                    return op1;\n+                }\n+\t}\n+\n+\tprivate static class ComponentFinder extends Thread {\n+\n+\t\tprivate final JLabelOperatorRef ref;\n+\t\tprivate JDialogOperator dialog;\n+\t\tprivate String caption;\n+\t\tprivate boolean isAlive = true;\n+\n+\t\tpublic ComponentFinder(JLabelOperatorRef ref, JDialogOperator dialog, String caption) {\n+\t\t\tthis.dialog = dialog;\n+\t\t\tthis.caption = caption;\n+\t\t\tthis.ref = ref;\n+\t\t}\n+\n+\t\tpublic void run() {\n+\t\t\ttry {\n+\t\t\t\tJLabelOperator op = new JLabelOperator(dialog, caption);\n+\t\t\t\tif (ref != null && ref.isOpNull()) {\n+\t\t\t\t\tref.setOp(op);\n+\t\t\t\t}\n+\t\t\t} catch (TimeoutExpiredException ex) {\n+\t\t\t}\n+                        isAlive = false;\n+\t\t}\n+\t}\n+\n+\tpublic static JComboBoxOperator getComboBox(JDialogOperator dialog, String caption) {\n+\t\tJLabelOperator label = new JLabelOperator(dialog, caption);\n+\t\treturn new JComboBoxOperator((JComboBox) label.getLabelFor());\n+\t}\n+\n+\t\/\/\/\/\/\/\/\/\/\/\/ Quick Start dialog box methods\n+\t\/\/ opens QS using menu dialog box\n+\tpublic static JDialogOperator openQuickStart(JFrameOperator mainFrame) {\n+\t\tnew JMenuOperator(mainFrame).pushMenu(getExecResource(\"qlb.file.menu\") + \"|\" + getExecResource(\"mgr.openQuickStart.act\"), \"|\");\n+\t\treturn findQuickStart(mainFrame);\n+\t}\n+\n+\t\/\/ click \"next\" in QS\n+\tpublic static void next(JDialogOperator quickStartDialog) {\n+\t\tnew JButtonOperator(quickStartDialog, getExecResource(\"qsw.next.btn\")).push();\n+\t}\n+\n+\t\/\/ click \"finish\" in QS with test running\n+\tpublic static void finish(JDialogOperator quickStartDialog, boolean startConfigEditor, boolean runTests) {\n+\t\tnew JCheckBoxOperator(quickStartDialog, getExecResource(\"qsw.end.cfg.ckb\")).setSelected(startConfigEditor);\n+\t\tnew JCheckBoxOperator(quickStartDialog, getExecResource(\"qsw.end.run.ckb\")).setSelected(runTests);\n+\n+\t\tnew JButtonOperator(quickStartDialog, getExecResource(\"qsw.done.btn\")).push();\n+\t}\n+\n+\t\/\/ click \"finish\" in QS\n+\tpublic static void finish(JDialogOperator quickStartDialog, boolean startConfigEditor) {\n+\t\tnew JCheckBoxOperator(quickStartDialog, getExecResource(\"qsw.end.cfg.ckb\")).setSelected(startConfigEditor);\n+\n+\t\tnew JButtonOperator(quickStartDialog, getExecResource(\"qsw.done.btn\")).push();\n+\t}\n+\n+\t\/\/ uses standart testsuite in QS\n+\tpublic static void pickDefaultTestsuite(JDialogOperator quickStartDialog) {\n+\n+\t\tgetTextField(quickStartDialog, getExecResource(\"qsw.ts.hd\")).typeText(TEST_SUITE_NAME);\n+\n+\t}\n+\n+\t\/\/ activates flag of creating new configuration in QS\n+\tpublic static void createConfiguration(JDialogOperator quickStartDialog) {\n+\n+\t\tnew JRadioButtonOperator(quickStartDialog, getExecResource(\"qsw.cfg.new.rb\")).push();\n+\t}\n+\n+\t\/\/ activates flag of starting config editor in QS\n+\tpublic static void startConfigEditor(JDialogOperator quickStartDialog) {\n+\t\tnew JCheckBoxOperator(quickStartDialog, getExecResource(\"qsw.end.cfg.ckb\")).push();\n+\t}\n+\n+\t\/\/ uses template config in QS\n+\tstatic public void useConfigTemplate(JDialogOperator quickStartDialog) {\n+\n+\t\tnew JRadioButtonOperator(quickStartDialog, getExecResource(\"qsw.cfg.template.rb\")).push();\n+\n+\t\tgetTextField(quickStartDialog, getExecResource(\"qsw.cfg.jtm.field.lbl\")).typeText(TEMPLATE_NAME);\n+\t}\n+\n+\t\/\/ uses bad template config in QS\n+\tstatic public void useBadConfigTemplate(JDialogOperator quickStartDialog) {\n+\n+\t\tnew JRadioButtonOperator(quickStartDialog, getExecResource(\"qsw.cfg.template.rb\")).push();\n+\n+\t\tgetTextField(quickStartDialog, getExecResource(\"qsw.cfg.jtm.field.lbl\")).typeText(\"democonfig_broken.jti\");\n+\t}\n+\n+\t\/\/ uses missing template config in QS\n+\tstatic public void useMissingConfigTemplate(JDialogOperator quickStartDialog) {\n+\n+\t\tnew JRadioButtonOperator(quickStartDialog, getExecResource(\"qsw.cfg.template.rb\")).push();\n+\n+\t\tgetTextField(quickStartDialog, getExecResource(\"qsw.cfg.jtm.field.lbl\")).typeText(\"\/tmp\/missing.jti\");\n+\t}\n+\n+\t\/\/ checks if \"next\" button is available in QS\n+\tstatic public boolean isNextEnabled(JDialogOperator quickStartDialog) {\n+\n+\t\treturn JButtonOperator.findJButton(quickStartDialog.getContentPane(), getExecResource(\"qsw.next.btn\"), false, false).isEnabled();\n+\t}\n+\n+\t\/\/ close QS\n+\tstatic public void closeQS(JFrameOperator mainFrame) {\n+\t    new JDialogOperator(mainFrame, getExecResource(\"qsw.title\")).close();\n+\t}\n+\n+\t\/\/\/\/\/\/\/\/\/\/\/\/ JavaTest starting\n+\t\/\/ starts the JT\n+\tpublic static void startJavaTestWithDefaultWorkDirectory() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-NewDesktop\", \"-open\", DEFAULT_WD_NAME});\n+\t}\n+\n+\tpublic static void startJavatest() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\/\/Start JT Harness\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{});\n+\t}\n+\n+\t\/\/ starts the JT with specified params\n+\tpublic static void startJavatest(String params) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\/\/Start JT Harness with Specified parameters\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{params});\n+\t}\n+\n+\t\/\/ starts the JT with specified params\n+\tpublic static void startJavatest(String[] params) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\/\/Start JT Harness with Specified parameters\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(params);\n+\t}\n+\n+\t\/\/ starts the JT with specified testsuite, workdir and config\n+\tpublic static void startJavatest(String testsuite, String workdir, String config) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\/\/Start JT Harness with specified testsuite, workdir and config file\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-open\", testsuite, \"-workdir\", workdir, \"-config\", config});\n+\t}\n+\n+\tpublic static void startJavatestNewDesktop() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-NewDesktop\"});\n+\t}\n+\n+\t\/\/ returns main frame\n+\tpublic static JFrameOperator findMainFrame() {\n+\t\treturn new JFrameOperator(WINDOWNAME + \" Harness\");\n+\t}\n+\n+\t\/\/ returns QS\n+\tpublic static JDialogOperator findQuickStart(JFrameOperator mainFrame) {\n+\t\treturn new JDialogOperator(mainFrame, WINDOWNAME + \" Harness Quick Start\");\n+\t}\n+\n+\t\/\/ returns config editor dialog box\n+\tpublic static JDialogOperator findConfigEditor(JFrameOperator mainFrame) {\n+\t\treturn new JDialogOperator(mainFrame, getExecResource(\"ce.name\"));\n+\t}\n+\n+\t\/\/ returns dialog box of work directory creation\n+\tpublic static JDialogOperator findWorkDir(JFrameOperator mainFrame) {\n+\t\treturn new JDialogOperator(mainFrame, getToolResource(\"wdc.new.title\"));\n+\t}\n+\n+\t\/\/ click \"ok\" in filter editor dialog box\n+\tpublic static void ok(JDialogOperator filterEditor) {\n+\t\tnew JButtonOperator(filterEditor, getExecResource(\"fconfig.edit.done.btn\")).push();\n+\t}\n+\n+\t\/\/ click \"cancel\" in dialod box\n+\tpublic static void cancel(JDialogOperator dialog) {\n+\t\tnew JButtonOperator(dialog, \"cancel\").push();\t    \/\/ Cancel of filter dialog not found in resource files\n+\t}\n+\n+\t\/\/ check some counters?\n+\tpublic static void checkCounters(JFrameOperator mainFrame, int[] counters) {\n+\t\tfor (int i = 0; i < counters.length; i++) {\n+\t\t\tint value = counters[i];\n+\n+\t\t\tString actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.\" + i)).getText();\n+\n+\t\t\tif (!actual.equals(Integer.toString(value))) {\n+\t\t\t\tthrow new JemmyException(\"Wrong counters value in the main frame. Expected: \" + value + \". Found: \" + actual + \". In row: \" + i);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tstatic public boolean deleteDirectory(String path) {\n+\t\treturn deleteDirectory(new File(path));\n+\t}\n+\n+\t\/\/ deletes directory\n+\tstatic public boolean deleteDirectory(File path) {\n+\t\tif (path != null && path.exists()) {\n+\t\t\tFile[] files = path.listFiles();\n+\t\t\tfor (int i = 0; i < files.length; i++) {\n+\t\t\t\tif (files[i].isDirectory()) {\n+\t\t\t\t\tdeleteDirectory(files[i]);\n+\t\t\t\t} else {\n+\t\t\t\t\tfiles[i].delete();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn (path.delete());\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\tpublic static boolean copyFile(String from, String to) throws IOException {\n+\t\treturn copyFile(new File(from), new File(to));\n+\t}\n+\n+\tpublic static boolean copyFile(File from, File to) throws IOException {\n+\t\tif (from.isDirectory()) {\n+\t\t\treturn copyDirectory(from, to);\n+\t\t}\n+\n+\t\tif (!from.exists()) {\n+\t\t\tthrow new IOException(\"Source file \" + from.getAbsolutePath() + \" doesn't exist\");\n+\t\t}\n+\t\tif (!from.canRead()) {\n+\t\t\tthrow new IOException(\"Can't read source file \" + from.getAbsolutePath());\n+\t\t}\n+\n+\t\tif (!to.exists()) {\n+\t\t\tif (!to.createNewFile()) {\n+\t\t\t\tthrow new IOException(\"Can't create destination file \" + to.getAbsolutePath());\n+\t\t\t}\n+\t\t\tcopyFile_(from, to);\n+\t\t\treturn true;\n+\t\t} else {\n+\t\t\tif (to.isDirectory()) {\n+\t\t\t\tString name = from.getName();\n+\t\t\t\tto = new File(to, name);\n+\t\t\t\treturn copyFile(from, to);\n+\t\t\t} else {\n+\t\t\t\tthrow new IOException(\"Destination file \" + to.getAbsolutePath() + \" exists\");\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void copyFile_(File from, File to) throws IOException {\n+\t\tto.createNewFile();\n+\t\tif (\"configHistory.jtl\".equals(from.getName())) {\n+\t\t\tBufferedReader reader = new BufferedReader(new FileReader(from));\n+\t\t\tFileWriter writer = new FileWriter(to);\n+\t\t\tString temp;\n+\t\t\twhile ((temp = reader.readLine()).startsWith(\"#\")) {\n+\t\t\t\twriter.write(temp + \"\\n\");\n+\t\t\t}\n+\t\t\twhile(temp != null) {\n+\t\t\t\tFile tempFile = new File(temp);\n+\t\t\t\tif (tempFile.exists()) {\n+\t\t\t\t\tif (!new File(to.getParentFile(), tempFile.getName()).exists()) {\n+\t\t\t\t\t\tcopyFile(tempFile, to.getParentFile());\n+\t\t\t\t\t}\n+\t\t\t\t\twriter.write(to.getParentFile().getAbsolutePath() + File.separator + tempFile.getName());\n+\t\t\t\t} else {\n+\t\t\t\t\twriter.write(temp);\n+\t\t\t\t}\n+\t\t\t\ttemp = reader.readLine();\n+\t\t\t}\n+\t\t\twriter.flush();\n+\t\t} else {\n+\t\t\tFileChannel fromChannel = new FileInputStream(from).getChannel();\n+\t\t\tFileChannel toChannel = new FileOutputStream(to).getChannel();\n+\t\t\ttry {\n+\t\t\t\tfromChannel.transferTo(0, fromChannel.size(), toChannel);\n+\t\t\t} finally {\n+\t\t\t\tfromChannel.close();\n+\t\t\t\ttoChannel.close();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static boolean copyDirectory(File from, File to) throws IOException {\n+\t\tif (!from.exists()) {\n+\t\t\tthrow new IOException(\"Source file \" + from.getAbsolutePath() + \" doesn't exist\");\n+\t\t}\n+\t\tif (!from.canRead()) {\n+\t\t\tthrow new IOException(\"Can't read source file \" + from.getAbsolutePath());\n+\t\t}\n+\t\tif (from.isFile()) {\n+\t\t\treturn copyFile(from, to);\n+\t\t}\n+\n+\t\tif (!to.exists()) {\n+\t\t\tto.mkdirs();\n+\t\t\tboolean res = true;\n+\t\t\tfor (File f : from.listFiles()) {\n+\t\t\t\tif (f.isFile()) {\n+\t\t\t\t\tcopyFile_(f, new File(to, f.getName()));\n+\t\t\t\t} else if (f.isDirectory()) {\n+\t\t\t\t\tres = res & copyDirectory_(f, to);\n+\t\t\t\t}\n+\t\t\t\treturn res;\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif (!to.isDirectory()) {\n+\t\t\t\tthrow new IOException(\"Destination file is not a directory\");\n+\t\t\t}\n+\t\t\tif (!to.canWrite()) {\n+\t\t\t\tthrow new IOException(\"Can not write in destination directory\");\n+\t\t\t}\n+\n+\t\t\treturn copyDirectory_(from, to);\n+\t\t}\n+\n+\t\treturn true;\n+\t}\n+\n+\tprivate static boolean copyDirectory_(File from, File to) throws IOException {\n+\t\tFile newDir = new File(to, from.getName());\n+\t\tnewDir.mkdir();\n+\t\tfor (File f : from.listFiles()) {\n+\t\t\tif (f.isFile()) {\n+\t\t\t\tcopyFile_(f, new File(newDir, f.getName()));\n+\t\t\t} else if (f.isDirectory()) {\n+\t\t\t\tcopyDirectory_(f, newDir);\n+\t\t\t}\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\t\/\/ finds the test tree in the main frame\n+\tpublic static JTreeOperator findTree(JFrameOperator mainFrame) {\n+\t\treturn new JTreeOperator(mainFrame, new NameComponentChooser(\"tree\"));\n+\t}\n+\n+\tpublic static JTreeOperator findTree(JFrameOperator mainFrame, int n) {\n+\t\treturn new JTreeOperator(mainFrame, new NameComponentChooser(\"tree\"), n);\n+\t}\n+\n+\t\/\/ checks tabs of test results\n+\tpublic static void checkAllTestLists(JFrameOperator frame, String[] passed, String[] failed, String[] error, String[] notrun, String[] filtered) {\n+\t\tJTabbedPaneOperator tabs = new JTabbedPaneOperator(frame, new NameComponentChooser(\"br.tabs\"));\n+\t\tif (passed != null) {\n+\t\t\tcheckTestList(frame, TestList.PASSED, passed);\n+\t\t} else {\n+\t\t\tif (tabs.isEnabledAt(2)) {\n+\t\t\t\tthrow new JemmyException(\"The 'Passed' page is enabled while it must be not\");\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (failed != null) {\n+\t\t\tcheckTestList(frame, TestList.FAILED, failed);\n+\t\t} else {\n+\t\t\tif (tabs.isEnabledAt(3)) {\n+\t\t\t\tthrow new JemmyException(\"The 'Failed' page is enabled while it must be not\");\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (error != null) {\n+\t\t\tcheckTestList(frame, TestList.ERROR, error);\n+\t\t} else {\n+\t\t\tif (tabs.isEnabledAt(4)) {\n+\t\t\t\tthrow new JemmyException(\"The 'Error' page is enabled while it must be not\");\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (notrun != null) {\n+\t\t\tcheckTestList(frame, TestList.NOT_RUN, notrun);\n+\t\t} else {\n+\t\t\tif (tabs.isEnabledAt(5)) {\n+\t\t\t\tthrow new JemmyException(\"The 'Not Run' page is enabled while it must be not\");\n+\t\t\t}\n+\t\t}\n+\n+\t\tif (filtered != null) {\n+\t\t\tcheckTestList(frame, TestList.FILTERED_OUT, filtered);\n+\t\t} else {\n+\t\t\tif (tabs.isEnabledAt(6)) {\n+\t\t\t\tthrow new JemmyException(\"The 'Filtered Out' page is enabled while it must be not\");\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\t\/\/ checks a tab of test results\n+\tpublic static void checkTestList(JFrameOperator frame, TestList list, String[] expected) throws JemmyException {\n+\t\tJTreeOperator tree = findTree(frame);\n+\t\ttree.selectRow(0);\n+\t\tJTabbedPaneOperator tabs = getPage(frame, list);\n+\t\tcheckTestList(new JTableOperator(tabs, 0), expected);\n+\t}\n+\n+\t\/\/ checks a tab of test results\n+\tprivate static void checkTestList(JTableOperator list, String[] expected) throws JemmyException {\n+\n+\t\tif (list.getRowCount() != expected.length) {\n+\t\t\tthrow new JemmyException(\"Wrong test count. Expected: \" + expected.length + \", found: \" + list.getRowCount());\n+\t\t}\n+\n+\t\tboolean[] appeared = new boolean[expected.length];\n+\n+\t\tfor (int i = 0; i < expected.length; i++) {\n+\t\t\tfinal Object o = list.getValueAt(i, 0);\n+\t\t\tfinal TestResult tr = (TestResult) o;\n+\t\t\tfinal String testName = tr.getTestName();\n+\t\t\tfinal int pos = find(expected, testName);\n+\n+\t\t\tif (pos == -1) {\n+\t\t\t\tthrow new JemmyException(\"Test \" + testName + \" is not expected\");\n+\t\t\t}\n+\n+\t\t\tif (appeared[pos]) {\n+\t\t\t\tthrow new JemmyException(\"Test \" + testName + \" has been found more than once\");\n+\t\t\t}\n+\n+\t\t\tappeared[pos] = true;\n+\t\t}\n+\t}\n+\n+\t\/\/ find string s in string array a\n+\tprivate static int find(String[] a, String s) {\n+\t\tfor (int i = 0; i < a.length; i++) {\n+\t\t\tif (a[i].equals(s)) {\n+\t\t\t\treturn i;\n+\t\t\t}\n+\t\t}\n+\t\treturn -1;\n+\t}\n+\n+\t\/\/ Prepares the JavaTest for the next test run\n+\tpublic static void closeAll(JFrameOperator frame) {\n+\t\t\/\/ Close all dialog windows\n+\t\tJDialog dialog;\n+\t\twhile ((dialog = JDialogOperator.findJDialog(new AnyComponentChooser())) != null) {\n+\t\t\tnew JDialogOperator(dialog).close();\n+\t\t}\n+\n+\t\t\/\/ Close all tabs\n+\t\tJTabbedPaneOperator tabs = new JTabbedPaneOperator(frame);\n+\t\twhile (tabs.getTabCount() > 0) {\n+\t\t\tnew JMenuOperator(frame).pushMenu(getExecResource(\"cb.file.menu\") + \"|Close\", \"|\");   \/\/ Close from the File tab is in strange resource file\n+\t\t}\n+\t}\n+\n+\tpublic static void closeJT(JFrameOperator frame) {\n+\t\tcloseAll(frame);\n+\t\tnew JMenuOperator(frame).pushMenu(getExecResource(\"qlb.file.menu\") + \"|\" + getToolResource(\"dt.file.exit.mit\"), \"|\");\n+\t}\n+\n+\t\/\/ concat 2 string arrays\n+\tpublic static String[] concat(String[] a, String[] b) {\n+\t\tList<String> list = new ArrayList<String>(a.length + b.length);\n+\t\tlist.addAll(Arrays.asList(a));\n+\t\tlist.addAll(Arrays.asList(b));\n+\t\tString[] result = new String[a.length + b.length];\n+\t\treturn list.toArray(result);\n+\t}\n+\n+\tpublic static class AnyComponentChooser implements ComponentChooser {\n+\n+\t\tpublic AnyComponentChooser() {\n+\t\t}\n+\n+\t\tpublic boolean checkComponent(Component arg0) {\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\tpublic String getDescription() {\n+\t\t\treturn \"\";\n+\t\t}\n+\t}\n+\n+\tpublic static void pressYes(JDialogOperator dialog) {\n+\t\tnew JButtonOperator(dialog, \"Yes\").push();\n+\t}\n+\n+\tpublic static URL urlFile(String path) {\n+\t\tURL u = null;\n+\t\ttry {\n+\t\t\tu = new File(path).toURI().toURL();\n+\t\t} catch (MalformedURLException ex) {\n+\t\t\tLogger.getLogger(Tools.class.getName()).log(Level.SEVERE, null, ex);\n+\t\t}\n+\t\treturn u;\n+\t}\n+\n+\tpublic static int findInStringArray(String[] in, String what) {\n+\t\tfor (int i = 0; i < in.length; i++) {\n+\t\t\tif (in[i].equals(what)) {\n+\t\t\t\treturn i;\n+\t\t\t}\n+\t\t}\n+\t\treturn -1;\n+\t}\n+\n+\tpublic static void deleteUserData() {\n+\t\tdeleteDirectory(new File(USER_HOME_PATH + \".javatest\"));\n+\t}\n+\n+\tpublic static void openWorkDirectory_(JFrameOperator mainFrame, String path) {\n+\t\tnew JMenuOperator(mainFrame).pushMenuNoBlock(getExecResource(\"qlb.file.menu\") + \"|\" + getExecResource(\"tmgr.openMenu.menu\") + \"|Work Directory ...\", \"|\", new StringComparator() {\n+\n+\t\t\tpublic boolean equals(String arg0, String arg1) {\n+\t\t\t\treturn arg0.equals(arg1);\n+\t\t\t}\n+\t\t});\n+\n+\t\tJDialogOperator filer = new JDialogOperator(mainFrame, \"Open Work Directory\");\n+\n+\t\tJTextFieldOperator tf;\n+\n+\t\ttf = new JTextFieldOperator((JTextField) Tools.getComponent(filer, new String[]{\"Folder name:\", \"File name:\"}));\n+\t\ttf.enterText(path);\n+\t}\n+\n+\tpublic enum WDLoadingResult {\n+\n+\t\tALL_PASSED, SOME_FAILED, SOME_ERRORS, SOME_NOTRUN\n+\t};\n+\n+\tpublic static void waitForWDLoading(JFrameOperator mainFrame, WDLoadingResult type) {\n+\t\tnew JTextFieldOperator(mainFrame, getExecResource(\"br.worst.\" + type.ordinal()));\n+\t}\n+\n+\tpublic static void startTests(JFrameOperator mainFrame) {\n+\t\tnew JMenuOperator(mainFrame, \"Run Tests\").pushMenu(new String[]{\"Run Tests\", \"Start\"});\n+\t}\n+\n+\tpublic static void pushClose(JFrameOperator mainFrame) {\n+\t\tnew JMenuOperator(mainFrame, \"File\").pushMenuNoBlock(new String[]{\"File\", \"Close\"});\n+\t}\n+\n+\t@After\n+\tpublic void removeFiles() {\n+\t\tfor (File f : usedFiles) {\n+\t\t\tif (f.exists()) {\n+\t\t\t\tif (f.isDirectory()) {\n+\t\t\t\t\tdeleteDirectory(f);\n+\t\t\t\t} else if (f.isFile()) {\n+\t\t\t\t\tf.delete();\n+\t\t\t\t}\n+\t\t\t\tif (f.exists()) {\n+\t\t\t\t\tSystem.err.println(\"Temporary file \" + f.getAbsolutePath() + \" was not removed. Please remove it manualy.\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\tprivate static LinkedList<File> usedFiles = new LinkedList<File>();\n+\n+\tpublic static class SimpleStringComparator implements StringComparator {\n+\n+\t\tpublic boolean equals(String arg0, String arg1) {\n+\t\t\treturn arg0.equals(arg1);\n+\t\t}\n+\t}\n+\n+\tpublic static void startJavaTestWithDefaultTestSuite() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tnew ClassReference(\"com.sun.javatest.tool.Main\").startApplication(new String[]{\"-NewDesktop\", \"-open\", TEST_SUITE_NAME});\n+\t}\n+\n+\t\/\/ sleep for 10 seconds\n+\tpublic static void pause() {\n+\t\ttry {\n+\t\t\tThread.sleep(10000);\n+\t\t} catch (Exception e) {\n+\t\t}\n+\t}\n+\n+\tpublic static void pause(int seconds) {\n+\t\ttry {\n+\t\t\tThread.sleep(seconds * 1000);\n+\t\t} catch (Exception e) {\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/Tools.java","additions":920,"deletions":0,"binary":false,"changes":920,"status":"added"},{"patch":"@@ -0,0 +1,152 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.netbeans.jemmy.operators.ContainerOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Tools;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter extends Tools {\n+\t\n+\n+\tprotected static final String[] failedListsTests = new String[]{\"lists\/DoublyLinkedList\/InsertTest.java\"};\n+\tprotected static final String[] passedListsTests = new String[]{\"lists\/DoublyLinkedList\/AppendTest.java\", \"lists\/DoublyLinkedList\/EqualsTest.java\", \"lists\/DoublyLinkedList\/RemoveTest.java\", \"lists\/LinkedList\/AppendTest.java\", \"lists\/LinkedList\/EqualsTest.java\", \"lists\/LinkedList\/InsertTest.java\", \"lists\/LinkedList\/RemoveTest.java\", \"lists\/SortedList\/EqualsTest.java\", \"lists\/SortedList\/InsertTest.java\", \"lists\/SortedList\/RemoveTest.java\"};\n+\tprotected static final String[] listsTests = new String[]{\"lists\/DoublyLinkedList\/AppendTest.java\", \"lists\/DoublyLinkedList\/EqualsTest.java\", \"lists\/DoublyLinkedList\/InsertTest.java\", \"lists\/DoublyLinkedList\/RemoveTest.java\", \"lists\/LinkedList\/AppendTest.java\", \"lists\/LinkedList\/EqualsTest.java\", \"lists\/LinkedList\/InsertTest.java\", \"lists\/LinkedList\/RemoveTest.java\", \"lists\/SortedList\/EqualsTest.java\", \"lists\/SortedList\/InsertTest.java\", \"lists\/SortedList\/RemoveTest.java\"};\n+\tprotected static final String[] bignumTests = new String[]{\"BigNum\/AddTest.java\", \"BigNum\/CompareTest.java\", \"BigNum\/EqualsTest.java\", \"BigNum\/LongConstrTest.java\", \"BigNum\/StringConstrTest.java\", \"BigNum\/SubtractTest.java\"};\n+\tprotected static final String[] allTests = new String[]{\"BigNum\/AddTest.java\", \"BigNum\/CompareTest.java\", \"BigNum\/EqualsTest.java\", \"BigNum\/LongConstrTest.java\", \"BigNum\/StringConstrTest.java\", \"BigNum\/SubtractTest.java\", \"lists\/DoublyLinkedList\/AppendTest.java\", \"lists\/DoublyLinkedList\/EqualsTest.java\", \"lists\/DoublyLinkedList\/InsertTest.java\", \"lists\/DoublyLinkedList\/RemoveTest.java\", \"lists\/LinkedList\/AppendTest.java\", \"lists\/LinkedList\/EqualsTest.java\", \"lists\/LinkedList\/InsertTest.java\", \"lists\/LinkedList\/RemoveTest.java\", \"lists\/SortedList\/EqualsTest.java\", \"lists\/SortedList\/InsertTest.java\", \"lists\/SortedList\/RemoveTest.java\"};\n+\t\n+\tpublic void startWithDefaultWorkdir() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(TEST_SUITE_NAME, DEFAULT_WD_NAME, CONFIG_NAME);\n+\t\tmainFrame = findMainFrame();\n+\t\t\n+\t\t\/\/ wait for \"Some tests in this folder have not been run\" label\n+\t\tnew JTextFieldOperator(mainFrame, getExecResource(\"br.worst.3\"));\n+\t}\n+\t\n+\tpublic void startWithRunWorkdir() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartJavatest(TEST_SUITE_NAME, WD_RUN_NAME, CONFIG_NAME);\n+\t\tmainFrame = findMainFrame();\n+\t\tnew JTextFieldOperator(mainFrame, \"There are some failed tests in this folder\");\n+\t}\n+\n+\tpublic static JDialogOperator openConfigurationEditor(JFrameOperator mainFrame) {\n+\t\tnew JMenuOperator(mainFrame, \"Configure\").pushMenu(\"Configure|Edit Configuration...\", \"|\");\n+\t\treturn new JDialogOperator(mainFrame, \"Configuration Editor\");\n+\t}\n+\n+\tpublic static JDialogOperator openFilterEditor(JFrameOperator frame) {\n+\t\tnew JMenuOperator(frame, \"View\").pushMenu(\"View|Filter|Configure Filters ...\", \"|\");\n+\t\treturn new JDialogOperator(frame, \"Filter Editor\");\n+\t}\n+\t\n+\tpublic static void selectFilter(JDialogOperator filterEditor, int filter) {\n+\t\tnew JListOperator(filterEditor, new NameComponentChooser(\"fconfig.list\")).clickOnItem(filter, 1);\n+\t}\n+\t\n+\tpublic static void selectFilter(JFrameOperator frame, String filter) {\n+\t\tnew JMenuOperator(frame, \"View\").pushMenu(\"View|Filter|\" + filter, \"|\");\n+\t}\n+\t\n+\tpublic static void chooseTab(ContainerOperator mainFrame, String tab) {\n+\t\tnew JTabbedPaneOperator(mainFrame).selectPage(tab);\n+\t}\n+\n+\tpublic static void setKeywordFilter(JFrameOperator mainFrame, int type, String value) {\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tchooseTab(filterEditor, \"Keywords\");\n+\n+\t\tnew JRadioButtonOperator(filterEditor, \"Match\").push();\n+\n+\t\tnew JComboBoxOperator(filterEditor).selectItem(type);\n+\n+\t\tnew JTextFieldOperator(filterEditor, new NameComponentChooser(\"basicTf.keywords.field\")).enterText(value);\n+\t\t\n+\t}\n+\n+\tpublic static void disableKeywordFilter(JFrameOperator mainFrame) {\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 4);\n+\n+\t\tchooseTab(filterEditor, \"Keywords\");\n+\n+\t\tnew JRadioButtonOperator(filterEditor, \"All Tests\").push();\n+\n+\t}\n+\n+\tpublic static void setPrevStateFilter(JFrameOperator mainFrame, String prevState) {\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tchooseTab(filterEditor, \"Prior Status\");\n+\n+\t\tnew JRadioButtonOperator(filterEditor, \"Any Of\"). setSelected(true);\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Passed\").setSelected(false);\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Failed\").setSelected(false);\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Error\").setSelected(false);\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Not Run\").setSelected(false);\n+\n+\t\tnew JCheckBoxOperator(filterEditor, prevState).setSelected(true);\n+\n+\t\tok(filterEditor);\n+\n+\t\tselectFilter(mainFrame, \"Custom\");\n+                \n+                pause(5);\n+\t}\n+\n+\tprotected JFrameOperator mainFrame;\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import static org.junit.Assert.fail;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import com.sun.javatest.AllTestsFilter;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter1 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter1\");\n+\t}\n+\n+\t@Test\n+\tpublic void testViewFilter1() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJComboBoxOperator comboBox = new JComboBoxOperator(mainFrame, new NameComponentChooser(\"fconfig.box\"));\n+\t\tObject selectedItem = comboBox.getSelectedItem();\n+\t\t\n+\t\tif (!(selectedItem instanceof AllTestsFilter)) {\n+\t\t\tfail(\"Wrong default value in filter selector. Expected: All Tests. Found: \" + selectedItem);\n+\t\t}\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter1.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * To change this template, choose Browse | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter10 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter10\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter10() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, Exception {\n+\/\/ this test doesn't work with current testsuite - keywords are not supported\n+\t\t\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 0, \"k1\");\n+\/\/\n+\/\/\t\tcheckAllTestLists(mainFrame, null, null, null, null, allTests);\n+\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter10.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * To change this template, choose Browse | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter11 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter11\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter11() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 1, \"kk6\");\n+\/\/\n+\/\/\t\tnew JDialogOperator(\"Error\").close();\n+\/\/\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter11.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter12 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter12\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter12() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/ this test doesn't work with current testsuite\n+\t\t\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 1, \"k1\");\n+\/\/\n+\/\/\t\tcheckAllTestLists(mainFrame, null, null, null, null, allTests);\n+\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter12.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter13 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter13\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter13() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/ this test doesn't work with current testsuite\n+\t\t\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 2, \"k1\");\n+\/\/\n+\/\/\t\tcheckAllTestLists(mainFrame, null, null, null, null, allTests);\n+\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter13.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter14 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter14\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter14() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 2, \"kk6\");\n+\/\/\n+\/\/\t\tnew JDialogOperator(\"Error\").close();\n+\t\t\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter14.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter15 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter15\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter15() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+\t\tstartWithRunWorkdir();\n+\n+\t\tsetPrevStateFilter(mainFrame, \"Failed\");\n+\n+\t\tcheckAllTestLists(mainFrame, null, failedListsTests, null, null, concat(bignumTests, passedListsTests));\n+\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter15.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter16 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter16\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter16() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithRunWorkdir();\n+\n+\t\tsetPrevStateFilter(mainFrame, \"Passed\");\n+\n+\t\tcheckAllTestLists(mainFrame, passedListsTests, null, null, null, concat(bignumTests, failedListsTests));\n+\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter16.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter17 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter17\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter17() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithRunWorkdir();\n+\n+\t\tsetPrevStateFilter(mainFrame, \"Error\");\n+\n+\t\tcheckAllTestLists(mainFrame, null, null, null, null, allTests);\n+\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter17.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter18 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter18\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter18() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithRunWorkdir();\n+\n+\t\tsetPrevStateFilter(mainFrame, \"Not Run\");\n+\n+\t\tcheckAllTestLists(mainFrame, null, null, null, bignumTests, listsTests);\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter18.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter19 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter19\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter19() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\/\/\n+\/\/\t\tselectFilter(filterEditor, 4);\n+\/\/\n+\/\/\t\tchooseTab(filterEditor, \"Prior Status\");\n+\/\/\n+\/\/\t\tnew JRadioButtonOperator(filterEditor, \"Any Of\").setSelected(true);\n+\/\/\n+\/\/\t\tnew JCheckBoxOperator(filterEditor, \"Not Run\").push();\n+\/\/\n+\/\/\t\tnew JButtonOperator(filterEditor, \"Reset\");\n+\/\/\n+\/\/\t\tcheckTestList(mainFrame, TestList.NOT_RUN, allTests);\n+\/\/\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter19.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter2 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter2\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter2() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithDefaultWorkdir();\n+\t\t\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\t\t\n+\t\tselectFilter(filterEditor, 1);\n+\t\t\n+\t\tnew JTextFieldOperator(filterEditor, \"Does not apply to this filter.\");\n+\t\t\n+\t}\n+\t\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter2.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter20 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter20\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter20() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tcancel(filterEditor);\n+\n+\t\tlong time = System.currentTimeMillis();\n+\n+\t\twhile (JDialogOperator.findJDialog(\"Filter Editor\", false, false) != null) {\n+\t\t\tif (System.currentTimeMillis() - time > 60000)\n+\t\t\t\tthrow new JemmyException(\"Cancel does not dismisses the dialog box\");\n+\t\t}\n+\n+\t\t\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter20.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter21 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter21\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter21() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tnew JButtonOperator(filterEditor, \"Help\").push();\n+\n+\t\tnew JFrameOperator(\"User's Guide\").close();\n+\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter21.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter22 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter22\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter22() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithDefaultWorkdir();\n+\t\t\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\t\t\n+\t\tselectFilter(filterEditor, 0);\n+\t\t\n+\t\tnew JTextFieldOperator(filterEditor, \"Does not apply to this filter.\");\n+\t\t\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter22.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter3 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter3\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter3() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithDefaultWorkdir();\n+\t\t\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\t\t\n+\t\tselectFilter(filterEditor, 2);\n+\t\t\n+\t\tnew JTextFieldOperator(filterEditor, \"Does not apply to this filter.\");\n+\t\t\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter3.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter5 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter5\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter5() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tgetTextField(filterEditor, \"Custom Label:\").enterText(\"NewFilter\");\n+\n+\t\tnew JMenuOperator(mainFrame, \"View\").pushMenu(\"View|Filter|NewFilter\", \"|\");\n+\t\t\n+\t}\n+\t\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter5.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter6 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter6\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter6() throws InterruptedException, ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\/\/ this test doesn't work with current testsuite - interview doesn't contain needed filter\n+\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\/\/\n+\/\/\t\tselectFilter(filterEditor, 3);\n+\/\/\n+\/\/\t\tchooseTab(filterEditor, \"Exclude Lists\");\n+\/\/\n+\/\/\t\tnew JCheckBoxOperator(filterEditor, \"Use settings in interview\").setSelected(true);\n+\/\/\n+\/\/\t\tok(filterEditor);\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\t\tpause(10);\n+\/\/\n+\/\/\t\tcheckAllTestLists(mainFrame, null, null, null, concat(passedListsTests, bignumTests), failedListsTests);\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter6.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.awt.Rectangle;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.tree.TreePath;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter7 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter7\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter7() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+                JTreeOperator tree = new JTreeOperator(filterEditor);\n+                TreePath path = tree.getPathForRow(0);\n+\n+                tree.scrollToPath(path);\n+                Rectangle r = tree.getRowBounds(0);\n+                tree.clickMouse(r.x+9, r.y+9, 1);\n+                r = tree.getRowBounds(1);\n+                tree.clickMouse(r.x+9, r.y+9, 1);\n+\n+\t\tok(filterEditor);\n+\n+\t\tselectFilter(mainFrame, \"Custom\");\n+\n+\t\tcheckAllTestLists(mainFrame, null, null, null, bignumTests, listsTests);\n+\t\t\n+\t}\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter7.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import static org.junit.Assert.fail;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import com.sun.javatest.AllTestsFilter;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+@SuppressWarnings(\"unused\")\n+public class ViewFilter8 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter8\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter8() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\tstartWithDefaultWorkdir();\n+\n+\t\tJDialogOperator filterEditor = openFilterEditor(mainFrame);\n+\n+\t\tselectFilter(filterEditor, 3);\n+\n+\t\tchooseTab(filterEditor, \"Special\");\n+\n+\t\tnew JCheckBoxOperator(filterEditor, \"Enable test suite filter\").setSelected(true);\n+\n+\t\tok(filterEditor);\n+\n+\t\tcheckAllTestLists(mainFrame, null, null, null, allTests, null);\n+\t\t\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter8.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.ViewFilter;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+\n+\/**\n+ *\n+ * @author naryl\n+ *\/\n+public class ViewFilter9 extends ViewFilter {\n+\t\n+\tpublic static void main(String[] args) {\n+\t\tJUnitCore.main(\"jthtest.gui.ViewFilter.ViewFilter9\");\n+\t}\n+\t\n+\t@Test\n+\tpublic void testViewFilter9() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+\t\t\n+\/\/\t\tstartWithDefaultWorkdir();\n+\/\/\n+\/\/\t\tselectFilter(mainFrame, \"Custom\");\n+\/\/\n+\/\/\t\tsetKeywordFilter(mainFrame, 0, \"kk6\");\n+\/\/\n+\/\/\t\tnew JDialogOperator(\"Error\").close();\n+\t\t\n+\t}\n+\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/ViewFilter\/ViewFilter9.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,354 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import static jthtest.Tools.*;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu {\n+    private static JMenuBarOperator menuBar;\n+\n+    public static JMenuBarOperator getMenuBar(JFrameOperator mainFrame) {\n+\tif(menuBar == null)\n+\t    menuBar = new JMenuBarOperator(mainFrame);\n+\treturn menuBar;\n+    }\n+\n+    public static final String FILE_MENU_TI18N = \"dt.file.menu\";\n+    public static final String FILE_MENU_MNEMONIC_TI18N = \"dt.file.mne\";\n+\n+    public static final String FILE_OPENQS_MENU_EI18N = \"mgr.openQuickStart.act\";\n+    public static final String FILE_OPEN_MENU_TI18N = \"???\";\n+    public static final String FILE_OPEN_WD_MENU_EI18N = \"ch.setWorkDir.act\";\n+    public static final String FILE_OPEN_WD_MNEMONIC_EI18N = \"ch.setWorkDir.mne\";\n+    public static final String FILE_OPEN_TS_MENU_EI18N = \"mgr.openTestSuite.act\";\n+    public static final String FILE_OPEN_TS_MNEMONIC_EI18N = \"mgr.openTestSuite.mne\";\n+    \n+    public static final String FILE_RECENTWD_MENU_TI18N = \"dt.file.recentwd.menu\";\n+    public static final String FILE_PREFS_MENU_TI18N = \"dt.file.prefs.mit\";\n+    public static final String FILE_CLOSE_MENU_TI18N = \"tdi.file.close.act\";\n+    public static final String FILE_EXIT_MENU_TI18N = \"dt.file.exit.mit\";\n+    public static final String FILE_CREATEWD_MENU_EI18N = \"mgr.createWorkDir.act\";\n+\n+    public static JMenuOperator getFileMenu(JFrameOperator mainFrame) {\n+\treturn new JMenuOperator(mainFrame, getFileMenuName());\n+    }\n+    public static JMenuItemOperator getFile_OpenQuickStartMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_OpenQuickStartMenuName()});\n+    }\n+    public static JMenuItemOperator getFile_OpenMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItems(new String[] {getFileMenuName()}, new SimpleStringComparator())[1];\n+    }\n+    public static JMenuItemOperator getFile_RecentWorkDirectoryMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_RecentWorkDirectoryMenuName()});\n+    }\n+    public static JMenuItemOperator getFile_PreferencesMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_PreferencesMenuName()});\n+    }\n+    public static JMenuItemOperator getFile_CloseMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_CloseMenuName()});\n+    }\n+    public static JMenuItemOperator getFile_ExitMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_ExitMenuName()});\n+    }\n+    public static JMenuItemOperator getFile_Open_WorkDirectoryMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_OpenMenuName(), getFile_Open_WorkDirectoryMenuName()}, new SimpleStringComparator());\n+    }\n+    public static JMenuItemOperator getFile_Open_TestSuiteMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_OpenMenuName(), getFile_Open_TestSuiteMenuName()}, new SimpleStringComparator());\n+    }\n+    public static JMenuItemOperator getFile_CreateWorkDirectoryMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getFileMenuName(), getFile_CreateWorkDirectoryMenuName()});\n+    }\n+    \n+    public static String getFileMenuName() {\n+\treturn getToolResource(FILE_MENU_TI18N);\n+    }\n+    public static String getFile_OpenQuickStartMenuName() {\n+\treturn getExecResource(FILE_OPENQS_MENU_EI18N);\n+    }\n+    public static String getFile_OpenMenuName() {\n+\treturn \"Open\";\n+    }\n+    public static String getFile_RecentWorkDirectoryMenuName() {\n+\treturn getToolResource(FILE_RECENTWD_MENU_TI18N);\n+    }\n+    public static String getFile_PreferencesMenuName() {\n+\treturn getToolResource(FILE_PREFS_MENU_TI18N);\n+    }\n+    public static String getFile_CloseMenuName() {\n+\treturn getToolResource(FILE_CLOSE_MENU_TI18N);\n+    }\n+    public static String getFile_ExitMenuName() {\n+\treturn getToolResource(FILE_EXIT_MENU_TI18N);\n+    }\n+    public static String getFile_Open_WorkDirectoryMenuName() {\n+\treturn getExecResource(FILE_OPEN_WD_MENU_EI18N);\n+    }\n+    public static String getFile_Open_TestSuiteMenuName() {\n+\treturn getExecResource(FILE_OPEN_TS_MENU_EI18N);\n+    }\n+    public static String getFile_CreateWorkDirectoryMenuName() {\n+\treturn getExecResource(FILE_CREATEWD_MENU_EI18N);\n+    }\n+\n+    public static final String CONFIGURE_MENU_EI18N = \"ch.menu\";\n+\n+    public static final String CONFIGURE_EDIT_MENU_EI18N = \"ch.full.act\";\n+    public static final String CONFIGURE_EDIT_QS_MENU_EI18N = \"ch.change.menu\";\n+    public static final String CONFIGURE_NEW_MENU_EI18N = \"ch.new.act\";\n+    public static final String CONFIGURE_LOAD_MENU_I18N = \"ce.file.load.mit\";\n+    public static final String CONFIGURE_RECENT_MENU_I18N = \"ce.history.menu\";\n+\n+    public static JMenuOperator getConfigureMenu(JFrameOperator mainFrame) {\n+\treturn new JMenuOperator(mainFrame, getConfigureMenuName());\n+    }\n+    public static JMenuItemOperator getConfigure_EditConfigurationMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getConfigureMenuName(), getConfigure_EditConfigurationMenuName()});\n+    }\n+    public static JMenuItemOperator getConfigure_EditQuickSetMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getConfigureMenuName(), getConfigure_EditQuickSetMenuName()});\n+    }\n+    public static JMenuItemOperator getConfigure_NewConfigurationMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getConfigureMenuName(), getConfigure_NewConfigurationMenuName()});\n+    }\n+    public static JMenuItemOperator getConfigure_LoadConfigurationMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getConfigureMenuName(), getConfigure_LoadConfigurationMenuName()});\n+    }\n+    public static JMenuItemOperator getConfigure_LoadRecentConfigurationMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getConfigureMenuName(), getConfigure_LoadRecentConfigurationMenuName()});\n+    }\n+\n+    public static String getConfigureMenuName() {\n+\treturn getExecResource(CONFIGURE_MENU_EI18N);\n+    }\n+    public static String getConfigure_EditConfigurationMenuName() {\n+\treturn getExecResource(CONFIGURE_EDIT_MENU_EI18N);\n+    }\n+    public static String getConfigure_EditQuickSetMenuName() {\n+\treturn getExecResource(CONFIGURE_EDIT_QS_MENU_EI18N);\n+    }\n+    public static String getConfigure_NewConfigurationMenuName() {\n+\treturn getExecResource(CONFIGURE_NEW_MENU_EI18N);\n+    }\n+    public static String getConfigure_LoadConfigurationMenuName() {\n+\treturn getExecResource(CONFIGURE_LOAD_MENU_I18N);\n+    }\n+    public static String getConfigure_LoadRecentConfigurationMenuName() {\n+\treturn getExecResource(CONFIGURE_RECENT_MENU_I18N);\n+    }\n+\n+    public static final String RUNTESTS_MENU_EI18N = \"rh.menu\";\n+    public static final String RUNTESTS_START_MENU_EI18N = \"rh.start.act\";\n+    public static final String RUNTESTS_STOP_MENU_EI18N = \"rh.stop.act\";\n+    public static final String RUNTESTS_MONITOR_MENU_EI18N = \"rh.progress.act\";\n+\n+    public static JMenuOperator getRunTestsMenu(JFrameOperator mainFrame) {\n+\treturn new JMenuOperator(mainFrame, getRunTestsMenuName());\n+    }\n+    public static JMenuItemOperator getRunTests_StartMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getRunTestsMenuName(), getRunTests_StartMenuName()});\n+    }\n+    public static JMenuItemOperator getRunTests_StopMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getRunTestsMenuName(), getRunTests_StopMenuName()});\n+    }\n+    public static JMenuItemOperator getRunTests_MonitorProgressMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getRunTestsMenuName(), getRunTests_MonitorProgressMenuName()});\n+    }\n+\n+    public static String getRunTestsMenuName() {\n+\treturn getExecResource(RUNTESTS_MENU_EI18N);\n+    }\n+    public static String getRunTests_StartMenuName() {\n+\treturn getExecResource(RUNTESTS_START_MENU_EI18N);\n+    }\n+    public static String getRunTests_StopMenuName() {\n+\treturn getExecResource(RUNTESTS_STOP_MENU_EI18N);\n+    }\n+    public static String getRunTests_MonitorProgressMenuName() {\n+\treturn getExecResource(RUNTESTS_MONITOR_MENU_EI18N);\n+    }\n+\n+    public static final String REPORT_MENU_EI18N = \"rpth.menu\";\n+    public static final String REPORT_CREATE_MENU_EI18N = \"rpth.new.act\";\n+    public static final String REPORT_OPEN_MENU_EI18N = \"rpth.open.act\";\n+\n+    public static JMenuOperator getReportMenu(JFrameOperator mainFrame) {\n+\treturn new JMenuOperator(mainFrame, getReportMenuName());\n+    }\n+    public static JMenuItemOperator getReport_CreateReportMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getReportMenuName(), getReport_CreateReportMenuName()});\n+    }\n+    public static JMenuItemOperator getReport_OpenReportMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getReportMenuName(), getReport_OpenReportMenuName()});\n+    }\n+\n+    public static String getReportMenuName() {\n+\treturn getExecResource(REPORT_MENU_EI18N);\n+    }\n+    public static String getReport_CreateReportMenuName() {\n+\treturn getExecResource(REPORT_CREATE_MENU_EI18N);\n+    }\n+    public static String getReport_OpenReportMenuName() {\n+\treturn getExecResource(REPORT_OPEN_MENU_EI18N);\n+    }\n+\n+    public static final String VIEW_MENU_EI18N = \"ce.view.menu\";\n+    public static final String VIEW_CONFIGURATION_MENU_EI18N = \"exec.view.cfg.menu\";\n+    public static final String VIEW_FILTER_MENU_EI18N = \"fconfig.submenu.menu\";\n+    public static final String VIEW_PROPERTIES_MENU_EI18N = \"exec.view.props.act\";\n+    public static final String VIEW_LOGS_MENU_EI18N = \"exec.view.logviewer.act\";\n+    public static final String VIEW_TSERRORS_MENU_EI18N = \"exec.view.testSuiteErrors.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWTESTENV_MENU_EI18N = \"ch.env.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWEXCLUDELIST_MENU_EI18N = \"ch.excl.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWCHECKLIST_MENU_EI18N = \"ch.checkList.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWQUESTIONLOG_MENU_EI18N = \"ch.quLog.act\";\n+\n+    public static JMenuOperator getViewMenu(JFrameOperator mainFrame) {\n+\treturn new JMenuOperator(mainFrame, getViewMenuName());\n+    }\n+    public static JMenuItemOperator getView_ConfigurationMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_ConfigurationMenuName()});\n+    }\n+    public static JMenuItemOperator getView_FilterMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_FilterMenuName()});\n+    }\n+    public static JMenuItemOperator getView_PropertiesMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_PropertiesMenuName()});\n+    }\n+    public static JMenuItemOperator getView_LogsMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_LogsMenuName()});\n+    }\n+    public static JMenuItemOperator getView_TestSuiteErrorsMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_TestSuiteErrorsMenuName()});\n+    }\n+    public static JMenuItemOperator getView_Configuration_ShowChecklistMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowChecklistMenuName()});\n+    }\n+    public static JMenuItemOperator getView_Configuration_ShowExcludeListMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowExcludeListMenuName()});\n+    }\n+    public static JMenuItemOperator getView_Configuration_ShowQuestionLogMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowQuestionLogMenuName()});\n+    }\n+    public static JMenuItemOperator getView_Configuration_ShowTestEnvironmentMenu(JFrameOperator mainFrame) {\n+\treturn getMenuBar(mainFrame).showMenuItem(new String[] {getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowTestEnvironmentMenuName()});\n+    }\n+\n+    public static String getViewMenuName() {\n+\treturn getExecResource(VIEW_MENU_EI18N);\n+    }\n+    public static String getView_ConfigurationMenuName() {\n+\treturn getExecResource(VIEW_CONFIGURATION_MENU_EI18N);\n+    }\n+    public static String getView_FilterMenuName() {\n+\treturn getExecResource(VIEW_FILTER_MENU_EI18N);\n+    }\n+    public static String getView_PropertiesMenuName() {\n+\treturn getExecResource(VIEW_PROPERTIES_MENU_EI18N);\n+    }\n+    public static String getView_LogsMenuName() {\n+\treturn getExecResource(VIEW_LOGS_MENU_EI18N);\n+    }\n+    public static String getView_TestSuiteErrorsMenuName() {\n+\treturn getExecResource(VIEW_TSERRORS_MENU_EI18N);\n+    }\n+    public static String getView_Configuration_ShowTestEnvironmentMenuName() {\n+\treturn getExecResource(VIEW_CONFIGURATION_SHOWTESTENV_MENU_EI18N);\n+    }\n+    public static String getView_Configuration_ShowChecklistMenuName() {\n+\treturn getExecResource(VIEW_CONFIGURATION_SHOWCHECKLIST_MENU_EI18N);\n+    }\n+    public static String getView_Configuration_ShowExcludeListMenuName() {\n+\treturn getExecResource(VIEW_CONFIGURATION_SHOWEXCLUDELIST_MENU_EI18N);\n+    }\n+    public static String getView_Configuration_ShowQuestionLogMenuName() {\n+\treturn getExecResource(VIEW_CONFIGURATION_SHOWQUESTIONLOG_MENU_EI18N);\n+    }\n+\n+    public static final String TOOLS_MENU_TI18N = \"dt.tasks.menu\";\n+    public static final String TOOLS_MENU_MNEMONIC_TI18N = \"dt.tasks.mne\";\n+\n+    public static final String TOOLS_TEST_RESULTS_AUDITOR_I18N = \"???\";\n+    public static final String TOOLS_AGENT_MONITOR_I18N = \"???\";\n+    public static final String TOOLS_OPENQS_EI18N = \"mgr.openQuickStart.act\";\n+\n+    public static String getToolsMenuName() {\n+\treturn getToolResource(TOOLS_MENU_TI18N);\n+    }\n+    public static String getTools_TestResultsAuditorMenuName() {\n+\treturn \"Test Results Auditor...\";\n+    }\n+    public static String getTools_AgentMonitorMenuName() {\n+\treturn \"Agent Monitor...\";\n+    }\n+    public static String getTools_OpenQuickStartWizardMenuName() {\n+\treturn getExecResource(TOOLS_OPENQS_EI18N);\n+    }\n+    public static String getTools_ReportConverterMenuName() {\n+\treturn \"Report Converter...\";\n+    }\n+\n+    public static final String WINDOWS_MENU_TI18N = \"dt.windows.menu\";\n+    public static final String WINDOWS_MENU_MNEMONIC_TI18N = \"dt.windows.mne\";\n+\n+    public static String getWindowsMenuName() {\n+\treturn getToolResource(WINDOWS_MENU_TI18N);\n+    }\n+\n+    public static final String HELP_MENU_EI18N = \"qlb.help.btn\";\n+    public static final String HELP_MENU_MNEMONIC_TI18N = \"qlb.help.mne\";\n+\n+    public static final String HELP_ONLINEHELP_MENU_TI18N = \"hm.help.mit\";\n+    public static final String HELP_ONLINEHELP_MNEMONIC_TI18N = \"hm.help.mne\";\n+    public static final String HELP_ABOUTJT_MENU_I18N = \"hm.aboutJavaTest.mit\";\n+    public static final String HELP_ABOUTJT_MNEMONIC_I18N = \"hm.aboutJavaTest.mne\";\n+    public static final String HELP_ABOUTJVM_MENU_I18N = \"hm.aboutJava.mit\";\n+    public static final String HELP_ABOUTJVM_MNEMONIC_I18N = \"hm.aboutJava.mne\";\n+\n+    public static String getHelpMenuName() {\n+\treturn getExecResource(HELP_MENU_EI18N);\n+    }\n+    public static String getHelp_OnlineHelpMenuName() {\n+\treturn getToolResource(HELP_ONLINEHELP_MENU_TI18N);\n+    }\n+    public static String getHelp_AboutJTHarnessMenuName() {\n+\treturn getToolResource(HELP_ABOUTJT_MENU_I18N);\n+    }\n+    public static String getHelp_AboutJVMMenuName() {\n+\treturn getToolResource(HELP_ABOUTJVM_MENU_I18N);\n+    }\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu.java","additions":354,"deletions":0,"binary":false,"changes":354,"status":"added"},{"patch":"@@ -0,0 +1,258 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuItem;\n+import javax.swing.MenuElement;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import static jthtest.menu.Menu.*;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu01 extends Test {\n+\n+    public void testImpl() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, Exception {\n+\tTools.startJavatestNewDesktop();\n+\n+\tJFrameOperator mainFrame = Tools.findMainFrame();\n+\tJMenuBarOperator menu = getMenuBar(mainFrame);\n+\n+\tMenuElement[] menuElements = menu.getSubElements();\n+\tint menuCount = menuElements.length;\n+\tif (menuCount != 4) {\n+\t    StringBuilder message = new StringBuilder(\"Found less then 4 menu elements. Expected \");\n+\t    message.append(getFileMenuName()).append(\", \");\n+\t    message.append(getToolsMenuName()).append(\", \");\n+\t    message.append(getWindowsMenuName()).append(\", \");\n+\t    message.append(getHelpMenuName());\n+\t    message.append(\", found: \");\n+\t    for (int i = 0; i < menuCount; i++) {\n+\t\tmessage.append(((JMenuItem) menuElements[i].getComponent()).getText());\n+\t    }\n+\t    errors.add(message.toString());\n+\t}\n+\n+\tif (menuCount > 0) {\n+\t    JMenuOperator item = new JMenuOperator((JMenu) (menuElements[0].getComponent()));\n+\n+\t    String menuName = getFileMenuName();\n+\n+\t    if (!menuName.equals(item.getText())) {\n+\t\terrors.add(\"First menu element is not \" + menuName + \". Found \" + item.getText());\n+\t    } else {\n+\t\tJMenuItemOperator[] elements = menu.showMenuItems(menuName);\n+\t\tif (elements.length != 6) {\n+\t\t    StringBuilder message = new StringBuilder(\"Expected 8 File menu subelements: \");\n+\t\t    message.append(getFile_OpenQuickStartMenuName()).append(\", \").append(getFile_OpenMenuName()).append(\", \");\n+\t\t    message.append(getFile_RecentWorkDirectoryMenuName()).append(\", \").append(getFile_PreferencesMenuName());\n+\t\t    message.append(\", \").append(getFile_CloseMenuName()).append(\", \").append(getFile_ExitMenuName()).append(\". Found: \");\n+\t\t    for (JMenuItemOperator e : elements) {\n+\t\t\tmessage.append(((JMenuItem) e.getComponent()).getText()).append(\"; \");\n+\t\t    }\n+\n+\t\t    errors.add(message.toString());\n+\t\t}\n+\t\tif (elements.length > 0) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[0].getComponent();\n+\t\t    if (!getFile_OpenQuickStartMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"First menu subelement of File menu is \" + subitem.getText() + \" while expected \" + getFile_OpenQuickStartMenuName());\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 1) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[1].getComponent();\n+\t\t    if (!getFile_OpenMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"Second menu subelement of File menu is \" + subitem.getText() + \" while expected \" + getFile_OpenMenuName());\n+\t\t    } else {\n+\t\t\tJMenuItemOperator openSubElements[] = menu.showMenuItems(new String[]{menuName, \"Open\"}, new Tools.SimpleStringComparator());\n+\n+\t\t\tif (openSubElements.length != 2) {\n+\t\t\t    errors.add(\"File->Open menu contains \" + openSubElements.length + \" while expected 2. \");\n+\t\t\t}\n+\n+\t\t\tif (openSubElements.length > 0) {\n+\t\t\t    JMenuItemOperator subsubitem = openSubElements[0];\n+\t\t\t    if (!getFile_Open_WorkDirectoryMenuName().equals(subsubitem.getText())) {\n+\t\t\t\terrors.add(\"First menu subelement of File->Open menu is \" + subsubitem.getText() + \" while expected \" + Menu.getFile_Open_WorkDirectoryMenuName());\n+\t\t\t    }\n+\t\t\t}\n+\t\t\tif (openSubElements.length > 1) {\n+\t\t\t    JMenuItemOperator subsubitem = openSubElements[1];\n+\t\t\t    if (!getFile_Open_TestSuiteMenuName().equals(subsubitem.getText())) {\n+\t\t\t\terrors.add(\"First menu subelement of File->Open menu is \" + subsubitem.getText() + \" while expected \" + Menu.getFile_Open_TestSuiteMenuName());\n+\t\t\t    }\n+\t\t\t}\n+\t\t    }\n+\n+\t\t}\n+\t\tif (elements.length > 2) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[2].getComponent();\n+\t\t    if (!getFile_RecentWorkDirectoryMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"Third menu subelement of File menu is \" + subitem.getText() + \" while expected \" + Menu.getFile_RecentWorkDirectoryMenuName());\n+\t\t    } else {\n+\t\t\tMenuElement[] subElements = subitem.getSubElements();\n+\t\t\tif (subElements.length != 1) {\n+\t\t\t    errors.add(\"File->RecentWorkDirectort menu contains \" + subElements.length + \" subelements while expected 1\");\n+\t\t\t}\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 3) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[3].getComponent();\n+\t\t    if (!getFile_PreferencesMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"Fifth menu subelement of File menu is \" + subitem.getText() + \" while expected \" + Menu.getFile_PreferencesMenuName());\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 4) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[4].getComponent();\n+\t\t    if (!getFile_CloseMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"Seventh menu subelement of File menu is \" + subitem.getText() + \" while expected \" + Menu.getFile_CloseMenuName());\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 5) {\n+\t\t    JMenuItem subitem = (JMenuItem) elements[5].getComponent();\n+\t\t    if (!getFile_ExitMenuName().equals(subitem.getText())) {\n+\t\t\terrors.add(\"Last menu subelement of File menu is \" + subitem.getText() + \" while expected \" + Menu.getFile_ExitMenuName());\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+\n+\tif (menuCount > 1) {\n+\t    JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[1].getComponent());\n+\n+\t    String menuName = getToolsMenuName();\n+\n+\t    if (!menuName.equals(item.getText())) {\n+\t\terrors.add(\"Second menu element is not \" + menuName + \". Found \" + item.getText());\n+\t    } else {\n+\t\tJMenuItemOperator[] elements = menu.showMenuItems(menuName, new Tools.SimpleStringComparator());\n+\t\tif (elements.length != 4) {\n+\t\t    errors.add(\"Tools menu contains \" + elements.length + \" while expected 4. \");\n+\t\t}\n+\n+\t\tString[] elementsNames = new String[elements.length];\n+\t\tint i = 0;\n+\t\tfor (JMenuItemOperator op : elements) {\n+\t\t    elementsNames[i++] = op.getText();\n+\t\t}\n+\t\tArrays.sort(elementsNames);\n+\t\tint num = 0;\n+\t\tif (elements.length > num) {\n+\t\t    String subitemName = elementsNames[num];\n+\t\t    String name = getTools_AgentMonitorMenuName();\n+\t\t    if (!name.equals(subitemName)) {\n+\t\t\terrors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t\tnum = 1;\n+\t\tif (elements.length > num) {\n+\t\t    String subitemName = elementsNames[num];\n+\t\t    String name = getTools_OpenQuickStartWizardMenuName();\n+\t\t    if (!name.equals(subitemName)) {\n+\t\t\terrors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t\tnum = 2;\n+\t\tif (elements.length > num) {\n+\t\t    String subitemName = elementsNames[num];\n+\t\t    String name = getTools_ReportConverterMenuName();\n+\t\t    if (!name.equals(subitemName)) {\n+\t\t\terrors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t\tnum = 3;\n+\t\tif (elements.length > num) {\n+\t\t    String subitemName = elementsNames[num];\n+\t\t    String name = getTools_TestResultsAuditorMenuName();\n+\t\t    if (!name.equals(subitemName)) {\n+\t\t\terrors.add(\"First menu subelement of Tools menu is \" + subitemName + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+\n+\tif (menuCount > 2) {\n+\t    JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[2].getComponent());\n+\t    String menuName = getWindowsMenuName();\n+\t    if (!menuName.equals(item.getText())) {\n+\t\terrors.add(\"Third menu element is not \" + menuName + \". Found \" + item.getText());\n+\t    }\n+\t}\n+\n+\tif (menuCount > 3) {\n+\t    JMenuItemOperator item = new JMenuItemOperator((JMenuItem) menuElements[3].getComponent());\n+\n+\t    String menuName = getHelpMenuName();\n+\n+\t    if (!menuName.equals(item.getText())) {\n+\t\terrors.add(\"Fourth menu element is not \" + menuName + \". Found \" + item.getText());\n+\t    } else {\n+\t\tJMenuItemOperator[] elements = menu.showMenuItems(menuName);\n+\n+\t\tif (elements.length != 3) {\n+\t\t    errors.add(\"Help menu contains \" + elements.length + \" while expected 4. \");\n+\t\t}\n+\n+\t\tif (elements.length > 0) {\n+\t\t    JMenuItemOperator subitem = elements[0];\n+\t\t    String name = getHelp_OnlineHelpMenuName();\n+\t\t    if (!name.equals(subitem.getText())) {\n+\t\t\terrors.add(\"First menu subelement of menu Help is \" + subitem.getText() + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 1) {\n+\t\t    JMenuItemOperator subitem = elements[1];\n+\t\t    String name = getHelp_AboutJTHarnessMenuName();\n+\t\t    if (!name.equals(subitem.getText())) {\n+\t\t\terrors.add(\"Second menu subelement of menu Help is \" + subitem.getText() + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t\tif (elements.length > 2) {\n+\t\t    JMenuItemOperator subitem = elements[2];\n+\t\t    String name = getHelp_AboutJVMMenuName();\n+\t\t    if (!name.equals(subitem.getText())) {\n+\t\t\terrors.add(\"Third menu subelement of menu Help is \" + subitem.getText() + \" while expected \" + name);\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks menu items in \\\"NewDesktop\\\" JavaTest frame. Tools menu subelements are checked sorted\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu01.java","additions":258,"deletions":0,"binary":false,"changes":258,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import static jthtest.menu.Menu.*;\n+\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu02 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+\tTools.startJavatestNewDesktop();\n+\n+\tJFrameOperator op = Tools.findMainFrame();\n+\n+\tgetFileMenu(op);\n+\tgetFile_CloseMenu(op);\n+\tgetFile_ExitMenu(op);\n+\tgetFile_OpenMenu(op);\n+\tgetFile_OpenQuickStartMenu(op);\n+\tgetFile_Open_TestSuiteMenu(op);\n+\tgetFile_Open_WorkDirectoryMenu(op);\n+\tgetFile_PreferencesMenu(op);\n+\tgetFile_RecentWorkDirectoryMenu(op);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks internal methods are working. NewDesktop JavaTest is used\";\n+    }\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu02.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import static jthtest.Tools.*;\n+import static jthtest.menu.Menu.*;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu03 extends Test {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+\tstartJavatest();\n+\n+\tJFrameOperator mainFrame = findMainFrame();\n+\topenTestSuite(mainFrame);\n+\n+\tJMenuItemOperator item;\n+\tgetFile_CreateWorkDirectoryMenu(mainFrame);\n+\tgetConfigureMenu(mainFrame);\n+\titem = getConfigure_EditConfigurationMenu(mainFrame);\n+\tif(item.isEnabled())\n+\t    errors.add(\"Configure->Edit Configuration menu is enabled while expected to be disabled\");\n+\titem = getConfigure_EditQuickSetMenu(mainFrame);\n+\tif(item.isEnabled())\n+\t    errors.add(\"Configure->Edit Quick Set menu is enabled while expected to be disabled\");\n+\tgetConfigure_LoadConfigurationMenu(mainFrame);\n+\tgetConfigure_LoadRecentConfigurationMenu(mainFrame);\n+\tgetConfigure_NewConfigurationMenu(mainFrame);\n+\n+\tgetRunTestsMenu(mainFrame);\n+\tgetRunTests_MonitorProgressMenu(mainFrame);\n+\tgetRunTests_StartMenu(mainFrame);\n+\tgetRunTests_StopMenu(mainFrame);\n+\n+\tgetReportMenu(mainFrame);\n+\tgetReport_CreateReportMenu(mainFrame);\n+\tgetReport_OpenReportMenu(mainFrame);\n+\n+\tgetViewMenu(mainFrame);\n+\tgetView_ConfigurationMenu(mainFrame);\n+\tgetView_FilterMenu(mainFrame);\n+\tgetView_LogsMenu(mainFrame);\n+\tgetView_PropertiesMenu(mainFrame);\n+\tgetView_TestSuiteErrorsMenu(mainFrame);\n+\t\n+    }\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu03.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.ConfigTools;\n+import jthtest.Test;\n+\n+import jthtest.tools.JTFrame;\n+import jthtest.workdir.Workdir;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import static jthtest.Tools.*;\n+import static jthtest.menu.Menu.*;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu04 extends Test {\n+\n+\t@Override\n+\tpublic void testImpl() throws Exception {\n+\t\tmainFrame = new JTFrame(true);\n+\n+\t\tif (mainFrame.getFile_CloseMenu().isEnabled()) {\n+\t\t\terrors.add(\"File->Close menu is enabled when unexpected (NewDesktop)\");\n+\t\t}\n+\n+\t\tmainFrame.openDefaultTestSuite();\n+\n+\t\tif (!mainFrame.getFile_CloseMenu().isEnabled()) {\n+\t\t\terrors.add(\"File->Close menu is disabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\n+\t\tif (mainFrame.getConfigure_EditConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Edit Configuration menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (mainFrame.getConfigure_EditQuickSetMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Edit Quick Set menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Load Recent Configuration menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Load Configuration menu is disabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getConfigure_NewConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->New Configuration menu is disabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\n+\t\tif (mainFrame.getReport_CreateReportMenu().isEnabled()) {\n+\t\t\terrors.add(\"Report->Create Report menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (mainFrame.getReport_OpenReportMenu().isEnabled()) {\n+\t\t\terrors.add(\"Report->Open Report menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\n+\t\tif (!mainFrame.getView_PropertiesMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Properties menu is disabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (mainFrame.getView_LogsMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Logs menu is enabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getView_Configuration_ShowChecklistMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Configuration->Show Checklist menu is disabled when unexpected (TS selected, no WD, no config)\");\n+\t\t}\n+\n+\t\taddUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+\t\tif (mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Load Recent Configuration menu is enabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\n+\t\tif (!mainFrame.getView_PropertiesMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Properties menu is disabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getView_LogsMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Logs menu is disabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getReport_CreateReportMenu().isEnabled()) {\n+\t\t\terrors.add(\"Report->Create Report menu is disabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\t\tif (!mainFrame.getReport_OpenReportMenu().isEnabled()) {\n+\t\t\terrors.add(\"Report->Open Report menu is disabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\t\tif (mainFrame.getView_Configuration_ShowChecklistMenu().isEnabled()) {\n+\t\t\terrors.add(\"View->Configuration->Show Checklist menu is enabled when unexpected (TS selected, WD created, no config)\");\n+\t\t}\n+\n+\t\tmainFrame.getConfiguration().load(CONFIG_NAME, true);\n+\n+\t\tif (!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Load Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+\t\t}\n+\t\tif (!mainFrame.getConfigure_NewConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->New Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+\t\t}\n+\t\tif (!mainFrame.getConfigure_EditConfigurationMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Edit Configuration menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+\t\t}\n+\t\tif (!mainFrame.getConfigure_EditQuickSetMenu().isEnabled()) {\n+\t\t\terrors.add(\"Configure->Edit Quick Set menu is disabled when unexpected (TS selected, WD created, config loaded)\");\n+\t\t}\n+\n+\t}\n+\n+\t@Override\n+\tpublic String getDescription() {\n+\t\treturn \"This test checks that all menu items are enabled\/disabled when it is needed. \";\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu04.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Menu05 extends Test {\n+\n+    public Menu05() {\n+        depricated = true; \/\/ ConfigDialog is now modal, no need to block menu items\n+    }\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+\tmainFrame = JTFrame.startJTWithDefaultWorkDirectory();\n+\n+\tif(!mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Quick Set menu is disabled before Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Recent Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->New Configuration menu is disabled before Configuration Editor is opened while unexpected\");\n+\n+\tConfigDialog cd = mainFrame.getConfiguration().openByMenu(true);\n+\n+\tif(mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+\tif(mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Quick Set menu is enabled while Configuration Editor is opened while unexpected\");\n+\tif(mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+\tif(mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Recent Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+\tif(mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->New Configuration menu is enabled while Configuration Editor is opened while unexpected\");\n+\n+\tcd.closeByMenu();\n+\n+\tif(!mainFrame.getConfigure_EditConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_EditQuickSetMenu().isEnabled())\n+\t    errors.add(\"Configure->Edit Quick Set menu is disabled after Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_LoadConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_LoadRecentConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->Load Recent Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+\tif(!mainFrame.getConfigure_NewConfigurationMenu().isEnabled())\n+\t    errors.add(\"Configure->New Configuration menu is disabled after Configuration Editor is opened while unexpected\");\n+\t\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+\treturn \"This test checks that all Configure menu subelements are disabled when Configuration Editor is opened and are enabled after it's closing\";\n+    }\n+\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/Menu05.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,410 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.Test;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JLabelOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public abstract class MenuItems extends Test {\n+\n+    public MenuItems() {\n+        super();\n+        maxTime = 1200000; \/\/ 20 min\n+    }\n+\n+    protected void checkGenericMenus(boolean ts, boolean wd) {\n+        String append = ts ? \", testsuite is opened\" : \"\";\n+        if (wd) {\n+            append = append + \", workdirectory is opened\";\n+        }\n+\n+        mainFrame.getTools_ReportConverterMenu().push();\n+        JDialogOperator d = null;\n+        try {\n+            d = new JDialogOperator(\"Create a Report\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+            mainFrame.closeCurrentTool();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Create a Report dialog: '\" + e.getMessage() + \"' (Tools->Report Converter...) pushed\" + append);\n+        }\n+\n+        mainFrame.getTools_OpenQuickStartWizardMenu().push();\n+        try {\n+            d = new JDialogOperator(WINDOWNAME + \" Harness Quick Start\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for \" + WINDOWNAME + \" Harness Quick Start dialog: '\" + e.getMessage() + \"' (Tools->Open Quick Start Wizard...) pushed\" + append);\n+        }\n+\n+        mainFrame.getTools_AgentMonitorMenu().push();\n+        try {\n+            String tabName = ts ? mainFrame.getTabName(1) : mainFrame.getTabName(0);\n+            if (!\"Agent Monitor\".equals(tabName)) {\n+                errors.add(\"Exception while looking for Agent Pool tab: 'Agent Monitor tab not found' (found \" + tabName + \") (Tools->Agent Monitor...) pushed\" + append);\n+            }\n+            mainFrame.closeCurrentTool();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Agent Pool tab: '\" + e.getMessage() + \"' (Tools->Agent Monitor...) pushed\" + append);\n+        }\n+\n+        mainFrame.getTools_TestResultsAuditorMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Audit Test Results: Options\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+            mainFrame.closeCurrentTool();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Audit Test Results: Options dialog: '\" + e.getMessage() + \"' (Tools->Test Results Auditor...) pushed\" + append);\n+        }\n+\n+        mainFrame.getFile_OpenQuickStartMenu().push();\n+        try {\n+            d = new JDialogOperator(WINDOWNAME + \" Harness Quick Start\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for \" + WINDOWNAME + \" Harness Quick Start dialog: '\" + e.getMessage() + \"' (Files->Open Quick Start Wizard...) pushed\" + append);\n+        }\n+\n+        mainFrame.getFile_PreferencesMenu().push();\n+        try {\n+            d = new JDialogOperator(WINDOWNAME + \" Harness Preferences\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for \" + WINDOWNAME + \" Harness Preferences dialog: '\" + e.getMessage() + \"' (Files->Preferences...) pushed\" + append);\n+        }\n+\n+        mainFrame.getFile_Open_TestSuiteMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Open Test Suite\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Open Test Suite dialog: '\" + e.getMessage() + \"' (Files->Open->Test Suite ...) pushed\" + append);\n+        }\n+\n+        mainFrame.getFile_Open_WorkDirectoryMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Open Work Directory\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Open Work Directory dialog: '\" + e.getMessage() + \"' (Files->Open->Work Directory ...) pushed\" + append);\n+        }\n+    }\n+\n+    protected void checkTSMenus(boolean wd, boolean cfg) {\n+        String append = wd ? \", testsuite is opened, workdirectory is opened\" : \", testsuite is opened\";\n+\n+        JDialogOperator d;\n+\n+        mainFrame.getFile_CreateWorkDirectoryMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Create Work Directory\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Create Work Directory dialog: '\" + e.getMessage() + \"' (Files->Create Work Directory ...) pushed\" + append);\n+        }\n+        if (wd) {\n+            if (mainFrame.getTabsCount() < 2) {\n+                errors.add(\"New Tool was not opened when pushing File->Create Work Directory\" + append);\n+            } else if (mainFrame.getTabsCount() != 2) {\n+                throw new JemmyException(\"Error: tab count is not 2 (File->Create Work Directory)\");\n+            } else {\n+                mainFrame.closeCurrentTool();\n+            }\n+        }\n+\n+        mainFrame.getConfigure_LoadConfigurationMenu().push();\n+        if (wd) {\n+            try {\n+                d = new JDialogOperator(\"Load Configuration\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Load Configuration dialog: '\" + e.getMessage() + \"' (Configure->Load Configuration...) pushed\" + append);\n+            }\n+        } else {\n+            try {\n+                d = new JDialogOperator(\"Work Directory Required\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Work Directory Required dialog: '\" + e.getMessage() + \"' (Configure->Load Configuration...) pushed\" + append);\n+            }\n+            mainFrame.getConfigure_LoadConfigurationMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Work Directory Required\");\n+                new JButtonOperator(d, \"Create Work Directory\").push();\n+                d = new JDialogOperator(\"Create Work Directory\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Create Work Directory dialog: '\" + e.getMessage() + \"' (Configure->Load Configuration... : Create Work Directory) pushed\" + append);\n+            }\n+            mainFrame.getConfigure_LoadConfigurationMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Work Directory Required\");\n+                new JButtonOperator(d, \"Open Work Directory\").push();\n+                d = new JDialogOperator(\"Open Work Directory\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Open Work Directory dialog: '\" + e.getMessage() + \"' (Configure->Load Configuration... : Open Work Directory) pushed\" + append);\n+            }\n+        }\n+\n+        mainFrame.getConfigure_NewConfigurationMenu().push();\n+        if (wd) {\n+            try {\n+                d = new JDialogOperator(\"Configuration Editor\");\n+                d.close();\n+                if (cfg) {\n+                    d = new JDialogOperator(\"Warning: Unsaved Changes\");\n+                    new JButtonOperator(d, \"No\").push();\n+                }\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configure->New Configuration...) pushed\" + append);\n+            }\n+        } else {\n+            try {\n+                d = new JDialogOperator(\"Work Directory Required\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Work Directory Required dialog: '\" + e.getMessage() + \"' (Configure->New Configuration...) pushed\" + append);\n+            }\n+        }\n+\n+        if (!cfg) {\n+            mainFrame.getRunTests_StartMenu().push();\n+            if (wd) {\n+                try {\n+                    d = new JDialogOperator(\"Configuration Required\");\n+                    new JButtonOperator(d, \"Cancel\").push();\n+                } catch (Exception e) {\n+                    errors.add(\"Exception while looking for Configuration Required dialog: '\" + e.getMessage() + \"' (Run Tests->Start) pushed\" + append);\n+                }\n+                mainFrame.getRunTests_StartMenu().push();\n+                try {\n+                    d = new JDialogOperator(\"Configuration Required\");\n+                    new JButtonOperator(d, \"OK\").push();\n+                    d = new JDialogOperator(\"Configuration Editor\");\n+                    d.close();\n+                } catch (Exception e) {\n+                    errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Run Tests->Start : OK) pushed\" + append);\n+                }\n+            } else {\n+                try {\n+                    d = new JDialogOperator(\"Work Directory Required\");\n+                    new JButtonOperator(d, \"Cancel\").push();\n+                } catch (Exception e) {\n+                    errors.add(\"Exception while looking for Work Directory Required dialog: '\" + e.getMessage() + \"' (Run Tests->Start) pushed\" + append);\n+                }\n+            }\n+        }\n+\n+        mainFrame.getRunTests_MonitorProgressMenu().push();\n+        try {\n+            JFrameOperator f = new JFrameOperator(\"Test Manager: Progress Monitor\");\n+            new JButtonOperator(f, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Test Manager: Progress Monitor dialog: '\" + e.getMessage() + \"' (Run Tests->Monitor Progress...) pushed\" + append);\n+        }\n+\n+        if (wd) {\n+            mainFrame.getReport_CreateReportMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Create a New Report\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Create a New Report dialog: '\" + e.getMessage() + \"' (Report->Create Report...) pushed\" + append);\n+            }\n+\n+            mainFrame.getReport_OpenReportMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Open Report\");\n+                new JButtonOperator(d, \"Cancel\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Open Report dialog: '\" + e.getMessage() + \"' (Report->Open Report...) pushed\" + append);\n+            }\n+        }\n+\n+        mainFrame.getView_Configuration_ShowTestEnvironmentMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Test Environment: \");\n+            new JButtonOperator(d, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Test Environment: <name> dialog: '\" + e.getMessage() + \"' (View->Configuration->Show Test Environment...) pushed\" + append);\n+        }\n+\n+        mainFrame.getView_Configuration_ShowExcludeListMenu().push();\n+        try {\n+            d = new JDialogOperator(\"No Exclude List Specified\");\n+            new JButtonOperator(d, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for No Exclude List Specified dialog: '\" + e.getMessage() + \"' (View->Configuration->Show Exclude List...) pushed\" + append);\n+        }\n+\n+        if (!wd) {\n+            mainFrame.getView_Configuration_ShowChecklistMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Configuration Checklist\");\n+                new JButtonOperator(d, \"Close\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Configuration Checklist dialog: '\" + e.getMessage() + \"' (View->Configuration->Show Checklist...) pushed\" + append);\n+            }\n+        }\n+\n+        mainFrame.getView_Configuration_ShowQuestionLogMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Question Log\");\n+            new JButtonOperator(d, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Question Log dialog: '\" + e.getMessage() + \"' (View->Configuration->Show Question Log...) pushed\" + append);\n+        }\n+\n+        mainFrame.getView_Filter_ConfigureFiltersMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Filter Editor\");\n+            new JButtonOperator(d, \"Cancel\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Filter Editor <TS name> dialog: '\" + e.getMessage() + \"' (View->Filter->Configure Filters...) pushed\" + append);\n+        }\n+\n+        mainFrame.getView_PropertiesMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Test Manager Properties\");\n+            new JButtonOperator(d, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Test Manager Properties dialog: '\" + e.getMessage() + \"' (View->Properties...) pushed\" + append);\n+        }\n+\n+        if (wd) {\n+            mainFrame.getView_LogsMenu().push();\n+            try {\n+                d = new JDialogOperator(\"Log Viewer 1\");\n+                new JButtonOperator(d, \"Close\").push();\n+            } catch (Exception e) {\n+                errors.add(\"Exception while looking for Log Viewer 1 dialog: '\" + e.getMessage() + \"' (View->Logs...) pushed\" + append);\n+            }\n+        }\n+\n+        mainFrame.getView_TestSuiteErrorsMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Test Manager: Test Suite Errors\");\n+            new JButtonOperator(d, \"Close\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Test Manager: Test Suite Errors dialog: '\" + e.getMessage() + \"' (View->Test Suite Errors...) pushed\" + append);\n+        }\n+    }\n+\n+    protected void checkConfigMenus() {\n+        JDialogOperator d;\n+\n+        mainFrame.getConfigure_EditConfigurationMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            new JListOperator(d);\n+            try {\n+                new JTabbedPaneOperator(d);\n+                errors.add(\"Tabbed Pane found on Full Configuration Editor. Bad. \");\n+            } catch (TimeoutExpiredException e) {\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Configuration...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+\n+        mainFrame.getConfigure_EditQuickSet_TestsToRunMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            JTabbedPaneOperator tp = new JTabbedPaneOperator(d);\n+            if (!\"Tests\".equals(tp.getTitleAt(tp.getSelectedIndex()))) {\n+                errors.add(\"'Tests' tab was expected to be opened by Configuration->Edit Quick Set->Tests To Run ... and \" + tp.getTitleAt(tp.getSelectedIndex()) + \" was opened\");\n+            }\n+            try {\n+                new JListOperator(d);\n+                errors.add(\"List found on Quick Configuration Editor. Bad. \");\n+            } catch (TimeoutExpiredException e) {\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Quick Set->Tests To Run ...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+\n+        mainFrame.getConfigure_EditQuickSet_ConcurrencyMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            JTabbedPaneOperator tp = new JTabbedPaneOperator(d);\n+            if (!\"Execution\".equals(tp.getTitleAt(tp.getSelectedIndex()))) {\n+                errors.add(\"'Execution' tab was expected to be opened by Configuration->Edit Quick Set->Concurrency ... and \" + tp.getTitleAt(tp.getSelectedIndex()) + \" was opened\");\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Quick Set->Concurrency ...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+\n+        mainFrame.getConfigure_EditQuickSet_ExcludeListMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            JTabbedPaneOperator tp = new JTabbedPaneOperator(d);\n+            if (!\"Exclude List\".equals(tp.getTitleAt(tp.getSelectedIndex()))) {\n+                errors.add(\"'Exclude List' tab was expected to be opened by Configuration->Edit Quick Set->Exclude List ... and \" + tp.getTitleAt(tp.getSelectedIndex()) + \" was opened\");\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Quick Set->Exclude List ...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+\n+        mainFrame.getConfigure_EditQuickSet_PriorStatusMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            JTabbedPaneOperator tp = new JTabbedPaneOperator(d);\n+            if (!\"Prior Status\".equals(tp.getTitleAt(tp.getSelectedIndex()))) {\n+                errors.add(\"'Prior Status' tab was expected to be opened by Configuration->Edit Quick Set->Prior Status ... and \" + tp.getTitleAt(tp.getSelectedIndex()) + \" was opened\");\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Quick Set->Prior Status ...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+\n+        mainFrame.getConfigure_EditQuickSet_TimeoutFactorMenu().push();\n+        try {\n+            d = new JDialogOperator(\"Configuration Editor\");\n+            JTabbedPaneOperator tp = new JTabbedPaneOperator(d);\n+            if (!\"Execution\".equals(tp.getTitleAt(tp.getSelectedIndex()))) {\n+                errors.add(\"'Execution' tab was expected to be opened by Configuration->Edit Quick Set->Timeout Factor ... and \" + tp.getTitleAt(tp.getSelectedIndex()) + \" was opened\");\n+            }\n+            new JButtonOperator(d, \"Done\").push();\n+        } catch (Exception e) {\n+            errors.add(\"Exception while looking for Configuration Editor dialog: '\" + e.getMessage() + \"' (Configuration->Edit Quick Set->Timeout Factor ...) pushed, testsuite, workdirectory and configuration opened\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/MenuItems.java","additions":410,"deletions":0,"binary":false,"changes":410,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class MenuItems01 extends MenuItems {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        checkGenericMenus(false, false);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that all menu items in main frame menu are working properly in newdesktop window\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/MenuItems01.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class MenuItems02 extends MenuItems {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        checkGenericMenus(true, false);\n+        checkTSMenus(false, false);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that all menu items in main frame menu are working properly while testsuie is opened\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/MenuItems02.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class MenuItems03 extends MenuItems {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        checkGenericMenus(true, true);\n+        checkTSMenus(true, false);\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that all menu items in main frame menu are working properly while testsuie and workdirectory are opened\";\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/MenuItems03.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * $Id$\n+ * \n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ * \n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ * \n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ * \n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * \n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.tools.JTFrame;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class MenuItems04 extends MenuItems {\n+\n+    @Override\n+    public void testImpl() throws Exception {\n+        mainFrame = new JTFrame(true);\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+        mainFrame.getConfiguration().load(CONFIG_NAME, true);\n+        \n+        checkGenericMenus(true, true);\n+        checkTSMenus(true, true);\n+        checkConfigMenus();\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"This test checks that all menu items in main frame menu are working properly while testsuie, workdirectory and configuration are opened. This test is quite long.\";\n+    }\n+    \n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/MenuItems04.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.menu;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class QSWizard {\n+\n+\tpublic static String QUICK_START_WIZARD_TITLE = Tools.WINDOWNAME + \" Harness Quick Start\";\n+\tprivate JDialogOperator dialog;\n+\tprivate Panel panel;\n+\n+\tpublic QSWizard() {\n+\t\tdialog = new JDialogOperator(QUICK_START_WIZARD_TITLE);\n+\t\tpanel = new GreetingsPanel();\n+\t}\n+\n+\tpublic Panel getPanel() {\n+\t\treturn panel;\n+\t}\n+\n+\tpublic abstract class Panel {\n+\t\t\n+\t\tpublic JDialogOperator getDialog() {\n+\t\t\treturn dialog;\n+\t\t}\n+\n+\t\tpublic JButtonOperator next() {\n+\t\t\treturn new JButtonOperator(dialog, \"Next\");\n+\t\t}\n+\n+\t\tpublic JButtonOperator cancel() {\n+\t\t\treturn new JButtonOperator(dialog, \"Cancel\");\n+\t\t}\n+\n+\t\tpublic JButtonOperator finish() {\n+\t\t\treturn new JButtonOperator(dialog, \"Finish\");\n+\t\t}\n+\n+\t\tpublic JButtonOperator back() {\n+\t\t\treturn new JButtonOperator(dialog, \"Back\");\n+\t\t}\n+\n+\t\tpublic abstract Panel pushNext();\n+\t}\n+\n+\tpublic class GreetingsPanel extends Panel {\n+\n+\t\tprivate boolean startNew = false;\n+\t\tprivate boolean resume = false;\n+\t\tprivate boolean browse = false;\n+\n+\t\tpublic void setStartNewTestRun() {\n+\t\t\tbrowse = resume = false;\n+\t\t\tstartNew = true;\n+\t\t}\n+\n+\t\tpublic void setResumeTestRun() {\n+\t\t\tbrowse = startNew = false;\n+\t\t\tresume = true;\n+\t\t}\n+\n+\t\tpublic void setBrowseTestSuite() {\n+\t\t\tnew JRadioButtonOperator(dialog, \"Browse the test suite\").push();\n+\t\t\tstartNew = resume = false;\n+\t\t\tbrowse = true;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Panel pushNext() {\n+\t\t\tnext().push();\n+\t\t\treturn new ChooseTestSuitePanel();\n+\t\t}\n+\t}\n+\n+\tpublic class ChooseTestSuitePanel extends Panel {\n+\t\tprivate String testsuite = null;\n+\n+\t\tpublic void setTestsuite(String testsuite) {\n+\t\t\tJTextFieldOperator op = Tools.getTextField(dialog, Tools.getExecResource(\"qsw.ts.hd\"));\n+\t\t\top.clearText();\n+\t\t\top.enterText(testsuite);\n+\t\t\tthis.testsuite = testsuite;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic ChooseConfigurationPanel pushNext() {\n+\t\t\tif (testsuite == null || \"\".equals(testsuite))\n+\t\t\t\treturn null;\n+\n+\t\t\tnext().push();\n+\t\t\treturn new ChooseConfigurationPanel();\n+\t\t}\n+\t}\n+\n+\tpublic class ChooseConfigurationPanel extends Panel {\n+\n+\t\t@Override\n+\t\tpublic Panel pushNext() {\n+\t\t\tthrow new UnsupportedOperationException(\"Not supported yet.\");\n+\t\t}\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/menu\/QSWizard.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * To change this template, choose Tools | Templates\n+ * and open the template in the editor.\n+ *\/\n+package jthtest.nongui;\n+\n+import java.util.Properties;\n+import java.io.IOException;\n+import java.io.StringReader;\n+import jthtest.NonguiTest;\n+\n+\/**\n+ *\n+ * @author andrey\n+ *\/\n+public class PropertiesTest1 extends NonguiTest {\n+    \/\/ should always give a : 1; b : 2; c : 3\n+    String tests1[] = {\"a=1\\nb:2\\nc 3\\n\", \"a=1\\r\\nb:2\\r\\nc 3\\r\\n\", \"a=1\\r\\nb:2\\nc 3\\r\\n\", \"a =1\\nb :2\\nc  3\\n\", \"a= 1\\nb: 2\\nc  3\\n\", \"a = 1\\nb : 2\\nc   3\\n\", \"a \\t =\\f1\\nb\\t\\t :\\f2\\nc\\t\\t3\\n\"};\n+    \/\/ should give a\\b : 1; a=b : 2; c : =3; ac : 4; \n+    \/\/ a\\c should be null\n+    String test2 = \"a\\\\\\\\b=1\\na\\\\=b=2\\nc==3\\na\\\\c=4\";\n+\n+    public void testImpl() throws Exception {\n+        test1();\n+        test2();\n+    }\n+    \n+    private void test2() throws Exception {\n+        Properties p = new Properties();\n+        p.load(new StringReader(test2));\n+        boolean b = false;\n+        if (!\"1\".equals(p.getProperty(\"a\\\\b\"))) {\n+            if (!b) {\n+                b = true;\n+                errors.add(\"Error in test string '\" + test2 + \"' :\\n\");\n+            }\n+            errors.add(\"a\\\\b == \" + p.getProperty(\"a\\\\b\") + \" (should be 1)\");\n+        }\n+        if (!\"2\".equals(p.getProperty(\"a=b\"))) {\n+            if (!b) {\n+                b = true;\n+                errors.add(\"Error in test string '\" + test2 + \"' :\\n\");\n+            }\n+            errors.add(\"a=b == \" + p.getProperty(\"a=b\") + \" (should be 2)\");\n+        }\n+        if (!\"=3\".equals(p.getProperty(\"c\"))) {\n+            if (!b) {\n+                b = true;\n+                errors.add(\"Error in test string '\" + test2 + \"' :\\n\");\n+            }\n+            errors.add(\"c == \" + p.getProperty(\"c\") + \" (should be =3)\");\n+        }\n+        if (!\"4\".equals(p.getProperty(\"ac\"))) {\n+            if (!b) {\n+                b = true;\n+                errors.add(\"Error in test string '\" + test2 + \"' :\\n\");\n+            }\n+            errors.add(\"a\\\\b == \" + p.getProperty(\"a\\\\b\") + \" (should be 1)\");\n+        }\n+        if (p.getProperty(\"a\\\\c\") != null) {\n+            if (!b) {\n+                b = true;\n+                errors.add(\"Error in test string '\" + test2 + \"' :\\n\");\n+            }\n+            errors.add(\"a\\\\c == \" + p.getProperty(\"a\\\\c\") + \" (should be null)\");\n+        }\n+    }\n+\n+    private void test1() throws IOException {\n+        for (String s : tests1) {\n+            Properties p = new Properties();\n+            p.load(new StringReader(s));\n+            boolean b = false;\n+            if (!\"1\".equals(p.getProperty(\"a\"))) {\n+                if (!b) {\n+                    errors.add(\"Error in test string '\" + s + \"' :\\n\");\n+                    b = true;\n+                }\n+                errors.add(\"a == '\" + p.getProperty(\"a\") + \"' ('1' expected)\\n\");\n+            }\n+            if (!\"2\".equals(p.getProperty(\"b\"))) {\n+                if (!b) {\n+                    errors.add(\"Error in test string '\" + s + \"' :\\n\");\n+                    b = true;\n+                }\n+                errors.add(\"b == '\" + p.getProperty(\"b\") + \"' ('2' expected)\\n\");\n+            }\n+            if (!\"3\".equals(p.getProperty(\"c\"))) {\n+                if (!b) {\n+                    errors.add(\"Error in test string '\" + s + \"' :\\n\");\n+                    b = true;\n+                }\n+                errors.add(\"c == '\" + p.getProperty(\"c\") + \"' ('3' expected)\\n\");\n+            }\n+        }\n+    }\n+    \n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/nongui\/PropertiesTest1.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,865 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import com.sun.interview.wizard.selectiontree.SelectionTree;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.event.MouseEvent;\n+import java.io.File;\n+import javax.swing.Icon;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JTextField;\n+import javax.swing.UIManager;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.QueueTool;\n+import org.netbeans.jemmy.operators.ContainerOperator;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JPopupMenuOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class ConfigDialog {\n+\n+    private JDialogOperator configDialog;\n+    private JTFrame mainFrame;\n+    public static final String DONE_BUTTON = \"Done\";\n+    public static final String NEXT_BUTTON = \"Next\";\n+    public static final String PREV_BUTTON = \"Back\";\n+    public static final String LAST_BUTTON = \"Last\";\n+    public static final String CONFIG_LOADER_DIALOG_NAME_EI18N = \"wdc.loadconfig\";\n+    public static final String CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N = \"wdc.load.btn\";\n+    public static final String CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N = \"wdc.configchoosertitle\";\n+    public static final String CONFIG_LOADER_BROWSE_BUTTON = \"Browse\";\n+    public static final String CONFIG_EDITOR_DIALOG_NAME_EI18N = \"ce.name\";\n+    public static final String SAVE_CONFIG_FILE_DIALOG_NAME_EI18N = \"ce.save.title\";\n+    public static final String CONFIG_CONFIRN_CLOSE_DIALOG_NAME_EI18N = \"ce.okToClose.title\";\n+    public static final String MENU_FILE_CLOSE_NAME_EI18N = \"ce.file.close.mit\";\n+    public static final String MENU_FILE_SAVE_NAME_EI18N = \"ce.file.save.mit\";\n+    public static final String MENU_FILE_NEW_NAME_EI18N = \"ce.file.new.mit\";\n+    public static final String MENU_FILE_NAME_EI18N = \"ce.file.menu\";\n+    public static final String MENU_FILE_LOAD_NAME_EI18N = \"ce.file.load.mit\";\n+    public static final String MENU_FILE_LOAD_RECENT_NAME_EI18N = \"ce.history.menu\";\n+    public static final String BOOKMARKS_MENU_NAME_EI18N = \"ct.markers.ckb\";\n+\n+    public static final String BOOKMARKS_MENU_NAME = \"Bookmarks\";\n+    public static final String BOOKMARKS__SHOW_ONLY_BOOKMARKED_MENU_NAME = \"Show Only Bookmarked Questions\";\n+    public static final String BOOKMARKS__MARK_CURRENT_QUESTION_MENU_NAME = \"Mark Current Question\";\n+    public static final String BOOKMARKS__UNMARK_CURRENT_QUESTION_MENU_NAME = \"Unmark Current Question\";\n+    public static final String BOOKMARKS__CLOSE_HIDDEN_GROUP = \"Close \\\". . .\\\" Group\";\n+    public static final String BOOKMARKS__OPEN_HIDDEN_GROUP_MENU_NAME = \"Open \\\". . .\\\" Group\";\n+    public static final String BOOKMARKS__CLEAR_ANSWER_FOR_CURRENT_MENU_NAME = \"Clear Answer For Current Question\";\n+    public static final String BOOKMARKS__CLEAR_ANSWER_TO_BOOKMARKED_QUESTIONS_MENU_NAME = \"Clear Answers to Bookmarked Questions\";\n+\n+    ConfigDialog(JTFrame mainFrame) {\n+\tthis.mainFrame = mainFrame;\n+\tconfigDialog = new JDialogOperator(mainFrame.getJFrameOperator(), getConfigEditorDialogName());\n+    }\n+\n+    public static String getConfigEditorDialogName() {\n+\treturn Tools.getExecResource(CONFIG_EDITOR_DIALOG_NAME_EI18N);\n+    }\n+    \n+    public static String getSaveConfigurationDialogName() {\n+\treturn Tools.getExecResource(SAVE_CONFIG_FILE_DIALOG_NAME_EI18N);\n+    }\n+\n+    public static String getConfirmCloseIncomleteConfigurationDialogName() {\n+\treturn Tools.getExecResource(CONFIG_CONFIRN_CLOSE_DIALOG_NAME_EI18N);\n+    }\n+\n+    public JButtonOperator getBackButton() {\n+        return new JButtonOperator(configDialog, PREV_BUTTON);\n+    }\n+\n+    public JListOperator getJListOperator() {\n+        if (_list == null)\n+            _list = new JListOperator(configDialog);\n+        return _list;\n+    }\n+    \n+    public void refindList() {\n+        _list = null;\n+    }\n+    \n+    private JListOperator _list = null; \n+\n+    public ConfigurationBrowser openBrowser(boolean block) {\n+\tif (block) {\n+\t    getFile_LoadConfigurationMenu().push();\n+\t} else {\n+\t    getFile_LoadConfigurationMenu().pushNoBlock();\n+\t}\n+\n+\treturn ConfigurationBrowser.open();\n+    }\n+\n+    public void load(String name, boolean block) {\n+\tload(Tools.DEFAULT_PATH, name, block);\n+    }\n+\n+    public void load(String path, String name, boolean block) {\n+\tConfigurationBrowser browser = openBrowser(block);\n+\tbrowser.setPath(path + File.separator + name);\n+\tbrowser.commit();\n+    }\n+\n+    public void pushDoneConfigEditor() {\n+\tnew JButtonOperator(configDialog, DONE_BUTTON).push();\n+    }\n+\n+    public void pushNextConfigEditor() {\n+\tnew JButtonOperator(configDialog, NEXT_BUTTON).push();\n+    }\n+\n+    public void pushBackConfigEditor() {\n+\tgetBackButton().push();\n+    }\n+\n+    public void pushLastConfigEditor() {\n+\tnew JButtonOperator(configDialog, LAST_BUTTON).push();\n+    }\n+\n+    public void selectQuestion(int index) {\n+\tgetJListOperator().selectItem(index);\n+    }\n+\n+    public void saveConfig(String name) {\n+\tgetFile_SaveMenu().pushNoBlock();\n+\tJDialogOperator saving = new JDialogOperator(getSaveConfigurationDialogName());\n+\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField) Tools.getComponent(saving, new String[]{\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"}));\n+\ttf.enterText(name);\n+    }\n+\n+    public boolean isFullConfiguration() {\n+\tJListOperator list = getJListOperator();\n+\treturn ((JLabel) list.getRenderedComponent(list.getModel().getSize() - 1)).getText().equals(\" Congratulations!\");\n+    }\n+\n+    public void closeByMenu() {\n+        _list = null;\n+\tgetFile_CloseMenu().push();\n+    }\n+\n+    public void setBookmarkedByMenu(int index) {\n+\tgetJListOperator().selectItem(index);\n+        getBookmarks_MarkCurrentQuestion_Menu().push();\n+    }\n+\n+    public JMenuItemOperator getBookmarks_ShowOnlyBookmarkedMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__SHOW_ONLY_BOOKMARKED_MENU_NAME});\n+    }\n+\n+    public JMenuItemOperator getBookmarks_MarkCurrentQuestion_Menu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__MARK_CURRENT_QUESTION_MENU_NAME});\n+    }\n+\n+    public JMenuItemOperator getBookmarks_UnmarkCurrentQuestion_Menu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__UNMARK_CURRENT_QUESTION_MENU_NAME});\n+    }\n+\n+    public JMenuItemOperator getBookmarksMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME});\n+    }\n+\n+    public void unsetBookmarkedByMenu(int index) {\n+\tgetJListOperator().selectItem(index);\n+        getBookmarks_UnmarkCurrentQuestion_Menu().push();\n+    }\n+\n+    public void setBookmarkedByMenu(int[] indexes) {\n+\tJMenuItemOperator markQuestionMenu = null;\n+\tString[] menuPath = new String[]{\"Bookmarks\", \"Mark Current Question\"};\n+\tJListOperator list = getJListOperator();\n+\tfor (int index : indexes) {\n+\t    list.selectItem(index);\n+            if (markQuestionMenu == null)\n+                markQuestionMenu = getBookmarks_MarkCurrentQuestion_Menu();\n+\t    markQuestionMenu.push();\n+\t}\n+    }\n+\n+    public void setBookmarkedByPopup(int[] indexes) {\n+\tfor (int index : indexes)\n+\t    setBookmarkedByPopup(index);\n+    }\n+\n+    public void setBookmarkedByMouse(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1, MouseEvent.BUTTON1_MASK, 6);\n+    }\n+\n+    public void setBookmarkedByPopup(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Mark Current Question\");\n+    }\n+\n+    public void clickBookmarkedByMouse(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Mark Current Question\");\n+    }\n+\n+    public void unsetBookmarkedByPopup(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Unmark Current Question\");\n+    }\n+\n+    public void clearByPopup(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tgetJListOperator().selectItem(index);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Clear Answer For Current Question\");\n+    }\n+\n+    public int[] checkVisibility(String[] names) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint marks[] = new int[names.length];\n+\tfor (int mark : marks) {\n+\t    mark = -1;\n+\t}\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t    if (text != null) {\n+\t\tfor (int j = 0; j < names.length; j++) {\n+\t\t    if (text.equals(names[j])) {\n+\t\t\tmarks[j] = i;\n+\t\t    }\n+\t\t}\n+\t    }\n+\t}\n+\n+\tfor (int i = 0; i < marks.length; i++) {\n+\t    if (marks[i] == -1) {\n+\t\tthrow new JemmyException(\"Element with name '\" + names[i] + \"' wasn't found\");\n+\t    }\n+\t}\n+\n+\treturn marks;\n+    }\n+\n+    public void checkVisibilityAll(String[] names) {\n+\tJListOperator list = getJListOperator();\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t    if (text == null) {\n+\t\tthrow new JemmyException(\"Element N\" + i + \" hasn't any name while expected '\" + names[i] + \"'\");\n+\t    }\n+\t    if (!text.equals(names[i])) {\n+\t\tthrow new JemmyException(\"Element N\" + i + \" has name '\" + list.getRenderedComponent(i).getName() + \"' while expected '\" + names[i] + \"'\");\n+\t    }\n+\t}\n+    }\n+\n+    public void checkHiddenGroups(int[] indexes, String[] names) {\n+\tJListOperator list = getJListOperator();\n+\n+\tif (indexes.length > 0) {\n+\t    int temp = 0;\n+\n+\t    for (int i = 0; i < indexes.length; i++) {\n+\t\tif (indexes[i] - temp > 1) {\n+\t\t    if (((JLabel) list.getRenderedComponent(indexes[i] - 1)).getText() != null) {\n+\t\t\tthrow new JemmyException(\"element \" + (indexes[i] - 1) + \" isn't '...'\");\n+\t\t    }\n+\t\t}\n+\t\ttemp = indexes[i];\n+\t    }\n+\t}\n+    }\n+\n+    public void pushOpenHiddenGroupByMouse(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 2, MouseEvent.BUTTON1_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+    }\n+\n+    private void pushOpenHiddenGroupByMenu() {\n+        getBookmarks_OpenHiddenGroupMenu().push();\n+    }\n+    \n+    public JMenuItemOperator getBookmarks_OpenHiddenGroupMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__OPEN_HIDDEN_GROUP_MENU_NAME});\n+    }\n+\n+    public void openGroupByMenu(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tlist.selectItem(i);\n+\tpushOpenHiddenGroupByMenu();\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+    }\n+\n+    public void openGroupByMouse(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushOpenHiddenGroupByMouse(i);\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+    }\n+\n+    public void pushOpenHiddenGroupByPopup(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Open \\\". . .\\\" Group\");\n+    }\n+\n+    public void openGroupByPopup(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < list.getModel().getSize(); i++) {\n+\t    if (((JLabel) list.getRenderedComponent(i)).getText() == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushOpenHiddenGroupByPopup(i);\n+\n+\tfor (int j = i; j < list.getModel().getSize(); j++) {\n+\t    String text = ((JLabel) list.getRenderedComponent(j)).getText();\n+\t    if (!(text.equals(namesAll[j]))) {\n+\t\tthrow new JemmyException(\"Element \" + j + \" is '\" + text + \"' after opening '...' group while expected '\" + namesAll[j] + \"'\");\n+\t    }\n+\t    if (text.equals(namesHidden[i + 1])) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+    }\n+    \n+    public JMenuItemOperator getBookmarks_CloseHiddenGroupMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__CLOSE_HIDDEN_GROUP});\n+    }\n+\n+    public void pushCloseGroupByMenu() {\n+\tgetBookmarks_CloseHiddenGroupMenu().push();\n+    }\n+\n+    public void closeGroupByMenu(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tlist.selectItem(i);\n+\tpushCloseGroupByMenu();\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+\n+    public void pushCloseByPopup(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 1, MouseEvent.BUTTON3_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+\tnew JPopupMenuOperator(configDialog).pushMenu(\"Close \\\". . .\\\" Group\");\n+    }\n+\n+    public void closeGroupByPopup(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushCloseByPopup(i);\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+\n+    public void pushCloseHiddenGroupByMouse(int index) {\n+\tJListOperatorExt list = new JListOperatorExt(configDialog);\n+\tlist.clickOnItem(index, 1);\n+\tif (list.clickOnItem(index, 2, MouseEvent.BUTTON1_MASK) == null) {\n+\t    throw new JemmyException(\"Error occured while clicking on \" + index + \" item of list \" + list);\n+\t}\n+    }\n+\n+    public void closeGroupByMouse(String[] namesAll, String[] namesHidden) {\n+\tJListOperator list = getJListOperator();\n+\n+\tint i;\n+\tfor (i = 0; i < namesHidden.length; i++) {\n+\t    if (namesHidden[i] == null) {\n+\t\tbreak;\n+\t    }\n+\t}\n+\n+\tpushCloseHiddenGroupByMouse(i);\n+\n+\tif (((JLabel) list.getRenderedComponent(i)).getText() != null) {\n+\t    throw new JemmyException(\"Element \" + i + \" isn't '...' after closing\");\n+\t}\n+\tif (!(((JLabel) list.getRenderedComponent(i + 1)).getText().equals(namesHidden[i + 1]))) {\n+\t    throw new JemmyException(\"Element \" + (i + 1) + \" isn't \" + namesHidden[i + 1] + \" after closing\");\n+\t}\n+    }\n+\n+    public boolean checkBookmarked(int index) {\n+\tJListOperator list = getJListOperator();\n+\treturn ((JLabel)list.getRenderedComponent(index)).getIcon() != null;\n+    }\n+\n+    public JMenuItemOperator getBookmarks_ClearAnswerForCurrentQuestionMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__CLEAR_ANSWER_FOR_CURRENT_MENU_NAME});\n+    }\n+\n+    public JMenuItemOperator getBookmarks_ClearAnswerToBookmarkedQuestionsMenu() {\n+        return getMenu().showMenuItem(new String[] {BOOKMARKS_MENU_NAME, BOOKMARKS__CLEAR_ANSWER_TO_BOOKMARKED_QUESTIONS_MENU_NAME});\n+    }\n+\n+    public void clearByMenu(int index) {\n+\tgetJListOperator().selectItem(index);\n+\tgetBookmarks_ClearAnswerForCurrentQuestionMenu().push();\n+    }\n+\n+    public Icon getIcon(int index) {\n+\tIcon icon = ((JLabel) getJListOperator().getRenderedComponent(index)).getIcon();\n+\treturn icon;\n+    }\n+\n+    public boolean isSelectedIndex(int i) {\n+        return getJListOperator().isSelectedIndex(i);\n+    }\n+\n+    public int getSelectedQuestionNumber() {\n+        return getJListOperator().getSelectedIndex();\n+    }\n+\n+    public static class JListOperatorExt extends JListOperator {\n+\n+\tpublic JListOperatorExt(ContainerOperator c) {\n+\t    super(c);\n+\t}\n+\n+\tpublic Object clickOnItem(final int itemIndex, final int clickCount, final int mouseButton) {\n+\t    if (itemIndex > getModel().getSize()) {\n+\t\tthrow new JemmyException(\"bad index\");\n+\t    }\n+\t    scrollToItem(itemIndex);\n+\n+\t    if (((JList) getSource()).getModel().getSize() <= itemIndex) {\n+\t\treturn (null);\n+\t    }\n+\t    if (((JList) getSource()).getAutoscrolls()) {\n+\t\t((JList) getSource()).ensureIndexIsVisible(itemIndex);\n+\t    }\n+\t    return (getQueueTool().invokeSmoothly(new QueueTool.QueueAction(\"Path selecting\") {\n+\n+\t\tpublic Object launch() {\n+\t\t    Rectangle rect = getCellBounds(itemIndex, itemIndex);\n+\t\t    if (rect == null) {\n+\t\t\treturn (null);\n+\t\t    }\n+\t\t    Point point = new Point((int) (rect.getX() + rect.getWidth() \/ 2),\n+\t\t\t    (int) (rect.getY() + rect.getHeight() \/ 2));\n+\t\t    Object result = getModel().getElementAt(itemIndex);\n+\t\t    clickMouse(point.x, point.y, clickCount, mouseButton);\n+\t\t    return (result);\n+\t\t}\n+\t    }));\n+\t}\n+\n+\tpublic Object clickOnItem(final int itemIndex, final int clickCount, final int mouseButton, final int x) {\n+\t    if (itemIndex > getModel().getSize()) {\n+\t\tthrow new JemmyException(\"bad index\");\n+\t    }\n+\t    scrollToItem(itemIndex);\n+\n+\t    if (((JList) getSource()).getModel().getSize() <= itemIndex) {\n+\t\treturn (null);\n+\t    }\n+\t    if (((JList) getSource()).getAutoscrolls()) {\n+\t\t((JList) getSource()).ensureIndexIsVisible(itemIndex);\n+\t    }\n+\t    return (getQueueTool().invokeSmoothly(new QueueTool.QueueAction(\"Path selecting\") {\n+\n+\t\tpublic Object launch() {\n+\t\t    Rectangle rect = getCellBounds(itemIndex, itemIndex);\n+\t\t    if (rect == null) {\n+\t\t\treturn (null);\n+\t\t    }\n+\t\t    Point point = new Point((int) (rect.getX() + x == 0 ? rect.getWidth() \/ 2:x),\n+\t\t\t    (int) (rect.getY() + rect.getHeight() \/ 2));\n+\t\t    Object result = getModel().getElementAt(itemIndex);\n+\t\t    clickMouse(point.x, point.y, clickCount, mouseButton);\n+\t\t    return (result);\n+\t\t}\n+\t    }));\n+\t}\n+    }\n+\n+    public QuestionTree getQuestionTree() {\n+        String[] names = getElementsNames();\n+        int index = -1;\n+        for (int i = 0; i < names.length; i++) {\n+            if (\"Specify Tests to Run?\".equals(names[i].trim())) {\n+                index = i;\n+                break;\n+            }\n+        }\n+        if (index < 0) {\n+            throw new RuntimeException(\"Error: 'Specify Tests to Run?' question was not found, can't execute test\");\n+        }\n+\n+        selectQuestion(index);\n+        JRadioButtonOperator rb = new JRadioButtonOperator(getConfigDialog());\n+        rb.push();\n+        pushNextConfigEditor();\n+        pushNextConfigEditor();\n+        \n+        return new QuestionTree(configDialog);\n+    }\n+    \n+    public class QuestionTree extends JTreeOperator {\n+\n+        QuestionTree(JDialogOperator config) {\n+            super(config);\n+        }\n+        \n+        public void clickOnCheckbox(int row) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 6, (int)r.getY() + (int)(r.getHeight() \/ 2), 1, getDefaultMouseButton(), 0, false);\n+\/\/            Tools.pause(1);\n+        }\n+\n+        public void prepareToClickOnRow(int row) {\n+            makeComponentVisible();\n+            scrollToRow(row);\n+            makeVisible(getPathForRow(row));\n+            if(!isVisible(getPathForRow(row))) {\n+                System.out.println(\"Error, row is not visible after prepairing. Index \" + row + \", tree width \" + getWidth());\n+            }\n+        }\n+        \n+        public void clickOnCheckbox(int row, int count) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 6, (int)r.getY() + (int)(r.getHeight() \/ 2), count, getDefaultMouseButton(), 0, false);\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public void clickOnCheckbox(int row, int x, int y, int count, int mouseButton, int modifier, boolean forPopup) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 6 + x, (int)r.getY() + (int)(r.getHeight() \/ 2) + y, count, mouseButton, modifier, forPopup);\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public void clickOnRow(int row) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 14, (int)r.getY() + (int)(r.getHeight() \/ 2), 1, getDefaultMouseButton(), 0, false);\n+\/\/            Tools.pause(1);\n+        }\n+\n+        public void clickOnRow(int row, int count) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 14, (int)r.getY() + (int)(r.getHeight() \/ 2), count, getDefaultMouseButton(), 0, false);\n+\/\/            Tools.pause(1);\n+        }\n+\n+        public void clickOnRow(int row, int x, int y, int count, int mouseButton, int modifier, boolean forPopup) {\n+            Rectangle r = getRowBounds(row);\n+            prepareToClickOnRow(row);\n+            super.clickMouse((int)r.getX() + 14 + x, (int)r.getY() + (int)(r.getHeight() \/ 2) + y, count, mouseButton, modifier, forPopup);\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public void clickOnArrow(int row) {\n+            boolean isNimbus = UIManager.getLookAndFeel().getClass().getSimpleName().equals(\"NimbusLookAndFeel\");\n+            if (row > 0 || isNimbus) {\n+                Rectangle r = getRowBounds(row);\n+                prepareToClickOnRow(row);\n+                if (isNimbus) {\n+                    super.clickMouse((int)r.getX() + 1, (int)r.getY() + (int)(r.getHeight() \/ 2), 1, getDefaultMouseButton(), 0, false);\n+                } else {\n+                    super.clickMouse((int)r.getX() - 9, (int)r.getY() + (int)(r.getHeight() \/ 2), 1, getDefaultMouseButton(), 0, false);\n+                }\n+            } else {\n+                System.out.println(\"WARNING: NimbusLAF is not installed. clickOnArrow method is not possible as there is no arrow on root element in MetalLAF. Using double-click on row\");\n+                clickOnRow(row, 2);\n+            }\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public void clickOnArrow(int row, int count) {\n+            boolean isNimbus = UIManager.getLookAndFeel().getClass().getSimpleName().equals(\"NimbusLookAndFeel\");\n+            if (row > 0 || isNimbus) {\n+                Rectangle r = getRowBounds(row);\n+                prepareToClickOnRow(row);\n+                if (isNimbus) {\n+                    super.clickMouse((int)r.getX() + 1, (int)r.getY() + (int)(r.getHeight() \/ 2), count, getDefaultMouseButton(), 0, false);\n+                } else {\n+                    super.clickMouse((int)r.getX() - 9, (int)r.getY() + (int)(r.getHeight() \/ 2), count, getDefaultMouseButton(), 0, false);\n+                }\n+            } else {\n+                System.out.println(\"WARNING: NimbusLAF is not installed. clickOnArrow method is not possible as there is no arrow on root element in MetalLAF. Using double-click on row\");\n+                clickOnRow(row, 2);\n+            }\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public void clickOnArrow(int row, int x, int y, int count, int mouseButton, int modifier, boolean forPopup) {\n+            boolean isNimbus = UIManager.getLookAndFeel().getClass().getSimpleName().equals(\"NimbusLookAndFeel\");\n+            if (row > 0 || isNimbus) {\n+                Rectangle r = getRowBounds(row);\n+                prepareToClickOnRow(row);\n+                if (isNimbus) {\n+                    super.clickMouse((int)r.getX() + 1 + x, (int)r.getY() + (int)(r.getHeight() \/ 2) + y, count, mouseButton, modifier, forPopup);\n+                } else {\n+                    super.clickMouse((int)r.getX() - 9 + x, (int)r.getY() + (int)(r.getHeight() \/ 2) + y, count, mouseButton, modifier, forPopup);\n+                }\n+            } else {\n+                System.out.println(\"WARNING: NimbusLAF is not installed. clickOnArrow method is not possible as there is no arrow on root element in MetalLAF. Using double-click on row\");\n+                clickOnRow(row, 2);\n+            }\n+\/\/            Tools.pause(1);\n+        }\n+        \n+        public SelectionTree getTree() {\n+            return (SelectionTree) super.getSource();\n+        }\n+        \n+        public PopupMenu openContextMenu(int row) {\n+            if (row < 0) {\n+                makeComponentVisible();\n+                Rectangle r = getRowBounds(0);\n+                clickForPopup((int)r.getX() + (int)r.getWidth() + 1, 1);\n+                return new PopupMenu(new JPopupMenuOperator());\n+            } else {\n+                makeComponentVisible();\n+                scrollToRow(row);\n+                clickOnRow(row, 0, 0, 1, getPopupMouseButton(), 0, true);\n+                return new PopupMenu(new JPopupMenuOperator());\n+            }\n+        }\n+        \n+        public class PopupMenu {\n+            JPopupMenuOperator menu;\n+\n+            PopupMenu(JPopupMenuOperator menu) {\n+                this.menu = menu;\n+            }\n+\n+            public void pushSelectAll() {\n+                menu.pushMenu(\"Select All\");\n+            }\n+\n+            public void pushDeselectAll() {\n+                menu.pushMenu(\"Deselect All\");\n+            }\n+            \n+            public void pushExpandAll() {\n+                menu.pushMenu(\"Expand All\");\n+            }\n+            \n+            public void pushCollapseAll() {\n+                menu.pushMenu(\"Collapse All\");\n+            }\n+        }\n+    }\n+    \n+    public JDialogOperator getConfigDialog() {\n+\treturn configDialog;\n+    }\n+\n+    public JMenuBarOperator getMenu() {\n+\treturn new JMenuBarOperator(configDialog);\n+    }\n+\n+    public JMenuItemOperator getFile_SaveMenu() {\n+\treturn getMenu().showMenuItem(new String[]{getFileMenuName(), getFile_SaveMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_CloseMenu() {\n+\treturn getMenu().showMenuItem(new String[]{getFileMenuName(), getFile_CloseMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_NewConfigurationMenu() {\n+\treturn getMenu().showMenuItem(new String[]{getFileMenuName(), getFile_NewMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_LoadConfigurationMenu() {\n+\treturn getMenu().showMenuItem(new String[]{getFileMenuName(), getFile_LoadConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_LoadRecentConfigurationMenu() {\n+\treturn getMenu().showMenuItem(new String[]{getFileMenuName(), getFile_LoadRecentConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator[] getFile_LoadRecentConfiguration_subMenu() {\n+\treturn getMenu().showMenuItems(new String[]{getFileMenuName(), getFile_LoadRecentConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator getBookmarks_EnableBookmarks() {\n+\treturn getMenu().showMenuItem(new String[]{\"Bookmarks\", getBookmarks_EnableBookmarksMenuName()});\n+    }\n+\n+    public String[] getElementsNames() {\n+\tJListOperator list = getJListOperator();\n+\tString temp[] = new String[list.getModel().getSize()];\n+\tfor (int i = 0; i < list.getModel().getSize(); i++) {\n+\t    temp[i] = ((JLabel) list.getRenderedComponent(i)).getText();\n+\t}\n+\treturn temp;\n+    }\n+\n+    public String[] getElementsNames(int[] indexes) {\n+\tJListOperator list = getJListOperator();\n+\tString temp[] = new String[indexes.length];\n+\tfor (int i = 0; i < indexes.length; i++) {\n+\t    temp[i] = ((JLabel) list.getRenderedComponent(indexes[i])).getText();\n+\t}\n+\treturn temp;\n+    }\n+\n+    public static String getBookmarks_EnableBookmarksMenuName() {\n+        return Tools.getExecResource(BOOKMARKS_MENU_NAME_EI18N);\n+    }\n+\n+    public static String getLoadConfigurationDialogName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_DIALOG_NAME_EI18N);\n+    }\n+\n+    public static String getConfigLocationDialogName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N);\n+    }\n+\n+    public static String getConfigLoaderLoadButtonName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N);\n+    }\n+\n+    public static String getFileMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_NAME_EI18N);\n+    }\n+\n+    public static String getFile_SaveMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_SAVE_NAME_EI18N);\n+    }\n+\n+    public static String getFile_NewMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_NEW_NAME_EI18N);\n+    }\n+\n+    public static String getFile_CloseMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_CLOSE_NAME_EI18N);\n+    }\n+\n+    public static String getFile_LoadConfigurationMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_LOAD_NAME_EI18N);\n+    }\n+\n+    public static String getFile_LoadRecentConfigurationMenuName() {\n+\treturn Tools.getExecResource(MENU_FILE_LOAD_RECENT_NAME_EI18N);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/ConfigDialog.java","additions":865,"deletions":0,"binary":false,"changes":865,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.io.File;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Configuration {\n+\n+    public static final String STATUS_BAR_CONFIGURATION_FIELD_NAME = \"bcc.Configuration\";\n+\n+    private final JTFrame mainFrame;\n+    private ConfigDialog configDialog;\n+\n+    public Configuration(JTFrame mainFrame) {\n+\tthis.mainFrame = mainFrame;\n+    }\n+\n+    public boolean isLoaded() {\n+\treturn false;\n+    }\n+\n+    public String getName() {\n+\tif (isLoaded()) {\n+\t    return \"\";\n+\t} else {\n+\t    return null;\n+\t}\n+    }\n+\n+    public ConfigurationBrowser openBrowser(boolean block) {\n+\tJMenuItemOperator menu = mainFrame.getConfigure_LoadConfigurationMenu();\n+\tif (block) {\n+\t    menu.push();\n+\t} else {\n+\t    menu.pushNoBlock();\n+\t}\n+\n+\treturn ConfigurationBrowser.open();\n+    }\n+\n+    public void load(String path, String name, boolean block) {\n+\tConfigurationBrowser browser = openBrowser(block);\n+\tbrowser.setPath(path + File.separator + name);\n+\tbrowser.commit();\n+        waitForConfigurationLoading(name);\n+    }\n+\n+    public void load(File file, boolean block) {\n+\tConfigurationBrowser browser = openBrowser(block);\n+\tbrowser.setPath(file.getPath());\n+\tbrowser.commit();\n+        waitForConfigurationLoading(file.getName());\n+    }\n+\n+    public void load(String name, boolean block) {\n+\tConfigurationBrowser browser = openBrowser(block);\n+\tbrowser.setPath(Tools.LOCAL_PATH + File.separator + name);\n+\tbrowser.commit();\n+        waitForConfigurationLoading(name);\n+    }\n+\n+    public ConfigDialog create(boolean block) {\n+\tJMenuItemOperator menu = mainFrame.getConfigure_NewConfigurationMenu();\n+\tif (block) {\n+\t    menu.push();\n+\t} else {\n+\t    menu.pushNoBlock();\n+\t}\n+\treturn findConfigEditorDialog();\n+    }\n+\n+    public ConfigDialog openByKey() {\n+\tmainFrame.getJFrameOperator().requestFocus();\n+\tmainFrame.getJFrameOperator().clickMouse();\n+        Tools.pause(1);\n+\tmainFrame.getJFrameOperator().pressKey(KeyEvent.VK_E, InputEvent.CTRL_DOWN_MASK);\n+\treturn findConfigEditorDialog();\n+    }\n+\n+    public ConfigDialog openByMenu(boolean block) {\n+\tJMenuItemOperator menu = mainFrame.getConfigure_EditConfigurationMenu();\n+\tif (block) {\n+\t    menu.push();\n+\t} else {\n+\t    menu.pushNoBlock();\n+\t}\n+\treturn findConfigEditorDialog();\n+    }\n+\n+    public ConfigDialog findConfigEditorDialog() {\n+\/\/\tif (configDialog == null) {\n+\/\/\t    configDialog = new ConfigDialog(mainFrame);\n+\/\/\t}\n+\n+\treturn new ConfigDialog(mainFrame);\n+    }\n+\n+    public JTextFieldOperator getConfigurationNameField() {\n+\treturn new JTextFieldOperator(mainFrame.getJFrameOperator(), new NameComponentChooser(STATUS_BAR_CONFIGURATION_FIELD_NAME));\n+    }\n+\n+    public static int MAX_WAIT_TIME = 10000;\n+    public void waitForConfigurationLoading(String name) {\n+\tJTextFieldOperator label = getConfigurationNameField();\n+\tint time = 0;\n+\twhile(!label.getText().equals(name)) {\n+\t    try {\n+\t\tThread.sleep(100);\n+\t\ttime += 100;\n+\t\tif(time > MAX_WAIT_TIME)\n+\t\t    throw new JemmyException(\"Configuration loading error\");\n+\t    } catch (InterruptedException ex) {\n+\t    }\n+\t}\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/Configuration.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class ConfigurationBrowser {\n+    public static final String CONFIG_LOADER_DIALOG_NAME_EI18N = \"wdc.loadconfig\";\n+    public static final String CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N = \"wdc.load.btn\";\n+    public static final String CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N = \"wdc.configchoosertitle\";\n+    public static final String CONFIG_LOADER_BROWSE_BUTTON = \"Browse\";\n+\n+    private JDialogOperator browser;\n+    private boolean closed;\n+\n+    public ConfigurationBrowser() {\n+\tbrowser = new JDialogOperator(getLoadConfigurationDialogName());\n+\tclosed = false;\n+    }\n+\n+    public static ConfigurationBrowser open() {\n+\treturn new ConfigurationBrowser();\n+    }\n+\n+    public void setPath(String path) {\n+\tnew JButtonOperator(browser, CONFIG_LOADER_BROWSE_BUTTON).push();\n+\n+\tJDialogOperator fc = new JDialogOperator(getConfigLocationDialogName());\n+\tJTextFieldOperator tf = new JTextFieldOperator(fc);\n+        tf.clearText();\n+\ttf.enterText(path);\n+    }\n+\n+    public void commit() {\n+\tnew JButtonOperator(browser, getConfigLoaderLoadButtonName()).push();\n+\tclosed = true;\n+    }\n+\n+    public void cancel() {\n+\tclosed = true;\n+    }\n+\n+    public static String getLoadConfigurationDialogName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_DIALOG_NAME_EI18N);\n+    }\n+\n+    public static String getConfigLocationDialogName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_CONFIG_LOCATION_DIALOG_EI18N);\n+    }\n+\n+    public static String getConfigLoaderLoadButtonName() {\n+\treturn Tools.getExecResource(CONFIG_LOADER_LOAD_BUTTON_NAME_EI18N);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/ConfigurationBrowser.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,841 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.awt.Component;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+import javax.swing.JDialog;\n+import jthtest.ReportCreate.ReportCreate;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.menu.QSWizard;\n+import org.netbeans.jemmy.ComponentChooser;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JMenuItemOperator;\n+import org.netbeans.jemmy.operators.JMenuOperator;\n+import org.netbeans.jemmy.operators.JPopupMenuOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+import static jthtest.Tools.SimpleStringComparator;\n+import static jthtest.Tools.getExecResource;\n+import static jthtest.Tools.getToolResource;\n+\n+public class JTFrame {\n+\n+    public static boolean closeQSOnOpen = true;\n+\n+    static {\n+        String qs = System.getProperty(\"jt_gui_test.QSdefault\");\n+        if (qs != null) {\n+            closeQSOnOpen = Boolean.parseBoolean(qs);\n+        }\n+    }\n+    public static final String FILE_MENU_TI18N = \"dt.file.menu\";\n+    public static final String FILE_MENU_MNEMONIC_TI18N = \"dt.file.mne\";\n+    public static final String FILE_OPENQS_MENU_EI18N = \"mgr.openQuickStart.act\";\n+    public static final String FILE_OPEN_MENU_TI18N = \"???\";\n+    public static final String FILE_OPEN_WD_MENU_EI18N = \"ch.setWorkDir.act\";\n+    public static final String FILE_OPEN_WD_MNEMONIC_EI18N = \"ch.setWorkDir.mne\";\n+    public static final String FILE_OPEN_TS_MENU_EI18N = \"mgr.openTestSuite.act\";\n+    public static final String FILE_OPEN_TS_MNEMONIC_EI18N = \"mgr.openTestSuite.mne\";\n+    public static final String FILE_RECENTWD_MENU_TI18N = \"dt.file.recentwd.menu\";\n+    public static final String FILE_PREFS_MENU_TI18N = \"dt.file.prefs.mit\";\n+    public static final String FILE_CLOSE_MENU_TI18N = \"tdi.file.close.act\";\n+    public static final String FILE_EXIT_MENU_TI18N = \"dt.file.exit.mit\";\n+    public static final String FILE_CREATEWD_MENU_EI18N = \"mgr.createWorkDir.act\";\n+    public static final String CONFIGURE_MENU_EI18N = \"ch.menu\";\n+    public static final String CONFIGURE_EDIT_MENU_EI18N = \"ch.full.act\";\n+    public static final String CONFIGURE_EDIT_QS_MENU_EI18N = \"ch.change.menu\";\n+    public static final String CONFIGURE_NEW_MENU_EI18N = \"ch.new.act\";\n+    public static final String CONFIGURE_LOAD_MENU_I18N = \"ce.file.load.mit\";\n+    public static final String CONFIGURE_RECENT_MENU_I18N = \"ce.history.menu\";\n+    public static final String RUNTESTS_MENU_EI18N = \"rh.menu\";\n+    public static final String RUNTESTS_START_MENU_EI18N = \"rh.start.act\";\n+    public static final String RUNTESTS_STOP_MENU_EI18N = \"rh.stop.act\";\n+    public static final String RUNTESTS_MONITOR_MENU_EI18N = \"rh.progress.act\";\n+    public static final String REPORT_MENU_EI18N = \"rpth.menu\";\n+    public static final String REPORT_CREATE_MENU_EI18N = \"rpth.new.act\";\n+    public static final String REPORT_OPEN_MENU_EI18N = \"rpth.open.act\";\n+    public static final String VIEW_MENU_EI18N = \"ce.view.menu\";\n+    public static final String VIEW_CONFIGURATION_MENU_EI18N = \"exec.view.cfg.menu\";\n+    public static final String VIEW_FILTER_MENU_EI18N = \"fconfig.submenu.menu\";\n+    public static final String VIEW_PROPERTIES_MENU_EI18N = \"exec.view.props.act\";\n+    public static final String VIEW_LOGS_MENU_EI18N = \"exec.view.logviewer.act\";\n+    public static final String VIEW_TSERRORS_MENU_EI18N = \"exec.view.testSuiteErrors.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWTESTENV_MENU_EI18N = \"ch.env.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWEXCLUDELIST_MENU_EI18N = \"ch.excl.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWCHECKLIST_MENU_EI18N = \"ch.checkList.act\";\n+    public static final String VIEW_CONFIGURATION_SHOWQUESTIONLOG_MENU_EI18N = \"ch.quLog.act\";\n+    public static final String TOOLS_MENU_TI18N = \"dt.tasks.menu\";\n+    public static final String TOOLS_MENU_MNEMONIC_TI18N = \"dt.tasks.mne\";\n+    public static final String TOOLS_TEST_RESULTS_AUDITOR_I18N = \"???\";\n+    public static final String TOOLS_AGENT_MONITOR_I18N = \"???\";\n+    public static final String TOOLS_OPENQS_EI18N = \"mgr.openQuickStart.act\";\n+    public static final String WINDOWS_MENU_TI18N = \"dt.windows.menu\";\n+    public static final String WINDOWS_MENU_MNEMONIC_TI18N = \"dt.windows.mne\";\n+    public static final String HELP_MENU_EI18N = \"qlb.help.btn\";\n+    public static final String HELP_MENU_MNEMONIC_TI18N = \"qlb.help.mne\";\n+    public static final String HELP_ONLINEHELP_MENU_TI18N = \"hm.help.mit\";\n+    public static final String HELP_ONLINEHELP_MNEMONIC_TI18N = \"hm.help.mne\";\n+    public static final String HELP_ABOUTJT_MENU_I18N = \"hm.aboutJavaTest.mit\";\n+    public static final String HELP_ABOUTJT_MNEMONIC_I18N = \"hm.aboutJavaTest.mne\";\n+    public static final String HELP_ABOUTJVM_MENU_I18N = \"hm.aboutJava.mit\";\n+    public static final String HELP_ABOUTJVM_MNEMONIC_I18N = \"hm.aboutJava.mne\";\n+    private JFrameOperator mainFrame;\n+    private Configuration configuration;\n+    private JMenuBarOperator menuBar;\n+    private TestSuite testSuite;\n+    private WorkDirectory workDirectory;\n+\n+    public void closeQS() {\n+        new JDialogOperator(mainFrame, getExecResource(\"qsw.title\")).close();\n+    }\n+\n+    public void closeQSGently() {\n+\/\/            new JDialogOperator(mainFrame, getExecResource(\"qsw.title\")).close();\n+        try {\n+            new Thread() {\n+\n+                public void run() {\n+                    JDialog d = JDialogOperator.findJDialog(mainFrame.getWindow(), new ComponentChooser() {\n+\n+                        @Override\n+                        public boolean checkComponent(Component cmpnt) {\n+                            if (cmpnt instanceof JDialog) {\n+                                if (((JDialog) cmpnt).getTitle().equals(getExecResource(\"qsw.title\"))) {\n+                                    return true;\n+                                }\n+                            }\n+                            return false;\n+                        }\n+\n+                        @Override\n+                        public String getDescription() {\n+                            return \"searching QuickStartWizard\";\n+                        }\n+                    });\n+                    if (d != null) {\n+                        new JDialogOperator(d).close();\n+                    }\n+                }\n+            }.start();\n+        } catch (Exception e) {\n+        }\n+    }\n+\n+    private void init() {\n+        configuration = new Configuration(this);\n+        testSuite = new TestSuite(this);\n+        workDirectory = new WorkDirectory(this);\n+        mainFrame = Tools.findMainFrame();\n+        if (closeQSOnOpen) {\n+            closeQSGently();\n+        }\n+    }\n+\n+    public JTFrame() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        Tools.startJavatest();\n+        init();\n+    }\n+\n+    public JTFrame(boolean newDesktop) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        if (newDesktop) {\n+            Tools.startJavatestNewDesktop();\n+        } else {\n+            Tools.startJavatest();\n+        }\n+        init();\n+    }\n+\n+    public JTFrame(String params) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        Tools.startJavatest(params);\n+        init();\n+    }\n+\n+    public JTFrame(String params[]) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        Tools.startJavatest(params);\n+        init();\n+    }\n+\n+    public JTFrame(String testsuite, String workdir, String config) throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        Tools.startJavatest(testsuite, workdir, config);\n+        init();\n+    }\n+\n+    public static JTFrame startJTWithDefaultWorkDirectory() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        closeQSOnOpen = false;\n+        return new JTFrame(new String[]{\"-NewDesktop\", \"-open\", Test.LOCAL_PATH + File.separator + Test.DEFAULT_WD_NAME});\n+    }\n+\n+    public static JTFrame startJTWithDefaultTestSuite() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        closeQSOnOpen = false;\n+        return new JTFrame(new String[]{\"-NewDesktop\", \"-open\", Tools.TEST_SUITE_NAME});\n+    }\n+\n+    public static JTFrame startJTWithRunWD() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        closeQSOnOpen = false;\n+        return new JTFrame(new String[]{\"-NewDesktop\", \"-open\", Tools.WD_RUN_NAME});\n+    }\n+\n+    public int getTabsCount() {\n+        JTabbedPaneOperator tabs = new JTabbedPaneOperator(mainFrame);\n+        return tabs.getTabCount();\n+    }\n+\n+    public String getTabName(int i) {\n+        JTabbedPaneOperator tabs = new JTabbedPaneOperator(mainFrame);\n+        return tabs.getTitleAt(i);\n+    }\n+\n+    public void closeCurrentTool() {\n+        getFile_CloseMenu().push();\n+    }\n+\n+    public void closeAllTools() {\n+        if (mainFrame.isVisible()) {\n+            Tools.closeAll(mainFrame);\n+        }\n+    }\n+\n+    public void closeFrame() {\n+        Tools.closeJT(mainFrame);\n+    }\n+\n+    public JFrameOperator getJFrameOperator() {\n+        return mainFrame;\n+    }\n+\n+    public Configuration getConfiguration() {\n+        return configuration;\n+    }\n+\n+    public TestSuite getTestSuite() {\n+        return testSuite;\n+    }\n+\n+    public WorkDirectory getWorkDirectory() {\n+        return workDirectory;\n+    }\n+\n+    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ menu methods \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+    public JMenuBarOperator getMenuBar() {\n+        if (menuBar == null) {\n+            menuBar = new JMenuBarOperator(mainFrame);\n+        }\n+        return menuBar;\n+    }\n+\n+    public JMenuOperator getFileMenu() {\n+        return new JMenuOperator(mainFrame, getFileMenuName());\n+    }\n+\n+    public JMenuItemOperator getFile_OpenQuickStartMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_OpenQuickStartMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_OpenMenu() {\n+        return getMenuBar().showMenuItems(new String[]{getFileMenuName()}, new SimpleStringComparator())[1];\n+    }\n+\n+    public JMenuItemOperator getFile_RecentWorkDirectoryMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_RecentWorkDirectoryMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_PreferencesMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_PreferencesMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_CloseMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_CloseMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_ExitMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_ExitMenuName()});\n+    }\n+\n+    public JMenuItemOperator getFile_Open_WorkDirectoryMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_OpenMenuName(), getFile_Open_WorkDirectoryMenuName()}, new SimpleStringComparator());\n+    }\n+\n+    public JMenuItemOperator getFile_Open_TestSuiteMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_OpenMenuName(), getFile_Open_TestSuiteMenuName()}, new SimpleStringComparator());\n+    }\n+\n+    public JMenuItemOperator getFile_CreateWorkDirectoryMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getFileMenuName(), getFile_CreateWorkDirectoryMenuName()});\n+    }\n+\n+    public JMenuOperator getConfigureMenu() {\n+        return new JMenuOperator(mainFrame, getConfigureMenuName());\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditConfigurationMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSetMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSet_TestsToRunMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName(), getConfigure_EditQuickSet_TestsToRunMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSet_ExcludeListMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName(), getConfigure_EditQuickSet_ExcludeListMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSet_PriorStatusMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName(), getConfigure_EditQuickSet_PriorStatusMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSet_ConcurrencyMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName(), getConfigure_EditQuickSet_ConcurrencyMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_EditQuickSet_TimeoutFactorMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_EditQuickSetMenuName(), getConfigure_EditQuickSet_TimeoutFactorMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_NewConfigurationMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_NewConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator getConfigure_LoadConfigurationMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_LoadConfigurationMenuName()}, new Tools.SimpleStringComparator());\n+    }\n+\n+    public JMenuItemOperator getConfigure_LoadRecentConfigurationMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getConfigureMenuName(), getConfigure_LoadRecentConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator[] getConfigure_LoadRecentConfiguration_subMenu() {\n+        return getMenuBar().showMenuItems(new String[]{getConfigureMenuName(), getConfigure_LoadRecentConfigurationMenuName()});\n+    }\n+\n+    public JMenuOperator getRunTestsMenu() {\n+        return new JMenuOperator(mainFrame, getRunTestsMenuName());\n+    }\n+\n+    public JMenuItemOperator getRunTests_StartMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getRunTestsMenuName(), getRunTests_StartMenuName()});\n+    }\n+\n+    public JMenuItemOperator getRunTests_StopMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getRunTestsMenuName(), getRunTests_StopMenuName()});\n+    }\n+\n+    public JMenuItemOperator getRunTests_MonitorProgressMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getRunTestsMenuName(), getRunTests_MonitorProgressMenuName()});\n+    }\n+\n+    public JMenuOperator getReportMenu() {\n+        return new JMenuOperator(mainFrame, getReportMenuName());\n+    }\n+\n+    public JMenuItemOperator getReport_CreateReportMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getReportMenuName(), getReport_CreateReportMenuName()});\n+    }\n+\n+    public JMenuItemOperator getReport_OpenReportMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getReportMenuName(), getReport_OpenReportMenuName()});\n+    }\n+\n+    public JMenuOperator getViewMenu() {\n+        return new JMenuOperator(mainFrame, getViewMenuName());\n+    }\n+\n+    public JMenuItemOperator getView_ConfigurationMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_ConfigurationMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_FilterMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_FilterMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_Filter_ConfigureFiltersMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_FilterMenuName(), getView_Filter_ConfigureFiltersMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_PropertiesMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_PropertiesMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_LogsMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_LogsMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_TestSuiteErrorsMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_TestSuiteErrorsMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_Configuration_ShowChecklistMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowChecklistMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_Configuration_ShowExcludeListMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowExcludeListMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_Configuration_ShowQuestionLogMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowQuestionLogMenuName()});\n+    }\n+\n+    public JMenuItemOperator getView_Configuration_ShowTestEnvironmentMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getViewMenuName(), getView_ConfigurationMenuName(), getView_Configuration_ShowTestEnvironmentMenuName()});\n+    }\n+\n+    public JMenuItemOperator getTools_ReportConverterMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getToolsMenuName(), getTools_ReportConverterMenuName()});\n+    }\n+\n+    public JMenuItemOperator getTools_OpenQuickStartWizardMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getToolsMenuName(), getTools_OpenQuickStartWizardMenuName()});\n+    }\n+\n+    public JMenuItemOperator getTools_AgentMonitorMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getToolsMenuName(), getTools_AgentMonitorMenuName()});\n+    }\n+\n+    public JMenuItemOperator getTools_TestResultsAuditorMenu() {\n+        return getMenuBar().showMenuItem(new String[]{getToolsMenuName(), getTools_TestResultsAuditorMenuName()});\n+    }\n+\n+    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/ static name getters \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+    \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+    public static String getFileMenuName() {\n+        return getToolResource(FILE_MENU_TI18N);\n+    }\n+\n+    public static String getFile_OpenQuickStartMenuName() {\n+        return getExecResource(FILE_OPENQS_MENU_EI18N);\n+    }\n+\n+    public static String getFile_OpenMenuName() {\n+        return \"Open\";\n+    }\n+\n+    public static String getFile_RecentWorkDirectoryMenuName() {\n+        return getToolResource(FILE_RECENTWD_MENU_TI18N);\n+    }\n+\n+    public static String getFile_PreferencesMenuName() {\n+        return getToolResource(FILE_PREFS_MENU_TI18N);\n+    }\n+\n+    public static String getFile_CloseMenuName() {\n+        return getToolResource(FILE_CLOSE_MENU_TI18N);\n+    }\n+\n+    public static String getFile_ExitMenuName() {\n+        return getToolResource(FILE_EXIT_MENU_TI18N);\n+    }\n+\n+    public static String getFile_Open_WorkDirectoryMenuName() {\n+        return getExecResource(FILE_OPEN_WD_MENU_EI18N);\n+    }\n+\n+    public static String getFile_Open_TestSuiteMenuName() {\n+        return getExecResource(FILE_OPEN_TS_MENU_EI18N);\n+    }\n+\n+    public static String getFile_CreateWorkDirectoryMenuName() {\n+        return getExecResource(FILE_CREATEWD_MENU_EI18N);\n+    }\n+\n+    public static String getConfigureMenuName() {\n+        return getExecResource(CONFIGURE_MENU_EI18N);\n+    }\n+\n+    public static String getConfigure_EditConfigurationMenuName() {\n+        return getExecResource(CONFIGURE_EDIT_MENU_EI18N);\n+    }\n+\n+    public static String getConfigure_EditQuickSetMenuName() {\n+        return getExecResource(CONFIGURE_EDIT_QS_MENU_EI18N);\n+    }\n+\n+    public static String getConfigure_EditQuickSet_TestsToRunMenuName() {\n+        return \"Tests To Run ...\";\n+    }\n+\n+    public static String getConfigure_EditQuickSet_ExcludeListMenuName() {\n+        return \"Exclude List ...\";\n+    }\n+\n+    public static String getConfigure_EditQuickSet_PriorStatusMenuName() {\n+        return \"Prior Status ...\";\n+    }\n+\n+    public static String getConfigure_EditQuickSet_ConcurrencyMenuName() {\n+        return \"Concurrency ...\";\n+    }\n+\n+    public static String getConfigure_EditQuickSet_TimeoutFactorMenuName() {\n+        return \"Timeout Factor ...\";\n+    }\n+\n+    public static String getConfigure_NewConfigurationMenuName() {\n+        return getExecResource(CONFIGURE_NEW_MENU_EI18N);\n+    }\n+\n+    public static String getConfigure_LoadConfigurationMenuName() {\n+        return getExecResource(CONFIGURE_LOAD_MENU_I18N);\n+    }\n+\n+    public static String getConfigure_LoadRecentConfigurationMenuName() {\n+        return getExecResource(CONFIGURE_RECENT_MENU_I18N);\n+    }\n+\n+    public static String getRunTestsMenuName() {\n+        return getExecResource(RUNTESTS_MENU_EI18N);\n+    }\n+\n+    public static String getRunTests_StartMenuName() {\n+        return getExecResource(RUNTESTS_START_MENU_EI18N);\n+    }\n+\n+    public static String getRunTests_StopMenuName() {\n+        return getExecResource(RUNTESTS_STOP_MENU_EI18N);\n+    }\n+\n+    public static String getRunTests_MonitorProgressMenuName() {\n+        return getExecResource(RUNTESTS_MONITOR_MENU_EI18N);\n+    }\n+\n+    public static String getReportMenuName() {\n+        return getExecResource(REPORT_MENU_EI18N);\n+    }\n+\n+    public static String getReport_CreateReportMenuName() {\n+        return getExecResource(REPORT_CREATE_MENU_EI18N);\n+    }\n+\n+    public static String getReport_OpenReportMenuName() {\n+        return getExecResource(REPORT_OPEN_MENU_EI18N);\n+    }\n+\n+    public static String getViewMenuName() {\n+        return getExecResource(VIEW_MENU_EI18N);\n+    }\n+\n+    public static String getView_ConfigurationMenuName() {\n+        return getExecResource(VIEW_CONFIGURATION_MENU_EI18N);\n+    }\n+\n+    public static String getView_FilterMenuName() {\n+        return getExecResource(VIEW_FILTER_MENU_EI18N);\n+    }\n+\n+    public static String getView_Filter_ConfigureFiltersMenuName() {\n+        return \"Configure Filters ...\";\n+    }\n+\n+    public static String getView_PropertiesMenuName() {\n+        return getExecResource(VIEW_PROPERTIES_MENU_EI18N);\n+    }\n+\n+    public static String getView_LogsMenuName() {\n+        return getExecResource(VIEW_LOGS_MENU_EI18N);\n+    }\n+\n+    public static String getView_TestSuiteErrorsMenuName() {\n+        return getExecResource(VIEW_TSERRORS_MENU_EI18N);\n+    }\n+\n+    public static String getView_Configuration_ShowTestEnvironmentMenuName() {\n+        return getExecResource(VIEW_CONFIGURATION_SHOWTESTENV_MENU_EI18N);\n+    }\n+\n+    public static String getView_Configuration_ShowChecklistMenuName() {\n+        return getExecResource(VIEW_CONFIGURATION_SHOWCHECKLIST_MENU_EI18N);\n+    }\n+\n+    public static String getView_Configuration_ShowExcludeListMenuName() {\n+        return getExecResource(VIEW_CONFIGURATION_SHOWEXCLUDELIST_MENU_EI18N);\n+    }\n+\n+    public static String getView_Configuration_ShowQuestionLogMenuName() {\n+        return getExecResource(VIEW_CONFIGURATION_SHOWQUESTIONLOG_MENU_EI18N);\n+    }\n+\n+    public static String getToolsMenuName() {\n+        return \"Tools\";\n+    }\n+\n+    public static String getTools_ReportConverterMenuName() {\n+        return \"Report Converter...\";\n+    }\n+\n+    public static String getTools_OpenQuickStartWizardMenuName() {\n+        return \"Open Quick Start Wizard ...\";\n+    }\n+\n+    public static String getTools_AgentMonitorMenuName() {\n+        return \"Agent Monitor...\";\n+    }\n+\n+    public static String getTools_TestResultsAuditorMenuName() {\n+        return \"Test Results Auditor...\";\n+    }\n+\n+    public void openDefaultTestSuite() {\n+        testSuite.openTestSuite(Tools.LOCAL_PATH + Tools.TEST_SUITE_NAME);\n+    }\n+\n+    public File createWorkDirectoryInTemp() {\n+        return workDirectory.createWorkDirectoryInTemp();\n+    }\n+\n+    public QSWizard openQuickStartWizard() {\n+        getFile_OpenQuickStartMenu().push();\n+        return new QSWizard();\n+    }\n+\n+    public TestTree getTestTree() {\n+        return new TestTree(this);\n+    }\n+\n+    public Task<Boolean> runTests() {\n+        return new TestRunner(true);\n+    }\n+\n+    public Task<Boolean> runTests(boolean start) {\n+        return new TestRunner(start);\n+    }\n+\n+    public Task<Boolean> runTests(int row) {\n+        return new TestRunner(row);\n+    }\n+\n+    public int getPassedCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.0\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getFailedCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.1\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getErrorCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.2\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getNotRunCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.3\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getNotFilteredCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.4\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getFilteredCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.5\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public int getAllTestsCounter() {\n+        String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.6\")).getText();\n+        return Integer.parseInt(actual);\n+    }\n+\n+    public void click() {\n+        mainFrame.clickMouse();\n+    }\n+\n+    public ReportDialog openReportDialog() {\n+        getReport_CreateReportMenu().push();\n+        return new ReportDialog(new JDialogOperator(getExecResource(\"nrd.title\")), true);\n+    }\n+\n+    public ReportDialog openReportDialog(boolean init) {\n+        getReport_CreateReportMenu().push();\n+        return new ReportDialog(new JDialogOperator(getExecResource(\"nrd.title\")), init);\n+    }\n+\n+    public int checkCounters(int[] counters) {\n+        for (int i = 0; i < counters.length; i++) {\n+            int value = counters[i];\n+\n+            String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.\" + i)).getText();\n+\n+            if (!actual.equals(Integer.toString(value))) {\n+                return i;\n+            }\n+        }\n+        return -1;\n+    }\n+\n+    public void waitForCounters(final int[] counters) {\n+        Task.Waiter countersWaiter = new Task.Waiter(true) {\n+\n+            @Override\n+            protected void init() {\n+                super.maxTimeToWaitMS = 10000;\n+            }\n+\n+            @Override\n+            protected boolean check() {\n+                for (int i = 0; i < counters.length; i++) {\n+                    int value = counters[i];\n+\n+                    String actual = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.\" + i)).getText();\n+\n+                    if (!actual.equals(Integer.toString(value))) {\n+                        return false;\n+                    }\n+                }\n+                return true;\n+            }\n+\n+            @Override\n+            protected String getTimeoutExceptionDescription() {\n+                return \"Timeout occured while waiting for counters '\" + Arrays.toString(counters) + \"'. Current counters values: '\" + Arrays.toString(getCounters()) + \"'\";\n+            }\n+        };\n+\n+        countersWaiter.waitForDone();\n+    }\n+\n+    public int[] getCounters() {\n+        int[] counters = new int[7];\n+        for (int i = 0; i < 7; i++) {\n+            counters[i] = Integer.parseInt(new JTextFieldOperator(mainFrame, new NameComponentChooser(\"br.summ.\" + i)).getText());\n+        }\n+        return counters;\n+    }\n+\n+    \/**\n+     * Creates full (with html, xml and plain) report\n+     * @param path Path to report directory\n+     * @param openViewer Open or not report viewer\n+     * @return\n+     *\/\n+    public ReportChecker createFullReport(String path, boolean openViewer) {\n+        ReportCreate rc;\n+\n+        ReportDialog rep = openReportDialog(false);\n+        rep.setPath(path);\n+        rep.pushCreate();\n+        JDialogOperator showReport = ReportDialog.findShowReportDialog();\n+\n+        if (openViewer) {\n+            new JButtonOperator(showReport, \"Yes\").push();\n+            return new ReportChecker(path, rep);\n+        } else {\n+            new JButtonOperator(showReport, \"No\").push();\n+            return null;\n+        }\n+    }\n+\n+    private class TestRunner extends Task<Boolean> {\n+\n+        private int row;\n+\n+        @Override\n+        protected void init() {\n+            setName(\"RunTestsThread\" + (int) (Math.random() * 100));\n+        }\n+\n+        public TestRunner(boolean start) {\n+            super(false);\n+            this.row = -1;\n+            start();\n+        }\n+\n+        public TestRunner(int row) {\n+            super(false);\n+            this.row = row;\n+            start();\n+        }\n+\n+        @Override\n+        protected void runImpl() {\n+            try {\n+                if (row < 0) {\n+                    getRunTests_StartMenu().push();\n+                } else {\n+                    getTestTree().clickPopup(row);\n+                    \n+                    new JPopupMenuOperator(mainFrame).pushMenuNoBlock(\"Execute These Tests\");\n+                    new JButtonOperator(new JDialogOperator(\"Run Tests\"), \"Yes\").push();\n+                }\n+                try {\n+                    new JButtonOperator(new JDialogOperator(\"View Filter Info\"), \"OK\").push();\n+                } catch (Exception e) {\n+                }\n+                waitForExecutionDone();\n+            } catch (TimeoutExpiredException e) {\n+                result = false;\n+                exception = e;\n+            }\n+            result = true;\n+        }\n+    }\n+\n+    \/**\n+     * Waits for tests execution done. \n+     * Attention! This method should be used only when tests are runned without JTFrame.TestRunner. \n+     * Do not use this method along with runTests()! Use Task.waitForDone() instead. \n+     * @see #runTests() \n+     * @see #runTests(boolean) \n+     * @see Task#waitForDone() \n+     *\/\n+    public void waitForExecutionDone() {\n+        try {\n+            final JTextFieldOperator filed1 = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"strip.msg\"));\n+            Task.Waiter waiter = new Task.Waiter(false) {\n+\n+                @Override\n+                protected void init() {\n+                    setName(\"FinishedRunWaiter\" + (int) (Math.random() * 10));\n+                }\n+\n+                @Override\n+                protected boolean check() {\n+                    return Tools.getExecResource(\"strip.finish\").equals(filed1.getText());\n+                }\n+            };\n+            waiter.maxTimeToWaitMS = 600000;\n+            waiter.start();\n+            waiter.waitForDone();\n+        } catch (TimeoutExpiredException e) {\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/JTFrame.java","additions":841,"deletions":0,"binary":false,"changes":841,"status":"added"},{"patch":"@@ -0,0 +1,228 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class QSWizard {\n+\n+    public static String QUICK_START_WIZARD_TITLE = Tools.WINDOWNAME + \" Harness Quick Start\";\n+    private JDialogOperator dialog;\n+    private Panel panel;\n+\n+    public QSWizard() {\n+        dialog = new JDialogOperator(QUICK_START_WIZARD_TITLE);\n+        panel = new GreetingsPanel();\n+    }\n+\n+    public Panel getPanel() {\n+        return panel;\n+    }\n+\n+    public abstract class Panel {\n+\n+        public JDialogOperator getDialog() {\n+            return dialog;\n+        }\n+\n+        public JButtonOperator next() {\n+            return new JButtonOperator(dialog, \"Next\");\n+        }\n+\n+        public JButtonOperator cancel() {\n+            return new JButtonOperator(dialog, \"Cancel\");\n+        }\n+\n+        public JButtonOperator finish() {\n+            return new JButtonOperator(dialog, \"Finish\");\n+        }\n+\n+        public JButtonOperator back() {\n+            return new JButtonOperator(dialog, \"Back\");\n+        }\n+\n+        public abstract Panel pushNext();\n+    }\n+\n+    public class GreetingsPanel extends Panel {\n+\n+        private boolean startNew = false;\n+        private boolean resume = false;\n+        private boolean browse = false;\n+\n+        public void setStartNewTestRun() {\n+            new JRadioButtonOperator(dialog, Tools.getExecResource(\"qsw.tsk.new.rb\")).push();\n+            browse = resume = false;\n+            startNew = true;\n+        }\n+\n+        public void setResumeTestRun() {\n+            new JRadioButtonOperator(dialog, Tools.getExecResource(\"qsw.tsk.resume.rb\")).push();\n+            browse = startNew = false;\n+            resume = true;\n+        }\n+\n+        public void setBrowseTestSuite() {\n+            new JRadioButtonOperator(dialog, Tools.getExecResource(\"qsw.tsk.browse.rb\")).push();\n+            startNew = resume = false;\n+            browse = true;\n+        }\n+\n+        @Override\n+        public ChooseTestSuitePanel pushNext() {\n+            next().push();\n+            return new ChooseTestSuitePanel();\n+        }\n+    }\n+\n+    public class ChooseTestSuitePanel extends Panel {\n+        public static final String QSW_TS_TEXTFIELD = \"qsw.ts.file.ed\";\n+\n+        private String testsuite = null;\n+\n+        public String getTestsuite() {\n+            JTextFieldOperator op = new JTextFieldOperator(dialog, new NameComponentChooser(\"ComboBox.textField\"));\n+            return op.getText();\n+        }\n+\n+        public void setTestsuite(String testsuite) {\n+            JTextFieldOperator op = Tools.getTextField(dialog, \"Test Suite:\");\/\/ new JTextFieldOperator(dialog);\n+            op.clearText();\n+            op.enterText(testsuite);\n+            this.testsuite = testsuite;\n+        }\n+\n+        @Override\n+        public ChooseConfigurationPanel pushNext() {\n+            next().push();\n+            return new ChooseConfigurationPanel();\n+        }\n+    }\n+\n+    public class ChooseConfigurationPanel extends Panel {\n+\n+        private boolean createNew = false;\n+        private boolean useOld = false;\n+\n+        @Override\n+        public ChooseWorkDirectoryPanel pushNext() {\n+            if (createNew || useOld) {\n+                next().push();\n+                return new ChooseWorkDirectoryPanel();\n+            } else {\n+                return null;\n+            }\n+        }\n+\n+        public void setCreateANewConfiguration() {\n+            new JRadioButtonOperator(dialog, Tools.getExecResource(\"qsw.cfg.new.rb\")).push();\n+            createNew = true;\n+            useOld = false;\n+        }\n+\n+        public void setUseAConfigurationTemplate() {\n+            new JRadioButtonOperator(dialog, Tools.getExecResource(\"qsw.cfg.template.rb\")).push();\n+            useOld = true;\n+            createNew = false;\n+        }\n+\n+        public boolean setPath(String path) {\n+            if (!useOld || createNew)\n+                return false;\n+            JTextFieldOperator tf = getTextFieled();\n+            tf.clearText();\n+            tf.typeText(path);\n+            return true;\n+        }\n+\n+        public JTextFieldOperator getTextFieled() {\n+            return Tools.getTextField(dialog, \"File:\");\n+        }\n+\n+        public JButtonOperator browse() {\n+            return new JButtonOperator(dialog, Tools.getExecResource(\"qsw.cfg.jtm.field.browse.btn\"));\n+        }\n+    }\n+\n+    public class ChooseWorkDirectoryPanel extends Panel {\n+\n+        @Override\n+        public NewTestsuiteAlmostDone pushNext() {\n+            next().push();\n+            return new NewTestsuiteAlmostDone();\n+        }\n+\n+        public JTextFieldOperator getTextField() {\n+            return Tools.getTextField(dialog, Tools.getExecResource(\"qsw.nwd.file.lbl\"));\n+        }\n+        \n+        public void setWorkDirectory(String path) {\n+            JTextFieldOperator tf = getTextField();\n+            tf.clearText();\n+            tf.typeText(path);\n+        }\n+\n+        public JButtonOperator browse() {\n+            return new JButtonOperator(dialog, Tools.getExecResource(\"qsw.nwd.file.browse.btn\"));\n+        }\n+    }\n+\n+    public class NewTestsuiteAlmostDone extends Panel {\n+\n+        @Override\n+        public Panel pushNext() {\n+            finish().push();\n+            return null;\n+        }\n+\n+        public JCheckBoxOperator getStartTheConfigEditorCheckBox() {\n+            return new JCheckBoxOperator(dialog, Tools.getExecResource(\"qsw.end.cfg.ckb\"));\n+        }\n+\n+        public JCheckBoxOperator getStartTestRunCheckBox() {\n+            return new JCheckBoxOperator(dialog, Tools.getExecResource(\"qsw.end.run.ckb\"));\n+        }\n+\n+        public void setStartTheConfigEditor(boolean set) {\n+            getStartTheConfigEditorCheckBox().setSelected(set);\n+        }\n+\n+        public void setStartTestRun(boolean set) {\n+            getStartTestRunCheckBox().setSelected(set);\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/QSWizard.java","additions":228,"deletions":0,"binary":false,"changes":228,"status":"added"},{"patch":"@@ -0,0 +1,725 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.io.File;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.Iterator;\n+import java.util.LinkedList;\n+import jthtest.ReportCreate.ReportCreate.ReportBrowser;\n+import jthtest.Test;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+\n+public class ReportChecker {\n+\n+    public static final String F2E = \"ahref=kfl_fail2error.html>\";\n+    public static final String F2F = \"<ahref=kfl_fail2fail.html>\";\n+    public static final String F2M = \"ahref=kfl_fail2missing.html>\";\n+    public static final String F2N = \"<ahref=kfl_fail2notrun.html>\";\n+    public static final String F2P = \"<ahref=kfl_fail2pass.html>\";\n+    public static final String KFL_1 = \"name=KnownFailureAnalysis\";\n+    public static final String KFL_2 = \"name=KnownFailureAnalysis\";\n+    public static final String NF = \"<ahref=kfl_newfailures.html>\";\n+    public static final String TESTS_TEXT = \"<thscope=row>Tests(\";\n+    public static final String NOT_CALC = \"<td>(notcalculated)<\/td>\";\n+    public static final String TC_F2E_LINK = \"<ahref=kfl_tc_fail2error.html>\";\n+    public static final String TC_F2M_LINK = \"<ahref=kfl_tc_fail2missing.html>\";\n+    public static final String TC_F2N_LINK = \"<ahref=kfl_tc_fail2notrun.html>\";\n+    public static final String TC_F2P_LINK = \"<ahref=kfl_tc_fail2pass.html>\";\n+    public static final String TC_NEW_LINK = \"<ahref=kfl_tc_newfailures.html>\";\n+    public static final String TEST_CASES_TEXT = \"<thscope=row>TestCases(\";\n+    private String basePath;\n+    private ReportBrowser browser;\n+    private ReportDialog reportDialog;\n+\n+    public enum ReportType {\n+\n+        INDEX_HTML, REPORT_HTML\n+    };\n+\n+    public ReportChecker(String path, ReportDialog report) {\n+        basePath = path;\n+        browser = new ReportBrowser(path);\n+        reportDialog = report;\n+    }\n+\n+    private void checkReportPage() throws JemmyException {\n+        String htmlPath = basePath + \"html\" + File.separator;\n+        String[] urls = browser.getUrls();\n+        StringBuffer error = new StringBuffer(\"\");\n+        int i = -1;\n+\n+        if (reportDialog.isFGenerateError()) {\n+            if (!(new File(htmlPath + \"error.html\").exists())) {\n+                error.append(\"error.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"error.html\").exists()) {\n+                error.append(\"error.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isFGenerateFailed()) {\n+            if (!(new File(htmlPath + \"failed.html\").exists())) {\n+                error.append(\"failed.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"failed.html\").exists()) {\n+                error.append(\"failed.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isFGenerateNotRun()) {\n+            if (!(new File(htmlPath + \"notRun.html\").exists())) {\n+                error.append(\"notRun.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"notRun.html\").exists()) {\n+                error.append(\"notRun.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isFGeneratePassed()) {\n+            if (!(new File(htmlPath + \"passed.html\").exists())) {\n+                error.append(\"passed.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"passed.html\").exists()) {\n+                error.append(\"passed.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isFPutInIndex()) {\n+            if (!(new File(htmlPath + \"index.html\").exists())) {\n+                error.append(\"index.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"index.html\").exists()) {\n+                error.append(\"index.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isFPutInReport()) {\n+            if (!(new File(htmlPath + \"report.html\").exists())) {\n+                error.append(\"report.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+            }\n+        } else {\n+            if (new File(htmlPath + \"report.html\").exists()) {\n+                error.append(\"report.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isOConfig()) {\n+            checkFileUrls(urls);\n+            i = Tools.findInStringArray(urls, \"#Configuration and Other Settings\");\n+            if (i == -1) {\n+                error.append(\"report doesn't contain configuration url '#Configuration and Other Settings'\\n\");\n+            }\n+            if (!browser.getText().contains(\"name=\\\"Configuration and Other Settings\\\"\")) {\n+                error.append(\"report doesn't contain configuration block\\n\");\n+            }\n+\/\/\t\ti = findInStringArray(urls, \"#locations\");\n+\/\/\t\tif (i == -1) {\n+\/\/\t\t    error.append(\"report doesn't contain url to 'Where to put the results' block\\n\");\n+\/\/\t\t}\n+            if (!browser.getText().contains(\"name=locations\") && !browser.getText().contains(\"name=\\\"locations\\\"\")) {\n+                error.append(\"report doesn't contain 'Where to put the results' block\\n\");\n+            }\n+\n+            if (reportDialog.isOConfig_QuestionLog()) {\n+                i = Tools.findInStringArray(urls, \"config.html\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain url to config.html\\n\");\n+                }\n+                if (!(new File(htmlPath + \"config.html\").exists())) {\n+                    error.append(\"config.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                i = Tools.findInStringArray(urls, \"config.html\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to config.html while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"config.html\").exists()) {\n+                    error.append(\"config.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (reportDialog.isOConfig_StdValues()) {\n+                i = Tools.findInStringArray(urls, \"#selection\");\n+                if (i == -1) {\n+                    error.append(\"report doesn't contain url to standart values block\\n\");\n+                }\n+                if (!browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                    error.append(\"report doesn't contain standart values block\\n\");\n+                }\n+                if (!new File(htmlPath + \"excluded.html\").exists()) {\n+                    error.append(\"excluded.html wasn't found at the path '\" + htmlPath + \"'\\n\");\n+                }\n+            } else {\n+                i = Tools.findInStringArray(urls, \"#selection\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to standart values block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                    error.append(\"report contains standart values block while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"excluded.html\").exists()) {\n+                    error.append(\"excluded.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+\n+            if (reportDialog.isOConfig_TestEnv()) {\n+\/\/\t\t    i = findInStringArray(urls, \"#execution\");\n+\/\/\t\t    if (i == -1) {\n+\/\/\t\t\terror.append(\"report doesn't contain url to test enviroment ('How to run') block\\n\");\n+\/\/\t\t    }\n+                if (!browser.getText().contains(\"name=execution\") && !browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                    error.append(\"report doesn't contain test enviroment ('How to run') block\\n\");\n+                }\n+                if (!(new File(htmlPath + \"env.html\").exists())) {\n+                    error.append(\"env.html was not found at the path '\" + htmlPath + \"' while expected\\n\");\n+                }\n+            } else {\n+                i = Tools.findInStringArray(urls, \"#execution\");\n+                if (i != -1) {\n+                    error.append(\"report contains url to test enviroment ('How to run') block while unexpected\\n\");\n+                }\n+                if (browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                    error.append(\"report contains test enviroment ('How to run') block while unexpected\\n\");\n+                }\n+                if (new File(htmlPath + \"env.html\").exists()) {\n+                    error.append(\"env.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+                }\n+            }\n+        } else {\n+            i = Tools.findInStringArray(urls, \"#Configuration and Other Settings\");\n+            if (i != -1) {\n+                error.append(\"report contains configuration url '#Configuration and Other Settings' while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"Configuration and Other Settings\\\"\")) {\n+                error.append(\"report contains configuration block while unexpected\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"config.html\");\n+            if (i != -1) {\n+                error.append(\"report contains url to config.html while unexpected\\n\");\n+            }\n+            if (new File(htmlPath + \"config.html\").exists()) {\n+                error.append(\"config.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"#selection\");\n+            if (i != -1) {\n+                error.append(\"report contains url to standart values block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"selection\\\"\")) {\n+                error.append(\"report contains standart values block while unexpected\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"#locations\");\n+            if (i != -1) {\n+                error.append(\"report contains url to 'Where to put the results' block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"locations\\\"\")) {\n+                error.append(\"report contains 'Where to put the results' block while unexpected\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"#execution\");\n+            if (i != -1) {\n+                error.append(\"report contains url to test enviroment ('How to run') block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"execution\\\"\")) {\n+                error.append(\"report contains test enviroment ('How to run') block while unexpected\\n\");\n+            }\n+            if (new File(htmlPath + \"env.html\").exists()) {\n+                error.append(\"env.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+            if (new File(htmlPath + \"excluded.html\").exists()) {\n+                error.append(\"excluded.html was found at the path '\" + htmlPath + \"' while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isOKeywords()) {\n+            i = Tools.findInStringArray(urls, \"#Statistics\");\n+            if (i == -1) {\n+                error.append(\"report doesn't contain url to Statistics block (produced by options-keywords)\\n\");\n+            }\n+            if (!browser.getText().contains(\"name=Statistics\") && !browser.getText().contains(\"name=\\\"Statistics\\\"\")) {\n+                error.append(\"report doesn't contain Statistics block (produced by options-keywords)\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"#keywordSummary\");\n+            if (i == -1) {\n+                error.append(\"report doesn't contain url to keywordSummary block\\n\");\n+            }\n+            if (!browser.getText().contains(\"name=keywordSummary\") && !browser.getText().contains(\"name=\\\"keywordSummary\\\"\")) {\n+                error.append(\"report doesn't contain keywordSummary block\\n\");\n+            }\n+        } else {\n+            i = Tools.findInStringArray(urls, \"#Statistics\");\n+            if (i != -1) {\n+                error.append(\"report contains url to Statistics block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"Statistics\\\"\")) {\n+                error.append(\"report contains Statistics block while unexpected\\n\");\n+            }\n+            i = Tools.findInStringArray(urls, \"#keywordSummary\");\n+            if (i != -1) {\n+                error.append(\"report contains url to keywordSummary block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"keywordSummary\\\"\")) {\n+                error.append(\"report contains keywordSummary block while unexpected\\n\");\n+            }\n+        }\n+\n+        if (reportDialog.isOResults()) {\n+            i = Tools.findInStringArray(urls, \"#Results\");\n+            if (i == -1) {\n+                error.append(\"report doesn't contain url to Results block\\n\");\n+            }\n+            if (!browser.getText().contains(\"name=Results\") && !browser.getText().contains(\"name=\\\"Results\\\"\")) {\n+                error.append(\"report doesn't contain Results block\\n\");\n+            }\n+        } else {\n+            i = Tools.findInStringArray(urls, \"#Results\");\n+            if (i != -1) {\n+                error.append(\"report contains url to Results block while unexpected\\n\");\n+            }\n+            if (browser.getText().contains(\"name=\\\"Results\\\"\")) {\n+                error.append(\"report contains Results block while unexpected\\n\");\n+            }\n+        }\n+        if (error.length() > 0) {\n+            throw new JemmyException(error.toString());\n+        }\n+    }\n+\n+    private String getUrlToHtmlReportPage() {\n+        String[] urls = browser.getUrls();\n+        int i = -1;\n+        String t = \"\";\n+        if (reportDialog.isFPutInIndex()) {\n+            i = Tools.findInStringArray(urls, \"html\/index.html\");\n+            t = \"index\";\n+        } else {\n+            if (reportDialog.isFPutInReport()) {\n+                i = Tools.findInStringArray(urls, \"html\/report.html\");\n+                t = \"report\";\n+            } else {\n+                throw new JemmyException(\"NIY - nor index.html nor report.html selected\");\n+            }\n+        }\n+        if (i == -1) {\n+            throw new JemmyException(\"Url to html report page was not found. Tring to browse from '\" + browser.getPath().toString() + \"' to \" + t);\n+        }\n+\n+        return urls[i];\n+    }\n+\n+    public void goToHtmlReport(ReportType type) {\n+        String path = browser.getPath().getPath();\n+        if (path.equals(basePath + \"html\/report.html\") && type == ReportType.REPORT_HTML) {\n+            return;\n+        }\n+        if (path.equals(basePath + \"html\/index.html\") && type == ReportType.INDEX_HTML) {\n+            return;\n+        }\n+\n+        if (type == ReportType.INDEX_HTML && reportDialog.isFPutInIndex()) {\n+            if (!path.equals(basePath + \"index.html\")) {\n+                browser.home();\n+                browser.waitForPageLoading(\"<\/html>\", Test.TESTSUITENAME);\n+            }\n+            String url = getUrlToHtmlReportPage();\n+\n+            URL u = Tools.urlFile(basePath + File.separator + url);\n+            browser.clickUrl(u);\n+            browser.waitForPageLoading(\"<\/small><\/body><\/html>\", \"<title>\" + Test.WINDOWNAME + \" Harness : Report\");\n+        }\n+\n+        if (type == ReportType.REPORT_HTML && reportDialog.isFPutInReport()) {\n+            URL u = Tools.urlFile(basePath + File.separator + \"html\");\n+            browser.clickUrl(u);\n+            browser.waitForPageLoading(\"<\/html>\", \"Directory listing for html\");\n+            u = Tools.urlFile(basePath + File.separator + \"html\" + File.separator + \"report.html\");\n+            browser.clickUrl(u);\n+            browser.waitForPageLoading(\"<\/small><\/body><\/html>\", \"<title>\" + Test.WINDOWNAME + \" Harness : Report\");\n+        }\n+\n+        Tools.pause(1);\n+    }\n+\n+    public void commitMainCheck() {\n+        if (reportDialog.isFPutInIndex()) {\n+            goToHtmlReport(ReportType.INDEX_HTML);\n+            checkReportPage();\n+        }\n+        if (reportDialog.isFPutInReport()) {\n+            goToHtmlReport(ReportType.REPORT_HTML);\n+            checkReportPage();\n+        }\n+        if (!reportDialog.isFPutInIndex() && !reportDialog.isFPutInReport()) {\n+            throw new JemmyException(\"NIY\");\n+        }\n+\n+\n+    }\n+\n+    private StringBuffer checkFileUrls(String urls[]) {\n+        StringBuffer temp = new StringBuffer(\"\");\n+        boolean ts = false, wd = false, rp = false;\n+        for (int i = 0; i < urls.length; i++) {\n+            if (urls[i].equals(Test.LOCAL_PATH + Test.TEST_SUITE_NAME)) {\n+                ts = true;\n+            }\n+            if (urls[i].equals(Test.LOCAL_PATH + Test.REPORT_WD_PATH)) {\n+                wd = true;\n+            }\n+            if (urls[i].equals(basePath + \"html\")) {\n+                rp = true;\n+            }\n+        }\n+        if (!ts) {\n+            temp.append(\"Url for testsuite was not found\");\n+        }\n+        if (!wd) {\n+            temp.append(\"Url for workdirektory was not found\");\n+        }\n+        if (!rp) {\n+            temp.append(\"Url for report directory was not found\");\n+        }\n+        return temp;\n+    }\n+\n+    public KFLValues getKFLList() throws JemmyException {\n+        if (reportDialog.isFPutInIndex()) {\n+            goToHtmlReport(ReportType.INDEX_HTML);\n+            return checkKFLImpl();\n+        }\n+        if (reportDialog.isFPutInReport()) {\n+            goToHtmlReport(ReportType.REPORT_HTML);\n+            return checkKFLImpl();\n+        }\n+\n+        return null;\n+    }\n+\n+    private KFLValues checkKFLImpl() {\n+        String htmlPath = basePath + \"html\" + File.separator;\n+        String[] urls = browser.getUrls();\n+        StringBuilder error = new StringBuilder(\"\");\n+\n+        if (Tools.findInStringArray(urls, \"Known Failure Analysis\") >= 0) {\n+            error.append(\"Url to KFL block was not found\");\n+        }\n+\n+        KFLValues res = new KFLValues();\n+\n+        String text = browser.getText().replaceAll(\"[\\t\\n\\r\\f \\\"']\", \"\");\n+        if (!text.contains(KFL_1) && !text.contains(KFL_2)) {\n+            error.append(\"report doesn't contain Known Failure Analysis block\\n\");\n+        }\n+\n+        if (reportDialog.isKFLCheckForTestcases()) {\n+\n+            String s = TEST_CASES_TEXT;\n+            int i = text.indexOf(s);\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Test Cases column in KFL section while the option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf(')', i + s.length());\n+                res.testcases = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+\n+\n+            s = TC_F2P_LINK;\n+            i = text.indexOf(s);\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Fail2Passed TestCases link in KFL section while the option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.tc_f2p = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+\n+\n+            if (reportDialog.isKFLFail2Error()) {\n+                s = TC_F2E_LINK;\n+                i = text.indexOf(s);\n+                if (i < 0) {\n+                    error.append(\"report doesn't contain Fail2Error TestCases link in KFL section while the option is turned on\\n\");\n+                } else {\n+                    int j = text.indexOf('<', i + s.length());\n+                    res.tc_f2e = Integer.parseInt(text.substring(i + s.length(), j));\n+                }\n+            }\n+\n+\n+            s = TC_F2N_LINK;\n+            i = text.indexOf(s);\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Fail2NotRun TestCases link in KFL section while the option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.tc_f2n = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+\n+\n+            if (reportDialog.isKFLFail2Missing()) {\n+                s = TC_F2M_LINK;\n+                i = text.indexOf(s);\n+                if (i < 0) {\n+                    error.append(\"report doesn't contain Fail2Missing TestCases link in KFL section while the option is turned on\\n\");\n+                } else {\n+                    int j = text.indexOf('<', i + s.length());\n+                    res.tc_f2m = Integer.parseInt(text.substring(i + s.length(), j));\n+                }\n+            }\n+\n+\n+            s = TC_NEW_LINK;\n+            i = text.indexOf(s);\n+            if (i < 0) {\n+                error.append(\"report doesn't contain NewFailures TestCases link in KFL section while the option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.tc_nf = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+\n+\n+            if (reportDialog.isKFLFail2Fail()) {\n+                if (!text.contains(NOT_CALC)) {\n+                    error.append(\"report doesn't contain 'not calculated' label that should appear in Fail2Fail TestCases cell\\n\");\n+                }\n+            }\n+\n+        } else {\n+            if (text.contains(TEST_CASES_TEXT)) {\n+                error.append(\"report contain TestCases column while option is turned off\\n\");\n+            }\n+        }\n+\n+\n+        String s = F2F;\n+        int i = text.indexOf(s);\n+        if (reportDialog.isKFLFail2Fail()) {\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Fail2Fail link while option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.f2f = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+        } else {\n+            if (i > -1) {\n+                error.append(\"report contain Fail2Fail link while option is turned off\\n\");\n+            }\n+        }\n+\n+        s = F2E;\n+        i = text.indexOf(s);\n+        if (reportDialog.isKFLFail2Error()) {\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Fail2Error link while option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.f2e = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+        } else {\n+            if (i > -1) {\n+                error.append(\"report contain Fail2Error link while option is turned off\\n\");\n+            }\n+        }\n+\n+\n+        s = F2M;\n+        i = text.indexOf(s);\n+        if (reportDialog.isKFLFail2Missing()) {\n+            if (i < 0) {\n+                error.append(\"report doesn't contain Fail2Missing link while option is turned on\\n\");\n+            } else {\n+                int j = text.indexOf('<', i + s.length());\n+                res.f2m = Integer.parseInt(text.substring(i + s.length(), j));\n+            }\n+        } else {\n+            if (i > -1) {\n+                error.append(\"report contain Fail2Missing link while option is turned off\\n\");\n+            }\n+        }\n+\n+\n+        s = TESTS_TEXT;\n+        i = text.indexOf(s);\n+        if (i < 0) {\n+            error.append(\"report doesn't contain 'Tests' label\\n\");\n+        } else {\n+            int j = text.indexOf(')', i + s.length());\n+            res.tests = Integer.parseInt(text.substring(i + s.length(), j));\n+        }\n+\n+\n+        s = F2P;\n+        i = text.indexOf(s);\n+        if (i < 0) {\n+            error.append(\"report doesn't contain Fail2Pass link\\n\");\n+        } else {\n+            int j = text.indexOf('<', i + s.length());\n+            res.f2p = Integer.parseInt(text.substring(i + s.length(), j));\n+        }\n+\n+\n+        s = F2N;\n+        i = text.indexOf(s);\n+        if (i < 0) {\n+            error.append(\"report doesn't contain Fail2NotRun link\\n\");\n+        } else {\n+            int j = text.indexOf('<', i + s.length());\n+            res.f2n = Integer.parseInt(text.substring(i + s.length(), j));\n+        }\n+\n+\n+        s = NF;\n+        i = text.indexOf(s);\n+        if (i < 0) {\n+            error.append(\"report doesn't contain NewFailures link\\n\");\n+        } else {\n+            int j = text.indexOf('<', i + s.length());\n+            res.nf = Integer.parseInt(text.substring(i + s.length(), j));\n+        }\n+\n+        if (error.length() > 0) {\n+            throw new JemmyException(error.toString() + \"\\n\" + text);\n+        }\n+\n+        return res;\n+    }\n+\n+    public static class KFLValues {\n+\n+        public KFLValues() {\n+        }\n+\n+        public KFLValues(int tests, int f2f, int f2e, int f2p, int f2m, int f2n, int nf, int testcases, int tc_f2e, int tc_f2p, int tc_f2m, int tc_f2n, int tc_nf) {\n+            this.tc_f2e = tc_f2e;\n+            this.tc_f2p = tc_f2p;\n+            this.tc_f2m = tc_f2m;\n+            this.tc_f2n = tc_f2n;\n+            this.tc_nf = tc_nf;\n+            this.f2f = f2f;\n+            this.f2e = f2e;\n+            this.f2p = f2p;\n+            this.f2m = f2m;\n+            this.f2n = f2n;\n+            this.nf = nf;\n+            this.tests = tests;\n+            this.testcases = testcases;\n+        }\n+        public int tc_f2e = -1;\n+        public int tc_f2p = -1;\n+        public int tc_f2m = -1;\n+        public int tc_f2n = -1;\n+        public int tc_nf = -1;\n+        public int f2f = -1;\n+        public int f2e = -1;\n+        public int f2p = -1;\n+        public int f2m = -1;\n+        public int f2n = -1;\n+        public int nf = -1;\n+        public int tests = -1;\n+        public int testcases = -1;\n+\n+        @Override\n+        public String toString() {\n+            return String.format(\"tests %d f2f %d f2e %d f2p %d f2m %d f2n %d nf %d testcases %d tc_f2e %d tc_f2p %d tc_f2m %d tc_f2n %d tc_nf %d\", tests, f2f, f2e, f2p, f2m, f2n, nf, testcases, tc_f2e, tc_f2p, tc_f2m, tc_f2n, tc_nf);\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (obj == null) {\n+                return false;\n+            }\n+            if (getClass() != obj.getClass()) {\n+                return false;\n+            }\n+            final KFLValues other = (KFLValues) obj;\n+            if (this.tc_f2e != other.tc_f2e) {\n+                return false;\n+            }\n+            if (this.tc_f2p != other.tc_f2p) {\n+                return false;\n+            }\n+            if (this.tc_f2m != other.tc_f2m) {\n+                return false;\n+            }\n+            if (this.tc_f2n != other.tc_f2n) {\n+                return false;\n+            }\n+            if (this.tc_nf != other.tc_nf) {\n+                return false;\n+            }\n+            if (this.f2f != other.f2f) {\n+                return false;\n+            }\n+            if (this.f2e != other.f2e) {\n+                return false;\n+            }\n+            if (this.f2p != other.f2p) {\n+                return false;\n+            }\n+            if (this.f2m != other.f2m) {\n+                return false;\n+            }\n+            if (this.f2n != other.f2n) {\n+                return false;\n+            }\n+            if (this.nf != other.nf) {\n+                return false;\n+            }\n+            if (this.tests != other.tests) {\n+                return false;\n+            }\n+            if (this.testcases != other.testcases) {\n+                return false;\n+            }\n+            return true;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            int hash = 3;\n+            hash = 37 * hash + this.tc_f2e;\n+            hash = 37 * hash + this.tc_f2p;\n+            hash = 37 * hash + this.tc_f2m;\n+            hash = 37 * hash + this.tc_f2n;\n+            hash = 37 * hash + this.tc_nf;\n+            hash = 37 * hash + this.f2f;\n+            hash = 37 * hash + this.f2e;\n+            hash = 37 * hash + this.f2p;\n+            hash = 37 * hash + this.f2m;\n+            hash = 37 * hash + this.f2n;\n+            hash = 37 * hash + this.nf;\n+            hash = 37 * hash + this.tests;\n+            hash = 37 * hash + this.testcases;\n+            return hash;\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/ReportChecker.java","additions":725,"deletions":0,"binary":false,"changes":725,"status":"added"},{"patch":"@@ -0,0 +1,413 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import javax.swing.JCheckBox;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class ReportDialog {\n+\n+    private JDialogOperator rep;\n+    private final String TAB_FILES_NAME = \"HTML Files\";\n+    private final String TAB_OPTIONS_NAME = \"HTML Options\";\n+    private Tabs tab;\n+    private boolean fPutInIndex, fPutInReport, fGeneratePassed, fGenerateError, fGenerateFailed,\n+            fGenerateNotRun;\n+    private boolean eBackUp;\n+    private int eBackUpNum;\n+\n+    public boolean isEBackUp() {\n+        return eBackUp;\n+    }\n+\n+    public int getEBackUpNum() {\n+        return eBackUpNum;\n+    }\n+\n+    public boolean isFGenerateError() {\n+        return fGenerateError;\n+    }\n+\n+    public boolean isFGenerateFailed() {\n+        return fGenerateFailed;\n+    }\n+\n+    public boolean isFGenerateNotRun() {\n+        return fGenerateNotRun;\n+    }\n+\n+    public boolean isFGeneratePassed() {\n+        return fGeneratePassed;\n+    }\n+\n+    public boolean isFPutInIndex() {\n+        return fPutInIndex;\n+    }\n+\n+    public boolean isFPutInReport() {\n+        return fPutInReport;\n+    }\n+\n+    public boolean isOConfig() {\n+        return oConfig;\n+    }\n+\n+    public boolean isOConfig_QuestionLog() {\n+        return oConfig_QuestionLog;\n+    }\n+\n+    public boolean isOConfig_StdValues() {\n+        return oConfig_StdValues;\n+    }\n+\n+    public boolean isOConfig_TestEnv() {\n+        return oConfig_TestEnv;\n+    }\n+\n+    public boolean isOKeywords() {\n+        return oKeywords;\n+    }\n+\n+    public boolean isOResults() {\n+        return oResults;\n+    }\n+    private boolean oConfig, oConfig_QuestionLog, oConfig_TestEnv, oConfig_StdValues, oResults, oKeywords, kflTC, kflf2f, kflf2e, kflf2m;\n+\n+    public boolean isKFLCheckForTestcases() {\n+        return kflTC;\n+    }\n+\n+    public boolean isKFLFail2Fail() {\n+        return kflf2f;\n+    }\n+\n+    public boolean isKFLFail2Error() {\n+        return kflf2e;\n+    }\n+\n+    public boolean isKFLFail2Missing() {\n+        return kflf2m;\n+    }\n+\n+    public enum Tabs {\n+\n+        HTML_FILES_TAB, HTML_OPTIONS_TAB, KFL_OPTIONS_TAB, UNSET\n+    }\n+\n+    public ReportDialog(JDialogOperator d) {\n+        rep = d;\n+        tab = Tabs.HTML_OPTIONS_TAB;\n+        select();\n+    }\n+\n+    public ReportDialog(JDialogOperator d, boolean init) {\n+        rep = d;\n+        tab = Tabs.UNSET;\n+        select();\n+\n+        if (init) {\n+            eBackUp = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.backup.bak\")).isSelected();\n+            eBackUpNum = Integer.parseInt(Tools.getTextField(rep, Tools.getExecResource(\"nrd.backup.bak.level.lbl\")).getText());\n+            selectTab(Tabs.HTML_FILES_TAB);\n+            fPutInIndex = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).isSelected();\n+            fPutInReport = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).isSelected();\n+            fGeneratePassed = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).isSelected();\n+            fGenerateError = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).isSelected();\n+            fGenerateFailed = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).isSelected();\n+            fGenerateNotRun = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).isSelected();\n+            selectTab(Tabs.HTML_OPTIONS_TAB);\n+            oConfig = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).isSelected();\n+            oConfig_QuestionLog = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).isSelected();\n+            oConfig_TestEnv = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).isSelected();\n+            oConfig_StdValues = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).isSelected();\n+            oResults = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).isSelected();\n+            oKeywords = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).isSelected();\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+            kflTC = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.checktc\")).isSelected();\n+            kflf2e = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2e\")).isSelected();\n+            kflf2f = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2f\")).isSelected();\n+            kflf2m = new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.missing\")).isSelected();\n+        } else {\n+            setExtraBackUp(true);\n+            setExtraBackUpNum(1);\n+            setFilesAll(true);\n+            setOptionsAll(true);\n+            setKFLAll(true);\n+        }\n+    }\n+\n+    private void select() {\n+        setHtmlChecked(rep, true);\n+    }\n+\n+    public static boolean setHtmlChecked(JDialogOperator rep, boolean set) {\n+        JCheckBox element = getListElement(rep, 0);\n+        boolean temp = element.isSelected();\n+        element.setSelected(set);\n+        return temp;\n+    }\n+\n+    public boolean setHtmlChecked(boolean set) {\n+        JCheckBox element = getListElement(rep, 0);\n+        boolean temp = element.isSelected();\n+        element.setSelected(set);\n+        return temp;\n+    }\n+\n+    public boolean setXmlChecked(boolean set) {\n+        JCheckBox element = getListElement(rep, 2);\n+        boolean temp = element.isSelected();\n+        element.setSelected(set);\n+        return temp;\n+    }\n+\n+    public boolean setPlainChecked(boolean set) {\n+        JCheckBox element = getListElement(rep, 1);\n+        boolean temp = element.isSelected();\n+        element.setSelected(set);\n+        return temp;\n+    }\n+\n+    public boolean setTypeChecked(int num, boolean set) {\n+        JCheckBox element = getListElement(rep, num);\n+        boolean temp = element.isSelected();\n+        element.setSelected(set);\n+        return temp;\n+    }\n+\n+    public static JCheckBox getListElement(JDialogOperator rep, int index) {\n+        JListOperator types = getList(rep);\n+        return (JCheckBox) types.getModel().getElementAt(index);\n+    }\n+\n+    public static JListOperator getList(JDialogOperator rep) {\n+        JListOperator types = new JListOperator(rep, new NameComponentChooser(\"nrd.typel\"));\n+        return types;\n+    }\n+\n+    public void selectTab(Tabs tab) {\n+        switch (tab) {\n+            case HTML_FILES_TAB:\n+                new JTabbedPaneOperator(rep, new NameComponentChooser(\"nrd.tabs\")).selectPage(TAB_FILES_NAME);\n+                break;\n+            case HTML_OPTIONS_TAB:\n+                new JTabbedPaneOperator(rep, new NameComponentChooser(\"nrd.tabs\")).selectPage(TAB_OPTIONS_NAME);\n+                break;\n+        }\n+        this.tab = Tabs.HTML_FILES_TAB;\n+    }\n+\n+    public void setExtraBackUp(boolean b) {\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.backup.bak\")).setSelected(b);\n+        eBackUp = b;\n+    }\n+\n+    public void setExtraBackUpNum(Integer num) {\n+        Tools.getTextField(rep, Tools.getExecResource(\"nrd.backup.bak.level.lbl\")).typeText(num.toString());\n+        eBackUpNum = num;\n+    }\n+\n+    public void setFilesPutInIndex(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).setSelected(b);\n+        fPutInIndex = b;\n+    }\n+\n+    public void setFilesPutInReport(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).setSelected(b);\n+        fPutInReport = b;\n+    }\n+\n+    public void setFilesGeneratePassedTests(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).setSelected(b);\n+        fGeneratePassed = b;\n+    }\n+\n+    public void setFilesGenerateErrorTests(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).setSelected(b);\n+        fGenerateError = b;\n+    }\n+\n+    public void setFilesGenerateFailedTests(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).setSelected(b);\n+        fGenerateFailed = b;\n+    }\n+\n+    public void setFilesGenerateNotRunTests(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).setSelected(b);\n+        fGenerateNotRun = b;\n+    }\n+\n+    public void setOptionsConfiguration(boolean config, boolean questionLog, boolean testEnviroment, boolean standartVal) {\n+        if (tab != Tabs.HTML_OPTIONS_TAB) {\n+            selectTab(Tabs.HTML_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).setSelected(config);\n+        oConfig = config;\n+        if (config) {\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).setSelected(questionLog);\n+            oConfig_QuestionLog = questionLog;\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).setSelected(testEnviroment);\n+            oConfig_TestEnv = testEnviroment;\n+            new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).setSelected(standartVal);\n+            oConfig_StdValues = standartVal;\n+        } else {\n+            oConfig_QuestionLog = oConfig_StdValues = oConfig_TestEnv = false;\n+        }\n+    }\n+\n+    public void setOptionsResults(boolean b) {\n+        if (tab != Tabs.HTML_OPTIONS_TAB) {\n+            selectTab(Tabs.HTML_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).setSelected(b);\n+        oResults = b;\n+    }\n+\n+    public void setOptionsKeyword(boolean b) {\n+        if (tab != Tabs.HTML_OPTIONS_TAB) {\n+            selectTab(Tabs.HTML_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).setSelected(b);\n+        oKeywords = b;\n+    }\n+\n+    public void setOptionsAll(boolean b) {\n+        if (tab != Tabs.HTML_OPTIONS_TAB) {\n+            selectTab(Tabs.HTML_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.ql\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.env\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.std\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.config\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.res\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlops.kw\")).setSelected(b);\n+        oConfig = oConfig_QuestionLog = oConfig_StdValues = oConfig_TestEnv = oKeywords = oResults = b;\n+    }\n+\n+    public void setFilesAll(boolean b) {\n+        if (tab != Tabs.HTML_FILES_TAB) {\n+            selectTab(Tabs.HTML_FILES_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.nr\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.fail\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.err\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.pass\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.rpt\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlf.idx\")).setSelected(b);\n+        fGenerateError = fGenerateFailed = fGenerateNotRun = fGeneratePassed = fPutInIndex = fPutInReport = b;\n+    }\n+\n+    public void setKFLAll(boolean b) {\n+        if (tab != Tabs.KFL_OPTIONS_TAB) {\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.checktc\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2e\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2f\")).setSelected(b);\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.missing\")).setSelected(b);\n+        kflTC = kflf2e = kflf2f = kflf2m = b;\n+    }\n+\n+    public void setKFLCheckForTestcases(boolean b) {\n+        if (kflTC == b) \n+            return;\n+        if (tab != Tabs.KFL_OPTIONS_TAB) {\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.checktc\")).setSelected(b);\n+        kflTC = b;\n+    }\n+\n+    public void setKFLFail2Fail(boolean b) {\n+        if (kflf2f == b) \n+            return;\n+        if (tab != Tabs.KFL_OPTIONS_TAB) {\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2f\")).setSelected(b);\n+        kflf2f = b;\n+    }\n+\n+    public void setKFLFail2Error(boolean b) {\n+        if (kflf2e == b) \n+            return;\n+        if (tab != Tabs.KFL_OPTIONS_TAB) {\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.f2e\")).setSelected(b);\n+        kflf2e = b;\n+    }\n+\n+    public void setKFLFail2Missing(boolean b) {\n+        if (kflf2m == b) \n+            return;\n+        if (tab != Tabs.KFL_OPTIONS_TAB) {\n+            selectTab(Tabs.KFL_OPTIONS_TAB);\n+        }\n+        new JCheckBoxOperator(rep, new NameComponentChooser(\"nrd.htmlkfl.missing\")).setSelected(b);\n+        kflf2m = b;\n+    }\n+\n+    public void setPath(String path) {\n+        new JButtonOperator(rep, Tools.getExecResource(\"nrd.browse.btn\")).push();\n+        JDialogOperator browser = new JDialogOperator(\"Report Directory\");\n+        Tools.getTextField(browser, \"File Name:\").typeText(path);\n+        new JButtonOperator(browser, \"Open\").push();\n+    }\n+\n+    public void pushCreate() {\n+        new JButtonOperator(rep, Tools.getExecResource(\"nrd.ok.btn\")).push();\n+    }\n+\n+    public static JDialogOperator findShowReportDialog() {\n+        return new JDialogOperator(Tools.getExecResource(\"nrd.showReport.title\"));\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/ReportDialog.java","additions":413,"deletions":0,"binary":false,"changes":413,"status":"added"},{"patch":"@@ -0,0 +1,194 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+\n+public abstract class Task<resType> extends Thread {\n+\n+    private final Object workingLock = new Object();\n+    protected resType result;\n+    protected Throwable exception = null;\n+\n+    public static enum State {\n+\n+        NOT_RUN, WORKING, INTERUPPED, FINISHED, PAUSED\n+    }\n+    private State state = State.NOT_RUN;\n+\n+    public Task() {\n+        this(true);\n+    }\n+\n+    public Task(boolean start) {\n+        super();\n+        init();\n+        if (start) {\n+            this.start();\n+        }\n+    }\n+\n+    protected void init() {\n+    }\n+\n+    public final State getTaskState() {\n+        if (exception != null) {\n+            throw new RuntimeException(exception);\n+        }\n+        return state;\n+    }\n+\n+    public synchronized void interruptTask() {\n+        if (exception != null) {\n+            throw new RuntimeException(exception);\n+        }\n+        if (state != State.FINISHED) {\n+            this.interrupt();\n+            state = State.INTERUPPED;\n+            interruptImpl();\n+        }\n+    }\n+\n+    protected void interruptImpl() {\n+    }\n+\n+    public synchronized void pause() {\n+        if (exception != null) {\n+            throw new RuntimeException(exception);\n+        }\n+        if (state != State.INTERUPPED && state != State.FINISHED) {\n+            state = State.INTERUPPED;\n+            pauseImpl();\n+        }\n+    }\n+\n+    protected void pauseImpl() {\n+    }\n+\n+    public void waitForDone() {\n+        synchronized (workingLock) {\n+            if (exception != null) {\n+                throw new RuntimeException(exception);\n+            }\n+        }\n+        return;\n+    }\n+\n+    public resType getResult() {\n+        synchronized (workingLock) {\n+            if (exception != null) {\n+                throw new RuntimeException(exception);\n+            }\n+            return result;\n+        }\n+    }\n+\n+    protected abstract void runImpl() throws Throwable;\n+\n+    @Override\n+    public final void run() {\n+        synchronized (workingLock) {\n+            state = State.WORKING;\n+            try {\n+                runImpl();\n+                state = State.FINISHED;\n+            } catch (Throwable ex) {\n+                exception = ex;\n+                state = State.INTERUPPED;\n+            }\n+        }\n+    }\n+\n+    public final void startAndWaitForDone() {\n+        if (state == State.NOT_RUN) {\n+            start();\n+        }\n+        waitForDone();\n+    }\n+\n+    @Override\n+    public final void start() {\n+        super.start();\n+        while (state == State.NOT_RUN) {\n+            Thread.yield();\n+        }\n+    }\n+\n+    public abstract static class Waiter extends Task<Boolean> {\n+\n+        protected int maxTimeToWaitMS;\n+        protected int stepMS;\n+\n+        public Waiter() {\n+            this(true, 10000, 100);\n+        }\n+\n+        public Waiter(int maxtime) {\n+            this(true, maxtime, 100);\n+        }\n+\n+        public Waiter(int maxtime, int step) {\n+            this(true, maxtime, step);\n+        }\n+\n+        public Waiter(boolean start, int maxtime, int step) {\n+            super(start);\n+            maxTimeToWaitMS = maxtime;\n+            stepMS = step;\n+            init();\n+        }\n+\n+        public Waiter(boolean start) {\n+            this(start, 10000, 100);\n+        }\n+\n+        @Override\n+        protected void runImpl() throws InterruptedException {\n+            int t = 0;\n+            while (!check() && super.getTaskState() == State.WORKING) {\n+                if (t > maxTimeToWaitMS) {\n+                    result = false;\n+                    exception = new TimeoutExpiredException(getTimeoutExceptionDescription());\n+                    return;\n+                }\n+                Waiter.sleep(stepMS);\n+                t += stepMS;\n+            }\n+            result = true;\n+        }\n+        \n+        public void stopWaiter() {\n+            interruptTask();\n+        }\n+\n+        protected abstract boolean check();\n+\n+        protected String getTimeoutExceptionDescription() {\n+            return \"Timeout expired in waiter task \" + this;\n+        }\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/Task.java","additions":194,"deletions":0,"binary":false,"changes":194,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.tools;\n+\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestSuite {\n+    private final JTFrame mainFrame;\n+    private String name;\n+    public static String OPEN_TEST_SUITE_DIALOG_NAME_TI18N = \"tsc.title\";\n+\n+    TestSuite(JTFrame mainFrame) {\n+\tthis.mainFrame = mainFrame;\n+    }\n+\n+    public void openTestSuite(String path) {\n+\tmainFrame.getFile_Open_TestSuiteMenu().pushNoBlock();\n+\tJDialogOperator openDialog = new JDialogOperator(getOpenTestSuiteDialogName());\n+\tnew JTextFieldOperator(openDialog, \"\").enterText(path);\n+\tname = path;\n+    }\n+\n+    public String getName() {\n+\treturn name;\n+    }\n+\n+    public static String getOpenTestSuiteDialogName() {\n+\treturn Tools.getToolResource(OPEN_TEST_SUITE_DIALOG_NAME_TI18N);\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/TestSuite.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,217 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.awt.event.MouseEvent;\n+import java.util.LinkedList;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.swing.Icon;\n+import javax.swing.JLabel;\n+import javax.swing.tree.TreePath;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.TimeoutExpiredException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JPopupMenuOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class TestTree {\n+\n+\tprivate JTreeOperator tree;\n+\tprivate JTFrame frame;\n+\n+\tpublic TestTree(JTFrame mainFrame) {\n+\t\ttree = new JTreeOperator(mainFrame.getJFrameOperator());\n+\t\tframe = mainFrame;\n+\t}\n+\n+\tpublic boolean[] getRowsVisibility() {\n+\t\tint rows = tree.getVisibleRowCount();\n+\t\tboolean[] visibleRows = new boolean[rows];\n+\t\tfor (int i = 0; i < rows; i++) {\n+\t\t\tvisibleRows[i] = tree.isVisible(tree.getPathForRow(i));\n+\t\t}\n+\t\treturn visibleRows;\n+\t}\n+\n+\tpublic TreePath[] getVisibleRows() {\n+\t\tint rows = tree.getVisibleRowCount();\n+\t\tLinkedList<TreePath> paths = new LinkedList<TreePath>();\n+\t\tfor (int i = 0; i < rows; i++) {\n+\t\t\tTreePath path = tree.getPathForRow(i);\n+\t\t\tif (tree.isVisible(path)) {\n+\t\t\t\tpaths.add(path);\n+\t\t\t}\n+\t\t}\n+\t\treturn paths.toArray(new TreePath[0]);\n+\t}\n+\n+\tpublic int getVisibleRowCount() {\n+\t\tint rows = tree.getRowCount();\n+\t\tint count = 0;\n+\t\tfor (int i = 0; i < rows; i++) {\n+\t\t\tif (tree.isVisible(tree.getPathForRow(i))) {\n+\t\t\t\tcount++;\n+\t\t\t}\n+\t\t}\n+\t\treturn count;\n+\t}\n+\n+\tpublic Icon getIcon(int row) {\n+\t\treturn (((JLabel) tree.getRenderedComponent(tree.getPathForRow(row))).getIcon());\n+\t}\n+\n+\tpublic Icon getIcon(TreePath path) {\n+\t\treturn (((JLabel) tree.getRenderedComponent(path)).getIcon());\n+\t}\n+\n+\tpublic TreePath[] click(TreePath path) {\n+\t\ttree.clickOnPath(path, 2);\n+\t\treturn tree.getChildPaths(path);\n+\t}\n+\n+\tpublic TreePath[] click(int row) {\n+\t\tTreePath path = tree.getPathForRow(row);\n+\t\ttree.clickOnPath(path, 2);\n+\t\treturn tree.getChildPaths(path);\n+\t}\n+\n+\tpublic void clickPopup(TreePath path) {\n+\t\ttree.clickOnPath(path, 1, MouseEvent.BUTTON3_MASK);\n+\t}\n+\n+\tpublic void clickPopup(int row) {\n+\t\tTreePath path = tree.getPathForRow(row);\n+\t\ttree.clickOnPath(path, 1, MouseEvent.BUTTON3_MASK);\n+\t}\n+\n+\tpublic TreePath getRoot() {\n+\t\treturn tree.getPathForRow(0);\n+\t}\n+\n+\tpublic boolean isVisible(TreePath path) {\n+\t\treturn tree.isVisible(path);\n+\t}\n+\n+\tpublic boolean isExpanded(TreePath path) {\n+\t\treturn tree.isExpanded(path);\n+\t}\n+\n+\tpublic void waitForExpand(TreePath path) {\n+\t\tint time = 0;\n+\t\ttry {\n+\t\t\twhile (time < Tools.MAX_WAIT_TIME) {\n+\t\t\t\tThread.sleep(50);\n+\t\t\t\ttime += 50;\n+\t\t\t\tif (isExpanded(path)) {\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tthrow new TimeoutExpiredException(\"Waiting for expanding path \" + path);\n+\t\t} catch (InterruptedException ex) {\n+\t\t\tLogger.getLogger(TestTree.class.getName()).log(Level.SEVERE, null, ex);\n+\t\t\tthrow new JemmyException(\"Exception occured\", ex);\n+\t\t}\n+\t}\n+\n+\tpublic void waitForCollapse(TreePath path) {\n+\t\tint time = 0;\n+\t\ttry {\n+\t\t\twhile (time < Tools.MAX_WAIT_TIME) {\n+\t\t\t\tThread.sleep(50);\n+\t\t\t\ttime += 50;\n+\t\t\t\tif (tree.isCollapsed(path)) {\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tthrow new TimeoutExpiredException(\"Waiting for collapsing path \" + path);\n+\t\t} catch (InterruptedException ex) {\n+\t\t\tLogger.getLogger(TestTree.class.getName()).log(Level.SEVERE, null, ex);\n+\t\t\tthrow new JemmyException(\"Exception occured\", ex);\n+\t\t}\n+\t}\n+\n+\tpublic void selectRows(int... rows) {\n+\t\ttree.setSelectionRows(rows);\n+\t}\n+\n+\tpublic TreePath[] getSelectedRows() {\n+\t\treturn tree.getSelectionPaths();\n+\t}\n+\n+\tpublic int[] getSelectedRowsIndexes() {\n+\t\treturn tree.getSelectionRows();\n+\t}\n+\n+\tpublic boolean isTest(TreePath path) {\n+\t\treturn tree.getModel().isLeaf(path.getLastPathComponent());\n+\t}\n+\n+\tpublic boolean isDirectory(TreePath path) {\n+\t\treturn !isTest(path);\n+\t}\n+\n+\tpublic TreePath getPathForRow(int i) {\n+\t\treturn tree.getPathForRow(i);\n+\t}\n+\n+\tpublic void clearResults() {\n+\t\tclickPopup(getRoot());\n+\t\tnew JPopupMenuOperator(frame.getJFrameOperator()).pushMenuNoBlock(\"Clear Results\");\n+\t\tnew JButtonOperator(new JDialogOperator(\"Confirm Clear Operation\"), \"Yes\").push();\n+\t\tnew Task.Waiter() {\n+\n+\t\t\t@Override\n+\t\t\tprotected boolean check() {\n+\t\t\t\treturn frame.getPassedCounter() == 0 && frame.getNotRunCounter() == frame.getAllTestsCounter();\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tprotected String getTimeoutExceptionDescription() {\n+\t\t\t\treturn \"Timeout expired while waiting for clearing tests\";\n+\t\t\t}\n+\t\t}.waitForDone();\n+\t}\n+\n+\tpublic Task<Boolean> runTests() {\n+\t\tif (tree.getSelectionCount() < 1) {\n+\t\t\treturn frame.runTests(0);\n+\t\t}\n+                \n+                return frame.runTests(tree.getSelectionRows()[0]);\n+\t}\n+\n+\tpublic Task<Boolean> runAllTests() {\n+\t\treturn frame.runTests(0);\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/TestTree.java","additions":217,"deletions":0,"binary":false,"changes":217,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class WorkDirectory {\n+\n+\tprivate String fullPath;\n+\tprivate final JTFrame mainFrame;\n+\tpublic static String TO_DELETE_TEMP_WD_NAME = \"some_temp_wd_that_will_be_deleted\";\n+\n+\tpublic enum WDStatus {\n+\n+\t\tALL_PASSED, SOME_FAILED, SOME_ERRORS, SOME_NOTRUN\n+\t}\n+\n+\tWorkDirectory(JTFrame mainFrame) {\n+\t\tthis.mainFrame = mainFrame;\n+\t}\n+\n+\tpublic WorkDirectoryBrowser openWorkDirectoryCreation() {\n+\t\tmainFrame.getFile_CreateWorkDirectoryMenu().pushNoBlock();\n+\t\treturn WorkDirectoryBrowser.create();\n+\t}\n+\n+\tpublic WorkDirectoryBrowser openWorkDirectoryOpening() {\n+\t\tmainFrame.getFile_Open_WorkDirectoryMenu().pushNoBlock();\n+\t\treturn WorkDirectoryBrowser.open();\n+\t}\n+\n+\tpublic File createWorkDirectory(String path, String name, boolean delete) {\n+\t\tfullPath = path + File.separator + name;\n+\t\tFile file = new File(fullPath);\n+\t\tif (delete) {\n+\t\t\tTools.deleteDirectory(file);\n+\t\t}\n+\n+\t\tWorkDirectoryBrowser browser = openWorkDirectoryCreation();\n+\t\tbrowser.setPath(path);\n+\t\tbrowser.setName(name);\n+\t\tbrowser.commit();\n+\n+\t\treturn file;\n+\t}\n+\n+\tpublic File createWorkDirectory(String name, boolean delete) {\n+\t\tfullPath = Tools.LOCAL_PATH + File.separator + name;\n+\t\tFile file = new File(fullPath);\n+\t\tif (delete) {\n+\t\t\tTools.deleteDirectory(file);\n+\t\t}\n+\n+\t\tWorkDirectoryBrowser browser = openWorkDirectoryCreation();\n+\t\tbrowser.setFullPath(name);\n+\t\tbrowser.commit();\n+\n+\t\treturn file;\n+\t}\n+\n+\tpublic File createWorkDirectoryInTemp() {\n+\t\tint attempts = 0;\n+\t\tFile temp = new File(Tools.TEMP_PATH);\n+\t\tif (!temp.exists()) {\n+\t\t\ttemp.mkdirs();\n+\t\t}\n+\n+\t\tWorkDirectoryBrowser browser = openWorkDirectoryCreation();\n+\n+\t\tString wdName = Tools.TEMP_WD_NAME;\n+\t\tFile file = null;\n+\t\twhile (attempts < 10) {\n+\t\t\tString path = Tools.TEMP_PATH + wdName;\n+\t\t\tfile = new File(path);\n+\t\t\tif (!file.exists()) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tTools.deleteDirectory(file);\n+\t\t\tfile = new File(path);\n+\t\t\tif (!file.exists()) {\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\twdName = Tools.TEMP_WD_NAME + (int) (Math.random() * 10000);\n+\t\t\tattempts++;\n+\t\t}\n+\t\tif (attempts >= 10) {\n+\t\t\tthrow new JemmyException(\"error\");\n+\t\t}\n+\n+\t\tbrowser.setPath(Tools.TEMP_PATH, wdName);\n+\/\/\t\tbrowser.setName(wdName);\n+\t\tbrowser.commit();\n+\n+\t\treturn file;\n+\t}\n+\n+\tpublic File openWorkDirectory(String path, String name) {\n+\t\tfullPath = path + File.separator + name;\n+\t\tFile file = new File(fullPath);\n+\n+\t\tWorkDirectoryBrowser browser = openWorkDirectoryOpening();\n+\t\tbrowser.setPath(path);\n+\t\tbrowser.setName(name);\n+\t\tbrowser.commit();\n+\n+\t\treturn file;\n+\t}\n+\n+\tpublic File openWorkDirectory(File wd) {\n+\t\tfullPath = wd.getAbsolutePath();\n+\t\tFile file = new File(fullPath);\n+\n+\t\tWorkDirectoryBrowser browser = openWorkDirectoryOpening();\n+\t\tbrowser.setFullPath(fullPath);\n+\t\tbrowser.commit();\n+\n+\t\treturn file;\n+\t}\n+\n+\tpublic void waitForStatus(WDStatus status) {\n+\t\tnew JTextFieldOperator(mainFrame.getJFrameOperator(), Tools.getExecResource(\"br.worst.\" + status.ordinal()));\n+\t}\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/WorkDirectory.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,195 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.tools;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+import jthtest.Tools;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class WorkDirectoryBrowser {\n+\n+\tpublic static final String OPEN_DIALOG_TI18N_NAME = \"wdc.open.title\";\n+\tpublic static final String CREATE_DIALOG_TI18N_NAME = \"wdc.new.title\";\n+\tpublic static final String CREATE_BUTTON_TI18N_NAME = \"wdc.new.btn\";\n+\tpublic static final String OPEN_BUTTON_TI18N_NAME = \"wdc.open.btn\";\n+\tpublic static final String CANCEL_BUTTON_TI18N_NAME = \"uif.cancel.btn\";\n+\tpublic static final String[] TEXT_FIELD_NAMES = {\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"};\n+\tprivate Types type;\n+\tprivate JDialogOperator dialog;\n+\tprivate boolean opened = false;\n+\tprivate String path = \"\";\n+\tprivate String name = \"\";\n+\tprivate String fullPath = \"\";\n+\n+\tpublic static enum Types {\n+\n+\t\tCREATE, OPEN\n+\t};\n+\n+\tprivate WorkDirectoryBrowser(Types type) {\n+\t\tthis.type = type;\n+\t\tswitch (type) {\n+\t\t\tcase CREATE:\n+\t\t\t\tdialog = new JDialogOperator(getCreateWorkDirectoryDialogName());\n+\t\t\t\tbreak;\n+\t\t\tcase OPEN:\n+\t\t\t\tdialog = new JDialogOperator(getOpenWorkDirectoryDialogName());\n+\t\t\t\tbreak;\n+\t\t}\n+\t\topened = true;\n+\t}\n+\n+\tpublic static WorkDirectoryBrowser create() {\n+\t\treturn new WorkDirectoryBrowser(Types.CREATE);\n+\t}\n+\n+\tpublic static WorkDirectoryBrowser open() {\n+\t\treturn new WorkDirectoryBrowser(Types.OPEN);\n+\t}\n+\n+        public void setPath(String path, String name) {\n+            if (opened) {\n+                if ((\"true\").equalsIgnoreCase(System.getProperty(\"com.sun.javatest.exec.templateMode\"))) {\n+                    setPath(path);\n+                    setName(name);\n+                } else {\n+                    this.path = path;\n+                    this.name = name;\n+                    fullPath = path + File.separator + name;\n+                    JTextFieldOperator tf = getFileTextField();\n+                    tf.clearText();\n+                    tf.typeText(fullPath);\n+                }\n+            }\n+        }\n+\n+\tpublic void setPath(String path) {\n+\t\tthis.path = path + File.separator;\n+\t\tif (name != null) {\n+\t\t\tfullPath = this.path + name;\n+\t\t} else {\n+\t\t\tfullPath = this.path;\n+\t\t}\n+\t\tif (opened) {\n+\t\t\tif ((\"true\").equalsIgnoreCase(System.getProperty(\"com.sun.javatest.exec.templateMode\"))) {\n+\t\t\t\tJButtonOperator op = new JButtonOperator(dialog, \"Browse...\");\n+\t\t\t\top.push();\n+\t\t\t\tJDialogOperator d = new JDialogOperator(\"Please select work directory\");\n+\t\t\t\tJTextFieldOperator tf = new JTextFieldOperator(d);\n+\t\t\t\ttf.clearText();\n+\t\t\t\ttf.enterText(this.path);\n+\t\t\t} else {\n+\t\t\t\tJTextFieldOperator tf = getFileTextField();\n+\t\t\t\ttf.clearText();\n+\t\t\t\ttf.typeText(fullPath);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic void setFullPath(String path) {\n+\t\tint separator = path.lastIndexOf(File.separator);\n+\t\tif (separator != -1) {\n+\t\t\tsetPath(path.substring(0, separator));\n+\t\t}\n+\t\tsetName(path.substring(separator + 1, path.length()));\n+\t}\n+\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t\tif (path != null) {\n+\t\t\tfullPath = path + name;\n+\t\t} else {\n+\t\t\tfullPath = name;\n+\t\t}\n+\t\tif (opened) {\n+\t\t\tif ((\"true\").equals(System.getProperty(\"com.sun.javatest.exec.templateMode\"))) {\n+\/\/\t\t\t\tJTextFieldOperator tf = new JTextFieldOperator((JTextField) Tools.getComponent(dialog, new String[]{\"Work Directory Name:\"}));\n+\t\t\t\tJTextFieldOperator tf = new JTextFieldOperator(dialog);\n+\t\t\t\ttf.clearText();\n+\t\t\t\ttf.typeText(this.name);\n+\t\t\t} else {\n+\t\t\t\tJTextFieldOperator tf = getFileTextField();\n+\t\t\t\ttf.clearText();\n+\t\t\t\ttf.typeText(fullPath);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic void cancel() {\n+\t\tgetCancelButton().push();\n+\t}\n+\n+\tpublic void commit() {\n+\t\tgetCommitButton().push();\n+\t}\n+\n+\tpublic JButtonOperator getCancelButton() {\n+\t\treturn new JButtonOperator(dialog, getCancelButtonName());\n+\t}\n+\n+\tpublic JButtonOperator getCommitButton() {\n+\t\treturn new JButtonOperator(dialog, getCommitButtonName());\n+\t}\n+\n+\tprivate JTextFieldOperator getFileTextField() {\n+\t\treturn new JTextFieldOperator((JTextField) Tools.getComponent(dialog, TEXT_FIELD_NAMES));\n+\t}\n+\n+\tpublic String getCommitButtonName() {\n+\t\tswitch (type) {\n+\t\t\tcase CREATE:\n+\t\t\t\treturn Tools.getToolResource(CREATE_BUTTON_TI18N_NAME);\n+\t\t\tcase OPEN:\n+\t\t\t\treturn Tools.getToolResource(OPEN_BUTTON_TI18N_NAME);\n+\t\t\tdefault:\n+\t\t\t\treturn \"Create\";\n+\t\t}\n+\t}\n+\n+\tpublic static String getOpenWorkDirectoryDialogName() {\n+\t\treturn Tools.getToolResource(OPEN_DIALOG_TI18N_NAME);\n+\t}\n+\n+\tpublic static String getCreateWorkDirectoryDialogName() {\n+\t\treturn Tools.getToolResource(CREATE_DIALOG_TI18N_NAME);\n+\t}\n+\n+\tpublic static String getCancelButtonName() {\n+\t\treturn Tools.getToolResource(CANCEL_BUTTON_TI18N_NAME);\n+\t}\n+\n+        public boolean isOpened() {\n+            return opened;\n+        }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/tools\/WorkDirectoryBrowser.java","additions":195,"deletions":0,"binary":false,"changes":195,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2009, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jthtest.workdir;\n+\n+import java.io.File;\n+import javax.swing.JTextField;\n+import jthtest.menu.Menu;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import static jthtest.Tools.*;\n+\n+\/**\n+ *\n+ * @author at231876\n+ *\/\n+public class Workdir {\n+\n+    public static String TO_DELETE_TEMP_WD_NAME = \"some_temp_wd_that_will_be_deleted\";\n+    public static final String OPEN_DIALOG_TI18N_NAME = \"wdc.open.title\";\n+    public static final String CREATE_DIALOG_TI18N_NAME = \"wdc.new.title\";\n+    public static final String COMMIT_BUTTON_EI18N_NAME = \"wdc.create.btn\";\n+    public static final String[] TEXT_FIELD_NAMES = {\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"};\n+\n+    public static String getOpenWorkDirectoryDialogName() {\n+\treturn getToolResource(OPEN_DIALOG_TI18N_NAME);\n+    }\n+\n+    public static String getCreateWorkDirectoryDialogName() {\n+\treturn getToolResource(CREATE_DIALOG_TI18N_NAME);\n+    }\n+\n+    public static String getCommitButtonName() {\n+\treturn getExecResource(\"wdc.create.btn\");\n+    }\n+\n+    public static JDialogOperator openOpenWorkDirectoryDialog(JFrameOperator frame) {\n+\tMenu.getFile_Open_WorkDirectoryMenu(frame).push();\n+\treturn new JDialogOperator(frame, getOpenWorkDirectoryDialogName());\n+    }\n+\n+    public static JDialogOperator openCreateWorkDirectoryDialog(JFrameOperator frame) {\n+\tMenu.getFile_CreateWorkDirectoryMenu(frame).push();\n+\treturn new JDialogOperator(frame, getCreateWorkDirectoryDialogName());\n+    }\n+\n+    public static void chooseWorkDirectoryInDialog(JDialogOperator wdDialog, String wdPath) {\n+\tJTextFieldOperator fileField = new JTextFieldOperator((JTextField) getComponent(wdDialog, TEXT_FIELD_NAMES));\n+\tfileField.clearText();\n+\tfileField.typeText(wdPath);\n+    }\n+\n+    public static void commitWorkDirectoryDialog(JDialogOperator wdDialog) {\n+\tnew JButtonOperator(wdDialog, getCommitButtonName()).push();\n+    }\n+\n+    public static void openWorkDirectory(String wdPath, JFrameOperator frame) {\n+\tJDialogOperator wdDialog = openOpenWorkDirectoryDialog(frame);\n+\tJTextFieldOperator fileField = new JTextFieldOperator((JTextField) getComponent(wdDialog, TEXT_FIELD_NAMES));\n+\tfileField.enterText(wdPath);\n+    }\n+\n+    public static void createWorkDirectory(String wdPath, JFrameOperator frame) {\n+\tJDialogOperator wdDialog = openCreateWorkDirectoryDialog(frame);\n+\tJTextFieldOperator fileField = new JTextFieldOperator((JTextField) getComponent(wdDialog, TEXT_FIELD_NAMES));\n+\tfileField.enterText(wdPath);\n+    }\n+    public static void createWorkDirectory(String wdPath, boolean delete, JFrameOperator frame) {\n+\tif(delete) {\n+\t    deleteDirectory(wdPath);\n+\t}\n+\tJDialogOperator wdDialog = openCreateWorkDirectoryDialog(frame);\n+\tJTextFieldOperator fileField = new JTextFieldOperator((JTextField) getComponent(wdDialog, TEXT_FIELD_NAMES));\n+\tfileField.enterText(wdPath);\n+    }\n+\n+    public static String createWorkDirectoryInTemp(JFrameOperator mainFrame) {\n+\tint attempts = 0;\n+\n+\tJDialogOperator wdDialog = openCreateWorkDirectoryDialog(mainFrame);\n+\n+\tString path = TEMP_PATH + TEMP_WD_NAME;\n+\twhile (attempts < 10) {\n+\t    File file = new File(path);\n+\t    if (!file.exists()) {\n+\t\tbreak;\n+\t    }\n+\t    deleteDirectory(file);\n+\t    file = new File(path);\n+\t    if (!file.exists()) {\n+\t\tbreak;\n+\t    }\n+\t    path = TEMP_PATH + TEMP_WD_NAME + (int) (Math.random() * 10000);\n+\t    attempts++;\n+\t}\n+\tif (attempts >= 10) {\n+\t    throw new JemmyException(\"error\");\n+\t}\n+\tJTextFieldOperator tf;\n+\n+\ttf = new JTextFieldOperator((JTextField) getComponent(wdDialog, new String[]{\"Folder name:\", \"File name:\", \"Folder Name:\", \"File Name:\"}));\n+\ttf.enterText(path);\n+\treturn path;\n+    }\n+    \n+    public static boolean verifyWorkdirCreation() {\n+\treturn new File(TEMP_PATH + TEMP_WD_NAME).exists();\n+    }\n+\n+    public static boolean verifyWorkdirCreation(String path) {\n+\treturn new File(path).exists();\n+    }\n+}\n","filename":"jt_gui_tests\/src\/gui\/src\/jthtest\/workdir\/Workdir.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/README.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/README.html","status":"copied"},{"patch":"@@ -0,0 +1,369 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi;\n+\n+\/**\n+ * Basic support for immutable arbitrary size integers. \n+ * Numbers are held as a sign and an array of ints. The sign is\n+ * +1 for positive numbers, 0 for zero, and -1 for negative \n+ * numbers. Each element in the array holds a group of decimal\n+ * digits; the array is of minimal size and is  arranged in \n+ * little-endian order (thus, element 0 holds the least \n+ * significant group of digits.) Because the array is \n+ * always of minimal size, zero is represented by a sign of zero \n+ * and an empty array.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a test suite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for big numbers, \n+\/\/ see java.math.BigInteger.\n+\n+public class BigNum\n+{\n+    \/**\n+     * Create a BigNum for a standard long integer.\n+     * @param n the value to be converted to a BigNum representation\n+     *\/\n+    public BigNum(long n) {\n+\tif (n == Integer.MIN_VALUE) {\n+\t    throw new IllegalArgumentException();\n+\t}\n+\telse if (n < 0) {\n+\t    sign = -1;\n+\t    n = -n;\n+\t}\n+\telse if (n == 0) {\n+\t    data = new int[0];\n+\t    sign = 0;\n+\t    return;\n+\t}\n+\telse \n+\t    sign = 1;\n+\n+\tint size = 0;\n+\tlong n1 = n;\n+\twhile (n1 > 0) {\n+\t    size++;\n+\t    n1 = n1 \/ MAX_PER_CELL;\n+\t}\n+\n+\tdata = new int[size];\n+\tfor (int i = 0; i < size; i++) {\n+\t    data[i] = (int) (n % MAX_PER_CELL);\n+\t    n = n \/ MAX_PER_CELL;\n+\t}\n+    }\n+\n+    \/**\n+     * Create a BigNum from a string. The string must be of\n+     * the form of an optional '-', followed by an arbitrary\n+     * non-empty sequence of digits.\n+     * @param s the string to be converted.\n+     * @throws NullPointerException if the argument is null.\n+     * @throws NumberFormatException if the argument string\n+     * is invalid.\n+     *\/\n+    public BigNum(String s) {\n+\tif (s == null)\n+\t    throw new NullPointerException();\n+\t\n+\tint slen = s.length();\n+\tif (slen == 0)\n+\t    throw new NumberFormatException(\"empty string\");\n+\n+\tint i = 0;\n+\t\n+\t\/\/ check for leading - sign\n+\tif (s.charAt(0) == '-') {\n+\t    sign = -1;\n+\t    i = 1;\n+\t}\n+\telse\n+\t    sign = 1; \/\/ assume positive, for now\n+\n+\t\/\/ check for (and ignore) redundant leading zeroes\n+\twhile (i < slen - 1 && s.charAt(i) == '0')\n+\t    i++;\n+\n+\t\/\/ check for 0\n+\tif (i == slen - 1 && s.charAt(i) == '0') {\n+\t    sign = 0; \n+\t    data = new int[0];\n+\t    return;\n+\t}\n+\t\n+\t\/\/ check for no significant digits\n+\tif (i == slen)\n+\t    throw new NumberFormatException(\"no digits\");\n+\t\n+\t\/\/ allocate array of cells for number\n+\tint numDigits = slen - i; \/\/ i currently points to the first significant digit\n+\tint numCells = (numDigits + DIGITS_PER_CELL - 1) \/ DIGITS_PER_CELL;\n+\tdata = new int[numCells];\n+\n+\t\/\/ scan digits in string\n+\tfor ( ; i < slen; i++) {\n+\t    char c = s.charAt(i);\n+\t    if ( c < '0' || c > '9')\n+\t\tthrow new NumberFormatException(\"bad char\");\n+\t    int d = (slen - 1 - i) \/ DIGITS_PER_CELL;\n+\t    data[d] = data[d] * 10 + (c - '0');\n+\t}\n+    }\n+\n+    \/**\n+     * Add another BigNum to this one.\n+     * @param other The BigNum to be added\n+     * @return a BigNum containing the sum\n+     *\/\n+    public BigNum add(BigNum other) {\n+\tif (sign == 0)\n+\t    return other;\n+\telse if (other.sign == 0)\n+\t    return this;\n+\telse if (sign == other.sign) \n+\t    return new BigNum(sign, add(data, other.data));\n+\telse {\n+\t    switch (compare(data, other.data)) {\n+\t    case +1:\n+\t\t\/\/ this is bigger in magnitude, so result is\n+\t\t\/\/ the difference, with the sign of this\n+\t\treturn new BigNum(sign, subtract(data, other.data));\n+\t    case 0: \n+\t\t\/\/ numbers are equal in magnitude, but different\n+\t\t\/\/ in sign; result must be zero\n+\t\treturn new BigNum(0);\n+\t    case -1:\n+\t\t\/\/ other is bigger in magnitude, so result is \n+\t\t\/\/ the difference, with the sign of other\n+\t\treturn new BigNum(other.sign, subtract(other.data, data));\n+\t    default:\n+\t\tthrow new Error(\"should not happen\");\n+\t    }\n+\t}\n+    }\n+\n+    \/**\n+     * Subtract another BigNum from this one.\n+     * @param other The BigNum to be added\n+     * @return a BigNum containing the sum\n+     *\/\n+    public BigNum subtract(BigNum other) {\n+\tif (sign == 0)\n+\t    return new BigNum(-other.sign, other.data);\n+\telse if (other.sign == 0)\n+\t    return this;\n+\telse if (sign == other.sign) {\n+\t    switch (compare(data, other.data)) {\n+\t    case +1:\n+\t\t\/\/ this is bigger in magnitude, so result is\n+\t\t\/\/ the difference, with the sign of this\n+\t\treturn new BigNum(sign, subtract(data, other.data));\n+\t    case 0: \n+\t\t\/\/ numbers are equal in magnitude, but different\n+\t\t\/\/ in sign; result must be zero\n+\t\treturn new BigNum(0);\n+\t    case -1:\n+\t\t\/\/ other is bigger in magnitude, so result is \n+\t\t\/\/ the difference, with the opposite sign of other\n+\t\treturn new BigNum(-other.sign, subtract(other.data, data));\n+\t    default:\n+\t\tthrow new Error(\"should not happen\");\n+\t    }\n+\t}\n+\telse \n+\t    return new BigNum(sign, add(data, other.data));\n+    }\n+\n+    \/**\n+     * Compare this BigNum with another.\n+     * @param other the BigNum to be compared against\n+     * @return -1 is this BigNum is smaller than <i>other<\/i>, \n+     *\t0 if they are equal, \n+     * and +1 if this BigNum is greater than <i>other<\/i>\n+     *\/\n+    public int compare(BigNum other) {\n+\tif (sign == other.sign) {\n+\t    int cmp = compare(data, other.data);\n+\t    return (sign < 0 ? -cmp : cmp);\n+\t}\n+\telse {\n+\t    return (sign > other.sign ? 1 : -1);\n+\t}\t   \n+    }\n+\n+    \/**\n+     * Check this BigNum for equality with another object.\n+     * @param other the object to be compared against\n+     * @return true if and only if <i>other<\/i> is a BigNum\n+     * representing the same value as this one.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof BigNum))\n+\t    return false;\n+\n+\tBigNum o = (BigNum) other;\n+\n+\tif (sign != o.sign)\n+\t    return false;\n+\n+\tif (data.length != o.data.length)\n+\t    return false;\n+\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    if (data[i] != o.data[i])\n+\t\treturn false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * Convert this BigNum to a printable representation.\n+     * @return a string containing a negative sign if necessary, followed\n+     * by the decimal digits of the number\n+     *\/\n+    public String toString() {\n+\tif (sign == 0)\n+\t    return \"0\";\n+\n+\tStringBuffer sb = new StringBuffer();\n+\tif (sign < 0)\n+\t    sb.append('-');\n+\t\n+\tboolean suppressZero = true;\n+\tfor (int i = data.length - 1; i >= 0; i--) {\n+\t    int d = data[i];\n+\t    for (int j = DIGITS_PER_CELL - 1; j >= 0; j--) {\n+\t\tint digit = (d \/ POWERS_OF_10[j]) % 10;\n+\t\tif (digit > 0) {\n+\t\t    suppressZero = false;\n+\t\t    sb.append((char) ('0' + digit));\n+\t\t}\n+\t\telse if (!suppressZero)\n+\t\t    sb.append('0');\n+\t    }\n+\t}\n+\n+\treturn sb.toString();\n+    }\n+\n+    private BigNum(int sign, int[] data) {\n+\tthis.sign = sign;\n+\tthis.data = data;\n+    }\n+\n+    private int[] add(int[] d1, int[] d2) {\n+\tint[] sum = new int[Math.max(d1.length, d2.length)];\n+\n+\tint carry = 0;\n+\tfor (int i = 0; i < sum.length; i++) {\n+\t    int s = carry;\n+\t    if (i < d1.length)\n+\t\ts += d1[i];\n+\t    if (i < d2.length)\n+\t\ts += d2[i];\n+\t    sum[i] = s % MAX_PER_CELL;\n+\t    carry = s \/ MAX_PER_CELL;\n+\t}\n+\n+\tif (carry > 0) {\n+\t    int[] x = new int[sum.length + 1];\n+\t    System.arraycopy(sum, 0, x, 0, sum.length);\n+\t    x[sum.length] = carry;\n+\t    sum = x;\n+\t}\n+\n+\treturn sum;\n+    }\n+\n+    \/\/ d1 is assumed to be greater than d2\n+    private int[] subtract(int[] d1, int[] d2) {\n+\tif (d1.length < d2.length)\n+\t    throw new IllegalArgumentException();\n+\n+\tint[] diff = new int[d1.length];\n+\n+\tint borrow = 0;\n+\tfor (int i = 0; i < diff.length; i++) {\n+\t    int d = d1[i] - borrow;\n+\t    if (i < d2.length)\n+\t\td = d - d2[i];\n+\t    if (d < 0) {\n+\t\td = d + MAX_PER_CELL;\n+\t\tborrow = 1;\n+\t    }\n+\t    else\n+\t\tborrow = 0;\n+\t    diff[i] = d;\n+\t}\n+\n+\tif (borrow != 0)\n+\t    throw new IllegalArgumentException();\n+\n+\tint newSize = diff.length;\n+\twhile (newSize > 0 && diff[newSize - 1] == 0)\n+\t    newSize--;\n+\n+\tif (newSize < diff.length) {\n+\t    int[] newDiff = new int[newSize];\n+\t    System.arraycopy(diff, 0, newDiff, 0, newDiff.length);\n+\t    diff = newDiff;\n+\t}\n+\n+\treturn diff;\n+    }\n+\n+    private int compare(int[] d1, int[] d2) {\n+\tif (d1.length > d2.length)\n+\t    return 1;\n+\t\n+\tif (d1.length < d2.length)\n+\t    return -1;\n+\n+\t\/\/ d1.length == d2.length\n+\tfor (int i = d1.length - 1; i >= 0; i--) {\n+\t    int n1 = d1[i];\n+\t    int n2 = d2[i];\n+\t    if (n1 > n2)\n+\t\treturn 1;\n+\t    if (n1 < n2)\n+\t\treturn -1;\n+\t}\n+\t\n+\treturn 0;\n+    }\n+\n+    private int sign;\n+    private int[] data;\n+\n+    private static final int[] POWERS_OF_10 = {1, 10, 100, 1000, 10000, 100000, 1000000};\n+    private static final int DIGITS_PER_CELL = 6;\n+    private static final int MAX_PER_CELL = POWERS_OF_10[DIGITS_PER_CELL];\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demoapi\/src\/com\/sun\/demoapi\/BigNum.java","additions":369,"deletions":0,"binary":false,"changes":369,"status":"added"},{"patch":"@@ -0,0 +1,277 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Simple linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The list keeps references to the first and last entry in the list.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class DoublyLinkedList\n+{\n+    \/**\n+     * An entry in a DoublyLinkedList, containing client data \n+     * and links to the previous and next entries.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a DoublyLinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry prev, Entry next) {\n+\t    this.data = data;\n+\t    this.prev = prev;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list,\n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\n+\t\/**\n+\t * Get the previous entry in the list, if any.\n+\t * @return the previous entry in the list,\n+\t * or null if this is the first entry.\n+\t *\/\n+\tpublic Entry getPrevious() {\n+\t    return prev;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    Entry e = new Entry(data, this, next);\n+\t    if (next == null)\n+\t\tlast = e;\n+\t    else\n+\t\tnext.prev = e;\n+\t    next = e;\n+\t}\n+\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertBefore(Object data) {\n+\t    Entry e = new Entry(data, prev, this);\n+\t    if (prev == null)\n+\t\tfirst = e;\n+\t    else\n+\t\tprev.next = e;\n+\t    prev = e;\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t *\/\n+\tpublic Entry remove() {\n+\t    if (prev == null)\n+\t\tfirst = next;\n+\t    else\n+\t\tprev.next = next;\n+\n+\t    if (next == null)\n+\t\tlast = prev;\n+\t    else\n+\t\tnext.prev = prev;\n+\n+\t    return next;\n+\t}\n+\n+\tObject data;\n+\tEntry prev;\n+\tEntry next;\n+    }\n+\n+    \/**\n+     * Create an empty linked list.\n+     *\/\n+    public DoublyLinkedList() {\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (e.data == data)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Get the last entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getLast() {\n+\treturn last;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public void insert(Object data) {\n+\tEntry e = new Entry(data, null, first);\n+\tif (first == null) \n+\t    last = e;\n+\telse\n+\t    first.prev = e;\n+\tfirst = e;\n+    }\n+\n+    \/**\n+     * Append an entry containing the specified client data \n+     * to the end of the list.\n+     *\/\n+    public void append(Object o) {\n+\tEntry e = new Entry(o, last, null);\n+\tif (first == null)\n+\t    first = e;\n+\telse\n+\t    last.next = e;\n+\tlast = e;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (e.data == data) {\n+\t\te.remove();\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof DoublyLinkedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((DoublyLinkedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"DoublyLinkedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Entry last;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demoapi\/src\/com\/sun\/demoapi\/lists\/DoublyLinkedList.java","additions":277,"deletions":0,"binary":false,"changes":277,"status":"added"},{"patch":"@@ -0,0 +1,254 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Simple linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The list keeps references to the first and last entry in the list.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class LinkedList\n+{\n+    \/**\n+     * An entry in a LinkedList, containing client data and a link to the next entry.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a LinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry next) {\n+\t    this.data = data;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list, \n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    next = new Entry(data, next);\n+\t    if (last == this)\n+\t\tlast = next;\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t * @throws IllegalStateException if this entry is not in the list\n+\t * in which it was created: for example, if it has already been removed.\n+\t *\/\n+\tpublic Entry remove() {\n+\t    for (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t\tif (e == this) {\n+\t\t    \/\/ update the pointer to this cell\n+\t\t    if (prev == null) \n+\t\t\tfirst = e.next;\n+\t\t    else \n+\t\t\tprev.next = e.next;\n+\t\t    \n+\t\t    \/\/ update last pointer if necessary\n+\t\t    if (e == last)\n+\t\t\tlast = prev;\n+\t\t    \n+\t\t    return next;\n+\t\t}\n+\t    }\n+\t    \n+\t    \/\/ not found\n+\t    throw new IllegalStateException();\n+\t}\n+\n+\tObject data;\n+\tEntry next;\n+    }\n+\n+    \/**\n+     * Create an empty linked list.\n+     *\/\n+    public LinkedList() {\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (e.data == data)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public void insert(Object data) {\n+\tEntry e = new Entry(data, first);\n+\tfirst = e;\n+\tif (last == null)\n+\t    last = first;\n+    }\n+\n+    \/**\n+     * Append an entry containing the specified client data \n+     * to the end of the list.\n+     *\/\n+    public void append(Object o) {\n+\tEntry e = new Entry(o, null);\n+\tif (first == null) \n+\t    first = e;\n+\telse\n+\t    last.next = e;\n+\tlast = e;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (e.data == null ? data == null : e.data.equals(data)) {\n+\t\t\/\/ update the pointer to this cell\n+\t\tif (prev == null) \n+\t\t    first = e.next;\n+\t\telse \n+\t\t    prev.next = e.next;\n+\n+\t\t\/\/ update last pointer if necessary\n+\t\tif (e == last)\n+\t\t    last = prev;\n+\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof LinkedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((LinkedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"LinkedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Entry last;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demoapi\/src\/com\/sun\/demoapi\/lists\/LinkedList.java","additions":254,"deletions":0,"binary":false,"changes":254,"status":"added"},{"patch":"@@ -0,0 +1,258 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Sorted linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The entries are sorted according to a Comparator used to compare the\n+ * items of client data.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class SortedList\n+{\n+    \/**\n+     * An entry in a LinkedList, containing client data and a link to the next entry.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a LinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry next) {\n+\t    this.data = data;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list, \n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    next = new Entry(data, next);\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t * @throws IllegalStateException if this entry is not in the list\n+\t * in which it was created: for example, if it has already been removed.\n+\t *\/\n+\tpublic Entry remove() {\n+\t    for (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t\tif (e == this) {\n+\t\t    \/\/ update the link to this entry\n+\t\t    if (prev == null) \n+\t\t\tfirst = e.next;\n+\t\t    else \n+\t\t\tprev.next = e.next;\n+\t\t    \n+\t\t    return next;\n+\t\t}\n+\t    }\n+\t    \n+\t    \/\/ not found\n+\t    throw new IllegalStateException();\n+\t}\n+\n+\tObject data;\n+\tEntry next;\n+    };\n+\n+    public static interface Comparator {\n+\tint compare(Object a, Object b);\n+    };\n+\n+    \/**\n+     * Create an empty list.\n+     *\/\n+    public SortedList(Comparator comp, boolean ignoreDuplicates) {\n+\tthis.comp = comp;\n+\tthis.ignoreDuplicates = ignoreDuplicates;\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (comp.compare(e.data, data) == 0)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public boolean insert(Object data) {\n+\tif (first == null) {\n+\t    first = new Entry(data, null);\n+\t    return true;\n+\t}\n+\n+\tEntry prev = null;\n+\tfor (Entry e = first; e != null; prev = e, e = e.next) {\n+\t    int c = comp.compare(data, e.data);\n+\t    if (c > 0)\n+\t\tcontinue;\n+\t    else if (c == 0 && ignoreDuplicates)\n+\t\treturn false;\n+\t    else \n+\t\tbreak;\n+\t}\n+\n+\t\/\/ found where to insert\n+\tif (prev == null)\n+\t    first = new Entry(data, first);\n+\telse\n+\t    prev.next = new Entry(data, prev.next);\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (comp.compare(e.data, data) == 0) {\n+\t\t\/\/ update the pointer to this cell\n+\t\tif (prev == null) \n+\t\t    first = e.next;\n+\t\telse \n+\t\t    prev.next = e.next;\n+\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof SortedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((SortedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"SortedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Comparator comp;\n+    private boolean ignoreDuplicates;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demoapi\/src\/com\/sun\/demoapi\/lists\/SortedList.java","additions":258,"deletions":0,"binary":false,"changes":258,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+# Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+\n+# demo exclude list\n+\n+# test name\t\t\t\tbugid(s)   keyword(s)  brief description \n+lists\/DoublyLinkedList\/InsertTest.java  0  \t   test        test contains error\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/lib\/demo.jtx","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/lib\/demots.jti","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/lib\/demots.jti","status":"copied"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources AddTest.java\n+ * @executeClass com.sun.demots.tests.bignum.AddTest\n+ *\/\n+public class AddTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AddTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\", \"-24691357802469135780\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", \"-12345678901234568013\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", \"-12345678901234567767\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\",                     \"0\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",           \"-2469135780\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\",           \"-1234568013\");\n+\tok = ok & test(\"-1234567890\",                     \"0\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",                   \"123\",           \"-1234567767\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\",  \"12345678900000000000\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\", \"-12345678901234568013\");\n+\tok = ok & test(\"-123\",           \"-1234567890\",           \"-1234568013\");\n+\tok = ok & test(\"-123\",                  \"-123\",                  \"-246\");\n+\tok = ok & test(\"-123\",                     \"0\",                  \"-123\");\n+\tok = ok & test(\"-123\",                   \"123\",                     \"0\");\n+\tok = ok & test(\"-123\",            \"1234567890\",            \"1234567767\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\",  \"12345678901234567767\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\",                  \"-123\");\n+\tok = ok & test(\"0\",                     \"0\",                     \"0\");\n+\tok = ok & test(\"0\",                   \"123\",                   \"123\");\n+\tok = ok & test(\"0\",            \"1234567890\",            \"1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\", \"-12345678901234567767\");\n+\tok = ok & test(\"123\",           \"-1234567890\",           \"-1234567767\");\n+\tok = ok & test(\"123\",                  \"-123\",                     \"0\");\n+\tok = ok & test(\"123\",                     \"0\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"123\",                   \"246\");\n+\tok = ok & test(\"123\",            \"1234567890\",            \"1234568013\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\",  \"12345678901234568013\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",                  \"-123\",            \"1234567767\");\n+\tok = ok & test(\"1234567890\",                     \"0\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",                   \"123\",            \"1234568013\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\",            \"2469135780\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\",  \"12345678902469135780\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\",                    \"0\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\", \"12345678900000000000\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\", \"12345678901234567767\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\", \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\", \"12345678901234568013\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\", \"12345678902469135780\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\", \"24691357802469135780\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/AddTest.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.compare.\n+ *\n+ * @test\n+ * @sources CompareTest.java\n+ * @executeClass com.sun.demots.tests.bignum.CompareTest\n+ *\/\n+public class CompareTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new CompareTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567891\",  1);\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\",  0);\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567889\", -1);\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", -1);\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", -1);\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"-1234567890\",           \"-1234567891\",  1);\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",  0);\n+\tok = ok & test(\"-1234567890\",           \"-1234567889\", -1);\n+\tok = ok & test(\"-1234567890\",                  \"-123\", -1);\n+\tok = ok & test(\"-1234567890\",                     \"0\", -1);\n+\tok = ok & test(\"-1234567890\",                   \"123\", -1);\n+\tok = ok & test(\"-1234567890\",            \"1234567890\", -1);\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"-123\",           \"-1234567890\",  1);\n+\tok = ok & test(\"-123\",                  \"-124\",  1);\n+\tok = ok & test(\"-123\",                  \"-123\",  0);\n+\tok = ok & test(\"-123\",                  \"-122\", -1);\n+\tok = ok & test(\"-123\",                     \"0\", -1);\n+\tok = ok & test(\"-123\",                   \"123\", -1);\n+\tok = ok & test(\"-123\",            \"1234567890\", -1);\n+\tok = ok & test(\"-123\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"0\",           \"-1234567890\",  1);\n+\tok = ok & test(\"0\",                  \"-123\",  1);\n+\tok = ok & test(\"0\",                    \"-1\",  1);\n+\tok = ok & test(\"0\",                     \"0\",  0);\n+\tok = ok & test(\"0\",                     \"1\", -1);\n+\tok = ok & test(\"0\",                   \"123\", -1);\n+\tok = ok & test(\"0\",            \"1234567890\", -1);\n+\tok = ok & test(\"0\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"123\",           \"-1234567890\",  1);\n+\tok = ok & test(\"123\",                  \"-123\",  1);\n+\tok = ok & test(\"123\",                     \"0\",  1);\n+\tok = ok & test(\"123\",                   \"122\",  1);\n+\tok = ok & test(\"123\",                   \"123\",  0);\n+\tok = ok & test(\"123\",                   \"124\", -1);\n+\tok = ok & test(\"123\",            \"1234567890\", -1);\n+\tok = ok & test(\"123\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",  1);\n+\tok = ok & test(\"1234567890\",                  \"-123\",  1);\n+\tok = ok & test(\"1234567890\",                     \"0\",  1);\n+\tok = ok & test(\"1234567890\",                   \"123\",  1);\n+\tok = ok & test(\"1234567890\",            \"1234567889\",  1);\n+\tok = ok & test(\"1234567890\",            \"1234567890\",  0);\n+\tok = ok & test(\"1234567890\",            \"1234567891\", -1);\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\",  1);\n+\tok = ok & test(\"12345678901234567890\",                     \"0\",  1);\n+\tok = ok & test(\"12345678901234567890\",                   \"123\",  1);\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567889\",  1);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\",  0);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567891\", -1);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, int expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tint actualResult = bn1.compare(bn2);\n+\tif (actualResult == expectedResult)\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + actualResult);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/CompareTest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,168 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.bignum.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567891\");\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567889\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567891\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567889\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\");\n+\tok = ok & test(\"-1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",                   \"123\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\");\n+\tok = ok & test(\"-123\",           \"-1234567890\");\n+\tok = ok & test(\"-123\",                  \"-124\");\n+\tok = ok & test(\"-123\",                  \"-123\");\n+\tok = ok & test(\"-123\",                  \"-122\");\n+\tok = ok & test(\"-123\",                     \"0\");\n+\tok = ok & test(\"-123\",                   \"123\");\n+\tok = ok & test(\"-123\",            \"1234567890\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\");\n+\tok = ok & test(\"0\",                    \"-1\");\n+\tok = ok & test(\"0\",                     \"0\");\n+\tok = ok & test(\"0\",                     \"1\");\n+\tok = ok & test(\"0\",                   \"123\");\n+\tok = ok & test(\"0\",            \"1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\");\n+\tok = ok & test(\"123\",           \"-1234567890\");\n+\tok = ok & test(\"123\",                  \"-123\");\n+\tok = ok & test(\"123\",                     \"0\");\n+\tok = ok & test(\"123\",                   \"122\");\n+\tok = ok & test(\"123\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"124\");\n+\tok = ok & test(\"123\",            \"1234567890\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"1234567890\",                  \"-123\");\n+\tok = ok & test(\"1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",                   \"123\");\n+\tok = ok & test(\"1234567890\",            \"1234567889\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",            \"1234567891\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567889\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567891\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tboolean actualResult = bn1.equals(bn2);\n+\tboolean expectedResult = s1.equals(s2);\n+\tif (actualResult == expectedResult)\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + actualResult);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/EqualsTest.java","additions":168,"deletions":0,"binary":false,"changes":168,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum(long).\n+ *\n+ * @test\n+ * @sources LongConstrTest.java\n+ * @executeClass com.sun.demots.tests.bignum.LongConstrTest\n+ *\/\n+public class LongConstrTest implements Test\n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new LongConstrTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\t\/\/ create some BigNums, convert them to strings and verify the results\n+\tok = ok & test(0);\n+\tok = ok & test(123);\n+\tok = ok & test(123456);\n+\tok = ok & test(123456789);\n+\tok = ok & test(123456789123456789L);\n+\n+\tok = ok & test(-123);\n+\tok = ok & test(-123456);\n+\tok = ok & test(-123456789);\n+\tok = ok & test(-123456789123456789L);\n+\n+\treturn (ok ? Status.passed(\"OK\") : Status.failed(\"some test cases failed\"));\n+    }\n+\n+    \/**\n+     * Test the BigNum(long) constructor. A BigNum is created with\n+     * the specified argument; the creation is then verified by\n+     * converting it to a string and comparing it against the string\n+     * representation of the original argument. If the test fails,\n+     * a message is written to the log.\n+     * @param n the argument for the BigNum constructor\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    private boolean test(long n) {\n+\tBigNum bn = new BigNum(n);\n+\tString bs = bn.toString();\n+\tif (bs.equals(String.valueOf(n)))\n+\t    return true; \n+\telse {\n+\t    err.println(\"test failed: expected: \" + n + \"; found: \" + bs);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/LongConstrTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum(String).\n+ *\n+ * @test\n+ * @sources StringConstrTest.java\n+ * @executeClass com.sun.demots.tests.bignum.StringConstrTest\n+ *\/\n+public class StringConstrTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new StringConstrTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\t\/\/ check zero\n+\tok = ok & posTest(\"0\");\n+\n+\t\/\/ check positive numbers\n+\tok = ok & posTest(\"123\");\n+\tok = ok & posTest(\"123456789\");\n+\tok = ok & posTest(\"1234567890123456789\");\n+\n+\t\/\/ check negative numbers\n+\tok = ok & posTest(\"-123\");\n+\tok = ok & posTest(\"-123456789\");\n+\tok = ok & posTest(\"-1234567890123456789\");\n+\n+\t\/\/ check leading zeroes ignored\n+\tok = ok & posTest(\"-0\", \"0\");\n+\tok = ok & posTest(\"000123456789\", \"123456789\");\n+\n+\t\/\/ check invalid numbers detected\n+\tok = ok & negTest(null,   NullPointerException.class);\n+\tok = ok & negTest(\"\",     NumberFormatException.class);\n+\tok = ok & negTest(\"-\",    NumberFormatException.class);\n+\tok = ok & negTest(\"a\",    NumberFormatException.class);\n+\tok = ok & negTest(\"-a\",   NumberFormatException.class);\n+\tok = ok & negTest(\"123a\", NumberFormatException.class);\n+\tok = ok & negTest(\"12.3\", NumberFormatException.class);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with the specified argument; the creation is then verified by\n+     * converting it to a string and comparing it against the \n+     * original argument. If the test fails, a message is written\n+     * to the log.\n+     * @param s the argument for the BigNum constructor\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    boolean posTest(String s) {\n+\treturn posTest(s, s);\n+    }\n+\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with a specified argument; the creation is then verified by\n+     * converting it to a string and comparing it a reference value. \n+     * If the test fails, a message is written to the log.\n+     * @param s1 the argument for the BigNum constructor\n+     * @param s2 the reference value, giving the expected string\n+     * representation of the BigNum that is created\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    boolean posTest(String s1, String s2) {\n+\tBigNum bn = new BigNum(s1);\n+\tString bs = bn.toString();\n+\tif (bs != null && bs.equals(s2))\n+\t    return true;\n+\telse {\n+\t    err.println(\"arg: \" + s1 + \", expected: \" + s2 + \", found: \" + bs);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with a specified argument; the creation is expected to fail\n+     * with a specified exception. The test passes if the correct\n+     * exception is thrown.\n+     * If the test fails, a message is written to the log.\n+     * @param s the argument for the BigNum constructor\n+     * @param expectedThrowableClass the class of the exception that \n+     * is expected to be thrown\n+     * @return true if the expected exception is thrown when calling\n+     * the BigNum(String) constructor, and false otherwise.\n+     *\/\n+    boolean negTest(String s, Class expectedThrowableClass) {\n+\ttry {\n+\t    BigNum bn = new BigNum(s);\n+\t    err.println(\"arg: \" + s + \", expected: \" \n+\t\t\t+ expectedThrowableClass.getName() \n+\t\t\t+ \", no exception thrown\");\n+\t    return false;\n+\t}\n+\tcatch (Throwable t) {\n+\t    if (expectedThrowableClass.isInstance(t))\n+\t\treturn true;\n+\t    else {\n+\t\terr.println(\"arg: \" + s + \", expected: \" + \n+\t\t\t    expectedThrowableClass.getName() + \n+\t\t\t    \", received \" + t.getClass().getName());\n+\t\treturn false;\n+\t    }\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/StringConstrTest.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.subtract.\n+ *\n+ * @test\n+ * @sources SubtractTest.java\n+ * @executeClass com.sun.demots.tests.bignum.SubtractTest\n+ *\/\n+public class SubtractTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new SubtractTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", \"-12345678901234567767\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", \"-12345678901234568013\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\", \"-24691357802469135780\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\",  \"12345678900000000000\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\",           \"-1234567767\");\n+\tok = ok & test(\"-1234567890\",                     \"0\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",                   \"123\",           \"-1234568013\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\",           \"-2469135780\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\", \"-12345678902469135780\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\",  \"12345678901234567767\");\n+\tok = ok & test(\"-123\",           \"-1234567890\",            \"1234567767\");\n+\tok = ok & test(\"-123\",                  \"-123\",                     \"0\");\n+\tok = ok & test(\"-123\",                     \"0\",                  \"-123\");\n+\tok = ok & test(\"-123\",                   \"123\",                  \"-246\");\n+\tok = ok & test(\"-123\",            \"1234567890\",           \"-1234568013\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\", \"-12345678901234568013\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\",  \"12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\",            \"1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\",                   \"123\");\n+\tok = ok & test(\"0\",                    \"0\",                     \"0\");\n+\tok = ok & test(\"0\",                   \"123\",                  \"-123\");\n+\tok = ok & test(\"0\",            \"1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\", \"-12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\",  \"12345678901234568013\");\n+\tok = ok & test(\"123\",           \"-1234567890\",            \"1234568013\");\n+\tok = ok & test(\"123\",                  \"-123\",                   \"246\");\n+\tok = ok & test(\"123\",                     \"0\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"123\",                     \"0\");\n+\tok = ok & test(\"123\",            \"1234567890\",           \"-1234567767\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\", \"-12345678901234567767\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\",  \"12345678902469135780\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",            \"2469135780\");\n+\tok = ok & test(\"1234567890\",                  \"-123\",            \"1234568013\");\n+\tok = ok & test(\"1234567890\",                     \"0\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",                   \"123\",            \"1234567767\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\", \"-12345678900000000000\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\", \"24691357802469135780\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\", \"12345678902469135780\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\", \"12345678901234568013\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\", \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\", \"12345678901234567767\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\", \"12345678900000000000\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\",                    \"0\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.subtract(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/SubtractTest.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/BigNum\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/BigNum\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.TestCasesTests;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources ErrorTest.java\n+ * @executeClass com.sun.demots.tests.TestCasesTests.ErrorTest\n+ *\/\n+public class ErrorTest extends MultiTest \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tErrorTest t = new ErrorTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    public Status PassingTest01() {\n+\tSystem.err.println(\"PassingTest01: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status ErrorTest01() {\n+        System.err.println(\"ErrorTest01: Error.\");\n+\treturn Status.error(\"this testcase is always failing\");\n+    }\n+\n+    public Status PassingTest02() {\n+        System.err.println(\"PassingTest02: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/ErrorTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.TestCasesTests;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources FailingTest1.java\n+ * @executeClass com.sun.demots.tests.TestCasesTests.FailingTest1\n+ *\/\n+public class FailingTest1 extends MultiTest \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tFailingTest1 t = new FailingTest1();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    public Status FailingTest01() {\n+        System.err.println(\"FailingTest01: Failed.\");\n+\treturn Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    public Status FailingTest02() {\n+\tSystem.err.println(\"FailingTest02: Failed.\");\n+\treturn Status.failed(\"this testcase is always failing\");\n+    }\n+\n+    public Status FailingTest03() {\n+        System.err.println(\"FailingTest03: Failed.\");\n+\treturn Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/FailingTest1.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.TestCasesTests;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources FailingTest2.java\n+ * @executeClass com.sun.demots.tests.TestCasesTests.FailingTest2\n+ *\/\n+public class FailingTest2 extends MultiTest \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tFailingTest2 t = new FailingTest2();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    public Status PassingTest01() {\n+        System.err.println(\"PassingTest01: Passed.\");\n+\treturn Status.passed(\"passed\");\n+    }\n+\n+    public Status PassingTest02() {\n+        System.err.println(\"PassingTest02: Passed.\");\n+\treturn Status.passed(\"passed\");\n+    }\n+\n+    public Status FailingTest01() {\n+        System.err.println(\"FailingTest01: Failed.\");\n+\treturn Status.failed(\"this testcase is always failing\");\n+    }\n+\n+    public Status FailingTest02() {\n+        System.err.println(\"FailingTest02: Failed.\");\n+\treturn Status.failed(\"this testcase is always failing\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/FailingTest2.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.TestCasesTests;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources ManyTest.java\n+ * @executeClass com.sun.demots.tests.TestCasesTests.ManyTest\n+ *\/\n+public class ManyTest extends MultiTest \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tManyTest t = new ManyTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    public Status PassingTest01() {\n+        System.err.println(\"PassingTest01: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status PassingTest02() {\n+        System.err.println(\"PassingTest02: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status PassingTest03() {\n+        System.err.println(\"PassingTest03: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status PassingTest04() {\n+        System.err.println(\"PassingTest04: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status FailingTest01() {\n+        System.err.println(\"FailingTest01: Failed.\");\n+       return Status.failed(\"this testcase is always failing\");\n+    }\n+\n+    public Status FailingTest02() {\n+        System.err.println(\"FailingTest02: Failed.\");\n+       return Status.failed(\"this testcase is always failing\");\n+    }\n+\n+    public Status ErrorTest01() {\n+        System.err.println(\"ErrorTest01: Error.\");\n+       return Status.error(\"this testcase is always error\");\n+    }\n+\n+    public Status ErrorTest02() {\n+        System.err.println(\"ErrorTest02: Error.\");\n+       return Status.error(\"this testcase is always error\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/ManyTest.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.TestCasesTests;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.lib.MultiTest;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources PassingTest.java\n+ * @executeClass com.sun.demots.tests.TestCasesTests.PassingTest\n+ *\/\n+public class PassingTest extends MultiTest \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tPassingTest t = new PassingTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    public Status PassingTest01() {\n+        System.err.println(\"PassingTest01: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status PassingTest02() {\n+        System.err.println(\"PassingTest02: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    public Status PassingTest03() {\n+        System.err.println(\"PassingTest03: Passed.\");\n+\treturn Status.passed(\"OK\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/PassingTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ \n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+ \n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+ \n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ \n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+\n+<html>\n+  <head>\n+    <title>Tests with testcases<\/title>\n+  <\/head>\n+\n+  <body>\n+    <h1>Tests with testcases<\/h1>\n+\n+    <ul>\n+      <li><a href=\"ManyTest.java\">test with testcases some of which are failing and erroring for add(BigNum)<\/a>\n+      <li><a href=\"PassingTest.java\">test with testcases all of which are passing for add(BigNum)<\/a>\n+      <li><a href=\"FailingTest1.java\">test with testcases with one failing and 2 passing testcase for add(BigNum)<\/a>\n+      <li><a href=\"ErrorTest.java\">test with testcases with one erroring and 2 passing testcase for add(BigNum)<\/a>\n+      <li><a href=\"FailingTest2.java\">test with testcases with one failing and 2 passing testcase for add(BigNum)<\/a>\n+    <\/ul>\n+\n+<p>Copyright &copy; 2011, Oracle and\/or its affiliates. All rights reserved.<\/p>\n+  <\/body>\n+<\/html>\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/TestCasesTests\/index.html","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.append.\n+ *\n+ * @test\n+ * @sources AppendTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.AppendTest\n+ *\/\n+public class AppendTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AppendTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.append(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = expected + \",\" + String.valueOf(d);\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(DoublyLinkedList l, String expected) {\n+\treturn verifyForwards(l, expected) && verifyBackwards(l, expected);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.insert(0, \",\");\n+\t    sb.insert(0, String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/DoublyLinkedList\/AppendTest.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & positive_test(new Object[] { });\n+\tok = ok & positive_test(new Object[] { null });\n+\tok = ok & positive_test(new Object[] { \"a\" });\n+\tok = ok & positive_test(new Object[] { one, \"a\" });\n+\tok = ok & positive_test(new Object[] { one, null, \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & positive_test(new Object[] { one, two, three });\n+\tok = ok & positive_test(new Object[] { one, \"a\", null, two });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & positive_test(new Object[] { \"a\", one, \"a\", one });\n+\tok = ok & negative_test(new Object[] { }, new Object[] { \"a\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { \"b\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { one });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { null });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"b\", one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { one, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { null, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"a\", one , \"b\"});\n+\tok = ok & negative_test(new Object[] { \"a\", one }, one );\n+\tok = ok & negative_test(new Object[] { \"a\", one }, \"a\" );\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data) {\n+\t\/\/ create the list two different ways from the same data\n+\tLinkedList list1 = new LinkedList();\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.append(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/DoublyLinkedList\/EqualsTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    \/\/ The following line is deliberately incorrect, so that\n+\t    \/\/ the tutorial can illustrate the effects of a test that\n+\t    \/\/ fails.  The line should really be\n+\t    \/\/\tlist.insert(d);\n+\t    list.append(d); \n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = String.valueOf(d) + \",\" + expected;\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(DoublyLinkedList l, String expected) {\n+\treturn verifyForwards(l, expected) && verifyBackwards(l, expected);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.insert(0, \",\");\n+\t    sb.insert(0, String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/DoublyLinkedList\/InsertTest.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -0,0 +1,282 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 });\n+\tok = ok & test(new Object[] { i0, i10 });\n+\tok = ok & test(new Object[] { i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 });\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 });\n+\n+\tok = ok & test(new Object[] { \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10, i100 });\n+\n+\tok = ok & test(new Object[] { null, \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", null, \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", null, \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", null });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data);\n+\tboolean ok2 = testRemoveLast(data);\n+\tboolean ok3 = testRemoveMiddle(data);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    DoublyLinkedList createList(Object[] data) {\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\treturn verifyForwards(l, ref, offset, length)\n+\t    && verifyBackwards(l, ref, offset, length);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < offset + length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset + length - 1;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (i >= offset) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i--;\n+\t}\n+\n+\treturn (i == offset - 1);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/DoublyLinkedList\/RemoveTest.java","additions":282,"deletions":0,"binary":false,"changes":282,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/DoublyLinkedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/DoublyLinkedList\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.append.\n+ *\n+ * @test\n+ * @sources AppendTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.AppendTest\n+ *\/\n+public class AppendTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AppendTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.append(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = expected + \",\" + String.valueOf(d);\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(LinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/LinkedList\/AppendTest.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & positive_test(new Object[] { });\n+\tok = ok & positive_test(new Object[] { null });\n+\tok = ok & positive_test(new Object[] { \"a\" });\n+\tok = ok & positive_test(new Object[] { one, \"a\" });\n+\tok = ok & positive_test(new Object[] { one, null, \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & positive_test(new Object[] { one, two, three });\n+\tok = ok & positive_test(new Object[] { one, \"a\", null, two });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & positive_test(new Object[] { \"a\", one, \"a\", one });\n+\tok = ok & negative_test(new Object[] { }, new Object[] { \"a\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { \"b\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { one });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { null });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"b\", one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { one, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { null, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"a\", one , \"b\"});\n+\tok = ok & negative_test(new Object[] { \"a\", one }, one );\n+\tok = ok & negative_test(new Object[] { \"a\", one }, \"a\" );\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data) {\n+\t\/\/ create the list two different ways from the same data\n+\tLinkedList list1 = new LinkedList();\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.append(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/LinkedList\/EqualsTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.insert(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = String.valueOf(d) + \",\" + expected;\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(LinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/LinkedList\/InsertTest.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -0,0 +1,253 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 });\n+\tok = ok & test(new Object[] { i0, i10 });\n+\tok = ok & test(new Object[] { i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 });\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 });\n+\n+\tok = ok & test(new Object[] { \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10, i100 });\n+\n+\tok = ok & test(new Object[] { null, \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", null, \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", null, \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", null });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data);\n+\tboolean ok2 = testRemoveLast(data);\n+\tboolean ok3 = testRemoveMiddle(data);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    LinkedList createList(Object[] data) {\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(LinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < ref.length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/LinkedList\/RemoveTest.java","additions":253,"deletions":0,"binary":false,"changes":253,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/LinkedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/LinkedList\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & positive_test(new Object[] { }, intComp);\n+\tok = ok & positive_test(new Object[] { one }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two, three }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two, one, two }, intComp);\n+\tok = ok & negative_test(new Object[] { }, new Object[] { one }, intComp);\n+\tok = ok & negative_test(new Object[] { one }, new Object[] { two }, intComp);\n+\tok = ok & negative_test(new Object[] { one, one }, new Object[] { two, one }, intComp);\n+\tok = ok & negative_test(new Object[] { one, two }, new Object[] { one, two, three }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data, SortedList.Comparator c) {\n+\t\/\/ create the list two different ways from the same data\n+\tSortedList list1 = new SortedList(c, true);\n+\tSortedList list2 = new SortedList(c, true);\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.insert(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2, SortedList.Comparator c) {\n+\tSortedList list1 = new SortedList(c, true);\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tSortedList list2 = new SortedList(c, true);\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2, SortedList.Comparator c) {\n+\tSortedList list1 = new SortedList(c, true);\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/SortedList\/EqualsTest.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,193 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 }, intComp);\n+\tok = ok & test(new Object[] { i10000, i1000, i100, i10, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10000, i10, i1000, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i0, i0, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i0, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i10000, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i10000, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10000, i10000, i10000, i10000 }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data, SortedList.Comparator c) {\n+\treturn testAllowDups(data, c) && testNoDups(data, c);\n+    }\n+\n+    boolean testAllowDups(Object[] data, SortedList.Comparator c) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tSortedList list = new SortedList(c, false);\n+\tObject[] expected = new Object[data.length];\n+\n+\tint n = 0;\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list.insert(data[i]);\n+\t    expected[n++] = data[i];\n+\t    sort(expected, 0, n, c);\n+\t    if (!verify(list, expected, 0, n, c)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(expected, 0, n));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testNoDups(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = new SortedList(c, true);\n+\tObject[] expected = new Object[data.length];\n+\n+\tint n = 0;\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list.insert(data[i]);\n+\tinsert: {\n+\t\tfor (int j = 0; j < n; j++) {\n+\t\t    if (c.compare(data[i], expected[j]) == 0)\n+\t\t\tbreak insert;\n+\t\t}\n+\t\texpected[n++] = data[i];\n+\t\tsort(expected, 0, n, c);\n+\t    }\n+\t    if (!verify(list, expected, 0, n, c)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(expected, 0, n));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    void sort(Object[] data, int offset, int length, SortedList.Comparator c) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    for (int j = i; j > offset && c.compare(data[j - 1], data[j]) > 0; j--) {\n+\t\tObject o = data[j];\n+\t\tdata[j] = data[j-1];\n+\t\tdata[j - 1] = o;\n+\t    }\n+\t}\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(SortedList l, Object[] expected, int offset, int length, SortedList.Comparator c) {\n+\tint i = offset;\n+\tfor (SortedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < expected.length) {\n+\t\tif (c.compare(e.getData(), expected[i]) != 0)\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than expected\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/SortedList\/InsertTest.java","additions":193,"deletions":0,"binary":false,"changes":193,"status":"added"},{"patch":"@@ -0,0 +1,265 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data, SortedList.Comparator c) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data, c);\n+\tboolean ok2 = testRemoveLast(data, c);\n+\tboolean ok3 = testRemoveMiddle(data, c);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    SortedList createList(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = new SortedList(c, false);\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    void sort(Object[] data, int offset, int length, SortedList.Comparator c) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    for (int j = i; j > offset && c.compare(data[j - 1], data[j]) > 0; j--) {\n+\t\tObject o = data[j];\n+\t\tdata[j] = data[j-1];\n+\t\tdata[j - 1] = o;\n+\t    }\n+\t}\n+    }\n+\n+    Object[] sortedCopy(Object[] data, SortedList.Comparator c) {\n+\tObject[] newData = copy(data);\n+\tsort(newData, 0, data.length, c);\n+\treturn newData;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(SortedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (SortedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < ref.length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/SortedList\/RemoveTest.java","additions":265,"deletions":0,"binary":false,"changes":265,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/SortedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/SortedList\/index.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/lists\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,58 @@\n+<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2001, 2011, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ \n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+ \n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+ \n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ \n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+\n+<html>\n+  <head>\n+    <title>simpleTags demoTS test suite<\/title>\n+  <\/head>\n+  \n+  <body>\n+    <h1>simpleTags demoTS test suite<\/h1>\n+    \n+    This is the root file for the simpleTags demoTS test suite.\n+    \n+    <p>\n+      <small>Note: Although not strictly necessary, it is \n+\tconvenient to link the documentation files into\n+\ta web, to simplify browsing.\n+      <\/small>\n+\n+    <hr>\n+    <p>The tests are divided into the following sections:\n+    <dl>\n+      <dt><a href=\"BigNum\/index.html\">BigNum<\/a>\n+      <dd>Tests for the com.sun.demoapi.BigNum API\n+      <dt><a href=\"lists\/index.html\">lists<\/a>\n+      <dd>Tests for the com.sun.demoapi.lists package\n+      <dt><a href=\"TestCasesTests\/index.html\">TestCasesTests<\/a>\n+      <dd>Tests with testcases\n+    <\/dl>\n+  <p>Copyright &copy; 2001, 2011, Oracle and\/or its affiliates. All rights reserved.<\/p>\n+  <\/body>\n+<\/html>\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/tests\/testsuite.html","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/demots\/testsuite.jtt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/testsuite.jtt","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/README.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/README.html","status":"copied"},{"patch":"@@ -0,0 +1,270 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.sun.interview.Checklist;\n+import com.sun.interview.ChoiceQuestion;\n+import com.sun.interview.ErrorQuestion;\n+import com.sun.interview.FileQuestion;\n+import com.sun.interview.FinalQuestion;\n+import com.sun.interview.IntQuestion;\n+import com.sun.interview.NullQuestion;\n+import com.sun.interview.Question;\n+import com.sun.interview.StringQuestion;\n+\n+import com.sun.javatest.Parameters.EnvParameters;\n+import com.sun.javatest.TestEnvironment;\n+import com.sun.javatest.interview.BasicInterviewParameters;\n+\n+public class DemoTSInterview\n+    extends BasicInterviewParameters \n+    implements EnvParameters\n+{\n+    public DemoTSInterview() throws Fault {\n+\tsuper(\"demoTS\");\n+\tsetHelpSet(\"moreInfo\/demots\");\n+\tsetResourceBundle(\"i18n\");\n+\n+\tString m = System.getProperty(\"interview.mode\", \"certify\");\n+\tif (m.equals(\"certify\"))\n+\t    mode = CERTIFY;\n+\telse if (m.equals(\"developer\"))\n+\t    mode = DEVELOPER;\n+\telse if (m.equals(\"precompile\"))\n+\t    mode = PRECOMPILE;\n+    }\n+\n+    public TestEnvironment getEnv() {\n+\tHashMap envProps = new HashMap();\n+\texport(envProps);\n+\ttry {\n+\t    String name = qName.getValue();\n+\t    if (name == null || name.length() == 0)\n+\t\tname = \"unknown\";\n+\t    return new TestEnvironment(name, envProps, \"configuration interview\");\n+\t}\n+\tcatch (TestEnvironment.Fault e) {\n+\t    throw new Error(\"should not happen\");\n+\t}\n+    }\n+\n+    public EnvParameters getEnvParameters() {\n+\treturn this;\n+    }\n+\n+    public Question getEnvFirstQuestion() {\n+\tswitch (mode) {\n+\tcase PRECOMPILE:\n+\t    return qPrecompile;\n+\tcase DEVELOPER:\n+\t    return qDeveloper;\n+\tdefault:\n+\t    return qName;\n+\t}\n+    }\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Precompile mode\n+\n+    private Question qPrecompile = new NullQuestion(this, \"precompile\") {\n+\t    public Question getNext() {\n+\t\treturn qEnvEnd;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"script.mode\", \"precompile\");\n+\t\tdata.put(\"command.compile.java\", System.getProperty(\"command.compile.java\"));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Developer mode\n+\n+    private Question qDeveloper = new NullQuestion(this, \"developer\") {\n+\t    public Question getNext() {\n+\t\treturn qName;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"script.mode\", \"developer\");\n+\t\tdata.put(\"command.compile.java\", System.getProperty(\"command.compile.java\"));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Give a name for this configuration\n+\n+    private StringQuestion qName = new StringQuestion(this, \"name\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse\n+\t\t    return qDesc;\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Give a description for this configuration\n+\n+    private Question qDesc = new StringQuestion(this, \"desc\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse\n+\t\t    return qCmdType;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"description\", String.valueOf(value));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ How do you with to execute tests:\n+    \/\/   OTHER_VM:  on the same system as JT Harness, in separate process\n+    \/\/   AGENT:   on a different system, using JT Harness Agent\n+\n+    private static final String AGENT = \"agent\";\n+    private static final String OTHER_VM = \"otherVM\";\n+\n+    private Question qCmdType = new ChoiceQuestion(this, \"cmdType\") {\n+\t    {\n+\t\tsetChoices(new String[] { null, OTHER_VM, AGENT }, true);\n+\t    }\n+\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse if (value.equals(OTHER_VM))\n+\t\t    return qJVM;\n+\t\telse\n+\t\t    return qTestVerboseLevel;\n+\t    }\n+\n+\t    public Checklist.Item[] getChecklistItems() {\n+\t\tif (value != AGENT) \n+\t\t    return null;\n+\n+\t\treturn new Checklist.Item[] {\n+\t\t    createChecklistItem(\"agent\", \"agent.needToStart\"),\n+\t\t};\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tString cmd;\n+\t\tif (value != null && value.equals(OTHER_VM))\n+\t\t    cmd = getOtherVMExecuteCommand();\n+\t\telse\n+\t\t    cmd = \"com.sun.javatest.agent.ActiveAgentCommand \" +\n+\t\t\t\"com.sun.javatest.lib.ExecStdTestSameJVMCmd \" +\n+\t\t\t\"$testExecuteClass $testExecuteArgs\";\n+\t\tdata.put(\"command.execute\", cmd);\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ What is the path for the JVM you wish to use to execute the tests?\n+\n+    private FileQuestion qJVM = new FileQuestion(this, \"jvm\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.getPath().length() == 0) \n+\t\t    return null;\n+\t\telse if (! (value.exists() && value.isFile() && value.canRead())) \n+\t\t    return qBadJVM;\n+\t\telse \n+\t\t    return qTestVerboseLevel;\n+\t    }\n+\t};\n+\n+    private Question qBadJVM = new ErrorQuestion(this, \"badJVM\") {\n+\t    public Object[] getTextArgs() {\n+\t\treturn new Object[] { qJVM.getValue().getPath() };\n+\t    }\n+\t};\n+\n+    private String getOtherVMExecuteCommand() {\n+\tchar fs = File.separatorChar;\n+\tchar ps = File.pathSeparatorChar;\n+\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"com.sun.javatest.lib.ExecStdTestOtherJVMCmd \");\n+\tFile jvm = qJVM.getValue();\n+\tsb.append(jvm == null ? \"unknown_jvm\" : jvm.getPath());\n+\tsb.append(\" -classpath $testSuiteRootDir\" + fs + \"lib\" + fs + \"jtdemots.jar\" + ps \n+\t\t+ \"$testSuiteRootDir\" + fs + \"lib\" + fs + \"demoapi.jar\" + ps \n+\t\t+ \"$testSuiteRootDir\" + fs + \"lib\" + fs + \"javatest.jar \");\n+\tsb.append(\"$testExecuteClass $testExecuteArgs\");\n+\treturn sb.toString();\n+    }\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ What is the test verbose level?\n+\n+    private static final String LOW = \"low\";\n+    private static final String MEDIUM = \"medium\";\n+    private static final String HIGH = \"high\";\n+\n+    private Question qTestVerboseLevel = new ChoiceQuestion(this, \"testVerboseLevel\") {\n+\t    {\n+\t\tsetChoices(new String[] { null, LOW, MEDIUM, HIGH }, true);\n+\t    }\n+\n+\t    public Question getNext() {\n+\t\treturn qEnvEnd;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"testVerboseLevel\", String.valueOf(value));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+\n+    private Question qEnvEnd = new NullQuestion(this, \"envEnd\") {\n+\t    public Question getNext() {\n+\t\treturn getEnvSuccessorQuestion();\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+\n+    private static final int PRECOMPILE = 1;\n+    private static final int CERTIFY = 2;\n+    private static final int DEVELOPER = 3;\n+    private int mode;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/DemoTSInterview.java","additions":270,"deletions":0,"binary":false,"changes":270,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/i18n.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/i18n.properties","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/cmdType.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/cmdType.html","status":"copied"},{"patch":"@@ -0,0 +1,65 @@\n+<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ \n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+ \n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+ \n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ \n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+\n+<html>\n+<head>\n+<title>JT Harness Tutorial<\/title>\n+<link rel=\"stylesheet\" href=\"tutorial.css\" type=\"text\/css\">\n+<\/head>\n+<body>\n+Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+<br>\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+<\/p>\n+<p>\n+This code is free software; you can redistribute it and\/or modify it\n+under the terms of the GNU General Public License version 2 only, as\n+published by the Free Software Foundation.  Oracle designates this\n+particular file as subject to the \"Classpath\" exception as provided\n+by Oracle in the LICENSE file that accompanied this code.\n+<\/p>\n+<p>\n+This code is distributed in the hope that it will be useful, but WITHOUT\n+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+version 2 for more details (a copy is included in the LICENSE file that\n+accompanied this code).\n+<\/p>\n+<p>\n+You should have received a copy of the GNU General Public License version\n+2 along with this work; if not, write to the Free Software Foundation,\n+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+<\/p>\n+<p>\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+CA 95054 USA or visit <a href=\"http:\/\/www.oracle.com\/\">www.oracle.com<\/a>\n+if you need additional information or questions.\n+<\/p>\n+<\/body>\n+<\/html>\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/copyright.html","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/desc.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/desc.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/developer.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/developer.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/envEnd.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/envEnd.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/epilog.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/epilog.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/jvm.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/jvm.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/map.xml","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/map.xml","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/moreInfo.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/moreInfo.css","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/name.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/name.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/precompile.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/precompile.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/prolog.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/prolog.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/default\/testVerboseLevel.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/testVerboseLevel.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/demots.hs","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/demots.hs","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/images\/blueListBull.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/blueListBull.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/images\/hg_note.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/hg_note.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/images\/hg_proc.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/hg_proc.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/images\/infoButtonSmall.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/infoButtonSmall.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src\/src\/com\/sun\/demots\/moreInfo\/images\/nextButtonSmall.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/nextButtonSmall.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/README.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/README.html","status":"copied"},{"patch":"@@ -0,0 +1,369 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi;\n+\n+\/**\n+ * Basic support for immutable arbitrary size integers. \n+ * Numbers are held as a sign and an array of ints. The sign is\n+ * +1 for positive numbers, 0 for zero, and -1 for negative \n+ * numbers. Each element in the array holds a group of decimal\n+ * digits; the array is of minimal size and is  arranged in \n+ * little-endian order (thus, element 0 holds the least \n+ * significant group of digits.) Because the array is \n+ * always of minimal size, zero is represented by a sign of zero \n+ * and an empty array.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a test suite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for big numbers, \n+\/\/ see java.math.BigInteger.\n+\n+public class BigNum\n+{\n+    \/**\n+     * Create a BigNum for a standard long integer.\n+     * @param n the value to be converted to a BigNum representation\n+     *\/\n+    public BigNum(long n) {\n+\tif (n == Integer.MIN_VALUE) {\n+\t    throw new IllegalArgumentException();\n+\t}\n+\telse if (n < 0) {\n+\t    sign = -1;\n+\t    n = -n;\n+\t}\n+\telse if (n == 0) {\n+\t    data = new int[0];\n+\t    sign = 0;\n+\t    return;\n+\t}\n+\telse \n+\t    sign = 1;\n+\n+\tint size = 0;\n+\tlong n1 = n;\n+\twhile (n1 > 0) {\n+\t    size++;\n+\t    n1 = n1 \/ MAX_PER_CELL;\n+\t}\n+\n+\tdata = new int[size];\n+\tfor (int i = 0; i < size; i++) {\n+\t    data[i] = (int) (n % MAX_PER_CELL);\n+\t    n = n \/ MAX_PER_CELL;\n+\t}\n+    }\n+\n+    \/**\n+     * Create a BigNum from a string. The string must be of\n+     * the form of an optional '-', followed by an arbitrary\n+     * non-empty sequence of digits.\n+     * @param s the string to be converted.\n+     * @throws NullPointerException if the argument is null.\n+     * @throws NumberFormatException if the argument string\n+     * is invalid.\n+     *\/\n+    public BigNum(String s) {\n+\tif (s == null)\n+\t    throw new NullPointerException();\n+\t\n+\tint slen = s.length();\n+\tif (slen == 0)\n+\t    throw new NumberFormatException(\"empty string\");\n+\n+\tint i = 0;\n+\t\n+\t\/\/ check for leading - sign\n+\tif (s.charAt(0) == '-') {\n+\t    sign = -1;\n+\t    i = 1;\n+\t}\n+\telse\n+\t    sign = 1; \/\/ assume positive, for now\n+\n+\t\/\/ check for (and ignore) redundant leading zeroes\n+\twhile (i < slen - 1 && s.charAt(i) == '0')\n+\t    i++;\n+\n+\t\/\/ check for 0\n+\tif (i == slen - 1 && s.charAt(i) == '0') {\n+\t    sign = 0; \n+\t    data = new int[0];\n+\t    return;\n+\t}\n+\t\n+\t\/\/ check for no significant digits\n+\tif (i == slen)\n+\t    throw new NumberFormatException(\"no digits\");\n+\t\n+\t\/\/ allocate array of cells for number\n+\tint numDigits = slen - i; \/\/ i currently points to the first significant digit\n+\tint numCells = (numDigits + DIGITS_PER_CELL - 1) \/ DIGITS_PER_CELL;\n+\tdata = new int[numCells];\n+\n+\t\/\/ scan digits in string\n+\tfor ( ; i < slen; i++) {\n+\t    char c = s.charAt(i);\n+\t    if ( c < '0' || c > '9')\n+\t\tthrow new NumberFormatException(\"bad char\");\n+\t    int d = (slen - 1 - i) \/ DIGITS_PER_CELL;\n+\t    data[d] = data[d] * 10 + (c - '0');\n+\t}\n+    }\n+\n+    \/**\n+     * Add another BigNum to this one.\n+     * @param other The BigNum to be added\n+     * @return a BigNum containing the sum\n+     *\/\n+    public BigNum add(BigNum other) {\n+\tif (sign == 0)\n+\t    return other;\n+\telse if (other.sign == 0)\n+\t    return this;\n+\telse if (sign == other.sign) \n+\t    return new BigNum(sign, add(data, other.data));\n+\telse {\n+\t    switch (compare(data, other.data)) {\n+\t    case +1:\n+\t\t\/\/ this is bigger in magnitude, so result is\n+\t\t\/\/ the difference, with the sign of this\n+\t\treturn new BigNum(sign, subtract(data, other.data));\n+\t    case 0: \n+\t\t\/\/ numbers are equal in magnitude, but different\n+\t\t\/\/ in sign; result must be zero\n+\t\treturn new BigNum(0);\n+\t    case -1:\n+\t\t\/\/ other is bigger in magnitude, so result is \n+\t\t\/\/ the difference, with the sign of other\n+\t\treturn new BigNum(other.sign, subtract(other.data, data));\n+\t    default:\n+\t\tthrow new Error(\"should not happen\");\n+\t    }\n+\t}\n+    }\n+\n+    \/**\n+     * Subtract another BigNum from this one.\n+     * @param other The BigNum to be added\n+     * @return a BigNum containing the sum\n+     *\/\n+    public BigNum subtract(BigNum other) {\n+\tif (sign == 0)\n+\t    return new BigNum(-other.sign, other.data);\n+\telse if (other.sign == 0)\n+\t    return this;\n+\telse if (sign == other.sign) {\n+\t    switch (compare(data, other.data)) {\n+\t    case +1:\n+\t\t\/\/ this is bigger in magnitude, so result is\n+\t\t\/\/ the difference, with the sign of this\n+\t\treturn new BigNum(sign, subtract(data, other.data));\n+\t    case 0: \n+\t\t\/\/ numbers are equal in magnitude, but different\n+\t\t\/\/ in sign; result must be zero\n+\t\treturn new BigNum(0);\n+\t    case -1:\n+\t\t\/\/ other is bigger in magnitude, so result is \n+\t\t\/\/ the difference, with the opposite sign of other\n+\t\treturn new BigNum(-other.sign, subtract(other.data, data));\n+\t    default:\n+\t\tthrow new Error(\"should not happen\");\n+\t    }\n+\t}\n+\telse \n+\t    return new BigNum(sign, add(data, other.data));\n+    }\n+\n+    \/**\n+     * Compare this BigNum with another.\n+     * @param other the BigNum to be compared against\n+     * @return -1 is this BigNum is smaller than <i>other<\/i>, \n+     *\t0 if they are equal, \n+     * and +1 if this BigNum is greater than <i>other<\/i>\n+     *\/\n+    public int compare(BigNum other) {\n+\tif (sign == other.sign) {\n+\t    int cmp = compare(data, other.data);\n+\t    return (sign < 0 ? -cmp : cmp);\n+\t}\n+\telse {\n+\t    return (sign > other.sign ? 1 : -1);\n+\t}\t   \n+    }\n+\n+    \/**\n+     * Check this BigNum for equality with another object.\n+     * @param other the object to be compared against\n+     * @return true if and only if <i>other<\/i> is a BigNum\n+     * representing the same value as this one.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof BigNum))\n+\t    return false;\n+\n+\tBigNum o = (BigNum) other;\n+\n+\tif (sign != o.sign)\n+\t    return false;\n+\n+\tif (data.length != o.data.length)\n+\t    return false;\n+\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    if (data[i] != o.data[i])\n+\t\treturn false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * Convert this BigNum to a printable representation.\n+     * @return a string containing a negative sign if necessary, followed\n+     * by the decimal digits of the number\n+     *\/\n+    public String toString() {\n+\tif (sign == 0)\n+\t    return \"0\";\n+\n+\tStringBuffer sb = new StringBuffer();\n+\tif (sign < 0)\n+\t    sb.append('-');\n+\t\n+\tboolean suppressZero = true;\n+\tfor (int i = data.length - 1; i >= 0; i--) {\n+\t    int d = data[i];\n+\t    for (int j = DIGITS_PER_CELL - 1; j >= 0; j--) {\n+\t\tint digit = (d \/ POWERS_OF_10[j]) % 10;\n+\t\tif (digit > 0) {\n+\t\t    suppressZero = false;\n+\t\t    sb.append((char) ('0' + digit));\n+\t\t}\n+\t\telse if (!suppressZero)\n+\t\t    sb.append('0');\n+\t    }\n+\t}\n+\n+\treturn sb.toString();\n+    }\n+\n+    private BigNum(int sign, int[] data) {\n+\tthis.sign = sign;\n+\tthis.data = data;\n+    }\n+\n+    private int[] add(int[] d1, int[] d2) {\n+\tint[] sum = new int[Math.max(d1.length, d2.length)];\n+\n+\tint carry = 0;\n+\tfor (int i = 0; i < sum.length; i++) {\n+\t    int s = carry;\n+\t    if (i < d1.length)\n+\t\ts += d1[i];\n+\t    if (i < d2.length)\n+\t\ts += d2[i];\n+\t    sum[i] = s % MAX_PER_CELL;\n+\t    carry = s \/ MAX_PER_CELL;\n+\t}\n+\n+\tif (carry > 0) {\n+\t    int[] x = new int[sum.length + 1];\n+\t    System.arraycopy(sum, 0, x, 0, sum.length);\n+\t    x[sum.length] = carry;\n+\t    sum = x;\n+\t}\n+\n+\treturn sum;\n+    }\n+\n+    \/\/ d1 is assumed to be greater than d2\n+    private int[] subtract(int[] d1, int[] d2) {\n+\tif (d1.length < d2.length)\n+\t    throw new IllegalArgumentException();\n+\n+\tint[] diff = new int[d1.length];\n+\n+\tint borrow = 0;\n+\tfor (int i = 0; i < diff.length; i++) {\n+\t    int d = d1[i] - borrow;\n+\t    if (i < d2.length)\n+\t\td = d - d2[i];\n+\t    if (d < 0) {\n+\t\td = d + MAX_PER_CELL;\n+\t\tborrow = 1;\n+\t    }\n+\t    else\n+\t\tborrow = 0;\n+\t    diff[i] = d;\n+\t}\n+\n+\tif (borrow != 0)\n+\t    throw new IllegalArgumentException();\n+\n+\tint newSize = diff.length;\n+\twhile (newSize > 0 && diff[newSize - 1] == 0)\n+\t    newSize--;\n+\n+\tif (newSize < diff.length) {\n+\t    int[] newDiff = new int[newSize];\n+\t    System.arraycopy(diff, 0, newDiff, 0, newDiff.length);\n+\t    diff = newDiff;\n+\t}\n+\n+\treturn diff;\n+    }\n+\n+    private int compare(int[] d1, int[] d2) {\n+\tif (d1.length > d2.length)\n+\t    return 1;\n+\t\n+\tif (d1.length < d2.length)\n+\t    return -1;\n+\n+\t\/\/ d1.length == d2.length\n+\tfor (int i = d1.length - 1; i >= 0; i--) {\n+\t    int n1 = d1[i];\n+\t    int n2 = d2[i];\n+\t    if (n1 > n2)\n+\t\treturn 1;\n+\t    if (n1 < n2)\n+\t\treturn -1;\n+\t}\n+\t\n+\treturn 0;\n+    }\n+\n+    private int sign;\n+    private int[] data;\n+\n+    private static final int[] POWERS_OF_10 = {1, 10, 100, 1000, 10000, 100000, 1000000};\n+    private static final int DIGITS_PER_CELL = 6;\n+    private static final int MAX_PER_CELL = POWERS_OF_10[DIGITS_PER_CELL];\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demoapi\/src\/com\/sun\/demoapi\/BigNum.java","additions":369,"deletions":0,"binary":false,"changes":369,"status":"added"},{"patch":"@@ -0,0 +1,277 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Simple linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The list keeps references to the first and last entry in the list.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class DoublyLinkedList\n+{\n+    \/**\n+     * An entry in a DoublyLinkedList, containing client data \n+     * and links to the previous and next entries.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a DoublyLinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry prev, Entry next) {\n+\t    this.data = data;\n+\t    this.prev = prev;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list,\n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\n+\t\/**\n+\t * Get the previous entry in the list, if any.\n+\t * @return the previous entry in the list,\n+\t * or null if this is the first entry.\n+\t *\/\n+\tpublic Entry getPrevious() {\n+\t    return prev;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    Entry e = new Entry(data, this, next);\n+\t    if (next == null)\n+\t\tlast = e;\n+\t    else\n+\t\tnext.prev = e;\n+\t    next = e;\n+\t}\n+\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertBefore(Object data) {\n+\t    Entry e = new Entry(data, prev, this);\n+\t    if (prev == null)\n+\t\tfirst = e;\n+\t    else\n+\t\tprev.next = e;\n+\t    prev = e;\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t *\/\n+\tpublic Entry remove() {\n+\t    if (prev == null)\n+\t\tfirst = next;\n+\t    else\n+\t\tprev.next = next;\n+\n+\t    if (next == null)\n+\t\tlast = prev;\n+\t    else\n+\t\tnext.prev = prev;\n+\n+\t    return next;\n+\t}\n+\n+\tObject data;\n+\tEntry prev;\n+\tEntry next;\n+    }\n+\n+    \/**\n+     * Create an empty linked list.\n+     *\/\n+    public DoublyLinkedList() {\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (e.data == data)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Get the last entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getLast() {\n+\treturn last;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public void insert(Object data) {\n+\tEntry e = new Entry(data, null, first);\n+\tif (first == null) \n+\t    last = e;\n+\telse\n+\t    first.prev = e;\n+\tfirst = e;\n+    }\n+\n+    \/**\n+     * Append an entry containing the specified client data \n+     * to the end of the list.\n+     *\/\n+    public void append(Object o) {\n+\tEntry e = new Entry(o, last, null);\n+\tif (first == null)\n+\t    first = e;\n+\telse\n+\t    last.next = e;\n+\tlast = e;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (e.data == data) {\n+\t\te.remove();\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof DoublyLinkedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((DoublyLinkedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"DoublyLinkedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Entry last;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demoapi\/src\/com\/sun\/demoapi\/lists\/DoublyLinkedList.java","additions":277,"deletions":0,"binary":false,"changes":277,"status":"added"},{"patch":"@@ -0,0 +1,254 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Simple linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The list keeps references to the first and last entry in the list.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class LinkedList\n+{\n+    \/**\n+     * An entry in a LinkedList, containing client data and a link to the next entry.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a LinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry next) {\n+\t    this.data = data;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list, \n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    next = new Entry(data, next);\n+\t    if (last == this)\n+\t\tlast = next;\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t * @throws IllegalStateException if this entry is not in the list\n+\t * in which it was created: for example, if it has already been removed.\n+\t *\/\n+\tpublic Entry remove() {\n+\t    for (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t\tif (e == this) {\n+\t\t    \/\/ update the pointer to this cell\n+\t\t    if (prev == null) \n+\t\t\tfirst = e.next;\n+\t\t    else \n+\t\t\tprev.next = e.next;\n+\t\t    \n+\t\t    \/\/ update last pointer if necessary\n+\t\t    if (e == last)\n+\t\t\tlast = prev;\n+\t\t    \n+\t\t    return next;\n+\t\t}\n+\t    }\n+\t    \n+\t    \/\/ not found\n+\t    throw new IllegalStateException();\n+\t}\n+\n+\tObject data;\n+\tEntry next;\n+    }\n+\n+    \/**\n+     * Create an empty linked list.\n+     *\/\n+    public LinkedList() {\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (e.data == data)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public void insert(Object data) {\n+\tEntry e = new Entry(data, first);\n+\tfirst = e;\n+\tif (last == null)\n+\t    last = first;\n+    }\n+\n+    \/**\n+     * Append an entry containing the specified client data \n+     * to the end of the list.\n+     *\/\n+    public void append(Object o) {\n+\tEntry e = new Entry(o, null);\n+\tif (first == null) \n+\t    first = e;\n+\telse\n+\t    last.next = e;\n+\tlast = e;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (e.data == null ? data == null : e.data.equals(data)) {\n+\t\t\/\/ update the pointer to this cell\n+\t\tif (prev == null) \n+\t\t    first = e.next;\n+\t\telse \n+\t\t    prev.next = e.next;\n+\n+\t\t\/\/ update last pointer if necessary\n+\t\tif (e == last)\n+\t\t    last = prev;\n+\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof LinkedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((LinkedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"LinkedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Entry last;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demoapi\/src\/com\/sun\/demoapi\/lists\/LinkedList.java","additions":254,"deletions":0,"binary":false,"changes":254,"status":"added"},{"patch":"@@ -0,0 +1,258 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demoapi.lists;\n+\n+\/**\n+ * Sorted linked lists of objects.\n+ * A list is represented by a series of Entry objects, each containing\n+ * an item of client data, and a link to the next entry in the list.\n+ * The entries are sorted according to a Comparator used to compare the\n+ * items of client data.\n+ *\/\n+\n+\/\/ Note: this class is purely provided to be the basis of some\n+\/\/ examples for writing a testsuite. The code has been written with \n+\/\/ simplicity in mind, rather than efficiency, and may contain \n+\/\/ deliberate coding errors. For proper support for linked lists, \n+\/\/ see the classes in java.util.\n+\n+public class SortedList\n+{\n+    \/**\n+     * An entry in a LinkedList, containing client data and a link to the next entry.\n+     *\/\n+    public class Entry {\n+\t\/**\n+\t * Create an entry to be put in a LinkedList.\n+\t * Entries are not created directly by the client: \n+\t * they are created automatically by the methods that\n+\t * insert data into the list as a whole.\n+\t * @param data Client data to be stored in this entry\n+\t * @param next The next entry to appear after this one.\n+\t * @see #insert\n+\t * @see ##append\n+\t * @see #insertAfter\n+\t *\/\n+\tEntry(Object data, Entry next) {\n+\t    this.data = data;\n+\t    this.next = next;\n+\t}\n+\n+\t\/** \n+\t * Get the client data in this entry in the list\n+\t * @return the client data in this entry in the list\n+\t *\/\n+\tpublic Object getData() {\n+\t    return data;\n+\t}\n+\n+\t\/**\n+\t * Get the next entry in the list, if any.\n+\t * @return the next entry in the list, \n+\t * or null if this is the last entry.\n+\t *\/\n+\tpublic Entry getNext() {\n+\t    return next;\n+\t}\n+\n+\t\/**\n+\t * Insert a new entry in the list, after this one.\n+\t * @param data the client data to be stored in this entry\n+\t *\/\n+\tpublic void insertAfter(Object data) {\n+\t    next = new Entry(data, next);\n+\t}\n+\n+\t\/**\n+\t * Remove this entry from the list.\n+\t * @return the next entry in the list, or null if none\n+\t * @throws IllegalStateException if this entry is not in the list\n+\t * in which it was created: for example, if it has already been removed.\n+\t *\/\n+\tpublic Entry remove() {\n+\t    for (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t\tif (e == this) {\n+\t\t    \/\/ update the link to this entry\n+\t\t    if (prev == null) \n+\t\t\tfirst = e.next;\n+\t\t    else \n+\t\t\tprev.next = e.next;\n+\t\t    \n+\t\t    return next;\n+\t\t}\n+\t    }\n+\t    \n+\t    \/\/ not found\n+\t    throw new IllegalStateException();\n+\t}\n+\n+\tObject data;\n+\tEntry next;\n+    };\n+\n+    public static interface Comparator {\n+\tint compare(Object a, Object b);\n+    };\n+\n+    \/**\n+     * Create an empty list.\n+     *\/\n+    public SortedList(Comparator comp, boolean ignoreDuplicates) {\n+\tthis.comp = comp;\n+\tthis.ignoreDuplicates = ignoreDuplicates;\n+    }\n+\n+    \/**\n+     * Determine if a linked list is empty.\n+     * @return true if the list has no entries, and false otherwise.\n+     *\/\n+    public boolean isEmpty() {\n+\treturn (first == null);\n+    }\n+\n+    \/**\n+     * Determine if the list contains an entry with a specific item of\n+     * client data.\n+     * @return true if the list contains an entry that matches the \n+     * given client data, and false otherwise.\n+     *\/\n+    public boolean contains(Object data) {\n+\tfor (Entry e = first; e != null; e = e.next) {\n+\t    if (comp.compare(e.data, data) == 0)\n+\t\treturn true;\n+\t}\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Get the first entry in the list.\n+     * @return the first entry in the list\n+     * @see Entry#getNext\n+     *\/\n+    public Entry getFirst() {\n+\treturn first;\n+    }\n+\n+    \/**\n+     * Insert a new entry containing the specified client data\n+     * at the beginning of the list.\n+     * @param data the client data for the new entry\n+     *\/\n+    public boolean insert(Object data) {\n+\tif (first == null) {\n+\t    first = new Entry(data, null);\n+\t    return true;\n+\t}\n+\n+\tEntry prev = null;\n+\tfor (Entry e = first; e != null; prev = e, e = e.next) {\n+\t    int c = comp.compare(data, e.data);\n+\t    if (c > 0)\n+\t\tcontinue;\n+\t    else if (c == 0 && ignoreDuplicates)\n+\t\treturn false;\n+\t    else \n+\t\tbreak;\n+\t}\n+\n+\t\/\/ found where to insert\n+\tif (prev == null)\n+\t    first = new Entry(data, first);\n+\telse\n+\t    prev.next = new Entry(data, prev.next);\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * Remove the first entry from the list that contains the\n+     * specified client data.\n+     * @param data The client data indicating the entry to be removed\n+     * @return true if an entry was found and removed that contained\n+     * the specified client data, and false otherwise.\n+     *\/\n+    public boolean remove(Object data) {\n+\tfor (Entry e = first, prev = null; e != null; prev = e, e = e.next) {\n+\t    if (comp.compare(e.data, data) == 0) {\n+\t\t\/\/ update the pointer to this cell\n+\t\tif (prev == null) \n+\t\t    first = e.next;\n+\t\telse \n+\t\t    prev.next = e.next;\n+\n+\t\treturn true;\n+\t    }\n+\t}\n+\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    \/**\n+     * Check if the contents of this list match another.\n+     * @param other An object to be checked for equality with this one\n+     * @return true if the other object is a linked list, and corresponding\n+     * entries in the two lists are either both null, or are equal.\n+     *\/\n+    public boolean equals(Object other) {\n+\tif (!(other instanceof SortedList))\n+\t    return false;\n+\n+\tEntry e1 = first;\n+\tEntry e2 = ((SortedList) other).first;\n+\twhile (e1 != null && e2 != null) {\n+\t    boolean match = (e1.data == null ? e2.data == null : e1.data.equals(e2.data));\n+\t    if (!match)\n+\t\treturn false;\n+\n+\t     e1 = e1.next;\n+\t     e2 = e2.next;\n+\t}\n+\n+\treturn (e1 == null && e2 == null);\n+    }\n+\n+    \/**\n+     * Return a string representation of the list.\n+     * @return a string representation of the list\n+     *\/\n+    public String toString() {\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"SortedList[\");\n+\tfor (Entry p = first; p != null; p = p.next ) {\n+\t    if (p != first)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(p.data));\n+\t}\n+\tsb.append(\"]\");\n+\treturn sb.toString();\n+    }\n+\n+    private Entry first;\n+    private Comparator comp;\n+    private boolean ignoreDuplicates;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demoapi\/src\/com\/sun\/demoapi\/lists\/SortedList.java","additions":258,"deletions":0,"binary":false,"changes":258,"status":"added"},{"patch":"@@ -0,0 +1,28 @@\n+# Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+\n+\n+# demo exclude list\n+\n+# test name\t\t\t\tbugid(s)   keyword(s)  brief description \n+lists\/DoublyLinkedList\/InsertTest.java  0  \t   test        test contains error\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/lib\/demo.jtx","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/lib\/demots.jti","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/lib\/demots.jti","status":"copied"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.add.\n+ *\n+ * @test\n+ * @sources AddTest.java\n+ * @executeClass com.sun.demots.tests.bignum.AddTest\n+ *\/\n+public class AddTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AddTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\", \"-24691357802469135780\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", \"-12345678901234568013\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", \"-12345678901234567767\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\",                     \"0\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",           \"-2469135780\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\",           \"-1234568013\");\n+\tok = ok & test(\"-1234567890\",                     \"0\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",                   \"123\",           \"-1234567767\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\",  \"12345678900000000000\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\", \"-12345678901234568013\");\n+\tok = ok & test(\"-123\",           \"-1234567890\",           \"-1234568013\");\n+\tok = ok & test(\"-123\",                  \"-123\",                  \"-246\");\n+\tok = ok & test(\"-123\",                     \"0\",                  \"-123\");\n+\tok = ok & test(\"-123\",                   \"123\",                     \"0\");\n+\tok = ok & test(\"-123\",            \"1234567890\",            \"1234567767\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\",  \"12345678901234567767\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\",                  \"-123\");\n+\tok = ok & test(\"0\",                     \"0\",                     \"0\");\n+\tok = ok & test(\"0\",                   \"123\",                   \"123\");\n+\tok = ok & test(\"0\",            \"1234567890\",            \"1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\", \"-12345678901234567767\");\n+\tok = ok & test(\"123\",           \"-1234567890\",           \"-1234567767\");\n+\tok = ok & test(\"123\",                  \"-123\",                     \"0\");\n+\tok = ok & test(\"123\",                     \"0\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"123\",                   \"246\");\n+\tok = ok & test(\"123\",            \"1234567890\",            \"1234568013\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\",  \"12345678901234568013\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",                  \"-123\",            \"1234567767\");\n+\tok = ok & test(\"1234567890\",                     \"0\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",                   \"123\",            \"1234568013\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\",            \"2469135780\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\",  \"12345678902469135780\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\",                    \"0\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\", \"12345678900000000000\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\", \"12345678901234567767\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\", \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\", \"12345678901234568013\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\", \"12345678902469135780\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\", \"24691357802469135780\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.add(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/AddTest.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.compare.\n+ *\n+ * @test\n+ * @sources CompareTest.java\n+ * @executeClass com.sun.demots.tests.bignum.CompareTest\n+ *\/\n+public class CompareTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new CompareTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567891\",  1);\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\",  0);\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567889\", -1);\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", -1);\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", -1);\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", -1);\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"-1234567890\",           \"-1234567891\",  1);\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",  0);\n+\tok = ok & test(\"-1234567890\",           \"-1234567889\", -1);\n+\tok = ok & test(\"-1234567890\",                  \"-123\", -1);\n+\tok = ok & test(\"-1234567890\",                     \"0\", -1);\n+\tok = ok & test(\"-1234567890\",                   \"123\", -1);\n+\tok = ok & test(\"-1234567890\",            \"1234567890\", -1);\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"-123\",           \"-1234567890\",  1);\n+\tok = ok & test(\"-123\",                  \"-124\",  1);\n+\tok = ok & test(\"-123\",                  \"-123\",  0);\n+\tok = ok & test(\"-123\",                  \"-122\", -1);\n+\tok = ok & test(\"-123\",                     \"0\", -1);\n+\tok = ok & test(\"-123\",                   \"123\", -1);\n+\tok = ok & test(\"-123\",            \"1234567890\", -1);\n+\tok = ok & test(\"-123\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"0\",           \"-1234567890\",  1);\n+\tok = ok & test(\"0\",                  \"-123\",  1);\n+\tok = ok & test(\"0\",                    \"-1\",  1);\n+\tok = ok & test(\"0\",                     \"0\",  0);\n+\tok = ok & test(\"0\",                     \"1\", -1);\n+\tok = ok & test(\"0\",                   \"123\", -1);\n+\tok = ok & test(\"0\",            \"1234567890\", -1);\n+\tok = ok & test(\"0\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"123\",           \"-1234567890\",  1);\n+\tok = ok & test(\"123\",                  \"-123\",  1);\n+\tok = ok & test(\"123\",                     \"0\",  1);\n+\tok = ok & test(\"123\",                   \"122\",  1);\n+\tok = ok & test(\"123\",                   \"123\",  0);\n+\tok = ok & test(\"123\",                   \"124\", -1);\n+\tok = ok & test(\"123\",            \"1234567890\", -1);\n+\tok = ok & test(\"123\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",  1);\n+\tok = ok & test(\"1234567890\",                  \"-123\",  1);\n+\tok = ok & test(\"1234567890\",                     \"0\",  1);\n+\tok = ok & test(\"1234567890\",                   \"123\",  1);\n+\tok = ok & test(\"1234567890\",            \"1234567889\",  1);\n+\tok = ok & test(\"1234567890\",            \"1234567890\",  0);\n+\tok = ok & test(\"1234567890\",            \"1234567891\", -1);\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\", -1);\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\",  1);\n+\tok = ok & test(\"12345678901234567890\",                     \"0\",  1);\n+\tok = ok & test(\"12345678901234567890\",                   \"123\",  1);\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\",  1);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567889\",  1);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\",  0);\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567891\", -1);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, int expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tint actualResult = bn1.compare(bn2);\n+\tif (actualResult == expectedResult)\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + actualResult);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/CompareTest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,168 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.bignum.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567891\");\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567889\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567891\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567889\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\");\n+\tok = ok & test(\"-1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",                   \"123\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\");\n+\tok = ok & test(\"-123\",           \"-1234567890\");\n+\tok = ok & test(\"-123\",                  \"-124\");\n+\tok = ok & test(\"-123\",                  \"-123\");\n+\tok = ok & test(\"-123\",                  \"-122\");\n+\tok = ok & test(\"-123\",                     \"0\");\n+\tok = ok & test(\"-123\",                   \"123\");\n+\tok = ok & test(\"-123\",            \"1234567890\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\");\n+\tok = ok & test(\"0\",                    \"-1\");\n+\tok = ok & test(\"0\",                     \"0\");\n+\tok = ok & test(\"0\",                     \"1\");\n+\tok = ok & test(\"0\",                   \"123\");\n+\tok = ok & test(\"0\",            \"1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\");\n+\tok = ok & test(\"123\",           \"-1234567890\");\n+\tok = ok & test(\"123\",                  \"-123\");\n+\tok = ok & test(\"123\",                     \"0\");\n+\tok = ok & test(\"123\",                   \"122\");\n+\tok = ok & test(\"123\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"124\");\n+\tok = ok & test(\"123\",            \"1234567890\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"1234567890\",                  \"-123\");\n+\tok = ok & test(\"1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",                   \"123\");\n+\tok = ok & test(\"1234567890\",            \"1234567889\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",            \"1234567891\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567889\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567891\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tboolean actualResult = bn1.equals(bn2);\n+\tboolean expectedResult = s1.equals(s2);\n+\tif (actualResult == expectedResult)\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + actualResult);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/EqualsTest.java","additions":168,"deletions":0,"binary":false,"changes":168,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum(long).\n+ *\n+ * @test\n+ * @sources LongConstrTest.java\n+ * @executeClass com.sun.demots.tests.bignum.LongConstrTest\n+ *\/\n+public class LongConstrTest implements Test\n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new LongConstrTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\t\/\/ create some BigNums, convert them to strings and verify the results\n+\tok = ok & test(0);\n+\tok = ok & test(123);\n+\tok = ok & test(123456);\n+\tok = ok & test(123456789);\n+\tok = ok & test(123456789123456789L);\n+\n+\tok = ok & test(-123);\n+\tok = ok & test(-123456);\n+\tok = ok & test(-123456789);\n+\tok = ok & test(-123456789123456789L);\n+\n+\treturn (ok ? Status.passed(\"OK\") : Status.failed(\"some test cases failed\"));\n+    }\n+\n+    \/**\n+     * Test the BigNum(long) constructor. A BigNum is created with\n+     * the specified argument; the creation is then verified by\n+     * converting it to a string and comparing it against the string\n+     * representation of the original argument. If the test fails,\n+     * a message is written to the log.\n+     * @param n the argument for the BigNum constructor\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    private boolean test(long n) {\n+\tBigNum bn = new BigNum(n);\n+\tString bs = bn.toString();\n+\tif (bs.equals(String.valueOf(n)))\n+\t    return true; \n+\telse {\n+\t    err.println(\"test failed: expected: \" + n + \"; found: \" + bs);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/LongConstrTest.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"},{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum(String).\n+ *\n+ * @test\n+ * @sources StringConstrTest.java\n+ * @executeClass com.sun.demots.tests.bignum.StringConstrTest\n+ *\/\n+public class StringConstrTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new StringConstrTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\t\/\/ check zero\n+\tok = ok & posTest(\"0\");\n+\n+\t\/\/ check positive numbers\n+\tok = ok & posTest(\"123\");\n+\tok = ok & posTest(\"123456789\");\n+\tok = ok & posTest(\"1234567890123456789\");\n+\n+\t\/\/ check negative numbers\n+\tok = ok & posTest(\"-123\");\n+\tok = ok & posTest(\"-123456789\");\n+\tok = ok & posTest(\"-1234567890123456789\");\n+\n+\t\/\/ check leading zeroes ignored\n+\tok = ok & posTest(\"-0\", \"0\");\n+\tok = ok & posTest(\"000123456789\", \"123456789\");\n+\n+\t\/\/ check invalid numbers detected\n+\tok = ok & negTest(null,   NullPointerException.class);\n+\tok = ok & negTest(\"\",     NumberFormatException.class);\n+\tok = ok & negTest(\"-\",    NumberFormatException.class);\n+\tok = ok & negTest(\"a\",    NumberFormatException.class);\n+\tok = ok & negTest(\"-a\",   NumberFormatException.class);\n+\tok = ok & negTest(\"123a\", NumberFormatException.class);\n+\tok = ok & negTest(\"12.3\", NumberFormatException.class);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with the specified argument; the creation is then verified by\n+     * converting it to a string and comparing it against the \n+     * original argument. If the test fails, a message is written\n+     * to the log.\n+     * @param s the argument for the BigNum constructor\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    boolean posTest(String s) {\n+\treturn posTest(s, s);\n+    }\n+\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with a specified argument; the creation is then verified by\n+     * converting it to a string and comparing it a reference value. \n+     * If the test fails, a message is written to the log.\n+     * @param s1 the argument for the BigNum constructor\n+     * @param s2 the reference value, giving the expected string\n+     * representation of the BigNum that is created\n+     * @return true if the test succeeded, and false otherwise.\n+     *\/\n+    boolean posTest(String s1, String s2) {\n+\tBigNum bn = new BigNum(s1);\n+\tString bs = bn.toString();\n+\tif (bs != null && bs.equals(s2))\n+\t    return true;\n+\telse {\n+\t    err.println(\"arg: \" + s1 + \", expected: \" + s2 + \", found: \" + bs);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * Test the BigNum(String) constructor. A BigNum is created\n+     * with a specified argument; the creation is expected to fail\n+     * with a specified exception. The test passes if the correct\n+     * exception is thrown.\n+     * If the test fails, a message is written to the log.\n+     * @param s the argument for the BigNum constructor\n+     * @param expectedThrowableClass the class of the exception that \n+     * is expected to be thrown\n+     * @return true if the expected exception is thrown when calling\n+     * the BigNum(String) constructor, and false otherwise.\n+     *\/\n+    boolean negTest(String s, Class expectedThrowableClass) {\n+\ttry {\n+\t    BigNum bn = new BigNum(s);\n+\t    err.println(\"arg: \" + s + \", expected: \" \n+\t\t\t+ expectedThrowableClass.getName() \n+\t\t\t+ \", no exception thrown\");\n+\t    return false;\n+\t}\n+\tcatch (Throwable t) {\n+\t    if (expectedThrowableClass.isInstance(t))\n+\t\treturn true;\n+\t    else {\n+\t\terr.println(\"arg: \" + s + \", expected: \" + \n+\t\t\t    expectedThrowableClass.getName() + \n+\t\t\t    \", received \" + t.getClass().getName());\n+\t\treturn false;\n+\t    }\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/StringConstrTest.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.bignum;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.BigNum;\n+\n+\/**\n+ * A test for com.sun.demoapi.BigNum.subtract.\n+ *\n+ * @test\n+ * @sources SubtractTest.java\n+ * @executeClass com.sun.demots.tests.bignum.SubtractTest\n+ *\/\n+public class SubtractTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new SubtractTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(\"-12345678901234567890\", \"-12345678901234567890\",                     \"0\");\n+\tok = ok & test(\"-12345678901234567890\",           \"-1234567890\", \"-12345678900000000000\");\n+\tok = ok & test(\"-12345678901234567890\",                  \"-123\", \"-12345678901234567767\");\n+\tok = ok & test(\"-12345678901234567890\",                     \"0\", \"-12345678901234567890\");\n+\tok = ok & test(\"-12345678901234567890\",                   \"123\", \"-12345678901234568013\");\n+\tok = ok & test(\"-12345678901234567890\",            \"1234567890\", \"-12345678902469135780\");\n+\tok = ok & test(\"-12345678901234567890\",  \"12345678901234567890\", \"-24691357802469135780\");\n+\n+\tok = ok & test(\"-1234567890\", \"-12345678901234567890\",  \"12345678900000000000\");\n+\tok = ok & test(\"-1234567890\",           \"-1234567890\",                     \"0\");\n+\tok = ok & test(\"-1234567890\",                  \"-123\",           \"-1234567767\");\n+\tok = ok & test(\"-1234567890\",                     \"0\",           \"-1234567890\");\n+\tok = ok & test(\"-1234567890\",                   \"123\",           \"-1234568013\");\n+\tok = ok & test(\"-1234567890\",            \"1234567890\",           \"-2469135780\");\n+\tok = ok & test(\"-1234567890\",  \"12345678901234567890\", \"-12345678902469135780\");\n+\n+\tok = ok & test(\"-123\", \"-12345678901234567890\",  \"12345678901234567767\");\n+\tok = ok & test(\"-123\",           \"-1234567890\",            \"1234567767\");\n+\tok = ok & test(\"-123\",                  \"-123\",                     \"0\");\n+\tok = ok & test(\"-123\",                     \"0\",                  \"-123\");\n+\tok = ok & test(\"-123\",                   \"123\",                  \"-246\");\n+\tok = ok & test(\"-123\",            \"1234567890\",           \"-1234568013\");\n+\tok = ok & test(\"-123\",  \"12345678901234567890\", \"-12345678901234568013\");\n+\n+\tok = ok & test(\"0\", \"-12345678901234567890\",  \"12345678901234567890\");\n+\tok = ok & test(\"0\",           \"-1234567890\",            \"1234567890\");\n+\tok = ok & test(\"0\",                  \"-123\",                   \"123\");\n+\tok = ok & test(\"0\",                    \"0\",                     \"0\");\n+\tok = ok & test(\"0\",                   \"123\",                  \"-123\");\n+\tok = ok & test(\"0\",            \"1234567890\",           \"-1234567890\");\n+\tok = ok & test(\"0\",  \"12345678901234567890\", \"-12345678901234567890\");\n+\n+\tok = ok & test(\"123\", \"-12345678901234567890\",  \"12345678901234568013\");\n+\tok = ok & test(\"123\",           \"-1234567890\",            \"1234568013\");\n+\tok = ok & test(\"123\",                  \"-123\",                   \"246\");\n+\tok = ok & test(\"123\",                     \"0\",                   \"123\");\n+\tok = ok & test(\"123\",                   \"123\",                     \"0\");\n+\tok = ok & test(\"123\",            \"1234567890\",           \"-1234567767\");\n+\tok = ok & test(\"123\",  \"12345678901234567890\", \"-12345678901234567767\");\n+\n+\tok = ok & test(\"1234567890\", \"-12345678901234567890\",  \"12345678902469135780\");\n+\tok = ok & test(\"1234567890\",           \"-1234567890\",            \"2469135780\");\n+\tok = ok & test(\"1234567890\",                  \"-123\",            \"1234568013\");\n+\tok = ok & test(\"1234567890\",                     \"0\",            \"1234567890\");\n+\tok = ok & test(\"1234567890\",                   \"123\",            \"1234567767\");\n+\tok = ok & test(\"1234567890\",            \"1234567890\",                     \"0\");\n+\tok = ok & test(\"1234567890\",  \"12345678901234567890\", \"-12345678900000000000\");\n+\n+\tok = ok & test(\"12345678901234567890\", \"-12345678901234567890\", \"24691357802469135780\");\n+\tok = ok & test(\"12345678901234567890\",           \"-1234567890\", \"12345678902469135780\");\n+\tok = ok & test(\"12345678901234567890\",                  \"-123\", \"12345678901234568013\");\n+\tok = ok & test(\"12345678901234567890\",                     \"0\", \"12345678901234567890\");\n+\tok = ok & test(\"12345678901234567890\",                   \"123\", \"12345678901234567767\");\n+\tok = ok & test(\"12345678901234567890\",            \"1234567890\", \"12345678900000000000\");\n+\tok = ok & test(\"12345678901234567890\",  \"12345678901234567890\",                    \"0\");\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(String s1, String s2, String expectedResult) {\n+\tBigNum bn1 = new BigNum(s1);\n+\tBigNum bn2 = new BigNum(s2);\n+\tBigNum sum = bn1.subtract(bn2);\n+\tif (sum.toString().equals(expectedResult))\n+\t    return true;\n+\telse {\n+\t    err.println(\"s1: \" + s1 \n+\t\t\t+ \" s2: \" + s2 \n+\t\t\t+ \" expected result: \" + expectedResult\n+\t\t\t+ \" actual result: \" + sum);\n+\t    return false;\n+\t}\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/SubtractTest.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/BigNum\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/BigNum\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.append.\n+ *\n+ * @test\n+ * @sources AppendTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.AppendTest\n+ *\/\n+public class AppendTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AppendTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.append(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = expected + \",\" + String.valueOf(d);\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(DoublyLinkedList l, String expected) {\n+\treturn verifyForwards(l, expected) && verifyBackwards(l, expected);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.insert(0, \",\");\n+\t    sb.insert(0, String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/DoublyLinkedList\/AppendTest.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & positive_test(new Object[] { });\n+\tok = ok & positive_test(new Object[] { null });\n+\tok = ok & positive_test(new Object[] { \"a\" });\n+\tok = ok & positive_test(new Object[] { one, \"a\" });\n+\tok = ok & positive_test(new Object[] { one, null, \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & positive_test(new Object[] { one, two, three });\n+\tok = ok & positive_test(new Object[] { one, \"a\", null, two });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & positive_test(new Object[] { \"a\", one, \"a\", one });\n+\tok = ok & negative_test(new Object[] { }, new Object[] { \"a\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { \"b\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { one });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { null });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"b\", one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { one, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { null, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"a\", one , \"b\"});\n+\tok = ok & negative_test(new Object[] { \"a\", one }, one );\n+\tok = ok & negative_test(new Object[] { \"a\", one }, \"a\" );\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data) {\n+\t\/\/ create the list two different ways from the same data\n+\tLinkedList list1 = new LinkedList();\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.append(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/DoublyLinkedList\/EqualsTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    \/\/ The following line is deliberately incorrect, so that\n+\t    \/\/ the tutorial can illustrate the effects of a test that\n+\t    \/\/ fails.  The line should really be\n+\t    \/\/\tlist.insert(d);\n+\t    list.append(d); \n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = String.valueOf(d) + \",\" + expected;\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(DoublyLinkedList l, String expected) {\n+\treturn verifyForwards(l, expected) && verifyBackwards(l, expected);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.insert(0, \",\");\n+\t    sb.insert(0, String.valueOf(e.getData()));\n+\t}\n+\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/DoublyLinkedList\/InsertTest.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -0,0 +1,282 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.DoublyLinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.DoublyLinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.DoublyLinkedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.DoublyLinkedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 });\n+\tok = ok & test(new Object[] { i0, i10 });\n+\tok = ok & test(new Object[] { i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 });\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 });\n+\n+\tok = ok & test(new Object[] { \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10, i100 });\n+\n+\tok = ok & test(new Object[] { null, \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", null, \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", null, \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", null });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data);\n+\tboolean ok2 = testRemoveLast(data);\n+\tboolean ok3 = testRemoveMiddle(data);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data) {\n+\tDoublyLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    DoublyLinkedList createList(Object[] data) {\n+\tDoublyLinkedList list = new DoublyLinkedList();\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\treturn verifyForwards(l, ref, offset, length)\n+\t    && verifyBackwards(l, ref, offset, length);\n+    }\n+\n+    boolean verifyForwards(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (DoublyLinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < offset + length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    boolean verifyBackwards(DoublyLinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset + length - 1;\n+\tfor (DoublyLinkedList.Entry e = l.getLast(); e != null; e = e.getPrevious()) {\n+\t    if (i >= offset) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i--;\n+\t}\n+\n+\treturn (i == offset - 1);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/DoublyLinkedList\/RemoveTest.java","additions":282,"deletions":0,"binary":false,"changes":282,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/DoublyLinkedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/DoublyLinkedList\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.append.\n+ *\n+ * @test\n+ * @sources AppendTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.AppendTest\n+ *\/\n+public class AppendTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new AppendTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.append(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = expected + \",\" + String.valueOf(d);\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(LinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/LinkedList\/AppendTest.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & positive_test(new Object[] { });\n+\tok = ok & positive_test(new Object[] { null });\n+\tok = ok & positive_test(new Object[] { \"a\" });\n+\tok = ok & positive_test(new Object[] { one, \"a\" });\n+\tok = ok & positive_test(new Object[] { one, null, \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & positive_test(new Object[] { one, two, three });\n+\tok = ok & positive_test(new Object[] { one, \"a\", null, two });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & positive_test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & positive_test(new Object[] { \"a\", one, \"a\", one });\n+\tok = ok & negative_test(new Object[] { }, new Object[] { \"a\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { \"b\" });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { one });\n+\tok = ok & negative_test(new Object[] { \"a\" }, new Object[] { null });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"b\", one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { one, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { null, one });\n+\tok = ok & negative_test(new Object[] { \"a\", one }, new Object[] { \"a\", one , \"b\"});\n+\tok = ok & negative_test(new Object[] { \"a\", one }, one );\n+\tok = ok & negative_test(new Object[] { \"a\", one }, \"a\" );\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data) {\n+\t\/\/ create the list two different ways from the same data\n+\tLinkedList list1 = new LinkedList();\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.append(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tLinkedList list2 = new LinkedList();\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2) {\n+\tLinkedList list1 = new LinkedList();\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/LinkedList\/EqualsTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tboolean ok = true;\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", \"d\" });\n+\tok = ok & test(new Object[] { one, two, three });\n+\tok = ok & test(new Object[] { one, \"a\", null, two });\n+\tok = ok & test(new Object[] { \"a\", \"a\", \"a\", \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"a\", one, one });\n+\tok = ok & test(new Object[] { \"a\", one, \"a\", one });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\tString expected = \"\";\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    Object d = data[i];\n+\t    list.insert(d);\n+\t    if (i == 0)\n+\t\texpected = String.valueOf(d);\n+\t    else\n+\t\texpected = String.valueOf(d) + \",\" + expected;\n+\n+\t    if (!verify(list, expected)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + expected);\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\treturn true;\n+    }\n+\n+    boolean verify(LinkedList l, String expected) {\n+\tStringBuffer sb = new StringBuffer();\n+\tboolean first = true;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (first)\n+\t\tfirst = false;\n+\t    else\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(e.getData()));\n+\t}\n+\t\/\/System.err.println(l);\n+\treturn (sb.toString().equals(expected));\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/LinkedList\/InsertTest.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"patch":"@@ -0,0 +1,253 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.LinkedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.LinkedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.LinkedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.LinkedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 });\n+\tok = ok & test(new Object[] { i0, i10 });\n+\tok = ok & test(new Object[] { i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 });\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 });\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 });\n+\n+\tok = ok & test(new Object[] { \"a\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10 });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", i0, i10, i100 });\n+\n+\tok = ok & test(new Object[] { null, \"a\", \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", null, \"b\", \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", null, \"c\" });\n+\tok = ok & test(new Object[] { \"a\", \"b\", \"c\", null });\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data);\n+\tboolean ok2 = testRemoveLast(data);\n+\tboolean ok3 = testRemoveMiddle(data);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data) {\n+\tLinkedList list = createList(data);\n+\tObject[] ref = copy(data);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    LinkedList createList(Object[] data) {\n+\tLinkedList list = new LinkedList();\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(LinkedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (LinkedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < ref.length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/LinkedList\/RemoveTest.java","additions":253,"deletions":0,"binary":false,"changes":253,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/LinkedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/LinkedList\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.equals.\n+ *\n+ * @test\n+ * @sources EqualsTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.EqualsTest\n+ *\/\n+public class EqualsTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new EqualsTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger one = new Integer(1);\n+\tInteger two = new Integer(2);\n+\tInteger three = new Integer(3);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & positive_test(new Object[] { }, intComp);\n+\tok = ok & positive_test(new Object[] { one }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two, three }, intComp);\n+\tok = ok & positive_test(new Object[] { one, two, one, two }, intComp);\n+\tok = ok & negative_test(new Object[] { }, new Object[] { one }, intComp);\n+\tok = ok & negative_test(new Object[] { one }, new Object[] { two }, intComp);\n+\tok = ok & negative_test(new Object[] { one, one }, new Object[] { two, one }, intComp);\n+\tok = ok & negative_test(new Object[] { one, two }, new Object[] { one, two, three }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean positive_test(Object[] data, SortedList.Comparator c) {\n+\t\/\/ create the list two different ways from the same data\n+\tSortedList list1 = new SortedList(c, true);\n+\tSortedList list2 = new SortedList(c, true);\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list1.insert(data[data.length -i - 1]);\n+\t    list2.insert(data[i]);\n+\t}\n+\n+\tif (!list1.equals(list2)) {\n+\t    err.println(\"mismatch:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object[] data2, SortedList.Comparator c) {\n+\tSortedList list1 = new SortedList(c, true);\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tSortedList list2 = new SortedList(c, true);\n+\tfor (int i = 0; i < data2.length; i++)\n+\t    list2.insert(data2[data2.length - i - 1]);\n+\n+\tif (list1.equals(list2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  list2: \" + list2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean negative_test(Object[] data1, Object data2, SortedList.Comparator c) {\n+\tSortedList list1 = new SortedList(c, true);\n+\tfor (int i = 0; i < data1.length; i++)\n+\t    list1.insert(data1[data1.length - i - 1]);\n+\n+\tif (list1.equals(data2)){\n+\t    err.println(\"lists matched unexpectedly:\");\n+\t    err.println(\"  list1: \" + list1);\n+\t    err.println(\"  data2: \" + data2);\n+\t    return false;\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n+\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/SortedList\/EqualsTest.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,193 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.insert.\n+ *\n+ * @test\n+ * @sources InsertTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.InsertTest\n+ *\/\n+public class InsertTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new InsertTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 }, intComp);\n+\tok = ok & test(new Object[] { i10000, i1000, i100, i10, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10000, i10, i1000, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i0, i0, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i0, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i10000, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10000, i10000, i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10000, i10000, i10000, i10000 }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data, SortedList.Comparator c) {\n+\treturn testAllowDups(data, c) && testNoDups(data, c);\n+    }\n+\n+    boolean testAllowDups(Object[] data, SortedList.Comparator c) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tSortedList list = new SortedList(c, false);\n+\tObject[] expected = new Object[data.length];\n+\n+\tint n = 0;\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list.insert(data[i]);\n+\t    expected[n++] = data[i];\n+\t    sort(expected, 0, n, c);\n+\t    if (!verify(list, expected, 0, n, c)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(expected, 0, n));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testNoDups(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = new SortedList(c, true);\n+\tObject[] expected = new Object[data.length];\n+\n+\tint n = 0;\n+\tfor (int i = 0; i < data.length; i++) {\n+\t    list.insert(data[i]);\n+\tinsert: {\n+\t\tfor (int j = 0; j < n; j++) {\n+\t\t    if (c.compare(data[i], expected[j]) == 0)\n+\t\t\tbreak insert;\n+\t\t}\n+\t\texpected[n++] = data[i];\n+\t\tsort(expected, 0, n, c);\n+\t    }\n+\t    if (!verify(list, expected, 0, n, c)) {\n+\t\terr.println(\"mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(expected, 0, n));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t}\n+\n+\treturn true;\n+    }\n+\n+    void sort(Object[] data, int offset, int length, SortedList.Comparator c) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    for (int j = i; j > offset && c.compare(data[j - 1], data[j]) > 0; j--) {\n+\t\tObject o = data[j];\n+\t\tdata[j] = data[j-1];\n+\t\tdata[j - 1] = o;\n+\t    }\n+\t}\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(SortedList l, Object[] expected, int offset, int length, SortedList.Comparator c) {\n+\tint i = offset;\n+\tfor (SortedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < expected.length) {\n+\t\tif (c.compare(e.getData(), expected[i]) != 0)\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than expected\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/SortedList\/InsertTest.java","additions":193,"deletions":0,"binary":false,"changes":193,"status":"added"},{"patch":"@@ -0,0 +1,265 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2002, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots.tests.lists.SortedList;\n+\n+import java.io.PrintWriter;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.Test;\n+\n+import com.sun.demoapi.lists.SortedList;\n+\n+\/**\n+ * A test for com.sun.demoapi.lists.SortedList.remove.\n+ *\n+ * @test\n+ * @sources RemoveTest.java\n+ * @executeClass com.sun.demots.tests.lists.SortedList.RemoveTest\n+ *\/\n+public class RemoveTest implements Test \n+{\n+    \/**\n+     * Standard command-line entry point.\n+     * @param args command line args (ignored)\n+     *\/\n+    public static void main(String[] args) {\n+\tPrintWriter err = new PrintWriter(System.err, true);\n+\tTest t = new RemoveTest();\n+\tStatus s = t.run(args, null, err);\n+\ts.exit();\n+    }\n+\n+    \/**\n+     * Main test method. The test consists of a series of test cases;\n+     * the test passes only if all the individual test cases pass.\n+     * @param args ignored\n+     * @param out  ignored\n+     * @param err  a stream to which to write details about test failures\n+     * @return a Status object indicating if the test passed or failed\n+     *\/\n+    public Status run(String[] args, PrintWriter out, PrintWriter err) {\n+\t\/\/ save error stream to which to write error messages\n+\tthis.err = err;\n+\n+\tSortedList.Comparator intComp = new SortedList.Comparator() {\n+\t\tpublic int compare(Object a, Object b) {\n+\t\t    int ia = ((Integer) a).intValue();\n+\t\t    int ib = ((Integer) b).intValue();\n+\t\t    return (ia < ib ? -1 : ia == ib ? 0 : 1);\n+\t\t}\n+\t    };\n+\n+\tInteger i0 = new Integer(0);\n+\tInteger i10 = new Integer(10);\n+\tInteger i100 = new Integer(100);\n+\tInteger i1000 = new Integer(1000);\n+\tInteger i10000 = new Integer(10000);\n+\n+\tboolean ok = true;\n+\n+\tok = ok & test(new Object[] { i0 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i1000, i10000 }, intComp);\n+\tok = ok & test(new Object[] { i0, i0, i10, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i0, i100 }, intComp);\n+\tok = ok & test(new Object[] { i0, i10, i100, i0 }, intComp);\n+\n+\tif (ok)\n+\t    return Status.passed(\"OK\");\n+\telse\n+\t    return Status.failed(\"one or more test cases failed\");\n+    }\n+\n+    boolean test(Object[] data, SortedList.Comparator c) {\n+\terr.println(\"test: \" + toString(data, 0, data.length));\n+\tboolean ok1 = testRemoveFirst(data, c);\n+\tboolean ok2 = testRemoveLast(data, c);\n+\tboolean ok3 = testRemoveMiddle(data, c);\n+\treturn (ok1 & ok2 & ok3);\n+    }\n+\n+    boolean testRemoveFirst(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[0];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeFirst mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    boolean testRemoveLast(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen - 1];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o)) \n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+ \treturn true;\n+    }\n+\n+    boolean testRemoveMiddle(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = createList(data, c);\n+\tObject[] ref = sortedCopy(data, c);\n+\t\n+\tfor (int i = 0; i < ref.length; i++) {\n+\t    int refLen = ref.length - i;\n+\t    \/\/ select item to remove\n+\t    Object o = ref[refLen \/ 2];\n+\t    \/\/ remove from list\n+\t    list.remove(o);\n+\t    \/\/ remove from reference array\n+\t    if (remove(ref, 0, refLen, o))\n+\t\trefLen--;\n+\t    \/\/ compare list and reference\n+\t    if (!verify(list, ref, 0, refLen)) {\n+\t\terr.println(\"removeLast mismatch:\");\n+\t\terr.println(\"  expected: \" + toString(ref, 0, refLen));\n+\t\terr.println(\"     found: \" + list);\n+\t\treturn false;\n+\t    }\n+\t    \n+\t}\n+\n+\treturn true;\n+    }\n+\n+    Object[] copy(Object[] data) {\n+\tObject[] d = new Object[data.length];\n+\tSystem.arraycopy(data, 0, d, 0, data.length);\n+\treturn d;\n+    }\n+\n+    SortedList createList(Object[] data, SortedList.Comparator c) {\n+\tSortedList list = new SortedList(c, false);\n+\tfor (int i = data.length - 1; i >= 0; i--)\n+\t    list.insert(data[i]);\n+\treturn list;\n+    }\n+\n+    boolean remove(Object[] data, int offset, int length, Object o) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    boolean found = (data[i] == null ? o == null : data[i].equals(o));\n+\t    if (found) {\n+\t\tSystem.arraycopy(data, i + 1, data, i, offset + length - i - 1);\n+\t\treturn true;\n+\t    }\n+\t}\n+\t\/\/ not found\n+\treturn false;\n+    }\n+\n+    void sort(Object[] data, int offset, int length, SortedList.Comparator c) {\n+\tfor (int i = offset; i < offset + length; i++) {\n+\t    for (int j = i; j > offset && c.compare(data[j - 1], data[j]) > 0; j--) {\n+\t\tObject o = data[j];\n+\t\tdata[j] = data[j-1];\n+\t\tdata[j - 1] = o;\n+\t    }\n+\t}\n+    }\n+\n+    Object[] sortedCopy(Object[] data, SortedList.Comparator c) {\n+\tObject[] newData = copy(data);\n+\tsort(newData, 0, data.length, c);\n+\treturn newData;\n+    }\n+\n+    String toString(Object[] array, int offset, int length) {\n+\tStringBuffer sb = new StringBuffer();\n+\tfor (int i = offset; i < (offset + length); i++) {\n+\t    if (i > offset)\n+\t\tsb.append(\",\");\n+\t    sb.append(String.valueOf(array[i]));\n+\t}\n+\treturn sb.toString();\n+    }\n+\t\n+\n+    boolean verify(SortedList l, Object[] ref, int offset, int length) {\n+\tint i = offset;\n+\tfor (SortedList.Entry e = l.getFirst(); e != null; e = e.getNext()) {\n+\t    if (i < ref.length) {\n+\t\tObject d = e.getData();\n+\t\tif (d == null) {\n+\t\t    if (ref[i] != null)\n+\t\t    \/\/ data difference found\n+\t\t\treturn false;\n+\t\t}\n+\t\telse if (!d.equals(ref[i]))\n+\t\t    \/\/ data difference found\n+\t\t    return false;\n+\t    }\n+\t    else \n+\t\t\/\/ list is longer than ref\n+\t\treturn false;\n+\n+\t    i++;\n+\t}\n+\n+\treturn (i == offset + length);\n+    }\n+\n+    \/**\n+     * A stream to which to write info about test failures.\n+     *\/\n+    private PrintWriter err;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/SortedList\/RemoveTest.java","additions":265,"deletions":0,"binary":false,"changes":265,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/SortedList\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/SortedList\/index.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/lists\/index.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/tests\/lists\/index.html","status":"copied"},{"patch":"@@ -0,0 +1,56 @@\n+<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2001, 2011, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ \n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+ \n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+ \n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ \n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+\n+<html>\n+  <head>\n+    <title>simpleTags demoTS test suite<\/title>\n+  <\/head>\n+  \n+  <body>\n+    <h1>simpleTags demoTS test suite<\/h1>\n+    \n+    This is the root file for the simpleTags demoTS test suite.\n+    \n+    <p>\n+      <small>Note: Although not strictly necessary, it is \n+\tconvenient to link the documentation files into\n+\ta web, to simplify browsing.\n+      <\/small>\n+\n+    <hr>\n+    <p>The tests are divided into the following sections:\n+    <dl>\n+      <dt><a href=\"BigNum\/index.html\">BigNum<\/a>\n+      <dd>Tests for the com.sun.demoapi.BigNum API\n+      <dt><a href=\"lists\/index.html\">lists<\/a>\n+      <dd>Tests for the com.sun.demoapi.lists package\n+    <\/dl>\n+  <p>Copyright &copy; 2001, 2011, Oracle and\/or its affiliates. All rights reserved.<\/p>\n+  <\/body>\n+<\/html>\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/tests\/testsuite.html","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/demots\/testsuite.jtt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/demots\/testsuite.jtt","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/README.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/README.html","status":"copied"},{"patch":"@@ -0,0 +1,270 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.demots;\n+\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.sun.interview.Checklist;\n+import com.sun.interview.ChoiceQuestion;\n+import com.sun.interview.ErrorQuestion;\n+import com.sun.interview.FileQuestion;\n+import com.sun.interview.FinalQuestion;\n+import com.sun.interview.IntQuestion;\n+import com.sun.interview.NullQuestion;\n+import com.sun.interview.Question;\n+import com.sun.interview.StringQuestion;\n+\n+import com.sun.javatest.Parameters.EnvParameters;\n+import com.sun.javatest.TestEnvironment;\n+import com.sun.javatest.interview.BasicInterviewParameters;\n+\n+public class DemoTSInterview\n+    extends BasicInterviewParameters \n+    implements EnvParameters\n+{\n+    public DemoTSInterview() throws Fault {\n+\tsuper(\"demoTS\");\n+\tsetHelpSet(\"moreInfo\/demots\");\n+\tsetResourceBundle(\"i18n\");\n+\n+\tString m = System.getProperty(\"interview.mode\", \"certify\");\n+\tif (m.equals(\"certify\"))\n+\t    mode = CERTIFY;\n+\telse if (m.equals(\"developer\"))\n+\t    mode = DEVELOPER;\n+\telse if (m.equals(\"precompile\"))\n+\t    mode = PRECOMPILE;\n+    }\n+\n+    public TestEnvironment getEnv() {\n+\tHashMap envProps = new HashMap();\n+\texport(envProps);\n+\ttry {\n+\t    String name = qName.getValue();\n+\t    if (name == null || name.length() == 0)\n+\t\tname = \"unknown\";\n+\t    return new TestEnvironment(name, envProps, \"configuration interview\");\n+\t}\n+\tcatch (TestEnvironment.Fault e) {\n+\t    throw new Error(\"should not happen\");\n+\t}\n+    }\n+\n+    public EnvParameters getEnvParameters() {\n+\treturn this;\n+    }\n+\n+    public Question getEnvFirstQuestion() {\n+\tswitch (mode) {\n+\tcase PRECOMPILE:\n+\t    return qPrecompile;\n+\tcase DEVELOPER:\n+\t    return qDeveloper;\n+\tdefault:\n+\t    return qName;\n+\t}\n+    }\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Precompile mode\n+\n+    private Question qPrecompile = new NullQuestion(this, \"precompile\") {\n+\t    public Question getNext() {\n+\t\treturn qEnvEnd;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"script.mode\", \"precompile\");\n+\t\tdata.put(\"command.compile.java\", System.getProperty(\"command.compile.java\"));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Developer mode\n+\n+    private Question qDeveloper = new NullQuestion(this, \"developer\") {\n+\t    public Question getNext() {\n+\t\treturn qName;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"script.mode\", \"developer\");\n+\t\tdata.put(\"command.compile.java\", System.getProperty(\"command.compile.java\"));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Give a name for this configuration\n+\n+    private StringQuestion qName = new StringQuestion(this, \"name\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse\n+\t\t    return qDesc;\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ Give a description for this configuration\n+\n+    private Question qDesc = new StringQuestion(this, \"desc\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse\n+\t\t    return qCmdType;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"description\", String.valueOf(value));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ How do you with to execute tests:\n+    \/\/   OTHER_VM:  on the same system as JT Harness, in separate process\n+    \/\/   AGENT:   on a different system, using JT Harness Agent\n+\n+    private static final String AGENT = \"agent\";\n+    private static final String OTHER_VM = \"otherVM\";\n+\n+    private Question qCmdType = new ChoiceQuestion(this, \"cmdType\") {\n+\t    {\n+\t\tsetChoices(new String[] { null, OTHER_VM, AGENT }, true);\n+\t    }\n+\n+\t    public Question getNext() {\n+\t\tif (value == null || value.length() == 0)\n+\t\t    return null;\n+\t\telse if (value.equals(OTHER_VM))\n+\t\t    return qJVM;\n+\t\telse\n+\t\t    return qTestVerboseLevel;\n+\t    }\n+\n+\t    public Checklist.Item[] getChecklistItems() {\n+\t\tif (value != AGENT) \n+\t\t    return null;\n+\n+\t\treturn new Checklist.Item[] {\n+\t\t    createChecklistItem(\"agent\", \"agent.needToStart\"),\n+\t\t};\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tString cmd;\n+\t\tif (value != null && value.equals(OTHER_VM))\n+\t\t    cmd = getOtherVMExecuteCommand();\n+\t\telse\n+\t\t    cmd = \"com.sun.javatest.agent.ActiveAgentCommand \" +\n+\t\t\t\"com.sun.javatest.lib.ExecStdTestSameJVMCmd \" +\n+\t\t\t\"$testExecuteClass $testExecuteArgs\";\n+\t\tdata.put(\"command.execute\", cmd);\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ What is the path for the JVM you wish to use to execute the tests?\n+\n+    private FileQuestion qJVM = new FileQuestion(this, \"jvm\") {\n+\t    public Question getNext() {\n+\t\tif (value == null || value.getPath().length() == 0) \n+\t\t    return null;\n+\t\telse if (! (value.exists() && value.isFile() && value.canRead())) \n+\t\t    return qBadJVM;\n+\t\telse \n+\t\t    return qTestVerboseLevel;\n+\t    }\n+\t};\n+\n+    private Question qBadJVM = new ErrorQuestion(this, \"badJVM\") {\n+\t    public Object[] getTextArgs() {\n+\t\treturn new Object[] { qJVM.getValue().getPath() };\n+\t    }\n+\t};\n+\n+    private String getOtherVMExecuteCommand() {\n+\tchar fs = File.separatorChar;\n+\tchar ps = File.pathSeparatorChar;\n+\n+\tStringBuffer sb = new StringBuffer();\n+\tsb.append(\"com.sun.javatest.lib.ExecStdTestOtherJVMCmd \");\n+\tFile jvm = qJVM.getValue();\n+\tsb.append(jvm == null ? \"unknown_jvm\" : jvm.getPath());\n+\tsb.append(\" -classpath $testSuiteRootDir\" + fs + \"lib\" + fs + \"jtdemots.jar\" + ps \n+\t\t+ \"$testSuiteRootDir\" + fs + \"lib\" + fs + \"demoapi.jar\" + ps \n+\t\t+ \"$testSuiteRootDir\" + fs + \"lib\" + fs + \"javatest.jar \");\n+\tsb.append(\"$testExecuteClass $testExecuteArgs\");\n+\treturn sb.toString();\n+    }\n+\n+    \/\/----------------------------------------------------------------------\n+    \/\/\n+    \/\/ What is the test verbose level?\n+\n+    private static final String LOW = \"low\";\n+    private static final String MEDIUM = \"medium\";\n+    private static final String HIGH = \"high\";\n+\n+    private Question qTestVerboseLevel = new ChoiceQuestion(this, \"testVerboseLevel\") {\n+\t    {\n+\t\tsetChoices(new String[] { null, LOW, MEDIUM, HIGH }, true);\n+\t    }\n+\n+\t    public Question getNext() {\n+\t\treturn qEnvEnd;\n+\t    }\n+\n+\t    public void export(Map data) {\n+\t\tdata.put(\"testVerboseLevel\", String.valueOf(value));\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+\n+    private Question qEnvEnd = new NullQuestion(this, \"envEnd\") {\n+\t    public Question getNext() {\n+\t\treturn getEnvSuccessorQuestion();\n+\t    }\n+\t};\n+\n+    \/\/----------------------------------------------------------------------\n+\n+    private static final int PRECOMPILE = 1;\n+    private static final int CERTIFY = 2;\n+    private static final int DEVELOPER = 3;\n+    private int mode;\n+}\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/DemoTSInterview.java","additions":270,"deletions":0,"binary":false,"changes":270,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/i18n.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/i18n.properties","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/cmdType.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/cmdType.html","status":"copied"},{"patch":"@@ -0,0 +1,65 @@\n+<!DOCTYPE HTML PUBLIC \"-\/\/W3C\/\/DTD HTML 4.0 Transitional\/\/EN\">\n+<!--\n+  $Id$\n+\n+  Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ \n+  This code is free software; you can redistribute it and\/or modify it\n+  under the terms of the GNU General Public License version 2 only, as\n+  published by the Free Software Foundation.  Oracle designates this\n+  particular file as subject to the \"Classpath\" exception as provided\n+  by Oracle in the LICENSE file that accompanied this code.\n+ \n+  This code is distributed in the hope that it will be useful, but WITHOUT\n+  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  version 2 for more details (a copy is included in the LICENSE file that\n+  accompanied this code).\n+ \n+  You should have received a copy of the GNU General Public License version\n+  2 along with this work; if not, write to the Free Software Foundation,\n+  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ \n+  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  or visit www.oracle.com if you need additional information or have any\n+  questions.\n+-->\n+\n+\n+<html>\n+<head>\n+<title>JT Harness Tutorial<\/title>\n+<link rel=\"stylesheet\" href=\"tutorial.css\" type=\"text\/css\">\n+<\/head>\n+<body>\n+Copyright (c) 2001, 2010, Oracle and\/or its affiliates. All rights reserved.\n+<br>\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+<\/p>\n+<p>\n+This code is free software; you can redistribute it and\/or modify it\n+under the terms of the GNU General Public License version 2 only, as\n+published by the Free Software Foundation.  Oracle designates this\n+particular file as subject to the \"Classpath\" exception as provided\n+by Oracle in the LICENSE file that accompanied this code.\n+<\/p>\n+<p>\n+This code is distributed in the hope that it will be useful, but WITHOUT\n+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+version 2 for more details (a copy is included in the LICENSE file that\n+accompanied this code).\n+<\/p>\n+<p>\n+You should have received a copy of the GNU General Public License version\n+2 along with this work; if not, write to the Free Software Foundation,\n+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+<\/p>\n+<p>\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+CA 95054 USA or visit <a href=\"http:\/\/www.oracle.com\/\">www.oracle.com<\/a>\n+if you need additional information or questions.\n+<\/p>\n+<\/body>\n+<\/html>\n","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/copyright.html","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/desc.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/desc.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/developer.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/developer.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/envEnd.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/envEnd.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/epilog.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/epilog.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/jvm.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/jvm.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/map.xml","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/map.xml","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/moreInfo.css","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/moreInfo.css","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/name.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/name.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/precompile.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/precompile.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/prolog.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/prolog.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/default\/testVerboseLevel.html","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/default\/testVerboseLevel.html","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/demots.hs","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/tutorial\/simpleTags\/src\/com\/sun\/demots\/moreInfo\/demots.hs","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/images\/blueListBull.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/blueListBull.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/images\/hg_note.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/hg_note.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/images\/hg_proc.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/hg_proc.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/images\/infoButtonSmall.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/infoButtonSmall.gif","status":"copied"},{"patch":"","filename":"jt_gui_tests\/src\/gui\/testsuite_src_clean\/src\/com\/sun\/demots\/moreInfo\/images\/nextButtonSmall.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"examples\/services_demo\/src\/com\/sun\/javatest\/example\/services\/interview\/moreinfo\/images\/nextButtonSmall.gif","status":"copied"},{"patch":"@@ -0,0 +1,55 @@\n+#\n+# $Id$\n+#\n+# Copyright (c) 2006, 2011, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# Please specify location of jhall.jar here - for compilation\n+jhall.binaries=https:\/\/jpg-data.us.oracle.com\/artifactory\/re-release-local\/jdk\/8u152\/b02\/bundles\/solaris-x64\/orig\/pkgarchive\/SUNWj8dev\/reloc\/jdk\/instances\/jdk1.8.0\/lib\/visualvm\/platform\/modules\/ext\n+jhalljar = .\/src\/lib\/jh_jar\n+\n+# needed only at runtime\n+jhjar = .\/src\/lib\/jh_jar\n+\n+# JUnit Library - Version 4 currently used to compile 3 and 4 support\n+junit.binaries=https:\/\/jpg-data.us.oracle.com\/artifactory\/jcenter-cache\/junit\/junit\/4.13.2\n+hamcrest-core.binaries=https:\/\/jpg-data.us.oracle.com\/artifactory\/jcenter-cache\/org\/hamcrest\/hamcrest-core\/1.3\n+hamcrestlib=.\/src\/lib\/hamcrest_jar\n+junitlib = .\/src\/lib\/junit_jar\n+\n+# Jemmy Library - it is used only for gui testing that are optional\n+jemmy.binaries=https:\/\/jpg-data.us.oracle.com\/artifactory\/remote-repos\/org\/netbeans\/jemmy\/2.2.7.5\n+jemmylib = .\/src\/lib\/jemmy_jar\n+\n+# Please specify JavaTest Library Location\n+javatest.re.dir=https:\/\/jpg-data.us.oracle.com\/artifactory\/re-release-local\/javatest\/6.0\/b17\n+javatest.binaries=${javatest.re.dir}\/binaries\/javatest\n+javatestjar_path = .\/javatest_jar\n+\n+product.name = JT\n+\n+# Please specify location where the build distribution (output) will be created\n+BUILD_DIR = build\n+\n+javatest.directory.file=..\/build\/jtdir\n+javatest.preferences.file=..\/build\/jtpref\n","filename":"jt_gui_tests\/src\/local.properties","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}