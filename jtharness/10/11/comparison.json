{"files":[{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextAreaOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+public class Test_QSW1 extends Config_New {\n+    \/\/ This test case checks if Quick Start wizard Shows correct display text and\n+    \/\/ next and back button works.\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSW1\");\n+    }\n+\n+    @Test\n+    public void test() {\n+        \/\/ Selecting the quick start dialog box and checking the header.\n+        JDialogOperator quickstart = new JDialogOperator(getExecResource(\"qsw.title\"));\n+        JTextFieldOperator qsw_header = new JTextFieldOperator(quickstart, 0);\n+\n+        \/\/ Checking header text\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Welcome to the JT Harness!\", qsw_header.getText());\n+\n+        \/\/ Checking Text inside the body.\n+        JTextAreaOperator qsw_text = new JTextAreaOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect text in text body - \",\n+                \"This Quick Start Guide will lead you through the process of setting up the JT Harness to perform common tasks.\\n\"\n+                        + \"\\n\" + \"Which of the following tasks do you want to do?\",\n+                qsw_text.getText());\n+\n+        \/\/ Selecting the next and back buttons.\n+        JButtonOperator next = new JButtonOperator(quickstart, 1);\n+        JButtonOperator back = new JButtonOperator(quickstart, 0);\n+\n+        \/\/ Selecting the checkbox named 'start a new run'.\n+        JTextFieldOperator qsw_temp;\n+        JRadioButtonOperator qsw_check = new JRadioButtonOperator(quickstart, 0);\n+        qsw_check.push();\n+        next.push();\n+\n+        \/\/ Checking text header that appears after next button is press.\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Test Suite\", qsw_temp.getText());\n+        back.push();\n+\n+        \/\/ Repeating the above process for 2 more times for the remaining 2 radio\n+        \/\/ buttons on the main QS wizard dialog.\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Welcome to the JT Harness!\", qsw_temp.getText());\n+\n+        qsw_check = new JRadioButtonOperator(quickstart, 1);\n+        qsw_check.push();\n+\n+        next.push();\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Work Directory\", qsw_temp.getText());\n+\n+        back.push();\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Welcome to the JT Harness!\", qsw_temp.getText());\n+\n+        qsw_check = new JRadioButtonOperator(quickstart, 2);\n+        qsw_check.push();\n+        next.push();\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Test Suite\", qsw_temp.getText());\n+\n+        back.push();\n+        qsw_temp = new JTextFieldOperator(quickstart, 0);\n+        assertEquals(\"Failed because of Incorrect header text - \", \"Welcome to the JT Harness!\", qsw_temp.getText());\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSW1.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.fail;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+public class Test_QSW2 extends Config_New {\n+    \/\/ This test case checks if Quick Start wizard Opens up configuration editor.\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSW2\");\n+    }\n+\n+    @Test\n+    public void test() {\n+        \/\/ Selecting the quick start dialog box and checking the header.\n+        JDialogOperator quickstart = new JDialogOperator(getExecResource(\"qsw.title\"));\n+\n+        \/\/ Selecting the next and back buttons.\n+        JButtonOperator next = new JButtonOperator(quickstart, 1);\n+\n+        \/\/ Selecting the checkbox named 'start a new run'.\n+        JRadioButtonOperator qsw_check = new JRadioButtonOperator(quickstart, 0);\n+        qsw_check.push();\n+        next.push();\n+\n+        \/\/ pressing browse button.\n+        JButtonOperator browse = new JButtonOperator(quickstart, 0);\n+        browse.push();\n+\n+        \/\/ Selecting Test suite to open.\n+        JDialogOperator opentestdialog = new JDialogOperator(getToolResource(\"tsc.title\"));\n+        new JTextFieldOperator(opentestdialog, \"\").enterText(\"demots\");\n+        next.push();\n+\n+        \/\/ Selecting the configuration template radio button and then selecting the\n+        \/\/ configuration file.\n+        JRadioButtonOperator test = new JRadioButtonOperator(quickstart, 0);\n+        test.push();\n+        next.push();\n+        browse = new JButtonOperator(quickstart, 0);\n+        browse.push();\n+        JDialogOperator createworkdialog = new JDialogOperator(getToolResource(\"wdc.new.title\"));\n+        new JTextFieldOperator(createworkdialog, \"\").enterText(\"temp_qsw_dir1\");\n+        next.push();\n+\n+        \/\/ Selecting and testing check box function.\n+        JCheckBoxOperator start_ce = new JCheckBoxOperator(quickstart, 0);\n+        JCheckBoxOperator start_test = new JCheckBoxOperator(quickstart, 1);\n+\n+        if (!start_ce.isSelected()) {\n+            fail(\"Expected: Start configuration Editor check box should be selected by default. \\nActual: Start configuration Editor check box not selected by default.\");\n+        }\n+\n+        start_ce.push();\n+        start_test.push();\n+\n+        if (start_test.isSelected() && !start_ce.isSelected()) {\n+            fail(\"Expected: Start test run checkbox should not select without Start configuration Editor check box being set. \\nActual: Start test run checkbox is selected without start config editor check box being set.\");\n+        }\n+\n+        \/\/ Pressing finish button.\n+        start_test.push();\n+        JButtonOperator finish = new JButtonOperator(quickstart, 2);\n+        finish.push();\n+\n+        if (quickstart.isVisible()) {\n+            fail(\"Expected: Quick Start Wizard should not visible after clicking on finish button. \\nActual: Quick Start Wizard is still visible even after clicking on finish.\");\n+        }\n+\n+        \/\/ Waiting for the configuration editor to open up.\n+        JDialogOperator config_editor = new JDialogOperator(getExecResource(\"ce.name\"));\n+\n+        if (!config_editor.isVisible()) {\n+            fail(\"Expected: Configuration Editor should visible after closing Quick Start Wizard. \\nActual: Configuration Editor is not visible after closing Quick Start Wizard.\");\n+        }\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSW2.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+public class Test_QSW3 extends Config_New {\n+    \/\/ This test case checks if Quick Start wizard starts running test when start\n+    \/\/ test check box is clicked and a valid configuration file is loaded.\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSW3\");\n+    }\n+\n+    @Test\n+    public void test() throws InterruptedException {\n+        \/\/ Selecting the quick start dialog box and checking the header.\n+        JDialogOperator quickstart = new JDialogOperator(getExecResource(\"qsw.title\"));\n+\n+        \/\/ Selecting the next and back buttons.\n+        JButtonOperator next = new JButtonOperator(quickstart, 1);\n+\n+        \/\/ Selecting the checkbox named 'start a new run'.\n+        JRadioButtonOperator qsw_check = new JRadioButtonOperator(quickstart, 0);\n+        qsw_check.push();\n+        next.push();\n+\n+        \/\/ pressing browse button.\n+        JButtonOperator browse = new JButtonOperator(quickstart, 0);\n+        browse.push();\n+\n+        \/\/ Selecting Test suite to open.\n+        JDialogOperator opentestdialog = new JDialogOperator(getToolResource(\"tsc.title\"));\n+        new JTextFieldOperator(opentestdialog, \"\").enterText(\"demots\");\n+        next.push();\n+\n+        \/\/ Selecting the configuration template radio button and then selecting the\n+        \/\/ configuration file.\n+        JRadioButtonOperator test = new JRadioButtonOperator(quickstart, 1);\n+        test.push();\n+\n+        Path p = Paths.get(\"democonfig.jti\");\n+        String configfile = p.toAbsolutePath().toString();\n+        System.out.println(configfile);\n+\n+        browse = new JButtonOperator(quickstart, 0);\n+        browse.push();\n+        JDialogOperator loadconfig = new JDialogOperator(getExecResource(\"ce.load.title\"));\n+        new JTextFieldOperator(loadconfig, \"\").enterText(configfile);\n+        next.push();\n+\n+        \/\/ Creating directory.\n+        browse = new JButtonOperator(quickstart, 0);\n+        browse.push();\n+        JDialogOperator createworkdialog = new JDialogOperator(getToolResource(\"wdc.new.title\"));\n+        new JTextFieldOperator(createworkdialog, \"\").enterText(\"temp_qsw_dir7\");\n+        next.push();\n+\n+        \/\/ Selecting and testing check box function.\n+        JCheckBoxOperator start_ce = new JCheckBoxOperator(quickstart, 0);\n+        JCheckBoxOperator start_test = new JCheckBoxOperator(quickstart, 1);\n+\n+        if (!start_ce.isSelected()) {\n+            fail(\"Expected: Start configuration Editor check box should be selected by default. \\nActual: Start configuration Editor check box is not selected by default.\");\n+        }\n+\n+        start_ce.push();\n+        start_test.push();\n+\n+        if (start_test.isSelected() && start_ce.isSelected()) {\n+            fail(\"Expected: Selecting Start test run checkbox should not select Start configuration Editor checkbox. \\nActual: Selecting Start test run checkbox has selected Start configuration Editor checkbox.\");\n+        }\n+\n+        JButtonOperator finish = new JButtonOperator(quickstart, 2);\n+        finish.push();\n+\n+        if (quickstart.isVisible()) {\n+            fail(\"Expected: Quick Start Wizard should not visible after clicking on finish button. \\nActual: Quick Start Wizard is still visible even after clicking on finish button.\");\n+        }\n+\n+        \/\/ Check that tests started performing.\n+        JTextFieldOperator strip = new JTextFieldOperator(mainFrame, new NameComponentChooser(\"strip.msg\"));\n+        int time = 0;\n+\n+        \/\/ Waiting for Execution of tests to finish.\n+        while (time < 60) {\n+            if (strip.getText().startsWith(\"Finished\")) {\n+                break;\n+            } else if (!strip.getText().startsWith(\"Running\")) {\n+                fail(\"Expected: message starting with 'Running' has to be displayed in the strip message field. \\nActual: wrong message \"\n+                        + strip.getText() + \"is displayed in the strip message field.\");\n+            } else {\n+                \/\/ Sleeping for one second if message in strip starts with 'Running'.\n+                Thread.sleep(1000);\n+            }\n+        }\n+\n+        assertTrue(\"Expected: tests should run successfully. \\nActual: Error while tests are running.\",\n+                strip.getText().startsWith(\"Finished\"));\n+\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSW3.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"}]}