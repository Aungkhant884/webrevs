{"files":[{"patch":"@@ -0,0 +1,31 @@\n+#\n+# $Id$\n+#\n+#\n+# Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+# exclude test list for quick set mode\n+\n+# test name\t\t\t\tbugid(s)   keyword(s)  brief description \n+lists\/DoublyLinkedList\/InsertTest.java#id0  0  \t   test        test contains error\n","filename":"gui-tests\/src\/gui\/data\/qsm_exclude.jtx","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import javax.swing.JLabel;\n+\n+import jthtest.menu.Menu;\n+\n+public class Test_QSM_Exclude1 extends Config_New {\n+\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSM_Exclude1\");\n+    }\n+\n+    \/**\n+     * Check exclude list adding in Quick set mode configuration editor\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\n+     *\/\n+    @Test\n+    public void test() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException,\n+            FileNotFoundException, InterruptedException, IOException {\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        new JTextFieldOperator(openDialog, \"\").enterText(\"demowd_config\");\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+        JDialogOperator configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        JListOperator list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+        JMenuBarOperator jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        JTabbedPaneOperator QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+\n+        QSM_tabs.setSelectedIndex(1);\n+        JRadioButtonOperator test = new JRadioButtonOperator(QSM_tabs, 3);\n+        test.push();\n+        JButtonOperator add = new JButtonOperator(QSM_tabs, \"Add\");\n+        add.push();\n+        JDialogOperator addDialog = new JDialogOperator(\"Select\");\n+        new JTextFieldOperator(addDialog, \"\").enterText(\"qsm_exclude.jtx\");\n+        jmbo1.pushMenuNoBlock(\"File\", \"\/\");\n+        jmbo1.pushMenuNoBlock(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+        JComboBoxOperator viewfilter = new JComboBoxOperator(mainFrame, 0);\n+        viewfilter.selectItem(1);\n+        JTabbedPaneOperator mainpane = new JTabbedPaneOperator(mainFrame, new NameComponentChooser(\"br.tabs\"));\n+        mainpane.setSelectedIndex(6);\n+        JTableOperator filtered = new JTableOperator(mainpane);\n+        String testname = ((JLabel) filtered.getRenderedComponent(0, 0)).getText();\n+\n+        assertEquals(\n+                \"Wrong test filtered when filtering via exclude list filter. Expected first test: lists\/DoublyLinkedList\/InsertTest.java#id0 But was: \"\n+                        + testname,\n+                \"lists\/DoublyLinkedList\/InsertTest.java#id0\", testname);\n+\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+        configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+        jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+        QSM_tabs.setSelectedIndex(1);\n+        JListOperator test1 = new JListOperator(QSM_tabs, 0);\n+        test1.selectItem(0);\n+        JButtonOperator remove = new JButtonOperator(QSM_tabs, \"Remove\");\n+        remove.push();\n+        JRadioButtonOperator test2 = new JRadioButtonOperator(QSM_tabs, 0);\n+        test2.push();\n+        jmbo1.pushMenuNoBlock(\"File\", \"\/\");\n+        jmbo1.pushMenuNoBlock(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSM_Exclude1.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+\n+import javax.swing.JLabel;\n+\n+import jthtest.menu.Menu;\n+\n+public class Test_QSM_New1 extends Open_Test_Suite {\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSM_New1\");\n+    }\n+\n+    \/**\n+     * Verify that New button under File menu in the Quick Set mode configuration\n+     * editor in an existing directory will reset Configuration Editor to empty.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\n+     *\/\n+    @Test\n+    public void test()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        new JTextFieldOperator(openDialog, \"\").enterText(\"demowd_config\");\n+        waitForWDLoading(mainFrame, WDLoadingResult.SOME_NOTRUN);\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+\n+        JDialogOperator configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        JMenuBarOperator jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        JDialogOperator qsm = new JDialogOperator(getExecResource(\"ce.name\"));\n+        JMenuBarOperator qsm_jmbo = new JMenuBarOperator(qsm);\n+        qsm_jmbo.pushMenu(\"File\", \"\/\");\n+        mainFrame.pressKey(KeyEvent.VK_N, InputEvent.CTRL_DOWN_MASK);\n+\n+        JListOperator list = new JListOperator(configEditorDialog);\n+        String lastlistitem = ((JLabel) list.getRenderedComponent(list.getModel().getSize() - 1)).getText();\n+        String secondlastlistitem = ((JLabel) list.getRenderedComponent(list.getModel().getSize() - 2)).getText();\n+\n+        assertEquals(\"Last item was Expected: 'More...' But was: \" + lastlistitem, \" More...\", lastlistitem);\n+        assertEquals(\"Second Last item was Expected: 'Configuration Name' But was: \" + secondlastlistitem,\n+                \"   Configuration Name\", secondlastlistitem);\n+    }\n+\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSM_New1.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,328 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.awt.Rectangle;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JButtonOperator;\n+import org.netbeans.jemmy.operators.JCheckBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+import org.netbeans.jemmy.operators.Operator;\n+\n+import javax.swing.JLabel;\n+\n+import jthtest.menu.Menu;\n+\n+public class Test_QSM_Save1 extends Config_New {\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSM_Save1\");\n+    }\n+\n+    \/**\n+     * Verify that Save button under File menu in Quick set mode configuration\n+     * editor will save the current configuration back in a file if the file was\n+     * loaded.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+    @Test\n+    public void test() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException,\n+            FileNotFoundException, InterruptedException, IOException {\n+        int qsm_index = 0;\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        new JTextFieldOperator(openDialog, \"\").enterText(\"demowd_config\");\n+\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+        JDialogOperator configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        JListOperator list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+\n+        JMenuBarOperator jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        JTabbedPaneOperator QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+\n+        while (qsm_index < 5) {\n+            QSM_tabs.setSelectedIndex(qsm_index);\n+            editQSMTab(configEditorDialog, QSM_tabs, qsm_index);\n+            qsm_index++;\n+        }\n+        jmbo1.pushMenu(\"File\", \"\/\");\n+        jmbo1.pushMenu(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_LoadConfigurationMenu(mainFrame).pushNoBlock();\n+        JDialogOperator loadConfigDialog = new JDialogOperator(getExecResource(\"wdc.loadconfig\"));\n+        JCheckBoxOperator launch_config_checkbox = new JCheckBoxOperator(loadConfigDialog);\n+        launch_config_checkbox.clickMouse();\n+        new JButtonOperator(loadConfigDialog, \"Browse\").push();\n+        JDialogOperator loadConfigfinderDialog = new JDialogOperator(getExecResource(\"wdc.configchoosertitle\"));\n+        JTextFieldOperator browsetext = new JTextFieldOperator(loadConfigfinderDialog);\n+        browsetext.clearText();\n+        browsetext.enterText(\"democonfig.jti\");\n+\n+        JButtonOperator loadbutton = new JButtonOperator(loadConfigDialog, getExecResource(\"wdc.load.btn\"));\n+        loadbutton.push();\n+\n+        configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+\n+        jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+\n+        while (qsm_index < 5) {\n+            QSM_tabs.setSelectedIndex(qsm_index);\n+            checkQSMTab(configEditorDialog, QSM_tabs, qsm_index);\n+            resetQSMTab(configEditorDialog, QSM_tabs, qsm_index);\n+            qsm_index++;\n+        }\n+\n+        jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"File\", \"\/\");\n+        jmbo1.pushMenuNoBlock(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+\n+    }\n+\n+    \/**\n+     * This function is to click on CheckBox on Quick Set Mode\n+     *\n+     * @param JTreeOperator\n+     *\n+     * @param row\n+     *\/\n+    public void clickOnCheckbox(JTreeOperator tree, int row) {\n+        Rectangle r = tree.getRowBounds(row);\n+        clickOnTreeRow(tree, row);\n+        int x = Operator.getDefaultMouseButton();\n+        tree.clickMouse((int) r.getX() + 6, (int) r.getY() + (int) (r.getHeight() \/ 2), 1, x, 0, false);\n+    }\n+\n+    \/**\n+     * This function is to click on Tests Tree Row on Quick Set Mode\n+     *\n+     * @param JTreeOperator\n+     *\n+     * @param row\n+     *\/\n+    public void clickOnTreeRow(JTreeOperator tree, int row) {\n+        tree.makeComponentVisible();\n+        tree.scrollToRow(row);\n+        tree.makeVisible(tree.getPathForRow(row));\n+    }\n+\n+    \/**\n+     * This function is to edit configuration on Quick Set Mode. For example: Tests,\n+     * ExcludeLists, Known Failures, prior status and Execution\n+     *\n+     * @param JDialogOperator\n+     *\n+     * @param JTabbedPaneOperator\n+     *\n+     * @param tab_num\n+     *\n+     * @throws FileNotFoundException\n+     *\/\n+    public void editQSMTab(JDialogOperator config, JTabbedPaneOperator tab, int tab_num) throws FileNotFoundException {\n+        JRadioButtonOperator jrbo = null;\n+        JButtonOperator add = null;\n+        switch (tab_num) {\n+        case 0:\n+            jrbo = new JRadioButtonOperator(tab, 1);\n+            jrbo.push();\n+            JTreeOperator tree = new JTreeOperator(tab, 0);\n+            clickOnCheckbox(tree, 1);\n+            break;\n+        case 1:\n+            JRadioButtonOperator jrbo1 = new JRadioButtonOperator(tab, 3);\n+            jrbo1.push();\n+            add = new JButtonOperator(tab, \"Add\");\n+            add.push();\n+            JDialogOperator addDialog = new JDialogOperator(\"Select\");\n+            new JTextFieldOperator(addDialog, \"\").enterText(\"demo.jtx\");\n+            break;\n+        case 2:\n+            jrbo = new JRadioButtonOperator(tab, 1);\n+            jrbo.push();\n+            add = new JButtonOperator(tab, \"Add\");\n+            add.push();\n+            JDialogOperator addDialog1 = new JDialogOperator(\"Select\");\n+            new JTextFieldOperator(addDialog1, \"\").enterText(\"knownfailures.kfl\");\n+            break;\n+        case 3:\n+            JCheckBoxOperator jcbo = new JCheckBoxOperator(tab, 0);\n+            jcbo.push();\n+            JCheckBoxOperator passed = new JCheckBoxOperator(tab, 1);\n+            passed.push();\n+            break;\n+        case 4:\n+            new JTextFieldOperator(tab, 0).enterText(\"2\");\n+            new JTextFieldOperator(tab, 1).enterText(\"3\");\n+            break;\n+        default:\n+            fail(\"Trying to select non-existing tab on QSM\");\n+        }\n+    }\n+\n+    \/**\n+     * This function is to check\/verify configuration on Quick Set Mode. For\n+     * example: Tests, ExcludeLists, Known Failures, prior status and Execution\n+     *\n+     * @param JDialogOperator\n+     *\n+     * @param JTabbedPaneOperator\n+     *\n+     * @param tab_num\n+     *\/\n+    public void checkQSMTab(JDialogOperator config, JTabbedPaneOperator tab, int tab_num) {\n+        JListOperator jlo = null;\n+        String actualpath = \"\";\n+        String filepath = \"\";\n+        Path path;\n+        switch (tab_num) {\n+        case 0:\n+            return;\n+        case 1:\n+            jlo = new JListOperator(tab, 0);\n+            filepath = ((JLabel) jlo.getRenderedComponent(0)).getText();\n+            path = Paths.get(\"demo.jtx\");\n+            actualpath = path.toAbsolutePath().toString();\n+            if (!filepath.equals(actualpath)) {\n+                fail(\"Error in tab2 on QSM i.e. Exclude List\");\n+            }\n+            break;\n+        case 2:\n+            jlo = new JListOperator(tab, 0);\n+            filepath = ((JLabel) jlo.getRenderedComponent(0)).getText();\n+            path = Paths.get(\"knownfailures.kfl\");\n+            actualpath = path.toAbsolutePath().toString();\n+            if (!filepath.equals(actualpath)) {\n+                fail(\"Error in tab3 on QSM i.e. Known Failures (KFL)\");\n+            }\n+            break;\n+        case 3:\n+            JCheckBoxOperator passed = new JCheckBoxOperator(tab, 1);\n+            JCheckBoxOperator other1 = new JCheckBoxOperator(tab, 2);\n+            JCheckBoxOperator other2 = new JCheckBoxOperator(tab, 3);\n+            JCheckBoxOperator other3 = new JCheckBoxOperator(tab, 4);\n+            if (!passed.isSelected() || other1.isSelected() || other2.isSelected() || other3.isSelected()) {\n+                fail(\"Error in tab4 on QSM i.e. Prior Status\");\n+            }\n+            break;\n+        case 4:\n+            String jtfo = new JTextFieldOperator(tab, 0).getText();\n+            String jtfo1 = new JTextFieldOperator(tab, 1).getText();\n+            assertEquals(\"Error in tab5 on QSM i.e. Execution.\", jtfo, \"2\");\n+            assertEquals(\"Error in tab5 on QSM i.e. Execution\", jtfo1, \"3\");\n+            break;\n+        default:\n+            fail(\"Trying to select non-existing tab on QSM\");\n+        }\n+    }\n+\n+    \/**\n+     * This function is to rest configuration on Quick Set Mode. For example: Tests,\n+     * ExcludeLists, Known Failures, prior status and Execution\n+     *\n+     * @param JDialogOperator\n+     *\n+     * @param JTabbedPaneOperator\n+     *\n+     * @param tab_num\n+     *\/\n+    public void resetQSMTab(JDialogOperator config, JTabbedPaneOperator tab, int tab_num) {\n+        JRadioButtonOperator jro = null;\n+        JButtonOperator remove = null;\n+        JListOperator jlo = null;\n+        switch (tab_num) {\n+        case 0:\n+            JRadioButtonOperator jro1 = new JRadioButtonOperator(tab, 1);\n+            jro1.push();\n+            JTreeOperator tree = new JTreeOperator(tab, 0);\n+            clickOnCheckbox(tree, 1);\n+            jro = new JRadioButtonOperator(tab, 0);\n+            jro.push();\n+            break;\n+        case 1:\n+            jlo = new JListOperator(tab, 0);\n+            jlo.selectItem(0);\n+            remove = new JButtonOperator(tab, \"Remove\");\n+            remove.push();\n+            jro = new JRadioButtonOperator(tab, 0);\n+            jro.push();\n+            break;\n+        case 2:\n+            jlo = new JListOperator(tab, 0);\n+            jlo.selectItem(0);\n+            remove = new JButtonOperator(tab, \"Remove\");\n+            remove.push();\n+            jro = new JRadioButtonOperator(tab, 0);\n+            jro.push();\n+            break;\n+        case 3:\n+            JCheckBoxOperator passed = new JCheckBoxOperator(tab, 1);\n+            passed.push();\n+            JCheckBoxOperator jcbo = new JCheckBoxOperator(tab, 0);\n+            jcbo.push();\n+            break;\n+        case 4:\n+            new JTextFieldOperator(tab, 0).enterText(\"1\");\n+            new JTextFieldOperator(tab, 1).enterText(\"1\");\n+            break;\n+        default:\n+            fail(\"Trying to select non-existing tab on QSM\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSM_Save1.java","additions":328,"deletions":0,"binary":false,"changes":328,"status":"added"},{"patch":"@@ -0,0 +1,161 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.awt.Rectangle;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.operators.JComboBoxOperator;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JRadioButtonOperator;\n+import org.netbeans.jemmy.operators.JTabbedPaneOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.operators.JTreeOperator;\n+import org.netbeans.jemmy.operators.Operator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import javax.swing.JLabel;\n+\n+import jthtest.menu.Menu;\n+\n+public class Test_QSM_Test1 extends Config_New {\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_QSM_Test1\");\n+    }\n+\n+    \/**\n+     * Check tests selection in Quick set mode configuration editor\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+\n+    @Test\n+    public void test() throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException,\n+            FileNotFoundException, InterruptedException, IOException {\n+\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        Menu.getFile_Open_WorkDirectoryMenu(mainFrame).pushNoBlock();\n+        JDialogOperator openDialog = new JDialogOperator(getToolResource(\"wdc.open.title\"));\n+        new JTextFieldOperator(openDialog, \"\").enterText(\"demowd_config\");\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+\n+        JDialogOperator configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        JListOperator list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+        JMenuBarOperator jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        JTabbedPaneOperator QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+\n+        QSM_tabs.setSelectedIndex(0);\n+        JRadioButtonOperator test = new JRadioButtonOperator(QSM_tabs, 1);\n+        test.push();\n+        JTreeOperator tree = new JTreeOperator(QSM_tabs, 0);\n+        clickOnCheckbox(tree, 1);\n+        jmbo1.pushMenu(\"File\");\n+        jmbo1.pushMenu(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+\n+        JComboBoxOperator viewfilter = new JComboBoxOperator(mainFrame, 0);\n+        viewfilter.selectItem(1);\n+        JTabbedPaneOperator mainpane = new JTabbedPaneOperator(mainFrame, new NameComponentChooser(\"br.tabs\"));\n+        mainpane.setSelectedIndex(6);\n+        JTableOperator filtered = new JTableOperator(mainpane);\n+\n+        String testname = ((JLabel) filtered.getRenderedComponent(0, 0)).getText();\n+        assertEquals(\"Wrong tests selection in Quick set mode. Expected first test: BigNum\/AddTest.java#id0 But was: \"\n+                + testname, \"BigNum\/AddTest.java#id0\", testname);\n+\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_EditConfigurationMenu(mainFrame).pushNoBlock();\n+        configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+        list = new JListOperator(configEditorDialog);\n+        list.selectItem(1);\n+\n+        jmbo1 = new JMenuBarOperator(configEditorDialog);\n+        jmbo1.pushMenu(\"View\", \"\/\");\n+        jmbo1.pushMenu(\"View\/Quick Set Mode\", \"\/\");\n+        QSM_tabs = new JTabbedPaneOperator(configEditorDialog);\n+        QSM_tabs.setSelectedIndex(0);\n+        JRadioButtonOperator jrb = new JRadioButtonOperator(QSM_tabs, 1);\n+        jrb.push();\n+        tree = new JTreeOperator(QSM_tabs, 0);\n+        clickOnCheckbox(tree, 1);\n+\n+        JRadioButtonOperator jrb1 = new JRadioButtonOperator(QSM_tabs, 0);\n+        jrb1.push();\n+        jmbo1.pushMenuNoBlock(\"File\");\n+        jmbo1.pushMenuNoBlock(\"File\/Save\", \"\/\");\n+        pushDoneConfigEditor(configEditorDialog);\n+    }\n+\n+    \/**\n+     * This function is used to click on the check boxes in JTreeOperator\n+     *\n+     * @param JTreeOperator\n+     *\n+     * @param row\n+     *\/\n+    public void clickOnCheckbox(JTreeOperator tree, int row) {\n+        Rectangle r = tree.getRowBounds(row);\n+        prepareToClickOnRow(tree, row);\n+        int x = Operator.getDefaultMouseButton();\n+        tree.clickMouse((int) r.getX() + 6, (int) r.getY() + (int) (r.getHeight() \/ 2), 1, x, 0, false);\n+    }\n+\n+    \/**\n+     * This function is used to click on Test tree structure\n+     *\n+     * @param JTreeOperator\n+     *\n+     * @param row\n+     *\/\n+    public void prepareToClickOnRow(JTreeOperator tree, int row) {\n+        tree.makeComponentVisible();\n+        tree.scrollToRow(row);\n+        tree.makeVisible(tree.getPathForRow(row));\n+        if (!tree.isVisible(tree.getPathForRow(row))) {\n+            fail(\"Failed, row is not visible after prepairing. Index \" + row + \", tree width \");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_QSM_Test1.java","additions":161,"deletions":0,"binary":false,"changes":161,"status":"added"},{"patch":"@@ -38,0 +38,1 @@\n+import static org.junit.Assert.assertTrue;\n@@ -43,0 +44,1 @@\n+import org.netbeans.jemmy.operators.JButtonOperator;\n@@ -44,0 +46,1 @@\n+import org.netbeans.jemmy.operators.JEditorPaneOperator;\n@@ -45,0 +48,2 @@\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n@@ -47,0 +52,2 @@\n+import jthtest.Tools;\n+import jthtest.menu.Menu;\n@@ -52,1 +59,2 @@\n-     * create a report directory for a valid directory name for default values.\n+     * create a report directory for a valid directory name for default values and\n+     * Verify that opening a valid report file will open the report.\n@@ -65,1 +73,0 @@\n-\n@@ -67,1 +74,0 @@\n-\n@@ -72,1 +78,0 @@\n-\n@@ -75,1 +80,0 @@\n-\n@@ -114,0 +118,21 @@\n+\n+        JDialogOperator jdo = new JDialogOperator(\"View Report?\");\n+        JButtonOperator jbo = new JButtonOperator(jdo, \"No\");\n+        jbo.push();\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        jmbo.pushMenu(\"Report\", \"\/\");\n+        Menu.getReport_OpenReportMenu(mainFrame).pushNoBlock();\n+        Thread.sleep(2000);\n+        JDialogOperator reportDialog = new JDialogOperator(Tools.getExecResource(\"rh.open.title\"));\n+        JTextFieldOperator openreporttext = new JTextFieldOperator(reportDialog, \"\");\n+        Thread.sleep(2000);\n+        openreporttext.enterText(path + File.separator + \"index.html\");\n+        JDialogOperator reportdialog = new JDialogOperator(\"Report Browser\");\n+        JEditorPaneOperator jep = new JEditorPaneOperator(reportdialog);\n+        Thread.sleep(2000);\n+        jep.clickMouse(jep.modelToView(jep.getPositionByText(\"HTML Report\")).x,\n+                jep.modelToView(jep.getPositionByText(\"HTML Report\")).y, 1);\n+        JEditorPaneOperator jep1 = new JEditorPaneOperator(reportdialog);\n+        Thread.sleep(2000);\n+        assertTrue(\"Failure Beacuse Wrong page or unexpected error dialog box appeared after clicking on report link.\",\n+                jep1.getText().contains(\"JT Harness : Report\"));\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Report_Create1.java","additions":30,"deletions":5,"binary":false,"changes":35,"status":"modified"}]}