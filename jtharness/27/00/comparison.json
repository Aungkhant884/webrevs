{"files":[{"patch":"@@ -0,0 +1,130 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import org.junit.Test;\n+import org.junit.runner.JUnitCore;\n+import org.netbeans.jemmy.ComponentChooser;\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+import org.netbeans.jemmy.operators.JListOperator;\n+import org.netbeans.jemmy.operators.JMenuBarOperator;\n+import org.netbeans.jemmy.operators.JTableOperator;\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Config_Edit.Config_Edit;\n+import jthtest.menu.Menu;\n+\n+public class Test_Config_Edit1 extends Config_Edit {\n+    public static void main(String args[]) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Config_Edit1\");\n+    }\n+\n+    \/**\n+     * This test case verifies that Next button in the configuration editor will go\n+     * forward to the next question.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+    @Test\n+    public void test_next_button_config_editor_next_question()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException {\n+        int interview_question_num = 1;\n+        startJavatestNewDesktop();\n+        JFrameOperator mainFrame = findMainFrame();\n+\n+        openTestSuite(mainFrame);\n+        createWorkDirInTemp(mainFrame);\n+        openConfigFile(openLoadConfigDialogByMenu(mainFrame), CONFIG_NAME);\n+        waitForConfigurationLoading(mainFrame, CONFIG_NAME);\n+\n+        JMenuBarOperator jmbo = new JMenuBarOperator(mainFrame);\n+        jmbo.pushMenuNoBlock(\"Configure\", \"\/\");\n+        Menu.getConfigure_NewConfigurationMenu(mainFrame).pushNoBlock();\n+        JDialogOperator config = findConfigEditor(mainFrame);\n+\n+        JDialogOperator configEditorDialog = new JDialogOperator(getExecResource(\"ce.name\"));\n+\n+        while (interview_question_num <= 6) {\n+            fillInterviewQuestion(configEditorDialog, interview_question_num);\n+            pushNextConfigEditor(configEditorDialog);\n+            interview_question_num++;\n+        }\n+\n+        if (!new JListOperator(config).isSelectedIndex(new JListOperator(config).getSelectedIndex()))\n+            throw new JemmyException(\"After next button pushing list selection is not on proper page\");\n+    }\n+\n+    public void fillInterviewQuestion(JDialogOperator config, int interview_question_num) {\n+        ComponentChooser n = new NameComponentChooser(\"str.txt\");\n+        switch (interview_question_num) {\n+        case 1:\n+            return;\n+        case 2:\n+            JTextFieldOperator testName = new JTextFieldOperator(config, n);\n+            testName.typeText(\"test_name\");\n+            break;\n+        case 3:\n+            JTextFieldOperator description = new JTextFieldOperator(config, n);\n+            description.typeText(\"test_desc\");\n+            break;\n+        case 4:\n+            JTableOperator testTable = new JTableOperator(config);\n+            testTable.clickOnCell(0, 0);\n+            break;\n+        case 5:\n+            boolean isWindows = false;\n+            if (System.getProperty(\"os.name\").startsWith(\"Windows\")) {\n+                isWindows = true;\n+            }\n+            ComponentChooser fileText = new NameComponentChooser(\"file.txt\");\n+            JTextFieldOperator testConfig = new JTextFieldOperator(config, fileText);\n+            testConfig.clearText();\n+            Path p;\n+            if (isWindows) {\n+                p = Paths.get(System.getProperty(\"java.home\").toString(), \"bin\", \"java.exe\");\n+            } else {\n+                p = Paths.get(System.getProperty(\"java.home\").toString(), \"bin\", \"java\");\n+            }\n+            testConfig.typeText(p.toString());\n+            break;\n+        default:\n+            return;\n+        }\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Edit1.java","additions":130,"deletions":0,"binary":false,"changes":130,"status":"added"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.junit.runner.JUnitCore;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Test_Config_Edit2 extends Test {\n+\n+    public static void main(String[] args) {\n+        JUnitCore.main(\"jthtest.gui.Sanity_Tests.Test_Config_Edit2\");\n+    }\n+\n+    \/**\n+     * Verify that \"Done\" button in the Configuration Editor will finish all the\n+     * questions. Run Configuration Editor by \"Configure->Edit|Load|New\n+     * Configuration\" and check button.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\/\n+\n+    public void testImpl()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        addUsedFile(mainFrame.createWorkDirectoryInTemp());\n+\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(Tools.CONFIG_NAME, false);\n+\n+        ConfigDialog config = configuration.openByKey();\n+\n+        config.pushDoneConfigEditor();\n+\n+        if (config.getConfigDialog().isVisible()) {\n+            errors.add(\"Config editor is not closed after clicking on Done button on configuration editor\");\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Edit2.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.netbeans.jemmy.operators.JTextFieldOperator;\n+import org.netbeans.jemmy.util.NameComponentChooser;\n+\n+import jthtest.Test;\n+import jthtest.Tools;\n+import jthtest.tools.ConfigDialog;\n+import jthtest.tools.Configuration;\n+import jthtest.tools.JTFrame;\n+\n+public class Test_Config_Save1 extends Test {\n+    \/**\n+     * This test is to verify that \\\"File->Save\\\" menu item in Configuration Editor\n+     * will save the current configuration back in a file if the file was loaded.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\n+     * @throws InterruptedException\n+     *\/\n+    public void testImpl()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+        mainFrame = new JTFrame(true);\n+\n+        mainFrame.openDefaultTestSuite();\n+        File createdWD = mainFrame.createWorkDirectoryInTemp();\n+        addUsedFile(createdWD);\n+\n+        Configuration configuration = mainFrame.getConfiguration();\n+        configuration.load(Tools.CONFIG_NAME, true);\n+\n+        ConfigDialog config = configuration.openByKey();\n+        config.selectQuestion(2);\n+        JTextFieldOperator jTextFieldOperator = new JTextFieldOperator(config.getConfigDialog(),\n+                new NameComponentChooser(\"str.txt\"));\n+        String save = jTextFieldOperator.getText();\n+        jTextFieldOperator.setText(\"some_description\");\n+        config.getFile_SaveMenu().push();\n+        config.pushDoneConfigEditor();\n+\n+        mainFrame.closeCurrentTool();\n+\n+        mainFrame.getWorkDirectory().openWorkDirectory(createdWD);\n+        Tools.waitForWDLoading(mainFrame.getJFrameOperator(), Tools.WDLoadingResult.SOME_NOTRUN);\n+\n+        config = configuration.openByKey();\n+        config.selectQuestion(2);\n+        jTextFieldOperator = new JTextFieldOperator(config.getConfigDialog(), new NameComponentChooser(\"str.txt\"));\n+        if (!jTextFieldOperator.getText().equals(\"some_description\")) {\n+            errors.add(\"description was not saved in configuration editor\");\n+        }\n+        jTextFieldOperator.setText(save);\n+        config.pushDoneConfigEditor();\n+        mainFrame.closeCurrentTool();\n+    }\n+}\n\\ No newline at end of file\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Config_Save1.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * $Id$\n+ *\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jthtest.Sanity_Tests;\n+\n+import static jthtest.ReportTools.findShowReportDialog;\n+import static jthtest.ReportTools.openReportCreation;\n+import static jthtest.ReportTools.pressCreate;\n+import static jthtest.ReportTools.setPath;\n+import static jthtest.ReportTools.startJavaTestWithDefaultWorkDirectory;\n+import static jthtest.Tools.deleteDirectory;\n+import static jthtest.Tools.deleteUserData;\n+import static jthtest.Tools.findMainFrame;\n+\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import org.netbeans.jemmy.JemmyException;\n+import org.netbeans.jemmy.operators.JDialogOperator;\n+import org.netbeans.jemmy.operators.JFrameOperator;\n+\n+import jthtest.Test;\n+\n+public class Test_Report_Create1 extends Test {\n+\n+    \/**\n+     * This test case verifies that Create Report button under Report menu will\n+     * create a report directory for a valid directory name for default values.\n+     *\n+     * @throws ClassNotFoundException\n+     *\n+     * @throws InvocationTargetException\n+     *\n+     * @throws NoSuchMethodException\n+     *\n+     *\/\n+    public void testImpl()\n+            throws ClassNotFoundException, InvocationTargetException, NoSuchMethodException, InterruptedException {\n+        deleteUserData();\n+        startJavaTestWithDefaultWorkDirectory();\n+\n+        JFrameOperator mainFrame = findMainFrame();\n+\n+        JDialogOperator rep = openReportCreation(mainFrame);\n+        String path = TEMP_PATH + REPORT_NAME + \"_default\" + File.separator;\n+        deleteDirectory(path);\n+        setPath(rep, path);\n+\n+        pressCreate(rep);\n+        addUsedFile(path);\n+\n+        findShowReportDialog();\n+\n+        if (!new File(path + File.separator + \"index.html\").exists()) {\n+            throw new JemmyException(\"index.html was not found\");\n+        }\n+        if (!new File(path + File.separator + \"reportdir.dat\").exists()) {\n+            throw new JemmyException(\"reportdir.dat was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"config.html\").exists()) {\n+            throw new JemmyException(\"config.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"env.html\").exists()) {\n+            throw new JemmyException(\"env.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"report.html\").exists()) {\n+            throw new JemmyException(\"report.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"error.html\").exists()) {\n+            throw new JemmyException(\"error.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"notRun.html\").exists()) {\n+            throw new JemmyException(\"notRun.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"failed.html\").exists()) {\n+            throw new JemmyException(\"failed.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"passed.html\").exists()) {\n+            throw new JemmyException(\"passed.html was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"report.css\").exists()) {\n+            throw new JemmyException(\"report.css was not found\");\n+        }\n+        if (!new File(path + \"text\" + File.separator + \"summary.txt\").exists()) {\n+            throw new JemmyException(\"summary.txt was not found\");\n+        }\n+        if (!new File(path + \"html\" + File.separator + \"excluded.html\").exists()) {\n+            throw new JemmyException(\"excluded.html was not found\");\n+        }\n+    }\n+}\n","filename":"gui-tests\/src\/gui\/src\/jthtest\/Sanity_Tests\/Test_Report_Create1.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"}]}