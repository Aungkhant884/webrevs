{"files":[{"patch":"@@ -92,0 +92,1 @@\n+    char* leave_running = getenv(\"CRAC_CRIU_LEAVE_RUNNING\");\n@@ -107,0 +108,5 @@\n+\n+        if (leave_running) {\n+            *arg++ = \"-R\";\n+        }\n+\n@@ -128,0 +134,2 @@\n+    } else if (leave_running) {\n+        kickjvm(jvm, 0);\n","filename":"src\/java.base\/unix\/native\/criuengine\/criuengine.c","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.crac.*;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\/**\n+ * @test\n+ * @library \/test\/lib\n+ * @run main LeaveRunning\n+ *\/\n+public class LeaveRunning {\n+    private static final String RESTORED_MESSAGE = \"Restored\";\n+\n+    static class Test {\n+        public static void main(String[] args) throws CheckpointException, RestoreException {\n+            Core.checkpointRestore();\n+            System.out.println(RESTORED_MESSAGE);\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        OutputAnalyzer output;\n+        try {\n+            ProcessBuilder pb = ProcessTools.createTestJvm(\n+                \"-XX:CRaCCheckpointTo=.\/cr\",\n+                \"LeaveRunning$Test\");\n+            pb.environment().put(\"CRAC_CRIU_LEAVE_RUNNING\", \"\");\n+            output = ProcessTools.executeProcess(pb);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(RESTORED_MESSAGE);\n+\n+        try {\n+            output = ProcessTools.executeTestJvm(\n+                \"-XX:CRaCRestoreFrom=.\/cr\");\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        output.shouldHaveExitValue(0);\n+        output.shouldContain(RESTORED_MESSAGE);\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/LeaveRunning.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}