{"files":[{"patch":"@@ -32,1 +32,1 @@\n-public class CheckpointException extends Exception {\n+public class CheckpointException extends RuntimeException {\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/CheckpointException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-public class RestoreException extends Exception {\n+public class RestoreException extends RuntimeException {\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/RestoreException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,6 @@\n-        EPOLLSELECTOR\n+        EPOLLSELECTOR,\n+        \/**\n+         * Priority of the\n+         * sun.security.provider.NativePRNG resource\n+         *\/\n+        NATIVE_PRNG\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import jdk.crac.CheckpointException;\n@@ -488,0 +489,3 @@\n+                    if(crLock.getWriteHoldCount() != 0) {\n+                        throw new CheckpointException(\"PRNG object is invalidated\");\n+                    }\n@@ -551,0 +555,3 @@\n+                    if(crLock.getWriteHoldCount() != 0) {\n+                        throw new CheckpointException(\"PRNG object is invalidated\");\n+                    }\n@@ -603,2 +610,2 @@\n-        public int getPriority() {\n-            return 0;\n+        public Priority getPriority() {\n+            return Priority.NATIVE_PRNG;\n","filename":"src\/java.base\/unix\/classes\/sun\/security\/provider\/NativePRNG.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}