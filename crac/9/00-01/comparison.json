{"files":[{"patch":"@@ -32,1 +32,1 @@\n-import java.util.concurrent.locks.ReentrantLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n@@ -391,1 +391,2 @@\n-        private final ReentrantLock crLock = new ReentrantLock();\n+        \/\/ allows clearing mixRandom and internal buffer before checkpoint\n+        private final ReentrantReadWriteLock crLock = new ReentrantReadWriteLock();\n@@ -485,1 +486,1 @@\n-                crLock.lock();\n+                crLock.readLock().lock();\n@@ -489,1 +490,1 @@\n-                    crLock.unlock();\n+                    crLock.readLock().unlock();\n@@ -548,1 +549,1 @@\n-            crLock.lock();\n+            crLock.readLock().lock();\n@@ -583,1 +584,1 @@\n-                    crLock.unlock();\n+                    crLock.readLock().unlock();\n@@ -589,1 +590,1 @@\n-            crLock.lock();\n+            crLock.writeLock().lock();\n@@ -593,3 +594,1 @@\n-            for(int i=0; i<nextBuffer.length; i++) {\n-                nextBuffer[i] = 0;\n-            }\n+            Arrays.fill(nextBuffer, (byte)0);\n@@ -600,1 +599,1 @@\n-            crLock.unlock();\n+            crLock.writeLock().unlock();\n","filename":"src\/java.base\/unix\/classes\/sun\/security\/provider\/NativePRNG.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-AlgNames = \"SHA1PRNG NativePRNGBlocking NativePRNGNonBlocking NativePRNG\"\n+AlgNames=\"SHA1PRNG NativePRNGBlocking NativePRNGNonBlocking NativePRNG\"\n","filename":"test\/jdk\/jdk\/crac\/SecureRandom\/Test.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}