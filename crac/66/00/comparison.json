{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import jdk.internal.crac.JDKResource;\n@@ -31,0 +32,1 @@\n+import jdk.internal.ref.CleanerImpl;\n@@ -34,0 +36,1 @@\n+import java.lang.ref.Cleaner;\n@@ -90,1 +93,2 @@\n-            CleanerFactory.cleaner().register(cs, newContext);\n+            new CleanerImpl.PhantomCleanableRef(cs, CleanerFactory.cleaner(),\n+                    newContext, JDKResource.Priority.CALL_SITES);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import jdk.internal.crac.JDKResource;\n@@ -220,1 +221,1 @@\n-        return new CleanerImpl.PhantomCleanableRef(obj, this, action);\n+        return new CleanerImpl.PhantomCleanableRef(obj, this, action, JDKResource.Priority.CLEANERS);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Cleaner.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -89,0 +89,8 @@\n+\n+        \/**\n+         * Cleaners for CallSites cannot be registered with regular CLEANERS\n+         * priority as this would hang\/throw exceptions any time a lambda\n+         * or method reference is used during or after processing this resource\n+         * priority class; therefore we postpone as the last priority.\n+         *\/\n+        CALL_SITES,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -160,0 +160,1 @@\n+        private final JDKResource.Priority priority;\n@@ -166,0 +167,1 @@\n+         * @param priority priority for checkpoint handling\n@@ -167,1 +169,1 @@\n-        public PhantomCleanableRef(Object obj, Cleaner cleaner, Runnable action) {\n+        public PhantomCleanableRef(Object obj, Cleaner cleaner, Runnable action, JDKResource.Priority priority) {\n@@ -170,0 +172,1 @@\n+            this.priority = priority;\n@@ -179,0 +182,1 @@\n+            this.priority = Priority.CLEANERS;\n@@ -208,1 +212,1 @@\n-            return Priority.CLEANERS;\n+            return priority;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/CleanerImpl.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}