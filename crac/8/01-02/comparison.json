{"files":[{"patch":"@@ -38,1 +38,1 @@\n-            return o2.getKey().getPriority().ordinal() - o1.getKey().getPriority().ordinal();\n+            return o1.getKey().getPriority().ordinal() - o2.getKey().getPriority().ordinal();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,2 @@\n-     * Most resources should use priority NORMAL.\n+     * Priorities are defined in the order from lowest to highest.\n+     * Most resources should use priority NORMAL (the lowest priority).\n@@ -37,5 +38,4 @@\n-     * If priority A is specified early in the enumeration than priority B,\n-     * a JDK resource with priority A will be notified about checkpoint\n-     * later than JDK resource with priority B. When restoring, the order\n-     * is reversed: JDK resource with priority A will be notified about\n-     * restore early than JDK resource with priority B.\n+     * Checkpoint notification will be processed in the order from the lowest\n+     * to the highest priorities.\n+     * Restore notification will be processed in the revers order:\n+     * from the highest to the lowest priorities.\n@@ -49,2 +49,1 @@\n-         * Priority of the\n-         * sun.nio.ch.EPollSelectorImpl resource\n+         * Most resources should use this option.\n@@ -52,1 +51,1 @@\n-        EPOLLSELECTOR,\n+        NORMAL,\n@@ -54,1 +53,2 @@\n-         * Most resources should use this option.\n+         * Priority of the\n+         * sun.nio.ch.EPollSelectorImpl resource\n@@ -56,1 +56,1 @@\n-        NORMAL\n+        EPOLLSELECTOR\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}