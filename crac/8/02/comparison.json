{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import jdk.internal.crac.JDKResource.Priority;\n@@ -407,2 +408,2 @@\n-    public int getPriority() {\n-        return -1;\n+    public Priority getPriority() {\n+        return Priority.EPOLLSELECTOR;\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-            return o2.getKey().getPriority() - o1.getKey().getPriority();\n+            return o1.getKey().getPriority().ordinal() - o2.getKey().getPriority().ordinal();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,28 @@\n-    int getPriority();\n+    \/**\n+     * JDK Resource priorities.\n+     * Priorities are defined in the order from lowest to highest.\n+     * Most resources should use priority NORMAL (the lowest priority).\n+     * Other priorities define sequence of checkpoint notification\n+     * for dependent resources.\n+     * Checkpoint notification will be processed in the order from the lowest\n+     * to the highest priorities.\n+     * Restore notification will be processed in the revers order:\n+     * from the highest to the lowest priorities.\n+     * JDK resources with the same priority will be notified about checkpoint\n+     * in the reverse order of registration.\n+     * JDK resources with the same priority will be notified about restore\n+     * in the direct order of registration.\n+     *\/\n+    enum Priority {\n+        \/**\n+         * Most resources should use this option.\n+         *\/\n+        NORMAL,\n+        \/**\n+         * Priority of the\n+         * sun.nio.ch.EPollSelectorImpl resource\n+         *\/\n+        EPOLLSELECTOR\n+    };\n+\n+    Priority getPriority();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java","additions":28,"deletions":1,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+import jdk.internal.crac.JDKResource.Priority;\n@@ -848,2 +849,2 @@\n-            public int getPriority() {\n-                return 0;\n+            public Priority getPriority() {\n+                return Priority.NORMAL;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/URLClassPath.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import jdk.internal.crac.JDKResource.Priority;\n@@ -54,2 +55,2 @@\n-        public int getPriority() {\n-            return 0;\n+        public Priority getPriority() {\n+            return Priority.NORMAL;\n","filename":"src\/java.base\/unix\/classes\/java\/net\/PlainSocketImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import jdk.internal.crac.JDKResource.Priority;\n@@ -52,2 +53,2 @@\n-        public int getPriority() {\n-            return 0;\n+        public Priority getPriority() {\n+            return Priority.NORMAL;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}