{"files":[{"patch":"@@ -115,0 +115,1 @@\n+  bool _effectively_completed;\n@@ -118,0 +119,1 @@\n+  void effectivley_complete(jint res, bufferedStream* st);\n@@ -400,0 +402,10 @@\n+\/\/ An operation completeon is splitted on two parts.\n+\/\/ For proper handling the jcmd connection at CRaC checkpoint action.\n+\/\/ An effectively_complete is called in checkpoint processing, before criu engine calls, for properly closing the socket.\n+\/\/ The complete() gets called after restore for proper deletion the leftover object.\n+\n+void LinuxAttachOperation::complete(jint result, bufferedStream* st) {\n+  LinuxAttachOperation::effectivley_complete(result, st);\n+  delete this;\n+}\n+\n@@ -408,1 +420,6 @@\n-void LinuxAttachOperation::complete(jint result, bufferedStream* st) {\n+void LinuxAttachOperation::effectivley_complete(jint result, bufferedStream* st) {\n+  \n+  if (_effectively_completed) {\n+    return;\n+  }\n+\n@@ -425,0 +442,1 @@\n+  _effectively_completed = true;\n@@ -426,1 +444,0 @@\n-  delete this;\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -6239,9 +6239,3 @@\n-    \/\/ say to jcmd peer that all ok, and send the ostream buffer\n-    char msg[5];\n-    int k;\n-    sprintf(msg, \"%d\\n\", JNI_OK);\n-    k = write(unixsockdf, msg, strlen(msg));\n-    k = write(unixsockdf, buf->as_string(), buf->size());\n-\n-    shutdown(unixsockdf, SHUT_RDWR);\n-    close(unixsockdf);\n+    AttachOperation * op = AttachListener::get_CurrentOperation();\n+    \/\/ Send a result to jcmd\n+    op->effectivley_complete(JNI_OK, buf);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-\n+AttachOperation* AttachListener::_currentOperation = NULL;\n@@ -408,0 +408,1 @@\n+      AttachListener::set_CurrentOperation(op);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -83,0 +83,1 @@\n+\n@@ -85,0 +86,1 @@\n+  static AttachOperation* _currentOperation;\n@@ -95,0 +97,7 @@\n+  static AttachOperation* get_CurrentOperation() {\n+    return Atomic::load(&AttachListener::_currentOperation);\n+  }\n+  static void set_CurrentOperation(AttachOperation* s) {\n+    Atomic::store(&AttachListener::_currentOperation, s); \n+  }\n+\n@@ -191,0 +200,2 @@\n+  virtual void effectivley_complete(jint result, bufferedStream* result_stream) = 0;\n+\n","filename":"src\/hotspot\/share\/services\/attachListener.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}