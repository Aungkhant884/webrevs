{"files":[{"patch":"@@ -118,0 +118,10 @@\n+    \/\/ checkpointRestore protects against the simultaneous\n+    \/\/ call of checkpointRestore from different threads.\n+        synchronized (checkpointRestoreLock) {\n+            \/\/ checkpointInProgress protects against recursive\n+            \/\/ checkpointRestore from resource's\n+            \/\/ beforeCheckpoint\/afterRestore methods\n+        if (checkpointInProgress) {\n+            throw new CheckpointException(\"Recursive checkpoint is not allowed\");\n+        }\n+        checkpointInProgress = true;\n@@ -209,0 +219,5 @@\n+        checkpointInProgress = false;\n+        if (FlagsHolder.TRACE_STARTUP_TIME) {\n+            System.out.println(\"STARTUPTIME \" + System.nanoTime() + \" restore-finish\");\n+        }\n+\n@@ -216,0 +231,1 @@\n+    }\n@@ -232,37 +248,1 @@\n-        \/\/ checkpointRestore protects against the simultaneous\n-        \/\/ call of checkpointRestore from different threads.\n-        synchronized (checkpointRestoreLock) {\n-            \/\/ checkpointInProgress protects against recursive\n-            \/\/ checkpointRestore from resource's\n-            \/\/ beforeCheckpoint\/afterRestore methods\n-            if (!checkpointInProgress) {\n-                try {\n-                    checkpointInProgress = true;\n-                    checkpointRestore1(JCMD_STREAM_NULL, JCMD_OPERATION_NULL);\n-                } finally {\n-                    if (FlagsHolder.TRACE_STARTUP_TIME) {\n-                        System.out.println(\"STARTUPTIME \" + System.nanoTime() + \" restore-finish\");\n-                    }\n-                    checkpointInProgress = false;\n-                }\n-            } else {\n-                throw new CheckpointException(\"Recursive checkpoint is not allowed\");\n-            }\n-        }\n-    }\n-\n-    private static void checkpointRestore2(long outputStream_p, long jcmd_p) throws\n-            CheckpointException,\n-            RestoreException {\n-        synchronized (checkpointRestoreLock) {\n-            \/\/ idkn, it worth to protect from multy-thread checkpointing ?  - doesn't have sence for jcmd checkpointing, only for\n-            \/\/ jcmd + somebody through an api ...\n-            if (!checkpointInProgress) {\n-                checkpointInProgress = true;\n-                try {\n-                    checkpointRestore1(outputStream_p, jcmd_p);\n-                } finally {\n-                    checkpointInProgress = false;\n-                }\n-            }\n-        }\n+        checkpointRestore1(JCMD_STREAM_NULL, JCMD_OPERATION_NULL);\n@@ -276,1 +256,1 @@\n-            checkpointRestore2(outputStream_p, jcmd_p);\n+            checkpointRestore1(outputStream_p, jcmd_p);\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java","additions":18,"deletions":38,"binary":false,"changes":56,"status":"modified"}]}