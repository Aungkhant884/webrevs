{"files":[{"patch":"@@ -61,2 +61,0 @@\n-\/\/ forward reference\n-\/\/class LinuxAttachOperation;\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5728,1 +5728,1 @@\n-outputStream * ou = (ostream == NULL) ? tty : ostream;\n+  outputStream * ou = (ostream == NULL) ? tty : ostream;\n@@ -6036,3 +6036,3 @@\n-  if (info.si_code == SI_QUEUE) {\n-    tty->print(\" code %d\", info.si_int);\n-  }\n+    if (info.si_code == SI_QUEUE) {\n+      tty->print(\" code %d\", info.si_int);\n+    }\n@@ -6170,1 +6170,1 @@\n-\/\/ The checkpoint could be called with an API, so jcmd operation and io stream doesnt exist.\n+\/\/ If checkpoint is called throught the API, jcmd operation anf jcmd output doesn't exist.\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-  \/\/ save jcmd operation for proper Checkpoint\n+  \/\/ save jcmd operation, and use it further on checkpoint reporting\n@@ -196,1 +196,0 @@\n-\n","filename":"src\/hotspot\/share\/services\/attachListener.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1046,1 +1046,0 @@\n-  output()->print_cr(\"JDK.checkpoint command start processing\");\n@@ -1062,1 +1061,0 @@\n-  output()->print_cr(\"JDK.checkpoint command processing finished\");\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}