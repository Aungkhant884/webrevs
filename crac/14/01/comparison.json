{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.util.Map;\n+import java.util.WeakHashMap;\n@@ -35,0 +37,1 @@\n+\n@@ -36,0 +39,2 @@\n+import jdk.crac.Context;\n+import jdk.crac.Resource;\n@@ -43,1 +48,1 @@\n-class JarFileFactory implements URLJarFile.URLJarFileCloseController {\n+class JarFileFactory implements URLJarFile.URLJarFileCloseController, jdk.internal.crac.JDKResource {\n@@ -53,0 +58,4 @@\n+    static {\n+        jdk.internal.crac.Core.getJDKContext().register(instance);\n+    }\n+\n@@ -239,0 +248,31 @@\n+\n+    @Override\n+    public Priority getPriority() {\n+        return Priority.NORMAL;\n+    }\n+\n+    @Override\n+    public void beforeCheckpoint(Context<? extends Resource> context) throws Exception {\n+        \/\/ Need to clear cached entries that are held by the factory only (e.g.\n+        \/\/ after JarURLInputStream.close with useCaches == true).  Creating a\n+        \/\/ temporary weak cache and triggering GC to get know JARs really in\n+        \/\/ use.\n+        synchronized (instance) {\n+            WeakHashMap<JarFile, URL> weakMap = new WeakHashMap<>(urlCache);\n+            fileCache.clear();\n+            urlCache.clear();\n+\n+            System.gc();\n+\n+            weakMap.forEach((JarFile jarFile, URL url) -> {\n+                String key = urlKey(url);\n+                urlCache.put(jarFile, url);\n+                fileCache.put(key, jarFile);\n+            });\n+        }\n+    }\n+\n+    @Override\n+    public void afterRestore(Context<? extends Resource> context) throws Exception {\n+    }\n+\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/www\/protocol\/jar\/JarFileFactory.java","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -0,0 +1,54 @@\n+\/*\n+ * Copyright (c) 2022, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.crac.*;\n+\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.nio.file.Path;\n+\n+\/**\n+ * @test JarFileFactoryCacheTest\n+ * @library \/test\/lib\n+ * @run main\/othervm -XX:CREngine=simengine -XX:CRaCCheckpointTo=.\/cr -XX:+CRPrintResourcesOnCheckpoint JarFileFactoryCacheTest\n+ *\/\n+public class JarFileFactoryCacheTest {\n+    static public void main(String[] args) throws Exception {\n+        jdk.test.lib.util.JarUtils.createJarFile(\n+            Path.of(\"test.jar\"),\n+            Path.of(System.getProperty(\"test.src\")),\n+            \"test.txt\");\n+\n+        URL url = new URL(\"jar:file:test.jar!\/test.txt\");\n+        InputStream inputStream = url.openStream();\n+        byte[] content = inputStream.readAllBytes();\n+        if (content.length != 5) {\n+            throw new AssertionError(\"wrong content\");\n+        }\n+        inputStream.close();\n+        inputStream = null;\n+        url = null;\n+\n+        Core.checkpointRestore();\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/JarFileFactoryCacheTest\/JarFileFactoryCacheTest.java","additions":54,"deletions":0,"binary":false,"changes":54,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+test\n","filename":"test\/jdk\/jdk\/crac\/JarFileFactoryCacheTest\/test.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"}]}