{"files":[{"patch":"@@ -38,1 +38,1 @@\n-    public CheckpointException() {\n+    private CheckpointException() {\n@@ -53,0 +53,11 @@\n+\n+    \/**\n+     * Exception that combines multiple other exceptions in its suppressed exceptions.\n+     *\/\n+    public static class Combined extends CheckpointException {\n+        private static final long serialVersionUID = -7949656538310239746L;\n+        \/**\n+         * Constructs a message-less exception, not capturing stack trace.\n+         *\/\n+        public Combined() {}\n+    }\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/CheckpointException.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -48,2 +48,2 @@\n-        } catch (jdk.crac.CheckpointException e) {\n-            CheckpointException newException = new CheckpointException();\n+        } catch (jdk.crac.CheckpointException.Combined e) {\n+            CheckpointException newException = new CheckpointException.Combined();\n@@ -54,0 +54,5 @@\n+        } catch (jdk.crac.CheckpointException e) {\n+            \/\/ should we rather use message + cause in here?\n+            CheckpointException newException = new CheckpointException.Combined();\n+            newException.addSuppressed(e);\n+            throw newException;\n@@ -62,2 +67,2 @@\n-        } catch (jdk.crac.RestoreException e) {\n-            RestoreException newException = new RestoreException();\n+        } catch (jdk.crac.RestoreException.Combined e) {\n+            RestoreException newException = new RestoreException.Combined();\n@@ -68,0 +73,4 @@\n+        } catch (jdk.crac.RestoreException e) {\n+            RestoreException newException = new RestoreException.Combined();\n+            newException.addSuppressed(e);\n+            throw newException;\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/ContextWrapper.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -71,6 +71,2 @@\n-        } catch (jdk.crac.CheckpointException e) {\n-            \/\/ We will lose the stack trace information but not the detailed message\n-            \/\/ Since the exception received here will originate from jdk.crac.Core\n-            \/\/ anyway the actual stack trace is not that important.\n-            CheckpointException newException = e.getMessage() == null ?\n-                    new CheckpointException() : new CheckpointException(e.getMessage());\n+        } catch (jdk.crac.CheckpointException.Combined e) {\n+            CheckpointException.Combined newException = new CheckpointException.Combined();\n@@ -81,3 +77,6 @@\n-        } catch (jdk.crac.RestoreException e) {\n-            RestoreException newException = e.getMessage() == null ?\n-                    new RestoreException() : new RestoreException(e.getMessage());\n+        } catch (jdk.crac.CheckpointException e) {\n+            CheckpointException newException = new CheckpointException.Combined();\n+            newException.addSuppressed(e);\n+            throw newException;\n+        } catch (jdk.crac.RestoreException.Combined e) {\n+            RestoreException newException = new RestoreException.Combined();\n@@ -88,0 +87,4 @@\n+        } catch (jdk.crac.RestoreException e) {\n+            RestoreException newException = new RestoreException.Combined();\n+            newException.addSuppressed(e);\n+            throw newException;\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/Core.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -62,2 +62,2 @@\n-            } catch (CheckpointException e) {\n-                Exception newException = new jdk.crac.CheckpointException();\n+            } catch (CheckpointException.Combined e) {\n+                Exception newException = new jdk.crac.CheckpointException.Combined();\n@@ -68,0 +68,4 @@\n+            } catch (Exception e) {\n+                Exception newException = new jdk.crac.CheckpointException.Combined();\n+                newException.addSuppressed(e);\n+                throw newException;\n@@ -79,2 +83,2 @@\n-            } catch (RestoreException e) {\n-                Exception newException = new jdk.crac.RestoreException();\n+            } catch (RestoreException.Combined e) {\n+                Exception newException = new jdk.crac.RestoreException.Combined();\n@@ -85,0 +89,4 @@\n+            } catch (RestoreException e) {\n+                Exception newException = new jdk.crac.RestoreException.Combined();\n+                newException.addSuppressed(e);\n+                throw newException;\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/ResourceWrapper.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    public RestoreException() {\n+    private RestoreException() {\n@@ -53,0 +53,11 @@\n+\n+    \/**\n+     * Exception that combines multiple other exceptions in its suppressed exceptions.\n+     *\/\n+    public static class Combined extends RestoreException {\n+        private static final long serialVersionUID = 7243624264568410630L;\n+        \/**\n+         * Constructs a message-less exception, not capturing stack trace.\n+         *\/\n+        public Combined() {}\n+    }\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/RestoreException.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    public CheckpointException() {\n+    private CheckpointException() {\n@@ -53,0 +53,11 @@\n+\n+    \/**\n+     * Exception that combines multiple other exceptions in its suppressed exceptions.\n+     *\/\n+    public static class Combined extends CheckpointException {\n+        private static final long serialVersionUID = 6743619271103062963L;\n+        \/**\n+         * Constructs a message-less exception, not capturing stack trace.\n+         *\/\n+        public Combined() {}\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/CheckpointException.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-            checkpointException = new CheckpointException();\n+            checkpointException = new CheckpointException.Combined();\n@@ -135,1 +135,1 @@\n-                    checkpointException = new CheckpointException();\n+                    checkpointException = new CheckpointException.Combined();\n@@ -189,1 +189,1 @@\n-                        restoreException = new RestoreException();\n+                        restoreException = new RestoreException.Combined();\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    public RestoreException() {\n+    private RestoreException() {\n@@ -53,0 +53,12 @@\n+\n+    \/**\n+     * Exception that combines multiple other exceptions in its suppressed exceptions.\n+     *\/\n+    public static class Combined extends RestoreException {\n+        private static final long serialVersionUID = -574656804868751049L;\n+\n+        \/**\n+         * Constructs a message-less exception, not capturing stack trace.\n+         *\/\n+        public Combined() {}\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/RestoreException.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        CheckpointException exception = new CheckpointException();\n+        CheckpointException.Combined exception = new CheckpointException.Combined();\n@@ -67,1 +67,1 @@\n-            } catch (CheckpointException e) {\n+            } catch (CheckpointException.Combined e) {\n@@ -86,1 +86,1 @@\n-        RestoreException exception = new RestoreException();\n+        RestoreException exception = new RestoreException.Combined();\n@@ -93,1 +93,1 @@\n-            } catch (RestoreException e) {\n+            } catch (RestoreException.Combined e) {\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/AbstractContextImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}