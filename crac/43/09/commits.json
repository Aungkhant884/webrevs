[{"commit":{"message":"Merge remote-tracking branch 'origin\/crac' into newfd"},"files":[],"sha":"8fd3566cf71524ae3ee5b33cb425cda1177867f8"},{"commit":{"message":"Fixup"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"e8c92e2ca0f3c8984423d9eb47d0e568de82482a"},{"commit":{"message":"Merge branch 'context_order' into newfd"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"1a2b9b91fbfcdbd7dd55ff1750ebd859f518ae96"},{"commit":{"message":"Revert removing the logging configuration"},"files":[],"sha":"841d09898bd6fc625900df7592de35b1d6335da1"},{"commit":{"message":"Make comparator private"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"29272639e4729ba7f8a214e21177bf03d0687173"},{"commit":{"message":"Fix build"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"4adad66433fef1110bda6a0e5a524f08667d9e34"},{"commit":{"message":"Minified the set of changes"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"13cac14824620c3583119d3318ecdebeb47bd3b6"},{"commit":{"message":"Fixup"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"7d7ce02fc5d25aec228998a1db151e2aa510dfe1"},{"commit":{"message":"Remove mention of single-threaded notifications"},"files":[],"sha":"286d820de09fbda8e24689a351e7368d2786c221"},{"commit":{"message":"Update docs"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"9e81179fc5c71f5abf2532bf6ef1c0bc22be0ba1"},{"commit":{"message":"Remove commented out debug code"},"files":[{"filename":"test\/jdk\/jdk\/crac\/RefQueueTest.java"}],"sha":"53c347bce40bc3db0808f1c30eba825d0f225c34"},{"commit":{"message":"Merge branch 'context_order' into newfd-nocontext"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/CleanerImpl.java"},{"filename":"src\/java.base\/unix\/native\/libnet\/SocketImpl.c"},{"filename":"test\/jdk\/jdk\/crac\/RefQueueTest.java"}],"sha":"f1561378852c225a0a5cb05ae01538da3d92d9f2"},{"commit":{"message":"Revert API change, force blocking registration"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"868baeaeeb5d26a1f579496e5e58414666299b94"},{"commit":{"message":"Add the missing javadoc"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"729a45375f77847eac7ff6f416570d58012b0581"},{"commit":{"message":"Updated Global Context javadoc, removed semanticContext()"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"53ccc062d1ec41247e10c89f14d97ddef1312835"},{"commit":{"message":"Fix javadoc build"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"33226eba4ca76223a8449851fdd0617743a777d9"},{"commit":{"message":"Fix javadoc and minor refactoring"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"}],"sha":"eafdb84130046d05582ab63a8b9fa3a246cd2fd2"},{"commit":{"message":"Merge branch 'crac' into context_order"},"files":[],"sha":"e95bb71c4826809d952121d1608df0927b5fb1cf"},{"commit":{"message":"More fine-grained synchronization"},"files":[],"sha":"1f2c7b39638d93a279c8c2960c482b8422a8ca29"},{"commit":{"message":"Fix test"},"files":[{"filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenFileDetectionTest.java"}],"sha":"73297fb61fd81357d2dfda0df34283d41fa97ac7"},{"commit":{"message":"Remove context related changes"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"bb72f8c75ba1ba921b3eb239c8f937f96985527a"},{"commit":{"message":"Add thread name and timestamp to FD tracing"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"}],"sha":"6cfdb6c88c4bd6a14d457bd4ab0936fcf6edcab6"},{"commit":{"message":"Fix infinite loop when checking classpath entry"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"cfe82a09534e340bc0ec3416eeeb7a3a66765385"},{"commit":{"message":"More fine-grained synchronization"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"b1a1f6f6a25ec07e66a1477a9b2d99e692c9fe74"},{"commit":{"message":"Merge branch 'context_order' into newfd"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"},{"filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenSocketDetectionTest.java"}],"sha":"0272c47d634c81a48920b98e92777b98c8b2d446"},{"commit":{"message":"Rework context ordering (round 2)\n\n* call afterRestore even if beforeCheckpoint throws\n* registering resource in previous\/running context does not trigger exception immediatelly\n** instead this will be one of the recorded exceptions and the resource has a chance to fire next time\n* we don't guarantee threads not deadlocking when trying to register a resource, though"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"f7412f4b2a0d18dd3bee68c53d8476b3820c4b4b"},{"commit":{"message":"Fix docs & package"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"}],"sha":"fb7d4ea727cceaf955ed1b0a10a481128c75e301"},{"commit":{"message":"Fix ordering of invocation on Resources\n\n* When Context.beforeCheckpoint throws, invoke Context.afterRestore\n  anyway (otherwise some resources stay in suspended state).\n* Handle Resource.beforeCheckpoint triggering a registration of another\n  resource\n** Do not cause deadlock when registering from another thread\n** Global resource can register JDKResource\n** JDKResource can register resource with higher priority\n** Other registrations are prohibited"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"}],"sha":"e801310e8b5918d195b64ca4ec1448122f773428"},{"commit":{"message":"Provide more information for file descriptors"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java"},{"filename":"src\/java.base\/unix\/native\/libjava\/FileDescriptor_md.c"},{"filename":"src\/java.base\/unix\/native\/libnet\/SocketImpl.c"},{"filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenFileDetectionTest.java"},{"filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenSocketDetectionTest.java"}],"sha":"8cba86dfdd7bc0c1f73987989a9983bf3bbf5918"},{"commit":{"message":"On exception, invoke afterRestore on throwing Context, too."},"files":[],"sha":"8b51d32a6bf06f9ff4f0ef5a7625a47227bc35e1"},{"commit":{"message":"Fix logging formatter"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"}],"sha":"4f5061680a4cafd1392d3cc45b0f147af8787e22"},{"commit":{"message":"Move properties to inner class, initialized later"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenFileDetectionTest.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"3a13fe35126b5b6fcb16efb31f9b8acd0072cb7a"},{"commit":{"message":"Delete LazyProps test (debug logging now configured differently)"},"files":[],"sha":"d6757344ee567e46db286252c528c281fbe5a787"},{"commit":{"message":"Do not allow registering resources with lower or equal priority during beforeCheckpoint"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"6bc676584dd148f72a0bbfae1487f147f0001fe1"},{"commit":{"message":"Address review comments"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java"},{"filename":"test\/jdk\/jdk\/crac\/RefQueueTest.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java"}],"sha":"f8880e073e763f7c54e7adc8596fca40706bea1c"},{"commit":{"message":"Merge remote-tracking branch 'origin\/crac' into newfd"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"}],"sha":"9b5e7edd003a5d900e85a88ca9a7598dedf1348c"},{"commit":{"message":"Use descriptor access rather than extending API"},"files":[{"filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaIOFileDescriptorAccess.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java"}],"sha":"b188096b0144f77bd49b48b152cdc4eb20b51111"},{"commit":{"message":"8272472: StackGuardPages test doesn't build with glibc 2.34\n\nBackport-of: f77a1a156f3da9068d012d9227c7ee0fee58f571"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/StackGuardPages\/exeinvoke.c"}],"sha":"b74db602780235f38f841b99d011b8c62a733847"},{"commit":{"message":"Empty commit to trigger GHA"},"files":[],"sha":"723d6f32d3e7c19cd2d42a7e68a82eaca6598123"},{"commit":{"message":"Drop native FDs tracking"},"files":[{"filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"91b223ef0f2ce241104fa503d417bde1545839c3"},{"commit":{"message":"Avoid claiming invalid FileDescriptor"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"432c3f73607b12b083b234c13522455461ae0341"},{"commit":{"message":"Whitelist RandomAccessFile opening classpath files\n\nThis is a workaround for some frameworks opening classpath files in\na non-standard way."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"cbf0778439dbf76b425e19ba620dfbaa57954369"},{"commit":{"message":"Add tracking of FD origin"},"files":[{"filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/CheckpointOpenFileException.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/CheckpointOpenResourceException.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/CheckpointOpenSocketException.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"2839d842be52546b61b4f4dd620fe24e79fc527c"},{"commit":{"message":"Track FileDescriptors closed by NIO"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/DatagramDispatcher.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileDispatcherImpl.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/SocketDispatcher.java"}],"sha":"c631fefe8e13c22f9f881bb3718298428c825e35"},{"commit":{"message":"Track native FDs from EPoll"},"files":[{"filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"}],"sha":"0ff5b31d08893d2583a6f6a653294d16f9f0560e"},{"commit":{"message":"Ignore FileDescriptors closed externally"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/DatagramDispatcher.java"},{"filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/SocketDispatcher.java"}],"sha":"d06e2261940d552314719a6ced2c3a1635bd659b"},{"commit":{"message":"Better FD, does not work"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"}],"sha":"52b93358ff145df7673e95d4b92d251e456bd371"},{"commit":{"message":"Finish claimFD"},"files":[{"filename":"make\/data\/hotspot-symbols\/symbols-shared"},{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/FileInputStreamPool.java"},{"filename":"src\/java.base\/share\/native\/libjava\/CracCore.c"},{"filename":"src\/java.base\/unix\/classes\/sun\/security\/provider\/NativePRNG.java"}],"sha":"420c2199cf03e07c136d27fd0b5fb5419d19272c"},{"commit":{"message":"WIP"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKResource.java"},{"filename":"src\/java.base\/share\/native\/libjava\/CracCore.c"}],"sha":"bc568b7f2aced885129ac017113676012a1fd16f"},{"commit":{"message":"WIP"},"files":[{"filename":"make\/data\/hotspot-symbols\/symbols-shared"},{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.hpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/native\/libjava\/CracCore.c"}],"sha":"a1fef401e544c6c069e82fd6bf372a8a9b76cfec"},{"commit":{"message":"New FD WIP"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.hpp"},{"filename":"src\/hotspot\/share\/include\/jvm.h"},{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java"},{"filename":"src\/java.base\/share\/native\/libjava\/CracCore.c"}],"sha":"05ea098e66e1df5dae5a7e0764885aa0ef646463"}]