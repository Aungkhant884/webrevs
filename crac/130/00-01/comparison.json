{"files":[{"patch":"@@ -466,4 +466,0 @@\n-\n-void crac::initialize_time_counters() {\n-  os::Posix::init();\n-}\n","filename":"src\/hotspot\/os\/linux\/crac_linux.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,0 +43,4 @@\n+void crac::initialize_time_counters() {\n+  os::Posix::initialize_time_counters();\n+}\n+\n","filename":"src\/hotspot\/os\/posix\/crac_posix.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1258,0 +1258,4 @@\n+  initialize_time_counters();\n+}\n+\n+void os::Posix::initialize_time_counters(void) {\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+  static void initialize_time_counters(void);\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import jdk.test.lib.crac.CracEngine;\n@@ -34,1 +35,2 @@\n-import static jdk.test.lib.Asserts.assertLessThan;\n+import static jdk.test.lib.Asserts.assertLT;\n+import static jdk.test.lib.Asserts.assertLTE;\n@@ -39,2 +41,1 @@\n- * @build SimpleTest\n- * @requires (os.family == \"linux\")\n+ * @build ResetStartTimeTest\n@@ -44,1 +45,1 @@\n-public class SimpleTest implements CracTest {\n+public class ResetStartTimeTest implements CracTest {\n@@ -53,2 +54,1 @@\n-        CracBuilder builder = new CracBuilder();\n-        builder.startCheckpoint().waitForCheckpointed();\n+        CracBuilder builder = new CracBuilder().engine(CracEngine.SIMULATE);\n@@ -58,1 +58,4 @@\n-        builder.captureOutput(true).doRestore().outputAnalyzer().shouldContain(RESTORED_MESSAGE);\n+        var output = builder.captureOutput(true)\n+                .startCheckpoint().waitForSuccess()\n+                .outputAnalyzer();\n+        output.shouldContain(RESTORED_MESSAGE);\n@@ -68,1 +71,0 @@\n-\n@@ -72,2 +74,2 @@\n-            assertLessThan(uptime1, uptime0);\n-            assertLessThan(uptime1, WAIT_TIMEOUT);\n+            assertLT(uptime1, uptime0);\n+            assertLT(uptime1, WAIT_TIMEOUT);\n@@ -75,1 +77,1 @@\n-            assertLessThan(uptime0, uptime1);\n+            assertLTE(uptime0, uptime1);\n","filename":"test\/jdk\/jdk\/crac\/ResetStartTimeTest.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"}]}