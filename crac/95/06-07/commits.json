[{"commit":{"message":"Fix x86 build"},"files":[{"filename":"src\/hotspot\/os\/linux\/crac_linux.cpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac_memory.cpp"}],"sha":"78dfa7cb911a0616daebede397ace4cdae8c3d2d"},{"commit":{"message":"Use number of threads directly"},"files":[{"filename":"src\/hotspot\/os\/linux\/crac_linux.cpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.hpp"}],"sha":"9591cb813c46293344630d2966b7722abbefff65"},{"commit":{"message":"Don't persist CodeCache used for non-nMethods\n\nThe stubs allocated in this heap are used for atomic operations on\naarch64, avoiding them before the memory is restored would be complicated."},"files":[{"filename":"src\/hotspot\/share\/code\/codeCache.cpp"}],"sha":"af38589e11f5f0d6043e55b9c11c69eec7d23607"},{"commit":{"message":"Fix close() on windows"},"files":[{"filename":"src\/hotspot\/share\/runtime\/crac.hpp"}],"sha":"c68e54da7be8c9e28fda6fc57e18ef7301b0e39f"},{"commit":{"message":"Add overrides (OSX build fix)"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"}],"sha":"315876fafaafd0781e407f12208e1ef022380fa8"},{"commit":{"message":"Fix recursiveCheckpoint"},"files":[{"filename":"src\/hotspot\/os\/linux\/crac_linux.cpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac_memory.cpp"},{"filename":"test\/jdk\/jdk\/crac\/recursiveCheckpoint\/Test.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracProcess.java"},{"filename":"test\/lib\/jdk\/test\/lib\/crac\/CracTest.java"}],"sha":"935a58ab67b53c2a9e9e4a2c0ee512e16ee1df33"}]