{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.util.Arrays;\n@@ -71,1 +72,0 @@\n-    private boolean isSeedGenerator = false;\n@@ -207,0 +207,12 @@\n+    private void invalidate() {\n+        if (state != null) {\n+            Arrays.fill(state, (byte)0);\n+        }\n+        state = null;\n+        if (remainder != null) {\n+            Arrays.fill(remainder, (byte)0);\n+        }\n+        remainder = null;\n+        remCount = 0;\n+    }\n+\n@@ -211,13 +223,1 @@\n-            if (state != null) {\n-                for (int i = 0; i < state.length; i++) {\n-                    state[i] = 0;\n-                }\n-            }\n-            state = null;\n-            if (remainder != null) {\n-                for (int i = 0; i < remainder.length; i++) {\n-                    remainder[i] = 0;\n-                }\n-            }\n-            remainder = null;\n-            remCount = 0;\n+            invalidate();\n@@ -229,9 +229,1 @@\n-        try {\n-            if (isSeedGenerator) {\n-                byte[] b = new byte[DIGEST_SIZE];\n-                SeedGenerator.generateSeed(b);\n-                engineSetSeed(b);\n-            }\n-        } finally {\n-            objLock.unlock();\n-        }\n+        objLock.unlock();\n@@ -242,2 +234,0 @@\n-        if (isSeedGenerator)\n-            return -12;\n@@ -253,2 +243,1 @@\n-    private static class SeederHolder {\n-\n+    private static class SeederHolder implements jdk.internal.crac.JDKResource {\n@@ -256,0 +245,1 @@\n+        private ReentrantLock objLock = new ReentrantLock();\n@@ -263,1 +253,0 @@\n-            seeder.isSeedGenerator = true;\n@@ -267,1 +256,23 @@\n-            seeder.clearStateOnCheckpoint = true;\n+            jdk.internal.crac.Core.getJDKContext().register(new SeederHolder());\n+        }\n+\n+        @Override\n+        public void beforeCheckpoint(Context<? extends Resource> context) throws Exception {\n+            objLock.lock();\n+            seeder.invalidate();\n+        }\n+\n+        @Override\n+        public void afterRestore(Context<? extends Resource> context) throws Exception {\n+            try {\n+                byte[] b = new byte[DIGEST_SIZE];\n+                SeedGenerator.generateSeed(b);\n+                seeder.engineSetSeed(b);\n+            } finally {\n+                objLock.unlock();\n+            }\n+        }\n+\n+        @Override\n+        public int getPriority() {\n+            return -12;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SecureRandom.java","additions":40,"deletions":29,"binary":false,"changes":69,"status":"modified"}]}