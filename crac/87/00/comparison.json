{"files":[{"patch":"@@ -252,2 +252,0 @@\n-    private static JDKResource referenceHandlerResource;\n-\n@@ -346,14 +344,0 @@\n-\n-        referenceHandlerResource = new JDKResource() {\n-            @Override\n-            public void beforeCheckpoint(Context<? extends Resource> context) throws Exception {\n-                System.gc();\n-                \/\/ TODO ensure GC done processing all References\n-                while (waitForReferenceProcessing());\n-            }\n-\n-            @Override\n-            public void afterRestore(Context<? extends Resource> context) throws Exception {\n-            }\n-        };\n-        Core.Priority.REFERENCE_HANDLER.getContext().register(referenceHandlerResource);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,1 +41,3 @@\n-    private static final Context<Resource> globalContext = new ContextWrapper(new BlockingOrderedContext<>());\n+    private static final Context<Resource> globalContext = new ContextWrapper(\n+        jdk.crac.impl.GlobalContext.createGlobalContextImpl());\n+\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/Core.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -31,0 +32,1 @@\n+import jdk.internal.crac.JDKResource;\n@@ -33,0 +35,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -72,1 +75,27 @@\n-    private static final Context<Resource> globalContext = new BlockingOrderedContext<>();\n+    private static final Context<Resource> globalContext = GlobalContext.createGlobalContextImpl();\n+\n+    private static class ReferenceHandlerResource implements JDKResource {\n+        @Override\n+        public void beforeCheckpoint(Context<? extends Resource> context) throws Exception {\n+            System.gc();\n+            \/\/ TODO ensure GC done processing all References\n+            while (SharedSecrets.getJavaLangRefAccess().waitForReferenceProcessing());\n+        }\n+\n+        @Override\n+        public void afterRestore(Context<? extends Resource> context) throws Exception {\n+        }\n+\n+        private static ReferenceHandlerResource resource = new ReferenceHandlerResource();\n+\n+        static {\n+            jdk.internal.crac.Core.Priority.REFERENCE_HANDLER.getContext().register(resource);\n+        }\n+\n+        \/**\n+         * Performs one-time registration of the Reference handling resource\n+         *\/\n+        public static void register() {\n+            \/\/ nothing to do: the resource registered in the static initializer\n+        }\n+    }\n@@ -114,0 +143,5 @@\n+        \/\/ Register the resource here late, to avoid early registration\n+        \/\/ during JDK initialization, e.g. if performed during j.l.r.Reference\n+        \/\/ initialization.\n+        ReferenceHandlerResource.register();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,19 @@\n+package jdk.crac.impl;\n+\n+import jdk.crac.Context;\n+import jdk.crac.Resource;\n+import sun.security.action.GetPropertyAction;\n+\n+public class GlobalContext {\n+    private static final String GLOBAL_CONTEXT_IMPL_PROP = \"jdk.crac.globalContext.impl\";\n+    private static final String GLOBAL_CONTEXT_IMPL_NAME =\n+        GetPropertyAction.privilegedGetProperty(GLOBAL_CONTEXT_IMPL_PROP, \"\");\n+\n+    public static Context<Resource> createGlobalContextImpl() {\n+        return switch (GLOBAL_CONTEXT_IMPL_NAME) {\n+            case \"BlockingOrderedContext\" -> new BlockingOrderedContext<>();\n+            case \"OrderedContext\" -> new OrderedContext<>();\n+            default -> new OrderedContext<>(); \/\/ cannot report as System.out\/err are not initialized yet\n+        };\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/GlobalContext.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"added"}]}