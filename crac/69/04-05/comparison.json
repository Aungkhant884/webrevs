{"files":[{"patch":"@@ -33,1 +33,0 @@\n-import jdk.internal.crac.Core;\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileOutputStream.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -68,1 +68,0 @@\n-            LoggerContainer.warn(\"DEBUG: FD {0} = {1} -> {2} {3} => {4}\", originalFd, System.identityHashCode(fd), local, remote, policy);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKSocketResource.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,10 +59,0 @@\n-    static {\n-        \/\/ It is possible that CRaC would print first logging message after\n-        \/\/ JDKContext completes. Registering a CallSite as resource at this\n-        \/\/ point would hang the checkpoint, therefore we perform all the\n-        \/\/ initialization eagerly.\n-        new SimpleConsoleLogger(null, false).getCallerInfo();\n-        String.format(\"%tc\",ZonedDateTime.now());\n-        MessageFormat.format(\"{0} {1}\", 0, \"1\");\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/logger\/SimpleConsoleLogger.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -81,30 +81,0 @@\n-JNIEXPORT jstring JNICALL\n-Java_java_io_FileDescriptor_getPath(JNIEnv *env, jobject obj) {\n-    return NULL;\n-}\n-\n-JNIEXPORT jstring JNICALL\n-Java_java_io_FileDescriptor_getType(JNIEnv *env, jobject obj) {\n-    return NULL;\n-}\n-\n-JNIEXPORT jlong JNICALL\n-Java_java_io_FileDescriptor_getOffset(JNIEnv *env, jobject obj) {\n-    return -1;\n-}\n-\n-JNIEXPORT jint JNICALL\n-Java_java_io_FileDescriptor_getFlags(JNIEnv *env, jobject obj) {\n-    return -1;\n-}\n-\n-JNIEXPORT jboolean JNICALL\n-Java_java_io_FileDescriptor_reopen(JNIEnv *env, jobject obj, jint fd, jstring path, jint flags, jlong offset) {\n-    return JNI_FALSE;\n-}\n-\n-JNIEXPORT jboolean JNICALL\n-Java_java_io_FileDescriptor_reopenNull(JNIEnv *env, jobject obj, jint fd) {\n-    return JNI_FALSE;\n-}\n-\n","filename":"src\/java.base\/windows\/native\/libjava\/FileDescriptor_md.c","additions":0,"deletions":30,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        new CracBuilder().javaOption(\"jdk.crac.collect-fd-stacktraces\", \"true\").doCheckpointAndRestore();\n+        new CracBuilder().doCheckpointAndRestore();\n","filename":"test\/jdk\/jdk\/crac\/Selector\/keyAfterRestore\/Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-        builder.javaOption(\"jdk.crac.collect-fd-stacktraces\", \"true\");\n","filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/CheckpointWithOpenFdsTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}