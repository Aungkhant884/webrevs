{"files":[{"patch":"@@ -106,1 +106,1 @@\n-ifeq ($(call isTargetOs, macosx linux), true)\n+ifeq ($(call isTargetOs, macosx linux windows), true)\n@@ -109,1 +109,1 @@\n-      SRC := $(TOPDIR)\/src\/$(MODULE)\/unix\/native\/pauseengine, \\\n+      SRC := $(TOPDIR)\/src\/$(MODULE)\/share\/native\/pauseengine, \\\n@@ -114,1 +114,4 @@\n-      OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_libs\/$(MODULE), \\\n+      $(if $(call isTargetOs, windows), \\\n+        OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$(MODULE), \\\n+        OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_libs\/$(MODULE), \\\n+      ) \\\n@@ -120,1 +123,1 @@\n-      SRC := $(TOPDIR)\/src\/$(MODULE)\/unix\/native\/simengine, \\\n+      SRC := $(TOPDIR)\/src\/$(MODULE)\/share\/native\/simengine, \\\n@@ -125,1 +128,4 @@\n-      OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_libs\/$(MODULE), \\\n+      $(if $(call isTargetOs, windows), \\\n+        OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$(MODULE), \\\n+        OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_libs\/$(MODULE), \\\n+      ) \\\n@@ -131,27 +137,0 @@\n-ifeq ($(OPENJDK_TARGET_OS), windows)\n-  $(eval $(call SetupJdkExecutable, BUILD_PAUSEENGINE, \\\n-      NAME := pauseengine, \\\n-      SRC := $(TOPDIR)\/src\/$(MODULE)\/windows\/native\/pauseengine, \\\n-      INCLUDE_FILES := pauseengine.c, \\\n-      OPTIMIZATION := LOW, \\\n-      CFLAGS := $(CFLAGS_JDKEXE), \\\n-      LDFLAGS := $(LDFLAGS_JDKEXE), \\\n-      OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$(MODULE), \\\n-  ))\n-  TARGETS += $(BUILD_PAUSEENGINE)\n-\n-  $(eval $(call SetupJdkExecutable, BUILD_SIMENGINE, \\\n-      NAME := simengine, \\\n-      SRC := $(TOPDIR)\/src\/$(MODULE)\/windows\/native\/simengine, \\\n-      INCLUDE_FILES := simengine.c, \\\n-      OPTIMIZATION := LOW, \\\n-      CFLAGS := $(CFLAGS_JDKEXE), \\\n-      LDFLAGS := $(LDFLAGS_JDKEXE), \\\n-      LIBS := advapi32.lib version.lib user32.lib, \\\n-      OUTPUT_DIR := $(SUPPORT_OUTPUTDIR)\/modules_cmds\/$(MODULE), \\\n-  ))\n-\n-  TARGETS += $(BUILD_SIMENGINE)\n-\n-endif\n-\n","filename":"make\/modules\/java.base\/Launcher.gmk","additions":11,"deletions":32,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-#include \"runtime\/crac.hpp\"\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1058,1 +1058,6 @@\n-      LINUX_ONLY(if (LinuxAttachListener::get_current_op() && LinuxAttachListener::get_current_op()->is_effectively_completed()) { stream = tty; })\n+#ifdef LINUX\n+      assert(LinuxAttachListener::get_current_op(), \"should exist\");\n+      if (LinuxAttachListener::get_current_op()->is_effectively_completed()) {\n+        stream = tty;\n+      }\n+#endif \/\/LINUX\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include <unistd.h>\n@@ -33,0 +32,2 @@\n+#ifdef LINUX\n+#include <unistd.h>\n@@ -34,0 +35,3 @@\n+#else\n+typedef int pid_t;\n+#endif \/\/LINUX\n@@ -50,2 +54,2 @@\n-    char *pidpath;\n-    if (-1 == asprintf(&pidpath, \"%s\/pid\", imagedir)) {\n+    char pidpath[1024];\n+    if (0 > snprintf(pidpath, sizeof(pidpath), \"%s\/pid\", imagedir)) {\n@@ -56,0 +60,1 @@\n+#ifdef LINUX\n@@ -57,0 +62,3 @@\n+#else\n+        pid_t jvm = -1;\n+#endif \/\/LINUX\n","filename":"src\/java.base\/share\/native\/pauseengine\/pauseengine.c","additions":11,"deletions":3,"binary":false,"changes":14,"previous_filename":"src\/java.base\/unix\/native\/pauseengine\/pauseengine.c","status":"renamed"},{"patch":"@@ -30,1 +30,0 @@\n-#include <unistd.h>\n@@ -33,0 +32,2 @@\n+#ifdef LINUX\n+#include <unistd.h>\n@@ -34,0 +35,3 @@\n+#else\n+typedef int pid_t;\n+#endif \/\/LINUX\n@@ -52,0 +56,1 @@\n+#ifdef LINUX\n@@ -53,0 +58,3 @@\n+#else\n+        pid_t jvm = -1;\n+#endif \/\/LINUX\n","filename":"src\/java.base\/share\/native\/simengine\/simengine.c","additions":9,"deletions":1,"binary":false,"changes":10,"previous_filename":"src\/java.base\/unix\/native\/simengine\/simengine.c","status":"renamed"},{"patch":"@@ -1,88 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Azul Systems, Inc. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <string.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\/\/ #include <unistd.h>\n-#include <signal.h>\n-#include <windows.h>\n-\n-typedef int pid_t;\n-\n-static int kickjvm(pid_t jvm, int code) {\n-    return 0;\n-}\n-\n-int main(int argc, char *argv[]) {\n-    char* action = argv[1];\n-    char* imagedir = argv[2];\n-\n-    char pidpath[MAX_PATH];\n-    if (-1 == sprintf(pidpath, \"%s\/pid\", imagedir)) {\n-        return 1;\n-    }\n-\n-    if (!strcmp(action, \"checkpoint\")) {\n-        pid_t jvm = -1; \/\/getppid();\n-\n-        FILE *pidfile = fopen(pidpath, \"w\");\n-        if (!pidfile) {\n-            perror(\"fopen pidfile\");\n-            kickjvm(jvm, -1);\n-            return 1;\n-        }\n-\n-        fprintf(pidfile, \"%d\\n\", jvm);\n-        fclose(pidfile);\n-\n-    } else if (!strcmp(action, \"restore\")) {\n-        FILE *pidfile = fopen(pidpath, \"r\");\n-        if (!pidfile) {\n-            perror(\"fopen pidfile\");\n-            return 1;\n-        }\n-\n-        pid_t jvm;\n-        if (1 != fscanf(pidfile, \"%d\", &jvm)) {\n-            fclose(pidfile);\n-            fprintf(stderr, \"cannot read pid\\n\");\n-            return 1;\n-        }\n-        fclose(pidfile);\n-\n-        char *strid = getenv(\"CRAC_NEW_ARGS_ID\");\n-        if (kickjvm(jvm, strid ? atoi(strid) : 0)) {\n-            return 1;\n-        }\n-\n-    } else {\n-        fprintf(stderr, \"unknown action: %s\\n\", action);\n-        return 1;\n-    }\n-\n-    return 0;\n-}\n","filename":"src\/java.base\/windows\/native\/pauseengine\/pauseengine.c","additions":0,"deletions":88,"binary":false,"changes":88,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Azul Systems, Inc. All rights reserved.\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <string.h>\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n-static int kickjvm(int jvm, int code) {\n-    return 0;\n-}\n-\n-int main(int argc, char *argv[]) {\n-    char* action = argv[1];\n-\n-    if (!strcmp(action, \"checkpoint\")) {\n-        const char* argsidstr = getenv(\"SIM_CRAC_NEW_ARGS_ID\");\n-        int argsid = argsidstr ? atoi(argsidstr) : 0;\n-        int jvm = -1;\/\/getppid();\n-        kickjvm(jvm, argsid);\n-    } else if (!strcmp(action, \"restore\")) {\n-        char *strid = getenv(\"CRAC_NEW_ARGS_ID\");\n-        printf(\"SIM_CRAC_NEW_ARGS_ID=%s\\n\", strid ? strid : \"0\");\n-    } else {\n-        fprintf(stderr, \"unknown action: %s\\n\", action);\n-        return 1;\n-    }\n-\n-    return 0;\n-}\n","filename":"src\/java.base\/windows\/native\/simengine\/simengine.c","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"}]}