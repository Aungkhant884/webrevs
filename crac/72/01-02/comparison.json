{"files":[{"patch":"@@ -29,1 +29,2 @@\n-import java.net.ServerSocket;\n+import java.io.File;\n+import java.io.IOException;\n@@ -31,0 +32,1 @@\n+import java.util.Objects;\n@@ -43,1 +45,7 @@\n-        builder.doCheckpointAndRestore();\n+        builder.doCheckpoint();\n+        Path checkPath = Paths.get(System.getProperty(\"user.dir\"), \"workdir\");\n+        for (File f : Objects.requireNonNull(checkPath.toFile().listFiles())) {\n+            f.delete();\n+        }\n+        Files.delete(checkPath);\n+        builder.doRestore();\n@@ -49,0 +57,7 @@\n+        Path directory;\n+        WatchKey key;\n+\n+        directory = Paths.get(System.getProperty(\"user.dir\"), \"workdir\");\n+        directory.toFile().mkdir();\n+        Files.createTempFile(directory, \"temp\", \".txt\");\n+        Asserts.assertTrue(isMatchFound(watchService, directory));\n@@ -52,3 +67,9 @@\n-        Path directory = Paths.get(System.getProperty(\"user.dir\"));\n-        WatchKey key = directory.register(watchService, StandardWatchEventKinds.ENTRY_CREATE);\n-        Path tempFilePath = Files.createTempFile(directory, \"temp\", \".txt\");\n+        directory = Paths.get(System.getProperty(\"user.dir\"), \"workdir\");\n+        \/\/ fix monitor dir after restore\n+        if (!directory.toFile().exists()) {\n+            directory = Paths.get(\"\/tmp\");\n+        }\n+\n+        Asserts.assertTrue(isMatchFound(watchService, directory));\n+        watchService.close();\n+    }\n@@ -56,2 +77,6 @@\n-        \/\/ other file events might happen, so iterate all to make test stable\n-        boolean matchFound = false;\n+    private boolean isMatchFound(WatchService watchService, Path directory) throws IOException, InterruptedException {\n+        WatchKey key;\n+        boolean matchFound;\n+        WatchKey watchKey = directory.register(watchService, StandardWatchEventKinds.ENTRY_CREATE);\n+        Files.createTempFile(directory, \"temp\", \".txt\");\n+        matchFound = false;\n@@ -76,3 +101,2 @@\n-\n-        Asserts.assertTrue(matchFound);\n-        watchService.close();\n+        watchKey.cancel();\n+        return matchFound;\n","filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/FileWatcherAfterRestoreTest.java","additions":34,"deletions":10,"binary":false,"changes":44,"status":"modified"}]}