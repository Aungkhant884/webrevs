{"files":[{"patch":"@@ -36,5 +36,2 @@\n- * All notifications before checkpoint and after restore are performed in a\n- * single thread, therefore the resource does not have to guard against\n- * concurrent invocations of these methods. However, other threads might be\n- * running during these notifications, therefore it is up to the implementation\n- * to protect against concurrent access.\n+ * Note that other application threads might be running during these notifications,\n+ * therefore it is up to the implementation to protect against concurrent access.\n","filename":"src\/java.base\/share\/classes\/javax\/crac\/Resource.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -36,5 +36,2 @@\n- * All notifications before checkpoint and after restore are performed in a\n- * single thread, therefore the resource does not have to guard against\n- * concurrent invocations of these methods. However, other threads might be\n- * running during these notifications, therefore it is up to the implementation\n- * to protect against concurrent access.\n+ * Note that other application threads might be running during these notifications,\n+ * therefore it is up to the implementation to protect against concurrent access.\n","filename":"src\/java.base\/share\/classes\/jdk\/crac\/Resource.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}