[{"commit":{"message":"Fix docs & package"},"files":[{"filename":"src\/java.base\/share\/classes\/javax\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/javax\/crac\/Resource.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Core.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Resource.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/AbstractContextImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/LoggerContainer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"}],"sha":"fb7d4ea727cceaf955ed1b0a10a481128c75e301"},{"commit":{"message":"Fix ordering of invocation on Resources\n\n* When Context.beforeCheckpoint throws, invoke Context.afterRestore\n  anyway (otherwise some resources stay in suspended state).\n* Handle Resource.beforeCheckpoint triggering a registration of another\n  resource\n** Do not cause deadlock when registering from another thread\n** Global resource can register JDKResource\n** JDKResource can register resource with higher priority\n** Other registrations are prohibited"},"files":[{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/Resource.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/AbstractContextImpl.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/crac\/impl\/OrderedContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/LoggerContainer.java"},{"filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/PersistentJarFile.java"},{"filename":"test\/jdk\/jdk\/crac\/ContextOrderTest.java"},{"filename":"test\/jdk\/jdk\/crac\/ResourceTest.java"}],"sha":"e801310e8b5918d195b64ca4ec1448122f773428"}]