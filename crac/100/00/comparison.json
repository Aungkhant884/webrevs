{"files":[{"patch":"@@ -225,1 +225,1 @@\n-  product(ccstr, CPUFeatures, NULL, \"CPU feature set, \"                     \\\n+  product(ccstr, CPUFeatures, NULL, RESTORE_SETTABLE, \"CPU feature set, \"   \\\n@@ -229,0 +229,1 @@\n+      \"-XX:CPUFeatures=ignore will disable the CPU features check; \"        \\\n","filename":"src\/hotspot\/cpu\/x86\/globals_x86.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1213,0 +1213,8 @@\n+bool VM_Version::nonlibc_str_equals(const char *a, const char *b) {\n+  while (*a && *b) {\n+    if (*a++ != *b++)\n+      return false;\n+  }\n+  return !*a && !*b;\n+}\n+\n@@ -2513,0 +2521,3 @@\n+  static const char line2[] = \"If you are sure it will not crash you can override this check by -XX:CPUFeatures=ignore .\";\n+  tty->print_raw(line2, sizeof(line2) - 1);\n+  tty->cr();\n@@ -2517,1 +2528,1 @@\n-  assert(CRaCCheckpointTo != NULL, \"\");\n+  assert(CRaCRestoreFrom != NULL, \"\");\n@@ -2547,1 +2558,16 @@\n-  if (features_missing || glibc_features_missing) {\n+  if (CPUFeatures) {\n+    if (nonlibc_str_equals(CPUFeatures, \"ignore\")) {\n+      ignore_glibc_not_using = true;\n+    } else {\n+      static const char part1[] = \"Unsupported -XX:CPUFeatures=\";\n+      tty->print_raw(part1, sizeof(part1) - 1);\n+      for (const char *s = CPUFeatures; *s; ++s)\n+        tty->put(*s);\n+      static const char part2[] = \", only -XX:CPUFeatures=ignore is supported during -XX:CRaCRestoreFrom\";\n+      tty->print_raw(part2, sizeof(part2) - 1);\n+      tty->cr();\n+      vm_exit_during_initialization();\n+    }\n+  }\n+\n+  if (!ignore_glibc_not_using && (features_missing || glibc_features_missing)) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -789,0 +789,1 @@\n+  static bool nonlibc_str_equals(const char *a, const char *b);\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -338,2 +338,0 @@\n-  VM_Version::crac_restore();\n-\n@@ -346,0 +344,4 @@\n+\n+  \/\/ VM_Crac::read_shm needs to be already called to read RESTORE_SETTABLE parameters.\n+  VM_Version::crac_restore();\n+\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}