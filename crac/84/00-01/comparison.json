{"files":[{"patch":"@@ -1,39 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#ifndef OS_LINUX_CRAC_LINUX_HPP\n-#define OS_LINUX_CRAC_LINUX_HPP\n-\n-class Linux {\n-public:\n-  static void vm_create_start();\n-  static bool prepare_checkpoint();\n-  static Handle checkpoint(jarray fd_arr, jobjectArray obj_arr, bool dry_run, jlong jcmd_stream, TRAPS);\n-  static void restore();\n-  static void close_extra_descriptors();\n-\n-  static jlong restore_start_time();\n-  static jlong uptime_since_restore();\n-};\n-\n-#endif \/\/OS_LINUX_CRAC_LINUX_HPP\n","filename":"src\/hotspot\/os\/linux\/crac_linux.hpp","additions":0,"deletions":39,"binary":false,"changes":39,"status":"deleted"},{"patch":"@@ -3853,1 +3853,1 @@\n-  Handle ret = crac::Linux::checkpoint(fd_arr, obj_arr, dry_run, jcmd_stream, CHECK_NULL);\n+  Handle ret = crac::checkpoint(fd_arr, obj_arr, dry_run, jcmd_stream, CHECK_NULL);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3235,1 +3235,1 @@\n-  if (CRaCCheckpointTo && !crac::Linux::prepare_checkpoint()) {\n+  if (CRaCCheckpointTo && !crac::prepare_checkpoint()) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-jlong crac::Linux::restore_start_time() {\n+jlong crac::restore_start_time() {\n@@ -308,1 +308,1 @@\n-jlong crac::Linux::uptime_since_restore() {\n+jlong crac::uptime_since_restore() {\n@@ -334,1 +334,1 @@\n-void crac::Linux::vm_create_start() {\n+void crac::vm_create_start() {\n@@ -798,1 +798,1 @@\n-bool crac::Linux::prepare_checkpoint() {\n+bool crac::prepare_checkpoint() {\n@@ -839,1 +839,1 @@\n-Handle crac::Linux::checkpoint(jarray fd_arr, jobjectArray obj_arr, bool dry_run, jlong jcmd_stream, TRAPS) {\n+Handle crac::checkpoint(jarray fd_arr, jobjectArray obj_arr, bool dry_run, jlong jcmd_stream, TRAPS) {\n@@ -891,1 +891,1 @@\n-void crac::Linux::restore() {\n+void crac::restore() {\n@@ -965,1 +965,1 @@\n-void crac::Linux::close_extra_descriptors() {\n+void crac::close_extra_descriptors() {\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/hotspot\/os\/linux\/crac_linux.cpp","status":"renamed"},{"patch":"@@ -33,1 +33,8 @@\n-#include OS_HEADER(crac)\n+  static void vm_create_start();\n+  static bool prepare_checkpoint();\n+  static Handle checkpoint(jarray fd_arr, jobjectArray obj_arr, bool dry_run, jlong jcmd_stream, TRAPS);\n+  static void restore();\n+  static void close_extra_descriptors();\n+\n+  static jlong restore_start_time();\n+  static jlong uptime_since_restore();\n","filename":"src\/hotspot\/share\/runtime\/crac.hpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2712,1 +2712,1 @@\n-    crac::Linux::restore();\n+    crac::restore();\n@@ -2788,1 +2788,1 @@\n-  crac::Linux::vm_create_start();\n+  crac::vm_create_start();\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -957,1 +957,1 @@\n-    return crac::Linux::restore_start_time();\n+    return crac::restore_start_time();\n@@ -961,1 +961,1 @@\n-      jlong ticks = crac::Linux::uptime_since_restore();\n+      jlong ticks = crac::uptime_since_restore();\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}