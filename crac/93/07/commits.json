[{"commit":{"message":"Merge branch 'crac' into crac-g1gcwait"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"}],"sha":"abe1b467a13d2dbb8da4ed7ff87a9b642c40e6ee"},{"commit":{"message":"Merge branch 'crac' into crac-g1gcwait"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"}],"sha":"93d1e92cf4cd0ffae842ee609fd63ec027859e55"},{"commit":{"message":"Do not use synchronization, directly unmap it."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"}],"sha":"355d822486cb3ee940ee738ef9446f92bc42b741"},{"commit":{"message":"Merge branch 'crac' into crac-g1gcwait"},"files":[],"sha":"3ff9646d369df7015b64fcd6520154fe72fbd1aa"},{"commit":{"message":"Make -active volatile.\n - bugreported by Sergey Nazarkin"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"}],"sha":"2eb4a7ee2484f13f28cfab3b7fd7af8ffc39ffa3"},{"commit":{"message":"Remove accidental change of UncommitInitialDelayMs.\n - bugreported by Radim Vansa"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"}],"sha":"d53a47ed29b26c1cbd4198883c08ebe55c62d794"},{"commit":{"message":"Add an assertion at least for !is_ConcurrentGC_thread()."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"}],"sha":"142a708465257479ceff6cbe13c56c2f79113b34"},{"commit":{"message":"Remove calling thread state assertions for wait_for_collection_finish()."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"}],"sha":"3858abdbb13e46f1da64971be6ad0378d7ad642a"},{"commit":{"message":"Add a generic virtual method wait_for_collection_finish().\n - based on a review by Radim Vansa.\nAssert calling thread state for wait_for_collection_finish().\n - based on a review by Radim Vansa."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"}],"sha":"87972132b2480821583e0a92fde6c80f75136ce6"},{"commit":{"message":"Wait until G1 GC has finished before creating a snapshot."},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp"},{"filename":"src\/hotspot\/share\/runtime\/crac.cpp"}],"sha":"874f7a1ce7949ed0d0c9ecc65d6745eb67f48bd0"}]