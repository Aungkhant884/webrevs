{"files":[{"patch":"@@ -48,0 +48,1 @@\n+#include \"gc\/g1\/g1UncommitRegionTask.hpp\"\n@@ -1148,0 +1149,4 @@\n+  virtual void wait_for_collection_finish() {\n+    G1UncommitRegionTask::wait_if_active();\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/thread.inline.hpp\"\n@@ -139,0 +140,7 @@\n+  \/\/ Not valid: assert_at_safepoint();\n+  assert(Thread::current_or_null() != NULL, \"no current thread\");\n+  \/\/ Not valid: assert(Thread::current()->is_VM_thread(), \"\");\n+  assert(Thread::current()->is_active_Java_thread(), \"unexpected thread type\");\n+  assert(strcmp(Thread::current()->name(), \"main\") == 0, \"unexpected thread\");\n+  assert(Thread::current()->as_Java_thread()->thread_state() == _thread_in_vm, \"unexpected thread state\");\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"runtime\/semaphore.hpp\"\n@@ -38,1 +39,1 @@\n-  static const uint UncommitInitialDelayMs = 100;\n+  static const uint UncommitInitialDelayMs = 10*1000; \/\/ FIXME: for reproducibility: 10*1000\n","filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -368,0 +368,3 @@\n+  \/\/ G1UncommitRegionTask may be still pending after collect() has returned.\n+  virtual void wait_for_collection_finish() {}\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"gc\/g1\/g1UncommitRegionTask.hpp\"\n@@ -409,1 +408,1 @@\n-  G1UncommitRegionTask::wait_if_active();\n+  Universe::heap()->wait_for_collection_finish();\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}