{"files":[{"patch":"@@ -787,3 +787,2 @@\n-     * @crac While the API note above discourages from changing system properties during\n-     * runtime it is actually quite common after restore from a checkpoint. The application\n-     * can {@link javax.crac.Context#register(javax.crac.Resource) register}\n+     * @crac System properties can be updated on restore from a checkpoint.\n+     * The application can {@link javax.crac.Context#register(javax.crac.Resource) register}\n@@ -908,2 +907,1 @@\n-     * @crac While the API note above discourages from changing system properties during\n-     * runtime it is actually quite common after restore from a checkpoint.\n+     * @crac System properties can be updated on restore from a checkpoint.\n@@ -948,2 +946,1 @@\n-     * @crac While traditionally it is discouraged to change system properties during\n-     * runtime it is actually quite common after restore from a checkpoint.\n+     * @crac System properties can be updated on restore from a checkpoint.\n@@ -1106,3 +1103,2 @@\n-     * @crac While environment variables are typically constant through\n-     * the lifetime of a process these can change after restore from\n-     * a checkpoint. The application can {@link javax.crac.Context#register(javax.crac.Resource) register}\n+     * @crac Environment variables can be updated on restore from a checkpoint.\n+     * The application can {@link javax.crac.Context#register(javax.crac.Resource) register}\n@@ -1166,3 +1162,2 @@\n-     * @crac While environment variables are typically constant through\n-     * the lifetime of a process these can change after restore from\n-     * a checkpoint. The application can {@link javax.crac.Context#register(javax.crac.Resource) register}\n+     * @crac Environment variables can be updated on restore from a checkpoint.\n+     * The application can {@link javax.crac.Context#register(javax.crac.Resource) register}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -37,3 +37,0 @@\n- * @crac The socket is automatically closed before checkpoint and reopened\n- * after restore; there is no handling needed from the application side.\n- *\n","filename":"src\/java.base\/unix\/classes\/java\/net\/PlainSocketImpl.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}