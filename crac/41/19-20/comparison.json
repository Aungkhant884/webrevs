{"files":[{"patch":"@@ -49,1 +49,2 @@\n-    serialgc services shenandoahgc static-build vm-structs zero zgc cpu_feature_active \\\n+    serialgc services shenandoahgc static-build vm-structs zero zgc \\\n+    cpu_feature_active ld_so_list_diagnostics \\\n@@ -405,0 +406,114 @@\n+###############################################################################\n+# Check if glibc ld.so --list-diagnostics is available on this platform.\n+#\n+AC_DEFUN_ONCE([JVM_FEATURES_CHECK_LD_SO_LIST_DIAGNOSTICS],\n+[\n+  JVM_FEATURES_CHECK_AVAILABILITY(ld_so_list_diagnostics, [\n+    AC_MSG_CHECKING([if glibc ld.so --list-diagnostics is supported])\n+    AC_RUN_IFELSE(\n+      [AC_LANG_SOURCE([[\n+#define _GNU_SOURCE 1\n+#include <link.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <stddef.h>\n+#include <string.h>\n+#include <limits.h>\n+static int ld_so_name_iterate_phdr(struct dl_phdr_info *info, size_t size, void *data_voidp) {\n+  const char **retval_return = (const char **)data_voidp;\n+  if (size < offsetof(struct dl_phdr_info, dlpi_adds)) {\n+    fputs(\"missing PHDRs\\n\", stderr);\n+    exit(1);\n+  }\n+  if (strcmp(info->dlpi_name, \"\") != 0) {\n+    fprintf(stderr, \"Unexpected name of first dl_phdr_info: %s\\n\", info->dlpi_name);\n+    exit(1);\n+  }\n+  for (size_t phdr_ix = 0; phdr_ix < info->dlpi_phnum; ++phdr_ix) {\n+    const Elf64_Phdr *phdr = info->dlpi_phdr + phdr_ix;\n+    if (phdr->p_type == PT_INTERP) {\n+      *retval_return = (const char *)(phdr->p_vaddr + info->dlpi_addr);\n+      return 42;\n+    }\n+  }\n+  exit(1);\n+}\n+static const char *ld_so_name() {\n+  const char *retval;\n+  int err = dl_iterate_phdr(ld_so_name_iterate_phdr, &retval);\n+  if (err != 42)\n+    exit(1);\n+  return retval;\n+}\n+int main(void) {\n+  char cmd[PATH_MAX + 100];\n+  int got = snprintf(cmd, sizeof(cmd), \"%s --list-diagnostics\", ld_so_name());\n+  if (got < 0) {\n+    fprintf(stderr, \"snprintf error: %m\\n\");\n+  }\n+  if ((unsigned) got == sizeof(cmd)) {\n+    fputs(\"internal error - buffer overflow\\n\", stderr);\n+    exit(1);\n+  }\n+  FILE *f = popen(cmd, \"r\");\n+  if (!f) {\n+    fprintf(stderr, \"popen('%s'): %m\\n\", cmd);\n+    exit(1);\n+  }\n+  char line[LINE_MAX];\n+  int found = 0;\n+  const char prefix[] = \"x86.cpu_features.features\";\n+  for (;;) {\n+    char *s = fgets(line, sizeof(line), f);\n+    if (!s) break;\n+    if (s != line) {\n+      fprintf(stderr, \"fgets(popen('%s')) did not return buffer address\\n\", cmd);\n+      exit(1);\n+    }\n+    if (strstr(line, prefix))\n+      found = 1;\n+  }\n+  if (ferror(f)) {\n+    fprintf(stderr, \"ferror(popen('%s'))\\n\", cmd);\n+    exit(1);\n+  }\n+  if (!feof(f)) {\n+    fprintf(stderr, \"!feof(popen('%s'))\\n\", cmd);\n+    exit(1);\n+  }\n+  int wstatus = pclose(f);\n+  if (wstatus == -1) {\n+    fprintf(stderr, \"pclose('%s'): %m\\n\", cmd);\n+    exit(1);\n+  }\n+  if (!WIFEXITED(wstatus)) {\n+    fprintf(stderr, \"Child command '%s' did not properly exit (WIFEXITED): wstatus = %d\\n\", cmd, wstatus);\n+    exit(1);\n+  }\n+  if (WEXITSTATUS(wstatus) != 0) {\n+    fprintf(stderr, \"Child command '%s' did exit with an error: exit code = %d\\n\", cmd, WEXITSTATUS(wstatus));\n+    exit(1);\n+  }\n+  if (!found) {\n+    fprintf(stderr, \"Not found in '%s' output: %s\\n\", cmd, prefix);\n+    exit(1);\n+  }\n+  return 0;\n+}\n+\t]])\n+      ],\n+      [\n+        AC_MSG_RESULT([yes])\n+      ],\n+      [\n+        AC_MSG_RESULT([no])\n+        AVAILABLE=false\n+      ],\n+      [\n+        AC_MSG_RESULT([assumed no - cross compiling])\n+        AVAILABLE=false\n+      ]\n+    )\n+  ])\n+])\n+\n@@ -423,0 +538,1 @@\n+  JVM_FEATURES_CHECK_LD_SO_LIST_DIAGNOSTICS\n","filename":"make\/autoconf\/jvm-features.m4","additions":117,"deletions":1,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -160,0 +160,3 @@\n+ifneq ($(call check-jvm-feature, ld_so_list_diagnostics), true)\n+  JVM_CFLAGS_FEATURES += -DINCLUDE_LD_SO_LIST_DIAGNOSTICS=0\n+endif\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-#include <sys\/wait.h>\n-#include <link.h>\n@@ -45,0 +43,4 @@\n+#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+# include <link.h>\n+# include <sys\/wait.h>\n+#endif\n@@ -670,1 +672,1 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE\n+#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -675,1 +677,5 @@\n-  assert(strcmp(info->dlpi_name, \"\") == 0, \"Unexpected name of first dl_phdr_info\");\n+  if (strcmp(info->dlpi_name, \"\") != 0) {\n+    char errbuf[512];\n+    jio_snprintf(errbuf, sizeof(errbuf), \"Unexpected name of first dl_phdr_info: %s\", info->dlpi_name);\n+    vm_exit_during_initialization(errbuf);\n+  }\n@@ -766,1 +772,1 @@\n-#endif \/\/ !INCLUDE_CPU_FEATURE_ACTIVE\n+#endif \/\/ !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -769,0 +775,3 @@\n+#define TUNABLES_NAME \"GLIBC_TUNABLES\"\n+#if INCLUDE_CPU_FEATURE_ACTIVE || INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\n@@ -774,1 +783,1 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE\n+#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -841,1 +850,1 @@\n-#endif \/\/ !INCLUDE_CPU_FEATURE_ACTIVE\n+#endif \/\/ INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -936,1 +945,2 @@\n-#else\n+#endif\n+#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -1101,1 +1111,0 @@\n-#define TUNABLES_NAME \"GLIBC_TUNABLES\"\n@@ -1144,1 +1153,0 @@\n-#undef TUNABLES_NAME\n@@ -1206,0 +1214,7 @@\n+\n+#else \/\/ !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+  if (ShowCPUFeatures) {\n+    tty->print_cr(\"-XX:CPUFeatures glibc setting \" TUNABLES_NAME \" is not supported in this Java build\");\n+  }\n+#endif \/\/ !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#undef TUNABLES_NAME\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":25,"deletions":10,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -246,0 +246,9 @@\n+#ifndef INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#define INCLUDE_LD_SO_LIST_DIAGNOSTICS 1\n+#endif \/\/ INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\n+#if INCLUDE_CPU_FEATURE_ACTIVE && INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#undef  INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#define INCLUDE_LD_SO_LIST_DIAGNOSTICS 0\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/macros.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}