{"files":[{"patch":"@@ -627,2 +627,1 @@\n-uint64_t VM_Version::CPUFeatures_parse(const char *ccstr, uint64_t &glibc_features) {\n-  assert(ccstr, \"CPUFeatures_parse NULL\");\n+uint64_t VM_Version::CPUFeatures_parse(uint64_t &glibc_features) {\n@@ -630,1 +629,1 @@\n-  if (strcmp(ccstr, \"native\") == 0) {\n+  if (CPUFeatures == NULL || strcmp(CPUFeatures, \"native\") == 0) {\n@@ -633,1 +632,1 @@\n-  if (strcmp(ccstr, \"ignore\") == 0) {\n+  if (strcmp(CPUFeatures, \"ignore\") == 0) {\n@@ -638,1 +637,1 @@\n-  if (strcmp(ccstr, \"generic\") == 0) {\n+  if (strcmp(CPUFeatures, \"generic\") == 0) {\n@@ -659,1 +658,1 @@\n-  unsigned long long ull = strtoull(ccstr, &endptr, 0);\n+  unsigned long long ull = strtoull(CPUFeatures, &endptr, 0);\n@@ -671,1 +670,1 @@\n-              \"VM option 'CPUFeatures=%s' must be of the form: 0xnum,0xnum\", ccstr);\n+              \"VM option 'CPUFeatures=%s' must be of the form: 0xnum,0xnum\", CPUFeatures);\n@@ -677,0 +676,50 @@\n+void VM_Version::CPUFeatures_init() {\n+  uint64_t       features_expected =   CPU_MAX - 1;\n+  uint64_t glibc_features_expected = GLIBC_MAX - 1;\n+#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+        features_expected =       _features;\n+  glibc_features_expected = _glibc_features;\n+#endif\n+  assert(!CPUFeatures == FLAG_IS_DEFAULT(CPUFeatures), \"CPUFeatures parsing\");\n+  uint64_t GLIBCFeatures_x64;\n+  uint64_t   CPUFeatures_x64 = CPUFeatures_parse(GLIBCFeatures_x64);\n+  uint64_t       features_missing =   CPUFeatures_x64 & ~      _features;\n+  uint64_t glibc_features_missing = GLIBCFeatures_x64 & ~_glibc_features;\n+  if (features_missing || glibc_features_missing) {\n+    char buf[512];\n+    int res = jio_snprintf(\n+\t\tbuf, sizeof(buf),\n+\t\t\"Specified -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X\n+\t\t\"; this machine's CPU features are 0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X\n+\t\t\"; missing features of this CPU are 0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X \" \",\n+\t\tCPUFeatures_x64, GLIBCFeatures_x64,\n+\t\t_features, _glibc_features,\n+\t\tfeatures_missing, glibc_features_missing);\n+    assert(res > 0, \"not enough temporary space allocated\");\n+    \/\/ insert_features_names() does crash for undefined too high-numbered features.\n+    insert_features_names(buf + res , sizeof(buf) - res ,       features_missing & (  CPU_MAX - 1));\n+    int res2 = res + strlen(buf + res);\n+    insert_features_names(buf + res2, sizeof(buf) - res2, glibc_features_missing & (GLIBC_MAX - 1));\n+    if (buf[res]) {\n+      assert(buf[res] == ',', \"unexpeced VM_Version::insert_features_names separator instead of ','\");\n+      buf[res] = '=';\n+    }\n+    vm_exit_during_initialization(buf);\n+  }\n+\t_features =   CPUFeatures_x64;\n+  _glibc_features = GLIBCFeatures_x64;\n+\n+  if (ShowCPUFeatures) {\n+    if (ignore_glibc_not_using) {\n+      tty->print_cr(\"CPU features are being kept intact as requested by -XX:CPUFeatures=ignore\");\n+    } else {\n+      tty->print_cr(\"CPU features being used are: -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X, _features, _glibc_features);\n+    }\n+  }\n+\n+  if (!ignore_glibc_not_using) {\n+    glibc_not_using(      features_expected & ~      _features,\n+                    glibc_features_expected & ~_glibc_features);\n+  }\n+}\n+\n@@ -1074,3 +1123,3 @@\n-    hotspot_union u;                                      \\\n-    u.value = active[glibc_index][glibc_reg];             \\\n-    u.bits.hotspot_field != 0;                            \\\n+    hotspot_union u;                                                                    \\\n+    u.value = active[glibc_index][glibc_reg];                                           \\\n+    u.bits.hotspot_field != 0;                                                          \\\n@@ -1081,5 +1130,5 @@\n-#define EXCESSIVE7(kind, hotspot, glibc, hotspot_field, hotspot_union, glibc_index, glibc_reg) do {                                                        \\\n-    EXCESSIVE_HANDLED(kind, hotspot);                                                                                                                      \\\n-    if (PASTE_TOKENS(excessive_, kind) & PASTE_TOKENS3(kind, _, hotspot) && FEATURE_ACTIVE(glibc, hotspot_field, hotspot_union, glibc_index, glibc_reg)) { \\\n-      PASTE_TOKENS(disable_, kind) |= PASTE_TOKENS3(kind, _, hotspot);                                                                                     \\\n-    }                                                                                                                                                      \\\n+#define EXCESSIVE6(kind, hotspotglibc, hotspot_field, hotspot_union, glibc_index, glibc_reg) do {                                                                      \\\n+    EXCESSIVE_HANDLED(kind, hotspotglibc);                                                                                                                             \\\n+    if (PASTE_TOKENS(excessive_, kind) & PASTE_TOKENS3(kind, _, hotspotglibc) && FEATURE_ACTIVE(hotspotglibc, hotspot_field, hotspot_union, glibc_index, glibc_reg)) { \\\n+      PASTE_TOKENS(disable_, kind) |= PASTE_TOKENS3(kind, _, hotspotglibc);                                                                                            \\\n+    }                                                                                                                                                                  \\\n@@ -1087,2 +1136,1 @@\n-#define EXCESSIVE5(kind, hotspot, glibc, hotspot_field, def...) EXCESSIVE7(kind, hotspot, glibc, hotspot_field, def)\n-#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE5(kind, hotspotglibc, hotspotglibc, hotspot_union, def)\n+#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE6(kind, hotspotglibc, hotspot_field, def)\n@@ -1098,1 +1146,0 @@\n-  EXCESSIVE5(CPU , HT, HTT , ht      , DEF_StdCpuid1Edx);\n@@ -1124,0 +1171,1 @@\n+  EXCESSIVE(GLIBC, HTT     , ht      , DEF_StdCpuid1Edx);\n@@ -1240,0 +1288,14 @@\n+static void nonlibc_tty_print_uint64(uint64_t num) {\n+  static const char prefix[] = \"0x\";\n+  tty->write(prefix, sizeof(prefix) - 1);\n+  bool first = true;\n+  for (int pos = 64 - 4; pos >= 0; pos -= 4) {\n+    unsigned nibble = (num >> pos) & 0xf;\n+    if (first && nibble == 0 && pos)\n+      continue;\n+    first = false;\n+    char c = nibble >= 0xa ? 'a' + nibble - 0xa : '0' + nibble;\n+    tty->write(&c, sizeof(c));\n+  }\n+}\n+\n@@ -1269,46 +1331,7 @@\n-    tty->print_cr(\"This machine's CPU features are: -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X, _features, _glibc_features);\n-  }\n-\n-  uint64_t       features_expected =   CPU_MAX - 1;\n-  uint64_t glibc_features_expected = GLIBC_MAX - 1;\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-        features_expected =       _features;\n-  glibc_features_expected = _glibc_features;\n-#endif\n-  assert(!CPUFeatures == FLAG_IS_DEFAULT(CPUFeatures), \"CPUFeatures parsing\");\n-  if (CPUFeatures) {\n-    uint64_t GLIBCFeatures_x64;\n-    uint64_t   CPUFeatures_x64 = CPUFeatures_parse(CPUFeatures, GLIBCFeatures_x64);\n-    uint64_t       features_missing =   CPUFeatures_x64 & ~      _features;\n-    uint64_t glibc_features_missing = GLIBCFeatures_x64 & ~_glibc_features;\n-    if (features_missing || glibc_features_missing) {\n-      char buf[512];\n-      int res = jio_snprintf(\n-                  buf, sizeof(buf),\n-                  \"Specified -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X\n-                  \"; this machine's CPU features are 0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X\n-                  \"; missing features of this CPU are 0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X \" \",\n-                  CPUFeatures_x64, GLIBCFeatures_x64,\n-                  _features, _glibc_features,\n-                  features_missing, glibc_features_missing);\n-      assert(res > 0, \"not enough temporary space allocated\");\n-      \/\/ insert_features_names() does crash for undefined too high-numbered features.\n-      insert_features_names(buf + res , sizeof(buf) - res ,       features_missing & (  CPU_MAX - 1));\n-      int res2 = res + strlen(buf + res);\n-      insert_features_names(buf + res2, sizeof(buf) - res2, glibc_features_missing & (GLIBC_MAX - 1));\n-      if (buf[res]) {\n-        assert(buf[res] == ',', \"unexpeced VM_Version::insert_features_names separator instead of ','\");\n-        buf[res] = '=';\n-      }\n-      vm_exit_during_initialization(buf);\n-    }\n-          _features =   CPUFeatures_x64;\n-    _glibc_features = GLIBCFeatures_x64;\n-\n-    if (ShowCPUFeatures) {\n-      if (ignore_glibc_not_using) {\n-        tty->print_cr(\"CPU features are being kept intact as requested by -XX:CPUFeatures=ignore\");\n-      } else {\n-        tty->print_cr(\"CPU features being used are: -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X, _features, _glibc_features);\n-      }\n-    }\n+    static const char prefix[] = \"This machine's CPU features are: -XX:CPUFeatures=\";\n+    tty->print_raw(prefix, sizeof(prefix) - 1);\n+    nonlibc_tty_print_uint64(_features);\n+    static const char comma = ',';\n+    tty->print_raw(&comma, sizeof(comma));\n+    nonlibc_tty_print_uint64(_glibc_features);\n+    tty->cr();\n@@ -1317,4 +1340,1 @@\n-  if (!ignore_glibc_not_using) {\n-    glibc_not_using(      features_expected & ~      _features,\n-                    glibc_features_expected & ~_glibc_features);\n-  }\n+  CPUFeatures_init();\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":88,"deletions":68,"binary":false,"changes":156,"status":"modified"},{"patch":"@@ -383,11 +383,12 @@\n-    decl(FMA4,              \"fma4\",              0) \\\n-    decl(MOVBE,             \"movbe\",             1) \\\n-    decl(OSXSAVE,           \"osxsave\",           2) \\\n-    decl(IBT,               \"ibt\",               3) \\\n-    decl(SHSTK,             \"shstk\",             4) \/* Also known as cet_ss *\/ \\\n-    decl(XSAVE,             \"xsave\",             5) \\\n-    decl(CMPXCHG16,         \"cmpxchg16\",         6) \/* Also known in cpuinfo as cx16 and in glibc as cmpxchg16b *\/ \\\n-    decl(LAHFSAHF,          \"lahfsahf\",          7) \/* Also known in cpuinfo as lahf_lm and in glibc as lahf64_sahf64 *\/ \\\n-    decl(F16C,              \"f16c\",              8) \\\n-                                                    \\\n-    decl(MAX,               \"max\",               9) \/* Maximum - this feature must never be used *\/\n+    decl(FMA4,              \"fma4\",               0) \\\n+    decl(MOVBE,             \"movbe\",              1) \\\n+    decl(OSXSAVE,           \"osxsave\",            2) \\\n+    decl(IBT,               \"ibt\",                3) \\\n+    decl(SHSTK,             \"shstk\",              4) \/* Also known as cet_ss *\/ \\\n+    decl(XSAVE,             \"xsave\",              5) \\\n+    decl(CMPXCHG16,         \"cmpxchg16\",          6) \/* Also known in cpuinfo as cx16 and in glibc as cmpxchg16b *\/ \\\n+    decl(LAHFSAHF,          \"lahfsahf\",           7) \/* Also known in cpuinfo as lahf_lm and in glibc as lahf64_sahf64 *\/ \\\n+    decl(F16C,              \"f16c\",               8) \\\n+    decl(HTT,               \"htt\",                9) \/* hotspot calls it 'ht' but it is affected by threads_per_core() *\/ \\\n+                                                     \\\n+    decl(MAX,               \"max\",               10) \/* Maximum - this feature must never be used *\/\n@@ -725,0 +726,2 @@\n+    if (_cpuid_info.std_cpuid1_edx.bits.ht != 0)\n+      result |= GLIBC_HTT;\n@@ -769,1 +772,2 @@\n-  static uint64_t CPUFeatures_parse(const char *ccstr, uint64_t &glibc_features);\n+  static uint64_t CPUFeatures_parse(uint64_t &glibc_features);\n+  static void CPUFeatures_init();\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":16,"deletions":12,"binary":false,"changes":28,"status":"modified"}]}