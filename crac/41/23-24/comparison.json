{"files":[{"patch":"@@ -633,13 +633,0 @@\n-  if (strcmp(ccstr, \"verify\") == 0) {\n-    verify_glibc_by_reexec = true;\n-#if INCLUDE_CPU_FEATURE_ACTIVE || INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-    tty->print_cr(\"-XX:CPUFeatures=verify has no effect as glibc \"\n-# if INCLUDE_CPU_FEATURE_ACTIVE\n-                  \"CPU_FEATURE_ACTIVE\"\n-# elif INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-                  \"ld.so --list-diagnostics\"\n-# endif \/\/ INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-                  \" feature is available\");\n-#endif \/\/ INCLUDE_CPU_FEATURE_ACTIVE || INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-    return Abstract_VM_Version::features();\n-  }\n@@ -647,0 +634,1 @@\n+    ignore_glibc_not_using = true;\n@@ -793,1 +781,0 @@\n-bool VM_Version::verify_glibc_by_reexec = false;\n@@ -1285,1 +1272,0 @@\n-  assert(!CPUFeatures == FLAG_IS_DEFAULT(CPUFeatures), \"CPUFeatures parsing\");\n@@ -1288,0 +1274,5 @@\n+#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+        features_expected =       _features;\n+  glibc_features_expected = _glibc_features;\n+#endif\n+  assert(!CPUFeatures == FLAG_IS_DEFAULT(CPUFeatures), \"CPUFeatures parsing\");\n@@ -1319,1 +1310,1 @@\n-\ttty->print_cr(\"CPU features are being kept intact as requested by -XX:CPUFeatures=ignore\");\n+        tty->print_cr(\"CPU features are being kept intact as requested by -XX:CPUFeatures=ignore\");\n@@ -1321,1 +1312,1 @@\n-\ttty->print_cr(\"CPU features being used are: -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X, _features, _glibc_features);\n+        tty->print_cr(\"CPU features being used are: -XX:CPUFeatures=0x\" UINT64_FORMAT_X \",0x\" UINT64_FORMAT_X, _features, _glibc_features);\n@@ -1326,6 +1317,0 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-  if (!verify_glibc_by_reexec) {\n-          features_expected =       _features;\n-    glibc_features_expected = _glibc_features;\n-  }\n-#endif\n@@ -1334,1 +1319,1 @@\n-\t\t    glibc_features_expected & ~_glibc_features);\n+                    glibc_features_expected & ~_glibc_features);\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":9,"deletions":24,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -776,2 +776,1 @@\n-  \/\/ C++17: Make verify_glibc_by_reexec and ignore_glibc_not_using inline.\n-  static bool verify_glibc_by_reexec;\n+  \/\/ C++17: Make ignore_glibc_not_using inline.\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}