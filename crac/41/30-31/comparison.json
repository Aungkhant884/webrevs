{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n@@ -667,6 +668,1 @@\n-  char buf[512];\n-  int res = jio_snprintf(\n-              buf, sizeof(buf),\n-              \"VM option 'CPUFeatures=%s' must be of the form: 0xnum,0xnum\", CPUFeatures);\n-  assert(res > 0, \"not enough temporary space allocated\");\n-  vm_exit_during_initialization(buf);\n+  vm_exit_during_initialization(err_msg(\"VM option 'CPUFeatures=%s' must be of the form: 0xnum,0xnum\", CPUFeatures));\n@@ -681,5 +677,2 @@\n-  if (strcmp(info->dlpi_name, \"\") != 0) {\n-    char errbuf[512];\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Unexpected name of first dl_phdr_info: %s\", info->dlpi_name);\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (strcmp(info->dlpi_name, \"\") != 0)\n+    vm_exit_during_initialization(err_msg(\"Unexpected name of first dl_phdr_info: %s\", info->dlpi_name));\n@@ -707,1 +700,0 @@\n-  char errbuf[512];\n@@ -714,4 +706,2 @@\n-  if (pipe(fds.fds)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error creating pipe: %m\");\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (pipe(fds.fds))\n+    vm_exit_during_initialization(err_msg(\"Error creating pipe: %m\"));\n@@ -721,2 +711,1 @@\n-      jio_snprintf(errbuf, sizeof(errbuf), \"Error fork-ing: %m\");\n-      vm_exit_during_initialization(errbuf);\n+      vm_exit_during_initialization(err_msg(\"Error fork-ing: %m\"));\n@@ -724,11 +713,2 @@\n-      if (close(fds.readfd)) {\n-        jio_snprintf(errbuf, sizeof(errbuf), \"Error closing read pipe in child: %m\");\n-        vm_exit_during_initialization(errbuf);\n-      }\n-      if (dup2(fds.writefd, STDOUT_FILENO) != STDOUT_FILENO) {\n-        jio_snprintf(errbuf, sizeof(errbuf), \"Error closing preparing write pipe in child: %m\");\n-        vm_exit_during_initialization(errbuf);\n-      }\n-      if (close(fds.writefd)) {\n-        jio_snprintf(errbuf, sizeof(errbuf), \"Error closing write pipe in child: %m\");\n-        vm_exit_during_initialization(errbuf);\n+      if (close(fds.readfd))\n+        vm_exit_during_initialization(err_msgt(\"Error closing read pipe in child: %m\"));\n@@ -736,0 +716,4 @@\n+      if (dup2(fds.writefd, STDOUT_FILENO) != STDOUT_FILENO)\n+        vm_exit_during_initialization(err_msg(\"Error closing preparing write pipe in child: %m\"));\n+      if (close(fds.writefd))\n+        vm_exit_during_initialization(err_msg(\"Error closing write pipe in child: %m\"));\n@@ -737,1 +721,0 @@\n-      jio_snprintf(errbuf, sizeof(errbuf), \"Error exec-ing %s \" ARG1 \": %m\", arg0);\n@@ -739,5 +722,1 @@\n-      vm_exit_during_initialization(errbuf);\n-  }\n-  if (close(fds.writefd)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error closing write pipe in parent: %m\");\n-    vm_exit_during_initialization(errbuf);\n+      vm_exit_during_initialization(err_msg(\"Error exec-ing %s \" ARG1 \": %m\", arg0));\n@@ -745,0 +724,2 @@\n+  if (close(fds.writefd))\n+    vm_exit_during_initialization(err_msg(\"Error closing write pipe in parent: %m\"));\n@@ -746,4 +727,2 @@\n-  if (f == NULL) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error converting pipe fd to FILE * in parent for %s \" ARG1 \": %m\", arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (f == NULL)\n+    vm_exit_during_initialization(err_msg(\"Error converting pipe fd to FILE * in parent for %s \" ARG1 \": %m\", arg0));\n@@ -755,5 +734,2 @@\n-  char errbuf[512];\n-  if (fclose(f)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error closing fdopen-ed %s \" ARG1 \": %m\", arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (fclose(f))\n+    vm_exit_during_initialization(err_msg(\"Error closing fdopen-ed %s \" ARG1 \": %m\", arg0));\n@@ -762,12 +738,6 @@\n-  if (waiterr != pid) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error waiting on %s \" ARG1 \": %m\", arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n-  if (!WIFEXITED(wstatus)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Child command %s \" ARG1 \" did not properly exit (WIFEXITED): wstatus = %d\", arg0, wstatus);\n-    vm_exit_during_initialization(errbuf);\n-  }\n-  if (WEXITSTATUS(wstatus) != 0) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Child command %s \" ARG1 \" did exit with an error: exit code = %d\", arg0, WEXITSTATUS(wstatus));\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (waiterr != pid)\n+    vm_exit_during_initialization(err_msg(\"Error waiting on %s \" ARG1 \": %m\", arg0));\n+  if (!WIFEXITED(wstatus))\n+    vm_exit_during_initialization(err_msg(\"Child command %s \" ARG1 \" did not properly exit (WIFEXITED): wstatus = %d\", arg0, wstatus));\n+  if (WEXITSTATUS(wstatus) != 0)\n+    vm_exit_during_initialization(err_msg(\"Child command %s \" ARG1 \" did exit with an error: exit code = %d\", arg0, WEXITSTATUS(wstatus)));\n@@ -818,1 +788,0 @@\n-  char errbuf[512];\n@@ -820,4 +789,2 @@\n-  if (err) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"setenv \" TUNABLES_NAME \" error: %m\");\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (err)\n+    vm_exit_during_initialization(err_msg(\"setenv \" TUNABLES_NAME \" error: %m\"));\n@@ -826,8 +793,4 @@\n-  if (getenv(REEXEC_NAME)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"internal error: \" TUNABLES_NAME \"=%s failed and \" REEXEC_NAME \" is set\", disable_str);\n-    vm_exit_during_initialization(errbuf);\n-  }\n-  if (setenv(REEXEC_NAME, \"1\", 1)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"setenv \" REEXEC_NAME \" error: %m\");\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (getenv(REEXEC_NAME))\n+    vm_exit_during_initialization(err_msg(\"internal error: \" TUNABLES_NAME \"=%s failed and \" REEXEC_NAME \" is set\", disable_str));\n+  if (setenv(REEXEC_NAME, \"1\", 1))\n+    vm_exit_during_initialization(err_msg(\"setenv \" REEXEC_NAME \" error: %m\"));\n@@ -844,1 +807,0 @@\n-  char errbuf[512];\n@@ -846,4 +808,2 @@\n-  if (fd == -1) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Cannot open \" CMDLINE \": %m\");\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (fd == -1)\n+    vm_exit_during_initialization(err_msg(\"Cannot open \" CMDLINE \": %m\"));\n@@ -855,4 +815,2 @@\n-      if (buf == NULL) {\n-        jio_snprintf(errbuf, sizeof(errbuf), CMDLINE \" reading failed allocating %zu bytes\", buf_allocated);\n-        vm_exit_during_initialization(errbuf);\n-      }\n+      if (buf == NULL)\n+        vm_exit_during_initialization(err_msg(CMDLINE \" reading failed allocating %zu bytes\", buf_allocated));\n@@ -861,4 +819,2 @@\n-    if (got == -1) {\n-      jio_snprintf(errbuf, sizeof(errbuf), \"Cannot read \" CMDLINE \": %m\");\n-      vm_exit_during_initialization(errbuf);\n-    }\n+    if (got == -1)\n+      vm_exit_during_initialization(err_msg(\"Cannot read \" CMDLINE \": %m\"));\n@@ -867,4 +823,2 @@\n-  if (close(fd)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Cannot close \" CMDLINE \": %m\");\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (close(fd))\n+    vm_exit_during_initialization(err_msg(\"Cannot close \" CMDLINE \": %m\"));\n@@ -879,4 +833,2 @@\n-      if (argv == NULL) {\n-        jio_snprintf(errbuf, sizeof(errbuf), CMDLINE \" reading failed allocating %zu pointers\", argv_allocated);\n-        vm_exit_during_initialization(errbuf);\n-      }\n+      if (argv == NULL)\n+        vm_exit_during_initialization(err_msg(CMDLINE \" reading failed allocating %zu pointers\", argv_allocated));\n@@ -898,2 +850,1 @@\n-  jio_snprintf(errbuf, sizeof(errbuf), \"Cannot re-execute \" EXEC \": %m\");\n-  vm_exit_during_initialization(errbuf);\n+  vm_exit_during_initialization(err_msg(\"Cannot re-execute \" EXEC \": %m\"));\n@@ -908,1 +859,0 @@\n-  char errbuf[512];\n@@ -931,4 +881,2 @@\n-  if (!f) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Cannot popen %s \" ARG1 \": %m\", arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (!f)\n+    vm_exit_during_initialization(err_msg(\"Cannot popen %s \" ARG1 \": %m\", arg0));\n@@ -966,8 +914,4 @@\n-  if (ferror(f)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"Error reading popen-ed %s \" ARG1 \": %m\", arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n-  if (!feof(f)) {\n-    jio_snprintf(errbuf, sizeof(errbuf), \"EOF not reached on popen-ed %s \" ARG1, arg0);\n-    vm_exit_during_initialization(errbuf);\n-  }\n+  if (ferror(f))\n+    vm_exit_during_initialization(err_msg(\"Error reading popen-ed %s \" ARG1 \": %m\", arg0));\n+  if (!feof(f))\n+    vm_exit_during_initialization(err_msg(\"EOF not reached on popen-ed %s \" ARG1, arg0));\n@@ -1175,7 +1119,4 @@\n-#define CHECK_KIND(kind) do {                                                                                   \\\n-    if (PASTE_TOKENS(disable_handled_, kind) != PASTE_TOKENS(excessive_handled_, kind)) {                       \\\n-      jio_snprintf(errbuf, sizeof(errbuf),                                                                      \\\n-                   \"internal error: Unsupported disabling of \" STR(kind) \"_* 0x%\" PRIx64 \" != used 0x%\" PRIx64, \\\n-                   PASTE_TOKENS(disable_handled_, kind), PASTE_TOKENS(excessive_handled_, kind));               \\\n-      vm_exit_during_initialization(errbuf);                                                                    \\\n-    }                                                                                                           \\\n+#define CHECK_KIND(kind) do {                                                                                                            \\\n+    if (PASTE_TOKENS(disable_handled_, kind) != PASTE_TOKENS(excessive_handled_, kind))                                                  \\\n+      vm_exit_during_initialization(err_msg(\"internal error: Unsupported disabling of \" STR(kind) \"_* 0x%\" PRIx64 \" != used 0x%\" PRIx64, \\\n+                                            PASTE_TOKENS(disable_handled_, kind), PASTE_TOKENS(excessive_handled_, kind));               \\\n@@ -1219,6 +1160,4 @@\n-#define CHECK_KIND(kind) do {                                                                                                                                              \\\n-    if (PASTE_TOKENS(excessive_handled_, kind) != PASTE_TOKENS(kind, _MAX) - 1) {                                                                                          \\\n-      jio_snprintf(errbuf, sizeof(errbuf),                                                                                                                                 \\\n-                   \"internal error: Unsupported disabling of some \" STR(kind) \"_* 0x%\" PRIx64 \" != full 0x%\" PRIx64, PASTE_TOKENS(excessive_handled_, kind), CPU_MAX - 1); \\\n-      vm_exit_during_initialization(errbuf);                                                                                                                               \\\n-    }                                                                                                                                                                      \\\n+#define CHECK_KIND(kind) do {                                                                                                                 \\\n+    if (PASTE_TOKENS(excessive_handled_, kind) != PASTE_TOKENS(kind, _MAX) - 1)                                                               \\\n+      vm_exit_during_initialization(err_msg(\"internal error: Unsupported disabling of some \" STR(kind) \"_* 0x%\" PRIx64 \" != full 0x%\" PRIx64, \\\n+                                            PASTE_TOKENS(excessive_handled_, kind), CPU_MAX - 1);                                             \\\n@@ -1304,5 +1243,2 @@\n-    if (!FLAG_IS_DEFAULT(CPUFeatures)) {\n-      char errbuf[512];\n-      jio_snprintf(errbuf, sizeof(errbuf), \"-XX:CPUFeatures option requires SSE2 flag to be set: 0x%\" PRIx64, CPU_SSE2);\n-      vm_exit_during_initialization(errbuf);\n-    }\n+    if (!FLAG_IS_DEFAULT(CPUFeatures))\n+      vm_exit_during_initialization(err_msg(\"-XX:CPUFeatures option requires SSE2 flag to be set: 0x%\" PRIx64, CPU_SSE2));\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":59,"deletions":123,"binary":false,"changes":182,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n@@ -1136,3 +1137,1 @@\n-    char errbuf[512];\n-    jio_snprintf(errbuf, sizeof(errbuf), \"-XX:CPUFeatures option requires FLUSH flag to be set: 0x%\" PRIx64, CPU_FLUSH);\n-    vm_exit_during_initialization(errbuf);\n+    vm_exit_during_initialization(err_msg(\"-XX:CPUFeatures option requires FLUSH flag to be set: 0x%\" PRIx64, CPU_FLUSH));\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}