{"files":[{"patch":"@@ -203,1 +203,4 @@\n-  return os::exec_child_process_and_wait(_crengine, _crengine_args);\n+  if (os::exec_child_process_and_wait(_crengine, _crengine_args) == 0)\n+    return 0;\n+  fprintf(stderr, \"CRaC error executing: %s\\n\", _crengine);\n+  return -1;\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -64,0 +64,69 @@\n+static char *join_args(const char **args) {\n+    size_t size = 0;\n+    for (const char **argp = args; *argp; ++argp) {\n+      size += strlen(*argp) * 4 + 2 + 1;\n+    }\n+    char *retval = malloc(size);\n+    if (!retval) {\n+        perror(\"malloc\");\n+        exit(1);\n+    }\n+    char *d = retval;\n+    for (const char **argp = args; *argp; ++argp) {\n+        if (d != retval) {\n+            *d++ = ' ';\n+        }\n+        \/\/ https:\/\/unix.stackexchange.com\/a\/357932\/296319\n+        if (!strpbrk(*argp, \" \\t\\n!\\\"#$&'()*,;<=>?[\\\\]^`{|}~\")) {\n+            d = stpcpy(d, *argp);\n+            continue;\n+        }\n+        *d++ = '\\'';\n+        for (const char *s = *argp; *s; ++s) {\n+          if (*s != '\\'') {\n+            *d++ = *s;\n+          } else {\n+            d = stpcpy(d, \"'\\\\''\");\n+          }\n+        }\n+        *d++ = '\\'';\n+    }\n+    *d = 0;\n+    return retval;\n+}\n+\n+static char *path_join(const char *path1, const char *path2) {\n+    char *retval;\n+    if (path2[0] == '\/') {\n+        retval = strdup(path2);\n+        if (!retval) {\n+            perror(\"strdup\");\n+            exit(1);\n+        }\n+        return retval;\n+    }\n+    if (asprintf(&retval, \"%s\/%s\", path1, path2) == -1) {\n+        perror(\"asprintf\");\n+        exit(1);\n+    }\n+    return retval;\n+}\n+\n+static char *path_abs(const char *rel) {\n+    char *cwd = get_current_dir_name();\n+    if (!cwd) {\n+        perror(\"get_current_dir_name\");\n+        exit(1);\n+    }\n+    char *retval = path_join(cwd, rel);\n+    free(cwd);\n+    return retval;\n+}\n+\n+static char *path_abs2(const char *rel1, const char *rel2) {\n+    char *rel1_abs = path_abs(rel1);\n+    char *retval = path_join(rel1_abs, rel2);\n+    free(rel1_abs);\n+    return retval;\n+}\n+\n@@ -102,15 +171,8 @@\n-    pid_t child = fork();\n-    if (!child) {\n-        const char* args[32] = {\n-            criu,\n-            \"dump\",\n-            \"-t\", jvmpidchar,\n-            \"-D\", imagedir,\n-            \"--shell-job\",\n-        };\n-        const char** arg = args + 7;\n-\n-        *arg++ = verbosity != NULL ? verbosity : \"-v4\";\n-        *arg++ = \"-o\";\n-        \/\/ -D without -W makes criu cd to image dir for logs\n-        *arg++ = log_file != NULL ? log_file : \"dump4.log\";\n+    const char* args[32] = {\n+        criu,\n+        \"dump\",\n+        \"-t\", jvmpidchar,\n+        \"-D\", imagedir,\n+        \"--shell-job\",\n+    };\n+    const char** arg = args + 7;\n@@ -118,3 +180,5 @@\n-        if (leave_running) {\n-            *arg++ = \"-R\";\n-        }\n+    *arg++ = verbosity != NULL ? verbosity : \"-v4\";\n+    *arg++ = \"-o\";\n+    \/\/ -D without -W makes criu cd to image dir for logs\n+    const char *log_local = log_file != NULL ? log_file : \"dump4.log\";\n+    *arg++ = log_local;\n@@ -122,10 +186,13 @@\n-        char *criuopts = getenv(\"CRAC_CRIU_OPTS\");\n-        if (criuopts) {\n-            char* criuopt = strtok(criuopts, \" \");\n-            while (criuopt && ARRAY_SIZE(args) >= (size_t)(arg - args) + 1\/* account for trailing NULL *\/) {\n-                *arg++ = criuopt;\n-                criuopt = strtok(NULL, \" \");\n-            }\n-            if (criuopt) {\n-                fprintf(stderr, \"Warning: too many arguments in CRAC_CRIU_OPTS (dropped from '%s')\\n\", criuopt);\n-            }\n+    if (leave_running) {\n+        *arg++ = \"-R\";\n+    }\n+\n+    char *criuopts = getenv(\"CRAC_CRIU_OPTS\");\n+    if (criuopts) {\n+        char* criuopt = strtok(criuopts, \" \");\n+        while (criuopt && ARRAY_SIZE(args) >= (size_t)(arg - args) + 1\/* account for trailing NULL *\/) {\n+            *arg++ = criuopt;\n+            criuopt = strtok(NULL, \" \");\n+        }\n+        if (criuopt) {\n+            fprintf(stderr, \"Warning: too many arguments in CRAC_CRIU_OPTS (dropped from '%s')\\n\", criuopt);\n@@ -133,1 +200,2 @@\n-        *arg++ = NULL;\n+    }\n+    *arg++ = NULL;\n@@ -135,0 +203,2 @@\n+    pid_t child = fork();\n+    if (!child) {\n@@ -136,2 +206,2 @@\n-        perror(\"criu dump\");\n-        exit(1);\n+        fprintf(stderr, \"Cannot execute CRIU \\\"%s\\\": %m\\n\", criu);\n+        exit(77);\n@@ -140,0 +210,2 @@\n+    char *criu_cmdline = NULL;\n+    char *criu_log = NULL;\n@@ -141,1 +213,15 @@\n-    if (child != wait(&status) || !WIFEXITED(status) || WEXITSTATUS(status)) {\n+    if (child != wait(&status)) {\n+        criu_cmdline = join_args(args);\n+        fprintf(stderr, \"Error waiting for spawned CRIU \\\"%s\\\": %m\\n\", criu_cmdline);\n+        kickjvm(jvm, -1);\n+    } else if (!WIFEXITED(status)) {\n+        criu_cmdline = join_args(args);\n+        criu_log = path_abs2(imagedir, log_local);\n+        fprintf(stderr, \"Spawned CRIU \\\"%s\\\" has not properly exited: waitpid status %d - check %s\\n\", criu_cmdline, status, criu_log);\n+        kickjvm(jvm, -1);\n+    } else if (WEXITSTATUS(status)) {\n+        if (WEXITSTATUS(status) != 77) {\n+            criu_cmdline = join_args(args);\n+            criu_log = path_abs2(imagedir, log_local);\n+            fprintf(stderr, \"Spawned CRIU \\\"%s\\\" has not properly exited: exit code %d - check %s\\n\", criu_cmdline, WEXITSTATUS(status), criu_log);\n+        }\n@@ -146,0 +232,2 @@\n+    free(criu_cmdline);\n+    free(criu_log);\n@@ -162,1 +250,1 @@\n-        perror(\"open cppath\");\n+        fprintf(stderr, \"CRaC restore - cannot open cppath file \\\"%s\\\": %m\\n\", path_abs(cppathpath));\n@@ -389,1 +477,1 @@\n-        char *criu = getenv(\"CRAC_CRIU_PATH\");\n+        const char *criu = getenv(\"CRAC_CRIU_PATH\");\n@@ -391,1 +479,1 @@\n-            if (-1 == asprintf(&criu, \"%s\/criu\", basedir)) {\n+            if (-1 == asprintf((char **)&criu, \"%s\/criu\", basedir)) {\n@@ -397,3 +485,4 @@\n-                criu = \"\/usr\/sbin\/criu\";\n-                if (stat(criu, &st)) {\n-                    fprintf(stderr, \"cannot find CRIU to use\\n\");\n+                const char system_criu[] = \"\/usr\/sbin\/criu\";\n+                if (stat(system_criu, &st)) {\n+                    fprintf(stderr, \"Cannot find CRIU to use, tried env(CRAC_CRIU_PATH), dirname(argv[0])\/criu=%s, %s\\n\",\n+                      criu, system_criu);\n@@ -402,0 +491,1 @@\n+                criu = system_criu;\n","filename":"src\/java.base\/unix\/native\/criuengine\/criuengine.c","additions":128,"deletions":38,"binary":false,"changes":166,"status":"modified"}]}