{"files":[{"patch":"@@ -211,0 +211,1 @@\n+    tty->print_cr(\"CRaC error executing: %s\\n\", _crengine);\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include <iostream>\n@@ -50,0 +51,2 @@\n+#define SUPPRESS_ERROR_IN_PARENT 77\n+\n@@ -66,0 +69,46 @@\n+static std::string join_args(const std::vector<const char *> &args) {\n+    std::string retval;\n+    for (const char *s : args) {\n+        if (!s) {\n+            continue;\n+        }\n+        if (!retval.empty()) {\n+            retval += ' ';\n+        }\n+        \/\/ https:\/\/unix.stackexchange.com\/a\/357932\/296319\n+        if (!strpbrk(s, \" \\t\\n!\\\"#$&'()*,;<=>?[\\\\]^`{|}~\")) {\n+            retval += s;\n+            continue;\n+        }\n+        retval += '\\'';\n+        for (; *s; ++s) {\n+            if (*s != '\\'') {\n+                retval += *s;\n+            } else {\n+                retval += \"'\\\\''\";\n+            }\n+        }\n+        retval += '\\'';\n+    }\n+    return retval;\n+}\n+\n+static std::string path_from(std::string cwd, std::string path) {\n+    return path[0] == '\/' ? path : cwd + \"\/\" + path;\n+}\n+\n+static std::string path_abs(std::string rel) {\n+    char *cwd_s = get_current_dir_name();\n+    if (!cwd_s) {\n+        perror(\"get_current_dir_name\");\n+        exit(1);\n+    }\n+    std::string cwd = cwd_s;\n+    free(cwd_s);\n+    return path_from(cwd, rel);\n+}\n+\n+static std::string path_abs(std::string rel1, std::string rel2) {\n+    return path_from(path_abs(rel1), rel2);\n+}\n+\n@@ -115,1 +164,2 @@\n-    args.push_back(log_file != NULL ? log_file : \"dump4.log\");\n+    const char *log_local = log_file != NULL ? log_file : \"dump4.log\";\n+    args.push_back(log_local);\n@@ -134,2 +184,2 @@\n-        perror(\"criu dump\");\n-        exit(1);\n+        std::cerr << \"Cannot execute CRIU \\\"\" << join_args(args) << \"\\\": \" << strerror(errno) << std::endl;\n+        exit(SUPPRESS_ERROR_IN_PARENT);\n@@ -139,1 +189,12 @@\n-    if (child != wait(&status) || !WIFEXITED(status) || WEXITSTATUS(status)) {\n+    if (child != wait(&status)) {\n+        std::cerr << \"Error waiting for spawned CRIU \\\"\" << join_args(args) << \"\\\": \" << strerror(errno) << std::endl;\n+        kickjvm(jvm, -1);\n+    } else if (!WIFEXITED(status)) {\n+        std::cerr << \"Spawned CRIU \\\"\" << join_args(args) << \"\\\" has not properly exited:\"\n+          \" waitpid status %d - check \" << path_abs(imagedir, log_local) << std::endl;\n+        kickjvm(jvm, -1);\n+    } else if (WEXITSTATUS(status)) {\n+        if (WEXITSTATUS(status) != SUPPRESS_ERROR_IN_PARENT) {\n+            std::cerr << \"Spawned CRIU \\\"\" << join_args(args) << \"\\\" has not properly exited:\"\n+              \" exit code \" << WEXITSTATUS(status) << \" - check \" << path_abs(imagedir, log_local) << std::endl;\n+        }\n@@ -157,1 +218,1 @@\n-        perror(\"open cppath\");\n+        std::cerr << \"CRaC restore - cannot open cppath file \\\"\" << path_abs(cppathpath) << \"\\\": \" << strerror(errno) << std::endl;\n@@ -221,1 +282,1 @@\n-    perror(\"exec criu\");\n+    std::cerr << \"Cannot execute CRIU \\\"\" << join_args(args) << \"\\\": \" << strerror(errno) << std::endl;\n","filename":"src\/java.base\/unix\/native\/criuengine\/criuengine.cpp","additions":67,"deletions":6,"binary":false,"changes":73,"status":"modified"}]}