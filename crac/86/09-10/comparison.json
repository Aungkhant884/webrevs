{"files":[{"patch":"@@ -42,10 +42,15 @@\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   1       true   1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   100     true   100\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   1000    false  1000\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   2000    true   2000   1000\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   0       true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   -10     true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   blabla  true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   5000000 true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   5000000 true   -1     4194200\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   4194303 true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  true   false  INF     true   128\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  true   true   100     true   100\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  false  INF     false  1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1       false  1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1       true   1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   200     true   200\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1000    false  1000\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   2000    true   2000   1000\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   0       true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   -10     true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   blabla  true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1     4194200\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   4194303 true   -1\n+\n@@ -55,1 +60,1 @@\n-    String lastPid;\n+    boolean runDirectly;\n@@ -58,1 +63,1 @@\n-    boolean usePrivilegedContainer;\n+    boolean needSetMinPid;\n@@ -61,0 +66,6 @@\n+    String lastPid;\n+\n+    @CracTestArg(3)\n+    boolean usePrivilegedContainer;\n+\n+    @CracTestArg(4)\n@@ -63,1 +74,1 @@\n-    @CracTestArg(value = 3, optional = true)\n+    @CracTestArg(value = 5, optional = true)\n@@ -76,1 +87,1 @@\n-            .vmOption(\"-XX:CRaCMinPid=\" + lastPid)\n+            .runContainerDirectly(runDirectly)\n@@ -78,0 +89,3 @@\n+        if (needSetMinPid) {\n+            builder.vmOption(\"-XX:CRaCMinPid=\" + lastPid);\n+        }\n","filename":"test\/jdk\/jdk\/crac\/ContainerPidAdjustmentTest.java","additions":28,"deletions":14,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+    boolean runContainerDirectly = false;\n@@ -92,0 +93,1 @@\n+        other.runContainerDirectly = runContainerDirectly;\n@@ -120,0 +122,5 @@\n+    public CracBuilder runContainerDirectly(boolean runDirectly) {\n+        this.runContainerDirectly = runDirectly;\n+        return this;\n+    }\n+\n@@ -221,1 +228,5 @@\n-        ensureContainerStarted();\n+        if (runContainerDirectly) {\n+            prepareContainer();\n+        } else {\n+            ensureContainerStarted();\n+        }\n@@ -249,5 +260,1 @@\n-            ensureContainerKilled();\n-            buildDockerImage();\n-            FileUtils.deleteFileTreeWithRetry(Path.of(\".\", \"jdk-docker\"));\n-            \/\/ Make sure we start with a clean image directory\n-            DockerTestUtils.execute(Container.ENGINE_COMMAND, \"volume\", \"rm\", \"cr\");\n+            prepareContainer();\n@@ -262,0 +269,11 @@\n+    private void prepareContainer() throws Exception {\n+        if (runContainerDirectly && null != containerSetupCommand) {\n+            fail(\"runContainerDirectly and containerSetupCommand cannot be used together.\");\n+        }\n+        ensureContainerKilled();\n+        buildDockerImage();\n+        FileUtils.deleteFileTreeWithRetry(Path.of(\".\", \"jdk-docker\"));\n+        \/\/ Make sure we start with a clean image directory\n+        DockerTestUtils.execute(Container.ENGINE_COMMAND, \"volume\", \"rm\", \"cr\");\n+    }\n+\n@@ -299,1 +317,1 @@\n-    private List<String> prepareContainerCommand(String imageName, String[] options) {\n+    private List<String> prepareContainerCommandBase(String imageName, String[] options) {\n@@ -302,1 +320,5 @@\n-        cmd.addAll(Arrays.asList(\"run\", \"--rm\", \"-d\"));\n+        cmd.addAll(Arrays.asList(\"run\", \"--rm\"));\n+        if (!runContainerDirectly) {\n+            cmd.add(\"-d\");\n+            cmd.add(\"--init\"); \/\/ otherwise the checkpointed process would not be reaped (by sleep with PID 1)\n+        }\n@@ -306,1 +328,0 @@\n-        cmd.add(\"--init\"); \/\/ otherwise the checkpointed process would not be reaped (by sleep with PID 1)\n@@ -322,0 +343,5 @@\n+        return cmd;\n+    }\n+\n+    private List<String> prepareContainerCommand(String imageName, String[] options) {\n+        List<String> cmd = prepareContainerCommandBase(imageName, options);\n@@ -398,4 +424,9 @@\n-            cmd.add(Container.ENGINE_COMMAND);\n-            cmd.add(\"exec\");\n-            if (null != dockerCheckpointOptions) {\n-                cmd.addAll(dockerCheckpointOptions);\n+            if (runContainerDirectly) {\n+                cmd = prepareContainerCommandBase(dockerImageName, dockerOptions);\n+            } else {\n+                cmd.add(Container.ENGINE_COMMAND);\n+                cmd.add(\"exec\");\n+                if (null != dockerCheckpointOptions) {\n+                    cmd.addAll(dockerCheckpointOptions);\n+                }\n+                cmd.add(CONTAINER_NAME);\n@@ -403,1 +434,0 @@\n-            cmd.add(CONTAINER_NAME);\n","filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java","additions":44,"deletions":14,"binary":false,"changes":58,"status":"modified"}]}