{"files":[{"patch":"@@ -2100,1 +2100,1 @@\n-  product(ccstr, CRaCMinPid, NULL, RESTORE_SETTABLE,                        \\\n+  product(uint, CRaCMinPid, 128,                                           \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+static int is_min_pid_set = 0;\n@@ -117,1 +118,1 @@\n-    {\n+    if (!is_min_pid_set) {\n@@ -122,0 +123,1 @@\n+            is_min_pid_set = 1;\n@@ -199,1 +201,1 @@\n-        res =   errno;\n+        res = errno;\n@@ -209,1 +211,1 @@\n-    const int MaxSpinCount = 10000;\n+    const int MaxSpinCount = pid < 1000 ? 1000 : pid;\n@@ -350,0 +352,3 @@\n+        if (is_min_pid_set && min_pid != crac_min_pid) {\n+            fprintf(stderr, \"Warning: wrong CRaCMinPid specified %d, using default value.\\n\", crac_min_pid);\n+        }\n@@ -358,2 +363,1 @@\n-                    errno = res;\n-                    perror(\"set_last_pid\");\n+                    fprintf(stderr, \"set_last_pid: %s\\n\", strerror(res));\n@@ -367,0 +371,11 @@\n+            if (0 == g_child_pid && getpid() < min_pid) {\n+                if (is_min_pid_set) {\n+                    fprintf(stderr, \"Error: Can't adjust PID to min PID %d, current PID %d\\n\", min_pid, (int)getpid());\n+                    exit(1);\n+                } else {\n+                    fprintf(stderr,\n+                            \"Warning: Can't adjust PID to min PID %d, current PID %d.\\n\"\n+                            \"This message can be suppressed by '-XX:CRaCMinPid=1' option\\n\",\n+                            min_pid, (int)getpid());\n+                }\n+            }\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n@@ -32,1 +34,0 @@\n-import java.util.ArrayList;\n@@ -34,1 +35,0 @@\n-import java.util.List;\n@@ -46,3 +46,2 @@\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   -10     true   128\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   40000   true   40000\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   40000   false  -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   -10     true   -1\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   blabla  true   -1\n@@ -51,0 +50,1 @@\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   true   4194303 true   -1\n@@ -57,1 +57,1 @@\n-    long lastPid;\n+    String lastPid;\n@@ -68,0 +68,2 @@\n+    final private String CURRENT_PID_MESSAGE = \"Current PID = \";\n+\n@@ -79,0 +81,3 @@\n+        if (0 > expectedLastPid) {\n+            builder.captureOutput(true);\n+        }\n@@ -85,1 +90,0 @@\n-                .captureOutput(true)\n@@ -92,1 +96,1 @@\n-            int expectedExitValue = (int)java.lang.Math.abs(expectedLastPid);\n+            final int expectedExitValue = (int)java.lang.Math.abs(expectedLastPid);\n@@ -96,0 +100,2 @@\n+            OutputAnalyzer oa = process.outputAnalyzer();\n+            oa.shouldNotContain(CURRENT_PID_MESSAGE);\n@@ -97,1 +103,1 @@\n-                process.outputAnalyzer().shouldContain(\"spin_last_pid: Invalid argument (\" + lastPid + \")\");\n+                oa.shouldContain(\"spin_last_pid: Invalid argument (\" + lastPid + \")\");\n@@ -104,1 +110,1 @@\n-        System.out.println(\"Current PID = \" + ProcessHandle.current().pid());\n+        System.out.println(CURRENT_PID_MESSAGE + ProcessHandle.current().pid());\n","filename":"test\/jdk\/jdk\/crac\/ContainerPidAdjustmentTest.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"}]}