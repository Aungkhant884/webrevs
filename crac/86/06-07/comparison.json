{"files":[{"patch":"@@ -2100,1 +2100,1 @@\n-  product(uint, CRaCMinPid, 1,                                              \\\n+  product(uint, CRaCMinPid, 128,                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -348,1 +348,4 @@\n-    if (is_checkpoint && (1 == getpid() || is_min_pid_set)) {\n+    const int is_min_pid_valid = !is_min_pid_set || 0 < crac_min_pid;\n+    if (is_checkpoint && is_min_pid_valid) {\n+        const int crac_min_pid_default = 128;\n+        const int min_pid = is_min_pid_set ? crac_min_pid : crac_min_pid_default;\n@@ -350,1 +353,1 @@\n-        if (is_min_pid_set && 0 < crac_min_pid && getpid() < crac_min_pid) {\n+        if (1 == getpid() || (is_min_pid_set && getpid() < min_pid)) {\n@@ -353,6 +356,8 @@\n-            const int res = set_last_pid(crac_min_pid);\n-            if (EPERM == res || EACCES == res || EROFS == res) {\n-                spin_last_pid(crac_min_pid);\n-            } else if (0 != res) {\n-                fprintf(stderr, \"set_last_pid: %s\\n\", strerror(res));\n-                exit(1);\n+            {\n+                const int res = set_last_pid(min_pid);\n+                if (EPERM == res || EACCES == res || EROFS == res) {\n+                    spin_last_pid(min_pid);\n+                } else if (0 != res) {\n+                    fprintf(stderr, \"set_last_pid: %s\\n\", strerror(res));\n+                    exit(1);\n+                }\n@@ -360,1 +365,0 @@\n-        }\n@@ -362,13 +366,20 @@\n-        \/\/ Avoid unexpected process completion when checkpointing under docker container run\n-        \/\/ or when adjusting PID for checkpointed process\n-        \/\/ by creating the main process waiting for children before exit.\n-        g_child_pid = fork();\n-        if (0 == g_child_pid && is_min_pid_set && getpid() < crac_min_pid) {\n-            fprintf(stderr, \"Error: Can't adjust PID to min PID %d, current PID %d\\n\", crac_min_pid, (int)getpid());\n-            exit(1);\n-        }\n-        if (0 < g_child_pid) {\n-            \/\/ The main process should forward signals to the child.\n-            setup_sighandler();\n-            const int status = wait_for_children();\n-            exit(status);\n+            \/\/ Avoid unexpected process completion when checkpointing under docker container run\n+            \/\/ by creating the main process waiting for children before exit.\n+            g_child_pid = fork();\n+            if (0 == g_child_pid && getpid() < min_pid) {\n+                if (is_min_pid_set) {\n+                    fprintf(stderr, \"Error: Can't adjust PID to min PID %d, current PID %d\\n\", min_pid, (int)getpid());\n+                    exit(1);\n+                } else {\n+                    fprintf(stderr,\n+                            \"Warning: Can't adjust PID to min PID %d, current PID %d.\\n\"\n+                            \"This message can be suppressed by '-XX:CRaCMinPid=1' option\\n\",\n+                            min_pid, (int)getpid());\n+                }\n+            }\n+            if (0 < g_child_pid) {\n+                \/\/ The main process should forward signals to the child.\n+                setup_sighandler();\n+                const int status = wait_for_children();\n+                exit(status);\n+            }\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":33,"deletions":22,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   128     true   128\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   100     true   100\n@@ -45,0 +45,1 @@\n+ * @run driver\/timeout=60 jdk.test.lib.crac.CracTest   2000    true   2000   1000\n@@ -74,2 +75,2 @@\n-            .containerUsePrivileged(usePrivilegedContainer)\n-            .vmOption(\"-XX:CRaCMinPid=\" + lastPid);\n+            .vmOption(\"-XX:CRaCMinPid=\" + lastPid)\n+            .containerUsePrivileged(usePrivilegedContainer);\n","filename":"test\/jdk\/jdk\/crac\/ContainerPidAdjustmentTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}