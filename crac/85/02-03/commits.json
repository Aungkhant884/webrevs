[{"commit":{"message":"Merge remote-tracking branch 'origin\/crac' into timed_wait"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"}],"sha":"4ddd1f05b79759154d540211cac107baa9c122af"},{"commit":{"message":"Don't use OS thread state"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"}],"sha":"960fa07512d382e26f4f8711c207c774a2ff115a"},{"commit":{"message":"Inline Thread::interrupt"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"}],"sha":"df9ed0922da533fe7b087ae16717e827c7da0037"},{"commit":{"message":"Use Threads::java_threads_do, check spurious timeouts"},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"}],"sha":"bae1c541757962743bf35722dd502048527598ed"},{"commit":{"message":"Wake up all TIMED_WAITING threads after restore\n\nThreads that enter sleep or timed parking use absolute monotonic time\nfor pthread_cond_wait(). The specification permits spurious wakeups;\nimplementation either handles that transparently or propagates\nthe wakeup.\n\nThis commit does not handle timed waiting in non-Java threads other than\nWatcherThread."},"files":[{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"}],"sha":"4bf707b6a9cddc87186e1f3b293ebef13bd4209a"}]