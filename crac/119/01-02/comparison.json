{"files":[{"patch":"@@ -66,1 +66,0 @@\n-static int checkpoint_fd = -1;\n@@ -1359,3 +1358,6 @@\n-  void *anon = ::mmap(nullptr, PerfMemory::capacity(), PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANONYMOUS, -1, 0);\n-  if (anon == MAP_FAILED) {\n-    tty->print_cr(\"Cannot allocate new memory for perfdata: %s\", os::strerror(errno));\n+  char path[JVM_MAXPATHLEN];\n+  int pathlen = snprintf(path, sizeof(path),\"%s\/%s\", checkpoint_path, perfdata_name());\n+\n+  RESTARTABLE(::open(path, O_RDWR|O_CREAT|O_NOFOLLOW, S_IRUSR|S_IWUSR), checkpoint_fd);\n+  if (checkpoint_fd < 0) {\n+    tty->print_cr(\"cannot open checkpoint perfdata: %s\", os::strerror(errno));\n@@ -1364,7 +1366,11 @@\n-  \/\/ Note: we might be losing updates that happen between this copy and mremap\n-  \/\/ TODO: consider acquiring PeriodicTask_lock around this\n-  memcpy(anon, PerfMemory::start(), PerfMemory::used());\n-  if (mremap(anon, PerfMemory::capacity(), PerfMemory::capacity(), MREMAP_FIXED | MREMAP_MAYMOVE, PerfMemory::start()) == MAP_FAILED) {\n-    tty->print_cr(\"Cannot remap perfdata memory as anonymous: %s\", os::strerror(errno));\n-    if (munmap(anon, PerfMemory::capacity())) {\n-      tty->print_cr(\"Cannot unmap unused private perfdata memory: %s\", os::strerror(errno));\n+\n+  char* p = PerfMemory::start();\n+  size_t len = PerfMemory::capacity();\n+  do {\n+    int result;\n+    RESTARTABLE(::write(checkpoint_fd, p, len), result);\n+    if (result == OS_ERR) {\n+      tty->print_cr(\"cannot write data to checkpoint perfdata file: %s\", os::strerror(errno));\n+      ::close(checkpoint_fd);\n+      checkpoint_fd = -1;\n+      return false;\n@@ -1372,0 +1378,10 @@\n+    p += result;\n+    len -= (size_t)result;\n+  } while (0 < len);\n+\n+  void* mmapret = ::mmap(PerfMemory::start(), PerfMemory::capacity(),\n+      PROT_READ|PROT_WRITE, MAP_FIXED|MAP_SHARED, checkpoint_fd, 0);\n+  if (MAP_FAILED == mmapret) {\n+    tty->print_cr(\"cannot mmap checkpoint perfdata file: %s\", os::strerror(errno));\n+    ::close(checkpoint_fd);\n+    checkpoint_fd = -1;\n@@ -1381,0 +1397,4 @@\n+  if (checkpoint_fd < 0) {\n+    return true;\n+  }\n+\n@@ -1391,3 +1411,1 @@\n-    tty->print_cr(\"Cannot open shared perfdata file: %s\", os::strerror(errno));\n-    return false;\n-  }\n+    tty->print_cr(\"cannot open restore perfdata file: %s\", os::strerror(errno));\n@@ -1395,10 +1413,5 @@\n-  if (::ftruncate(fd, PerfMemory::capacity())) {\n-    tty->print_cr(\"Cannot restore (ftruncate) perfdata file size: %s\", os::strerror(errno));\n-    ::close(fd);\n-    return false;\n-  }\n-\n-  void* shared = ::mmap(nullptr, PerfMemory::capacity(), PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);\n-  if (MAP_FAILED == shared) {\n-    tty->print_cr(\"cannot mmap shared perfdata file: %s\", os::strerror(errno));\n-    ::close(fd);\n+    void* mmapret = ::mmap(PerfMemory::start(), PerfMemory::capacity(),\n+        PROT_READ|PROT_WRITE, MAP_FIXED|MAP_PRIVATE, checkpoint_fd, 0);\n+    if (MAP_FAILED == mmapret) {\n+      tty->print_cr(\"cannot remap checkpoint perfdata file: %s\", os::strerror(errno));\n+    }\n@@ -1407,1 +1420,0 @@\n-  ::close(fd);\n@@ -1409,6 +1421,9 @@\n-  \/\/ Here is another place where we might lose the update\n-  memcpy(shared, PerfMemory::start(), PerfMemory::used());\n-  if (::mremap(shared, PerfMemory::capacity(), PerfMemory::capacity(), MREMAP_FIXED | MREMAP_MAYMOVE, PerfMemory::start()) == MAP_FAILED) {\n-    tty->print_cr(\"Cannot remap shared perfdata: %s\", os::strerror(errno));\n-    if (munmap(shared, PerfMemory::capacity())) {\n-      tty->print_cr(\"Cannot unmap the shared memory: %s\", os::strerror(errno));\n+  char* p = PerfMemory::start();\n+  size_t len = PerfMemory::capacity();\n+  do {\n+    int result;\n+    RESTARTABLE(::write(fd, p, len), result);\n+    if (result == OS_ERR) {\n+      tty->print_cr(\"cannot write data to restore perfdata file: %s\", os::strerror(errno));\n+      ::close(fd);\n+      return false;\n@@ -1416,0 +1431,9 @@\n+    p += result;\n+    len -= (size_t)result;\n+  } while (0 < len);\n+\n+  void* mmapret = ::mmap(PerfMemory::start(), PerfMemory::capacity(),\n+      PROT_READ|PROT_WRITE, MAP_FIXED|MAP_SHARED, fd, 0);\n+  if (MAP_FAILED == mmapret) {\n+    tty->print_cr(\"cannot mmap restore perfdata file: %s\", os::strerror(errno));\n+    ::close(fd);\n@@ -1419,0 +1443,3 @@\n+  ::close(fd);\n+  ::close(checkpoint_fd);\n+  checkpoint_fd = -1;\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":58,"deletions":31,"binary":false,"changes":89,"status":"modified"}]}