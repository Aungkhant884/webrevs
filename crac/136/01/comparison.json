{"files":[{"patch":"@@ -47,4 +47,2 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-# include <link.h>\n-# include <sys\/wait.h>\n-#endif\n+#include <link.h> \/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#include <sys\/wait.h> \/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -858,2 +856,1 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -876,0 +873,1 @@\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -883,0 +881,1 @@\n+\/\/ This macro is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -885,0 +884,1 @@\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -899,2 +899,2 @@\n-      if (close(fds.readfd))\n-        vm_exit_during_initialization(err_msgt(\"Error closing read pipe in child: %m\"));\n+      if (close(fds.readfd)) {\n+        vm_exit_during_initialization(err_msg(\"Error closing read pipe in child: %m\"));\n@@ -919,0 +919,1 @@\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -932,2 +933,0 @@\n-#endif \/\/ !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-\n@@ -945,3 +944,5 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-    if (ShowCPUFeatures) {\n-      tty->print_cr(\"Environment variable already set, both glibc CPU_FEATURE_ACTIVE and ld.so --list-diagnostics are unavailable - re-exec suppressed: \" TUNABLES_NAME \"=%s\", env);\n+    if (!INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+      if (ShowCPUFeatures) {\n+        tty->print_cr(\"Environment variable already set, both glibc CPU_FEATURE_ACTIVE and ld.so --list-diagnostics are unavailable - re-exec suppressed: \" TUNABLES_NAME \"=%s\", env);\n+      }\n+      return true;\n@@ -949,2 +950,0 @@\n-    return true;\n-#endif\n@@ -1047,1 +1046,1 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+  \/\/ This block is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -1066,35 +1065,42 @@\n-  const char *arg0 = ld_so_name();\n-  pid_t f_child;\n-  FILE *f = popen_r(arg0, &f_child);\n-  if (!f)\n-    vm_exit_during_initialization(err_msg(\"Cannot popen %s \" ARG1 \": %m\", arg0));\n-  for (;;) {\n-    char line[LINE_MAX];\n-    char *s = fgets(line, sizeof(line), f);\n-    if (!s)\n-      break;\n-    s = line;\n-    \/\/ x86.cpu_features.features[0x0].active[0x2]=0x7ed83203\n-    const char prefix[] = \"x86.cpu_features.features[\";\n-    if (strncmp(s, prefix, sizeof(prefix) - 1) != 0)\n-      continue;\n-    s += sizeof(prefix) - 1;\n-    unsigned long index = strtoul(s, &s, 0);\n-    if (index >= index_max)\n-      continue;\n-    const char mid[] = \"].active[\";\n-    if (strncmp(s, mid, sizeof(mid) - 1) != 0)\n-      continue;\n-    s += sizeof(mid) - 1;\n-    unsigned long reg = strtoul(s, &s, 0);\n-    if (reg >= reg_max)\n-      continue;\n-    if (s[0] != ']' || s[1] != '=')\n-      continue;\n-    s += 2;\n-    unsigned long val = strtoul(s, &s, 0);\n-    if (val > UINT_MAX)\n-      continue;\n-    if (s[0] != '\\n' || s[1] != 0)\n-      continue;\n-    active[index][reg] = val;\n+  if (INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+    const char *arg0 = ld_so_name();\n+    pid_t f_child;\n+    FILE *f = popen_r(arg0, &f_child);\n+    if (!f)\n+      vm_exit_during_initialization(err_msg(\"Cannot popen %s \" ARG1 \": %m\", arg0));\n+    for (;;) {\n+      char line[LINE_MAX];\n+      char *s = fgets(line, sizeof(line), f);\n+      if (!s)\n+        break;\n+      s = line;\n+      \/\/ x86.cpu_features.features[0x0].active[0x2]=0x7ed83203\n+      const char prefix[] = \"x86.cpu_features.features[\";\n+      if (strncmp(s, prefix, sizeof(prefix) - 1) != 0)\n+        continue;\n+      s += sizeof(prefix) - 1;\n+      unsigned long index = strtoul(s, &s, 0);\n+      if (index >= index_max)\n+        continue;\n+      const char mid[] = \"].active[\";\n+      if (strncmp(s, mid, sizeof(mid) - 1) != 0)\n+        continue;\n+      s += sizeof(mid) - 1;\n+      unsigned long reg = strtoul(s, &s, 0);\n+      if (reg >= reg_max)\n+        continue;\n+      if (s[0] != ']' || s[1] != '=')\n+        continue;\n+      s += 2;\n+      unsigned long val = strtoul(s, &s, 0);\n+      if (val > UINT_MAX)\n+        continue;\n+      if (s[0] != '\\n' || s[1] != 0)\n+        continue;\n+      active[index][reg] = val;\n+    }\n+    if (ferror(f))\n+      vm_exit_during_initialization(err_msg(\"Error reading popen-ed %s \" ARG1 \": %m\", arg0));\n+    if (!feof(f))\n+      vm_exit_during_initialization(err_msg(\"EOF not reached on popen-ed %s \" ARG1, arg0));\n+    pclose_r(arg0, f, f_child);\n@@ -1102,5 +1108,0 @@\n-  if (ferror(f))\n-    vm_exit_during_initialization(err_msg(\"Error reading popen-ed %s \" ARG1 \": %m\", arg0));\n-  if (!feof(f))\n-    vm_exit_during_initialization(err_msg(\"EOF not reached on popen-ed %s \" ARG1, arg0));\n-  pclose_r(arg0, f, f_child);\n@@ -1108,1 +1109,0 @@\n-#endif \/\/ INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -1219,1 +1219,1 @@\n-#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE6(kind, hotspotglibc, hotspot_field, def)\n+#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE6(kind, hotspotglibc, hotspot_union, def)\n@@ -1248,1 +1248,2 @@\n-  EXCESSIVE(GLIBC, IBT     , ibt     , DEF_SefCpuid7Edx);\n+  EXCESSIVE(CPU  , CET_IBT , cet_ibt , DEF_SefCpuid7Edx);\n+  EXCESSIVE(CPU  , CET_SS  , cet_ss  , DEF_SefCpuid7Ecx);\n@@ -1251,1 +1252,0 @@\n-  EXCESSIVE(GLIBC, SHSTK   , shstk   , DEF_SefCpuid7Ecx);\n@@ -1261,12 +1261,12 @@\n-#define GLIBC_DISABLE(kind, hotspot_glibc) do {                                                                                                 \\\n-    assert(!(PASTE_TOKENS(disable_handled_, kind) & PASTE_TOKENS3(kind, _, hotspot_glibc)), \"already used \" STR(kind) \"_\" STR(hotspot_glibc) ); \\\n-    DEBUG_ONLY(PASTE_TOKENS(disable_handled_, kind) |= PASTE_TOKENS3(kind, _, hotspot_glibc));                                                  \\\n-    if (PASTE_TOKENS(disable_, kind) & PASTE_TOKENS3(kind, _, hotspot_glibc)) {                                                                 \\\n-      const char str[] = \",-\" STR(hotspot_glibc);                                                                                               \\\n-      size_t remains = disable_str + sizeof(disable_str) - disable_end;                                                                         \\\n-      strncpy(disable_end, str, remains);                                                                                                       \\\n-      size_t len = strnlen(disable_end, remains);                                                                                               \\\n-      remains -= len;                                                                                                                           \\\n-      assert(remains > 0, \"internal error: disable_str overflow\");                                                                              \\\n-      disable_end += len;                                                                                                                       \\\n-    }                                                                                                                                           \\\n+#define GLIBC_DISABLE2(kind, hotspot, glibc) do {                                                                                   \\\n+    assert(!(PASTE_TOKENS(disable_handled_, kind) & PASTE_TOKENS3(kind, _, hotspot)), \"already used \" STR(kind) \"_\" STR(hotspot) ); \\\n+    DEBUG_ONLY(PASTE_TOKENS(disable_handled_, kind) |= PASTE_TOKENS3(kind, _, hotspot));                                            \\\n+    if (PASTE_TOKENS(disable_, kind) & PASTE_TOKENS3(kind, _, hotspot)) {                                                           \\\n+      const char str[] = \",-\" STR(glibc);                                                                                           \\\n+      size_t remains = disable_str + sizeof(disable_str) - disable_end;                                                             \\\n+      strncpy(disable_end, str, remains);                                                                                           \\\n+      size_t len = strnlen(disable_end, remains);                                                                                   \\\n+      remains -= len;                                                                                                               \\\n+      assert(remains > 0, \"internal error: disable_str overflow\");                                                                  \\\n+      disable_end += len;                                                                                                           \\\n+    }                                                                                                                               \\\n@@ -1274,0 +1274,1 @@\n+#define GLIBC_DISABLE(kind, hotspot_glibc) GLIBC_DISABLE2(kind, hotspot_glibc, hotspot_glibc)\n@@ -1296,1 +1297,2 @@\n-  GLIBC_DISABLE(GLIBC, IBT)\n+  GLIBC_DISABLE2(CPU , CET_IBT, IBT)\n+  GLIBC_DISABLE2(CPU , CET_SS , SHSTK)\n@@ -1299,1 +1301,0 @@\n-  GLIBC_DISABLE(GLIBC, SHSTK)\n@@ -1349,1 +1350,0 @@\n-  GLIBC_UNSUPPORTED(CPU  , CET_IBT          );\n@@ -2856,4 +2856,4 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-          features_expected =       features_saved;\n-    glibc_features_expected = glibc_features_saved;\n-#endif\n+    if (!INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+            features_expected =       features_saved;\n+      glibc_features_expected = glibc_features_saved;\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":79,"deletions":79,"binary":false,"changes":158,"status":"modified"},{"patch":"@@ -411,2 +411,0 @@\n-    decl(IBT,               \"ibt\",                3) \\\n-    decl(SHSTK,             \"shstk\",              4) \/* Also known as cet_ss *\/ \\\n@@ -570,4 +568,0 @@\n-      if (sef_cpuid7_ecx.bits.cet_ss != 0)\n-        result |= GLIBC_SHSTK;\n-      if (sef_cpuid7_edx.bits.cet_ibt != 0)\n-        result |= GLIBC_IBT;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}