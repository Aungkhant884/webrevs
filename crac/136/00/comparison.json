{"files":[{"patch":"@@ -47,4 +47,2 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-# include <link.h>\n-# include <sys\/wait.h>\n-#endif\n+#include <link.h> \/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+#include <sys\/wait.h> \/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -858,2 +856,1 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-\n+\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -876,0 +873,1 @@\n+\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -883,0 +881,1 @@\n+\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -885,0 +884,1 @@\n+\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -899,2 +899,2 @@\n-      if (close(fds.readfd))\n-        vm_exit_during_initialization(err_msgt(\"Error closing read pipe in child: %m\"));\n+      if (close(fds.readfd)) {\n+        vm_exit_during_initialization(err_msg(\"Error closing read pipe in child: %m\"));\n@@ -919,0 +919,1 @@\n+\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -932,2 +933,0 @@\n-#endif \/\/ !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-\n@@ -945,3 +944,5 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-    if (ShowCPUFeatures) {\n-      tty->print_cr(\"Environment variable already set, both glibc CPU_FEATURE_ACTIVE and ld.so --list-diagnostics are unavailable - re-exec suppressed: \" TUNABLES_NAME \"=%s\", env);\n+    if (!INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+      if (ShowCPUFeatures) {\n+        tty->print_cr(\"Environment variable already set, both glibc CPU_FEATURE_ACTIVE and ld.so --list-diagnostics are unavailable - re-exec suppressed: \" TUNABLES_NAME \"=%s\", env);\n+      }\n+      return true;\n@@ -949,2 +950,0 @@\n-    return true;\n-#endif\n@@ -1047,54 +1046,60 @@\n-#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-  \/\/ sysdeps\/x86\/include\/cpu-features.h CPUID_INDEX_14_ECX_0 == 8\n-  const int CPUID_INDEX_CEIL = 8;\n-  \/\/ \/usr\/include\/bits\/platform\/x86.h\n-  enum\n-  {\n-    CPUID_INDEX_1 = 0,\n-    CPUID_INDEX_7,\n-    CPUID_INDEX_80000001,\n-    CPUID_INDEX_D_ECX_1,\n-    CPUID_INDEX_80000007,\n-    CPUID_INDEX_80000008,\n-    CPUID_INDEX_7_ECX_1,\n-    CPUID_INDEX_19,\n-    CPUID_INDEX_14_ECX_0\n-  };\n-  const int index_max = CPUID_INDEX_CEIL + 1;\n-  enum { eax = 0, ebx, ecx, edx, reg_max };\n-  unsigned active[index_max][reg_max] = { 0 };\n-  const char *arg0 = ld_so_name();\n-  pid_t f_child;\n-  FILE *f = popen_r(arg0, &f_child);\n-  if (!f)\n-    vm_exit_during_initialization(err_msg(\"Cannot popen %s \" ARG1 \": %m\", arg0));\n-  for (;;) {\n-    char line[LINE_MAX];\n-    char *s = fgets(line, sizeof(line), f);\n-    if (!s)\n-      break;\n-    s = line;\n-    \/\/ x86.cpu_features.features[0x0].active[0x2]=0x7ed83203\n-    const char prefix[] = \"x86.cpu_features.features[\";\n-    if (strncmp(s, prefix, sizeof(prefix) - 1) != 0)\n-      continue;\n-    s += sizeof(prefix) - 1;\n-    unsigned long index = strtoul(s, &s, 0);\n-    if (index >= index_max)\n-      continue;\n-    const char mid[] = \"].active[\";\n-    if (strncmp(s, mid, sizeof(mid) - 1) != 0)\n-      continue;\n-    s += sizeof(mid) - 1;\n-    unsigned long reg = strtoul(s, &s, 0);\n-    if (reg >= reg_max)\n-      continue;\n-    if (s[0] != ']' || s[1] != '=')\n-      continue;\n-    s += 2;\n-    unsigned long val = strtoul(s, &s, 0);\n-    if (val > UINT_MAX)\n-      continue;\n-    if (s[0] != '\\n' || s[1] != 0)\n-      continue;\n-    active[index][reg] = val;\n+  if (INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+    \/\/ sysdeps\/x86\/include\/cpu-features.h CPUID_INDEX_14_ECX_0 == 8\n+    const int CPUID_INDEX_CEIL = 8;\n+    \/\/ \/usr\/include\/bits\/platform\/x86.h\n+    enum\n+    {\n+      CPUID_INDEX_1 = 0,\n+      CPUID_INDEX_7,\n+      CPUID_INDEX_80000001,\n+      CPUID_INDEX_D_ECX_1,\n+      CPUID_INDEX_80000007,\n+      CPUID_INDEX_80000008,\n+      CPUID_INDEX_7_ECX_1,\n+      CPUID_INDEX_19,\n+      CPUID_INDEX_14_ECX_0\n+    };\n+    const int index_max = CPUID_INDEX_CEIL + 1;\n+    enum { eax = 0, ebx, ecx, edx, reg_max };\n+    unsigned active[index_max][reg_max] = { 0 };\n+    const char *arg0 = ld_so_name();\n+    pid_t f_child;\n+    FILE *f = popen_r(arg0, &f_child);\n+    if (!f)\n+      vm_exit_during_initialization(err_msg(\"Cannot popen %s \" ARG1 \": %m\", arg0));\n+    for (;;) {\n+      char line[LINE_MAX];\n+      char *s = fgets(line, sizeof(line), f);\n+      if (!s)\n+        break;\n+      s = line;\n+      \/\/ x86.cpu_features.features[0x0].active[0x2]=0x7ed83203\n+      const char prefix[] = \"x86.cpu_features.features[\";\n+      if (strncmp(s, prefix, sizeof(prefix) - 1) != 0)\n+        continue;\n+      s += sizeof(prefix) - 1;\n+      unsigned long index = strtoul(s, &s, 0);\n+      if (index >= index_max)\n+        continue;\n+      const char mid[] = \"].active[\";\n+      if (strncmp(s, mid, sizeof(mid) - 1) != 0)\n+        continue;\n+      s += sizeof(mid) - 1;\n+      unsigned long reg = strtoul(s, &s, 0);\n+      if (reg >= reg_max)\n+        continue;\n+      if (s[0] != ']' || s[1] != '=')\n+        continue;\n+      s += 2;\n+      unsigned long val = strtoul(s, &s, 0);\n+      if (val > UINT_MAX)\n+        continue;\n+      if (s[0] != '\\n' || s[1] != 0)\n+        continue;\n+      active[index][reg] = val;\n+    }\n+    if (ferror(f))\n+      vm_exit_during_initialization(err_msg(\"Error reading popen-ed %s \" ARG1 \": %m\", arg0));\n+    if (!feof(f))\n+      vm_exit_during_initialization(err_msg(\"EOF not reached on popen-ed %s \" ARG1, arg0));\n+    pclose_r(arg0, f, f_child);\n@@ -1102,5 +1107,0 @@\n-  if (ferror(f))\n-    vm_exit_during_initialization(err_msg(\"Error reading popen-ed %s \" ARG1 \": %m\", arg0));\n-  if (!feof(f))\n-    vm_exit_during_initialization(err_msg(\"EOF not reached on popen-ed %s \" ARG1, arg0));\n-  pclose_r(arg0, f, f_child);\n@@ -1108,1 +1108,0 @@\n-#endif \/\/ INCLUDE_LD_SO_LIST_DIAGNOSTICS\n@@ -2856,4 +2855,4 @@\n-#if !INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS\n-          features_expected =       features_saved;\n-    glibc_features_expected = glibc_features_saved;\n-#endif\n+    if (!INCLUDE_CPU_FEATURE_ACTIVE && !INCLUDE_LD_SO_LIST_DIAGNOSTICS) {\n+            features_expected =       features_saved;\n+      glibc_features_expected = glibc_features_saved;\n+    }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":78,"deletions":79,"binary":false,"changes":157,"status":"modified"}]}