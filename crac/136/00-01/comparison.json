{"files":[{"patch":"@@ -856,1 +856,1 @@\n-\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -873,1 +873,1 @@\n-\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -881,1 +881,1 @@\n-\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\/\/ This macro is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -884,1 +884,1 @@\n-\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -919,1 +919,1 @@\n-\/\/#if INCLUDE_LD_SO_LIST_DIAGNOSTICS\n+\/\/ This function is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n@@ -1046,0 +1046,19 @@\n+  \/\/ This block is used only for INCLUDE_LD_SO_LIST_DIAGNOSTICS.\n+  \/\/ sysdeps\/x86\/include\/cpu-features.h CPUID_INDEX_14_ECX_0 == 8\n+  const int CPUID_INDEX_CEIL = 8;\n+  \/\/ \/usr\/include\/bits\/platform\/x86.h\n+  enum\n+  {\n+    CPUID_INDEX_1 = 0,\n+    CPUID_INDEX_7,\n+    CPUID_INDEX_80000001,\n+    CPUID_INDEX_D_ECX_1,\n+    CPUID_INDEX_80000007,\n+    CPUID_INDEX_80000008,\n+    CPUID_INDEX_7_ECX_1,\n+    CPUID_INDEX_19,\n+    CPUID_INDEX_14_ECX_0\n+  };\n+  const int index_max = CPUID_INDEX_CEIL + 1;\n+  enum { eax = 0, ebx, ecx, edx, reg_max };\n+  unsigned active[index_max][reg_max] = { 0 };\n@@ -1047,18 +1066,0 @@\n-    \/\/ sysdeps\/x86\/include\/cpu-features.h CPUID_INDEX_14_ECX_0 == 8\n-    const int CPUID_INDEX_CEIL = 8;\n-    \/\/ \/usr\/include\/bits\/platform\/x86.h\n-    enum\n-    {\n-      CPUID_INDEX_1 = 0,\n-      CPUID_INDEX_7,\n-      CPUID_INDEX_80000001,\n-      CPUID_INDEX_D_ECX_1,\n-      CPUID_INDEX_80000007,\n-      CPUID_INDEX_80000008,\n-      CPUID_INDEX_7_ECX_1,\n-      CPUID_INDEX_19,\n-      CPUID_INDEX_14_ECX_0\n-    };\n-    const int index_max = CPUID_INDEX_CEIL + 1;\n-    enum { eax = 0, ebx, ecx, edx, reg_max };\n-    unsigned active[index_max][reg_max] = { 0 };\n@@ -1218,1 +1219,1 @@\n-#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE6(kind, hotspotglibc, hotspot_field, def)\n+#define EXCESSIVE(kind, hotspotglibc, hotspot_union, def...) EXCESSIVE6(kind, hotspotglibc, hotspot_union, def)\n@@ -1247,1 +1248,2 @@\n-  EXCESSIVE(GLIBC, IBT     , ibt     , DEF_SefCpuid7Edx);\n+  EXCESSIVE(CPU  , CET_IBT , cet_ibt , DEF_SefCpuid7Edx);\n+  EXCESSIVE(CPU  , CET_SS  , cet_ss  , DEF_SefCpuid7Ecx);\n@@ -1250,1 +1252,0 @@\n-  EXCESSIVE(GLIBC, SHSTK   , shstk   , DEF_SefCpuid7Ecx);\n@@ -1260,12 +1261,12 @@\n-#define GLIBC_DISABLE(kind, hotspot_glibc) do {                                                                                                 \\\n-    assert(!(PASTE_TOKENS(disable_handled_, kind) & PASTE_TOKENS3(kind, _, hotspot_glibc)), \"already used \" STR(kind) \"_\" STR(hotspot_glibc) ); \\\n-    DEBUG_ONLY(PASTE_TOKENS(disable_handled_, kind) |= PASTE_TOKENS3(kind, _, hotspot_glibc));                                                  \\\n-    if (PASTE_TOKENS(disable_, kind) & PASTE_TOKENS3(kind, _, hotspot_glibc)) {                                                                 \\\n-      const char str[] = \",-\" STR(hotspot_glibc);                                                                                               \\\n-      size_t remains = disable_str + sizeof(disable_str) - disable_end;                                                                         \\\n-      strncpy(disable_end, str, remains);                                                                                                       \\\n-      size_t len = strnlen(disable_end, remains);                                                                                               \\\n-      remains -= len;                                                                                                                           \\\n-      assert(remains > 0, \"internal error: disable_str overflow\");                                                                              \\\n-      disable_end += len;                                                                                                                       \\\n-    }                                                                                                                                           \\\n+#define GLIBC_DISABLE2(kind, hotspot, glibc) do {                                                                                   \\\n+    assert(!(PASTE_TOKENS(disable_handled_, kind) & PASTE_TOKENS3(kind, _, hotspot)), \"already used \" STR(kind) \"_\" STR(hotspot) ); \\\n+    DEBUG_ONLY(PASTE_TOKENS(disable_handled_, kind) |= PASTE_TOKENS3(kind, _, hotspot));                                            \\\n+    if (PASTE_TOKENS(disable_, kind) & PASTE_TOKENS3(kind, _, hotspot)) {                                                           \\\n+      const char str[] = \",-\" STR(glibc);                                                                                           \\\n+      size_t remains = disable_str + sizeof(disable_str) - disable_end;                                                             \\\n+      strncpy(disable_end, str, remains);                                                                                           \\\n+      size_t len = strnlen(disable_end, remains);                                                                                   \\\n+      remains -= len;                                                                                                               \\\n+      assert(remains > 0, \"internal error: disable_str overflow\");                                                                  \\\n+      disable_end += len;                                                                                                           \\\n+    }                                                                                                                               \\\n@@ -1273,0 +1274,1 @@\n+#define GLIBC_DISABLE(kind, hotspot_glibc) GLIBC_DISABLE2(kind, hotspot_glibc, hotspot_glibc)\n@@ -1295,1 +1297,2 @@\n-  GLIBC_DISABLE(GLIBC, IBT)\n+  GLIBC_DISABLE2(CPU , CET_IBT, IBT)\n+  GLIBC_DISABLE2(CPU , CET_SS , SHSTK)\n@@ -1298,1 +1301,0 @@\n-  GLIBC_DISABLE(GLIBC, SHSTK)\n@@ -1348,1 +1350,0 @@\n-  GLIBC_UNSUPPORTED(CPU  , CET_IBT          );\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":42,"deletions":41,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -411,2 +411,0 @@\n-    decl(IBT,               \"ibt\",                3) \\\n-    decl(SHSTK,             \"shstk\",              4) \/* Also known as cet_ss *\/ \\\n@@ -570,4 +568,0 @@\n-      if (sef_cpuid7_ecx.bits.cet_ss != 0)\n-        result |= GLIBC_SHSTK;\n-      if (sef_cpuid7_edx.bits.cet_ibt != 0)\n-        result |= GLIBC_IBT;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}