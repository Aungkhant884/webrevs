{"files":[{"patch":"@@ -28,1 +28,0 @@\n-import java.io.InputStream;\n@@ -119,27 +118,0 @@\n-    \/**\n-     * Return resource using the same classloader for the ObjectFactory by\n-     * default or bootclassloader when Security Manager is in place\n-     *\/\n-    public static InputStream getResourceAsStream(final String name) {\n-        if (System.getSecurityManager() != null) {\n-            return getResourceAsStream(null, name);\n-        } else {\n-            return getResourceAsStream(findClassLoader(), name);\n-        }\n-    }\n-\n-    public static InputStream getResourceAsStream(final ClassLoader cl,\n-            final String name) {\n-        return (InputStream) AccessController.doPrivileged(new PrivilegedAction() {\n-            public Object run() {\n-                InputStream ris;\n-                if (cl == null) {\n-                    ris = Object.class.getResourceAsStream(\"\/\" + name);\n-                } else {\n-                    ris = cl.getResourceAsStream(name);\n-                }\n-                return ris;\n-            }\n-        });\n-    }\n-\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/bcel\/internal\/util\/SecuritySupport.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -129,4 +129,0 @@\n-    \/**\n-     * Return resource using the same classloader for the ObjectFactory by\n-     * default or bootclassloader when Security Manager is in place\n-     *\/\n@@ -134,9 +130,0 @@\n-        if (System.getSecurityManager()!=null) {\n-            return getResourceAsStream(null, name);\n-        } else {\n-            return getResourceAsStream(ObjectFactory.findClassLoader(), name);\n-        }\n-    }\n-\n-    public static InputStream getResourceAsStream(final ClassLoader cl,\n-            final String name) {\n@@ -145,7 +132,1 @@\n-                InputStream ris;\n-                if (cl == null) {\n-                    ris = Object.class.getResourceAsStream(\"\/\"+name);\n-                } else {\n-                    ris = cl.getResourceAsStream(name);\n-                }\n-                return ris;\n+                return SecuritySupport.class.getResourceAsStream(\"\/\"+name);\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xalan\/internal\/utils\/SecuritySupport.java","additions":1,"deletions":20,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -121,28 +121,0 @@\n-    \/**\n-     * Return resource using the same classloader for the ObjectFactory by default\n-     * or bootclassloader when Security Manager is in place\n-     *\/\n-    public static InputStream getResourceAsStream(final String name) {\n-        if (System.getSecurityManager()!=null) {\n-            return getResourceAsStream(null, name);\n-        } else {\n-            return getResourceAsStream(ObjectFactory.findClassLoader(), name);\n-        }\n-    }\n-\n-    public static InputStream getResourceAsStream(final ClassLoader cl,\n-            final String name)\n-    {\n-        return (InputStream)\n-        AccessController.doPrivileged(new PrivilegedAction() {\n-            public Object run() {\n-                InputStream ris;\n-                if (cl == null) {\n-                    ris = Object.class.getResourceAsStream(\"\/\"+name);\n-                } else {\n-                    ris = cl.getResourceAsStream(name);\n-                }\n-                return ris;\n-            }\n-        });\n-    }\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xerces\/internal\/utils\/SecuritySupport.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.io.InputStream;\n@@ -117,17 +116,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-            final String name)\n-    {\n-        return (InputStream)\n-        AccessController.doPrivileged(new PrivilegedAction() {\n-            public Object run() {\n-                InputStream ris;\n-                if (cl == null) {\n-                    ris = ClassLoader.getSystemResourceAsStream(name);\n-                } else {\n-                    ris = cl.getResourceAsStream(name);\n-                }\n-                return ris;\n-            }\n-        });\n-    }\n-\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xerces\/internal\/xinclude\/SecuritySupport.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.io.InputStream;\n@@ -117,17 +116,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-            final String name)\n-    {\n-        return (InputStream)\n-        AccessController.doPrivileged(new PrivilegedAction() {\n-            public Object run() {\n-                InputStream ris;\n-                if (cl == null) {\n-                    ris = ClassLoader.getSystemResourceAsStream(name);\n-                } else {\n-                    ris = cl.getResourceAsStream(name);\n-                }\n-                return ris;\n-            }\n-        });\n-    }\n-\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xml\/internal\/serialize\/SecuritySupport.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.org.apache.xpath.internal.objects.XNumber;\n@@ -33,1 +32,0 @@\n-import com.sun.org.apache.xalan.internal.utils.ObjectFactory;\n@@ -71,1 +69,1 @@\n-    loadPropertyFile(XSLT_PROPERTIES, xsltInfo);\n+    loadPropertyFile(xsltInfo);\n@@ -161,1 +159,1 @@\n-   * Retrieve a propery bundle from a specified file\n+   * Retrieve a property bundle from a XSLT_PROPERTIES\n@@ -163,2 +161,0 @@\n-   * @param file The string name of the property file.  The name\n-   * should already be fully qualified as path\/filename\n@@ -167,1 +163,1 @@\n-  public void loadPropertyFile(String file, Properties target)\n+  private void loadPropertyFile(Properties target)\n@@ -171,3 +167,2 @@\n-      \/\/ Use SecuritySupport class to provide priveleged access to property file\n-      InputStream is = SecuritySupport.getResourceAsStream(ObjectFactory.findClassLoader(),\n-                                              file);\n+      \/\/ Use SecuritySupport class to provide privileged access to property file\n+      InputStream is = SecuritySupport.getResourceAsStream(XSLT_PROPERTIES);\n@@ -176,4 +171,3 @@\n-      BufferedInputStream bis = new BufferedInputStream(is);\n-\n-      target.load(bis);  \/\/ and load up the property bag from this\n-      bis.close();  \/\/ close out after reading\n+      try (BufferedInputStream bis = new BufferedInputStream(is)) {\n+          target.load(bis);  \/\/ and load up the property bag from this\n+      }\n","filename":"jaxp\/src\/com\/sun\/org\/apache\/xpath\/internal\/functions\/FuncSystemProperty.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.net.*;\n@@ -31,1 +30,0 @@\n-import java.util.*;\n@@ -80,17 +78,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/datatype\/SecuritySupport.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.net.*;\n@@ -31,1 +30,0 @@\n-import java.util.*;\n@@ -84,17 +82,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/parsers\/SecuritySupport.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.net.*;\n@@ -31,1 +30,0 @@\n-import java.util.*;\n@@ -84,17 +82,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/stream\/SecuritySupport.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.net.*;\n@@ -31,1 +30,0 @@\n-import java.util.*;\n@@ -82,17 +80,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/transform\/SecuritySupport.java","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.net.*;\n@@ -137,17 +136,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/validation\/SecuritySupport.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.net.*;\n@@ -134,17 +133,0 @@\n-    InputStream getResourceAsStream(final ClassLoader cl,\n-                                           final String name)\n-    {\n-        return (InputStream)\n-            AccessController.doPrivileged(new PrivilegedAction() {\n-                public Object run() {\n-                    InputStream ris;\n-                    if (cl == null) {\n-                        ris = Object.class.getResourceAsStream(name);\n-                    } else {\n-                        ris = cl.getResourceAsStream(name);\n-                    }\n-                    return ris;\n-                }\n-            });\n-    }\n-\n","filename":"jaxp\/src\/javax\/xml\/xpath\/SecuritySupport.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-                        ris = Object.class.getResourceAsStream(name);\n+                        ris = SecuritySupport.class.getResourceAsStream(name);\n","filename":"jaxp\/src\/org\/xml\/sax\/helpers\/SecuritySupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}