{"files":[{"patch":"@@ -103,1 +103,1 @@\n-        readCipher.dispose();\n+        this.readCipher.dispose();\n","filename":"jdk\/src\/share\/classes\/sun\/security\/ssl\/InputRecord.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,0 +126,5 @@\n+    \/\/ SSLEngine and SSLSocket\n+    void disposeWriteCipher() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n@@ -173,1 +178,1 @@\n-        writeCipher.dispose();\n+        disposeWriteCipher();\n@@ -197,1 +202,1 @@\n-        writeCipher.dispose();\n+        disposeWriteCipher();\n","filename":"jdk\/src\/share\/classes\/sun\/security\/ssl\/OutputRecord.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -149,0 +149,9 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        if (fragmenter == null) {\n+            writeCipher.dispose();\n+        } else {\n+            fragmenter.queueUpCipherDispose();\n+        }\n+    }\n+\n@@ -359,0 +368,1 @@\n+        boolean         disposeCipher;\n@@ -419,0 +429,9 @@\n+        void queueUpCipherDispose() {\n+            RecordMemo lastMemo = handshakeMemos.peekLast();\n+            if (lastMemo != null) {\n+                lastMemo.disposeCipher = true;\n+            } else {\n+                writeCipher.dispose();\n+            }\n+        }\n+\n@@ -518,0 +537,3 @@\n+            if (memo.disposeCipher) {\n+                memo.encodeCipher.dispose();\n+            }\n","filename":"jdk\/src\/share\/classes\/sun\/security\/ssl\/SSLEngineOutputRecord.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -233,0 +233,5 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        writeCipher.dispose();\n+    }\n+\n","filename":"jdk\/src\/share\/classes\/sun\/security\/ssl\/SSLSocketOutputRecord.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}