{"files":[{"patch":"@@ -330,1 +330,1 @@\n-        return dumpHexBytes(data, 16, \"\\n\", \" \");\n+        return dumpHexBytes(data, data.length, 16, \"\\n\", \" \");\n@@ -344,2 +344,2 @@\n-    private static String dumpHexBytes(byte[] data, int itemsPerLine,\n-            String lineDelim, String itemDelim) {\n+    private static String dumpHexBytes(byte[] data, int dataLen,\n+            int itemsPerLine, String lineDelim, String itemDelim) {\n@@ -348,1 +348,1 @@\n-            for (int i = 0; i < data.length; i++) {\n+            for (int i = 0; i < dataLen; i++) {\n@@ -498,0 +498,1 @@\n+            log(\"Signature algorithm set to \" + sigAlgId.getName());\n@@ -561,0 +562,2 @@\n+            log(\"Response Content-Length field \" +\n+                    (isDisabled ? \"disabled\" : \"enabled\"));\n@@ -743,1 +746,1 @@\n-                        switch (headerTokens[0]) {\n+                        switch (headerTokens[0].toUpperCase()) {\n@@ -748,1 +751,1 @@\n-                                ocspReq = parseHttpOcspGet(headerTokens);\n+                                ocspReq = parseHttpOcspGet(headerTokens, in);\n@@ -782,0 +785,3 @@\n+                out.flush();\n+\n+                log(\"Closing \" + ocspSocket);\n@@ -879,0 +885,2 @@\n+         * @param inStream the input stream from the socket bound to this\n+         * {@code OcspHandler}.\n@@ -887,2 +895,20 @@\n-        private LocalOcspRequest parseHttpOcspGet(String[] headerTokens)\n-                throws IOException, CertificateException {\n+        private LocalOcspRequest parseHttpOcspGet(String[] headerTokens,\n+                InputStream inStream) throws IOException, CertificateException {\n+            \/\/ Before we process the remainder of the GET URL, we should drain\n+            \/\/ the InputStream of any other header data.  We (for now) won't\n+            \/\/ use it, but will display the contents if logging is enabled.\n+            boolean endOfHeader = false;\n+            while (!endOfHeader) {\n+                String[] lineTokens = readLine(inStream).split(\":\", 2);\n+                \/\/ We expect to see a type and value pair delimited by a colon.\n+                if (lineTokens[0].isEmpty()) {\n+                    endOfHeader = true;\n+                } else if (lineTokens.length == 2) {\n+                    log(String.format(\"ReqHdr: %s: %s\", lineTokens[0].trim(),\n+                            lineTokens[1].trim()));\n+                } else {\n+                    \/\/ A colon wasn't found and token 0 should be the whole line\n+                    log(\"ReqHdr: \" + lineTokens[0].trim());\n+                }\n+            }\n+\n@@ -1209,1 +1235,3 @@\n-                sb.append(dumpHexBytes(cid.getIssuerNameHash(), 256, \"\", \"\"));\n+                byte[] cidHashBuf = cid.getIssuerNameHash();\n+                sb.append(dumpHexBytes(cidHashBuf, cidHashBuf.length,\n+                        256, \"\", \"\"));\n@@ -1212,1 +1240,3 @@\n-                sb.append(dumpHexBytes(cid.getIssuerKeyHash(), 256, \"\", \"\"));\n+                cidHashBuf = cid.getIssuerKeyHash();\n+                sb.append(dumpHexBytes(cidHashBuf, cidHashBuf.length,\n+                        256, \"\", \"\"));\n@@ -1552,1 +1582,3 @@\n-                sb.append(dumpHexBytes(certId.getIssuerNameHash(), 256, \"\", \"\"));\n+                byte[] cidHashBuf = certId.getIssuerNameHash();\n+                sb.append(dumpHexBytes(cidHashBuf, cidHashBuf.length,\n+                        256, \"\", \"\"));\n@@ -1555,1 +1587,3 @@\n-                sb.append(dumpHexBytes(certId.getIssuerKeyHash(), 256, \"\", \"\"));\n+                cidHashBuf = certId.getIssuerKeyHash();\n+                sb.append(dumpHexBytes(cidHashBuf, cidHashBuf.length,\n+                        256, \"\", \"\"));\n","filename":"jdk\/test\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":46,"deletions":12,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    static final boolean debug = false;\n+    static final boolean debug = true;\n@@ -70,1 +70,0 @@\n-\n","filename":"jdk\/test\/sun\/security\/provider\/certpath\/OCSP\/OCSPNoContentLength.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}