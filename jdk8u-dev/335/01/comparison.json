{"files":[{"patch":"@@ -97,18 +97,15 @@\n-ifneq ($(OPENJDK_TARGET_OS), windows)\n-  $(eval $(call SetupNativeCompilation,BUILD_LIBJ2GSS, \\\n-      LIBRARY := j2gss, \\\n-      OUTPUT_DIR := $(INSTALL_LIBRARIES_HERE), \\\n-      SRC := $(JDK_TOPDIR)\/src\/share\/native\/sun\/security\/jgss\/wrapper \\\n-          $(JDK_TOPDIR)\/src\/$(OPENJDK_TARGET_OS_API_DIR)\/native\/sun\/security\/jgss\/wrapper, \\\n-      LANG := C, \\\n-      OPTIMIZATION := LOW, \\\n-      CFLAGS := $(CFLAGS_JDKLIB) \\\n-          -I$(JDK_TOPDIR)\/src\/share\/native\/sun\/security\/jgss\/wrapper \\\n-          -I$(JDK_TOPDIR)\/src\/$(OPENJDK_TARGET_OS_API_DIR)\/native\/sun\/security\/jgss\/wrapper, \\\n-      MAPFILE := $(JDK_TOPDIR)\/make\/mapfiles\/libj2gss\/mapfile-vers, \\\n-      LDFLAGS := $(LDFLAGS_JDKLIB) \\\n-          $(call SET_SHARED_LIBRARY_ORIGIN), \\\n-      LDFLAGS_SUFFIX := $(LIBDL), \\\n-      LDFLAGS_SUFFIX_solaris := -lc, \\\n-      OBJECT_DIR := $(JDK_OUTPUTDIR)\/objs\/libj2gss, \\\n-      DEBUG_SYMBOLS := $(DEBUG_ALL_BINARIES)))\n+$(eval $(call SetupNativeCompilation,BUILD_LIBJ2GSS, \\\n+    LIBRARY := j2gss, \\\n+    OUTPUT_DIR := $(INSTALL_LIBRARIES_HERE), \\\n+    SRC := $(JDK_TOPDIR)\/src\/share\/native\/sun\/security\/jgss\/wrapper, \\\n+    LANG := C, \\\n+    OPTIMIZATION := LOW, \\\n+    CFLAGS := $(CFLAGS_JDKLIB) \\\n+        -I$(JDK_TOPDIR)\/src\/share\/native\/sun\/security\/jgss\/wrapper, \\\n+    MAPFILE := $(JDK_TOPDIR)\/make\/mapfiles\/libj2gss\/mapfile-vers, \\\n+    LDFLAGS := $(LDFLAGS_JDKLIB) \\\n+        $(call SET_SHARED_LIBRARY_ORIGIN), \\\n+    LDFLAGS_SUFFIX := $(LIBDL), \\\n+    LDFLAGS_SUFFIX_solaris := -lc, \\\n+    OBJECT_DIR := $(JDK_OUTPUTDIR)\/objs\/libj2gss, \\\n+    DEBUG_SYMBOLS := $(DEBUG_ALL_BINARIES)))\n@@ -116,2 +113,1 @@\n-  BUILD_LIBRARIES += $(BUILD_LIBJ2GSS)\n-endif\n+BUILD_LIBRARIES += $(BUILD_LIBJ2GSS)\n","filename":"jdk\/make\/lib\/SecurityLibraries.gmk","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,8 +49,2 @@\n-                            String osname = System.getProperty(\"os.name\");\n-                            if (osname.startsWith(\"SunOS\") ||\n-                                osname.contains(\"OS X\") ||\n-                                osname.startsWith(\"Linux\")) {\n-                                return new Boolean(System.getProperty\n-                                    (USE_NATIVE_PROP));\n-                            }\n-                            return Boolean.FALSE;\n+                        return Boolean.valueOf(System.getProperty\n+                                (USE_NATIVE_PROP));\n","filename":"jdk\/src\/share\/classes\/sun\/security\/jgss\/GSSManagerImpl.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+    int failed;\n@@ -68,1 +69,1 @@\n-    error = loadNative(libName);\n+    failed = loadNative(libName);\n@@ -71,1 +72,1 @@\n-    if (error == NULL) {\n+    if (!failed) {\n@@ -74,1 +75,26 @@\n-        TRACE0(error);\n+        if (JGSS_DEBUG) {\n+#ifdef WIN32\n+            #define MAX_MSG_SIZE 256\n+            static CHAR szMsgBuf[MAX_MSG_SIZE];\n+            DWORD dwRes;\n+            DWORD dwError = GetLastError();\n+            dwRes = FormatMessage (\n+                    FORMAT_MESSAGE_FROM_SYSTEM,\n+                    NULL,\n+                    dwError,\n+                    0,\n+                    szMsgBuf,\n+                    MAX_MSG_SIZE,\n+                    NULL);\n+            if (0 == dwRes) {\n+                printf(\"GSS-API: Unknown failure %d\\n\", dwError);\n+            } else {\n+                printf(\"GSS-API: %s\\n\",szMsgBuf);\n+            }\n+#else\n+            char* error = dlerror();\n+            if (error) {\n+                TRACE0(error);\n+            }\n+#endif\n+        }\n@@ -91,1 +117,0 @@\n-  jthrowable gssEx;\n@@ -128,2 +153,0 @@\n-  jobject jinetAddr;\n-  jbyteArray value;\n@@ -157,1 +180,0 @@\n-  int i;\n@@ -358,1 +380,1 @@\n-  TRACE1(\"[GSSLibStub_importName] %ld\", (long) nameHdl);\n+  TRACE1(\"[GSSLibStub_importName] %\" PRIuPTR  \"\", (uintptr_t) nameHdl);\n@@ -429,1 +451,1 @@\n-    TRACE1(\"[GSSLibStub_canonicalizeName] MN=%ld\", (long)mnNameHdl);\n+    TRACE1(\"[GSSLibStub_canonicalizeName] MN=%\" PRIuPTR \"\", (uintptr_t)mnNameHdl);\n@@ -599,1 +621,1 @@\n-  TRACE1(\"[GSSLibStub_acquireCred] pCred=%ld\", (long) credHdl);\n+  TRACE1(\"[GSSLibStub_acquireCred] pCred=%\" PRIuPTR \"\", (uintptr_t) credHdl);\n@@ -648,1 +670,1 @@\n-  TRACE1(\"[gss_inquire_cred] %ld\", (long) pCred);\n+  TRACE1(\"[gss_inquire_cred] %\" PRIuPTR \"\", (uintptr_t) pCred);\n@@ -697,1 +719,1 @@\n-  TRACE1(\"[GSSLibStub_getCredName] pName=%ld\", (long) nameHdl);\n+  TRACE1(\"[GSSLibStub_getCredName] pName=%\" PRIuPTR \"\", (uintptr_t) nameHdl);\n@@ -778,1 +800,1 @@\n-  TRACE1(\"[GSSLibStub_importContext] pContext=%ld\", (long) contextHdl);\n+  TRACE1(\"[GSSLibStub_importContext] pContext=%\" PRIuPTR \"\", (uintptr_t) contextHdl);\n@@ -869,2 +891,2 @@\n-  TRACE2( \"[GSSLibStub_initContext] before: pCred=%ld, pContext=%ld\",\n-          (long)credHdl, (long)contextHdl);\n+  TRACE2( \"[GSSLibStub_initContext] before: pCred=%\" PRIuPTR \", pContext=%\" PRIuPTR \"\",\n+          (uintptr_t)credHdl, (uintptr_t)contextHdl);\n@@ -882,2 +904,2 @@\n-  TRACE2(\"[GSSLibStub_initContext] after: pContext=%ld, outToken len=%ld\",\n-            (long)contextHdl, (long)outToken.length);\n+  TRACE2(\"[GSSLibStub_initContext] after: pContext=%\" PRIuPTR \", outToken len=%ld\",\n+            (uintptr_t)contextHdl, (long)outToken.length);\n@@ -891,1 +913,1 @@\n-    TRACE1(\"[GSSLibStub_initContext] set pContext=%ld\", (long)contextHdl);\n+    TRACE1(\"[GSSLibStub_initContext] set pContext=%\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -962,1 +984,0 @@\n-  jbyteArray jresult;\n@@ -986,2 +1007,2 @@\n-  TRACE2( \"[GSSLibStub_acceptContext] before: pCred=%ld, pContext=%ld\",\n-          (long) credHdl, (long) contextHdl);\n+  TRACE2( \"[GSSLibStub_acceptContext] before: pCred=%\" PRIuPTR \", pContext=%\" PRIuPTR \"\",\n+          (uintptr_t) credHdl, (uintptr_t) contextHdl);\n@@ -1003,2 +1024,2 @@\n-  TRACE3(\"[GSSLibStub_acceptContext] after: pCred=%ld, pContext=%ld, pDelegCred=%ld\",\n-        (long)credHdl, (long)contextHdl, (long) delCred);\n+  TRACE3(\"[GSSLibStub_acceptContext] after: pCred=%\" PRIuPTR \", pContext=%\" PRIuPTR \", pDelegCred=%\" PRIuPTR \"\",\n+        (uintptr_t)credHdl, (uintptr_t)contextHdl, (uintptr_t) delCred);\n@@ -1012,1 +1033,1 @@\n-    TRACE1(\"[GSSLibStub_acceptContext] set pContext=%ld\", (long)contextHdl);\n+    TRACE1(\"[GSSLibStub_acceptContext] set pContext=%\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1041,2 +1062,2 @@\n-      TRACE1(\"[GSSLibStub_acceptContext] set targetName=%ld\",\n-              (long)targetName);\n+      TRACE1(\"[GSSLibStub_acceptContext] set targetName=%\" PRIuPTR \"\",\n+              (uintptr_t)targetName);\n@@ -1058,1 +1079,1 @@\n-      TRACE1(\"[GSSLibStub_acceptContext] set srcName=%ld\", (long)srcName);\n+      TRACE1(\"[GSSLibStub_acceptContext] set srcName=%\" PRIuPTR \"\", (uintptr_t)srcName);\n@@ -1093,2 +1114,2 @@\n-        TRACE1(\"[GSSLibStub_acceptContext] set delegatedCred=%ld\",\n-                (long) delCred);\n+        TRACE1(\"[GSSLibStub_acceptContext] set delegatedCred=%\" PRIuPTR \"\",\n+                (uintptr_t) delCred);\n@@ -1147,1 +1168,1 @@\n-  TRACE1(\"[GSSLibStub_inquireContext] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_inquireContext] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1158,2 +1179,2 @@\n-  TRACE2(\"[GSSLibStub_inquireContext] srcName %ld, targetName %ld\",\n-      (long)srcName, (long)targetName);\n+  TRACE2(\"[GSSLibStub_inquireContext] srcName %\" PRIuPTR \", targetName %\" PRIuPTR \"\",\n+      (uintptr_t)srcName, (uintptr_t)targetName);\n@@ -1228,2 +1249,2 @@\n-  TRACE2(\"[GSSLibStub_getContextName] %ld, isSrc=%d\",\n-          (long)contextHdl, isSrc);\n+  TRACE2(\"[GSSLibStub_getContextName] %\" PRIuPTR \", isSrc=%d\",\n+          (uintptr_t)contextHdl, isSrc);\n@@ -1246,1 +1267,1 @@\n-  TRACE1(\"[GSSLibStub_getContextName] pName=%ld\", (long) nameHdl);\n+  TRACE1(\"[GSSLibStub_getContextName] pName=%\" PRIuPTR \"\", (uintptr_t) nameHdl);\n@@ -1266,1 +1287,1 @@\n-  TRACE1(\"[GSSLibStub_getContextTime] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_getContextTime] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1298,1 +1319,1 @@\n-  TRACE1(\"[GSSLibStub_deleteContext] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_deleteContext] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1332,1 +1353,1 @@\n-  TRACE1(\"[GSSLibStub_wrapSizeLimit] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_wrapSizeLimit] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1372,1 +1393,1 @@\n-  TRACE1(\"[GSSLibStub_exportContext] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_exportContext] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1416,1 +1437,1 @@\n-  TRACE1(\"[GSSLibStub_getMic] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_getMic] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1470,1 +1491,1 @@\n-  TRACE1(\"[GSSLibStub_verifyMic] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_verifyMic] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1541,1 +1562,1 @@\n-  TRACE1(\"[GSSLibStub_wrap] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_wrap] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n@@ -1613,1 +1634,1 @@\n-  TRACE1(\"[GSSLibStub_unwrap] %ld\", (long)contextHdl);\n+  TRACE1(\"[GSSLibStub_unwrap] %\" PRIuPTR \"\", (uintptr_t)contextHdl);\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/GSSLibStub.c","additions":65,"deletions":44,"binary":false,"changes":109,"status":"modified"},{"patch":"@@ -0,0 +1,287 @@\n+\/*\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include \"NativeFunc.h\"\n+\n+\/* global GSS function table *\/\n+GSS_FUNCTION_TABLE_PTR ftab;\n+\n+\/* standard GSS method names (ordering is from mapfile) *\/\n+static const char RELEASE_NAME[]                = \"gss_release_name\";\n+static const char IMPORT_NAME[]                 = \"gss_import_name\";\n+static const char COMPARE_NAME[]                = \"gss_compare_name\";\n+static const char CANONICALIZE_NAME[]           = \"gss_canonicalize_name\";\n+static const char EXPORT_NAME[]                 = \"gss_export_name\";\n+static const char DISPLAY_NAME[]                = \"gss_display_name\";\n+static const char ACQUIRE_CRED[]                = \"gss_acquire_cred\";\n+static const char RELEASE_CRED[]                = \"gss_release_cred\";\n+static const char INQUIRE_CRED[]                = \"gss_inquire_cred\";\n+static const char IMPORT_SEC_CONTEXT[]          = \"gss_import_sec_context\";\n+static const char INIT_SEC_CONTEXT[]            = \"gss_init_sec_context\";\n+static const char ACCEPT_SEC_CONTEXT[]          = \"gss_accept_sec_context\";\n+static const char INQUIRE_CONTEXT[]             = \"gss_inquire_context\";\n+static const char DELETE_SEC_CONTEXT[]          = \"gss_delete_sec_context\";\n+static const char CONTEXT_TIME[]                = \"gss_context_time\";\n+static const char WRAP_SIZE_LIMIT[]             = \"gss_wrap_size_limit\";\n+static const char EXPORT_SEC_CONTEXT[]          = \"gss_export_sec_context\";\n+static const char GET_MIC[]                     = \"gss_get_mic\";\n+static const char VERIFY_MIC[]                  = \"gss_verify_mic\";\n+static const char WRAP[]                        = \"gss_wrap\";\n+static const char UNWRAP[]                      = \"gss_unwrap\";\n+static const char INDICATE_MECHS[]              = \"gss_indicate_mechs\";\n+static const char INQUIRE_NAMES_FOR_MECH[]      = \"gss_inquire_names_for_mech\";\n+\n+\/* additional GSS methods not public thru mapfile *\/\n+\n+static const char ADD_OID_SET_MEMBER[]          = \"gss_add_oid_set_member\";\n+static const char DISPLAY_STATUS[]              = \"gss_display_status\";\n+static const char CREATE_EMPTY_OID_SET[]        = \"gss_create_empty_oid_set\";\n+static const char RELEASE_OID_SET[]             = \"gss_release_oid_set\";\n+static const char RELEASE_BUFFER[]              = \"gss_release_buffer\";\n+\n+\/**\n+ * Initialize native GSS function pointers\n+ *\/\n+int loadNative(const char *libName) {\n+\n+    void *gssLib;\n+    int failed;\n+    OM_uint32 minor, major;\n+\n+    ftab = NULL;\n+    failed = FALSE;\n+\n+    gssLib = GETLIB(libName);\n+    if (gssLib == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    \/* global function table instance *\/\n+    ftab = (GSS_FUNCTION_TABLE_PTR)malloc(sizeof(GSS_FUNCTION_TABLE));\n+    if (ftab == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->releaseName = (RELEASE_NAME_FN_PTR)GETFUNC(gssLib, RELEASE_NAME);\n+    if (ftab->releaseName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->importName = (IMPORT_NAME_FN_PTR)GETFUNC(gssLib, IMPORT_NAME);\n+    if (ftab->importName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->compareName = (COMPARE_NAME_FN_PTR)GETFUNC(gssLib, COMPARE_NAME);\n+    if (ftab->compareName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->canonicalizeName = (CANONICALIZE_NAME_FN_PTR)\n+                                GETFUNC(gssLib, CANONICALIZE_NAME);\n+    if (ftab->canonicalizeName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->exportName = (EXPORT_NAME_FN_PTR)GETFUNC(gssLib, EXPORT_NAME);\n+    if (ftab->exportName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->displayName = (DISPLAY_NAME_FN_PTR)GETFUNC(gssLib, DISPLAY_NAME);\n+    if (ftab->displayName == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->acquireCred = (ACQUIRE_CRED_FN_PTR)GETFUNC(gssLib, ACQUIRE_CRED);\n+    if (ftab->acquireCred == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->releaseCred = (RELEASE_CRED_FN_PTR)GETFUNC(gssLib, RELEASE_CRED);\n+    if (ftab->releaseCred == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->inquireCred = (INQUIRE_CRED_FN_PTR)GETFUNC(gssLib, INQUIRE_CRED);\n+    if (ftab->inquireCred == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->importSecContext = (IMPORT_SEC_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, IMPORT_SEC_CONTEXT);\n+    if (ftab->importSecContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->initSecContext = (INIT_SEC_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, INIT_SEC_CONTEXT);\n+    if (ftab->initSecContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->acceptSecContext = (ACCEPT_SEC_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, ACCEPT_SEC_CONTEXT);\n+    if (ftab->acceptSecContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->inquireContext = (INQUIRE_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, INQUIRE_CONTEXT);\n+    if (ftab->inquireContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->deleteSecContext = (DELETE_SEC_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, DELETE_SEC_CONTEXT);\n+    if (ftab->deleteSecContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->contextTime = (CONTEXT_TIME_FN_PTR)GETFUNC(gssLib, CONTEXT_TIME);\n+    if (ftab->contextTime == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->wrapSizeLimit = (WRAP_SIZE_LIMIT_FN_PTR)\n+                        GETFUNC(gssLib, WRAP_SIZE_LIMIT);\n+    if (ftab->wrapSizeLimit == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->exportSecContext = (EXPORT_SEC_CONTEXT_FN_PTR)\n+                        GETFUNC(gssLib, EXPORT_SEC_CONTEXT);\n+    if (ftab->exportSecContext == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->getMic = (GET_MIC_FN_PTR)GETFUNC(gssLib, GET_MIC);\n+    if (ftab->getMic == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->verifyMic = (VERIFY_MIC_FN_PTR)GETFUNC(gssLib, VERIFY_MIC);\n+    if (ftab->verifyMic == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->wrap = (WRAP_FN_PTR)GETFUNC(gssLib, WRAP);\n+    if (ftab->wrap == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->unwrap = (UNWRAP_FN_PTR)GETFUNC(gssLib, UNWRAP);\n+    if (ftab->unwrap == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->indicateMechs = (INDICATE_MECHS_FN_PTR)GETFUNC(gssLib, INDICATE_MECHS);\n+    if (ftab->indicateMechs == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->inquireNamesForMech = (INQUIRE_NAMES_FOR_MECH_FN_PTR)\n+                        GETFUNC(gssLib, INQUIRE_NAMES_FOR_MECH);\n+    if (ftab->inquireNamesForMech == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->addOidSetMember = (ADD_OID_SET_MEMBER_FN_PTR)\n+                        GETFUNC(gssLib, ADD_OID_SET_MEMBER);\n+    if (ftab->addOidSetMember == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->displayStatus = (DISPLAY_STATUS_FN_PTR)\n+                        GETFUNC(gssLib, DISPLAY_STATUS);\n+    if (ftab->displayStatus == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->createEmptyOidSet = (CREATE_EMPTY_OID_SET_FN_PTR)\n+                        GETFUNC(gssLib, CREATE_EMPTY_OID_SET);\n+    if (ftab->createEmptyOidSet == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->releaseOidSet = (RELEASE_OID_SET_FN_PTR)\n+                        GETFUNC(gssLib, RELEASE_OID_SET);\n+    if (ftab->releaseOidSet == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->releaseBuffer = (RELEASE_BUFFER_FN_PTR)\n+                        GETFUNC(gssLib, RELEASE_BUFFER);\n+    if (ftab->releaseBuffer == NULL) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+    ftab->mechs = GSS_C_NO_OID_SET;\n+    major = (*ftab->indicateMechs)(&minor, &(ftab->mechs));\n+    if (ftab->mechs == NULL || ftab->mechs == GSS_C_NO_OID_SET) {\n+        failed = TRUE;\n+        goto out;\n+    }\n+\n+\n+out:\n+    if (failed == TRUE) {\n+        if (gssLib != NULL) CLOSELIB(gssLib);\n+        if (ftab != NULL) free(ftab);\n+    }\n+    return failed;\n+}\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/NativeFunc.c","additions":287,"deletions":0,"binary":false,"changes":287,"status":"added"},{"patch":"@@ -31,0 +31,12 @@\n+#ifdef WIN32\n+#include <windows.h>\n+#define GETLIB(libName) LoadLibrary(libName)\n+#define GETFUNC(lib,name) GetProcAddress(lib,name)\n+#define CLOSELIB(lib) CloseHandle(lib)\n+#else\n+#include <dlfcn.h>\n+#define GETLIB(libName) dlopen(libName, RTLD_NOW)\n+#define GETFUNC(lib,name) dlsym(lib,name)\n+#define CLOSELIB(lib) dlclose(lib)\n+#endif\n+\n@@ -39,1 +51,1 @@\n-char* loadNative(const char *libName);\n+int loadNative(const char *libName);\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/NativeFunc.h","additions":13,"deletions":1,"binary":false,"changes":14,"previous_filename":"jdk\/src\/solaris\/native\/sun\/security\/jgss\/wrapper\/NativeFunc.h","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -471,1 +471,1 @@\n-    len = bytes->length;\n+    len = (int) bytes->length;\n@@ -499,1 +499,0 @@\n-  jstring msg;\n@@ -638,1 +637,1 @@\n-      result = (*env)->NewByteArray(env, cbytes->length);\n+      result = (*env)->NewByteArray(env, (int) cbytes->length);\n@@ -642,1 +641,1 @@\n-      (*env)->SetByteArrayRegion(env, result, 0, cbytes->length,\n+      (*env)->SetByteArrayRegion(env, result, 0, (int) cbytes->length,\n@@ -663,1 +662,0 @@\n-  jthrowable gssEx;\n@@ -785,1 +783,0 @@\n-  jthrowable gssEx;\n@@ -788,1 +785,1 @@\n-    numOfOids = cOidSet->count;\n+    numOfOids = (int) cOidSet->count;\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/NativeUtil.c","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+#if _MSC_VER >= 1800\n+# include <inttypes.h>\n+#endif\n@@ -93,0 +96,8 @@\n+  \/\/ Visual Studio 2010-2012 doesn't provide inttypes.h so provide appropriate definitions here.\n+  #if _MSC_VER < 1800\n+  #ifdef _LP64\n+  #define PRIuPTR       \"I64u\"\n+  #else\n+  #define PRIuPTR       \"u\"\n+  #endif\n+  #endif\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/NativeUtil.h","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -390,1 +390,1 @@\n-OM_uint32 gss_acquire_cred(\n+GSS_DLLIMP OM_uint32 gss_acquire_cred(\n@@ -401,1 +401,1 @@\n-OM_uint32 gss_release_cred(\n+GSS_DLLIMP OM_uint32 gss_release_cred(\n@@ -406,1 +406,1 @@\n-OM_uint32 gss_init_sec_context(\n+GSS_DLLIMP OM_uint32 gss_init_sec_context(\n@@ -422,1 +422,1 @@\n-OM_uint32 gss_accept_sec_context(\n+GSS_DLLIMP OM_uint32 gss_accept_sec_context(\n@@ -436,1 +436,1 @@\n-OM_uint32 gss_process_context_token(\n+GSS_DLLIMP OM_uint32 gss_process_context_token(\n@@ -442,1 +442,1 @@\n-OM_uint32 gss_delete_sec_context(\n+GSS_DLLIMP OM_uint32 gss_delete_sec_context(\n@@ -448,1 +448,1 @@\n-OM_uint32 gss_context_time(\n+GSS_DLLIMP OM_uint32 gss_context_time(\n@@ -455,1 +455,1 @@\n-OM_uint32 gss_get_mic(\n+GSS_DLLIMP OM_uint32 gss_get_mic(\n@@ -464,1 +464,1 @@\n-OM_uint32 gss_verify_mic(\n+GSS_DLLIMP OM_uint32 gss_verify_mic(\n@@ -473,1 +473,1 @@\n-OM_uint32 gss_wrap(\n+GSS_DLLIMP OM_uint32 gss_wrap(\n@@ -484,1 +484,1 @@\n-OM_uint32 gss_unwrap(\n+GSS_DLLIMP OM_uint32 gss_unwrap(\n@@ -493,1 +493,1 @@\n-OM_uint32 gss_display_status(\n+GSS_DLLIMP OM_uint32 gss_display_status(\n@@ -502,1 +502,1 @@\n-OM_uint32 gss_indicate_mechs(\n+GSS_DLLIMP OM_uint32 gss_indicate_mechs(\n@@ -507,1 +507,1 @@\n-OM_uint32 gss_compare_name(\n+GSS_DLLIMP OM_uint32 gss_compare_name(\n@@ -514,1 +514,1 @@\n-OM_uint32 gss_display_name(\n+GSS_DLLIMP OM_uint32 gss_display_name(\n@@ -521,1 +521,1 @@\n-OM_uint32 gss_import_name(\n+GSS_DLLIMP OM_uint32 gss_import_name(\n@@ -528,1 +528,1 @@\n-OM_uint32 gss_release_name(\n+GSS_DLLIMP OM_uint32 gss_release_name(\n@@ -533,1 +533,1 @@\n-OM_uint32 gss_release_buffer(\n+GSS_DLLIMP OM_uint32 gss_release_buffer(\n@@ -538,1 +538,1 @@\n-OM_uint32 gss_release_oid_set(\n+GSS_DLLIMP OM_uint32 gss_release_oid_set(\n@@ -543,1 +543,1 @@\n-OM_uint32 gss_inquire_cred(\n+GSS_DLLIMP OM_uint32 gss_inquire_cred(\n@@ -553,1 +553,1 @@\n-OM_uint32 gss_inquire_context(\n+GSS_DLLIMP OM_uint32 gss_inquire_context(\n@@ -566,1 +566,1 @@\n-OM_uint32 gss_wrap_size_limit(\n+GSS_DLLIMP OM_uint32 gss_wrap_size_limit(\n@@ -576,1 +576,1 @@\n-OM_uint32 gss_add_cred(\n+GSS_DLLIMP OM_uint32 gss_add_cred(\n@@ -591,1 +591,1 @@\n-OM_uint32 gss_inquire_cred_by_mech(\n+GSS_DLLIMP OM_uint32 gss_inquire_cred_by_mech(\n@@ -602,1 +602,1 @@\n-OM_uint32 gss_export_sec_context(\n+GSS_DLLIMP OM_uint32 gss_export_sec_context(\n@@ -609,1 +609,1 @@\n-OM_uint32 gss_import_sec_context(\n+GSS_DLLIMP OM_uint32 gss_import_sec_context(\n@@ -616,1 +616,1 @@\n-OM_uint32 gss_release_oid(\n+GSS_DLLIMP OM_uint32 gss_release_oid(\n@@ -622,1 +622,1 @@\n-OM_uint32 gss_create_empty_oid_set(\n+GSS_DLLIMP OM_uint32 gss_create_empty_oid_set(\n@@ -628,1 +628,1 @@\n-OM_uint32 gss_add_oid_set_member(\n+GSS_DLLIMP OM_uint32 gss_add_oid_set_member(\n@@ -635,1 +635,1 @@\n-OM_uint32 gss_test_oid_set_member(\n+GSS_DLLIMP OM_uint32 gss_test_oid_set_member(\n@@ -643,1 +643,1 @@\n-OM_uint32 gss_str_to_oid(\n+GSS_DLLIMP OM_uint32 gss_str_to_oid(\n@@ -650,1 +650,1 @@\n-OM_uint32 gss_oid_to_str(\n+GSS_DLLIMP OM_uint32 gss_oid_to_str(\n@@ -657,1 +657,1 @@\n-OM_uint32 gss_inquire_names_for_mech(\n+GSS_DLLIMP OM_uint32 gss_inquire_names_for_mech(\n@@ -664,1 +664,1 @@\n-OM_uint32 gss_export_name(\n+GSS_DLLIMP OM_uint32 gss_export_name(\n@@ -671,1 +671,1 @@\n-OM_uint32 gss_duplicate_name(\n+GSS_DLLIMP OM_uint32 gss_duplicate_name(\n@@ -678,1 +678,1 @@\n-OM_uint32 gss_canonicalize_name(\n+GSS_DLLIMP OM_uint32 gss_canonicalize_name(\n","filename":"jdk\/src\/share\/native\/sun\/security\/jgss\/wrapper\/gssapi.h","additions":36,"deletions":36,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -1,291 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <dlfcn.h>\n-#include \"NativeFunc.h\"\n-\n-\/* global GSS function table *\/\n-GSS_FUNCTION_TABLE_PTR ftab;\n-\n-\/* standard GSS method names (ordering is from mapfile) *\/\n-static const char RELEASE_NAME[]                = \"gss_release_name\";\n-static const char IMPORT_NAME[]                 = \"gss_import_name\";\n-static const char COMPARE_NAME[]                = \"gss_compare_name\";\n-static const char CANONICALIZE_NAME[]           = \"gss_canonicalize_name\";\n-static const char EXPORT_NAME[]                 = \"gss_export_name\";\n-static const char DISPLAY_NAME[]                = \"gss_display_name\";\n-static const char ACQUIRE_CRED[]                = \"gss_acquire_cred\";\n-static const char RELEASE_CRED[]                = \"gss_release_cred\";\n-static const char INQUIRE_CRED[]                = \"gss_inquire_cred\";\n-static const char IMPORT_SEC_CONTEXT[]          = \"gss_import_sec_context\";\n-static const char INIT_SEC_CONTEXT[]            = \"gss_init_sec_context\";\n-static const char ACCEPT_SEC_CONTEXT[]          = \"gss_accept_sec_context\";\n-static const char INQUIRE_CONTEXT[]             = \"gss_inquire_context\";\n-static const char DELETE_SEC_CONTEXT[]          = \"gss_delete_sec_context\";\n-static const char CONTEXT_TIME[]                = \"gss_context_time\";\n-static const char WRAP_SIZE_LIMIT[]             = \"gss_wrap_size_limit\";\n-static const char EXPORT_SEC_CONTEXT[]          = \"gss_export_sec_context\";\n-static const char GET_MIC[]                     = \"gss_get_mic\";\n-static const char VERIFY_MIC[]                  = \"gss_verify_mic\";\n-static const char WRAP[]                        = \"gss_wrap\";\n-static const char UNWRAP[]                      = \"gss_unwrap\";\n-static const char INDICATE_MECHS[]              = \"gss_indicate_mechs\";\n-static const char INQUIRE_NAMES_FOR_MECH[]      = \"gss_inquire_names_for_mech\";\n-\n-\/* additional GSS methods not public thru mapfile *\/\n-\n-static const char ADD_OID_SET_MEMBER[]          = \"gss_add_oid_set_member\";\n-static const char DISPLAY_STATUS[]              = \"gss_display_status\";\n-static const char CREATE_EMPTY_OID_SET[]        = \"gss_create_empty_oid_set\";\n-static const char RELEASE_OID_SET[]             = \"gss_release_oid_set\";\n-static const char RELEASE_BUFFER[]              = \"gss_release_buffer\";\n-\n-\/**\n- * Initialize native GSS function pointers\n- *\/\n-char* loadNative(const char *libName) {\n-\n-    char *error;\n-    void *gssLib;\n-    int failed;\n-    OM_uint32 minor, major;\n-\n-    ftab = NULL;\n-    failed = FALSE;\n-    error = NULL;\n-\n-    gssLib = dlopen(libName, RTLD_NOW);\n-    if (gssLib == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    \/* global function table instance *\/\n-    ftab = (GSS_FUNCTION_TABLE_PTR)malloc(sizeof(GSS_FUNCTION_TABLE));\n-    if (ftab == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->releaseName = (RELEASE_NAME_FN_PTR)dlsym(gssLib, RELEASE_NAME);\n-    if (ftab->releaseName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->importName = (IMPORT_NAME_FN_PTR)dlsym(gssLib, IMPORT_NAME);\n-    if (ftab->importName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->compareName = (COMPARE_NAME_FN_PTR)dlsym(gssLib, COMPARE_NAME);\n-    if (ftab->compareName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->canonicalizeName = (CANONICALIZE_NAME_FN_PTR)\n-                                dlsym(gssLib, CANONICALIZE_NAME);\n-    if (ftab->canonicalizeName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->exportName = (EXPORT_NAME_FN_PTR)dlsym(gssLib, EXPORT_NAME);\n-    if (ftab->exportName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->displayName = (DISPLAY_NAME_FN_PTR)dlsym(gssLib, DISPLAY_NAME);\n-    if (ftab->displayName == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->acquireCred = (ACQUIRE_CRED_FN_PTR)dlsym(gssLib, ACQUIRE_CRED);\n-    if (ftab->acquireCred == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->releaseCred = (RELEASE_CRED_FN_PTR)dlsym(gssLib, RELEASE_CRED);\n-    if (ftab->releaseCred == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->inquireCred = (INQUIRE_CRED_FN_PTR)dlsym(gssLib, INQUIRE_CRED);\n-    if (ftab->inquireCred == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->importSecContext = (IMPORT_SEC_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, IMPORT_SEC_CONTEXT);\n-    if (ftab->importSecContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->initSecContext = (INIT_SEC_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, INIT_SEC_CONTEXT);\n-    if (ftab->initSecContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->acceptSecContext = (ACCEPT_SEC_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, ACCEPT_SEC_CONTEXT);\n-    if (ftab->acceptSecContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->inquireContext = (INQUIRE_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, INQUIRE_CONTEXT);\n-    if (ftab->inquireContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->deleteSecContext = (DELETE_SEC_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, DELETE_SEC_CONTEXT);\n-    if (ftab->deleteSecContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->contextTime = (CONTEXT_TIME_FN_PTR)dlsym(gssLib, CONTEXT_TIME);\n-    if (ftab->contextTime == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->wrapSizeLimit = (WRAP_SIZE_LIMIT_FN_PTR)\n-                        dlsym(gssLib, WRAP_SIZE_LIMIT);\n-    if (ftab->wrapSizeLimit == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->exportSecContext = (EXPORT_SEC_CONTEXT_FN_PTR)\n-                        dlsym(gssLib, EXPORT_SEC_CONTEXT);\n-    if (ftab->exportSecContext == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->getMic = (GET_MIC_FN_PTR)dlsym(gssLib, GET_MIC);\n-    if (ftab->getMic == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->verifyMic = (VERIFY_MIC_FN_PTR)dlsym(gssLib, VERIFY_MIC);\n-    if (ftab->verifyMic == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->wrap = (WRAP_FN_PTR)dlsym(gssLib, WRAP);\n-    if (ftab->wrap == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->unwrap = (UNWRAP_FN_PTR)dlsym(gssLib, UNWRAP);\n-    if (ftab->unwrap == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->indicateMechs = (INDICATE_MECHS_FN_PTR)dlsym(gssLib, INDICATE_MECHS);\n-    if (ftab->indicateMechs == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->inquireNamesForMech = (INQUIRE_NAMES_FOR_MECH_FN_PTR)\n-                        dlsym(gssLib, INQUIRE_NAMES_FOR_MECH);\n-    if (ftab->inquireNamesForMech == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->addOidSetMember = (ADD_OID_SET_MEMBER_FN_PTR)\n-                        dlsym(gssLib, ADD_OID_SET_MEMBER);\n-    if (ftab->addOidSetMember == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->displayStatus = (DISPLAY_STATUS_FN_PTR)\n-                        dlsym(gssLib, DISPLAY_STATUS);\n-    if (ftab->displayStatus == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->createEmptyOidSet = (CREATE_EMPTY_OID_SET_FN_PTR)\n-                        dlsym(gssLib, CREATE_EMPTY_OID_SET);\n-    if (ftab->createEmptyOidSet == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->releaseOidSet = (RELEASE_OID_SET_FN_PTR)\n-                        dlsym(gssLib, RELEASE_OID_SET);\n-    if (ftab->releaseOidSet == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->releaseBuffer = (RELEASE_BUFFER_FN_PTR)\n-                        dlsym(gssLib, RELEASE_BUFFER);\n-    if (ftab->releaseBuffer == NULL) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-    ftab->mechs = GSS_C_NO_OID_SET;\n-    major = (*ftab->indicateMechs)(&minor, &(ftab->mechs));\n-    if (ftab->mechs == NULL || ftab->mechs == GSS_C_NO_OID_SET) {\n-        failed = TRUE;\n-        goto out;\n-    }\n-\n-\n-out:\n-    if (failed == TRUE) {\n-        error = dlerror();\n-        if (gssLib != NULL) dlclose(gssLib);\n-        if (ftab != NULL) free(ftab);\n-    }\n-    return error;\n-}\n","filename":"jdk\/src\/solaris\/native\/sun\/security\/jgss\/wrapper\/NativeFunc.c","additions":0,"deletions":291,"binary":false,"changes":291,"status":"deleted"},{"patch":"@@ -242,0 +242,3 @@\n+            for (String e : env.keySet()) {\n+                System.out.print(e + \"=\" + env.get(e) + \" \");\n+            }\n","filename":"jdk\/test\/java\/security\/testlibrary\/Proc.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import jdk.testlibrary.Platform;\n@@ -232,4 +233,5 @@\n-            Set<PosixFilePermission> perms = new HashSet<>();\n-            perms.add(PosixFilePermission.OWNER_READ);\n-            perms.add(PosixFilePermission.OWNER_WRITE);\n-            Files.setPosixFilePermissions(Paths.get(label + \".ccache\"),\n+            if (!Platform.isWindows()) {\n+                Set<PosixFilePermission> perms = new HashSet<>();\n+                perms.add(PosixFilePermission.OWNER_READ);\n+                perms.add(PosixFilePermission.OWNER_WRITE);\n+                Files.setPosixFilePermissions(Paths.get(label + \".ccache\"),\n@@ -237,0 +239,1 @@\n+            }\n@@ -303,1 +306,1 @@\n-                    .env(\"KRB5_TRACE\", \"\/dev\/stderr\")\n+                    .env(\"KRB5_TRACE\", Platform.isWindows() ? \"CON\" : \"\/dev\/stderr\")\n","filename":"jdk\/test\/sun\/security\/krb5\/auto\/BasicProc.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}