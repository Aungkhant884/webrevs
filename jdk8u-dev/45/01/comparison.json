{"files":[{"patch":"@@ -306,1 +306,1 @@\n-    st->print(\"%-16ld\", get_intx());\n+    st->print(INTX_FORMAT_W(-16), get_intx());\n@@ -309,1 +309,1 @@\n-    st->print(\"%-16lu\", get_uintx());\n+    st->print(UINTX_FORMAT_W(-16), get_uintx());\n@@ -312,1 +312,1 @@\n-    st->print(\"%-16lu\", get_uint64_t());\n+    st->print(UINT64_FORMAT_W(-16), get_uint64_t());\n","filename":"hotspot\/src\/share\/vm\/runtime\/globals.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8280963\n+ * @summary \"%-16lu\" formatting string is used to format uintx (uintptr_t)\n+ *          flag values for output. uintx is 64-bit on win64, and \"lu\" format\n+ *          is intended to be used with unsigned long that is 32-bit on win64.\n+ *          Thus flag values that are exact multiple of 4 GiB will be formatted\n+ *          into 0 in PrintFlags output.\n+ * @library \/testlibrary\n+ *\/\n+\n+import com.oracle.java.testlibrary.*;\n+\n+public class PrintFlagsUintxTest {\n+    public static void main(String[] args) throws Exception {\n+        if (!Platform.is64bit()) {\n+            System.out.println(\"Test needs a 4GB heap and can only be run as a 64bit process, skipping.\");\n+            return;\n+        }\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                \"-Xmx4g\", \"-XX:+PrintFlagsFinal\", \"-version\");\n+\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.stdoutShouldMatch(\".*MaxHeapSize\\\\s+:= 4294967296\\\\s+.*\");\n+    }\n+}\n","filename":"hotspot\/test\/runtime\/CommandLine\/PrintFlagsUintxTest.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}