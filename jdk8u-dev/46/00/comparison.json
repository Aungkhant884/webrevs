{"files":[{"patch":"@@ -143,0 +143,1 @@\n+  intx large_disp = disp;\n@@ -146,1 +147,1 @@\n-    disp += index->as_constant_ptr()->as_jint() << shift;\n+    large_disp += (intx)(index->as_constant_ptr()->as_jint()) << shift;\n@@ -157,1 +158,1 @@\n-    if (disp != 0) {\n+    if (large_disp != 0) {\n@@ -159,2 +160,2 @@\n-      if (Assembler::operand_valid_for_add_sub_immediate(disp)) {\n-        __ add(tmp, tmp, LIR_OprFact::intptrConst(disp));\n+      if (Assembler::operand_valid_for_add_sub_immediate(large_disp)) {\n+        __ add(tmp, tmp, LIR_OprFact::intptrConst(large_disp));\n@@ -163,1 +164,1 @@\n-        __ move(tmp, LIR_OprFact::intptrConst(disp));\n+        __ move(tmp, LIR_OprFact::intptrConst(large_disp));\n@@ -167,1 +168,1 @@\n-      disp = 0;\n+      large_disp = 0;\n@@ -169,1 +170,1 @@\n-  } else if (disp != 0 && !Address::offset_ok_for_immed(disp, shift)) {\n+  } else if (large_disp != 0 && !Address::offset_ok_for_immed(large_disp, shift)) {\n@@ -172,2 +173,2 @@\n-    __ move(LIR_OprFact::intptrConst(disp), index);\n-    disp = 0;\n+    __ move(LIR_OprFact::intptrConst(large_disp), index);\n+    large_disp = 0;\n@@ -177,1 +178,1 @@\n-  if (disp == 0) {\n+  if (large_disp == 0) {\n@@ -180,2 +181,2 @@\n-    assert(Address::offset_ok_for_immed(disp, 0), \"must be\");\n-    return new LIR_Address(base, disp, type);\n+    assert(Address::offset_ok_for_immed(large_disp, 0), \"must be\");\n+    return new LIR_Address(base, large_disp, type);\n@@ -195,1 +196,1 @@\n-                           offset_in_bytes + index_opr->as_jint() * elem_size, type);\n+                           offset_in_bytes + (intx)(index_opr->as_jint()) * elem_size, type);\n","filename":"hotspot\/src\/cpu\/aarch64\/vm\/c1_LIRGenerator_aarch64.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+  intx large_disp = disp;\n@@ -152,1 +153,1 @@\n-    disp += index->as_constant_ptr()->as_jint() << shift;\n+    large_disp += (intx)(index->as_constant_ptr()->as_jint()) << shift;\n@@ -163,1 +164,1 @@\n-    if (disp != 0) {\n+    if (large_disp != 0) {\n@@ -165,2 +166,2 @@\n-      if (Assembler::is_simm13(disp)) {\n-        __ add(tmp, LIR_OprFact::intptrConst(disp), tmp);\n+      if (Assembler::is_simm13(large_disp)) {\n+        __ add(tmp, LIR_OprFact::intptrConst(large_disp), tmp);\n@@ -169,1 +170,1 @@\n-        __ move(LIR_OprFact::intptrConst(disp), tmp);\n+        __ move(LIR_OprFact::intptrConst(large_disp), tmp);\n@@ -173,1 +174,1 @@\n-      disp = 0;\n+      large_disp = 0;\n@@ -175,1 +176,1 @@\n-  } else if (disp != 0 && !Assembler::is_simm13(disp)) {\n+  } else if (large_disp != 0 && !Assembler::is_simm13(large_disp)) {\n@@ -178,2 +179,2 @@\n-    __ move(LIR_OprFact::intptrConst(disp), index);\n-    disp = 0;\n+    __ move(LIR_OprFact::intptrConst(large_disp), index);\n+    large_disp = 0;\n@@ -183,1 +184,1 @@\n-  if (disp == 0) {\n+  if (large_disp == 0) {\n@@ -186,2 +187,2 @@\n-    assert(Assembler::is_simm13(disp), \"must be\");\n-    return new LIR_Address(base, disp, type);\n+    assert(Assembler::is_simm13(large_disp), \"must be\");\n+    return new LIR_Address(base, large_disp, type);\n@@ -198,1 +199,1 @@\n-  int offset = arrayOopDesc::base_offset_in_bytes(type);\n+  intx offset = arrayOopDesc::base_offset_in_bytes(type);\n@@ -201,2 +202,2 @@\n-    int i = index_opr->as_constant_ptr()->as_jint();\n-    int array_offset = i * elem_size;\n+    intx i = index_opr->as_constant_ptr()->as_jint();\n+    intx array_offset = i * elem_size;\n","filename":"hotspot\/src\/cpu\/sparc\/vm\/c1_LIRGenerator_sparc.cpp","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-                           (index->as_constant_ptr()->as_jint() << shift) + disp,\n+                           ((intx)(index->as_constant_ptr()->as_jint()) << shift) + disp,\n","filename":"hotspot\/src\/cpu\/x86\/vm\/c1_LIRGenerator_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}