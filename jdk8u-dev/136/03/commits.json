[{"commit":{"message":"replace post-jdk8u Optional.isEmpty"},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java"}],"sha":"45ec61df098817ad8353885495e1311ffde68284"},{"commit":{"message":"8239559: Cgroups: Incorrect detection logic on some systems\n\nAdjust heuristic with cgroup mounts according to mountinfo\n\nBackport-of: 53ee0c4963007b86db7979312b81f990e6ce271a"},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemFactory.java"}],"sha":"d3520add32ac17e53255fe2361d3e4537fe7c41b"},{"commit":{"message":"8240189: [TESTBUG] Some cgroup tests are failing after JDK-8231111\n\nReviewed-by: mdoerr\nBackport-of: c92adf41587767e9c5c8e116cfaeb375d36928aa"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsCpuTester.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/CgroupMetricsTester.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV1.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java"}],"sha":"4c4f95450e609096d350cf7d9d9906c9c2efeed9"},{"commit":{"message":"Don't pass --add-exports to jdk8u java inside docker\n\nThese are JDK9+ module specific parameters."},"files":[{"filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUAwareness.java"}],"sha":"0cfe1277014f7b405e9dcc655e382bae81b37b8c"},{"commit":{"message":"8244500: jtreg test error in test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java\n\nWhen the kernel doesn't support swap limits, expect host values instead.\n\nReviewed-by: sgehwolf\nBackport-of: fb5132254d834ba01a4b65ce64143843e83c674e"},"files":[{"filename":"hotspot\/test\/runtime\/containers\/docker\/CheckOperatingSystemMXBean.java"},{"filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUAwareness.java"}],"sha":"c8b92b7db5136c67b9488d282561752bcc339b53"},{"commit":{"message":"Move test to a more 8u-appropriate location\n\nContainer (cgroups, docker) tests in 8u reside in\nhotspot\/test\/runtime\/containers"},"files":[{"filename":"hotspot\/test\/runtime\/containers\/cgroup\/CgroupSubsystemFactory.java"}],"sha":"e4a44241ef138ebc5a9b483ddf9e52275ad561b3"},{"commit":{"message":"remove duplicate include of osContainer_linux\n\nWith the backport of 8189762, the include of osContainer_linux was\nmoved to a later #ifdef stanza, relative to the original. This caused\na context problem with this backport."},"files":[{"filename":"hotspot\/src\/share\/vm\/prims\/whitebox.cpp"}],"sha":"863c0d6841e04bd9db1583a920cadb1e85671316"},{"commit":{"message":"8239785: Cgroups: Incorrect detection logic on old systems in hotspot\n\nReturn NULL subsystem if no cgroup controllers are mounted.\n\nReviewed-by: sgehwolf\nBackport-of: add18914fb1294999877b563c734a25b4c17b922"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"},{"filename":"hotspot\/src\/share\/vm\/prims\/whitebox.cpp"},{"filename":"hotspot\/src\/share\/vm\/prims\/whitebox.hpp"},{"filename":"jdk\/test\/lib\/sun\/hotspot\/WhiteBox.java"}],"sha":"f71090451c0cb42f35daec879a316797d52dcfd8"},{"commit":{"message":"8237479: 8230305 causes slowdebug build failure\n\nDeclare methods as pure virtual.\n\nBackport-of: 4ca06995855b5c974321d7b3622d661b8d27ba76"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"}],"sha":"463f7511dd8b3525414c2a5d6911a30183d9781b"},{"commit":{"message":"8253714: [cgroups v2] Soft memory limit incorrectly using memory.high\n\nThe early implementation of cgroups v2 support was done with\ncrun 0.8 and it contained a bug which set memory.high over\nmemory.low when --memory-reservation was being used as a CLI\noption.\n\nThis bug has been fixed in later crun versions, starting with\ncrun 0.11. Use memory.low in OpenJDK as well.\n\nBackport-of: ff6843ca4842498791061f924c545fa9469cc1dc"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java"}],"sha":"c6fad8b52681c7eb1a10ceaab95cbb8173c66f13"},{"commit":{"message":"Address style nit"},"files":[{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV1.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java"}],"sha":"5849871881e37313553be27b0d5ccee75f67943f"},{"commit":{"message":"TestCgroupSubsystemController: rework use of Files.writeString"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemController.java"}],"sha":"28f1d60e8f9b09f70d6c611ffc239698b9f8b75a"},{"commit":{"message":"CgroupSubsystemController: fix library paths\n\nWe need the testlibrary copy of FileUtils but the test.lib.util copy of\nUtils (method createTempDirectory is missing from the testlib copy)"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemController.java"}],"sha":"d25d009261bcf88652bee450a2b641d5e53c5cbd"},{"commit":{"message":"TestCgroupSubsystemController: fix jtreg @library path"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemController.java"}],"sha":"3ff4bdae7a2bbeafd8943b61369c5e9c159238fb"},{"commit":{"message":"Replace Arrays.compare with Arrays.equals\n\njdk8u does not have Arrays.compare()"},"files":[{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV1.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java"}],"sha":"a342fb896cff37de3f4d4c3a454afa73b86a1872"},{"commit":{"message":"incorporate (part of) 8275713: TestDockerMemoryMetrics test fails on recent runc\n\nThe main hunk from 8275713 was rolled up in the changes for 8231111.\nThis line is also necessary."},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java"}],"sha":"b3c38a57acab144ce7f0a46c992d941415171280"},{"commit":{"message":"update mapfile for new JNI method name"},"files":[{"filename":"jdk\/make\/lib\/CoreLibraries.gmk"},{"filename":"jdk\/make\/mapfiles\/libjava\/mapfile-linux"}],"sha":"947fb5e710cd1729ad3360e287a60432c4158a45"},{"commit":{"message":"tests for the backport\n\ntwo files had fairly significant merge conflicts, eyeball only to resolve\n\nhaven't run any of them yet -- will depend on the rest of the patch"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupMetrics.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/cgroup\/TestCgroupSubsystemController.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsCpuTester.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/TestDockerCpuMetrics.java"},{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/TestDockerMemoryMetrics.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/CPUSetsReader.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/CgroupMetricsTester.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTester.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV1.java"},{"filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java"}],"sha":"60c78b1fd6118bf054cf89ab2d19eb869253d1a1"},{"commit":{"message":"CgroupSubsystemFactory: remove logging lines\n\njdk8u doesn't have java.lang.System.Logger. There's no existing logging\nin place for other classes in the Metrics\/platform\/etc family that I can\nsee, so remove it."},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java"}],"sha":"aefec1c217da6dcb7d2742679f06748c6598fd7a"},{"commit":{"message":"Metrics => CgroupV1Subsystem.java\n\nunshuffle, rename, resolve unclean hunks although I'm not sure why they\ndidn't apply, they look trivial and the context is the same, will look\ncloser"},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/Metrics.java"}],"sha":"5521015e52fd558f6abb988a37370655f3575b7f"},{"commit":{"message":"Metrics.java: easy commit, mostly doc-only hunks"},"files":[{"filename":"jdk\/src\/share\/classes\/jdk\/internal\/platform\/Metrics.java"}],"sha":"69928629b8cc53dc8d233a3c4029672db7bf0468"},{"commit":{"message":"LauncherHelper: resolve conflicts\n\nconflicts in import lines, 11+ have module-related imports not\napplicable to 8u. Other hunks applied OK. No further inspection\nperformed yet."},"files":[{"filename":"jdk\/src\/share\/classes\/sun\/launcher\/LauncherHelper.java"}],"sha":"ea65f4af11c250ed7eef922d6fee61c162c743d1"},{"commit":{"message":"OperatingSystemImpl.java - easy hunk"},"files":[{"filename":"jdk\/src\/solaris\/classes\/sun\/management\/OperatingSystemImpl.java"}],"sha":"3b550e20bb040d6955494d09221c182e8801ed2b"},{"commit":{"message":"rename+patch JNI function"},"files":[{"filename":"jdk\/src\/linux\/native\/jdk\/internal\/platform\/cgroupv1\/CgroupMetrics.c"},{"filename":"jdk\/src\/linux\/native\/jdk\/internal\/platform\/cgroupv1\/Metrics.c"}],"sha":"e9d94baf8bcffd74c1289e597881948b3942f2cc"},{"commit":{"message":"step 1: files deleted by original commit\n\nrm {src\/java.base => jdk\/src}\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/SubSystem.java"},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/SubSystem.java"}],"sha":"6ff469d67ad7337a1d99a01209b8f6edbad83e02"},{"commit":{"message":"step 0: new files\n\ncommit files newly introduced in 19f26f725fd (11u-dev backport of\n4def210a22faaec6b47912dd314e6365ea48d28f), with paths rewritten:\n\n  {src\/java.base => jdk\/src}\/linux\/classes\/jdk\/internal\/platform\n\nFiles not otherwise modified for 8u compatibility yet."},"files":[{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupInfo.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupMetrics.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystem.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemController.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupSubsystemFactory.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupUtil.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupV1Metrics.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/CgroupV1MetricsImpl.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1MemorySubSystemController.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1SubsystemController.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java"},{"filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2SubsystemController.java"}],"sha":"54902ef6d52f10897bbf570e571d7fe908aa6ab0"},{"commit":{"message":"Remove C++11-style non-static member initialisation\n\nThis causes issues with pre-C++11 compilers (of which jdk8u-dev\nostensibly supports). Issue has materialised on ARM32.\n\nI haven't introduced initialiser lists to the constructor because\nall of these are assigned to in the body of the constructor."},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV1Subsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.hpp"}],"sha":"198cd274afbf803818d8821264bb198e70fb4a4b"},{"commit":{"message":"Guard two more tty->print_cr with PrintContainerInfo"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp"}],"sha":"fbc29df0b26d2c82aafa5a0cb39cd2c87ee3a229"},{"commit":{"message":"Whitespace and braces around PrintContainerInfo"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV1Subsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp"}],"sha":"77c66b6b794dca7eb98193a0cc5eed3fa186fb78"},{"commit":{"message":"substitute os::strerror for strerror\n\nos::strerror was introduced in 8148425 (strerror() function is not\nthread-safe), which is probably out of scope for backporting (at least\nas part of this cgroups v2 effort). Replace uses of os::strerror with\n(thread unsafe) strerror, in common with the rest of JDK8u."},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"}],"sha":"0bb1bcfdd382fcf51fc217d402b450d7d59b58dd"},{"commit":{"message":"Rework use of newer logging API to tty->print_cr\n\nRemove includes of log.hpp that doesn't exist in jdk8u\n\nlog_(debug|trace) to tty->print_cr guarded by PrintContainerInfo"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV1Subsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp"}],"sha":"d927a16c0da85db2328bfe293da76df811537d0f"},{"commit":{"message":"8230305: Cgroups v2: Container awareness\n\nImplement Cgroups v2 container awareness in hotspot\n\nReviewed-by: bobv, dholmes"},"files":[{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV1Subsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV1Subsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/osContainer_linux.cpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/osContainer_linux.hpp"},{"filename":"hotspot\/src\/os\/linux\/vm\/os_linux.hpp"},{"filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUAwareness.java"}],"sha":"2ab8d411daf2b60d59d16c6147b712b763233312"},{"commit":{"message":"8265527: tools\/javac\/diags\/CheckExamples.java fails after JDK-8078024 8u backport\n\nReviewed-by: sgehwolf"},"files":[{"filename":"langtools\/test\/tools\/javac\/diags\/examples.not-yet.txt"},{"filename":"langtools\/test\/tools\/javac\/diags\/examples\/WhereIntersection.java"}],"sha":"f04ad96cf53385c9f8aa071a4167ad7790cb8466"},{"commit":{"message":"8206456: [TESTBUG] docker jtreg tests fail on systems without cpuset.effective_cpus \/ cpuset.effective_mems\n\nThe changes to MetricsTester.java in the original commit were merged in \"8223147: JFR Backport\".\n\nReviewed-by: sgehwolf\nBackport-of: 6fc4db4799599df66a2cf5207068336ce68136ff"},"files":[{"filename":"jdk\/test\/jdk\/internal\/platform\/docker\/MetricsCpuTester.java"}],"sha":"1f8eafd8a05ce979eefd9ed45f5e7c6fb5fc5f2d"},{"commit":{"message":"Merge"},"files":[],"sha":"60930770b9238e55d72689092b9e127bc619ce87"},{"commit":{"message":"8288508: Enhance ECDSA usage\n\nReviewed-by: mbalao, andrew\nBackport-of: efd603063e60ca6861b41309445d7b8e20768d9b"},"files":[{"filename":"jdk\/src\/share\/native\/sun\/security\/ec\/impl\/ec.c"}],"sha":"dfa5f14848df6b4b41f839004d6baf37ca2f4f8d"},{"commit":{"message":"8286918: Better HttpServer service\n\nReviewed-by: andrew\nBackport-of: 6f2ad19b82f90c11a16b4f33ecf130190e2cf616"},"files":[{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/HttpConnection.java"},{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/SSLStreams.java"},{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/ServerConfig.java"},{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java"},{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/TimeSource.java"},{"filename":"jdk\/test\/com\/sun\/net\/httpserver\/bugs\/6725892\/Test.java"}],"sha":"c0d680413deb88912bbc4ba706fa1d2056d90169"},{"commit":{"message":"8147862: Null check too late in sun.net.httpserver.ServerImpl\n\nReviewed-by: andrew\nBackport-of: 1cbdf12c056362cc6ac85239de7c8d93a356ee0f"},"files":[{"filename":"jdk\/src\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java"}],"sha":"83d9d81848772805aac2a70deed0f36b38d0d824"},{"commit":{"message":"8286910: Improve JNDI lookups\n\nReviewed-by: mbalao, andrew\nBackport-of: daf133f773ea567d66663ce6916541bc0df1421a"},"files":[{"filename":"jdk\/src\/share\/classes\/com\/sun\/jndi\/dns\/DNSDatagramSocketFactory.java"}],"sha":"a2fb4c151714ae4203cb6d024fcbf9c1ea590bdb"},{"commit":{"message":"8286533: Key X509 usages\n\nReviewed-by: mbalao, andrew\nBackport-of: c2a13eef3642987386db1b4759507e30796c0acc"},"files":[{"filename":"jdk\/src\/share\/classes\/sun\/security\/util\/DerInputStream.java"}],"sha":"e09162aec2a124325126720bf559eb31a16d03ed"},{"commit":{"message":"8286526: Improve NTLM support\n\nReviewed-by: andrew\nBackport-of: 2d1bc2e55c7ed5f123f3ab5d505b7866a28ba4c7"},"files":[{"filename":"jdk\/src\/share\/classes\/com\/sun\/security\/ntlm\/Client.java"},{"filename":"jdk\/src\/share\/classes\/com\/sun\/security\/ntlm\/NTLM.java"},{"filename":"jdk\/src\/share\/classes\/com\/sun\/security\/ntlm\/NTLMException.java"},{"filename":"jdk\/src\/share\/classes\/com\/sun\/security\/ntlm\/Server.java"},{"filename":"jdk\/test\/sun\/net\/www\/protocol\/http\/NULLTargetInfoTest.java"}],"sha":"62b1b3e5de6285a95a912d5bc62331bad35c151c"},{"commit":{"message":"8286519: Better memory handling\n\nCo-authored-by: Oli Gillespie <ogillesp@amazon.com>\nReviewed-by: mbalao, andrew\nBackport-of: adfc2b195a84867fc2a66e00fad7f3c95693bc3b"},"files":[{"filename":"hotspot\/src\/share\/vm\/runtime\/os.cpp"}],"sha":"d9f1978b82a1d2fad89c84b04686b163c4ac30e7"},{"commit":{"message":"8286511: Improve macro allocation\n\nReviewed-by: mbalao, andrew\nBackport-of: 4ab7ce961a95d7ba350b1cbca584a8e698186047"},"files":[{"filename":"jdk\/src\/share\/native\/common\/sizecalc.h"}],"sha":"f793489d9d5780cb4a2387f9d877756b6f9f5111"},{"commit":{"message":"8285662: Better permission resolution\n\nReviewed-by: mbalao, andrew\nBackport-of: 18c17a1391aaa67c71da13f034674fc294c25d5a"},"files":[{"filename":"jdk\/src\/share\/classes\/java\/security\/UnresolvedPermission.java"}],"sha":"b916428d331b2513041002b76613e447dc88485b"},{"commit":{"message":"8282252: Improve BigInteger\/Decimal validation\n\nReviewed-by: mbalao, andrew\nBackport-of: e863e256f9e7465a97d3fb2a109299987e990b7c"},"files":[{"filename":"jdk\/src\/share\/classes\/java\/math\/BigDecimal.java"},{"filename":"jdk\/src\/share\/classes\/java\/math\/BigInteger.java"},{"filename":"jdk\/test\/java\/math\/BigDecimal\/ConstructorUnscaledValue.java"},{"filename":"jdk\/test\/java\/math\/BigDecimal\/SerializationTests.java"},{"filename":"jdk\/test\/java\/math\/BigInteger\/SerializationTests.java"}],"sha":"987c7384267be18fe86d3bd2514d389a5d62306c"},{"commit":{"message":"8054066: com\/sun\/jdi\/DoubleAgentTest.java fails with timeout\n\nThe test changed to use testlibrary\n\nReviewed-by: dsamersoff, sgehwolf\nBackport-of: 3e3dcfb635bb7dc956f406ca2db6f375ee1b76a8"},"files":[{"filename":"jdk\/test\/com\/sun\/jdi\/DoubleAgentTest.java"}],"sha":"58d0281c52f8c1e9642c6fc5bd696235498b0ae2"},{"commit":{"message":"Merge"},"files":[],"sha":"5b5e548fba1073a1f87df3c71f0d09b63e033ced"},{"commit":{"message":"8292579: (tz) Update Timezone Data to 2022c\n\nReviewed-by: andrew\nBackport-of: 98d85e6f594bf34b97407c470b14791af0a2bc53"},"files":[{"filename":"jdk\/make\/data\/tzdata\/VERSION"},{"filename":"jdk\/make\/data\/tzdata\/africa"},{"filename":"jdk\/make\/data\/tzdata\/antarctica"},{"filename":"jdk\/make\/data\/tzdata\/asia"},{"filename":"jdk\/make\/data\/tzdata\/australasia"},{"filename":"jdk\/make\/data\/tzdata\/backward"},{"filename":"jdk\/make\/data\/tzdata\/etcetera"},{"filename":"jdk\/make\/data\/tzdata\/europe"},{"filename":"jdk\/make\/data\/tzdata\/leapseconds"},{"filename":"jdk\/make\/data\/tzdata\/northamerica"},{"filename":"jdk\/make\/data\/tzdata\/southamerica"},{"filename":"jdk\/make\/data\/tzdata\/zone.tab"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/VERSION"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/aliases.txt"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/displaynames.txt"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/VERSION"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/africa"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/antarctica"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/asia"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/australasia"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/backward"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/etcetera"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/europe"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/leapseconds"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/northamerica"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/southamerica"},{"filename":"jdk\/test\/sun\/util\/calendar\/zi\/tzdata\/zone.tab"}],"sha":"46da2c31efef73b7c2914c8d252554556145b00b"},{"commit":{"message":"8028265: Add legacy tz tests to OpenJDK\n\nBackport-of: 92deab546549ca549408a983fe361d9536d2cd37"},"files":[{"filename":"jdk\/test\/java\/util\/TimeZone\/AssureTzdataVersion.java"},{"filename":"jdk\/test\/java\/util\/TimeZone\/Bug6329116.java"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TextFileReader.java"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/VERSION"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/aliases.txt"},{"filename":"jdk\/test\/java\/util\/TimeZone\/TimeZoneData\/displaynames.txt"},{"filename":"jdk\/test\/java\/util\/TimeZone\/tools\/share\/CompareYearData.pl"},{"filename":"jdk\/test\/java\/util\/TimeZone\/tools\/share\/Makefile"},{"filename":"jdk\/test\/java\/util\/TimeZone\/tools\/share\/makeZoneData.pl"}],"sha":"e2cbfd5acaae9a98921dc29363bce3a037cacc43"},{"commit":{"message":"8271459: C2: Missing NegativeArraySizeException when creating StringBuilder with negative capacity\n\nReviewed-by: roland\nBackport-of: 844c504bc18fa8a79ceacc6b6f235650f5e643bf"},"files":[{"filename":"hotspot\/src\/share\/vm\/opto\/stringopts.cpp"}],"sha":"dfeeceb224a62bd7ffbe5adfd36eebe6c853935a"},{"commit":{"message":"8269850: Most JDK releases report macOS version 12 as 10.16 instead of 12.0\n\nBackport-of: 3b1b8fc646493eae5f4df828afe29abb75fa5e60"},"files":[{"filename":"jdk\/src\/solaris\/native\/java\/lang\/java_props_macosx.c"}],"sha":"43cfe27fa3a11dd6d4fffcb1c1336ac7fdd0233b"},{"commit":{"message":"8295164: JDK 8 jdi tests should not use tasklist command on Windows\n\nAlso enable jdk_tier1 GHA tests on Windows\n\nReviewed-by: sgehwolf"},"files":[{"filename":".github\/workflows\/submit.yml"},{"filename":"jdk\/test\/com\/sun\/jdi\/ShellScaffold.sh"}],"sha":"8280a89a1e4748ca6b7534dceca8c2b1fd17697a"},{"commit":{"message":"8253702: BigSur version number reported as 10.16, should be 11.nn\n\nBackport-of: 66757750a2adf0739d0f5bf98a3f50a123b7adcf"},"files":[{"filename":"jdk\/src\/solaris\/native\/java\/lang\/java_props_macosx.c"}],"sha":"05b249d61aac56c1d4bb346649b6cb8d157deaef"},{"commit":{"message":"8293828: JFR: jfr\/event\/oldobject\/TestClassLoaderLeak.java still fails when GC cycles are not happening\n\nReviewed-by: phh\nBackport-of: 5002eaa5cc7301b91a45f8c0f65b5943fea225d8"},"files":[{"filename":"jdk\/test\/jdk\/jfr\/event\/oldobject\/TestClassLoaderLeak.java"}],"sha":"861ac32e43a425b682d18a2cc748a8b82435148f"},{"commit":{"message":"8274563: jfr\/event\/oldobject\/TestClassLoaderLeak.java fails when GC cycles are not happening\n\nReviewed-by: phh\nBackport-of: 47bfc8aa9367ff852ea5d901f1fa3c6ef316913e"},"files":[{"filename":"jdk\/test\/jdk\/jfr\/event\/oldobject\/TestClassLoaderLeak.java"}],"sha":"4a25b00aba29dd45529be805c4ec135f20228d80"},{"commit":{"message":"8148005: One byte may be corrupted by get_datetime_string()\n\nReviewed-by: phh\nBackport-of: 395a248587b5bd16c3e61c4cefb73799ade0af95"},"files":[{"filename":"hotspot\/src\/share\/vm\/utilities\/ostream.cpp"}],"sha":"859c057c87ad15920c28f495094f8de6953b2e99"},{"commit":{"message":"8294863: Enable partial tier1 testing in GHA for JDK8\n\nReviewed-by: sgehwolf"},"files":[{"filename":".github\/workflows\/submit.yml"}],"sha":"a93344b27d4b3df6cbca7185bcfca1410b51a984"},{"commit":{"message":"8293461: Add a test for JDK-8290832\n\nReviewed-by: phh"},"files":[{"filename":"jdk\/test\/java\/io\/File\/ChangeDefaultUserDir.java"}],"sha":"d285382278fcb76ceddfb61cf8bb047ff269de44"}]