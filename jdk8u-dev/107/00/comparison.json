{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import java.io.OutputStream;\n+import java.io.PrintStream;\n+import java.io.UncheckedIOException;\n@@ -110,0 +113,1 @@\n+    private Map<String,String> secprop = new HashMap();\n@@ -170,0 +174,5 @@\n+    \/\/ Specifies a security property. Can be called multiple times.\n+    public Proc secprop(String a, String b) {\n+        secprop.put(a, b);\n+        return this;\n+    }\n@@ -194,0 +203,11 @@\n+        if (!secprop.isEmpty()) {\n+            Path p = Paths.get(getId(\"security\"));\n+            try (OutputStream fos = Files.newOutputStream(p);\n+                 PrintStream ps = new PrintStream(fos)) {\n+                secprop.forEach((k,v) -> ps.println(k + \"=\" + v));\n+            } catch (IOException e) {\n+                throw new UncheckedIOException(e);\n+            }\n+            prop.put(\"java.security.properties\", p.toString());\n+        }\n+\n@@ -292,0 +312,6 @@\n+    \/\/ Wait for process end with expected exit code\n+    public void waitFor(int expected) throws Exception {\n+        if (p.waitFor() != expected) {\n+            throw new RuntimeException(\"Exit code not \" + expected);\n+        }\n+    }\n","filename":"jdk\/test\/java\/security\/testlibrary\/Proc.java","additions":27,"deletions":1,"binary":false,"changes":28,"status":"modified"}]}