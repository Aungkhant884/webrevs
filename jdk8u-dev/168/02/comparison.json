{"files":[{"patch":"@@ -172,0 +172,5 @@\n+\/\/ Note that for cgroups v2 the actual limits set for swap and\n+\/\/ memory live in two different files, memory.swap.max and memory.max\n+\/\/ respectively. In order to properly report a cgroup v1 like\n+\/\/ compound value we need to sum the two values. Setting a swap limit\n+\/\/ without also setting a memory limit is not allowed.\n@@ -174,1 +179,7 @@\n-  return limit_from_str(mem_swp_limit_str);\n+  jlong swap_limit = limit_from_str(mem_swp_limit_str);\n+  if (swap_limit >= 0) {\n+    jlong memory_limit = read_memory_limit_in_bytes();\n+    assert(memory_limit >= 0, \"swap limit without memory limit?\");\n+    return memory_limit + swap_limit;\n+  }\n+  return swap_limit;\n","filename":"hotspot\/src\/os\/linux\/vm\/cgroupV2Subsystem_linux.cpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -282,0 +282,7 @@\n+    \/**\n+     * Note that for cgroups v2 the actual limits set for swap and\n+     * memory live in two different files, memory.swap.max and memory.max\n+     * respectively. In order to properly report a cgroup v1 like\n+     * compound value we need to sum the two values. Setting a swap limit\n+     * without also setting a memory limit is not allowed.\n+     *\/\n@@ -285,1 +292,7 @@\n-        return limitFromString(strVal);\n+        long swapLimit = limitFromString(strVal);\n+        if (swapLimit >= 0) {\n+            long memoryLimit = getMemoryLimit();\n+            assert memoryLimit >= 0;\n+            return memoryLimit + swapLimit;\n+        }\n+        return swapLimit;\n@@ -288,0 +301,7 @@\n+    \/**\n+     * Note that for cgroups v2 the actual values set for swap usage and\n+     * memory usage live in two different files, memory.current and memory.swap.current\n+     * respectively. In order to properly report a cgroup v1 like\n+     * compound value we need to sum the two values. Setting a swap limit\n+     * without also setting a memory limit is not allowed.\n+     *\/\n@@ -290,1 +310,3 @@\n-        return getLongVal(\"memory.swap.current\");\n+        long swapUsage = getLongVal(\"memory.swap.current\");\n+        long memoryUsage = getMemoryUsage();\n+        return memoryUsage + swapUsage;\n","filename":"jdk\/src\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java","additions":24,"deletions":2,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -236,1 +236,8 @@\n-        newVal = getLongLimitValueFromFile(\"memory.swap.max\");\n+        long valSwap = getLongLimitValueFromFile(\"memory.swap.max\");\n+        long valMemory = getLongLimitValueFromFile(\"memory.max\");\n+        if (valSwap == UNLIMITED) {\n+            newVal = valSwap;\n+        } else {\n+            assert valMemory >= 0;\n+            newVal = valSwap + valMemory;\n+        }\n@@ -242,1 +249,3 @@\n-        newVal = getLongValueFromFile(\"memory.swap.current\");\n+        long swapUsage = getLongValueFromFile(\"memory.swap.current\");\n+        long memUsage = getLongValueFromFile(\"memory.current\");\n+        newVal = swapUsage + memUsage;\n","filename":"jdk\/test\/lib\/jdk\/test\/lib\/containers\/cgroup\/MetricsTesterCgroupV2.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}