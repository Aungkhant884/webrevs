{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    private final String userDir;\n@@ -45,0 +46,2 @@\n+        userDir = AccessController.doPrivileged(\n+            new GetPropertyAction(\"user.dir\"));\n@@ -133,1 +136,5 @@\n-        return resolve(System.getProperty(\"user.dir\"), f.getPath());\n+        SecurityManager sm = System.getSecurityManager();\n+        if (sm != null) {\n+            sm.checkPropertyAccess(\"user.dir\");\n+        }\n+        return resolve(userDir, f.getPath());\n","filename":"jdk\/src\/solaris\/classes\/java\/io\/UnixFileSystem.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,1 @@\n+    private final String userDir;\n@@ -50,0 +51,2 @@\n+        userDir = AccessController.doPrivileged(\n+            new GetPropertyAction(\"user.dir\"));\n@@ -346,1 +349,5 @@\n-        return normalize(System.getProperty(\"user.dir\"));\n+        SecurityManager sm = System.getSecurityManager();\n+        if (sm != null) {\n+            sm.checkPropertyAccess(\"user.dir\");\n+        }\n+        return normalize(userDir);\n","filename":"jdk\/src\/windows\/classes\/java\/io\/WinNTFileSystem.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 8194154\n+   @summary Test changing property user.dir on impacting getCanonicalPath\n+   @run main\/othervm UserDirChangedTest\n+ *\/\n+\n+import java.io.File;\n+\n+public class UserDirChangedTest {\n+    public static void main(String[] args) throws Exception {\n+        String keyUserDir = \"user.dir\";\n+        String userDirNew = \"\/home\/a\/b\/c\/\";\n+        String fileName = \".\/a\";\n+\n+        String userDir = System.getProperty(keyUserDir);\n+        File file = new File(fileName);\n+        String canFilePath = file.getCanonicalPath();\n+\n+        \/\/ now reset user.dir, this will cause crash on linux without bug 8194154 fixed.\n+        System.setProperty(keyUserDir,  userDirNew);\n+        String newCanFilePath = file.getCanonicalPath();\n+        System.out.format(\"%24s %48s%n\", \"Canonical Path = \", canFilePath);\n+        System.out.format(\"%24s %48s%n\", \"new Canonical Path = \", newCanFilePath);\n+        if (!canFilePath.equals(newCanFilePath)) {\n+            throw new RuntimeException(\"Changing property user.dir should have no effect on getCanonicalPath\");\n+        }\n+    }\n+}\n","filename":"jdk\/test\/java\/io\/File\/UserDirChangedTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}