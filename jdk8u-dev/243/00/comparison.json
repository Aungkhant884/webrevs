{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+   @run main\/manual OpenByUNCPathNameTest\n@@ -30,3 +31,13 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.io.*;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+import java.awt.BorderLayout;\n+import java.awt.Desktop;\n+import java.awt.FlowLayout;\n+import java.io.IOException;\n+import java.io.File;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -35,0 +46,6 @@\n+    private static volatile CountDownLatch countDownLatch;\n+    private static JFrame instructionFrame;\n+    private static JFrame testFrame;\n+    private static volatile boolean testPassed = false;\n+    private static File file;\n+\n@@ -38,1 +55,2 @@\n-            throw new RuntimeException(\"Name of the current OS could not be retrieved.\");\n+            throw new RuntimeException(\"Name of the current OS could not be\" +\n+                    \" retrieved.\");\n@@ -43,0 +61,50 @@\n+    private static void createInstructionUI() {\n+        SwingUtilities.invokeLater(() -> {\n+            String instructions =\n+                    \"1. Make sure that disk C is shared \\n\"\n+                    + \"2. Click on openFileByLocalPath Button to test Test\"\n+                    + \" opening of the file with Windows local file path\\n\"\n+                    + \"3. Check that the file is opened successfully\\n\"\n+                    + \"4. Close the file\\n\"\n+                    + \"5. Click on openFileByUNCPath Button to test Test\"\n+                    + \" opening of the file with Windows UNC pathname\\n\"\n+                    + \"6. Check that the file is opened successfully\\n\"\n+                    + \"7. Close the file\\n\"\n+                    + \"8. If all the conditions are met then press PASS else \"\n+                    + \"press FAIL\";\n+            instructionFrame = new JFrame(\"InstructionFrame\");\n+            JTextArea textArea = new JTextArea(instructions);\n+            textArea.setEditable(false);\n+            final JButton passButton = new JButton(\"PASS\");\n+            passButton.addActionListener((e) -> {\n+                testPassed = true;\n+                instructionFrame.dispose();\n+                testFrame.dispose();\n+                file.delete();\n+                countDownLatch.countDown();\n+            });\n+            final JButton failButton = new JButton(\"FAIL\");\n+            failButton.addActionListener((e) -> {\n+                instructionFrame.dispose();\n+                testFrame.dispose();\n+                file.delete();\n+                countDownLatch.countDown();\n+            });\n+\n+\n+            JPanel mainPanel = new JPanel(new BorderLayout());\n+            mainPanel.add(textArea, BorderLayout.CENTER);\n+\n+            JPanel buttonPanel = new JPanel(new FlowLayout());\n+            buttonPanel.add(passButton);\n+            buttonPanel.add(failButton);\n+            mainPanel.add(buttonPanel, BorderLayout.SOUTH);\n+            instructionFrame.setDefaultCloseOperation(\n+                    WindowConstants.DISPOSE_ON_CLOSE);\n+            instructionFrame.setBounds(0,0,500,500);\n+            instructionFrame.add(mainPanel);\n+            instructionFrame.pack();\n+            instructionFrame.setVisible(true);\n+        });\n+    }\n+\n@@ -45,8 +113,19 @@\n-            System.out.println(\"java.awt.Desktop is not supported on this platform.\");\n-        } else {\n-            Desktop desktop = Desktop.getDesktop();\n-            if (!desktop.isSupported(Desktop.Action.OPEN)) {\n-                System.out.println(\"Action.OPEN is not supported on this platform.\");\n-                return;\n-            }\n-            File file = File.createTempFile(\"Read Me File\", \".txt\");\n+            System.out.println(\"java.awt.Desktop is not supported on this\"+\n+                    \" platform.\");\n+            return;\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+        if (!desktop.isSupported(Desktop.Action.OPEN)) {\n+            System.out.println(\"Action.OPEN is not supported on this\" +\n+                    \" platform.\");\n+            return;\n+        }\n+        file = File.createTempFile(\"Read Me File\", \".txt\");\n+        testFrame = new JFrame(\"Test Frame\");\n+        JPanel testButtonPanel = new JPanel(new FlowLayout());\n+        final JButton openFileByLocalPathButton = new\n+                JButton(\"OpenFileByLocalPath\");\n+        final JButton openFileByUNCPathButton = new\n+                JButton(\"OpenFileByUNCPath\");\n+        openFileByLocalPathButton.addActionListener((e) -> {\n@@ -54,1 +133,0 @@\n-                \/\/ Test opening of the file with Windows local file path.\n@@ -56,25 +134,1 @@\n-                Robot robot = null;\n-                try {\n-                    Thread.sleep(5000);\n-                    robot = new Robot();\n-                } catch (Exception e) {\n-                    e.printStackTrace();\n-                }\n-                pressAltF4Keys(robot);\n-\n-                \/\/ Test opening of the file with Windows UNC pathname.\n-                String uncFilePath = \"\\\\\\\\127.0.0.1\\\\\" + file.getAbsolutePath().replace(':', '$');\n-                File uncFile = new File(uncFilePath);\n-                if (!uncFile.exists()) {\n-                    throw new RuntimeException(String.format(\n-                        \"File with UNC pathname '%s' does not exist.\", uncFilePath));\n-                }\n-                desktop.open(uncFile);\n-                try {\n-                    Thread.sleep(5000);\n-                } catch (InterruptedException ie) {\n-                    ie.printStackTrace();\n-                }\n-                pressAltF4Keys(robot);\n-            } finally {\n-                file.delete();\n+            } catch (IOException ioException) {\n@@ -82,2 +136,12 @@\n-        }\n-    }\n+        });\n+\n+        SwingUtilities.invokeLater(()->{\n+            testButtonPanel.add(openFileByLocalPathButton);\n+            testButtonPanel.add(openFileByUNCPathButton);\n+            testFrame.setDefaultCloseOperation(\n+                    WindowConstants.DISPOSE_ON_CLOSE);\n+            testFrame.setBounds(600,0,1000,200);\n+            testFrame.add(testButtonPanel);\n+            testFrame.pack();\n+            testFrame.setVisible(true);\n+        });\n@@ -85,7 +149,7 @@\n-    private static void pressAltF4Keys(Robot robot) {\n-        if (robot != null) {\n-            robot.keyPress(KeyEvent.VK_ALT);\n-            robot.keyPress(KeyEvent.VK_F4);\n-            robot.delay(50);\n-            robot.keyRelease(KeyEvent.VK_F4);\n-            robot.keyRelease(KeyEvent.VK_ALT);\n+        \/\/ Test opening of the file with Windows UNC pathname.\n+        String uncFilePath = \"\\\\\\\\127.0.0.1\\\\\" +\n+                file.getAbsolutePath().replace(':', '$');\n+        File uncFile = new File(uncFilePath);\n+        if (!uncFile.exists()) {\n+            throw new RuntimeException(String.format(\"File \"+\n+                    \"with UNC pathname '%s' does not exist.\", uncFilePath));\n@@ -93,0 +157,6 @@\n+        openFileByUNCPathButton.addActionListener((e) -> {\n+            try {\n+                desktop.open(uncFile);\n+            } catch (IOException ioException) {\n+            }\n+        });\n@@ -95,1 +165,1 @@\n-    public static void main(String[] args) throws IOException {\n+    public static void main(String[] args) throws Exception {\n@@ -98,2 +168,12 @@\n-        } else {\n-            openFile();\n+            return;\n+        }\n+        countDownLatch = new CountDownLatch(1);\n+        OpenByUNCPathNameTest openByUNCPathNameTest =\n+                new OpenByUNCPathNameTest();\n+\n+        openByUNCPathNameTest.createInstructionUI();\n+        openByUNCPathNameTest.openFile();\n+        countDownLatch.await(15, TimeUnit.MINUTES);\n+\n+        if(!testPassed) {\n+            throw new RuntimeException(\"Test failed!\");\n","filename":"jdk\/test\/java\/awt\/Desktop\/OpenByUNCPathNameTest\/OpenByUNCPathNameTest.java","additions":131,"deletions":51,"binary":false,"changes":182,"status":"modified"}]}