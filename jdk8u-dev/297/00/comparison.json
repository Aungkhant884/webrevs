{"files":[{"patch":"@@ -320,1 +320,1 @@\n-                                            kCGColorSpaceGenericRGB);\n+                                            kCGColorSpaceSRGB);\n","filename":"jdk\/src\/macosx\/native\/sun\/awt\/CRobot.m","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.util.List;\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8215105\n+ * @summary tests that Robot can capture the common colors without artifacts\n+ *\/\n+public final class CheckCommonColors {\n+\n+    private static final Frame frame = new Frame();\n+    private static Robot robot;\n+\n+    public static void main(final String[] args) throws Exception {\n+        robot = new Robot();\n+        try {\n+            test();\n+        } finally {\n+            frame.dispose();\n+        }\n+    }\n+\n+    private static void test() {\n+        frame.setSize(400, 400);\n+        frame.setLocationRelativeTo(null);\n+        frame.setUndecorated(true);\n+        for (final Color color : new Color[]{Color.WHITE, Color.LIGHT_GRAY,\n+                                         Color.GRAY, Color.DARK_GRAY,\n+                                         Color.BLACK, Color.RED, Color.PINK,\n+                                         Color.ORANGE, Color.YELLOW,\n+                                         Color.GREEN, Color.MAGENTA, Color.CYAN,\n+                                         Color.BLUE}) {\n+            frame.dispose();\n+            frame.setBackground(color);\n+            frame.setVisible(true);\n+            checkPixels(color);\n+        }\n+    }\n+\n+    private static void checkPixels(final Color color) {\n+        int attempt = 0;\n+        while (true) {\n+            Point p = frame.getLocationOnScreen();\n+            Color pixel = robot.getPixelColor(p.x + frame.getWidth() \/ 2,\n+                                              p.y + frame.getHeight() \/ 2);\n+            if (color.equals(pixel)) {\n+                return;\n+            }\n+            if (attempt > 10) {\n+                System.err.println(\"Expected: \" + color);\n+                System.err.println(\"Actual: \" + pixel);\n+                throw new RuntimeException(\"Too many attempts: \" + attempt);\n+            }\n+            \/\/ skip Robot.waitForIdle to speedup the common case, but also take\n+            \/\/ care about slow systems\n+            robot.delay((int) Math.pow(2.2, attempt++));\n+        }\n+    }\n+}\n","filename":"jdk\/test\/java\/awt\/Robot\/CheckCommonColors\/CheckCommonColors.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}