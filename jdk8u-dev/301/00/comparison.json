{"files":[{"patch":"@@ -84,0 +84,3 @@\n+        \/\/ Need to ensure that used is up to date and that all unreachable\n+        \/\/ classes are unloaded before doing this check.\n+        System.gc();\n","filename":"hotspot\/test\/gc\/metaspace\/TestMetaspacePerfCounters.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedKlassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint TestPerfCountersAndMemoryPools\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedKlassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint TestPerfCountersAndMemoryPools\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint TestPerfCountersAndMemoryPools\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint TestPerfCountersAndMemoryPools\n@@ -43,1 +43,1 @@\n-        if (InputArguments.contains(\"-XX:+UseCompressedKlassPointers\") && Platform.is64bit()) {\n+        if (InputArguments.contains(\"-XX:+UseCompressedClassPointers\") && Platform.is64bit()) {\n@@ -64,0 +64,9 @@\n+        \/\/ First, call all the methods to let them allocate their own slab of metadata\n+        getMinCapacity(perfNS);\n+        getCapacity(perfNS);\n+        getUsed(perfNS);\n+        pool.getUsage().getInit();\n+        pool.getUsage().getUsed();\n+        pool.getUsage().getCommitted();\n+        assertEQ(1L, 1L, \"Make assert load\");\n+\n@@ -66,1 +75,1 @@\n-        assertEQ(getMinCapacity(perfNS), pool.getUsage().getInit());\n+        assertEQ(getMinCapacity(perfNS), pool.getUsage().getInit(), \"MinCapacity out of sync\");\n@@ -68,3 +77,2 @@\n-        \/\/ Must do a second GC to update the perfomance counters again, since\n-        \/\/ the call pool.getUsage().getInit() could have allocated some\n-        \/\/ metadata.\n+        \/\/ Adding a second GC due to metadata allocations caused by getting the\n+        \/\/ initial size from the pool. This is needed when running with -Xcomp.\n@@ -72,2 +80,2 @@\n-        assertEQ(getUsed(perfNS), pool.getUsage().getUsed());\n-        assertEQ(getCapacity(perfNS), pool.getUsage().getCommitted());\n+        assertEQ(getUsed(perfNS), pool.getUsage().getUsed(), \"Used out of sync\");\n+        assertEQ(getCapacity(perfNS), pool.getUsage().getCommitted(), \"Committed out of sync\");\n","filename":"hotspot\/test\/gc\/metaspace\/TestPerfCountersAndMemoryPools.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"}]}