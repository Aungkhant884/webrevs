{"files":[{"patch":"@@ -181,0 +181,4 @@\n+      - name: Pack artifacts\n+        run: |\n+          tar -cf jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz -C jdk\/build\/linux-x64\/images j2sdk-image\n+\n@@ -186,2 +190,1 @@\n-            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/linux-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}.tar.gz\n@@ -192,1 +195,0 @@\n-    if: false\n@@ -201,9 +203,3 @@\n-          - jdk\/tier1 part 1\n-          - jdk\/tier1 part 2\n-          - jdk\/tier1 part 3\n-          - langtools\/tier1\n-          - hs\/tier1 common\n-          - hs\/tier1 compiler\n-          - hs\/tier1 gc\n-          - hs\/tier1 runtime\n-          - hs\/tier1 serviceability\n+          - jdk\/tier1\n+#          - langtools\/tier1\n+#          - hotspot\/tier1\n@@ -211,23 +207,6 @@\n-          - test: jdk\/tier1 part 1\n-            suites: test\/jdk\/:tier1_part1\n-          - test: jdk\/tier1 part 2\n-            suites: test\/jdk\/:tier1_part2\n-          - test: jdk\/tier1 part 3\n-            suites: test\/jdk\/:tier1_part3\n-          - test: langtools\/tier1\n-            suites: test\/langtools\/:tier1\n-          - test: hs\/tier1 common\n-            suites: test\/hotspot\/jtreg\/:tier1_common\n-            artifact: -debug\n-          - test: hs\/tier1 compiler\n-            suites: test\/hotspot\/jtreg\/:tier1_compiler\n-            artifact: -debug\n-          - test: hs\/tier1 gc\n-            suites: test\/hotspot\/jtreg\/:tier1_gc\n-            artifact: -debug\n-          - test: hs\/tier1 runtime\n-            suites: test\/hotspot\/jtreg\/:tier1_runtime\n-            artifact: -debug\n-          - test: hs\/tier1 serviceability\n-            suites: test\/hotspot\/jtreg\/:tier1_serviceability\n-            artifact: -debug\n+          - test: jdk\/tier1\n+            suites: jdk_tier1\n+#          - test: langtools\/tier1\n+#            suites: langtools_tier1\n+#          - test: hotspot\/tier1\n+#            suites: hotspot_tier1\n@@ -283,10 +262,0 @@\n-      - name: Unpack tests\n-        run: |\n-          mkdir -p \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\"\n-\n-      - name: Find root of jdk image dir\n-        run: |\n-          imageroot=`find ${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }} -name release -type f`\n-          echo \"imageroot=`dirname ${imageroot}`\" >> $GITHUB_ENV\n-\n@@ -295,12 +264,10 @@\n-          JDK_IMAGE_DIR=${{ env.imageroot }}\n-          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin-tests${{ matrix.artifact }}\n-          BOOT_JDK=${BOOT_JDK}\n-          JT_HOME=${HOME}\/jtreg\n-          make run-test-prebuilt\n-          CONF_NAME=run-test-prebuilt\n-          LOG_CMDLINES=true\n-          JTREG_VERBOSE=fail,error,time\n-          TEST=\"${{ matrix.suites }}\"\n-          TEST_OPTS_JAVA_OPTIONS=\n-          JTREG_KEYWORDS=\"!headful\"\n-          JTREG=\"JAVA_OPTIONS=-XX:-CreateCoredumpOnCrash\"\n+          chmod +x \"${HOME}\/jtreg\/bin\/jtreg\" &&\n+          mkdir test-results &&\n+          cd test &&\n+          PRODUCT_HOME=\"${HOME}\/jdk-linux-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin${{ matrix.artifact }}\/j2sdk-image\"\n+          JT_HOME=\"${HOME}\/jtreg\"\n+          ALT_OUTPUTDIR=\"${GITHUB_WORKSPACE}\/test-results\"\n+          JAVA_ARGS=\"-Djdk.test.docker.image.name=ubuntu -Djdk.test.docker.image.version=latest\"\n+          JTREG_TIMEOUT_FACTOR=\"4\"\n+          make\n+          \"${{ matrix.suites }}\"\n@@ -311,2 +278,3 @@\n-          if ! grep --include=test-summary.txt -lqr build\/*\/test-results -e \"TEST SUCCESS\" ; then\n-            cat build\/*\/test-results\/*\/text\/newfailures.txt ;\n+          if cat test-results\/testoutput\/*\/exitcode.txt | grep -q -v '^0$'\n+          || ! cat test-results\/testoutput\/*\/Stats.txt | grep -q 'fail=0' ; then\n+            cat test-results\/testoutput\/*\/JTreport\/text\/newfailures.txt ;\n@@ -322,1 +290,1 @@\n-        working-directory: build\/run-test-prebuilt\/test-results\/\n+        working-directory: test-results\n@@ -327,12 +295,1 @@\n-        continue-on-error: true\n-\n-      - name: Package test support\n-        if: always()\n-        working-directory: build\/run-test-prebuilt\/test-support\/\n-        run: >\n-          zip -r9\n-          \"$HOME\/linux-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\"\n-          .\n-          -i *.jtr\n-          -i *\/hs_err*.log\n-          -i *\/replay*.log\n+          -x \"*ARCHIVE_BUNDLE.zip\"\n@@ -348,7 +305,0 @@\n-      - name: Persist test outputs\n-        if: always()\n-        uses: actions\/upload-artifact@v2\n-        with:\n-          path: ~\/linux-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\n-        continue-on-error: true\n-\n@@ -587,0 +537,4 @@\n+      - name: Pack artifacts\n+        run: |\n+          tar -cf jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}.tar.gz -C jdk\/build\/linux-x86\/images j2sdk-image\n+\n@@ -592,2 +546,1 @@\n-            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/linux-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}.tar.gz\n@@ -598,1 +551,0 @@\n-    if: false\n@@ -607,9 +559,3 @@\n-          - jdk\/tier1 part 1\n-          - jdk\/tier1 part 2\n-          - jdk\/tier1 part 3\n-          - langtools\/tier1\n-          - hs\/tier1 common\n-          - hs\/tier1 compiler\n-          - hs\/tier1 gc\n-          - hs\/tier1 runtime\n-          - hs\/tier1 serviceability\n+          - jdk\/tier1\n+#          - langtools\/tier1\n+#          - hotspot\/tier1\n@@ -617,23 +563,6 @@\n-          - test: jdk\/tier1 part 1\n-            suites: test\/jdk\/:tier1_part1\n-          - test: jdk\/tier1 part 2\n-            suites: test\/jdk\/:tier1_part2\n-          - test: jdk\/tier1 part 3\n-            suites: test\/jdk\/:tier1_part3\n-          - test: langtools\/tier1\n-            suites: test\/langtools\/:tier1\n-          - test: hs\/tier1 common\n-            suites: test\/hotspot\/jtreg\/:tier1_common\n-            artifact: -debug\n-          - test: hs\/tier1 compiler\n-            suites: test\/hotspot\/jtreg\/:tier1_compiler\n-            artifact: -debug\n-          - test: hs\/tier1 gc\n-            suites: test\/hotspot\/jtreg\/:tier1_gc\n-            artifact: -debug\n-          - test: hs\/tier1 runtime\n-            suites: test\/hotspot\/jtreg\/:tier1_runtime\n-            artifact: -debug\n-          - test: hs\/tier1 serviceability\n-            suites: test\/hotspot\/jtreg\/:tier1_serviceability\n-            artifact: -debug\n+          - test: jdk\/tier1\n+            suites: jdk_tier1\n+#          - test: langtools\/tier1\n+#            suites: langtools_tier1\n+#          - test: hotspot\/tier1\n+#            suites: hotspot_tier1\n@@ -690,10 +619,0 @@\n-      - name: Unpack tests\n-        run: |\n-          mkdir -p \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\"\n-\n-      - name: Find root of jdk image dir\n-        run: |\n-          imageroot=`find ${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }} -name release -type f`\n-          echo \"imageroot=`dirname ${imageroot}`\" >> $GITHUB_ENV\n-\n@@ -702,12 +621,10 @@\n-          JDK_IMAGE_DIR=${{ env.imageroot }}\n-          TEST_IMAGE_DIR=${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin-tests${{ matrix.artifact }}\n-          BOOT_JDK=${BOOT_JDK}\n-          JT_HOME=${HOME}\/jtreg\n-          make run-test-prebuilt\n-          CONF_NAME=run-test-prebuilt\n-          LOG_CMDLINES=true\n-          JTREG_VERBOSE=fail,error,time\n-          TEST=\"${{ matrix.suites }}\"\n-          TEST_OPTS_JAVA_OPTIONS=\n-          JTREG_KEYWORDS=\"!headful\"\n-          JTREG=\"JAVA_OPTIONS=-XX:-CreateCoredumpOnCrash\"\n+          chmod +x \"${HOME}\/jtreg\/bin\/jtreg\" &&\n+          mkdir test-results &&\n+          cd test &&\n+          PRODUCT_HOME=\"${HOME}\/jdk-linux-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x86_bin${{ matrix.artifact }}\/j2sdk-image\"\n+          JT_HOME=\"${HOME}\/jtreg\"\n+          ALT_OUTPUTDIR=\"${GITHUB_WORKSPACE}\/test-results\"\n+          JAVA_ARGS=\"-Djdk.test.docker.image.name=ubuntu -Djdk.test.docker.image.version=latest\"\n+          JTREG_TIMEOUT_FACTOR=\"4\"\n+          make\n+          \"${{ matrix.suites }}\"\n@@ -718,2 +635,3 @@\n-          if ! grep --include=test-summary.txt -lqr build\/*\/test-results -e \"TEST SUCCESS\" ; then\n-            cat build\/*\/test-results\/*\/text\/newfailures.txt ;\n+          if cat test-results\/testoutput\/*\/exitcode.txt | grep -q -v '^0$'\n+          || ! cat test-results\/testoutput\/*\/Stats.txt | grep -q 'fail=0' ; then\n+            cat test-results\/testoutput\/*\/JTreport\/text\/newfailures.txt ;\n@@ -729,1 +647,1 @@\n-        working-directory: build\/run-test-prebuilt\/test-results\/\n+        working-directory: test-results\n@@ -734,12 +652,1 @@\n-        continue-on-error: true\n-\n-      - name: Package test support\n-        if: always()\n-        working-directory: build\/run-test-prebuilt\/test-support\/\n-        run: >\n-          zip -r9\n-          \"$HOME\/linux-x86${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\"\n-          .\n-          -i *.jtr\n-          -i *\/hs_err*.log\n-          -i *\/replay*.log\n+          -x \"*ARCHIVE_BUNDLE.zip\"\n@@ -755,7 +662,0 @@\n-      - name: Persist test outputs\n-        if: always()\n-        uses: actions\/upload-artifact@v2\n-        with:\n-          path: ~\/linux-x86${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\n-        continue-on-error: true\n-\n@@ -913,0 +813,9 @@\n+      - name: Pack artifacts\n+        run: >\n+          dir ;\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          zip -r9\n+          \"${{ github.workspace }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}.zip\"\n+          j2sdk-image\n+        working-directory: jdk\/build\/windows-x64\/images\n+\n@@ -918,3 +827,1 @@\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}.zip\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/windows-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\n+            jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}.zip\n@@ -1066,0 +973,9 @@\n+      - name: Pack artifacts\n+        run: >\n+          dir ;\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          zip -r9\n+          \"${{ github.workspace }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}.zip\"\n+          j2sdk-image\n+        working-directory: jdk\/build\/windows-x86\/images\n+\n@@ -1071,3 +987,1 @@\n-            jdk\/build\/windows-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}.zip\n-            jdk\/build\/windows-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin-tests${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/windows-x86\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}-symbols.tar.gz\n+            jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}.zip\n@@ -1087,3 +1001,1 @@\n-          - jdk\/tier1 part 1\n-          - jdk\/tier1 part 2\n-          - jdk\/tier1 part 3\n+          - jdk\/tier1\n@@ -1091,5 +1003,1 @@\n-          - hs\/tier1 common\n-          - hs\/tier1 compiler\n-          - hs\/tier1 gc\n-          - hs\/tier1 runtime\n-          - hs\/tier1 serviceability\n+          - hotspot\/tier1\n@@ -1097,6 +1005,2 @@\n-          - test: jdk\/tier1 part 1\n-            suites: test\/jdk\/:tier1_part1\n-          - test: jdk\/tier1 part 2\n-            suites: test\/jdk\/:tier1_part2\n-          - test: jdk\/tier1 part 3\n-            suites: test\/jdk\/:tier1_part3\n+          - test: jdk\/tier1\n+            suites: jdk_tier1\n@@ -1104,16 +1008,3 @@\n-            suites: test\/langtools\/:tier1\n-          - test: hs\/tier1 common\n-            suites: test\/hotspot\/jtreg\/:tier1_common\n-            artifact: -debug\n-          - test: hs\/tier1 compiler\n-            suites: test\/hotspot\/jtreg\/:tier1_compiler\n-            artifact: -debug\n-          - test: hs\/tier1 gc\n-            suites: test\/hotspot\/jtreg\/:tier1_gc\n-            artifact: -debug\n-          - test: hs\/tier1 runtime\n-            suites: test\/hotspot\/jtreg\/:tier1_runtime\n-            artifact: -debug\n-          - test: hs\/tier1 serviceability\n-            suites: test\/hotspot\/jtreg\/:tier1_serviceability\n-            artifact: -debug\n+            suites: langtools_tier1\n+          - test: hotspot\/tier1\n+            suites: hotspot_tier1\n@@ -1197,6 +1088,1 @@\n-      - name: Unpack symbols\n-        run: |\n-          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols\"\n-          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}-symbols\"\n-\n-      - name: Unpack tests\n+      - name: Create results dir\n@@ -1204,5 +1090,1 @@\n-          mkdir -p \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\"\n-\n-      - name: Find root of jdk image dir\n-        run: echo (\"imageroot=\" + (Get-ChildItem -Path $HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }} -Filter release -Recurse -ErrorAction SilentlyContinue -Force).DirectoryName) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8\n+          mkdir test-results\n@@ -1211,0 +1093,1 @@\n+        working-directory: test\n@@ -1214,4 +1097,1 @@\n-          $env:JDK_IMAGE_DIR = cygpath \"${{ env.imageroot }}\" ;\n-          $env:SYMBOLS_IMAGE_DIR = cygpath \"${{ env.imageroot }}\" ;\n-          $env:TEST_IMAGE_DIR = cygpath \"$HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin-tests${{ matrix.artifact }}\" ;\n-          $env:BOOT_JDK = cygpath \"$HOME\/bootjdk\/$env:BOOT_JDK_VERSION\" ;\n+          $env:PRODUCT_HOME = cygpath \"$HOME\/jdk-windows-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin${{ matrix.artifact }}\/j2sdk-image\" ;\n@@ -1219,8 +1099,5 @@\n-          & make run-test-prebuilt\n-          CONF_NAME=run-test-prebuilt\n-          LOG_CMDLINES=true\n-          JTREG_VERBOSE=fail,error,time\n-          TEST=${{ matrix.suites }}\n-          TEST_OPTS_JAVA_OPTIONS=\n-          JTREG_KEYWORDS=\"!headful\"\n-          JTREG=\"JAVA_OPTIONS=-XX:-CreateCoredumpOnCrash\"\n+          $env:ALT_OUTPUTDIR = cygpath \"$env:GITHUB_WORKSPACE\/test-results\" ;\n+          $env:JAVA_ARGS = \"-XX:-CreateMinidumpOnCrash -Djdk.test.container.command=skipcontianer\" ;\n+          $env:JTREG_TIMEOUT_FACTOR = \"4\" ;\n+          & make\n+          \"${{ matrix.suites }}\"\n@@ -1231,2 +1108,2 @@\n-          if ((Get-ChildItem -Path build\\*\\test-results\\test-summary.txt -Recurse | Select-String -Pattern \"TEST SUCCESS\" ).Count -eq 0) {\n-            Get-Content -Path build\\*\\test-results\\*\\*\\newfailures.txt ;\n+          if ((Get-ChildItem -Path test-results\\testoutput\\*\\exitcode.txt -Recurse | Select-String -Pattern '^0$' -NotMatch ).Count -gt 0) {\n+            Get-Content -Path test-results\\testoutput\\*\\JTreport\\text\\newfailures.txt ;\n@@ -1242,1 +1119,1 @@\n-        working-directory: build\/run-test-prebuilt\/test-results\/\n+        working-directory: test-results\n@@ -1248,0 +1125,80 @@\n+          -x \"*ARCHIVE_BUNDLE.zip\"\n+        continue-on-error: true\n+\n+      - name: Persist test results\n+        if: always()\n+        uses: actions\/upload-artifact@v2\n+        with:\n+          path: ~\/windows-x64${{ matrix.artifact }}_testresults_${{ env.logsuffix }}.zip\n+        continue-on-error: true\n+\n+  windows_x86_test:\n+    name: Windows x86\n+    runs-on: \"windows-2019\"\n+    if: false\n+    needs:\n+      - prerequisites\n+      - windows_x86_build\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        test:\n+          - jdk\/tier1\n+          - langtools\/tier1\n+          - hotspot\/tier1\n+        include:\n+          - test: jdk\/tier1\n+            suites: jdk_tier1\n+          - test: langtools\/tier1\n+            suites: langtools_tier1\n+          - test: hotspot\/tier1\n+            suites: hotspot_tier1\n+\n+    env:\n+      JDK_VERSION: \"${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MAJOR_VERSION }}.${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MINOR_VERSION }}.${{ fromJson(needs.prerequisites.outputs.dependencies).JDK_MICRO_VERSION }}\"\n+      BOOT_JDK_VERSION: \"${{ fromJson(needs.prerequisites.outputs.dependencies).BOOT_JDK_VERSION }}\"\n+      BOOT_JDK_FILENAME: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X86_BOOT_JDK_FILENAME }}\"\n+      BOOT_JDK_URL: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X86_BOOT_JDK_URL }}\"\n+      BOOT_JDK_SHA256: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X86_BOOT_JDK_SHA256 }}\"\n+\n+    steps:\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+\n+      - name: Restore boot JDK from cache\n+        id: bootjdk\n+        uses: actions\/cache@v2\n+        with:\n+          path: ~\/bootjdk\/${{ env.BOOT_JDK_VERSION }}\n+          key: bootjdk-${{ runner.os }}-${{ env.BOOT_JDK_VERSION }}-${{ env.BOOT_JDK_SHA256 }}-v1\n+\n+      - name: Download boot JDK\n+        run: |\n+          mkdir -p \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\"\n+          & curl -L \"$env:BOOT_JDK_URL\" -o \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\"\n+          $FileHash = Get-FileHash -Algorithm SHA256 \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\"\n+          $FileHash.Hash -eq $env:BOOT_JDK_SHA256\n+          & tar -xf \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\" -C \"$HOME\/bootjdk\/$env:BOOT_JDK_VERSION\"\n+          Get-ChildItem \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\\*\\*\" | Move-Item -Destination \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\"\n+        if: steps.bootjdk.outputs.cache-hit != 'true'\n+\n+      - name: Restore cygwin packages from cache\n+        id: cygwin\n+        uses: actions\/cache@v2\n+        with:\n+          path: ~\/cygwin\/packages\n+          key: cygwin-packages-${{ runner.os }}-v1\n+\n+      - name: Install cygwin\n+        run: |\n+          New-Item -Force -ItemType directory -Path \"$HOME\\cygwin\"\n+          & curl -L \"https:\/\/www.cygwin.com\/setup-x86_64.exe\" -o \"$HOME\/cygwin\/setup-x86_64.exe\"\n+          Start-Process -FilePath \"$HOME\\cygwin\\setup-x86_64.exe\" -ArgumentList \"--quiet-mode --packages autoconf,make,zip,unzip --root $HOME\\cygwin\\cygwin64 --local-package-dir $HOME\\cygwin\\packages --site http:\/\/mirrors.kernel.org\/sourceware\/cygwin --no-desktop --no-shortcuts --no-startmenu --no-admin\" -Wait -NoNewWindow\n+\n+      - name: Restore jtreg artifact\n+        id: jtreg_restore\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jtreg\/\n@@ -1250,1 +1207,45 @@\n-      - name: Package test support\n+      - name: Restore jtreg artifact (retry)\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jtreg\/\n+        if: steps.jtreg_restore.outcome == 'failure'\n+\n+      - name: Restore build artifacts\n+        id: build_restore\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jdk-windows-x86${{ matrix.artifact }}_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jdk-windows-x86${{ matrix.artifact }}\n+        continue-on-error: true\n+\n+      - name: Restore build artifacts (retry)\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jdk-windows-x86${{ matrix.artifact }}_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jdk-windows-x86${{ matrix.artifact }}\n+        if: steps.build_restore.outcome == 'failure'\n+\n+      - name: Unpack jdk\n+        run: |\n+          mkdir -p \"${HOME}\/jdk-windows-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}\"\n+          tar -xf \"${HOME}\/jdk-windows-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}.zip\" -C \"${HOME}\/jdk-windows-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}\"\n+\n+      - name: Create results dir\n+        run: |\n+          mkdir test-results\n+\n+      - name: Run tests\n+        working-directory: test\n+        run: >\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          $env:Path = $env:Path -split \";\" -match \"C:\\\\Windows|PowerShell|cygwin\" -join \";\" ;\n+          $env:PRODUCT_HOME = cygpath \"$HOME\/jdk-windows-x86${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x86_bin${{ matrix.artifact }}\/j2sdk-image\" ;\n+          $env:JT_HOME = cygpath \"$HOME\/jtreg\" ;\n+          $env:ALT_OUTPUTDIR = cygpath \"$env:GITHUB_WORKSPACE\/test-results\" ;\n+          $env:JAVA_ARGS = \"-XX:-CreateMinidumpOnCrash -Djdk.test.container.command=skipcontianer\" ;\n+          $env:JTREG_TIMEOUT_FACTOR = \"4\" ;\n+          & make\n+          \"${{ matrix.suites }}\"\n+\n+      - name: Check that all tests executed successfully\n@@ -1252,1 +1253,13 @@\n-        working-directory: build\/run-test-prebuilt\/test-support\/\n+        run: >\n+          if ((Get-ChildItem -Path test-results\\testoutput\\*\\exitcode.txt -Recurse | Select-String -Pattern '^0$' -NotMatch ).Count -gt 0) {\n+            Get-Content -Path test-results\\testoutput\\*\\JTreport\\text\\newfailures.txt ;\n+            exit 1\n+          }\n+\n+      - name: Create suitable test log artifact name\n+        if: always()\n+        run: echo (\"logsuffix=\" + (\"${{ matrix.test }}\" -replace \"\/\", \"_\" -replace \" \", \"_\")) | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8\n+\n+      - name: Package test results\n+        if: always()\n+        working-directory: test-results\n@@ -1256,1 +1269,1 @@\n-          \"$HOME\/windows-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\"\n+          \"$HOME\/windows-x86${{ matrix.artifact }}_testresults_${{ env.logsuffix }}.zip\"\n@@ -1258,3 +1271,1 @@\n-          -i *.jtr\n-          -i *\/hs_err*.log\n-          -i *\/replay*.log\n+          -x \"*ARCHIVE_BUNDLE.zip\"\n@@ -1267,8 +1278,1 @@\n-          path: ~\/windows-x64${{ matrix.artifact }}_testresults_${{ env.logsuffix }}.zip\n-        continue-on-error: true\n-\n-      - name: Persist test outputs\n-        if: always()\n-        uses: actions\/upload-artifact@v2\n-        with:\n-          path: ~\/windows-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\n+          path: ~\/windows-x86${{ matrix.artifact }}_testresults_${{ env.logsuffix }}.zip\n@@ -1364,0 +1368,4 @@\n+      - name: Pack artifacts\n+        run: |\n+          tar -cf jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin${{ matrix.artifact }}.tar.gz -C jdk\/build\/macos-x64\/images j2sdk-image\n+\n@@ -1369,2 +1377,1 @@\n-            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin${{ matrix.artifact }}.tar.gz\n-            jdk\/build\/macos-x64\/bundles\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin-tests${{ matrix.artifact }}.tar.gz\n+            jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin${{ matrix.artifact }}.tar.gz\n@@ -1375,1 +1382,0 @@\n-    if: false\n@@ -1384,9 +1390,3 @@\n-          - jdk\/tier1 part 1\n-          - jdk\/tier1 part 2\n-          - jdk\/tier1 part 3\n-          - langtools\/tier1\n-          - hs\/tier1 common\n-          - hs\/tier1 compiler\n-          - hs\/tier1 gc\n-          - hs\/tier1 runtime\n-          - hs\/tier1 serviceability\n+          - jdk\/tier1\n+#          - langtools\/tier1\n+#          - hotspot\/tier1\n@@ -1394,23 +1394,6 @@\n-          - test: jdk\/tier1 part 1\n-            suites: test\/jdk\/:tier1_part1\n-          - test: jdk\/tier1 part 2\n-            suites: test\/jdk\/:tier1_part2\n-          - test: jdk\/tier1 part 3\n-            suites: test\/jdk\/:tier1_part3\n-          - test: langtools\/tier1\n-            suites: test\/langtools\/:tier1\n-          - test: hs\/tier1 common\n-            suites: test\/hotspot\/jtreg\/:tier1_common\n-            artifact: -debug\n-          - test: hs\/tier1 compiler\n-            suites: test\/hotspot\/jtreg\/:tier1_compiler\n-            artifact: -debug\n-          - test: hs\/tier1 gc\n-            suites: test\/hotspot\/jtreg\/:tier1_gc\n-            artifact: -debug\n-          - test: hs\/tier1 runtime\n-            suites: test\/hotspot\/jtreg\/:tier1_runtime\n-            artifact: -debug\n-          - test: hs\/tier1 serviceability\n-            suites: test\/hotspot\/jtreg\/:tier1_serviceability\n-            artifact: -debug\n+          - test: jdk\/tier1\n+            suites: jdk_tier1\n+#          - test: langtools\/tier1\n+#            suites: langtools_tier1\n+#          - test: hotspot\/tier1\n+#            suites: hotspot_tier1\n@@ -1480,5 +1463,0 @@\n-      - name: Unpack tests\n-        run: |\n-          mkdir -p \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin-tests${{ matrix.artifact }}\"\n-          tar -xf \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin-tests${{ matrix.artifact }}.tar.gz\" -C \"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin-tests${{ matrix.artifact }}\"\n-\n@@ -1491,5 +1469,0 @@\n-      - name: Find root of jdk image dir\n-        run: |\n-          imageroot=`find ${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin${{ matrix.artifact }} -name release -type f`\n-          echo \"imageroot=`dirname ${imageroot}`\" >> $GITHUB_ENV\n-\n@@ -1498,12 +1471,9 @@\n-          JDK_IMAGE_DIR=${{ env.imageroot }}\n-          TEST_IMAGE_DIR=${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin-tests${{ matrix.artifact }}\n-          BOOT_JDK=${HOME}\/bootjdk\/${BOOT_JDK_VERSION}\/Contents\/Home\n-          JT_HOME=${HOME}\/jtreg\n-          gmake run-test-prebuilt\n-          CONF_NAME=run-test-prebuilt\n-          LOG_CMDLINES=true\n-          JTREG_VERBOSE=fail,error,time\n-          TEST=${{ matrix.suites }}\n-          TEST_OPTS_JAVA_OPTIONS=\n-          JTREG_KEYWORDS=\"!headful\"\n-          JTREG=\"JAVA_OPTIONS=-XX:-CreateCoredumpOnCrash\"\n+          chmod +x \"${HOME}\/jtreg\/bin\/jtreg\" &&\n+          mkdir test-results &&\n+          cd test &&\n+          PRODUCT_HOME=\"${HOME}\/jdk-macos-x64${{ matrix.artifact }}\/jdk-${{ env.JDK_VERSION }}-internal+0_osx-x64_bin${{ matrix.artifact }}\/j2sdk-image\"\n+          JT_HOME=\"${HOME}\/jtreg\"\n+          ALT_OUTPUTDIR=\"${GITHUB_WORKSPACE}\/test-results\"\n+          JTREG_TIMEOUT_FACTOR=\"4\"\n+          gmake\n+          \"${{ matrix.suites }}\"\n@@ -1514,2 +1484,3 @@\n-          if ! grep --include=test-summary.txt -lqr build\/*\/test-results -e \"TEST SUCCESS\" ; then\n-            cat build\/*\/test-results\/*\/text\/newfailures.txt ;\n+          if cat test-results\/testoutput\/*\/exitcode.txt | grep -q -v '^0$'\n+          || ! cat test-results\/testoutput\/*\/Stats.txt | grep -q 'fail=0' ; then\n+            cat test-results\/testoutput\/*\/JTreport\/text\/newfailures.txt ;\n@@ -1525,1 +1496,1 @@\n-        working-directory: build\/run-test-prebuilt\/test-results\/\n+        working-directory: test-results\n@@ -1530,12 +1501,1 @@\n-        continue-on-error: true\n-\n-      - name: Package test support\n-        if: always()\n-        working-directory: build\/run-test-prebuilt\/test-support\/\n-        run: >\n-          zip -r9\n-          \"$HOME\/macos-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\"\n-          .\n-          -i *.jtr\n-          -i *\/hs_err*.log\n-          -i *\/replay*.log\n+          -x \"*ARCHIVE_BUNDLE.zip\"\n@@ -1551,7 +1511,0 @@\n-      - name: Persist test outputs\n-        if: always()\n-        uses: actions\/upload-artifact@v2\n-        with:\n-          path: ~\/macos-x64${{ matrix.artifact }}_testsupport_${{ env.logsuffix }}.zip\n-        continue-on-error: true\n-\n@@ -1565,5 +1518,5 @@\n-      - linux_x64_build\n-      - linux_x86_build\n-      - windows_x64_build\n-      - windows_x86_build\n-      - macos_x64_build\n+      - linux_x64_test\n+      - linux_x86_test\n+      - windows_x64_test\n+      - windows_x86_test\n+      - macos_x64_test\n","filename":".github\/workflows\/submit.yml","additions":271,"deletions":318,"binary":false,"changes":589,"status":"modified"}]}