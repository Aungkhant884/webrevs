{"files":[{"patch":"@@ -209,1 +209,1 @@\n-            String sqlPrefix = \"sql:\/\";\n+            String sqlPrefix = \"sql:\";\n","filename":"jdk\/src\/share\/classes\/sun\/security\/pkcs11\/Secmod.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,0 +72,4 @@\n+    #ifdef SECMOD_DEBUG\n+    FPTR_GetError getError =\n+        (FPTR_GetError)findFunction(env, jHandle, \"PORT_GetError\");\n+    #endif \/\/ SECMOD_DEBUG\n@@ -75,0 +79,1 @@\n+    const char *configFile = NULL;\n@@ -100,0 +105,5 @@\n+    configFile = \"secmod.db\";\n+    if (configDir != NULL && strncmp(\"sql:\", configDir, 4U) == 0) {\n+        configFile = \"pkcs11.txt\";\n+    }\n+\n@@ -106,1 +116,1 @@\n-        res = initialize(configDir, \"\", \"\", \"secmod.db\", flags);\n+        res = initialize(configDir, \"\", \"\", configFile, flags);\n@@ -114,1 +124,1 @@\n-        res = initialize(configDir, \"\", \"\", \"secmod.db\", flags);\n+        res = initialize(configDir, \"\", \"\", configFile, flags);\n@@ -140,0 +150,7 @@\n+    #ifdef SECMOD_DEBUG\n+    if (res == -1) {\n+        if (getError != NULL) {\n+            dprintf1(\"-NSS error: %d\\n\", getError());\n+        }\n+    }\n+    #endif \/\/ SECMOD_DEBUG\n","filename":"jdk\/src\/share\/native\/sun\/security\/pkcs11\/j2secmod.c","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -37,0 +37,4 @@\n+#ifdef SECMOD_DEBUG\n+typedef int (*FPTR_GetError)(void);\n+#endif \/\/SECMOD_DEBUG\n+\n","filename":"jdk\/src\/solaris\/native\/sun\/security\/pkcs11\/j2secmod_md.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,4 @@\n+library=\n+name=NSS Internal PKCS #11 Module\n+parameters=configdir='sql:.\/tmpdb' certPrefix='' keyPrefix='' secmod='' flags= updatedir='' updateCertPrefix='' updateKeyPrefix='' updateid='' updateTokenDescription='' \n+NSS=Flags=internal,critical trustOrder=75 cipherOrder=100 slotParams=(1={slotFlags=[RSA,DSA,DH,RC2,RC4,DES,RANDOM,SHA1,MD5,MD2,SSL,TLS,AES,Camellia,SEED,SHA256,SHA512] askpw=any timeout=30})\n","filename":"jdk\/test\/sun\/security\/pkcs11\/Secmod\/pkcs11.txt","additions":4,"deletions":0,"binary":false,"changes":4,"status":"added"},{"patch":"@@ -29,0 +29,5 @@\n+import java.nio.file.FileVisitResult;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.SimpleFileVisitor;\n+import java.nio.file.attribute.BasicFileAttributes;\n@@ -58,1 +63,1 @@\n-            System.setProperty(\"pkcs11test.nss.db\", \"sql:\/\" + DBDIR);\n+            System.setProperty(\"pkcs11test.nss.db\", \"sql:\" + DBDIR);\n@@ -63,2 +68,2 @@\n-        if (dbdirFile.exists() == false) {\n-            dbdirFile.mkdir();\n+        if (dbdirFile.exists()) {\n+            deleteDir(dbdirFile.toPath());\n@@ -66,0 +71,1 @@\n+        dbdirFile.mkdir();\n@@ -70,0 +76,1 @@\n+            copyFile(\"pkcs11.txt\", BASE, DBDIR);\n@@ -93,0 +100,19 @@\n+    private static void deleteDir(final Path directory) throws IOException {\n+        Files.walkFileTree(directory, new SimpleFileVisitor<Path>() {\n+\n+            @Override\n+            public FileVisitResult visitFile(Path file,\n+                    BasicFileAttributes attrs) throws IOException {\n+                Files.delete(file);\n+                return FileVisitResult.CONTINUE;\n+            }\n+\n+            @Override\n+            public FileVisitResult postVisitDirectory(Path dir, IOException exc)\n+                    throws IOException {\n+                Files.delete(dir);\n+                return FileVisitResult.CONTINUE;\n+            }\n+        });\n+    }\n+\n","filename":"jdk\/test\/sun\/security\/pkcs11\/SecmodTest.java","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"}]}