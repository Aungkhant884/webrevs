{"files":[{"patch":"@@ -51,0 +51,6 @@\n+ * The {@code krb5.conf} file is formatted in the Windows INI file style,\n+ * which contains a series of relations grouped into different sections.\n+ * Each relation contains a key and a value, the value can be an arbitrary\n+ * string or a boolean value. A boolean value can be one of \"true\", \"false\",\n+ * \"yes\", or \"no\", case-insensitive.<p>\n+ *\n","filename":"jdk\/src\/share\/classes\/javax\/security\/auth\/kerberos\/package-info.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -452,17 +452,0 @@\n-    \/**\n-     * Gets the boolean value for the specified keys.\n-     * @param keys the keys\n-     * @return the boolean value, false is returned if it cannot be\n-     * found or the value is not \"true\" (case insensitive).\n-     * @throw IllegalArgumentException if any of the keys is illegal\n-     * @see #get(java.lang.String[])\n-     *\/\n-    public boolean getBooleanValue(String... keys) {\n-        String val = get(keys);\n-        if (val != null && val.equalsIgnoreCase(\"true\")) {\n-            return true;\n-        } else {\n-            return false;\n-        }\n-    }\n-\n@@ -477,1 +460,1 @@\n-     * @exception NumberFormationException if the String does not contain a\n+     * @exception NumberFormatException if the String does not contain a\n@@ -1063,10 +1046,2 @@\n-        boolean useAddr = false;\n-        \/\/ use addresses if \"no_addresses\" is set to false\n-        String value = get(\"libdefaults\", \"no_addresses\");\n-        useAddr = (value != null && value.equalsIgnoreCase(\"false\"));\n-        if (useAddr == false) {\n-            \/\/ use addresses if \"noaddresses\" is set to false\n-            value = get(\"libdefaults\", \"noaddresses\");\n-            useAddr = (value != null && value.equalsIgnoreCase(\"false\"));\n-        }\n-        return useAddr;\n+        return getBooleanObject(\"libdefaults\", \"no_addresses\") == Boolean.FALSE ||\n+                getBooleanObject(\"libdefaults\", \"noaddresses\") == Boolean.FALSE;\n@@ -1076,1 +1051,2 @@\n-     * Check if need to use DNS to locate Kerberos services\n+     * Check if need to use DNS to locate Kerberos services for name. If not\n+     * defined, check dns_fallback, whose default value is true.\n","filename":"jdk\/src\/share\/classes\/sun\/security\/krb5\/Config.java","additions":5,"deletions":29,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-                if (config.getBooleanValue(\"libdefaults\", \"renewable\")) {\n+                if (config.getBooleanObject(\"libdefaults\", \"renewable\") == Boolean.TRUE) {\n@@ -311,1 +311,1 @@\n-                if (config.getBooleanValue(\"libdefaults\", \"proxiable\")) {\n+                if (config.getBooleanObject(\"libdefaults\", \"proxiable\") == Boolean.TRUE) {\n@@ -319,1 +319,1 @@\n-                if (config.getBooleanValue(\"libdefaults\", \"forwardable\")) {\n+                if (config.getBooleanObject(\"libdefaults\", \"forwardable\") == Boolean.TRUE) {\n","filename":"jdk\/src\/share\/classes\/sun\/security\/krb5\/internal\/KDCOptions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-            String temp = cfg.get(\"libdefaults\", \"allow_weak_crypto\");\n-            if (temp != null && temp.equals(\"true\")) allowed = true;\n+            allowed = cfg.getBooleanObject(\"libdefaults\", \"allow_weak_crypto\")\n+                    == Boolean.TRUE;\n","filename":"jdk\/src\/share\/classes\/sun\/security\/krb5\/internal\/crypto\/EType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8029995\n+ * @summary accept yes\/no for boolean krb5.conf settings\n+ * @compile -XDignore.symbol.file YesNo.java\n+ * @run main\/othervm YesNo\n+ *\/\n+import sun.security.krb5.Config;\n+import sun.security.krb5.internal.crypto.EType;\n+\n+import java.util.Arrays;\n+\n+public class YesNo {\n+    static Config config = null;\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"java.security.krb5.conf\",\n+                System.getProperty(\"test.src\", \".\") +\"\/yesno.conf\");\n+        config = Config.getInstance();\n+        check(\"a\", Boolean.TRUE);\n+        check(\"b\", Boolean.FALSE);\n+        check(\"c\", Boolean.TRUE);\n+        check(\"d\", Boolean.FALSE);\n+        check(\"e\", null);\n+        check(\"f\", null);\n+\n+        if (!Arrays.stream(EType.getBuiltInDefaults())\n+                .anyMatch(n -> n < 4)) {\n+            throw new Exception();\n+        }\n+    }\n+\n+    static void check(String k, Boolean expected) throws Exception {\n+        Boolean result = config.getBooleanObject(\"libdefaults\", k);\n+        if (expected != result) {\n+            throw new Exception(\"value for \" + k + \" is \" + result);\n+        }\n+    }\n+}\n","filename":"jdk\/test\/sun\/security\/krb5\/config\/YesNo.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,7 @@\n+[libdefaults]\n+a = true\n+b = FALSE\n+c = YES\n+d = no\n+e = nothing\n+allow_weak_crypto = yes\n","filename":"jdk\/test\/sun\/security\/krb5\/config\/yesno.conf","additions":7,"deletions":0,"binary":false,"changes":7,"status":"added"}]}