{"files":[{"patch":"@@ -1,269 +0,0 @@\n-\/*\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @key headful\n- * @bug 8194873\n- * @requires (os.family == \"Windows\")\n- * @summary Checks that right ALT (ALT_GRAPH) key works on Swing components\n- * @run main RightAltKeyTest\n- *\/\n-\n-import javax.swing.JFrame;\n-import javax.swing.JMenu;\n-import javax.swing.JMenuBar;\n-import javax.swing.JMenuItem;\n-import javax.swing.JOptionPane;\n-import javax.swing.JPanel;\n-import javax.swing.JTabbedPane;\n-import javax.swing.JTextField;\n-import javax.swing.JLabel;\n-import javax.swing.SwingUtilities;\n-import javax.swing.UIManager;\n-import javax.swing.KeyStroke;\n-import javax.swing.event.MenuEvent;\n-import javax.swing.event.MenuListener;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.FocusEvent;\n-import java.awt.event.FocusListener;\n-import java.awt.event.InputEvent;\n-import java.awt.event.KeyEvent;\n-import java.awt.GridLayout;\n-import java.awt.Robot;\n-import java.lang.reflect.InvocationTargetException;\n-\n-public class RightAltKeyTest {\n-\n-    boolean action = false;\n-    JFrame frame;\n-\n-    void testJMenu() {\n-        frame = new JFrame(\"Menu Frame\");\n-        JMenuBar mb = new JMenuBar();\n-        JMenu m1 = new JMenu(\"File\");\n-        JMenuItem i1 = new JMenuItem(\"Save\");\n-        JMenuItem i2 = new JMenuItem(\"Load\");\n-\n-        m1.setMnemonic(KeyEvent.VK_F);\n-\n-        m1.addMenuListener(new MenuListener() {\n-            @Override\n-            public void menuSelected(MenuEvent e) {\n-                action = true;\n-                disposeUI();\n-            }\n-\n-            @Override\n-            public void menuDeselected(MenuEvent e) {\n-            }\n-\n-            @Override\n-            public void menuCanceled(MenuEvent e) {\n-            }\n-        });\n-\n-        frame.setJMenuBar(mb);\n-        mb.add(m1);\n-        m1.add(i1);\n-        m1.add(i2);\n-\n-        frame.setSize(200, 200);\n-        frame.setVisible(true);\n-    }\n-\n-    void testJMenuItem() {\n-        frame = new JFrame(\"Menu Frame\");\n-        JMenuBar mb = new JMenuBar();\n-        JMenu m1 = new JMenu(\"File\");\n-        JMenuItem i1 = new JMenuItem(\"Save\");\n-        i1.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S,\n-                InputEvent.ALT_GRAPH_DOWN_MASK));\n-        i1.addActionListener((e) -> {\n-            action = true;\n-            disposeUI();\n-        });\n-\n-        frame.setJMenuBar(mb);\n-        mb.add(m1);\n-        m1.add(i1);\n-\n-        frame.setSize(200, 200);\n-        frame.setVisible(true);\n-    }\n-\n-    void testJOptionPane() {\n-        int selection =  JOptionPane.showConfirmDialog(null, \"Do you wish \" +\n-                \"to save file?\",\"Confirm\", JOptionPane.YES_NO_CANCEL_OPTION);\n-        \/\/Pressed Yes\n-        if (selection == 0) {\n-            action = true;\n-        }\n-    }\n-\n-    void testJTabbedPane() {\n-        frame =new JFrame();\n-        JPanel p1=new JPanel();\n-        JPanel p2=new JPanel();\n-        JTabbedPane tp=new JTabbedPane();\n-        tp.add(\"Main\",p1);\n-        tp.add(\"Visit\",p2);\n-        tp.setMnemonicAt(0, KeyEvent.VK_M);\n-        tp.setMnemonicAt(1, KeyEvent.VK_V);\n-\n-        tp.addChangeListener((e) -> {\n-            if (tp.getSelectedIndex() == 1)\n-                action = true;\n-            disposeUI();\n-        });\n-\n-        frame.add(tp);\n-        frame.setSize(200,200);\n-        frame.setVisible(true);\n-    }\n-\n-    void testJTextArea() {\n-        JTextField firstField = new JTextField(10);\n-        JTextField lastField = new JTextField(10);\n-\n-        JLabel firstLabel = new JLabel(\"First Name\", JLabel.RIGHT);\n-        firstLabel.setDisplayedMnemonic('F');\n-        firstLabel.setLabelFor(firstField);\n-\n-        JLabel lastLabel = new JLabel(\"Last Name\", JLabel.RIGHT);\n-        lastLabel.setDisplayedMnemonic('L');\n-        lastLabel.setLabelFor(lastField);\n-\n-        JPanel p = new JPanel();\n-        p.setLayout(new GridLayout(2, 2, 5, 5));\n-        p.add(firstLabel);\n-        p.add(firstField);\n-        p.add(lastLabel);\n-        p.add(lastField);\n-\n-        frame = new JFrame(\"MnemonicLabels\");\n-        lastField.addFocusListener(new FocusListener() {\n-            @Override\n-            public void focusGained(FocusEvent e) {\n-                action = true;\n-                disposeUI();\n-            }\n-\n-            @Override\n-            public void focusLost(FocusEvent e) {\n-\n-            }\n-        });\n-\n-        frame.add(p);\n-        frame.setSize(200,200);\n-        frame.setVisible(true);\n-    }\n-\n-    void test() throws Exception {\n-        UIManager.LookAndFeelInfo[] lookAndFeels = UIManager\n-                .getInstalledLookAndFeels();\n-        for (UIManager.LookAndFeelInfo lookAndFeel : lookAndFeels) {\n-            UIManager.setLookAndFeel(lookAndFeel.getClassName());\n-\n-            Robot robot = new Robot();\n-            robot.setAutoDelay(100);\n-            robot.waitForIdle();\n-\n-            action = false;\n-            SwingUtilities.invokeLater(this::testJMenu);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_ALT_GRAPH);\n-            robot.keyPress(KeyEvent.VK_F);\n-            robot.keyRelease(KeyEvent.VK_F);\n-            robot.keyRelease(KeyEvent.VK_ALT_GRAPH);\n-            robot.waitForIdle();\n-            if (!action)\n-                errLog(\"JMenu\", lookAndFeel.getClassName());\n-\n-            action = false;\n-            SwingUtilities.invokeLater(this::testJMenuItem);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_ALT_GRAPH);\n-            robot.keyPress(KeyEvent.VK_S);\n-            robot.keyRelease(KeyEvent.VK_S);\n-            robot.keyRelease(KeyEvent.VK_ALT_GRAPH);\n-            robot.waitForIdle();\n-            if (!action)\n-                errLog(\"JMenuItem\", lookAndFeel.getClassName());\n-\n-            action = false;\n-            SwingUtilities.invokeLater(this::testJOptionPane);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_ALT_GRAPH);\n-            robot.keyPress(KeyEvent.VK_Y);\n-            robot.keyRelease(KeyEvent.VK_Y);\n-            robot.keyRelease(KeyEvent.VK_ALT_GRAPH);\n-            robot.waitForIdle();\n-            if (!action)\n-                errLog(\"JOptionPane\", lookAndFeel.getClassName());\n-\n-            action = false;\n-            SwingUtilities.invokeLater(this::testJTabbedPane);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_ALT_GRAPH);\n-            robot.keyPress(KeyEvent.VK_V);\n-            robot.keyRelease(KeyEvent.VK_V);\n-            robot.keyRelease(KeyEvent.VK_ALT_GRAPH);\n-            robot.waitForIdle();\n-            if (!action)\n-                errLog(\"JTabbedPane\", lookAndFeel.getClassName());\n-\n-            action = false;\n-            SwingUtilities.invokeLater(this::testJTextArea);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_ALT_GRAPH);\n-            robot.keyPress(KeyEvent.VK_L);\n-            robot.keyRelease(KeyEvent.VK_L);\n-            robot.keyRelease(KeyEvent.VK_ALT_GRAPH);\n-            robot.waitForIdle();\n-            if (!action)\n-                errLog(\"JTextArea\", lookAndFeel.getClassName());\n-        }\n-        System.out.println(\"Passed.\");\n-    }\n-\n-    void disposeUI() {\n-        frame.setVisible(false);\n-        frame.dispose();\n-    }\n-\n-    void errLog(String componentName, String lookAndFeel)\n-            throws InvocationTargetException, InterruptedException\n-    {\n-        SwingUtilities.invokeAndWait(this::disposeUI);\n-        throw new RuntimeException(\"Actions are not performed for \"+\n-                componentName + \" with \" + lookAndFeel + \" look and feel.\");\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        RightAltKeyTest t = new RightAltKeyTest();\n-        t.test();\n-    }\n-}\n","filename":"test\/jdk\/javax\/swing\/event\/RightAltKeyTest.java","additions":0,"deletions":269,"binary":false,"changes":269,"status":"deleted"}]}