{"files":[{"patch":"@@ -114,0 +114,30 @@\n+void CgroupSubsystemFactory::set_controller_paths(CgroupInfo* cg_infos,\n+                                                  int controller,\n+                                                  const char* name,\n+                                                  char* mount_path,\n+                                                  char* root_path) {\n+  if (cg_infos[controller]._mount_path != NULL) {\n+    \/\/ On some systems duplicate controllers get mounted in addition to\n+    \/\/ the main cgroup controllers most likely under \/sys\/fs\/cgroup. In that\n+    \/\/ case pick the one under \/sys\/fs\/cgroup and discard others.\n+    if (strstr(cg_infos[controller]._mount_path, \"\/sys\/fs\/cgroup\") != cg_infos[controller]._mount_path) {\n+      if(PrintContainerInfo) {\n+        tty->print_cr(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+                      name, mount_path, cg_infos[controller]._mount_path);\n+      }\n+      os::free(cg_infos[controller]._mount_path);\n+      os::free(cg_infos[controller]._root_mount_path);\n+      cg_infos[controller]._mount_path = os::strdup(mount_path);\n+      cg_infos[controller]._root_mount_path = os::strdup(root_path);\n+    } else {\n+      if(PrintContainerInfo) {\n+        tty->print_cr(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+                      name, cg_infos[controller]._mount_path, mount_path);\n+      }\n+    }\n+  } else {\n+    cg_infos[controller]._mount_path = os::strdup(mount_path);\n+    cg_infos[controller]._root_mount_path = os::strdup(root_path);\n+  }\n+}\n+\n@@ -266,1 +296,0 @@\n-    char tmp_mount_point[MAXPATHLEN+1];\n@@ -277,2 +306,1 @@\n-    \/\/\n-    if (is_cgroupsV2 && sscanf(p, \"%*d %*d %*d:%*d %*s %s %*[^-]- %s %*s %*s\", tmp_mount_point, tmp_fs_type) == 2) {\n+    if (is_cgroupsV2 && sscanf(p, \"%*d %*d %*d:%*d %s %s %*[^-]- %s %*s %*s\", tmproot, tmpmount, tmp_fs_type) == 3) {\n@@ -280,1 +308,1 @@\n-      if (!cgroupv2_mount_point_found && strcmp(\"cgroup2\", tmp_fs_type) == 0) {\n+      if (strcmp(\"cgroup2\", tmp_fs_type) == 0) {\n@@ -284,2 +312,1 @@\n-          assert(cg_infos[i]._mount_path == NULL, \"_mount_path memory stomping\");\n-          cg_infos[i]._mount_path = os::strdup(tmp_mount_point);\n+          set_controller_paths(cg_infos, i, \"(cg2, unified)\", tmpmount, tmproot);\n@@ -308,3 +335,1 @@\n-          assert(cg_infos[MEMORY_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[MEMORY_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[MEMORY_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, MEMORY_IDX, token, tmpmount, tmproot);\n@@ -314,21 +339,1 @@\n-          if (cg_infos[CPUSET_IDX]._mount_path != NULL) {\n-            \/\/ On some systems duplicate cpuset controllers get mounted in addition to\n-            \/\/ the main cgroup controllers most likely under \/sys\/fs\/cgroup. In that\n-            \/\/ case pick the one under \/sys\/fs\/cgroup and discard others.\n-            if (strstr(cg_infos[CPUSET_IDX]._mount_path, \"\/sys\/fs\/cgroup\") != cg_infos[CPUSET_IDX]._mount_path) {\n-              if (PrintContainerInfo) {\n-                tty->print_cr(\"Duplicate cpuset controllers detected. Picking %s, skipping %s.\",\n-                              tmpmount, cg_infos[CPUSET_IDX]._mount_path);\n-              }\n-              os::free(cg_infos[CPUSET_IDX]._mount_path);\n-              cg_infos[CPUSET_IDX]._mount_path = os::strdup(tmpmount);\n-            } else {\n-              if (PrintContainerInfo) {\n-                tty->print_cr(\"Duplicate cpuset controllers detected. Picking %s, skipping %s.\",\n-                              cg_infos[CPUSET_IDX]._mount_path, tmpmount);\n-              }\n-            }\n-          } else {\n-            cg_infos[CPUSET_IDX]._mount_path = os::strdup(tmpmount);\n-          }\n-          cg_infos[CPUSET_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPUSET_IDX, token, tmpmount, tmproot);\n@@ -338,3 +343,1 @@\n-          assert(cg_infos[CPU_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[CPU_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[CPU_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPU_IDX, token, tmpmount, tmproot);\n@@ -344,3 +347,1 @@\n-          assert(cg_infos[CPUACCT_IDX]._mount_path == NULL, \"stomping of _mount_path\");\n-          cg_infos[CPUACCT_IDX]._mount_path = os::strdup(tmpmount);\n-          cg_infos[CPUACCT_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_paths(cg_infos, CPUACCT_IDX, token, tmpmount, tmproot);\n","filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.cpp","additions":37,"deletions":36,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -328,0 +328,5 @@\n+    static void set_controller_paths(CgroupInfo* cg_infos,\n+                                     int controller,\n+                                     const char* name,\n+                                     char* mount_path,\n+                                     char* root_path);\n","filename":"hotspot\/src\/os\/linux\/vm\/cgroupSubsystem_linux.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+    private Path cgroupv2MntInfoDouble;\n+    private Path cgroupv2MntInfoDouble2;\n@@ -71,0 +73,6 @@\n+    private Path cgroupv1MntInfoDoubleMemory;\n+    private Path cgroupv1MntInfoDoubleMemory2;\n+    private Path cgroupv1MntInfoDoubleCpu;\n+    private Path cgroupv1MntInfoDoubleCpu2;\n+    private Path cgroupv1MntInfoDoublePids;\n+    private Path cgroupv1MntInfoDoublePids2;\n@@ -160,0 +168,9 @@\n+    private String mntInfoCgroupv1MoreMemoryLine = \"1100 1098 0:28 \/ \/memory rw,nosuid,nodev,noexec,relatime master:6 - cgroup cgroup rw,memory\\n\";\n+    private String mntInfoCgroupv1DoubleMemory = mntInfoCgroupv1MoreMemoryLine + mntInfoHybrid;\n+    private String mntInfoCgroupv1DoubleMemory2 = mntInfoHybrid + mntInfoCgroupv1MoreMemoryLine;\n+    private String mntInfoCgroupv1DoubleCpuLine = \"1101 1098 0:29 \/ \/cpu,cpuacct rw,nosuid,nodev,noexec,relatime master:7 - cgroup cgroup rw,cpu,cpuacct\\n\";\n+    private String mntInfoCgroupv1DoubleCpu = mntInfoCgroupv1DoubleCpuLine + mntInfoHybrid;\n+    private String mntInfoCgroupv1DoubleCpu2 = mntInfoHybrid + mntInfoCgroupv1DoubleCpuLine;\n+    private String mntInfoCgroupv1DoublePidsLine = \"1107 1098 0:35 \/ \/pids rw,nosuid,nodev,noexec,relatime master:13 - cgroup cgroup rw,pids\\n\";\n+    private String mntInfoCgroupv1DoublePids = mntInfoCgroupv1DoublePidsLine + mntInfoHybrid;\n+    private String mntInfoCgroupv1DoublePids2 = mntInfoHybrid + mntInfoCgroupv1DoublePidsLine;\n@@ -175,1 +192,5 @@\n-            \"28 21 0:25 \/ \/sys\/fs\/cgroup rw,nosuid,nodev,noexec,relatime shared:4 - cgroup2 none rw,seclabel,nsdelegate\";\n+            \"28 21 0:25 \/ \/sys\/fs\/cgroup rw,nosuid,nodev,noexec,relatime shared:4 - cgroup2 none rw,seclabel,nsdelegate\\n\";\n+    private String mntInfoCgroupsV2MoreLine =\n+            \"240 232 0:24 \/..\/.. \/cgroup-in ro,relatime - cgroup2 cgroup2 rw,nsdelegate\\n\";\n+    private String mntInfoCgroupsV2Double = mntInfoCgroupsV2MoreLine + mntInfoCgroupsV2Only;\n+    private String mntInfoCgroupsV2Double2 = mntInfoCgroupsV2Only + mntInfoCgroupsV2MoreLine;\n@@ -193,0 +214,6 @@\n+            cgroupv2MntInfoDouble = Paths.get(existingDirectory.toString(), \"mountinfo_cgroupv2_double\");\n+            Files.write(cgroupv2MntInfoDouble, mntInfoCgroupsV2Double.getBytes());\n+\n+            cgroupv2MntInfoDouble2 = Paths.get(existingDirectory.toString(), \"mountinfo_cgroupv2_double2\");\n+            Files.write(cgroupv2MntInfoDouble2, mntInfoCgroupsV2Double2.getBytes());\n+\n@@ -220,0 +247,18 @@\n+            cgroupv1MntInfoDoubleMemory = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_memory\");\n+            Files.write(cgroupv1MntInfoDoubleMemory, mntInfoCgroupv1DoubleMemory.getBytes());\n+\n+            cgroupv1MntInfoDoubleMemory2 = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_memory2\");\n+            Files.write(cgroupv1MntInfoDoubleMemory2, mntInfoCgroupv1DoubleMemory2.getBytes());\n+\n+            cgroupv1MntInfoDoubleCpu = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_cpu\");\n+            Files.write(cgroupv1MntInfoDoubleCpu, mntInfoCgroupv1DoubleCpu.getBytes());\n+\n+            cgroupv1MntInfoDoubleCpu2 = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_cpu2\");\n+            Files.write(cgroupv1MntInfoDoubleCpu2, mntInfoCgroupv1DoubleCpu2.getBytes());\n+\n+            cgroupv1MntInfoDoublePids = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_pids\");\n+            Files.write(cgroupv1MntInfoDoublePids, mntInfoCgroupv1DoublePids.getBytes());\n+\n+            cgroupv1MntInfoDoublePids2 = Paths.get(existingDirectory.toString(), \"mnt_info_cgroupv1_double_pids2\");\n+            Files.write(cgroupv1MntInfoDoublePids2, mntInfoCgroupv1DoublePids2.getBytes());\n+\n@@ -277,1 +322,1 @@\n-    public void testCgroupv1MultipleCpusetMounts(WhiteBox wb, Path mountInfo) {\n+    public void testCgroupv1MultipleControllerMounts(WhiteBox wb, Path mountInfo) {\n@@ -282,1 +327,1 @@\n-        Asserts.assertEQ(CGROUPS_V1, retval, \"Multiple cpuset controllers, but only one in \/sys\/fs\/cgroup\");\n+        Asserts.assertEQ(CGROUPS_V1, retval, \"Multiple controllers, but only one in \/sys\/fs\/cgroup\");\n@@ -284,1 +329,1 @@\n-        System.out.println(\"testCgroupv1MultipleCpusetMounts PASSED!\");\n+        System.out.println(\"testCgroupv1MultipleControllerMounts PASSED!\");\n@@ -327,1 +372,1 @@\n-    public void testCgroupv2(WhiteBox wb) {\n+    public void testCgroupv2(WhiteBox wb, Path mountInfo) {\n@@ -330,1 +375,1 @@\n-        String procSelfMountinfo = cgroupv2MntInfoZeroHierarchy.toString();\n+        String procSelfMountinfo = mountInfo.toString();\n@@ -365,1 +410,3 @@\n-            test.testCgroupv2(wb);\n+            test.testCgroupv2(wb, test.cgroupv2MntInfoZeroHierarchy);\n+            test.testCgroupv2(wb, test.cgroupv2MntInfoDouble);\n+            test.testCgroupv2(wb, test.cgroupv2MntInfoDouble2);\n@@ -370,2 +417,8 @@\n-            test.testCgroupv1MultipleCpusetMounts(wb, test.cgroupv1MntInfoDoubleCpuset);\n-            test.testCgroupv1MultipleCpusetMounts(wb, test.cgroupv1MntInfoDoubleCpuset2);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleCpuset);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleCpuset2);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleMemory);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleMemory2);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleCpu);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoubleCpu2);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoublePids);\n+            test.testCgroupv1MultipleControllerMounts(wb, test.cgroupv1MntInfoDoublePids2);\n","filename":"hotspot\/test\/runtime\/containers\/cgroup\/CgroupSubsystemFactory.java","additions":62,"deletions":9,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+            testJavaVersionWithCgMounts();\n@@ -78,0 +79,13 @@\n+\n+\n+    private static void testJavaVersionWithCgMounts() throws Exception {\n+        DockerRunOptions opts =\n+            new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", \"-version\")\n+            .addDockerOpts(\"-v\", \"\/sys\/fs\/cgroup:\/cgroups-in:ro\");\n+\n+        \/\/ Duplicated cgroup mounts should be handled by the container detection\n+        \/\/ code and should not cause any error\/warning output.\n+        DockerTestUtils.dockerRunJava(opts)\n+            .shouldHaveExitValue(0)\n+            .shouldNotMatch(\"\\\\[os,container *\\\\]\");\n+    }\n","filename":"hotspot\/test\/runtime\/containers\/docker\/DockerBasicTest.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -73,4 +73,5 @@\n-            testCpuQuotaAndPeriod(50*1000, 100*1000);\n-            testCpuQuotaAndPeriod(100*1000, 100*1000);\n-            testCpuQuotaAndPeriod(150*1000, 100*1000);\n-            testCpuQuotaAndPeriod(400*1000, 100*1000);\n+            testCpuQuotaAndPeriod(50*1000, 100*1000, false);\n+            testCpuQuotaAndPeriod(100*1000, 100*1000, false);\n+            testCpuQuotaAndPeriod(150*1000, 100*1000, false);\n+            testCpuQuotaAndPeriod(400*1000, 100*1000, false);\n+            testCpuQuotaAndPeriod(50*1000, 100*1000, true \/* additional cgroup mount *\/);\n@@ -156,1 +157,1 @@\n-    private static void testCpuQuotaAndPeriod(int quota, int period)\n+    private static void testCpuQuotaAndPeriod(int quota, int period, boolean addCgmounts)\n@@ -170,0 +171,4 @@\n+        if (addCgmounts) {\n+            opts = opts.addDockerOpts(\"--volume\", \"\/sys\/fs\/cgroup:\/cgroups-in:ro\");\n+        }\n+\n","filename":"hotspot\/test\/runtime\/containers\/docker\/TestCPUAwareness.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -54,4 +54,5 @@\n-            testMemoryLimit(\"100m\", \"104857600\");\n-            testMemoryLimit(\"500m\", \"524288000\");\n-            testMemoryLimit(\"1g\", \"1073741824\");\n-            testMemoryLimit(\"4g\", \"4294967296\");\n+            testMemoryLimit(\"100m\", \"104857600\", false);\n+            testMemoryLimit(\"500m\", \"524288000\", false);\n+            testMemoryLimit(\"1g\", \"1073741824\", false);\n+            testMemoryLimit(\"4g\", \"4294967296\", false);\n+            testMemoryLimit(\"100m\", \"104857600\", true \/* additional cgroup mount *\/);\n@@ -84,1 +85,1 @@\n-    private static void testMemoryLimit(String valueToSet, String expectedTraceValue)\n+    private static void testMemoryLimit(String valueToSet, String expectedTraceValue, boolean addCgmounts)\n@@ -92,0 +93,4 @@\n+        if (addCgmounts) {\n+            opts = opts.addDockerOpts(\"--volume\", \"\/sys\/fs\/cgroup:\/cgroups-in:ro\");\n+        }\n+\n","filename":"hotspot\/test\/runtime\/containers\/docker\/TestMemoryAwareness.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}