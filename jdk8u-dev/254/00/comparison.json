{"files":[{"patch":"@@ -13,1 +13,1 @@\n-        default: \"Linux x64, Linux x86, Windows x64, Windows x86, macOS x64\"\n+        default: \"Linux additional (hotspot only), Linux x64, Linux x86, Windows x64, Windows x86, macOS x64\"\n@@ -26,1 +26,1 @@\n-      platform_linux_additional: false\n+      platform_linux_additional: ${{ steps.check_platforms.outputs.platform_linux_additional }}\n@@ -120,1 +120,1 @@\n-    if: needs.prerequisites.outputs.should_run != 'false' && (needs.prerequisites.outputs.platform_linux_x64 != 'false' || needs.prerequisites.outputs.platform_linux_additional == 'true')\n+    if: needs.prerequisites.outputs.should_run != 'false' && needs.prerequisites.outputs.platform_linux_x64 != 'false'\n@@ -310,1 +310,0 @@\n-      - linux_x64_build\n@@ -319,2 +318,2 @@\n-          - hs x64 minimal build only\n-          - hs x64 optimized build only\n+          - hs x86 minimal build only\n+          - hs x86 client build only\n@@ -330,4 +329,6 @@\n-          - flavor: hs x64 minimal build only\n-            flags: --enable-debug --disable-precompiled-headers --with-jvm-variants=minimal\n-          - flavor: hs x64 optimized build only\n-            flags: --with-debug-level=optimized --disable-precompiled-headers\n+          - flavor: hs x86 minimal build only\n+            flags: --enable-debug --disable-precompiled-headers --with-jvm-variants=minimal1 --with-target-bits=32\n+            multilib: true\n+          - flavor: hs x86 client build only\n+            flags: --enable-debug --disable-precompiled-headers --with-jvm-variants=client --with-target-bits=32\n+            multilib: true\n@@ -339,1 +340,1 @@\n-            flags: --enable-debug --disable-precompiled-headers\n+            flags: --enable-debug --disable-precompiled-headers --with-jvm-variants=zero\n@@ -344,1 +345,1 @@\n-            flags: --enable-debug --disable-precompiled-headers\n+            flags: --enable-debug --disable-precompiled-headers --with-jvm-variants=zero\n@@ -362,25 +363,0 @@\n-      - name: Restore build JDK\n-        id: build_restore\n-        uses: actions\/download-artifact@v3\n-        with:\n-          name: transient_jdk-linux-x64_${{ needs.prerequisites.outputs.bundle_id }}\n-          path: ~\/jdk-linux-x64\n-        continue-on-error: true\n-\n-      - name: Restore build JDK (retry)\n-        uses: actions\/download-artifact@v3\n-        with:\n-          name: transient_jdk-linux-x64_${{ needs.prerequisites.outputs.bundle_id }}\n-          path: ~\/jdk-linux-x64\n-        if: steps.build_restore.outcome == 'failure'\n-\n-      - name: Unpack build JDK\n-        run: |\n-          mkdir -p \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin\"\n-          tar -xf \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin.tar.gz\" -C \"${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin\"\n-\n-      - name: Find root of build JDK image dir\n-        run: |\n-          build_jdk_root=`find ${HOME}\/jdk-linux-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_linux-x64_bin -name release -type f`\n-          echo \"build_jdk_root=`dirname ${build_jdk_root}`\" >> $GITHUB_ENV\n-\n@@ -396,0 +372,9 @@\n+      - name: Install multilib dependencies\n+        run: |\n+          sudo dpkg --add-architecture i386\n+          sudo apt-get update\n+          sudo apt-get install --only-upgrade apt\n+          sudo apt-get install openjdk-8-jdk gcc-9-multilib g++-9-multilib libfreetype6-dev:i386 libxrandr-dev:i386 libxtst-dev:i386 libtiff-dev:i386 libcupsimage2-dev:i386 libcups2-dev:i386 libasound2-dev:i386\n+          sudo update-alternatives --install \/usr\/bin\/gcc gcc \/usr\/bin\/gcc-9 100 --slave \/usr\/bin\/g++ g++ \/usr\/bin\/g++-9\n+        if: matrix.multilib != ''\n+\n@@ -397,1 +382,1 @@\n-        run: sudo apt-get install gcc-9-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-flavor}} g++-9-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-flavor}}\n+        run: sudo apt-get install openjdk-8-jdk gcc-9-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-flavor}} g++-9-${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-flavor}}\n@@ -417,1 +402,1 @@\n-          --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev\n+          --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev,libffi-dev\n@@ -442,0 +427,10 @@\n+          --with-cups=${HOME}\/sysroot-${{ matrix.debian-arch }}\/usr\n+          --with-freetype-lib=${HOME}\/sysroot-${{ matrix.debian-arch }}\/usr\/lib\/${{ matrix.gnu-arch }}-linux-gnu${{ matrix.gnu-flavor}}\n+          --with-freetype-include=${HOME}\/sysroot-${{ matrix.debian-arch }}\/usr\/include\/freetype2\n+          --with-alsa=${HOME}\/sysroot-${{ matrix.debian-arch }}\/usr\n+          --with-fontconfig=${HOME}\/sysroot-${{ matrix.debian-arch }}\/usr\n+          \" >> $GITHUB_ENV\n+          && echo \"cross_conf_env=\n+          CFLAGS=--sysroot=${HOME}\/sysroot-${{ matrix.debian-arch }}\n+          CXXFLAGS=--sysroot=${HOME}\/sysroot-${{ matrix.debian-arch }}\n+          LDFLAGS=--sysroot=${HOME}\/sysroot-${{ matrix.debian-arch }}\n@@ -447,0 +442,1 @@\n+          ${{ env.cross_conf_env }}\n@@ -454,1 +450,1 @@\n-          --with-build-jdk=${{ env.build_jdk_root }}\n+          --disable-headful\n@@ -1568,0 +1564,1 @@\n+      - linux_additional_build\n","filename":".github\/workflows\/submit.yml","additions":37,"deletions":40,"binary":false,"changes":77,"status":"modified"}]}