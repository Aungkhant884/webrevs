{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,3 +109,5 @@\n-        \/\/ in Unicode 6.2. Since code points {32FF} and {20BB..20BF} are not\n-        \/\/ from Unicode 6.2, return false.\n-        if(ch == 0x32FF || (ch>= 0x20BB && ch<= 0x20BF))\n+        \/\/ in Unicode 6.2. Since code points {32FF}, {20BB..20BF}, and\n+        \/\/ {9FCD..9FEF} are not from Unicode 6.2, return false.\n+        if(ch == 0x32FF ||\n+          (ch>= 0x20BB && ch<= 0x20BF) ||\n+          (ch>= 0x9FCD && ch<= 0x9FEF))\n@@ -119,3 +121,5 @@\n-        \/\/ in Unicode 6.2. Since code points {32FF} and {20BB..20BF} are not\n-        \/\/ from Unicode 6.2, return false.\n-        if(ch == 0x32FF || (ch>= 0x20BB && ch<= 0x20BF))\n+        \/\/ in Unicode 6.2. Since code points {32FF}, {20BB..20BF}, and\n+        \/\/ {9FCD..9FEF} are not from Unicode 6.2, return false.\n+        if(ch == 0x32FF ||\n+          (ch>= 0x20BB && ch<= 0x20BF) ||\n+          (ch>= 0x9FCD && ch<= 0x9FEF))\n","filename":"jdk\/make\/data\/characterdata\/CharacterData00.java.template","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -106,0 +106,5 @@\n+        \/\/ isJavaIdentifierStart strictly conforms to code points assigned\n+        \/\/ in Unicode 6.2.\n+        if(Character.UnicodeBlock.of(ch) ==\n+            Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E)\n+            return false;\n@@ -111,0 +116,5 @@\n+        \/\/ isJavaIdentifierPart strictly conforms to code points assigned\n+        \/\/ in Unicode 6.2.\n+        if(Character.UnicodeBlock.of(ch) ==\n+            Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E)\n+            return false;\n","filename":"jdk\/make\/data\/characterdata\/CharacterData02.java.template","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -11735,1 +11735,1 @@\n-9FCC;<CJK Ideograph, Last>;Lo;0;L;;;;;N;;;;;\n+9FEF;<CJK Ideograph, Last>;Lo;0;L;;;;;N;;;;;\n@@ -23553,0 +23553,2 @@\n+2B820;<CJK Ideograph Extension E, First>;Lo;0;L;;;;;N;;;;;\n+2CEA1;<CJK Ideograph Extension E, Last>;Lo;0;L;;;;;N;;;;;\n","filename":"jdk\/make\/data\/unicodedata\/UnicodeData.txt","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,4 +55,1 @@\n- * of the Unicode Standard, with two extensions. First, the Java SE 8 Platform\n- * allows an implementation of class {@code Character} to use the Japanese Era\n- * code point, {@code U+32FF}, from the first version of the Unicode Standard\n- * after 6.2 that assigns the code point. Second, in recognition of the fact\n+ * of the Unicode Standard, with three extensions. First, in recognition of the fact\n@@ -61,1 +58,10 @@\n- * block from version 10.0 of the Unicode Standard. Consequently, the\n+ * block from version 10.0 of the Unicode Standard. Second, the Java SE 8 Platform\n+ * allows an implementation of class {@code Character} to use the code points\n+ * in the range of {@code U+9FCD} to {@code U+9FEF} from version 11.0 of the\n+ * Unicode Standard and in the {@code CJK Unified Ideographs Extension E} block\n+ * from version 8.0 of the Unicode Standard, in order for the class to allow the\n+ * \"Implementation Level 2\" of the Chinese GB18030-2022 standard.\n+ * Third, the Java SE 8 Platform\n+ * allows an implementation of class {@code Character} to use the Japanese Era\n+ * code point, {@code U+32FF}, from the Unicode Standard version 12.1.\n+ * Consequently, the\n@@ -2574,1 +2580,12 @@\n-        private static final int[] blockStarts = {\n+        \/**\n+         * Constant for the \"CJK Unified Ideographs Extension E\" Unicode\n+         * character block.\n+         * @apiNote This field is defined in Java SE 8 Maintenance Release 5.\n+         * @since 1.8\n+         *\/\n+        public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E =\n+                new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E\",\n+                        \"CJK UNIFIED IDEOGRAPHS EXTENSION E\",\n+                        \"CJKUNIFIEDIDEOGRAPHSEXTENSIONE\");\n+\n+        private static final int blockStarts[] = {\n@@ -2822,1 +2839,2 @@\n-            0x2B820,  \/\/               unassigned\n+            0x2B820,  \/\/ 2B820..2CEAF; CJK Unified Ideographs Extension E\n+            0x2CEB0,  \/\/               unassigned\n@@ -3081,0 +3099,1 @@\n+            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E,\n","filename":"jdk\/src\/share\/classes\/java\/lang\/Character.java","additions":27,"deletions":8,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2010, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 6945564 6959267 7033561 7070436 7198195\n+ * @bug 6945564 6959267 7033561 7070436 7198195 8305681\n","filename":"jdk\/test\/java\/lang\/Character\/CheckScript.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1436,1 +1436,1 @@\n-4E00..9FCC    ; Han # Lo [20941] CJK UNIFIED IDEOGRAPH-4E00..CJK UNIFIED IDEOGRAPH-9FCC\n+4E00..9FEF    ; Han # Lo [20976] CJK UNIFIED IDEOGRAPH-4E00..CJK UNIFIED IDEOGRAPH-9FEF\n@@ -1442,0 +1442,1 @@\n+2B820..2CEA1  ; Han # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n@@ -1444,1 +1445,1 @@\n-# Total code points: 75963\n+# Total code points: 81760\n","filename":"jdk\/test\/java\/lang\/Character\/Scripts.txt","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @bug 8218915\n+ * @bug 8218915 8301400 8305681\n@@ -31,3 +31,0 @@\n-import java.util.List;\n-import java.util.ArrayList;\n-\n@@ -35,12 +32,16 @@\n-\n-    \/\/ List of new code points are not present in Unicode 6.2.\n-    private static final List<Integer> UNASSIGNED_CODEPOINTS_IN_6_2\n-                                    = new ArrayList<Integer>()\n-                                    {{\n-                                        add(0x20BB); \/\/ NORDIC MARK SIGN\n-                                        add(0x20BC); \/\/ MANAT SIGN\n-                                        add(0x20BD); \/\/ RUBLE SIGN\n-                                        add(0x20BE); \/\/ LARI SIGN\n-                                        add(0x20BF); \/\/ BITCOIN SIGN\n-                                        add(0x32FF); \/\/ SQUARE ERA NAME NEWERA\n-                                    }};\n+    \/\/ Unassigned code points not present in Unicode 6.2 (which Java SE 8\n+    \/\/ is based upon), including: various currency symbol sign code points\n+    \/\/ (Nordic Mark ... Bitcoin), the Japanese Era Square character code point, and\n+    \/\/ code points for GB1030-2022 level 1 and 2 implementation including\n+    \/\/ (35 code points from CJK Unified Ideographs and all of CJK Unified Ideographs\n+    \/\/ Extension E).\n+    private static final int CS_SIGNS_CODEPOINT_START = 0x20BB;\n+    private static final int CS_SIGNS_CODEPOINT_END = 0x20BF;\n+    private static final int JAPANESE_ERA_CODEPOINT = 0x32FF;\n+    \/\/ GB18030_2022 Code Points\n+    private static final int CJK_GB18030_LEVEL1_START = 0x9FCD;\n+    private static final int CJK_GB18030_LEVEL1_END = 0x9FEF;\n+    \/\/ Extension E code points are greater than U+FFFF,\n+    \/\/ and thus only the int methods need to be tested\n+    private static final int CJK_EXTENSION_E_START = 0x2B820;\n+    private static final int CJK_EXTENSION_E_END = 0x2CEAF;\n@@ -78,1 +79,0 @@\n-\n@@ -81,5 +81,8 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(cp)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (cp != JAPANESE_ERA_CODEPOINT &&\n+                    !(cp >= CS_SIGNS_CODEPOINT_START && cp <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(cp >= CJK_GB18030_LEVEL1_START && cp <= CJK_GB18030_LEVEL1_END) &&\n+                    !(cp >= CJK_EXTENSION_E_START && cp <= CJK_EXTENSION_E_END)) {\n@@ -127,5 +130,7 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(i)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (i != JAPANESE_ERA_CODEPOINT &&\n+                    !(i >= CS_SIGNS_CODEPOINT_START && i <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -168,5 +173,8 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(cp)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (cp != JAPANESE_ERA_CODEPOINT &&\n+                    !(cp >= CS_SIGNS_CODEPOINT_START && cp <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(cp >= CJK_GB18030_LEVEL1_START && cp <= CJK_GB18030_LEVEL1_END) &&\n+                    !(cp >= CJK_EXTENSION_E_START && cp <= CJK_EXTENSION_E_END)) {\n@@ -206,5 +214,7 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(i)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (i != JAPANESE_ERA_CODEPOINT &&\n+                    !(i >= CS_SIGNS_CODEPOINT_START && i <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -244,5 +254,7 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(i)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (i != JAPANESE_ERA_CODEPOINT &&\n+                    !(i >= CS_SIGNS_CODEPOINT_START && i <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -286,5 +298,7 @@\n-            \/\/ check if code point is in \"UNASSIGNED_CODEPOINTS_IN_6_2\"\n-            \/\/ list. If the code point is found in list\n-            \/\/ \"UNASSIGNED_CODEPOINTS_IN_6_2\", value of variable\n-            \/\/ \"expected\" is considered false.\n-            if (!UNASSIGNED_CODEPOINTS_IN_6_2.contains(i)) {\n+            \/\/ check if code point is one of the extra unassigned\n+            \/\/ code points (defined at the beginning of the file). If the code\n+            \/\/ point is found to be one of the unassigned code points,\n+            \/\/ value of variable \"expected\" is considered false.\n+            if (i != JAPANESE_ERA_CODEPOINT &&\n+                    !(i >= CS_SIGNS_CODEPOINT_START && i <= CS_SIGNS_CODEPOINT_END) &&\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n","filename":"jdk\/test\/java\/lang\/Character\/TestIsJavaIdentifierMethods.java","additions":62,"deletions":48,"binary":false,"changes":110,"status":"modified"}]}