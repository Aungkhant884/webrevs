{"files":[{"patch":"@@ -106,0 +106,5 @@\n+        \/\/ isJavaIdentifierStart strictly conforms to code points assigned\n+        \/\/ in Unicode 6.2.\n+        if(Character.UnicodeBlock.of(ch) ==\n+            Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E)\n+            return false;\n@@ -111,0 +116,5 @@\n+        \/\/ isJavaIdentifierPart strictly conforms to code points assigned\n+        \/\/ in Unicode 6.2.\n+        if(Character.UnicodeBlock.of(ch) ==\n+            Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E)\n+            return false;\n","filename":"jdk\/make\/data\/characterdata\/CharacterData02.java.template","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -23553,0 +23553,2 @@\n+2B820;<CJK Ideograph Extension E, First>;Lo;0;L;;;;;N;;;;;\n+2CEA1;<CJK Ideograph Extension E, Last>;Lo;0;L;;;;;N;;;;;\n","filename":"jdk\/make\/data\/unicodedata\/UnicodeData.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,2 +61,4 @@\n- * Unicode Standard, in order for the class to allow the \"Implementation\n- * Level 1\" of the Chinese GB18030-2022 standard. Third, the Java SE 8 Platform\n+ * Unicode Standard and in the {@code CJK Unified Ideographs Extension E} block\n+ * from version 8.0 of the Unicode Standard, in order for the class to allow the\n+ * \"Implementation Level 2\" of the Chinese GB18030-2022 standard.\n+ * Third, the Java SE 8 Platform\n@@ -2578,1 +2580,12 @@\n-        private static final int[] blockStarts = {\n+        \/**\n+         * Constant for the \"CJK Unified Ideographs Extension E\" Unicode\n+         * character block.\n+         * @apiNote This field is defined in Java SE 8 Maintenance Release 5.\n+         * @since 1.8\n+         *\/\n+        public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E =\n+                new UnicodeBlock(\"CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E\",\n+                        \"CJK UNIFIED IDEOGRAPHS EXTENSION E\",\n+                        \"CJKUNIFIEDIDEOGRAPHSEXTENSIONE\");\n+\n+        private static final int blockStarts[] = {\n@@ -2826,1 +2839,2 @@\n-            0x2B820,  \/\/               unassigned\n+            0x2B820,  \/\/ 2B820..2CEAF; CJK Unified Ideographs Extension E\n+            0x2CEB0,  \/\/               unassigned\n@@ -3085,0 +3099,1 @@\n+            CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E,\n","filename":"jdk\/src\/share\/classes\/java\/lang\/Character.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2010, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n- * @bug 6945564 6959267 7033561 7070436 7198195\n+ * @bug 6945564 6959267 7033561 7070436 7198195 8305681\n","filename":"jdk\/test\/java\/lang\/Character\/CheckScript.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1442,0 +1442,1 @@\n+2B820..2CEA1  ; Han # Lo [5762] CJK UNIFIED IDEOGRAPH-2B820..CJK UNIFIED IDEOGRAPH-2CEA1\n@@ -1444,1 +1445,1 @@\n-# Total code points: 75998\n+# Total code points: 81760\n","filename":"jdk\/test\/java\/lang\/Character\/Scripts.txt","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8218915\n+ * @bug 8218915 8301400 8305681\n@@ -34,2 +34,4 @@\n-    \/\/ (Nordic Mark ... Bitcoin), Japanese Era Square character code point,\n-    \/\/ and 35 CJK Unified Ideograph code points from GB18030-2022\n+    \/\/ (Nordic Mark ... Bitcoin), the Japanese Era Square character code point, and\n+    \/\/ code points for GB1030-2022 level 1 and 2 implementation including\n+    \/\/ (35 code points from CJK Unified Ideographs and all of CJK Unified Ideographs\n+    \/\/ Extension E).\n@@ -39,2 +41,7 @@\n-    private static final int GB18030_2022_CODEPOINT_START = 0x9FCD;\n-    private static final int GB18030_2022_CODEPOINT_END = 0x9FEF;\n+    \/\/ GB18030_2022 Code Points\n+    private static final int CJK_GB18030_LEVEL1_START = 0x9FCD;\n+    private static final int CJK_GB18030_LEVEL1_END = 0x9FEF;\n+    \/\/ Extension E code points are greater than U+FFFF,\n+    \/\/ and thus only the int methods need to be tested\n+    private static final int CJK_EXTENSION_E_START = 0x2B820;\n+    private static final int CJK_EXTENSION_E_END = 0x2CEAF;\n@@ -80,1 +87,2 @@\n-                    !(cp >= GB18030_2022_CODEPOINT_START && cp <= GB18030_2022_CODEPOINT_END)) {\n+                    !(cp >= CJK_GB18030_LEVEL1_START && cp <= CJK_GB18030_LEVEL1_END) &&\n+                    !(cp >= CJK_EXTENSION_E_START && cp <= CJK_EXTENSION_E_END)) {\n@@ -128,1 +136,1 @@\n-                    !(i >= GB18030_2022_CODEPOINT_START && i <= GB18030_2022_CODEPOINT_END)) {\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -171,1 +179,2 @@\n-                    !(cp >= GB18030_2022_CODEPOINT_START && cp <= GB18030_2022_CODEPOINT_END)) {\n+                    !(cp >= CJK_GB18030_LEVEL1_START && cp <= CJK_GB18030_LEVEL1_END) &&\n+                    !(cp >= CJK_EXTENSION_E_START && cp <= CJK_EXTENSION_E_END)) {\n@@ -211,1 +220,1 @@\n-                    !(i >= GB18030_2022_CODEPOINT_START && i <= GB18030_2022_CODEPOINT_END)) {\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -251,1 +260,1 @@\n-                    !(i >= GB18030_2022_CODEPOINT_START && i <= GB18030_2022_CODEPOINT_END)) {\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n@@ -295,1 +304,1 @@\n-                    !(i >= GB18030_2022_CODEPOINT_START && i <= GB18030_2022_CODEPOINT_END)) {\n+                    !(i >= CJK_GB18030_LEVEL1_START && i <= CJK_GB18030_LEVEL1_END)) {\n","filename":"jdk\/test\/java\/lang\/Character\/TestIsJavaIdentifierMethods.java","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"}]}