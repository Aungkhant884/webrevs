{"files":[{"patch":"@@ -1139,1 +1139,1 @@\n-    private boolean isGB18032_2000 = false;\n+    private boolean isGB18030_2000 = false;\n@@ -1141,4 +1141,4 @@\n-    \/\/ If the sun.nio.cs.map property is defined on the command line we won't\n-    \/\/ see it in the system-properties table until after the charset subsystem\n-    \/\/ has been initialized.  We therefore delay the effect of this property\n-    \/\/ until after the JRE has completely booted.\n+    \/\/ If the sun.nio.cs.map and\/or jdk.charset.GB18030 properties are defined\n+    \/\/ on the command line we won't see them in the system-properties table until\n+    \/\/ after the charset subsystem has been initialized.  We therefore delay\n+    \/\/ the effect of these property until after the JRE has completely booted.\n@@ -1146,2 +1146,2 @@\n-    \/\/ At the moment following values for this property are supported, property\n-    \/\/ value string is case insensitive.\n+    \/\/ At the moment the following values for the sun.nio.cs.map property are\n+    \/\/ supported and the property value string is case insensitive.\n@@ -1180,0 +1180,4 @@\n+    \/\/ The jdk.charset.GB18030 property is simpler and accepts only the value\n+    \/\/ \"2000\".  If this value is given, the older GB18030-2000 variant of the\n+    \/\/ character set replaces the default GB18030-2022 variant.\n+    \/\/\n@@ -1330,1 +1334,1 @@\n-        this.isGB18032_2000 = isGB18030_2000;\n+        this.isGB18030_2000 = isGB18030_2000;\n@@ -1340,1 +1344,1 @@\n-    static boolean isGB18030_2000() {\n+    static boolean IS_2000() {\n@@ -1347,1 +1351,1 @@\n-        return instance.isGB18032_2000;\n+        return instance.isGB18030_2000;\n","filename":"jdk\/src\/share\/classes\/sun\/nio\/cs\/ext\/ExtendedCharsets.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1048,1 +1048,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u1E3E\\u1E3F\\u1E40\\u1E41\\u1E42\\u1E43\\u1E44\\u1E45\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u1E3E\\u1E3F\\u1E40\\u1E41\\u1E42\\u1E43\\u1E44\\u1E45\" :\n@@ -2505,1 +2505,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\"+\n@@ -2771,1 +2771,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE10\\uFE11\\uFE12\\uFE13\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\uFE0C\\uFE0D\\uFE0E\\uFE0F\\uFE10\\uFE11\\uFE12\\uFE13\"+\n@@ -3780,1 +3780,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u03C7\\u03C8\\u03C9\\uE78D\\uE78E\\uE78F\\uE790\\uE791\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\u03C7\\u03C8\\u03C9\\uE78D\\uE78E\\uE78F\\uE790\\uE791\"+\n@@ -3828,1 +3828,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u01DC\\u00FC\\u00EA\\u0251\\uE7C7\\u0144\\u0148\\u01F9\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u01DC\\u00FC\\u00EA\\u0251\\uE7C7\\u0144\\u0148\\u01F9\" :\n@@ -5880,1 +5880,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u3447\\u2E88\\u2E8B\\uE81E\\u359E\\u361A\\u360E\\u2E8C\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\u3447\\u2E88\\u2E8B\\uE81E\\u359E\\u361A\\u360E\\u2E8C\"+\n@@ -5888,1 +5888,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uE843\\uFFFD\\u4723\\u4729\\u477C\\u478D\\u2ECA\\u4947\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\uE843\\uFFFD\\u4723\\u4729\\u477C\\u478D\\u2ECA\\u4947\" :\n@@ -5891,1 +5891,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u49B7\\u49B6\\uE854\\uE855\\u4CA3\\u4C9F\\u4CA0\\u4CA1\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u49B7\\u49B6\\uE854\\uE855\\u4CA3\\u4C9F\\u4CA0\\u4CA1\" :\n@@ -5894,1 +5894,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u4D19\\u4DAE\\uE864\\uE468\\uE469\\uE46A\\uE46B\\uE46C\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u4D19\\u4DAE\\uE864\\uE468\\uE469\\uE46A\\uE46B\\uE46C\" :\n@@ -6913,1 +6913,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u3D1A\\u3D1B\\u3D1C\\u3D1D\\u3D1E\\u3D1F\\u3D20\\u3D21\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u3D1A\\u3D1B\\u3D1C\\u3D1D\\u3D1E\\u3D1F\\u3D20\\u3D21\" :\n@@ -11073,1 +11073,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u6A6D\\u6A6E\\u6A6F\\u6A70\\u6A71\\u6A72\\u6A73\\u6A74\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\u6A6D\\u6A6E\\u6A6F\\u6A70\\u6A71\\u6A72\\u6A73\\u6A74\"+\n@@ -11488,1 +11488,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uA6BC\\uA6BD\\uA6BE\\uA6BF\\uA6C0\\uA6D9\\uA6DA\\uA6DB\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\uA6BC\\uA6BD\\uA6BE\\uA6BF\\uA6C0\\uA6D9\\uA6DA\\uA6DB\"+\n@@ -11497,1 +11497,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8BC\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\uA89A\\uA89B\\uA89C\\uA89D\\uA89E\\uA89F\\uA8A0\\uA8BC\" :\n@@ -11509,1 +11509,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\uFE53\\u2010\\u2011\\u2012\\u2013\\u2014\\uFE59\\u2015\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\uFE53\\u2010\\u2011\\u2012\\u2013\\u2014\\uFE59\\u2015\"+\n@@ -11518,1 +11518,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u2030\\u2031\\u2032\\uFE7E\\u2033\\u2034\\u2035\\u2036\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u2030\\u2031\\u2032\\uFE7E\\u2033\\u2034\\u2035\\u2036\" :\n@@ -11521,1 +11521,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u203F\\u2040\\u2041\\u2042\\uFE90\\uFE91\\u2043\\u2044\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u203F\\u2040\\u2041\\u2042\\uFE90\\uFE91\\u2043\\u2044\" :\n@@ -11524,1 +11524,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u204D\\u204E\\u204F\\u2050\\uFEA0\\u2051\\u2052\\u2053\" :\n+        (ExtendedCharsets.IS_2000() ? \"\\u204D\\u204E\\u204F\\u2050\\uFEA0\\u2051\\u2052\\u2053\" :\n@@ -12223,1 +12223,1 @@\n-        (ExtendedCharsets.isGB18030_2000() ? \"\\u24FB\\u24FC\\u24FD\\u24FE\\u24FF\\u2500\\u2501\\u2502\"+\n+        (ExtendedCharsets.IS_2000() ? \"\\u24FB\\u24FC\\u24FD\\u24FE\\u24FF\\u2500\\u2501\\u2502\"+\n@@ -12375,1 +12375,1 @@\n-            boolean isGB18030_2000 = ExtendedCharsets.isGB18030_2000();\n+            boolean isGB18030_2000 = ExtendedCharsets.IS_2000();\n@@ -12485,1 +12485,1 @@\n-            boolean isGB18030_2000 = ExtendedCharsets.isGB18030_2000();\n+            boolean isGB18030_2000 = ExtendedCharsets.IS_2000();\n@@ -12640,1 +12640,1 @@\n-            boolean isGB18030_2000 = ExtendedCharsets.isGB18030_2000();\n+            boolean isGB18030_2000 = ExtendedCharsets.IS_2000();\n@@ -12755,1 +12755,1 @@\n-            boolean isGB18030_2000 = ExtendedCharsets.isGB18030_2000();\n+            boolean isGB18030_2000 = ExtendedCharsets.IS_2000();\n","filename":"jdk\/src\/share\/classes\/sun\/nio\/cs\/ext\/GB18030.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -501,1 +501,1 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n@@ -515,2 +515,2 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n@@ -534,3 +534,3 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n@@ -556,4 +556,4 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n@@ -581,5 +581,5 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n@@ -609,6 +609,6 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n@@ -640,7 +640,7 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n@@ -674,8 +674,8 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n@@ -711,9 +711,9 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n-        if (e9 == null) { throw new NullPointerException(\"e9\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n+        Objects.requireNonNull(e9, \"e9\");\n@@ -751,10 +751,10 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n-        if (e9 == null) { throw new NullPointerException(\"e9\"); }\n-        if (e10 == null) { throw new NullPointerException(\"e10\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n+        Objects.requireNonNull(e9, \"e9\");\n+        Objects.requireNonNull(e10, \"e10\");\n@@ -845,1 +845,1 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n@@ -848,2 +848,1 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n@@ -865,2 +864,2 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n@@ -869,4 +868,2 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n@@ -889,3 +886,3 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n@@ -894,6 +891,3 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n@@ -917,4 +911,4 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n@@ -923,8 +917,4 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n@@ -949,5 +939,5 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n@@ -956,10 +946,5 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n@@ -985,6 +970,6 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n@@ -993,12 +978,6 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n-        added = s.add(e6);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 6\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e6)) { throw new IllegalArgumentException(\"duplicate 6\"); }\n@@ -1025,7 +1004,7 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n@@ -1034,14 +1013,7 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n-        added = s.add(e6);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 6\"); }\n-        added = s.add(e7);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 7\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e6)) { throw new IllegalArgumentException(\"duplicate 6\"); }\n+        if (!s.add(e7)) { throw new IllegalArgumentException(\"duplicate 7\"); }\n@@ -1069,8 +1041,8 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n@@ -1079,16 +1051,8 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n-        added = s.add(e6);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 6\"); }\n-        added = s.add(e7);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 7\"); }\n-        added = s.add(e8);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 8\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e6)) { throw new IllegalArgumentException(\"duplicate 6\"); }\n+        if (!s.add(e7)) { throw new IllegalArgumentException(\"duplicate 7\"); }\n+        if (!s.add(e8)) { throw new IllegalArgumentException(\"duplicate 8\"); }\n@@ -1117,9 +1081,9 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n-        if (e9 == null) { throw new NullPointerException(\"e9\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n+        Objects.requireNonNull(e9, \"e9\");\n@@ -1128,18 +1092,9 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n-        added = s.add(e6);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 6\"); }\n-        added = s.add(e7);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 7\"); }\n-        added = s.add(e8);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 8\"); }\n-        added = s.add(e9);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 9\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e6)) { throw new IllegalArgumentException(\"duplicate 6\"); }\n+        if (!s.add(e7)) { throw new IllegalArgumentException(\"duplicate 7\"); }\n+        if (!s.add(e8)) { throw new IllegalArgumentException(\"duplicate 8\"); }\n+        if (!s.add(e9)) { throw new IllegalArgumentException(\"duplicate 9\"); }\n@@ -1169,10 +1124,10 @@\n-        if (e1 == null) { throw new NullPointerException(\"e1\"); }\n-        if (e2 == null) { throw new NullPointerException(\"e2\"); }\n-        if (e3 == null) { throw new NullPointerException(\"e3\"); }\n-        if (e4 == null) { throw new NullPointerException(\"e4\"); }\n-        if (e5 == null) { throw new NullPointerException(\"e5\"); }\n-        if (e6 == null) { throw new NullPointerException(\"e6\"); }\n-        if (e7 == null) { throw new NullPointerException(\"e7\"); }\n-        if (e8 == null) { throw new NullPointerException(\"e8\"); }\n-        if (e9 == null) { throw new NullPointerException(\"e9\"); }\n-        if (e10 == null) { throw new NullPointerException(\"e10\"); }\n+        Objects.requireNonNull(e1, \"e1\");\n+        Objects.requireNonNull(e2, \"e2\");\n+        Objects.requireNonNull(e3, \"e3\");\n+        Objects.requireNonNull(e4, \"e4\");\n+        Objects.requireNonNull(e5, \"e5\");\n+        Objects.requireNonNull(e6, \"e6\");\n+        Objects.requireNonNull(e7, \"e7\");\n+        Objects.requireNonNull(e8, \"e8\");\n+        Objects.requireNonNull(e9, \"e9\");\n+        Objects.requireNonNull(e10, \"e10\");\n@@ -1181,20 +1136,10 @@\n-        boolean added = s.add(e1);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 1\"); }\n-        added = s.add(e2);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 2\"); }\n-        added = s.add(e3);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 3\"); }\n-        added = s.add(e4);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 4\"); }\n-        added = s.add(e5);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 5\"); }\n-        added = s.add(e6);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 6\"); }\n-        added = s.add(e7);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 7\"); }\n-        added = s.add(e8);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 8\"); }\n-        added = s.add(e9);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 9\"); }\n-        added = s.add(e10);\n-        if (!added) { throw new IllegalArgumentException(\"duplicate 10\"); }\n+        if (!s.add(e1)) { throw new IllegalArgumentException(\"duplicate 1\"); }\n+        if (!s.add(e2)) { throw new IllegalArgumentException(\"duplicate 2\"); }\n+        if (!s.add(e3)) { throw new IllegalArgumentException(\"duplicate 3\"); }\n+        if (!s.add(e4)) { throw new IllegalArgumentException(\"duplicate 4\"); }\n+        if (!s.add(e5)) { throw new IllegalArgumentException(\"duplicate 5\"); }\n+        if (!s.add(e6)) { throw new IllegalArgumentException(\"duplicate 6\"); }\n+        if (!s.add(e7)) { throw new IllegalArgumentException(\"duplicate 7\"); }\n+        if (!s.add(e8)) { throw new IllegalArgumentException(\"duplicate 8\"); }\n+        if (!s.add(e9)) { throw new IllegalArgumentException(\"duplicate 9\"); }\n+        if (!s.add(e10)) { throw new IllegalArgumentException(\"duplicate 10\"); }\n@@ -1241,3 +1186,4 @@\n-                    if (elements[a] == null) { throw new NullPointerException(\"e\" + a); }\n-                    boolean added = s.add(elements[a]);\n-                    if (!added) { throw new IllegalArgumentException(\"duplicate \" + a); }\n+                    Objects.requireNonNull(elements[a], \"e\" + a);\n+                    if (!s.add(elements[a])) {\n+                        throw new IllegalArgumentException(\"duplicate \" + a);\n+                    }\n","filename":"jdk\/test\/lib\/testlibrary\/jdk\/testlibrary\/Utils.java","additions":169,"deletions":223,"binary":false,"changes":392,"status":"modified"}]}