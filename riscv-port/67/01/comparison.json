{"files":[{"patch":"@@ -1545,0 +1545,28 @@\n+void C2_MacroAssembler::count_positives_v(Register ary, Register len, Register result, Register tmp) {\n+  Label LOOP, SET_RESULT, DONE;\n+\n+  BLOCK_COMMENT(\"count_positives_v {\");\n+  mv(result, zr);\n+\n+  bind(LOOP);\n+  vsetvli(t0, len, Assembler::e8, Assembler::m4);\n+  vle8_v(v0, ary);\n+  vmslt_vx(v0, v0, zr);\n+  vfirst_m(tmp, v0);\n+  bgez(tmp, SET_RESULT);\n+  \/\/ if tmp == -1, all bytes are positive\n+  add(result, result, t0);\n+\n+  sub(len, len, t0);\n+  add(ary, ary, t0);\n+  bnez(len, LOOP);\n+  j(DONE);\n+\n+  \/\/ add remaining positive bytes count\n+  bind(SET_RESULT);\n+  add(result, result, tmp);\n+\n+  bind(DONE);\n+  BLOCK_COMMENT(\"} count_positives_v\");\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -176,0 +176,3 @@\n+ void count_positives_v(Register ary, Register len,\n+                        Register result, Register tmp);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1996,0 +1996,14 @@\n+instruct vcount_positives(iRegP_R11 ary, iRegI_R12 len, iRegI_R10 result, iRegL tmp)\n+%{\n+  predicate(UseRVV);\n+  match(Set result (CountPositives ary len));\n+  effect(USE_KILL ary, USE_KILL len, TEMP tmp);\n+\n+  format %{ \"count positives byte[] $ary, $len -> $result\" %}\n+  ins_encode %{\n+    __ count_positives_v($ary$$Register, $len$$Register, $result$$Register, $tmp$$Register);\n+  %}\n+\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}