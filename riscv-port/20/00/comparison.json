{"files":[{"patch":"@@ -160,3 +160,3 @@\n-\/\/ for Java use float registers v0-v15 are always save on call whereas\n-\/\/ the platform ABI treats v8-v15 as callee save). float registers\n-\/\/ v16-v31 are SOC as per the platform spec\n+\/\/ for Java use float registers f0-f31 are always save on call whereas\n+\/\/ the platform ABI treats f8-f9 and f18-f27 as callee save). Other\n+\/\/ float registers are SOC as per the platform spec\n@@ -180,4 +180,4 @@\n-reg_def F8    ( SOC, SOC, Op_RegF,  8,  f8->as_VMReg()          );\n-reg_def F8_H  ( SOC, SOC, Op_RegF,  8,  f8->as_VMReg()->next()  );\n-reg_def F9    ( SOC, SOC, Op_RegF,  9,  f9->as_VMReg()          );\n-reg_def F9_H  ( SOC, SOC, Op_RegF,  9,  f9->as_VMReg()->next()  );\n+reg_def F8    ( SOC, SOE, Op_RegF,  8,  f8->as_VMReg()          );\n+reg_def F8_H  ( SOC, SOE, Op_RegF,  8,  f8->as_VMReg()->next()  );\n+reg_def F9    ( SOC, SOE, Op_RegF,  9,  f9->as_VMReg()          );\n+reg_def F9_H  ( SOC, SOE, Op_RegF,  9,  f9->as_VMReg()->next()  );\n@@ -200,20 +200,20 @@\n-reg_def F18   ( SOC, SOC, Op_RegF,  18, f18->as_VMReg()         );\n-reg_def F18_H ( SOC, SOC, Op_RegF,  18, f18->as_VMReg()->next() );\n-reg_def F19   ( SOC, SOC, Op_RegF,  19, f19->as_VMReg()         );\n-reg_def F19_H ( SOC, SOC, Op_RegF,  19, f19->as_VMReg()->next() );\n-reg_def F20   ( SOC, SOC, Op_RegF,  20, f20->as_VMReg()         );\n-reg_def F20_H ( SOC, SOC, Op_RegF,  20, f20->as_VMReg()->next() );\n-reg_def F21   ( SOC, SOC, Op_RegF,  21, f21->as_VMReg()         );\n-reg_def F21_H ( SOC, SOC, Op_RegF,  21, f21->as_VMReg()->next() );\n-reg_def F22   ( SOC, SOC, Op_RegF,  22, f22->as_VMReg()         );\n-reg_def F22_H ( SOC, SOC, Op_RegF,  22, f22->as_VMReg()->next() );\n-reg_def F23   ( SOC, SOC, Op_RegF,  23, f23->as_VMReg()         );\n-reg_def F23_H ( SOC, SOC, Op_RegF,  23, f23->as_VMReg()->next() );\n-reg_def F24   ( SOC, SOC, Op_RegF,  24, f24->as_VMReg()         );\n-reg_def F24_H ( SOC, SOC, Op_RegF,  24, f24->as_VMReg()->next() );\n-reg_def F25   ( SOC, SOC, Op_RegF,  25, f25->as_VMReg()         );\n-reg_def F25_H ( SOC, SOC, Op_RegF,  25, f25->as_VMReg()->next() );\n-reg_def F26   ( SOC, SOC, Op_RegF,  26, f26->as_VMReg()         );\n-reg_def F26_H ( SOC, SOC, Op_RegF,  26, f26->as_VMReg()->next() );\n-reg_def F27   ( SOC, SOC, Op_RegF,  27, f27->as_VMReg()         );\n-reg_def F27_H ( SOC, SOC, Op_RegF,  27, f27->as_VMReg()->next() );\n+reg_def F18   ( SOC, SOE, Op_RegF,  18, f18->as_VMReg()         );\n+reg_def F18_H ( SOC, SOE, Op_RegF,  18, f18->as_VMReg()->next() );\n+reg_def F19   ( SOC, SOE, Op_RegF,  19, f19->as_VMReg()         );\n+reg_def F19_H ( SOC, SOE, Op_RegF,  19, f19->as_VMReg()->next() );\n+reg_def F20   ( SOC, SOE, Op_RegF,  20, f20->as_VMReg()         );\n+reg_def F20_H ( SOC, SOE, Op_RegF,  20, f20->as_VMReg()->next() );\n+reg_def F21   ( SOC, SOE, Op_RegF,  21, f21->as_VMReg()         );\n+reg_def F21_H ( SOC, SOE, Op_RegF,  21, f21->as_VMReg()->next() );\n+reg_def F22   ( SOC, SOE, Op_RegF,  22, f22->as_VMReg()         );\n+reg_def F22_H ( SOC, SOE, Op_RegF,  22, f22->as_VMReg()->next() );\n+reg_def F23   ( SOC, SOE, Op_RegF,  23, f23->as_VMReg()         );\n+reg_def F23_H ( SOC, SOE, Op_RegF,  23, f23->as_VMReg()->next() );\n+reg_def F24   ( SOC, SOE, Op_RegF,  24, f24->as_VMReg()         );\n+reg_def F24_H ( SOC, SOE, Op_RegF,  24, f24->as_VMReg()->next() );\n+reg_def F25   ( SOC, SOE, Op_RegF,  25, f25->as_VMReg()         );\n+reg_def F25_H ( SOC, SOE, Op_RegF,  25, f25->as_VMReg()->next() );\n+reg_def F26   ( SOC, SOE, Op_RegF,  26, f26->as_VMReg()         );\n+reg_def F26_H ( SOC, SOE, Op_RegF,  26, f26->as_VMReg()->next() );\n+reg_def F27   ( SOC, SOE, Op_RegF,  27, f27->as_VMReg()         );\n+reg_def F27_H ( SOC, SOE, Op_RegF,  27, f27->as_VMReg()->next() );\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"}]}