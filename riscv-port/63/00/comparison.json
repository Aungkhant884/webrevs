{"files":[{"patch":"@@ -2907,0 +2907,54 @@\n+\n+  \/\/ Arguments:\n+  \/\/\n+  \/\/ Input:\n+  \/\/   c_rarg0   - newArr address\n+  \/\/   c_rarg1   - oldArr address\n+  \/\/   c_rarg2   - newIdx\n+  \/\/   c_rarg3   - shiftCount\n+  \/\/   c_rarg4   - numIter\n+  \/\/\n+  address generate_bigIntegerRightShift() {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"bigIntegerRightShiftWorker\");\n+    address entry = __ pc();\n+\n+    Label loop, exit;\n+\n+    Register newArr        = c_rarg0;\n+    Register oldArr        = c_rarg1;\n+    Register newIdx        = c_rarg2;\n+    Register shiftCount    = c_rarg3;\n+    Register numIter       = c_rarg4;\n+    Register idx           = numIter;\n+\n+    Register shiftRevCount = c_rarg5;\n+    Register oldArrNext    = c_rarg6;\n+    Register newArrCur     = t0;\n+    Register oldArrCur     = t1;\n+\n+    __ beqz(idx, exit);\n+    __ shadd(newArr, newIdx, newArr, t0, 2);\n+\n+    __ li(shiftRevCount, 32);\n+    __ sub(shiftRevCount, shiftRevCount, shiftCount);\n+\n+    __ bind(loop);\n+    __ vsetvli(t0, idx, Assembler::e32, Assembler::m4);\n+    __ sub(idx, idx, t0);\n+    __ shadd(oldArrNext, idx, oldArr, t1, 2);\n+    __ shadd(newArrCur, idx, newArr, t1, 2);\n+    __ addi(oldArrCur, oldArrNext, 4);\n+    __ vle32_v(v0, oldArrCur);\n+    __ vle32_v(v4, oldArrNext);\n+    __ vsrl_vx(v0, v0, shiftCount);\n+    __ vsll_vx(v4, v4, shiftRevCount);\n+    __ vor_vv(v0, v0, v4);\n+    __ vse32_v(v0, newArrCur);\n+    __ bnez(idx, loop);\n+\n+    __ bind(exit);\n+    __ ret();\n+\n+    return entry;\n+  }\n@@ -3775,0 +3829,1 @@\n+      StubRoutines::_bigIntegerRightShiftWorker = generate_bigIntegerRightShift();\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}