{"files":[{"patch":"@@ -101,25 +101,15 @@\n-    const address lui = instr;\n-    const Register lui_rd = extract_rd(lui);\n-    const address addi1 = lui + instruction_size;\n-    const Register addi1_rs1 = extract_rs1(addi1);\n-    const Register addi1_rd  = extract_rd(addi1);\n-    const address slli1 = addi1 + instruction_size;\n-    const Register slli1_rs1 = extract_rs1(slli1);\n-    const Register slli1_rd  = extract_rd(slli1);\n-    const address addi2 = slli1 + instruction_size;\n-    const Register addi2_rs1 = extract_rs1(addi2);\n-    const Register addi2_rd  = extract_rd(addi2);\n-    const address slli2 = addi2 + instruction_size;\n-    const Register slli2_rs1 = extract_rs1(slli2);\n-    const Register slli2_rd  = extract_rd(slli2);\n-    const address last_instr = slli2 + instruction_size;\n-    const Register last_instr_rs1 = extract_rs1(last_instr);\n-    return addi1_rs1 == lui_rd &&\n-           addi1_rs1 == addi1_rd &&\n-           slli1_rs1 == addi1_rd &&\n-           slli1_rs1 == slli1_rd &&\n-           addi2_rs1 == slli1_rd &&\n-           addi2_rs1 == addi2_rd &&\n-           slli2_rs1 == addi2_rd &&\n-           slli2_rs1 == slli2_rd &&\n-           last_instr_rs1 == slli2_rd;\n+    address lui = instr;\n+    address addi1 = lui + instruction_size;\n+    address slli1 = addi1 + instruction_size;\n+    address addi2 = slli1 + instruction_size;\n+    address slli2 = addi2 + instruction_size;\n+    address last_instr = slli2 + instruction_size;\n+    return extract_rs1(addi1) == extract_rd(lui) &&\n+           extract_rs1(addi1) == extract_rd(addi1) &&\n+           extract_rs1(slli1) == extract_rd(addi1) &&\n+           extract_rs1(slli1) == extract_rd(slli1) &&\n+           extract_rs1(addi2) == extract_rd(slli1) &&\n+           extract_rs1(addi2) == extract_rd(addi2) &&\n+           extract_rs1(slli2) == extract_rd(addi2) &&\n+           extract_rs1(slli2) == extract_rd(slli2) &&\n+           extract_rs1(last_instr) == extract_rd(slli2);\n@@ -138,37 +128,22 @@\n-    const address lui = instr;\n-    const Register lui_rd = extract_rd(lui);\n-    const address addi1 = lui + instruction_size;\n-    const Register addi1_rs1 = extract_rs1(addi1);\n-    const Register addi1_rd  = extract_rd(addi1);\n-    const address slli1 = addi1 + instruction_size;\n-    const Register slli1_rs1 = extract_rs1(slli1);\n-    const Register slli1_rd  = extract_rd(slli1);\n-    const address addi2 = slli1 + instruction_size;\n-    const Register addi2_rs1 = extract_rs1(addi2);\n-    const Register addi2_rd  = extract_rd(addi2);\n-    const address slli2 = addi2 + instruction_size;\n-    const Register slli2_rs1 = extract_rs1(slli2);\n-    const Register slli2_rd  = extract_rd(slli2);\n-    const address addi3 = slli2 + instruction_size;\n-    const Register addi3_rs1 = extract_rs1(addi3);\n-    const Register addi3_rd  = extract_rd(addi3);\n-    const address slli3 = addi3 + instruction_size;\n-    const Register slli3_rs1 = extract_rs1(slli3);\n-    const Register slli3_rd  = extract_rd(slli3);\n-    const address addi4 = slli3 + instruction_size;\n-    const Register addi4_rs1 = extract_rs1(addi4);\n-    const Register addi4_rd  = extract_rd(addi4);\n-    return addi1_rs1 == lui_rd &&\n-           addi1_rs1 == addi1_rd &&\n-           slli1_rs1 == addi1_rd &&\n-           slli1_rs1 == slli1_rd &&\n-           addi2_rs1 == slli1_rd &&\n-           addi2_rs1 == addi2_rd &&\n-           slli2_rs1 == addi2_rd &&\n-           slli2_rs1 == slli2_rd &&\n-           addi3_rs1 == slli2_rd &&\n-           addi3_rs1 == addi3_rd &&\n-           slli3_rs1 == addi3_rd &&\n-           slli3_rs1 == slli3_rd &&\n-           addi4_rs1 == slli3_rd &&\n-           addi4_rs1 == addi4_rd;\n+    address lui = instr;\n+    address addi1 = lui + instruction_size;\n+    address slli1 = addi1 + instruction_size;\n+    address addi2 = slli1 + instruction_size;\n+    address slli2 = addi2 + instruction_size;\n+    address addi3 = slli2 + instruction_size;\n+    address slli3 = addi3 + instruction_size;\n+    address addi4 = slli3 + instruction_size;\n+    return extract_rs1(addi1) == extract_rd(lui) &&\n+           extract_rs1(addi1) == extract_rd(addi1) &&\n+           extract_rs1(slli1) == extract_rd(addi1) &&\n+           extract_rs1(slli1) == extract_rd(slli1) &&\n+           extract_rs1(addi2) == extract_rd(slli1) &&\n+           extract_rs1(addi2) == extract_rd(addi2) &&\n+           extract_rs1(slli2) == extract_rd(addi2) &&\n+           extract_rs1(slli2) == extract_rd(slli2) &&\n+           extract_rs1(addi3) == extract_rd(slli2) &&\n+           extract_rs1(addi3) == extract_rd(addi3) &&\n+           extract_rs1(slli3) == extract_rd(addi3) &&\n+           extract_rs1(slli3) == extract_rd(slli3) &&\n+           extract_rs1(addi4) == extract_rd(slli3) &&\n+           extract_rs1(addi4) == extract_rd(addi4);\n@@ -181,8 +156,5 @@\n-    const address lui = instr;\n-    const Register lui_rd = extract_rd(lui);\n-    const address addiw = lui + instruction_size;\n-    const Register addiw_rs1 = extract_rs1(addiw);\n-    const Register addiw_rd  = extract_rd(addiw);\n-\n-    return addiw_rs1 == lui_rd &&\n-           addiw_rs1 == addiw_rd;\n+    address lui = instr;\n+    address addiw = lui + instruction_size;\n+\n+    return extract_rs1(addiw) == extract_rd(lui) &&\n+           extract_rs1(addiw) == extract_rd(addiw);\n@@ -195,2 +167,2 @@\n-    const address auipc = instr;\n-    const address last_instr = auipc + instruction_size;\n+    address auipc = instr;\n+    address last_instr = auipc + instruction_size;\n@@ -205,8 +177,5 @@\n-    const address auipc = instr;\n-    const Register auipc_rd = extract_rd(auipc);\n-    const address load = auipc + instruction_size;\n-    const Register load_rs1 = extract_rs1(load);\n-    const Register load_rd  = extract_rd(load);\n-\n-    return load_rd == auipc_rd &&\n-           load_rs1 == load_rd;\n+    address auipc = instr;\n+    address load = auipc + instruction_size;\n+\n+    return extract_rd(load) == extract_rd(auipc) &&\n+           extract_rs1(load) == extract_rd(load);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":49,"deletions":80,"binary":false,"changes":129,"status":"modified"}]}