{"files":[{"patch":"@@ -2377,2 +2377,2 @@\n-#define INSN(NAME, funct3, op, REGISTER_TYPE, CHECK)                                         \\\n-  void NAME(REGISTER_TYPE Rd, uint32_t uimm) {                                               \\\n+#define INSN(NAME, funct3, op)                                                               \\\n+  void NAME(Register Rd, uint32_t uimm) {                                                    \\\n@@ -2381,1 +2381,1 @@\n-    IF(CHECK, assert_cond(Rd != x0);)                                                        \\\n+    assert_cond(Rd != x0);                                                                   \\\n@@ -2392,3 +2392,17 @@\n-#define IF(BOOL, ...)       IF_##BOOL(__VA_ARGS__)\n-#define IF_true(code)       code\n-#define IF_false(code)\n+  INSN(c_ldsp,  0b011, 0b10);\n+\n+#undef INSN\n+\n+#define INSN(NAME, funct3, op)                                                               \\\n+  void NAME(FloatRegister Rd, uint32_t uimm) {                                               \\\n+    assert_cond(is_unsigned_imm_in_range(uimm, 9, 0));                                       \\\n+    assert_cond((uimm & 0b111) == 0);                                                        \\\n+    uint16_t insn = 0;                                                                       \\\n+    c_patch((address)&insn, 1, 0, op);                                                       \\\n+    c_patch((address)&insn, 4, 2, (uimm & right_n_bits(9)) >> 6);                            \\\n+    c_patch((address)&insn, 6, 5, (uimm & right_n_bits(5)) >> 3);                            \\\n+    c_patch_reg((address)&insn, 7, Rd);                                                      \\\n+    c_patch((address)&insn, 12, 12, (uimm & nth_bit(5)) >> 5);                               \\\n+    c_patch((address)&insn, 15, 13, funct3);                                                 \\\n+    emit_int16(insn);                                                                        \\\n+  }\n@@ -2396,2 +2410,1 @@\n-  INSN(c_ldsp,  0b011, 0b10, Register,      true);\n-  INSN(c_fldsp, 0b001, 0b10, FloatRegister, false);\n+  INSN(c_fldsp, 0b001, 0b10);\n@@ -2399,3 +2412,0 @@\n-#undef IF_false\n-#undef IF_true\n-#undef IF\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"}]}