{"files":[{"patch":"@@ -2476,11 +2476,0 @@\n-void MacroAssembler::atomic_incw(Register counter_addr, Register tmp) {\n-  Label retry_load;\n-  bind(retry_load);\n-  \/\/ flush and load exclusive from the memory location\n-  lr_w(tmp, counter_addr);\n-  addw(tmp, tmp, 1);\n-  \/\/ if we store+flush with no intervening write tmp wil be zero\n-  sc_w(tmp, tmp, counter_addr);\n-  bnez(tmp, retry_load);\n-}\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -600,7 +600,0 @@\n-  \/\/atomic\n-  void atomic_incw(Register counter_addr, Register tmp1);\n-  void atomic_incw(Address counter_addr, Register tmp1, Register tmp2) {\n-    la(tmp1, counter_addr);\n-    atomic_incw(tmp1, tmp2);\n-  }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"}]}