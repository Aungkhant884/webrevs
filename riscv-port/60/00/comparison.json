{"files":[{"patch":"@@ -554,1 +554,1 @@\n-    stub = RuntimeAddress(StubRoutines::riscv64::string_indexof_linear_ll());\n+    stub = RuntimeAddress(StubRoutines::riscv::string_indexof_linear_ll());\n@@ -557,1 +557,1 @@\n-    stub = RuntimeAddress(StubRoutines::riscv64::string_indexof_linear_ul());\n+    stub = RuntimeAddress(StubRoutines::riscv::string_indexof_linear_ul());\n@@ -560,1 +560,1 @@\n-    stub = RuntimeAddress(StubRoutines::riscv64::string_indexof_linear_uu());\n+    stub = RuntimeAddress(StubRoutines::riscv::string_indexof_linear_uu());\n@@ -951,1 +951,1 @@\n-      stub = RuntimeAddress(StubRoutines::riscv64::compare_long_string_LL());\n+      stub = RuntimeAddress(StubRoutines::riscv::compare_long_string_LL());\n@@ -954,1 +954,1 @@\n-      stub = RuntimeAddress(StubRoutines::riscv64::compare_long_string_UU());\n+      stub = RuntimeAddress(StubRoutines::riscv::compare_long_string_UU());\n@@ -957,1 +957,1 @@\n-      stub = RuntimeAddress(StubRoutines::riscv64::compare_long_string_LU());\n+      stub = RuntimeAddress(StubRoutines::riscv::compare_long_string_LU());\n@@ -960,1 +960,1 @@\n-      stub = RuntimeAddress(StubRoutines::riscv64::compare_long_string_UL());\n+      stub = RuntimeAddress(StubRoutines::riscv::compare_long_string_UL());\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -256,1 +256,1 @@\n-  __ movptr_with_offset(t0, StubRoutines::riscv64::method_entry_barrier(), offset);\n+  __ movptr_with_offset(t0, StubRoutines::riscv::method_entry_barrier(), offset);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3650,1 +3650,1 @@\n-    RuntimeAddress zero_blocks = RuntimeAddress(StubRoutines::riscv64::zero_blocks());\n+    RuntimeAddress zero_blocks = RuntimeAddress(StubRoutines::riscv::zero_blocks());\n@@ -3652,1 +3652,1 @@\n-    if (StubRoutines::riscv64::complete()) {\n+    if (StubRoutines::riscv::complete()) {\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2097,1 +2097,1 @@\n-    StubRoutines::riscv64::_zero_blocks = generate_zero_blocks();\n+    StubRoutines::riscv::_zero_blocks = generate_zero_blocks();\n@@ -2516,4 +2516,4 @@\n-    StubRoutines::riscv64::_compare_long_string_LL = generate_compare_long_string_same_encoding(true);\n-    StubRoutines::riscv64::_compare_long_string_UU = generate_compare_long_string_same_encoding(false);\n-    StubRoutines::riscv64::_compare_long_string_LU = generate_compare_long_string_different_encoding(true);\n-    StubRoutines::riscv64::_compare_long_string_UL = generate_compare_long_string_different_encoding(false);\n+    StubRoutines::riscv::_compare_long_string_LL = generate_compare_long_string_same_encoding(true);\n+    StubRoutines::riscv::_compare_long_string_UU = generate_compare_long_string_same_encoding(false);\n+    StubRoutines::riscv::_compare_long_string_LU = generate_compare_long_string_different_encoding(true);\n+    StubRoutines::riscv::_compare_long_string_UL = generate_compare_long_string_different_encoding(false);\n@@ -2755,3 +2755,3 @@\n-    StubRoutines::riscv64::_string_indexof_linear_ll = generate_string_indexof_linear(true, true);\n-    StubRoutines::riscv64::_string_indexof_linear_uu = generate_string_indexof_linear(false, false);\n-    StubRoutines::riscv64::_string_indexof_linear_ul = generate_string_indexof_linear(true, false);\n+    StubRoutines::riscv::_string_indexof_linear_ll = generate_string_indexof_linear(true, true);\n+    StubRoutines::riscv::_string_indexof_linear_uu = generate_string_indexof_linear(false, false);\n+    StubRoutines::riscv::_string_indexof_linear_ul = generate_string_indexof_linear(true, false);\n@@ -3554,1 +3554,1 @@\n-    \/\/ n.b. riscv64 asserts that frame::arg_reg_save_area_bytes == 0\n+    \/\/ n.b. riscv asserts that frame::arg_reg_save_area_bytes == 0\n@@ -3729,1 +3729,1 @@\n-      StubRoutines::riscv64::_method_entry_barrier = generate_method_entry_barrier();\n+      StubRoutines::riscv::_method_entry_barrier = generate_method_entry_barrier();\n@@ -3732,1 +3732,1 @@\n-    StubRoutines::riscv64::set_completed();\n+    StubRoutines::riscv::set_completed();\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -37,1 +37,1 @@\n-address StubRoutines::riscv64::_get_previous_sp_entry = NULL;\n+address StubRoutines::riscv::_get_previous_sp_entry = NULL;\n@@ -39,21 +39,22 @@\n-address StubRoutines::riscv64::_f2i_fixup = NULL;\n-address StubRoutines::riscv64::_f2l_fixup = NULL;\n-address StubRoutines::riscv64::_d2i_fixup = NULL;\n-address StubRoutines::riscv64::_d2l_fixup = NULL;\n-address StubRoutines::riscv64::_float_sign_mask = NULL;\n-address StubRoutines::riscv64::_float_sign_flip = NULL;\n-address StubRoutines::riscv64::_double_sign_mask = NULL;\n-address StubRoutines::riscv64::_double_sign_flip = NULL;\n-address StubRoutines::riscv64::_zero_blocks = NULL;\n-address StubRoutines::riscv64::_has_negatives = NULL;\n-address StubRoutines::riscv64::_has_negatives_long = NULL;\n-address StubRoutines::riscv64::_compare_long_string_LL = NULL;\n-address StubRoutines::riscv64::_compare_long_string_UU = NULL;\n-address StubRoutines::riscv64::_compare_long_string_LU = NULL;\n-address StubRoutines::riscv64::_compare_long_string_UL = NULL;\n-address StubRoutines::riscv64::_string_indexof_linear_ll = NULL;\n-address StubRoutines::riscv64::_string_indexof_linear_uu = NULL;\n-address StubRoutines::riscv64::_string_indexof_linear_ul = NULL;\n-address StubRoutines::riscv64::_large_byte_array_inflate = NULL;\n-address StubRoutines::riscv64::_method_entry_barrier = NULL;\n-bool StubRoutines::riscv64::_completed = false;\n+address StubRoutines::riscv::_f2i_fixup = NULL;\n+address StubRoutines::riscv::_f2l_fixup = NULL;\n+address StubRoutines::riscv::_d2i_fixup = NULL;\n+address StubRoutines::riscv::_d2l_fixup = NULL;\n+address StubRoutines::riscv::_float_sign_mask = NULL;\n+address StubRoutines::riscv::_float_sign_flip = NULL;\n+address StubRoutines::riscv::_double_sign_mask = NULL;\n+address StubRoutines::riscv::_double_sign_flip = NULL;\n+address StubRoutines::riscv::_zero_blocks = NULL;\n+address StubRoutines::riscv::_has_negatives = NULL;\n+address StubRoutines::riscv::_has_negatives_long = NULL;\n+address StubRoutines::riscv::_compare_long_string_LL = NULL;\n+address StubRoutines::riscv::_compare_long_string_UU = NULL;\n+address StubRoutines::riscv::_compare_long_string_LU = NULL;\n+address StubRoutines::riscv::_compare_long_string_UL = NULL;\n+address StubRoutines::riscv::_string_indexof_linear_ll = NULL;\n+address StubRoutines::riscv::_string_indexof_linear_uu = NULL;\n+address StubRoutines::riscv::_string_indexof_linear_ul = NULL;\n+address StubRoutines::riscv::_large_byte_array_inflate = NULL;\n+address StubRoutines::riscv::_method_entry_barrier = NULL;\n+\n+bool StubRoutines::riscv::_completed = false;\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.cpp","additions":24,"deletions":23,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-class riscv64 {\n+class riscv {\n","filename":"src\/hotspot\/cpu\/riscv\/stubRoutines_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}