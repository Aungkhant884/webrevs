{"files":[{"patch":"@@ -32,0 +32,1 @@\n+#include \"metaprogramming\/enableIf.hpp\"\n@@ -169,12 +170,5 @@\n-  Address(Register r, int o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n-  Address(Register r, long o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n-  Address(Register r, long long o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n-  Address(Register r, unsigned int o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n-  Address(Register r, unsigned long o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n-  Address(Register r, unsigned long long o)\n-    : _base(r),     _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) { }\n+\n+  template<typename T, ENABLE_IF(std::is_integral<T>::value)>\n+  Address(Register r, T o)\n+    : _base(r), _index(noreg), _offset(o), _mode(base_plus_offset), _target(NULL) {}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -204,2 +204,6 @@\n-  mv(mask1, isL ? 0x0101010101010101 : 0x0001000100010001);\n-  mv(mask2, isL ? 0x7f7f7f7f7f7f7f7f : 0x7fff7fff7fff7fff);\n+  uint64_t mask0101 = UCONST64(0x0101010101010101);\n+  uint64_t mask0001 = UCONST64(0x0001000100010001);\n+  mv(mask1, isL ? mask0101 : mask0001);\n+  uint64_t mask7f7f = UCONST64(0x7f7f7f7f7f7f7f7f);\n+  uint64_t mask7fff = UCONST64(0x7fff7fff7fff7fff);\n+  mv(mask2, isL ? mask7f7f : mask7fff);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1384,12 +1384,0 @@\n-void MacroAssembler::mv(Register Rd, int64_t imm64) {\n-  li(Rd, imm64);\n-}\n-\n-void MacroAssembler::mv(Register Rd, int imm) {\n-  mv(Rd, (int64_t)imm);\n-}\n-\n-void MacroAssembler::mvw(Register Rd, int32_t imm32) {\n-  mv(Rd, imm32);\n-}\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"metaprogramming\/enableIf.hpp\"\n@@ -521,3 +522,7 @@\n-  void mv(Register Rd, int64_t imm64);\n-  void mv(Register Rd, int imm);\n-  void mvw(Register Rd, int32_t imm32);\n+  template<typename T, ENABLE_IF(std::is_integral<T>::value)>\n+  inline void mv(Register Rd, T o) {\n+    li(Rd, (int64_t)o);\n+  }\n+\n+  inline void mvw(Register Rd, int32_t imm32) { mv(Rd, imm32); }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2565,1 +2565,3 @@\n-    __ mv(mask1, haystack_isL ? 0x0101010101010101 : 0x0001000100010001);\n+    uint64_t mask0101 = UCONST64(0x0101010101010101);\n+    uint64_t mask0001 = UCONST64(0x0001000100010001);\n+    __ mv(mask1, haystack_isL ? mask0101 : mask0001);\n@@ -2567,1 +2569,3 @@\n-    __ mv(mask2, haystack_isL ? 0x7f7f7f7f7f7f7f7f : 0x7fff7fff7fff7fff);\n+    uint64_t mask7f7f = UCONST64(0x7f7f7f7f7f7f7f7f);\n+    uint64_t mask7fff = UCONST64(0x7fff7fff7fff7fff);\n+    __ mv(mask2, haystack_isL ? mask7f7f : mask7fff);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}