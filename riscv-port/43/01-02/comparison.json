{"files":[{"patch":"@@ -3900,3 +3900,1 @@\n-  if (shamt == 0) {\n-    add(Rd, Rs1, Rs2);\n-  } else {\n+  if (shamt != 0) {\n@@ -3905,0 +3903,2 @@\n+  } else {\n+    add(Rd, Rs1, Rs2);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3032,1 +3032,1 @@\n-operand immIScale1()\n+operand immIScale()\n@@ -3034,21 +3034,1 @@\n-  predicate(n->get_int() == 1);\n-  match(ConI);\n-\n-  op_cost(0);\n-  format %{ %}\n-  interface(CONST_INTER);\n-%}\n-\n-operand immIScale2()\n-%{\n-  predicate(n->get_int() == 2);\n-  match(ConI);\n-\n-  op_cost(0);\n-  format %{ %}\n-  interface(CONST_INTER);\n-%}\n-\n-operand immIScale3()\n-%{\n-  predicate(n->get_int() == 3);\n+  predicate(1 <= n->get_int() && (n->get_int() <= 3));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":2,"deletions":22,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-instruct sh1addP_reg_reg_rvb(iRegPNoSp dst, iRegP src1, iRegL src2, immIScale1 imm) %{\n+instruct shaddP_reg_reg_rvb(iRegPNoSp dst, iRegP src1, iRegL src2, immIScale imm) %{\n@@ -242,1 +242,1 @@\n-  format %{ \"sh1add  $dst, $src2, src1\\t# ptr, #@sh1addP_reg_reg_rvb\" %}\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t# ptr, #@shaddP_reg_reg_rvb\" %}\n@@ -245,3 +245,5 @@\n-    __ sh1add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n@@ -253,65 +255,1 @@\n-instruct sh2addP_reg_reg_rvb(iRegPNoSp dst, iRegP src1, iRegL src2, immIScale2 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddP src1 (LShiftL src2 imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh2add  $dst, $src2, src1\\t# ptr, #@sh2addP_reg_reg_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh2add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh3addP_reg_reg_rvb(iRegPNoSp dst, iRegP src1, iRegL src2, immIScale3 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddP src1 (LShiftL src2 imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh3add  $dst, $src2, $src1\\t# ptr, #@sh3addP_reg_reg_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh3add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh1addP_reg_reg_ext_rvb(iRegPNoSp dst, iRegP src1, iRegI src2, immIScale1 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddP src1 (LShiftL (ConvI2L src2) imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh1add  $dst, $src2, src1\\t# ptr, #@sh1addP_reg_reg_ext_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh1add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh2addP_reg_reg_ext_rvb(iRegPNoSp dst, iRegP src1, iRegI src2, immIScale2 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddP src1 (LShiftL (ConvI2L src2) imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh2add  $dst, $src2, src1\\t# ptr, #@sh2addP_reg_reg_ext_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh2add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh3addP_reg_reg_ext_rvb(iRegPNoSp dst, iRegP src1, iRegI src2, immIScale3 imm) %{\n+instruct shaddP_reg_reg_ext_rvb(iRegPNoSp dst, iRegP src1, iRegI src2, immIScale imm) %{\n@@ -322,1 +260,1 @@\n-  format %{ \"sh3add  $dst, $src2, src1\\t# ptr, #@sh3addP_reg_reg_ext_rvb\" %}\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t# ptr, #@shaddP_reg_reg_ext_rvb\" %}\n@@ -325,3 +263,5 @@\n-    __ sh3add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg)\n+             t0,\n+             $imm$$constant);\n@@ -334,1 +274,1 @@\n-instruct sh1addL_reg_reg_rvb(iRegLNoSp dst, iRegL src1, iRegL src2, immIScale1 imm) %{\n+instruct shaddL_reg_reg_rvb(iRegLNoSp dst, iRegL src1, iRegL src2, immIScale imm) %{\n@@ -339,65 +279,1 @@\n-  format %{ \"sh1add  $dst, $src2, $src1\\t#@sh1addL_reg_reg_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh1add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh2addL_reg_reg_rvb(iRegLNoSp dst, iRegL src1, iRegL src2, immIScale2 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddL src1 (LShiftL src2 imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh2add  $dst, $src2, $src1\\t#@sh2addL_reg_reg_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh2add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh3addL_reg_reg_rvb(iRegLNoSp dst, iRegL src1, iRegL src2, immIScale3 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddL src1 (LShiftL src2 imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh3add  $dst, $src2, $src1\\t#@sh3addL_reg_reg_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh3add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh1addL_reg_reg_ext_rvb(iRegLNoSp dst, iRegL src1, iRegI src2, immIScale1 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddL src1 (LShiftL (ConvI2L src2) imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh1add  $dst, $src2, $src1\\t#@sh1addL_reg_reg_ext_rvb\" %}\n-\n-  ins_encode %{\n-    __ sh1add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n-  %}\n-\n-  ins_pipe(ialu_reg_reg);\n-%}\n-\n-instruct sh2addL_reg_reg_ext_rvb(iRegLNoSp dst, iRegL src1, iRegI src2, immIScale2 imm) %{\n-  predicate(UseRVB);\n-  match(Set dst (AddL src1 (LShiftL (ConvI2L src2) imm)));\n-\n-  ins_cost(ALU_COST);\n-  format %{ \"sh2add  $dst, $src2, $src1\\t#@sh2addL_reg_reg_ext_rvb\" %}\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t#@shaddL_reg_reg_rvb\" %}\n@@ -406,3 +282,5 @@\n-    __ sh2add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n@@ -414,1 +292,1 @@\n-instruct sh3addL_reg_reg_ext_rvb(iRegLNoSp dst, iRegL src1, iRegI src2, immIScale3 imm) %{\n+instruct shaddL_reg_reg_ext_rvb(iRegLNoSp dst, iRegL src1, iRegI src2, immIScale imm) %{\n@@ -419,1 +297,1 @@\n-  format %{ \"sh3add  $dst, $src2, $src1\\t#@sh3addL_reg_reg_ext_rvb\" %}\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t#@shaddL_reg_reg_ext_rvb\" %}\n@@ -422,3 +300,5 @@\n-    __ sh3add(as_Register($dst$$reg),\n-              as_Register($src2$$reg),\n-              as_Register($src1$$reg));\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_b.ad","additions":28,"deletions":148,"binary":false,"changes":176,"status":"modified"}]}