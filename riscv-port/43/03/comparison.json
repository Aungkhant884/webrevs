{"files":[{"patch":"@@ -1902,5 +1902,11 @@\n-  INSN(add_uw, 0b0111011, 0b000, 0b0000100);\n-  INSN(rol,    0b0110011, 0b001, 0b0110000);\n-  INSN(rolw,   0b0111011, 0b001, 0b0110000);\n-  INSN(ror,    0b0110011, 0b101, 0b0110000);\n-  INSN(rorw,   0b0111011, 0b101, 0b0110000);\n+  INSN(add_uw,    0b0111011, 0b000, 0b0000100);\n+  INSN(rol,       0b0110011, 0b001, 0b0110000);\n+  INSN(rolw,      0b0111011, 0b001, 0b0110000);\n+  INSN(ror,       0b0110011, 0b101, 0b0110000);\n+  INSN(rorw,      0b0111011, 0b101, 0b0110000);\n+  INSN(sh1add,    0b0110011, 0b010, 0b0010000);\n+  INSN(sh2add,    0b0110011, 0b100, 0b0010000);\n+  INSN(sh3add,    0b0110011, 0b110, 0b0010000);\n+  INSN(sh1add_uw, 0b0111011, 0b010, 0b0010000);\n+  INSN(sh2add_uw, 0b0111011, 0b100, 0b0010000);\n+  INSN(sh3add_uw, 0b0111011, 0b110, 0b0010000);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -352,2 +352,1 @@\n-  __ slli(t0, src_pos, scale);\n-  __ add(c_rarg0, src, t0);\n+  __ shadd(c_rarg0, src_pos, src, t0, scale);\n@@ -356,2 +355,1 @@\n-  __ slli(t0, dst_pos, scale);\n-  __ add(c_rarg1, dst, t0);\n+  __ shadd(c_rarg1, dst_pos, dst, t0, scale);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_arraycopy_riscv.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1968,2 +1968,1 @@\n-      __ slli(tmp, index, scale);\n-      __ add(tmp, base, tmp);\n+      __ shadd(tmp, index, base, tmp, scale);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -275,2 +275,1 @@\n-  slli(t0, len, f);\n-  add(arr_size, arr_size, t0);\n+  shadd(arr_size, len, arr_size, t0, f);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -412,2 +412,2 @@\n-  slli(haystack_end, result_tmp, haystack_chr_shift); \/\/ result_tmp = tmp4\n-  add(haystack_end, haystack, haystack_end);\n+  \/\/ result_tmp = tmp4\n+  shadd(haystack_end, result_tmp, haystack, haystack_end, haystack_chr_shift);\n@@ -442,2 +442,2 @@\n-  slli(tmp6, needle_len, needle_chr_shift);\n-  add(tmp6, tmp6, needle); \/\/ tmp6: pattern end, address after needle\n+  \/\/ tmp6: pattern end, address after needle\n+  shadd(tmp6, needle_len, needle, tmp6, needle_chr_shift);\n@@ -474,2 +474,1 @@\n-  slli(result, nlen_tmp, haystack_chr_shift);\n-  add(result, haystack, result);\n+  shadd(result, nlen_tmp, haystack, result, haystack_chr_shift);\n@@ -499,2 +498,1 @@\n-  slli(ch1, nlen_tmp, needle_chr_shift);\n-  add(ch1, ch1, needle);\n+  shadd(ch1, nlen_tmp, needle, ch1, needle_chr_shift);\n@@ -502,2 +500,1 @@\n-  slli(ch2, nlen_tmp, haystack_chr_shift);\n-  add(ch2, haystack, ch2);\n+  shadd(ch2, nlen_tmp, haystack, ch2, haystack_chr_shift);\n@@ -530,2 +527,2 @@\n-  slli(result, result_tmp, haystack_chr_shift);\n-  add(haystack, haystack, result); \/\/ move haystack after bad char skip offset\n+  \/\/ move haystack after bad char skip offset\n+  shadd(haystack, result_tmp, haystack, result, haystack_chr_shift);\n@@ -1380,2 +1377,1 @@\n-  slli(t0, t0, 3);\n-  add(base, base, t0);\n+  shadd(base, t0, base, t0, 3);\n@@ -1467,2 +1463,1 @@\n-    slli(tmp1, tmp1, 1);\n-    add(strU, strU, tmp1);\n+    shadd(strU, tmp1, strU, tmp1, 1);\n@@ -1496,2 +1491,1 @@\n-  slli(tmp, tmp, 1);\n-  add(dst, dst, tmp);\n+  shadd(dst, tmp, dst, tmp, 1);\n@@ -1536,2 +1530,1 @@\n-  slli(t0, t0, 1);\n-  add(src, src, t0);\n+  shadd(src, t0, src, t0, 1);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":13,"deletions":20,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -73,2 +73,2 @@\n-  __ slli(count, count, LogBytesPerHeapOop);\n-  __ add(end, start, count); \/\/ end = start + count << LogBytesPerHeapOop\n+  \/\/ end = start + count << LogBytesPerHeapOop\n+  __ shadd(end, count, start, count, LogBytesPerHeapOop);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/cardTableBarrierSetAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -231,2 +231,1 @@\n-  slli(cache, index, 5);\n-  add(cache, xcpool, cache);\n+  shadd(cache, index, xcpool, cache, 5);\n@@ -270,2 +269,2 @@\n-  slli(tmp, tmp, 2 + LogBytesPerWord);\n-  add(cache, cache, tmp);  \/\/ construct pointer to cache entry\n+  \/\/ construct pointer to cache entry\n+  shadd(cache, tmp, cache, tmp, 2 + LogBytesPerWord);\n@@ -286,2 +285,1 @@\n-  slli(index, index, LogBytesPerHeapOop);\n-  add(result, result, index);\n+  shadd(result, index, result, index, LogBytesPerHeapOop);\n@@ -293,2 +291,1 @@\n-  slli(temp, index, LogBytesPerWord);\n-  add(temp, temp, cpool);\n+  shadd(temp, index, cpool, temp, LogBytesPerWord);\n@@ -297,2 +294,1 @@\n-  slli(temp, temp, LogBytesPerWord);\n-  add(klass, klass, temp);\n+  shadd(klass, temp, klass, temp, LogBytesPerWord);\n@@ -532,2 +528,1 @@\n-    slli(t1, t1, 3);\n-    add(t1, xdispatch, t1);\n+    shadd(t1, t1, xdispatch, t1, 3);\n@@ -536,2 +531,1 @@\n-    slli(Rs, Rs, 3);\n-    add(t1, t1, Rs);\n+    shadd(t1, Rs, t1, Rs, 3);\n@@ -545,2 +539,1 @@\n-    slli(Rs, Rs, 3);\n-    add(t1, t1, Rs);\n+    shadd(t1, Rs, t1, Rs, 3);\n@@ -1808,2 +1801,1 @@\n-        slli(tmp, tmp, exact_log2(DataLayout::cell_size));\n-        add(mdp, mdp, tmp);\n+        shadd(mdp, tmp, mdp, tmp, exact_log2(DataLayout::cell_size));\n@@ -1891,3 +1883,1 @@\n-\n-    slli(tmp2, tmp1, per_arg_scale);\n-    add(tmp2, tmp2, t0);\n+    shadd(tmp2, tmp1, t0, tmp2, per_arg_scale);\n@@ -1899,2 +1889,1 @@\n-    slli(tmp2, tmp2, Interpreter::logStackElementSize);\n-    add(tmp2, tmp2, xlocals);\n+    shadd(tmp2, tmp2, xlocals, tmp2, Interpreter::logStackElementSize);\n@@ -1904,2 +1893,1 @@\n-    slli(t0, tmp1, per_arg_scale);\n-    add(t1, t0, t1);\n+    shadd(t1, tmp1, t1, t0, per_arg_scale);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":13,"deletions":25,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -442,2 +442,1 @@\n-    slli(t0, arg_slot.as_register(), log2i_exact(stackElementSize));\n-    add(t0, esp, t0);\n+    shadd(t0, arg_slot.as_register(), esp, t0, log2i_exact(stackElementSize));\n@@ -1882,2 +1881,1 @@\n-    slli(t0, src, LogKlassAlignmentInBytes);\n-    add(dst, xbase, t0);\n+    shadd(dst, src, xbase, t0, LogKlassAlignmentInBytes);\n@@ -1962,2 +1960,1 @@\n-    slli(d, s, LogMinObjAlignmentInBytes);\n-    add(d, xheapbase, d);\n+    shadd(d, s, xheapbase, d, LogMinObjAlignmentInBytes);\n@@ -2065,2 +2062,1 @@\n-  slli(scan_temp, scan_temp, 3);\n-  add(scan_temp, recv_klass, scan_temp);\n+  shadd(scan_temp, scan_temp, recv_klass, scan_temp, 3);\n@@ -2116,2 +2112,1 @@\n-    slli(method_result, vtable_index.as_register(), LogBytesPerWord);\n-    add(method_result, recv_klass, method_result);\n+    shadd(method_result, vtable_index.as_register(), recv_klass, method_result, LogBytesPerWord);\n@@ -3168,2 +3163,1 @@\n-  slli(t0, xstart, LogBytesPerInt);\n-  add(t0, x, t0);\n+  shadd(t0, xstart, x, t0, LogBytesPerInt);\n@@ -3174,2 +3168,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, y, t0);\n+  shadd(t0, idx, y, t0, LogBytesPerInt);\n@@ -3181,2 +3174,1 @@\n-  slli(t0, kdx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, kdx, z, t0, LogBytesPerInt);\n@@ -3213,2 +3205,1 @@\n-  slli(t0, xstart, LogBytesPerInt);\n-  add(t0, x, t0);\n+  shadd(t0, xstart, x, t0, LogBytesPerInt);\n@@ -3224,2 +3215,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, y, t0);\n+  shadd(t0, idx, y, t0, LogBytesPerInt);\n@@ -3237,2 +3227,1 @@\n-  slli(t0, kdx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, kdx, z, t0, LogBytesPerInt);\n@@ -3293,2 +3282,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, y, t0);\n+  shadd(t0, idx, y, t0, LogBytesPerInt);\n@@ -3298,2 +3286,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(tmp6, z, t0);\n+  shadd(tmp6, idx, z, t0, LogBytesPerInt);\n@@ -3340,2 +3327,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, y, t0);\n+  shadd(t0, idx, y, t0, LogBytesPerInt);\n@@ -3348,2 +3334,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, idx, z, t0, LogBytesPerInt);\n@@ -3363,2 +3348,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, y, t0);\n+  shadd(t0, idx, y, t0, LogBytesPerInt);\n@@ -3369,2 +3353,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, idx, z, t0, LogBytesPerInt);\n@@ -3375,2 +3358,1 @@\n-  slli(t0, idx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, idx, z, t0, LogBytesPerInt);\n@@ -3437,2 +3419,1 @@\n-    slli(t0, xstart, LogBytesPerInt);\n-    add(t0, z, t0);\n+    shadd(t0, xstart, z, t0, LogBytesPerInt);\n@@ -3450,2 +3431,1 @@\n-    slli(t0, xstart, LogBytesPerInt);\n-    add(t0, z, t0);\n+    shadd(t0, xstart, z, t0, LogBytesPerInt);\n@@ -3453,2 +3433,1 @@\n-    slli(t0, xstart, LogBytesPerInt);\n-    add(t0, x, t0);\n+    shadd(t0, xstart, x, t0, LogBytesPerInt);\n@@ -3462,2 +3441,1 @@\n-    slli(t0, jdx, LogBytesPerInt);\n-    add(t0, y, t0);\n+    shadd(t0, jdx, y, t0, LogBytesPerInt);\n@@ -3467,2 +3445,1 @@\n-    slli(t1, jdx, LogBytesPerInt);\n-    add(tmp6, z, t1);\n+    shadd(tmp6, jdx, z, t1, LogBytesPerInt);\n@@ -3478,2 +3455,1 @@\n-    slli(t0, xstart, LogBytesPerInt);\n-    add(t0, z, t0);\n+    shadd(t0, xstart, z, t0, LogBytesPerInt);\n@@ -3495,2 +3471,1 @@\n-  slli(t0, kdx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, kdx, z, t0, LogBytesPerInt);\n@@ -3502,2 +3477,1 @@\n-  slli(t0, kdx, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, kdx, z, t0, LogBytesPerInt);\n@@ -3532,2 +3506,1 @@\n-  slli(t0, xstart, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, xstart, z, t0, LogBytesPerInt);\n@@ -3538,2 +3511,1 @@\n-  slli(t0, xstart, LogBytesPerInt);\n-  add(t0, x, t0);\n+  shadd(t0, xstart, x, t0, LogBytesPerInt);\n@@ -3558,2 +3530,1 @@\n-  slli(t0, tmp3, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, tmp3, z, t0, LogBytesPerInt);\n@@ -3566,2 +3537,1 @@\n-  slli(t0, tmp3, LogBytesPerInt);\n-  add(t0, z, t0);\n+  shadd(t0, tmp3, z, t0, LogBytesPerInt);\n@@ -3774,2 +3744,2 @@\n-  slli(t1, t0, 3);\n-  add(base, base, t1); \/\/ align 8, so first sd n % 8 = mod, next loop sd 8 * n.\n+  \/\/ align 8, so first sd n % 8 = mod, next loop sd 8 * n.\n+  shadd(base, t0, base, t1, 3);\n@@ -3899,2 +3869,1 @@\n-  slli(t1, t0, LogBytesPerWord);\n-  add(tmp1, addr, t1);\n+  shadd(tmp1, t0, addr, t1, LogBytesPerWord);\n@@ -3915,0 +3884,24 @@\n+\/\/ shift left by shamt and add\n+\/\/ Rd = (Rs1 << shamt) + Rs2\n+void MacroAssembler::shadd(Register Rd, Register Rs1, Register Rs2, Register tmp, int shamt) {\n+  if (UseRVB) {\n+    if (shamt == 1) {\n+      sh1add(Rd, Rs1, Rs2);\n+      return;\n+    } else if (shamt == 2) {\n+      sh2add(Rd, Rs1, Rs2);\n+      return;\n+    } else if (shamt == 3) {\n+      sh3add(Rd, Rs1, Rs2);\n+      return;\n+    }\n+  }\n+\n+  if (shamt != 0) {\n+    slli(tmp, Rs1, shamt);\n+    add(Rd, Rs2, tmp);\n+  } else {\n+    add(Rd, Rs1, Rs2);\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":57,"deletions":64,"binary":false,"changes":121,"status":"modified"},{"patch":"@@ -684,0 +684,3 @@\n+  \/\/ shift left by shamt and add\n+  void shadd(Register Rd, Register Rs1, Register Rs2, Register tmp, int shamt);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3031,0 +3031,11 @@\n+\/\/ Scale values\n+operand immIScale()\n+%{\n+  predicate(1 <= n->get_int() && (n->get_int() <= 3));\n+  match(ConI);\n+\n+  op_cost(0);\n+  format %{ %}\n+  interface(CONST_INTER);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-  format %{ \"roriw    $dst, $src, ($shift & 0x1f)\\t#@rorI_imm_rvb\" %}\n+  format %{ \"roriw  $dst, $src, ($shift & 0x1f)\\t#@rorI_imm_rvb\" %}\n@@ -46,1 +46,1 @@\n-  format %{ \"rori    $dst, $src, ($shift & 0x3f)\\t#@rorL_imm_rvb\" %}\n+  format %{ \"rori  $dst, $src, ($shift & 0x3f)\\t#@rorL_imm_rvb\" %}\n@@ -60,1 +60,1 @@\n-  format %{ \"rorw    $dst, $src, $shift\\t#@rorI_reg_rvb\" %}\n+  format %{ \"rorw  $dst, $src, $shift\\t#@rorI_reg_rvb\" %}\n@@ -72,1 +72,1 @@\n-  format %{ \"ror    $dst, $src, $shift\\t#@rorL_reg_rvb\" %}\n+  format %{ \"ror  $dst, $src, $shift\\t#@rorL_reg_rvb\" %}\n@@ -84,1 +84,1 @@\n-  format %{ \"rolw    $dst, $src, $shift\\t#@rolI_reg_rvb\" %}\n+  format %{ \"rolw  $dst, $src, $shift\\t#@rolI_reg_rvb\" %}\n@@ -96,1 +96,1 @@\n-  format %{ \"rol    $dst, $src, $shift\\t#@rolL_reg_rvb\" %}\n+  format %{ \"rol  $dst, $src, $shift\\t#@rolL_reg_rvb\" %}\n@@ -109,1 +109,1 @@\n-  format %{ \"zext.w    $dst, $src\\t# ptr -> int @convP2I_rvb\" %}\n+  format %{ \"zext.w  $dst, $src\\t# ptr -> int @convP2I_rvb\" %}\n@@ -124,1 +124,1 @@\n-  format %{ \"sext.b    $dst, $src\\t# b2i, #@convB2I_reg_reg_rvb\" %}\n+  format %{ \"sext.b  $dst, $src\\t# b2i, #@convB2I_reg_reg_rvb\" %}\n@@ -139,1 +139,1 @@\n-  format %{ \"sext.h    $dst, $src\\t# i2s, #@convI2S_reg_reg_rvb\" %}\n+  format %{ \"sext.h  $dst, $src\\t# i2s, #@convI2S_reg_reg_rvb\" %}\n@@ -154,1 +154,1 @@\n-  format %{ \"zext.h    $dst, $src\\t# s2ui, #@convS2UI_reg_reg_rvb\" %}\n+  format %{ \"zext.h  $dst, $src\\t# s2ui, #@convS2UI_reg_reg_rvb\" %}\n@@ -169,1 +169,1 @@\n-  format %{ \"zext.w    $dst, $src\\t# i2ul, #@convI2UL_reg_reg_rvb\" %}\n+  format %{ \"zext.w  $dst, $src\\t# i2ul, #@convI2UL_reg_reg_rvb\" %}\n@@ -234,0 +234,74 @@\n+%}\n+\n+\/\/ Shift Add Pointer\n+instruct shaddP_reg_reg_rvb(iRegPNoSp dst, iRegP src1, iRegL src2, immIScale imm) %{\n+  predicate(UseRVB);\n+  match(Set dst (AddP src1 (LShiftL src2 imm)));\n+\n+  ins_cost(ALU_COST);\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t# ptr, #@shaddP_reg_reg_rvb\" %}\n+\n+  ins_encode %{\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n+  %}\n+\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct shaddP_reg_reg_ext_rvb(iRegPNoSp dst, iRegP src1, iRegI src2, immIScale imm) %{\n+  predicate(UseRVB);\n+  match(Set dst (AddP src1 (LShiftL (ConvI2L src2) imm)));\n+\n+  ins_cost(ALU_COST);\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t# ptr, #@shaddP_reg_reg_ext_rvb\" %}\n+\n+  ins_encode %{\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n+  %}\n+\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+\/\/ Shift Add Long\n+instruct shaddL_reg_reg_rvb(iRegLNoSp dst, iRegL src1, iRegL src2, immIScale imm) %{\n+  predicate(UseRVB);\n+  match(Set dst (AddL src1 (LShiftL src2 imm)));\n+\n+  ins_cost(ALU_COST);\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t#@shaddL_reg_reg_rvb\" %}\n+\n+  ins_encode %{\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n+  %}\n+\n+  ins_pipe(ialu_reg_reg);\n+%}\n+\n+instruct shaddL_reg_reg_ext_rvb(iRegLNoSp dst, iRegL src1, iRegI src2, immIScale imm) %{\n+  predicate(UseRVB);\n+  match(Set dst (AddL src1 (LShiftL (ConvI2L src2) imm)));\n+\n+  ins_cost(ALU_COST);\n+  format %{ \"shadd  $dst, $src2, $src1, $imm\\t#@shaddL_reg_reg_ext_rvb\" %}\n+\n+  ins_encode %{\n+    __ shadd(as_Register($dst$$reg),\n+             as_Register($src2$$reg),\n+             as_Register($src1$$reg),\n+             t0,\n+             $imm$$constant);\n+  %}\n+\n+  ins_pipe(ialu_reg_reg);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_b.ad","additions":85,"deletions":11,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -1806,4 +1806,2 @@\n-    __ slli(t0, src_pos, 1);\n-    __ add(from, src, t0); \/\/ src_addr\n-    __ slli(t0, dst_pos, 1);\n-    __ add(to, dst, t0); \/\/ dst_addr\n+    __ shadd(from, src_pos, src, t0, 1); \/\/ src_addr\n+    __ shadd(to, dst_pos, dst, t0, 1); \/\/ dst_addr\n@@ -1816,4 +1814,2 @@\n-    __ slli(t0, src_pos, 2);\n-    __ add(from, src, t0); \/\/ src_addr\n-    __ slli(t0, dst_pos, 2);\n-    __ add(to, dst, t0); \/\/ dst_addr\n+    __ shadd(from, src_pos, src, t0, 2); \/\/ src_addr\n+    __ shadd(to, dst_pos, dst, t0, 2); \/\/ dst_addr\n@@ -1837,4 +1833,2 @@\n-    __ slli(t0, src_pos, 3);\n-    __ add(from, src, t0); \/\/ src_addr\n-    __ slli(t0, dst_pos, 3);\n-    __ add(to, dst, t0); \/\/ dst_addr\n+    __ shadd(from, src_pos, src, t0, 3); \/\/ src_addr\n+    __ shadd(to, dst_pos, dst, t0, 3); \/\/ dst_addr\n@@ -1857,2 +1851,1 @@\n-    __ slli(t0, src_pos, LogBytesPerHeapOop);\n-    __ add(from, t0, src);\n+    __ shadd(from, src_pos, src, t0, LogBytesPerHeapOop);\n@@ -1860,2 +1853,1 @@\n-    __ slli(t0, dst_pos, LogBytesPerHeapOop);\n-    __ add(to, t0, dst);\n+    __ shadd(to, dst_pos, dst, t0, LogBytesPerHeapOop);\n@@ -1882,2 +1874,1 @@\n-      __ slli(t0, src_pos, LogBytesPerHeapOop);\n-      __ add(from, t0, src);\n+      __ shadd(from, src_pos, src, t0, LogBytesPerHeapOop);\n@@ -1885,2 +1876,1 @@\n-      __ slli(t0, dst_pos, LogBytesPerHeapOop);\n-      __ add(to, t0, dst);\n+      __ shadd(to, dst_pos, dst, t0, LogBytesPerHeapOop);\n@@ -2047,2 +2037,1 @@\n-      __ slli(tmp_reg, count, shift);\n-      __ add(to, to, tmp_reg); \/\/ points to the end\n+      __ shadd(to, count, to, tmp_reg, shift); \/\/ points to the end\n@@ -2317,2 +2306,1 @@\n-      __ slli(t0, cnt2, 1);\n-      __ add(str2, str2, t0);\n+      __ shadd(str2, cnt2, str2, t0, 1);\n@@ -2320,2 +2308,1 @@\n-      __ slli(t0, cnt2, 1);\n-      __ add(str1, str1, t0);\n+      __ shadd(str1, cnt2, str1, t0, 1);\n@@ -2350,3 +2337,4 @@\n-      __ slli(t0, cnt2, 1);\n-      __ add(cnt1, cnt1, t0); \/\/ Address of 8 bytes before last 4 characters in UTF-16 string\n-      __ add(tmp2, tmp2, cnt2); \/\/ Address of 16 bytes before last 4 characters in Latin1 string\n+      \/\/ Address of 8 bytes before last 4 characters in UTF-16 string\n+      __ shadd(cnt1, cnt2, cnt1, t0, 1);\n+      \/\/ Address of 16 bytes before last 4 characters in Latin1 string\n+      __ add(tmp2, tmp2, cnt2);\n@@ -2656,4 +2644,2 @@\n-    __ slli(first, trailing_zeros, needle_chr_shift);\n-    __ add(first, needle, first);\n-    __ slli(ch2, trailing_zeros, haystack_chr_shift);\n-    __ add(ch2, haystack, ch2);\n+    __ shadd(first, trailing_zeros, needle, first, needle_chr_shift);\n+    __ shadd(ch2, trailing_zeros, haystack, ch2, haystack_chr_shift);\n@@ -2705,2 +2691,1 @@\n-    __ slli(needle_len, trailing_zeros, needle_chr_shift);\n-    __ add(needle_len, needle, needle_len);\n+    __ shadd(needle_len, trailing_zeros, needle, needle_len, needle_chr_shift);\n@@ -2708,2 +2693,1 @@\n-    __ slli(ch2, trailing_zeros, haystack_chr_shift);\n-    __ add(ch2, haystack, ch2);\n+    __ shadd(ch2, trailing_zeros, haystack, ch2, haystack_chr_shift);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":22,"deletions":38,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -459,2 +459,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(esp, esp, t0);\n+  __ shadd(esp, x11, esp, t0, 3);\n@@ -640,2 +639,1 @@\n-  __ slli(t0, x13, Interpreter::logStackElementSize);\n-  __ add(x10, x10, t0);  \/\/ 2 slots per parameter.\n+  __ shadd(x10, x13, x10, t0, Interpreter::logStackElementSize);  \/\/ 2 slots per parameter.\n@@ -944,2 +942,1 @@\n-  __ slli(xlocals, x12, 3);\n-  __ add(xlocals, esp, xlocals);\n+  __ shadd(xlocals, x12, esp, xlocals, 3);\n@@ -1337,2 +1334,1 @@\n-  __ slli(t1, x12, 3);\n-  __ add(xlocals, esp, t1);\n+  __ shadd(xlocals, x12, esp, t1, 3);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -75,2 +75,1 @@\n-  _masm->slli(temp, r, 3);\n-  _masm->add(temp, xlocals, temp);\n+  _masm->shadd(temp, r, xlocals, temp, 3);\n@@ -83,2 +82,1 @@\n-  _masm->slli(temp, r, 3);\n-  _masm->add(temp, xlocals, temp);\n+  _masm->shadd(temp, r, xlocals, temp, 3);\n@@ -351,2 +349,1 @@\n-  __ slli(x11, x11, 3);\n-  __ add(x11, x12, x11);\n+  __ shadd(x11, x11, x12, x11, 3);\n@@ -363,2 +360,1 @@\n-  __ slli(x11, x11, 3);\n-  __ add(x11, x12, x11);\n+  __ shadd(x11, x11, x12, x11, 3);\n@@ -441,2 +437,1 @@\n-    __ slli(x12, x10, 3);\n-    __ add(x12, x11, x12);\n+    __ shadd(x12, x10, x11, x12, 3);\n@@ -452,2 +447,1 @@\n-    __ slli(x10, x10, 3);\n-    __ add(x10, x11, x10);\n+    __ shadd(x10, x10, x11, x10, 3);\n@@ -757,2 +751,1 @@\n-  __ slli(t0, x11, 2);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 2);\n@@ -772,2 +765,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 3);\n@@ -786,2 +778,1 @@\n-  __ slli(t0, x11, 2);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 2);\n@@ -800,2 +791,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 3);\n@@ -814,2 +804,1 @@\n-  __ slli(t0, x11, LogBytesPerHeapOop);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, LogBytesPerHeapOop);\n@@ -831,2 +820,1 @@\n-  __ slli(t0, x11, 0);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 0);\n@@ -845,2 +833,1 @@\n-  __ slli(t0, x11, 1);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 1);\n@@ -863,2 +850,1 @@\n-  __ slli(t0, x11, 1);\n-  __ add(x10, x10, t0);\n+  __ shadd(x10, x11, x10, t0, 1);\n@@ -877,2 +863,1 @@\n-  __ slli(t0, x11, 1);\n-  __ add(x10, t0, x10);\n+  __ shadd(x10, x11, x10, t0, 1);\n@@ -1065,2 +1050,1 @@\n-  __ slli(t0, x11, 2);\n-  __ add(t0, x13, t0);\n+  __ shadd(t0, x11, x13, t0, 2);\n@@ -1079,2 +1063,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(t0, x13, t0);\n+  __ shadd(t0, x11, x13, t0, 3);\n@@ -1093,2 +1076,1 @@\n-  __ slli(t0, x11, 2);\n-  __ add(t0, x13, t0);\n+  __ shadd(t0, x11, x13, t0, 2);\n@@ -1107,2 +1089,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(t0, x13, t0);\n+  __ shadd(t0, x11, x13, t0, 3);\n@@ -1122,2 +1103,1 @@\n-  __ slli(x14, x14, LogBytesPerHeapOop);\n-  __ add(x14, x13, x14);\n+  __ shadd(x14, x14, x13, x14, LogBytesPerHeapOop);\n@@ -1204,2 +1184,1 @@\n-  __ slli(t0, x11, 1);\n-  __ add(t0, x13, t0);\n+  __ shadd(t0, x11, x13, t0, 1);\n@@ -2018,2 +1997,1 @@\n-  __ slli(t0, x10, 2);\n-  __ add(x13, x11, t0);\n+  __ shadd(x13, x10, x11, t0, 2);\n@@ -2056,2 +2034,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(t0, x9, t0);\n+  __ shadd(t0, x11, x9, t0, 3);\n@@ -2069,2 +2046,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(t0, x9, t0);\n+  __ shadd(t0, x11, x9, t0, 3);\n@@ -2144,2 +2120,1 @@\n-    __ slli(temp, h, 3);\n-    __ add(temp, array, temp);\n+    __ shadd(temp, h, array, temp, 3);\n@@ -2168,2 +2143,1 @@\n-  __ slli(temp, i, 3);\n-  __ add(temp, array, temp);\n+  __ shadd(temp, i, array, temp, 3);\n@@ -2175,2 +2149,1 @@\n-  __ slli(temp, i, 3);\n-  __ add(temp, array, temp);\n+  __ shadd(temp, i, array, temp, 3);\n@@ -3227,2 +3200,1 @@\n-    __ slli(t0, recv, 3);\n-    __ add(t0, esp, t0);\n+    __ shadd(t0, recv, esp, t0, 3);\n@@ -3241,2 +3213,1 @@\n-    __ slli(t1, t1, 3);\n-    __ add(t0, t0, t1);\n+    __ shadd(t0, t1, t0, t1, 3);\n@@ -3963,2 +3934,1 @@\n-  __ slli(t1, x9, 3);\n-  __ add(t0, t1, t0);\n+  __ shadd(t0, x9, t0, t1, 3);\n@@ -3975,2 +3945,1 @@\n-  __ slli(c_rarg1, x10, 3);\n-  __ add(c_rarg1, c_rarg1, esp);\n+  __ shadd(c_rarg1, x10, esp, c_rarg1, 3);\n@@ -3982,2 +3951,1 @@\n-  __ slli(t0, x11, 3);\n-  __ add(esp, esp, t0);\n+  __ shadd(esp, x11, esp, t0, 3);\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":32,"deletions":64,"binary":false,"changes":96,"status":"modified"}]}