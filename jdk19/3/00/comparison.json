{"files":[{"patch":"@@ -222,8 +222,0 @@\n-intptr_t* frame::compiled_sender_sp(CodeBlob* cb) const {\n-  return sender_sp();\n-}\n-\n-address* frame::compiled_sender_pc_addr(CodeBlob* cb) const {\n-  return sender_pc_addr();\n-}\n-\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -385,2 +385,1 @@\n-  inline frame(intptr_t* sp, address pc);\n-  inline frame(intptr_t* sp, address pc, intptr_t* unextended_sp, intptr_t* fp = nullptr, CodeBlob* cb = nullptr);\n+  inline frame(intptr_t* sp, address pc, intptr_t* unextended_sp = nullptr, intptr_t* fp = nullptr, CodeBlob* cb = nullptr);\n@@ -389,3 +388,0 @@\n-\n-  intptr_t* compiled_sender_sp(CodeBlob* cb) const;\n-  address*  compiled_sender_pc_addr(CodeBlob* cb) const;\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-\/\/ Initialize frame members (_pc and _sp must be given)\n+\/\/ Initialize frame members (_sp must be given)\n@@ -38,1 +38,4 @@\n-  assert(_pc != nullptr, \"precondition: must have PC\");\n+  if (_pc == nullptr) {\n+    _pc = (address)own_abi()->lr;\n+    assert(_pc != nullptr, \"must have PC\");\n+  }\n@@ -48,0 +51,4 @@\n+  if (_unextended_sp == nullptr) {\n+    _unextended_sp = _sp;\n+  }\n+\n@@ -71,1 +78,1 @@\n-\/\/ Initialize all fields, _unextended_sp will be adjusted in find_codeblob_and_set_pc_and_deopt_state.\n+\/\/ Initialize all fields\n@@ -75,12 +82,0 @@\n-inline frame::frame(intptr_t* sp)\n-  : _sp(sp), _pc((address)own_abi()->lr), _cb(nullptr), _oop_map(nullptr),\n-    _on_heap(false), DEBUG_ONLY(_frame_index(-1) COMMA) _unextended_sp(sp), _fp(nullptr) {\n-  setup();\n-}\n-\n-inline frame::frame(intptr_t* sp, address pc)\n-  : _sp(sp), _pc(pc), _cb(nullptr), _oop_map(nullptr),\n-    _on_heap(false), DEBUG_ONLY(_frame_index(-1) COMMA) _unextended_sp(sp), _fp(nullptr) {\n-  setup();\n-}\n-\n@@ -88,1 +83,1 @@\n-  : _sp(sp), _pc(pc), _cb(nullptr), _oop_map(nullptr),\n+  : _sp(sp), _pc(pc), _cb(cb), _oop_map(nullptr),\n@@ -93,0 +88,2 @@\n+inline frame::frame(intptr_t* sp) : frame(sp, nullptr) {}\n+\n@@ -308,1 +305,1 @@\n-  if (_cb != NULL) return sender_for_compiled_frame(map);\n+  if (_cb != nullptr) return sender_for_compiled_frame(map);\n@@ -316,5 +313,1 @@\n-  assert(map != NULL, \"map must be set\");\n-\n-  \/\/ Frame owned by compiler.\n-  address pc = *compiled_sender_pc_addr(_cb);\n-  frame caller(compiled_sender_sp(_cb), pc);\n+  assert(map != nullptr, \"map must be set\");\n@@ -323,2 +316,0 @@\n-\n-  \/\/ Get the rest.\n@@ -328,1 +319,1 @@\n-    if (_cb->oop_maps() != NULL) {\n+    if (_cb->oop_maps() != nullptr) {\n@@ -333,1 +324,1 @@\n-  return caller;\n+  return frame(sender_sp(), sender_pc());\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":17,"deletions":26,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2594,1 +2594,0 @@\n-  {\n@@ -2651,1 +2650,0 @@\n-  }\n@@ -2666,1 +2664,1 @@\n-  __ get_PC_trash_LR(R3_RET);\n+  __ calculate_address_from_global_toc(R3_RET, calls_return_pc, true, true, true, true);\n@@ -2718,0 +2716,1 @@\n+  Register r_return_pc      = R27_tmp7;\n@@ -2742,3 +2741,3 @@\n-  address gc_map_pc = __ get_PC_trash_LR(R11_scratch1);\n-\n-  __ set_last_Java_frame(\/*sp*\/R1_SP, \/*pc*\/R11_scratch1);\n+  address gc_map_pc = __ pc();\n+  __ calculate_address_from_global_toc(r_return_pc, gc_map_pc, true, true, true, true);\n+  __ set_last_Java_frame(\/*sp*\/R1_SP, r_return_pc);\n@@ -2800,2 +2799,1 @@\n-  __ get_PC_trash_LR(R11_scratch1);\n-  __ set_last_Java_frame(\/*sp*\/R1_SP, \/*pc*\/R11_scratch1);\n+  __ set_last_Java_frame(\/*sp*\/R1_SP, r_return_pc);\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}