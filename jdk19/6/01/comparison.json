{"files":[{"patch":"@@ -123,2 +123,0 @@\n-serviceability\/jvmti\/vthread\/VThreadNotifyFramePopTest\/VThreadNotifyFramePopTest.java 8288214 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8284161 8288214\n@@ -28,1 +29,3 @@\n- * @compile --enable-preview -source ${jdk.version}  VThreadNotifyFramePopTest.java\n+ * @enablePreview\n+ * @modules jdk.httpserver\n+ * @library \/test\/lib\n@@ -30,1 +33,0 @@\n- *     --enable-preview\n@@ -38,2 +40,2 @@\n- * from URL.openStream() while executing on a VThread. The FRAME_POP event is never\n- * delivered.\n+ * from URL.openStream() while executing on a virtual thread. The FRAME_POP event is\n+ * never delivered.\n@@ -47,0 +49,1 @@\n+import java.io.IOException;\n@@ -48,1 +51,4 @@\n-import java.net.URI;\n+import java.io.OutputStream;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+import java.net.ServerSocket;\n@@ -52,1 +58,2 @@\n-import java.util.concurrent.ThreadFactory;\n+import com.sun.net.httpserver.HttpServer;\n+import jdk.test.lib.net.URIBuilder;\n@@ -60,0 +67,18 @@\n+\n+    \/**\n+     * Creates a HTTP server bound to the loopback address. The server responds to\n+     * the request \"\/hello\" with a message.\n+     *\/\n+    static HttpServer createHttpServer() throws IOException {\n+        InetAddress lb = InetAddress.getLoopbackAddress();\n+        HttpServer server = HttpServer.create(new InetSocketAddress(lb, 0), 16);\n+        server.createContext(\"\/hello\", e -> {\n+            byte[] response = \"Hello\".getBytes(\"UTF-8\");\n+            e.sendResponseHeaders(200, response.length);\n+            try (OutputStream out = e.getResponseBody()) {\n+                out.write(response);\n+            }\n+        });\n+        return server;\n+    }\n+\n@@ -74,5 +99,18 @@\n-            URL url = URI.create(\"http:\/\/openjdk.java.net\/\").toURL();\n-            try (InputStream in = url.openStream()) {\n-                brkpoint();\n-                in.readAllBytes();\n-                System.out.println(\"readAllBytes done\");\n+            HttpServer server = createHttpServer();\n+            server.start();\n+            try {\n+                URL url = URIBuilder.newBuilder()\n+                        .scheme(\"http\")\n+                        .loopback()\n+                        .port(server.getAddress().getPort())\n+                        .path(\"\/hello\")\n+                        .toURL();\n+                System.out.println(\"open \" + url);\n+                try (InputStream in = url.openStream()) {\n+                    brkpoint();\n+                    System.out.println(\"reading response\");\n+                    in.readAllBytes();\n+                }\n+            } finally {\n+                System.out.println(\"stop server\");\n+                server.stop(1);\n@@ -80,1 +118,0 @@\n-            System.out.println(\"try done\");\n@@ -82,1 +119,1 @@\n-            e.printStackTrace();\n+            throw new RuntimeException(e);\n@@ -89,4 +126,4 @@\n-        ThreadFactory factory = Thread.ofVirtual().factory();\n-        try (var executor = Executors.newThreadPerTaskExecutor(factory)) {\n-            executor.submit(VThreadNotifyFramePopTest::run);\n-            System.out.println(\"submit done\");\n+        try (var executor = Executors.newVirtualThreadPerTaskExecutor()) {\n+            var future = executor.submit(VThreadNotifyFramePopTest::run);\n+            System.out.println(\"virtual thread started\");\n+            future.get();\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadNotifyFramePopTest\/VThreadNotifyFramePopTest.java","additions":54,"deletions":17,"binary":false,"changes":71,"status":"modified"}]}