{"files":[{"patch":"@@ -100,0 +100,1 @@\n+import com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition;\n@@ -287,1 +288,1 @@\n-            Symbol accessor = getAccessor(component);\n+            Symbol accessor = getAccessor(tree.pos(), component);\n@@ -347,1 +348,1 @@\n-    private MethodSymbol getAccessor(RecordComponent component) {\n+    private MethodSymbol getAccessor(DiagnosticPosition pos, RecordComponent component) {\n@@ -349,4 +350,0 @@\n-            MethodSymbol realAccessor = (MethodSymbol) component.owner\n-                                                 .members()\n-                                                 .findFirst(component.name, s -> s.kind == Kind.MTH &&\n-                                                                                 ((MethodSymbol) s).params.isEmpty());\n@@ -362,1 +359,1 @@\n-                    make.Return(make.App(make.Select(make.Ident(proxy.params().head), realAccessor)));\n+                    make.Return(make.App(make.Select(make.Ident(proxy.params().head), c.accessor)));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8288120\n+ * @summary Verify an appropriate accessor method is looked up.\n+ * @compile --enable-preview -source ${jdk.version} ProxyMethodLookup.java\n+ * @run main\/othervm --enable-preview ProxyMethodLookup\n+ *\/\n+public class ProxyMethodLookup {\n+\n+    public static void main(String[] args) {\n+        Object val = new R(new Component());\n+        boolean b = val instanceof R(var c);\n+   }\n+\n+    interface ComponentBase {}\n+\n+    record Component() implements ComponentBase {}\n+\n+    sealed interface Base {\n+        ComponentBase c();\n+    }\n+\n+    record R(Component c) implements Base {}\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/ProxyMethodLookup.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"}]}