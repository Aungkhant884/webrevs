{"files":[{"patch":"@@ -1000,3 +1000,0 @@\n-    Thread* current = Thread::current();\n-    guarantee(current != thread || JavaThread::cast(thread)->is_oop_safe(),\n-              \"current cannot touch oops after its GC barrier is detached.\");\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -797,0 +797,4 @@\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  guarantee(current != this || JavaThread::cast(current)->is_oop_safe(),\n+            \"current cannot touch oops after its GC barrier is detached.\");\n@@ -2147,3 +2151,9 @@\n-  oop thread_obj = threadObj();\n-  if (thread_obj != NULL) {\n-    if (java_lang_Thread::is_daemon(thread_obj)) st->print(\" daemon\");\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  if (!current->is_Java_thread() || JavaThread::cast(current)->is_oop_safe()) {\n+    \/\/ Only access threadObj() if current thread is not a JavaThread\n+    \/\/ or if it is a JavaThread that can safely access oops.\n+    oop thread_obj = threadObj();\n+    if (thread_obj != nullptr) {\n+      if (java_lang_Thread::is_daemon(thread_obj)) st->print(\" daemon\");\n+    }\n@@ -2208,6 +2218,16 @@\n-  oop thread_obj = threadObj();\n-  if (thread_obj != NULL) {\n-    oop name = java_lang_Thread::name(thread_obj);\n-    if (name != NULL) {\n-      if (buf == NULL) {\n-        name_str = java_lang_String::as_utf8_string(name);\n+  Thread* current = Thread::current_or_null_safe();\n+  assert(current != nullptr, \"cannot be called by a detached thread\");\n+  if (!current->is_Java_thread() || JavaThread::cast(current)->is_oop_safe()) {\n+    \/\/ Only access threadObj() if current thread is not a JavaThread\n+    \/\/ or if it is a JavaThread that can safely access oops.\n+    oop thread_obj = threadObj();\n+    if (thread_obj != NULL) {\n+      oop name = java_lang_Thread::name(thread_obj);\n+      if (name != NULL) {\n+        if (buf == NULL) {\n+          name_str = java_lang_String::as_utf8_string(name);\n+        } else {\n+          name_str = java_lang_String::as_utf8_string(name, buf, buflen);\n+        }\n+      } else if (is_attaching_via_jni()) { \/\/ workaround for 6412693 - see 6404306\n+        name_str = \"<no-name - thread is attaching>\";\n@@ -2215,1 +2235,1 @@\n-        name_str = java_lang_String::as_utf8_string(name, buf, buflen);\n+        name_str = \"<un-named>\";\n@@ -2217,2 +2237,0 @@\n-    } else if (is_attaching_via_jni()) { \/\/ workaround for 6412693 - see 6404306\n-      name_str = \"<no-name - thread is attaching>\";\n@@ -2220,1 +2238,1 @@\n-      name_str = \"<un-named>\";\n+      name_str = Thread::name();\n@@ -2223,1 +2241,9 @@\n-    name_str = Thread::name();\n+    \/\/ Current JavaThread has exited...\n+    if (current == this) {\n+      \/\/ ... and is asking about itself:\n+      name_str = \"<no-name - current JavaThread has exited>\";\n+    } else {\n+      \/\/ ... and it can't safely determine this JavaThread's name so\n+      \/\/ use the default thread name.\n+      name_str = Thread::name();\n+    }\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":40,"deletions":14,"binary":false,"changes":54,"status":"modified"}]}