{"files":[{"patch":"@@ -131,1 +131,1 @@\n-        return name.hashCode() << Long.hashCode(alignment);\n+        return Objects.hash(name, size, alignment);\n@@ -148,1 +148,1 @@\n-     * @param that the object to be compared for equality with this layout.\n+     * @param other the object to be compared for equality with this layout.\n@@ -152,2 +152,2 @@\n-    public boolean equals(Object that) {\n-        if (this == that) {\n+    public boolean equals(Object other) {\n+        if (this == other) {\n@@ -157,7 +157,4 @@\n-        if (!(that instanceof AbstractLayout)) {\n-            return false;\n-        }\n-\n-        return Objects.equals(name, ((AbstractLayout) that).name) &&\n-                Objects.equals(size, ((AbstractLayout)that).size) &&\n-                Objects.equals(alignment, ((AbstractLayout) that).alignment);\n+        return other instanceof AbstractLayout otherLayout &&\n+                name.equals(otherLayout.name) &&\n+                size == otherLayout.size &&\n+                alignment == otherLayout.alignment;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/AbstractLayout.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -146,4 +146,3 @@\n-        if (!(other instanceof GroupLayout g)) {\n-            return false;\n-        }\n-        return kind.equals(g.kind) && elements.equals(g.elements);\n+        return other instanceof GroupLayout otherGroup &&\n+                kind == otherGroup.kind &&\n+                elements.equals(otherGroup.elements);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/GroupLayout.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -214,4 +214,3 @@\n-        if (!(other instanceof SequenceLayout s)) {\n-            return false;\n-        }\n-        return elemCount == s.elemCount && elementLayout.equals(s.elementLayout);\n+        return other instanceof SequenceLayout otherSeq &&\n+                elemCount == otherSeq.elemCount &&\n+                elementLayout.equals(otherSeq.elementLayout);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SequenceLayout.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -119,5 +119,3 @@\n-        if (!(other instanceof ValueLayout v)) {\n-            return false;\n-        }\n-        return carrier.equals(v.carrier) &&\n-            order.equals(v.order);\n+        return other instanceof ValueLayout otherValue &&\n+                carrier.equals(otherValue.carrier) &&\n+                order.equals(otherValue.order);\n@@ -210,1 +208,1 @@\n-        return Objects.hash(super.hashCode(), order, bitSize(), alignment);\n+        return Objects.hash(super.hashCode(), order, carrier);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}