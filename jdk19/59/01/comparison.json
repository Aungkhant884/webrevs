{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n- * @LastModified: Oct 2017\n+ * @LastModified: June 2022\n@@ -120,1 +120,1 @@\n-                nodes = new ArrayList<>(5);\n+                nodes = new ArrayList<>();\n@@ -196,1 +196,1 @@\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n@@ -594,1 +594,1 @@\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/AttributeMap.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n- * @LastModified: Apr 2019\n+ * @LastModified: June 2022\n@@ -143,3 +143,0 @@\n-    \/** list of attributes *\/\n-    protected final List<Node> fAttributeList = new ArrayList<>(5);\n-\n@@ -888,3 +885,3 @@\n-            attributes.cloneMap(fAttributeList);\n-            for (int i = 0; i < fAttributeList.size(); i++) {\n-                Attr attr = (Attr) fAttributeList.get(i);\n+            List<Node> attrList = attributes.cloneMap(new ArrayList<>());\n+            for (int i = 0; i < attrList.size(); i++) {\n+                Attr attr = (Attr) attrList.get(i);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/DOMNormalizer.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n- * @LastModified: Jan 2018\n+ * @LastModified: June 2022\n@@ -200,1 +200,1 @@\n-                nodes = new ArrayList<>(5);\n+                nodes = new ArrayList<>();\n@@ -250,1 +250,1 @@\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n@@ -565,1 +565,1 @@\n-                    nodes = new ArrayList<>(5);\n+                    nodes = new ArrayList<>();\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/dom\/NamedNodeMapImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import org.w3c.dom.Attr;\n@@ -40,0 +41,1 @@\n+import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n@@ -42,0 +44,3 @@\n+import org.w3c.dom.ls.DOMImplementationLS;\n+import org.w3c.dom.ls.LSInput;\n+import org.w3c.dom.ls.LSParser;\n@@ -45,1 +50,1 @@\n- * @bug 8213117 8222743\n+ * @bug 8213117 8222743 8287076\n@@ -59,0 +64,47 @@\n+    \/*\n+     * @bug 8287076\n+     * Verifies that Document::normalizeDocument returns the same result as that\n+     * prior to JDK 10 (JDK-8181150).\n+     * Attribute Name:\n+     *     JDK 9:                   NS1:wsu and NS2:wsu2\n+     *     After the JDK 10 change: wsu and wsu2\n+    *\/\n+    @Test\n+    public void testNormalizeDocument() throws Exception {\n+        final DOMImplementationRegistry registry = DOMImplementationRegistry.newInstance();\n+        final DOMImplementationLS impl = (DOMImplementationLS) registry.getDOMImplementation(\"LS\");\n+        final LSParser builder = impl.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS, null);\n+        final LSInput input = impl.createLSInput();\n+        input.setStringData(\"<xml\/>\");\n+        final Document document = builder.parse(input);\n+        final Element root = document.getDocumentElement();\n+\n+        \/\/ Generate a single element\n+        final Element element = document.createElement(\"token\");\n+        final Attr attr = element.getOwnerDocument().createAttributeNS(\"http:\/\/blah.xsd\", \"wsu\");\n+        attr.setValue(\"Id\");\n+        element.setAttributeNodeNS(attr);\n+\n+        final Attr attr2 = element.getOwnerDocument().createAttributeNS(\"http:\/\/blah2.xsd\", \"wsu2\");\n+        element.setAttributeNodeNS(attr2);\n+\n+        final Attr attr3 = element.getOwnerDocument().createAttribute(\"aa\");\n+        element.setAttributeNodeNS(attr3);\n+\n+        final Attr attr4 = element.getOwnerDocument().createAttribute(\"zz\");\n+        element.setAttributeNodeNS(attr4);\n+\n+        final Attr attr5 = element.getOwnerDocument().createAttribute(\"tt\");\n+        element.setAttributeNodeNS(attr5);\n+\n+        root.appendChild(element);\n+\n+        document.normalizeDocument();\n+\n+        Node wsu = element.getAttributes().getNamedItemNS(\"http:\/\/blah.xsd\", \"wsu\");\n+        Node wsu2 = element.getAttributes().getNamedItemNS(\"http:\/\/blah2.xsd\", \"wsu2\");\n+\n+        Assert.assertEquals(wsu.getNodeName(), \"NS1:wsu\");\n+        Assert.assertEquals(wsu2.getNodeName(), \"NS2:wsu2\");\n+    }\n+\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/dom\/DocumentTest.java","additions":54,"deletions":2,"binary":false,"changes":56,"status":"modified"}]}