{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.util.Iterator;\n@@ -50,0 +51,1 @@\n+import javax.lang.model.element.RecordComponentElement;\n@@ -247,2 +249,4 @@\n-                checkParamsDocumented(ee.getTypeParameters());\n-                checkParamsDocumented(ee.getParameters());\n+                if (!isCanonicalRecordConstructor(ee)) {\n+                    checkParamsDocumented(ee.getTypeParameters());\n+                    checkParamsDocumented(ee.getParameters());\n+                }\n@@ -266,0 +270,25 @@\n+    private boolean isCanonicalRecordConstructor(ExecutableElement ee) {\n+        TypeElement te = (TypeElement) ee.getEnclosingElement();\n+        if (te.getKind() != ElementKind.RECORD) {\n+            return false;\n+        }\n+        List<? extends RecordComponentElement> stateComps = te.getRecordComponents();\n+        List<? extends VariableElement> params = ee.getParameters();\n+        if (stateComps.size() != params.size()) {\n+            return false;\n+        }\n+\n+        Iterator<? extends RecordComponentElement> stateIter = stateComps.iterator();\n+        Iterator<? extends VariableElement> paramIter = params.iterator();\n+        while (paramIter.hasNext() && stateIter.hasNext()) {\n+            VariableElement param = paramIter.next();\n+            RecordComponentElement comp = stateIter.next();\n+            if (!Objects.equals(param.getSimpleName(), comp.getSimpleName())\n+                    || !env.types.isSameType(param.asType(), comp.asType())) {\n+                return false;\n+            }\n+        }\n+\n+        return true;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":31,"deletions":2,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8275784\n+ * @summary Bogus warning generated for record with compact constructor\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.doclint\n+ * @build DocLintTester\n+ * @run main DocLintTester -Xmsgs:all RecordCompactConstructorTest.java\n+ *\/\n+\n+\/**\n+ * Comment.\n+ * @param a aaa\n+ * @param b bbb\n+ * @param c ccc\n+ *\/\n+public record RecordCompactConstructorTest(int a, int b, int c) {\n+    \/** Compact constructor. *\/\n+    public RecordCompactConstructorTest { }\n+}\n","filename":"test\/langtools\/tools\/doclint\/RecordCompactConstructorTest.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}