{"files":[{"patch":"@@ -731,3 +731,3 @@\n-        \/\/ The HTML <a> tag generated from the @link snippet markup tag is the\n-        \/\/ same as that of the {@link} Standard doclet tag. This is specified\n-        \/\/ and can be used for comparison and testing.\n+        \/\/ The HTML A element generated for the @link snippet markup tag is\n+        \/\/ the same as that for the similar Standard doclet {@link} tag.\n+        \/\/ This fact can be used for comparison and testing.\n@@ -735,4 +735,4 @@\n-        \/\/ generate documentation for {@link} to grab its HTML <a> tag;\n-        \/\/ generate documentation at low cost and do not interfere with the\n-        \/\/ calling test state; for that, do not create file trees, do not write\n-        \/\/ to std out\/err, and generally try to keep everything in memory\n+        \/\/ Generate documentation for {@link} to grab its HTML A element.\n+        \/\/ Generate documentation cheaply and do not interfere with the\n+        \/\/ calling test state; for that: do not create file trees, do not write\n+        \/\/ to std out\/err, and generally try to keep everything in memory.\n@@ -744,1 +744,4 @@\n-        \/\/ blank labels as not set, whereas snippet's @link does not.\n+        \/\/ whitespace after the reference as an absent label, whereas\n+        \/\/ snippet's @link does not. To avoid whitespace problems,\n+        \/\/ LABEL_PLACEHOLDER is used. It is later substituted with \"content\",\n+        \/\/ which might be an empty or blank string.\n@@ -746,3 +749,2 @@\n-        String LABEL_PLACEHOLDER = \"label\";\n-\n-        String source = \"\"\"\n+        var LABEL_PLACEHOLDER = \"label\";\n+        var source = \"\"\"\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"}]}