{"files":[{"patch":"@@ -150,0 +150,5 @@\n+    Thread* current = Thread::current();\n+    if (current->is_Java_thread()) {\n+      guarantee(JavaThread::cast(current)->is_oop_safe(),\n+                \"JavaThread cannot touch oops after its GC barrier is detached.\");\n+    }\n","filename":"src\/hotspot\/share\/runtime\/thread.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8167108 8266130 8283467 8284632\n+ * @bug 8167108 8266130 8283467 8284632 8286830\n@@ -75,0 +75,2 @@\n+        timeMax \/= 2;  \/\/ Split time between the two sub-tests.\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/StopAtExit.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8167108 8265240\n+ * @bug 8167108 8265240 8286830\n@@ -81,0 +81,2 @@\n+        timeMax \/= 2;  \/\/ Split time between the two sub-tests.\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/SuspendAtExit.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}