{"files":[{"patch":"@@ -62,0 +62,62 @@\n+ * <h3>SuppressWarnings<\/h3>\n+ *\n+ * JLS {@jls 9.6.4.5} specifies a number of strings that can be used to\n+ * suppress warnings that may be generated by a Java compiler.\n+ *\n+ * In addition, <em>javac<\/em> also supports other strings that can be used\n+ * to suppress other kinds of warnings. The following table lists all the\n+ * strings that can be used with {@code @SuppressWarnings}.\n+ *\n+ * <table class=\"striped\">\n+ *     <caption>Strings supported by {@code SuppressWarnings}<\/caption>\n+ * <thead>\n+ * <tr><th>String<th>Suppress Warnings About ...\n+ * <\/thead>\n+ * <tbody>\n+ * <tr><th scope=\"row\">{@code auxiliaryclass}       <td>an auxiliary class that is hidden in a source file, and is used\n+ *                                                      from other files\n+ * <tr><th scope=\"row\">{@code cast}                 <td>use of unnecessary casts\n+ * <tr><th scope=\"row\">{@code classfile}            <td>issues related to classfile contents\n+ * <tr><th scope=\"row\">{@code deprecation}          <td>use of deprecated items\n+ * <tr><th scope=\"row\">{@code dep-ann}              <td>items marked as deprecated in a documentation comment but not\n+ *                                                      using the {@code @Deprecated} annotation\n+ * <tr><th scope=\"row\">{@code divzero}              <td>division by constant integer {@code 0}\n+ * <tr><th scope=\"row\">{@code empty}                <td>empty statement after {@code if}\n+ * <tr><th scope=\"row\">{@code exports}              <td>issues regarding module exports\n+ * <tr><th scope=\"row\">{@code fallthrough}          <td>falling through from one case of a {@code switch} statement to\n+ *                                                      the next\n+ * <tr><th scope=\"row\">{@code finally}              <td>{@code finally} clauses that do not terminate normally\n+ * <tr><th scope=\"row\">{@code missing-explicit-ctor} <td>missing explicit constructors in public and protected classes\n+ *                                                      in exported packages\n+ * <tr><th scope=\"row\">{@code module}               <td>module system related issues\n+ * <tr><th scope=\"row\">{@code opens}                <td>issues regarding module opens\n+ * <tr><th scope=\"row\">{@code overloads}            <td>issues regarding method overloads\n+ * <tr><th scope=\"row\">{@code overrides}            <td>issues regarding method overrides\n+ * <tr><th scope=\"row\">{@code path}                 <td>invalid path elements on the command line\n+ * <tr><th scope=\"row\">{@code preview}              <td>use of preview language features\n+ * <tr><th scope=\"row\">{@code rawtypes}             <td>use of raw types\n+ * <tr><th scope=\"row\">{@code removal}              <td>use of API that has been marked for removal\n+ * <tr><th scope=\"row\">{@code requires-automatic}   <td>use of automatic modules in the {@code requires} clauses\n+ * <tr><th scope=\"row\">{@code requires-transitive-automatic} <td>automatic modules in {@code requires transitive}\n+ * <tr><th scope=\"row\">{@code serial}               <td>{@link java.base\/java.io.Serializable Serializable} classes\n+ *                                                      that do not have a {@code serialVersionUID} field, or other\n+ *                                                      suspect declarations in {@code Serializable} and\n+ *                                                      {@link java.base\/java.io.Externalizable Externalizable} classes\n+ *                                                      and interfaces\n+ * <tr><th scope=\"row\">{@code static}               <td>accessing a static member using an instance\n+ * <tr><th scope=\"row\">{@code strictfp}             <td>unnecessary use of the {@code strictfp} modifier\n+ * <tr><th scope=\"row\">{@code synchronization}      <td>synchronization attempts on instances of value-based classes\n+ * <tr><th scope=\"row\">{@code text-blocks}          <td>inconsistent white space characters in text block indentation\n+ * <tr><th scope=\"row\">{@code try}                  <td>issues relating to use of {@code try} blocks\n+ *                                                      (that is, try-with-resources)\n+ * <tr><th scope=\"row\">{@code unchecked}            <td>unchecked operations\n+ * <tr><th scope=\"row\">{@code varargs}              <td>potentially unsafe vararg methods\n+ * <tr><th scope=\"row\">{@code doclint:accessibility} <td>accessibility issues found in documentation comments\n+ * <tr><th scope=\"row\">{@code doclint:all}          <td>all issues found in documentation comments\n+ * <tr><th scope=\"row\">{@code doclint:html}         <td>HTML issues found in documentation comments\n+ * <tr><th scope=\"row\">{@code doclint:missing}      <td>missing items in documentation comments\n+ * <tr><th scope=\"row\">{@code doclint:reference}    <td>reference issues found in documentation comments\n+ * <tr><th scope=\"row\">{@code doclint:syntax}       <td>syntax issues found in documentation comments\n+ * <\/tbody>\n+ * <\/table>\n+ *\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -694,1 +694,1 @@\n-\\f[CB]reference\\f[R], \\f[CB]syntax\\f[R]\n+\\f[CB]reference\\f[R], \\f[CB]syntax\\f[R].\n@@ -704,0 +704,5 @@\n+When prefixed by \\f[CB]doclint:\\f[R], the \\f[I]group\\f[R] names and\n+\\f[CB]all\\f[R] can be used with \\f[CB]\\@SuppressWarnings\\f[R] to suppress\n+warnings about documentation comments in parts of the code being\n+compiled.\n+.PP\n@@ -841,0 +846,4 @@\n+With the exception of \\f[CB]all\\f[R] and \\f[CB]none\\f[R], the keys can be\n+used with the \\f[CB]\\@SuppressWarnings\\f[R] annotation to suppress\n+warnings in a part of the source code being compiled.\n+.PP\n","filename":"src\/jdk.compiler\/share\/man\/javac.1","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}