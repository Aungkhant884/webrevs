{"files":[{"patch":"@@ -1968,0 +1968,4 @@\n+  } else {\n+    \/\/ caller might have been deoptimized during thaw but we've overwritten the return address when copying f from the heap.\n+    \/\/ If the caller is not deoptimized, pc is unchanged.\n+    ContinuationHelper::Frame::patch_pc(caller, caller.raw_pc());\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,3 +34,0 @@\n-serviceability\/jvmti\/vthread\/ContFramePopTest\/ContFramePopTest.java 8278053 generic-all\n-serviceability\/jvmti\/vthread\/ContStackDepthTest\/ContStackDepthTest.java 8278053 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}