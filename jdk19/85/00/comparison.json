{"files":[{"patch":"@@ -2588,1 +2588,2 @@\n-     * constructors, the {@code Builder} checks if a value configured by a\n+     * constructors or {@code Locale.of()} factory methods,\n+     * the {@code Builder} checks if a value configured by a\n@@ -2594,1 +2595,2 @@\n-     * <p><b>Note:<\/b> The {@code Locale} class does not provide any\n+     * @implNote\n+     * The {@code Locale} class does not provide any\n@@ -2599,2 +2601,2 @@\n-     * this restriction. If it is necessary to support such a variant, use a\n-     * Locale constructor.  However, keep in mind that a {@code Locale}\n+     * this restriction. If it is necessary to support such a variant, use\n+     * {@link Locale#of(String, String, String)}.  However, keep in mind that a {@code Locale}\n@@ -2606,5 +2608,3 @@\n-     * <blockquote>\n-     * <pre>\n-     *     Locale aLocale = new Builder().setLanguage(\"sr\").setScript(\"Latn\").setRegion(\"RS\").build();\n-     * <\/pre>\n-     * <\/blockquote>\n+     * {@snippet :\n+     *     Locale aLocale = new Locale.Builder().setLanguage(\"sr\").setScript(\"Latn\").setRegion(\"RS\").build();\n+     * }\n@@ -2616,0 +2616,1 @@\n+     * @see Locale#of(String, String, String)\n@@ -2766,1 +2767,1 @@\n-         * use a Locale constructor.\n+         * use {@link Locale#of(String, String, String)}.\n@@ -2771,0 +2772,1 @@\n+         * @see Locale#of(String, String, String)\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}