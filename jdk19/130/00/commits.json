[{"commit":{"message":"8289954: C2: Assert failed in PhaseCFG::verify() after JDK-8183390\n\nFuzzer tests report an assertion failure issue in C2 global code motion\nphase. Git bisection shows the problem starts after our fix of post loop\nvectorization (JDK-8183390). After some narrowing down work, we find it\nis caused by below change in that patch.\n\n@@ -422,14 +404,7 @@\n       cl->mark_passed_slp();\n     }\n     cl->mark_was_slp();\n-    if (cl->is_main_loop()) {\n-      cl->set_slp_max_unroll(local_loop_unroll_factor);\n-    } else if (post_loop_allowed) {\n-      if (!small_basic_type) {\n-        \/\/ avoid replication context for small basic types in programmable masked loops\n-        cl->set_slp_max_unroll(local_loop_unroll_factor);\n-      }\n-    }\n+    cl->set_slp_max_unroll(local_loop_unroll_factor);\n   }\n }\n\nThis change is in function `SuperWord::unrolling_analysis()`. AFAIK, it\nhelps find a loop's max unroll count via some analysis. In the original\ncode, we have loop type checks and the slp max unroll value is set for\nonly some types of loops. But in JDK-8183390, the check was removed by\nmistake. In my current understanding, the slp max unroll value applies\nto slp candidate loops only - either main loops or RCE'd post loops -\nso that check shouldn't be removed. After restoring it we don't see the\nassertion failure any more.\n\nThe new jtreg created in this patch can reproduce the failed assertion,\nwhich checks `def_block->dominates(block)` - the domination relationship\nof two blocks. But in the case, I found the blocks are in an unreachable\ninner loop, which I think ought to be optimized away in some previous C2\nphases. As I'm not quite familiar with the C2's global code motion, so\nfar I still don't understand how slp max unroll count eventually causes\nthat problem. This patch just restores the if condition which I removed\nincorrectly in JDK-8183390. But I still suspect that there is another\nhidden bug exists in C2. I would be glad if any reviewers can give me\nsome guidance or suggestions.\n\nTested hotspot::hotspot_all_no_apps, jdk::tier1~3 and langtools::tier1."},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestUnreachableInnerLoop.java"}],"sha":"7be821927554a7e758cbffde88050623d4f1ebec"}]