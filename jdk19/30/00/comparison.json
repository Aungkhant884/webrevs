{"files":[{"patch":"@@ -981,0 +981,1 @@\n+        String refText;\n@@ -983,1 +984,1 @@\n-            case LINK, LINK_PLAIN ->\n+            case LINK, LINK_PLAIN -> {\n@@ -985,1 +986,4 @@\n-                label = ((LinkTree) see).getLabel();\n+                LinkTree lt = (LinkTree) see;\n+                refText = lt.getReference().toString();\n+                label = lt.getLabel();\n+            }\n@@ -1001,0 +1005,1 @@\n+                        refText = ref.get(0).toString();\n@@ -1061,1 +1066,1 @@\n-                                seeText);\n+                                refText);\n@@ -1115,1 +1120,1 @@\n-                                tagName, seeText);\n+                                tagName, refText);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8288545\n+ * @summary  Missing space in error message\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    toolbox.ToolBox javadoc.tester.*\n+ * @run main TestLinkNotFound\n+ *\/\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+import java.nio.file.Path;\n+\n+public class TestLinkNotFound extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        TestLinkNotFound tester = new TestLinkNotFound();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+\n+    @Test\n+    public void test(Path base) throws Exception {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    \/**\n+                     * Comment.\n+                     * {@link nowhere label}\n+                     *\/\n+                    public class C{ }\n+                    \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-Xdoclint:none\",\n+                \"-Werror\",\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"C.java\").toString());\n+        checkExit(Exit.ERROR);\n+\n+        \/\/ the use of '\\n' in the following check implies that the label does not appear after the reference\n+        checkOutput(Output.OUT, true,\n+                \"reference not found: nowhere\\n\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkNotFound.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"}]}