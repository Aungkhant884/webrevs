{"files":[{"patch":"@@ -149,1 +149,1 @@\n-        MemorySegment addr = allocator.allocate(bytes.length + 1, 1L);\n+        MemorySegment addr = allocator.allocate(bytes.length + 1);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -188,0 +188,19 @@\n+    @Test\n+    public void testStringAllocateDelegation() {\n+        AtomicInteger calls = new AtomicInteger();\n+        SegmentAllocator allocator = new SegmentAllocator() {\n+            @Override\n+            public MemorySegment allocate(long bytesSize, long bytesAlignment) {\n+                return MemorySegment.allocateNative(bytesSize, bytesAlignment, MemorySession.openImplicit());\n+            }\n+\n+            @Override\n+            public MemorySegment allocate(long size) {\n+                calls.incrementAndGet();\n+                return allocate(size, 1);\n+            };\n+        };\n+        allocator.allocateUtf8String(\"Hello\");\n+        assertEquals(calls.get(), 1);\n+    }\n+\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}