{"files":[{"patch":"@@ -1645,1 +1645,1 @@\n-            if (u->is_ConstraintCast() && u->bottom_type()->higher_equal(_igvn.type(n)) && u->in(0) == x_ctrl) {\n+            if (u->is_ConstraintCast() && _igvn.type(n)->higher_equal(u->bottom_type()) && u->in(0) == x_ctrl) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8313262\n+ * @summary Sinking node may cause required cast to be dropped\n+ * @requires vm.gc.Shenandoah\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+UseShenandoahGC TestSinkingNodeDropsNotNullCast\n+ *\/\n+\n+import java.util.Arrays;\n+\n+public class TestSinkingNodeDropsNotNullCast {\n+    public static void main(String[] args) {\n+        Object[] array1 = new Object[100];\n+        Object[] array2 = new Object[100];\n+        Arrays.fill(array2, new Object());\n+        for (int i = 0; i < 20_000; i++) {\n+            test(array1);\n+            test(array1);\n+            test(array2);\n+        }\n+    }\n+\n+    private static Object test(Object[] array) {\n+        Object o;\n+        int i = 1;\n+        do {\n+            synchronized (new Object()) {\n+            }\n+            o = array[i];\n+            if (o != null) {\n+                if (o instanceof A) {\n+                    return ((A) o).field;\n+                } else {\n+                    return o;\n+                }\n+            }\n+            i++;\n+        } while (i < 100);\n+        return o;\n+    }\n+\n+    private static class A {\n+        Object field;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/compiler\/TestSinkingNodeDropsNotNullCast.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"}]}