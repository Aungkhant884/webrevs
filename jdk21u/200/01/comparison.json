{"files":[{"patch":"@@ -1701,1 +1701,1 @@\n-                if (prev != nullptr) {\n+                if (prev != nullptr && get_ctrl(prev) == x_ctrl) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * bug 8312440\n+ * @summary assert(cast != nullptr) failed: must have added a cast to pin the node\n+ * @run main\/othervm -XX:-BackgroundCompilation TestSunkNodeMissingCastAssert\n+ *\/\n+\n+\n+public class TestSunkNodeMissingCastAssert {\n+  private static int N = 500;\n+  private static int ia[] = new int[N];\n+  private static volatile int ib[] = new int[N];\n+\n+  private static void test() {\n+    for (int k = 1; k < 200; k++)\n+      switch (k % 5) {\n+      case 0:\n+        ia[k - 1] -= 15;\n+      case 2:\n+        for (int m = 0; m < 1000; m++);\n+      case 3:\n+        ib[k - 1] <<= 5;\n+      case 4:\n+        ib[k + 1] <<= 3;\n+      }\n+  }\n+\n+  public static void main(String[] args) {\n+    for (int i = 0; i < 20000; i++) {\n+      test();\n+    }\n+  }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestSunkNodeMissingCastAssert.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}