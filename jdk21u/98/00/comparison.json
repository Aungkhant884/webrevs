{"files":[{"patch":"@@ -197,1 +197,1 @@\n-    for (int j = 0; j < 1000; j++) {\n+    for (int j = 0; j < 750; j++) {\n@@ -252,1 +252,1 @@\n-    const int num_runs = 5;\n+    const int num_runs = 3;\n","filename":"test\/hotspot\/gtest\/metaspace\/test_chunkManager_stress.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-    int iter = 100000; \/\/ safety stop\n+    int iter = 25000; \/\/ safety stop\n","filename":"test\/hotspot\/gtest\/metaspace\/test_freeblocks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -386,1 +386,1 @@\n-    const int iterations = 10000;\n+    const int iterations = 2500;\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena_stress.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -358,1 +358,1 @@\n-    for (int run = 0; run < 1000; run++) {\n+    for (int run = 0; run < 750; run++) {\n@@ -428,1 +428,1 @@\n-    \/\/ Allocate a root chunk and commit a random part of it. Then repeatedly split\n+    \/\/ Allocate a root chunk and commit a part of it. Then repeatedly split\n@@ -565,1 +565,0 @@\n-  double d = os::elapsedTime();\n@@ -567,7 +566,3 @@\n-  for (int run = 0; run < 100; run++) {\n-    VirtualSpaceNodeTest test(metaspace::chunklevel::MAX_CHUNK_WORD_SIZE,\n-        metaspace::chunklevel::MAX_CHUNK_WORD_SIZE);\n-    test.test_split_and_merge_chunks();\n-  }\n-  double d2 = os::elapsedTime();\n-  LOG(\"%f\", (d2-d));\n+  VirtualSpaceNodeTest test(metaspace::chunklevel::MAX_CHUNK_WORD_SIZE,\n+      metaspace::chunklevel::MAX_CHUNK_WORD_SIZE);\n+  test.test_split_and_merge_chunks();\n","filename":"test\/hotspot\/gtest\/metaspace\/test_virtualspacenode.cpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -57,1 +57,18 @@\n- *      TestMetaspaceAllocationMT1\n+ *      TestMetaspaceAllocationMT1 3\n+ *\/\n+\n+\/*\n+ * @test id=debug-default-strict\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @key randomness\n+ * @requires (vm.debug == true)\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm\/manual\n+ *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      -XX:VerifyMetaspaceInterval=10\n+ *      TestMetaspaceAllocationMT1 10\n@@ -75,1 +92,1 @@\n- *      TestMetaspaceAllocationMT1\n+ *      TestMetaspaceAllocationMT1 3\n@@ -91,1 +108,1 @@\n- *      TestMetaspaceAllocationMT1\n+ *      TestMetaspaceAllocationMT1 3\n@@ -100,1 +117,1 @@\n-        final int seconds = 10;\n+        final int seconds = Integer.parseInt(args[0]);\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/TestMetaspaceAllocationMT1.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -57,1 +57,18 @@\n- *      TestMetaspaceAllocationMT2\n+ *      TestMetaspaceAllocationMT2 3\n+ *\/\n+\n+\/*\n+ * @test id=debug-default-strict\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @key randomness\n+ * @requires (vm.debug == true)\n+ *\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm\/manual\n+ *      -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *      -XX:VerifyMetaspaceInterval=10\n+ *      TestMetaspaceAllocationMT2 10\n@@ -75,1 +92,1 @@\n- *      TestMetaspaceAllocationMT2\n+ *      TestMetaspaceAllocationMT2 3\n@@ -91,1 +108,1 @@\n- *      TestMetaspaceAllocationMT2\n+ *      TestMetaspaceAllocationMT2 3\n@@ -100,1 +117,1 @@\n-        final int seconds = 10;\n+        final int seconds = Integer.parseInt(args[0]);\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/elastic\/TestMetaspaceAllocationMT2.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"}]}