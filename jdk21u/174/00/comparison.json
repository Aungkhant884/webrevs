{"files":[{"patch":"@@ -29,2 +29,2 @@\n- * @modules java.base\/sun.util.logging\n- * @library \/test\/lib\n+ * @modules java.base\/sun.util.logging java.base\/jdk.internal.logger:+open\n+ * @library ..\/lib\n@@ -35,1 +35,0 @@\n-\n@@ -53,0 +52,2 @@\n+        \/\/ allow time to let bootstrap logger flush data\n+        BootstrapLoggerUtils.awaitPending();\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/RecursiveLoading\/PlatformRecursiveLoadingTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+ * @modules java.base\/jdk.internal.logger:+open\n+ * @library ..\/lib\n@@ -48,0 +50,2 @@\n+        \/\/ allow time to let bootstrap logger flush data\n+        BootstrapLoggerUtils.awaitPending();\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/RecursiveLoading\/RecursiveLoadingTest.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,2 @@\n- * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.logger:+open\n+ * @library \/test\/lib ..\/lib\n@@ -149,0 +150,2 @@\n+            \/\/ allow time to let bootstrap logger flush data\n+            BootstrapLoggerUtils.awaitPending();\n@@ -168,0 +171,2 @@\n+            \/\/ allow test to access internal bootstrap logger functionality\n+            \"--add-opens=java.base\/jdk.internal.logger=ALL-UNNAMED\",\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/SignedLoggerFinderTest\/SignedLoggerFinderTest.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n-import java.util.Set;\n+\n@@ -41,0 +41,1 @@\n+ * @library ..\/..\/lib\n@@ -43,1 +44,1 @@\n- * @build BootstrapLoggerUtils LogStream\n+ * @build LogStream\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/internal\/BootstrapLogger\/BootstrapLoggerAPIsTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,1 @@\n+ * @library ..\/..\/lib\n@@ -58,1 +59,1 @@\n- * @build BootstrapLoggerUtils LogStream\n+ * @build LogStream\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/internal\/BootstrapLogger\/BootstrapLoggerTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,61 +0,0 @@\n-\/*\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.util.function.BooleanSupplier;\n-\n-import jdk.internal.logger.BootstrapLogger;\n-\n-class BootstrapLoggerUtils {\n-\n-    private static final Field IS_BOOTED;\n-    private static final Method AWAIT_PENDING;\n-\n-    static {\n-        try {\n-            IS_BOOTED = BootstrapLogger.class.getDeclaredField(\"isBooted\");\n-            IS_BOOTED.setAccessible(true);\n-            \/\/ private reflection hook that allows us to test wait until all\n-            \/\/ the tasks pending in the BootstrapExecutor are finished.\n-            AWAIT_PENDING = BootstrapLogger.class.getDeclaredMethod(\"awaitPendingTasks\");\n-            AWAIT_PENDING.setAccessible(true);\n-        } catch (Exception ex) {\n-            throw new ExceptionInInitializerError(ex);\n-        }\n-    }\n-\n-    static void setBootedHook(BooleanSupplier supplier) throws IllegalAccessException {\n-        IS_BOOTED.set(null, supplier);\n-    }\n-\n-    static void awaitPending() {\n-        try {\n-            AWAIT_PENDING.invoke(null);\n-        } catch (IllegalAccessException | IllegalArgumentException\n-                | InvocationTargetException ex) {\n-            ex.printStackTrace();\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/internal\/BootstrapLogger\/BootstrapLoggerUtils.java","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import jdk.internal.logger.BootstrapLogger;\n-\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/internal\/BootstrapLogger\/LogStream.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.function.BooleanSupplier;\n+\n+import jdk.internal.logger.BootstrapLogger;\n+\n+public final class BootstrapLoggerUtils {\n+\n+    private static final Field IS_BOOTED;\n+    private static final Method AWAIT_PENDING;\n+\n+    static {\n+        try {\n+            IS_BOOTED = BootstrapLogger.class.getDeclaredField(\"isBooted\");\n+            IS_BOOTED.setAccessible(true);\n+            \/\/ private reflection hook that allows us to test wait until all\n+            \/\/ the tasks pending in the BootstrapExecutor are finished.\n+            AWAIT_PENDING = BootstrapLogger.class.getDeclaredMethod(\"awaitPendingTasks\");\n+            AWAIT_PENDING.setAccessible(true);\n+        } catch (Exception ex) {\n+            throw new ExceptionInInitializerError(ex);\n+        }\n+    }\n+\n+    public static void setBootedHook(BooleanSupplier supplier) throws IllegalAccessException {\n+        IS_BOOTED.set(null, supplier);\n+    }\n+\n+    public static void awaitPending() {\n+        try {\n+            AWAIT_PENDING.invoke(null);\n+        } catch (IllegalAccessException | IllegalArgumentException\n+                | InvocationTargetException ex) {\n+            ex.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/lib\/BootstrapLoggerUtils.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}