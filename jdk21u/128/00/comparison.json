{"files":[{"patch":"@@ -2192,0 +2192,2 @@\n+        \/\/don't include unnamed variables:\n+        if (var.sym.name == var.sym.name.table.names.empty) return ;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8313323\n+ * @summary Verify javac does not produce incorrect LocalVariableTable\n+ * @enablePreview\n+ * @compile -g UnnamedLocalVariableTable.java\n+ * @run main UnnamedLocalVariableTable\n+ *\/\n+public class UnnamedLocalVariableTable {\n+    public static void main(String... args) {\n+        try {\n+            int _ = 0;\n+            if (args[0] instanceof String _) {\n+                System.err.println(\"1\");\n+            }\n+            I i = _ -> {};\n+            java.util.List<String> _ = null;\n+        } catch (Exception _) {\n+            System.err.println(\"2\");\n+        }\n+    }\n+\n+    interface I {\n+        public void test(String s);\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/unnamed\/UnnamedLocalVariableTable.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}