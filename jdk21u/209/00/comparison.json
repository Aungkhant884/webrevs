{"files":[{"patch":"@@ -1658,0 +1658,22 @@\n+\/\/ Rd = Rs1 & (~Rd2)\n+void MacroAssembler::andn(Register Rd, Register Rs1, Register Rs2) {\n+  if (UseZbb) {\n+    Assembler::andn(Rd, Rs1, Rs2);\n+    return;\n+  }\n+\n+  notr(Rd, Rs2);\n+  andr(Rd, Rs1, Rd);\n+}\n+\n+\/\/ Rd = Rs1 | (~Rd2)\n+void MacroAssembler::orn(Register Rd, Register Rs1, Register Rs2) {\n+  if (UseZbb) {\n+    Assembler::orn(Rd, Rs1, Rs2);\n+    return;\n+  }\n+\n+  notr(Rd, Rs2);\n+  orr(Rd, Rs1, Rd);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -766,0 +766,4 @@\n+  \/\/ logic with negate\n+  void andn(Register Rd, Register Rs1, Register Rs2);\n+  void orn(Register Rd, Register Rs1, Register Rs2);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3999,1 +3999,1 @@\n-    __ li(rtmp2, t);\n+    __ mv(rtmp2, t);\n@@ -4020,2 +4020,1 @@\n-    __ notr(rtmp2, b);\n-    __ andr(rtmp2, rtmp2, d);\n+    __ andn(rtmp2, d, b);\n@@ -4039,3 +4038,2 @@\n-    \/\/ rtmp2 = (c & (~d))\n-    __ notr(rtmp2, d);\n-    __ andr(rtmp2, rtmp2, c);\n+    \/\/ rtmp2 = c & (~d)\n+    __ andn(rtmp2, c, d);\n@@ -4071,2 +4069,1 @@\n-    __ notr(rtmp2, d);\n-    __ orr(rtmp1, b, rtmp2);\n+    __ orn(rtmp1, b, d);\n@@ -4195,1 +4192,1 @@\n-    __ li(rmask32, MASK_32);\n+    __ mv(rmask32, MASK_32);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"}]}