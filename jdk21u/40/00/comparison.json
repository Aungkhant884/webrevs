{"files":[{"patch":"@@ -2090,3 +2090,4 @@\n-          if (cha_monomorphic_target->holder() != compilation()->env()->Object_klass()) {\n-            ciInstanceKlass* holder = cha_monomorphic_target->holder();\n-            ciInstanceKlass* constraint = (holder->is_subtype_of(singleton) ? holder : singleton); \/\/ avoid upcasts\n+          ciInstanceKlass* holder = cha_monomorphic_target->holder();\n+          ciInstanceKlass* constraint = (holder->is_subtype_of(singleton) ? holder : singleton); \/\/ avoid upcasts\n+          if (holder != compilation()->env()->Object_klass() &&\n+              (!type_is_exact || receiver_klass->is_subtype_of(constraint))) {\n@@ -2105,1 +2106,1 @@\n-            cha_monomorphic_target = nullptr; \/\/ subtype check against Object is useless\n+            cha_monomorphic_target = nullptr;\n","filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8312909\n+ * @summary Test monomorphic interface call to with invalid receiver.\n+ * @modules java.base\/jdk.internal.vm.annotation\n+ * @compile TestInvokeinterfaceWithBadReceiverHelper.jasm\n+ * @run main\/bootclasspath\/othervm -XX:CompileCommand=compileonly,TestInvokeinterfaceWithBadReceiverHelper::test\n+ *                                 -Xcomp -XX:TieredStopAtLevel=1 TestInvokeinterfaceWithBadReceiver\n+ *\/\n+\n+import jdk.internal.vm.annotation.Stable;\n+\n+interface MyInterface {\n+    public String get();\n+}\n+\n+\/\/ Single implementor\n+class MyClass implements MyInterface {\n+    @Stable\n+    String field = \"42\";\n+\n+    public String get() {\n+        return field;\n+    }\n+}\n+\n+public class TestInvokeinterfaceWithBadReceiver {\n+\n+    public static void main(String[] args) {\n+        try {\n+            TestInvokeinterfaceWithBadReceiverHelper.test(new MyClass());\n+            throw new RuntimeException(\"No IncompatibleClassChangeError thrown!\");\n+        } catch (IncompatibleClassChangeError e) {\n+            \/\/ Expected\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestInvokeinterfaceWithBadReceiver.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+super public class TestInvokeinterfaceWithBadReceiverHelper\n+\tversion 51:0\n+{\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+  public static Method test:\"(LMyInterface;)Ljava\/lang\/String;\"\n+\tstack 1 locals 2\n+  {\n+\t\tldc\tString \"42\";\n+\t\tinvokeinterface\tInterfaceMethod MyInterface.get:\"()Ljava\/lang\/String;\",  1;\n+\t\tareturn;\n+  }\n+  \n+} \/\/ end Class TestInvokeinterfaceWithBadReceiverHelper\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestInvokeinterfaceWithBadReceiverHelper.jasm","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}