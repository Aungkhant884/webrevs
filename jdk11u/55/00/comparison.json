{"files":[{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8060126\n+ * @summary Make sure that the tzdata version matches between the run-time and tests.\n+ *\/\n+import java.time.zone.ZoneRules;\n+import java.time.zone.ZoneRulesProvider;\n+import java.util.NavigableMap;\n+\n+public class AssureTzdataVersion {\n+    public static void main(String... args) throws Exception {\n+        \/\/ get the tzdata version for the run-time\n+        NavigableMap<String, ZoneRules> map;\n+        map = ZoneRulesProvider.getVersions(\"America\/Los_Angeles\");\n+        if (map.isEmpty()) {\n+            throw new RuntimeException(\"Unknown runtime tzdata version\");\n+        }\n+        String runtime = map.lastEntry().getKey();\n+\n+        \/\/ get the tzdata version for regression tests\n+        String testdata = null;\n+        try (TextFileReader textreader = new TextFileReader(\"VERSION\")) {\n+            testdata = textreader.getLine().substring(\"tzdata\".length());\n+        }\n+        if (!testdata.equals(runtime)) {\n+            throw new RuntimeException(\"tzdata versions don't match: run-time=\" + runtime\n+                                       + \", tests=\" + testdata);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/TimeZone\/AssureTzdataVersion.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,246 @@\n+\/*\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6329116 6756569 6757131 6758988 6764308 6796489 6834474 6609737 6507067\n+ *      7039469 7090843 7103108 7103405 7158483 8008577 8059206 8064560 8072042\n+ *      8077685 8151876 8166875 8169191 8170316 8176044\n+ * @summary Make sure that timezone short display names are idenical to Olson's data.\n+ * @library \/java\/text\/testlib\n+ * @build Bug6329116 TextFileReader\n+ * @run main\/othervm -Djava.locale.providers=COMPAT,SPI Bug6329116\n+ *\/\n+\n+import java.io.*;\n+import java.text.*;\n+import java.util.*;\n+\n+public class Bug6329116 extends IntlTest {\n+\n+    static Locale[] locales = Locale.getAvailableLocales();\n+    static String[] timezones = TimeZone.getAvailableIDs();\n+\n+    public static void main(String[] args) throws IOException {\n+        if (bug6329116()) {\n+            throw new RuntimeException(\"At least one timezone display name is incorrect.\");\n+        }\n+    }\n+\n+    static boolean bug6329116() throws IOException {\n+        boolean err = false;\n+\n+        HashMap<String, String> aliasTable = new HashMap<>();\n+        HashSet<String> timezoneTable = new HashSet<>();\n+        for (String t : timezones) {\n+            timezoneTable.add(t);\n+        }\n+\n+        String line, key, value;\n+        StringTokenizer st;\n+\n+        try (TextFileReader in = new TextFileReader(\"aliases.txt\")) {\n+            while ((line = in.readLine()) != null) {\n+                st = new StringTokenizer(line);\n+                st.nextToken();\n+                key = st.nextToken();\n+                value = st.nextToken();\n+\n+                if (!value.equals(\"ROC\")) {\n+                    if (aliasTable.containsKey(key)) {\n+                        aliasTable.put(key, aliasTable.get(key) + \" \" + value);\n+                    } else {\n+                        aliasTable.put(key, value);\n+                    }\n+                }\n+            }\n+        }\n+\n+        try (TextFileReader in = new TextFileReader(\"displaynames.txt\")) {\n+            String timezoneID, expected, expected_DST, got;\n+            String[] aliases, tzs;\n+            TimeZone tz;\n+            while ((line = in.readLine()) != null) {\n+                st = new StringTokenizer(line);\n+                timezoneID = st.nextToken();\n+                expected = st.nextToken();\n+                if (st.hasMoreTokens()) {\n+                    expected_DST = st.nextToken();\n+                } else {\n+                    expected_DST = null;\n+                }\n+\n+                if (aliasTable.containsKey(timezoneID)) {\n+                    aliases = aliasTable.get(timezoneID).split(\" \");\n+                    tzs = new String[1 + aliases.length];\n+                    System.arraycopy(aliases, 0, tzs, 1, aliases.length);\n+                    aliasTable.remove(timezoneID);\n+                } else {\n+                    tzs = new String[1];\n+                }\n+                tzs[0] = timezoneID;\n+\n+                for (int j = 0; j < tzs.length; j++) {\n+                    tz = TimeZone.getTimeZone(tzs[j]);\n+\n+                    if (!tzs[j].equals(tz.getID())) {\n+                        System.err.println(tzs[j] + \" may not be a valid Timezone ID and \\\"\" + tz.getID() + \"\\\" was returned. Please check it.\");\n+                        err = true;\n+                    }\n+\n+                    timezoneTable.remove(tzs[j]);\n+\n+                    for (int i = 0; i < locales.length; i++) {\n+                        got = tz.getDisplayName(false, TimeZone.SHORT, locales[i]);\n+                        if (!expected.equals(got) &&\n+                            !expected.startsWith(got + \"\/\") &&\n+                            !expected.endsWith(\"\/\" + got)) {\n+                            if (useLocalzedShortDisplayName(tz, locales[i], got, false)) {\n+\/*\n+                                System.out.println(tzs[j] +\n+                                                   ((j > 0) ? \"(Alias of \\\"\" + tzs[0] + \"\\\")\" : \"\") +\n+                                                   \" seems to use a localized short display name\" +\n+                                                   \": original: \" + expected +\n+                                                   \": got: \" + got + \" for non-DST in \" +\n+                                                   locales[i] + \" locale.\");\n+*\/\n+                            } else {\n+                                System.err.println(tzs[j] +\n+                                                   ((j > 0) ? \"(Alias of \\\"\" + tzs[0] + \"\\\")\" : \"\") +\n+                                                   \": expected: \" + expected +\n+                                                   \": got: \" + got + \" for non-DST in \" +\n+                                                   locales[i] + \" locale.\");\n+                                err = true;\n+                            }\n+                        }\n+\n+                        got = tz.getDisplayName(true, TimeZone.SHORT, locales[i]);\n+                        if (expected_DST != null) {\n+                            if (!expected_DST.equals(got) &&\n+                                !expected_DST.startsWith(got + \"\/\") &&\n+                                !expected_DST.endsWith(\"\/\" + got)) {\n+                                if (tzs[j].equals(\"Europe\/London\") &&\n+                                    locales[i].equals(new Locale(\"en\", \"IE\"))) {\n+                                    continue;\n+                                } else if (useLocalzedShortDisplayName(tz, locales[i], got, true)) {\n+\/*\n+                                System.out.println(tzs[j] +\n+                                    ((j > 0) ? \"(Alias of \\\"\" + tzs[0] + \"\\\")\" : \"\") +\n+                                    \" seems to use a localized short display name\" +\n+                                    \": original: \" + expected_DST +\n+                                    \": got: \" + got + \" for DST in \" +\n+                                    locales[i] + \" locale.\");\n+*\/\n+                                    continue;\n+                                }\n+                                System.err.println(tzs[j] +\n+                                                   ((j > 0) ? \"(Alias of \\\"\" + tzs[0] + \"\\\")\" : \"\") +\n+                                                   \": expected: \" + expected_DST +\n+                                                   \": got: \" + got + \" for DST in \" +\n+                                                   locales[i] + \" locale.\");\n+                                err = true;\n+                            }\n+                        } else {\n+                            \/\/ Some timezones don't have DST display names in Olson's data,\n+                            \/\/ and we created them ourselves based on non-DST display names\n+                            \/\/ to prepare potential use in the future.\n+                            \/\/ Because there's no expected name, we don't judge if these\n+                            \/\/ DST display names are correct but just compare them with\n+                            \/\/ non-DST diplay names for checking with our eyes .\n+                            if (!expected.equals(got) &&\n+                                !expected.startsWith(got + \"\/\") &&\n+                                !expected.endsWith(\"\/\" + got)) {\n+\/*\n+                                System.out.println(\"## \" + tzs[j] +\n+                                                   ((j > 0) ? \"(Alias of \\\"\" + tzs[0] + \"\\\")\" : \"\") +\n+                                                   \": expected: \" + expected +\n+                                                   \": got: \" + got + \" for DST in \" +\n+                                                   locales[i] + \" locale.\");\n+*\/\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (!timezoneTable.isEmpty()) {\n+            System.out.println(\"# Timezone(s) valid in JRE but untested in this test program:\");\n+            Iterator<String> it = timezoneTable.iterator();\n+            while (it.hasNext()) {\n+                System.out.println(it.next());\n+            }\n+            System.out.println();\n+        }\n+\n+        if (!aliasTable.isEmpty()) {\n+            System.out.println(\"# Timezone(s) exists in Olson's data as Link but unused in JRE:\");\n+            for (Map.Entry<String, String> entry : aliasTable.entrySet()) {\n+                System.out.println(entry);\n+            }\n+        }\n+\n+        return err;\n+    }\n+\n+    static boolean useLocalzedShortDisplayName(TimeZone tz,\n+                                               Locale locale,\n+                                               String got,\n+                                               boolean inDST) {\n+        if (locale.getLanguage().equals(\"de\")) {\n+            String name = tz.getDisplayName(inDST, TimeZone.LONG, locale);\n+            if (inDST) {\n+                if ((\"Mitteleurop\\u00e4ische Sommerzeit\".equals(name) && \"MESZ\".equals(got)) ||\n+                    (\"Osteurop\\u00e4ische Sommerzeit\".equals(name) && \"OESZ\".equals(got)) ||\n+                    (\"Westeurop\\u00e4ische Sommerzeit\".equals(name) && \"WESZ\".equals(got))) {\n+                    return true;\n+                }\n+            } else {\n+                if ((\"Mitteleurop\\u00e4ische Zeit\".equals(name) && \"MEZ\".equals(got)) ||\n+                    (\"Osteurop\\u00e4ische Zeit\".equals(name) && \"OEZ\".equals(got)) ||\n+                    (\"Westeurop\\u00e4ische Zeit\".equals(name) && \"WEZ\".equals(got))) {\n+                    return true;\n+                }\n+            }\n+        } else if (locale.getLanguage().equals(\"zh\") &&\n+            (locale.getCountry().equals(\"TW\") || locale.getCountry().equals(\"HK\"))) {\n+            String name = tz.getDisplayName(inDST, TimeZone.LONG, locale);\n+            if (inDST) {\n+                if ((\"\\u53f0\\u7063\\u590f\\u4ee4\\u6642\\u9593\".equals(name) && \"TDT\".equals(got))) {\n+                    return true;\n+                }\n+            } else {\n+                if ((\"\\u53f0\\u7063\\u6a19\\u6e96\\u6642\\u9593\".equals(name) && \"TST\".equals(got))) {\n+                    return true;\n+                }\n+            }\n+        }\n+        \/\/ If we get a TimeZone with GMT+hh:mm format, we can ignore the offset value\n+        if (tz.getDisplayName(Locale.ENGLISH).startsWith(\"GMT+\") || tz.getDisplayName(Locale.ENGLISH).startsWith(\"GMT-\")) {\n+            return tz.getDisplayName().substring(0, 3).equals(got.substring(0, 3));\n+        }\n+\n+        return false;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/util\/TimeZone\/Bug6329116.java","additions":246,"deletions":0,"binary":false,"changes":246,"status":"added"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.*;\n+\n+\/\/ This class is public so that tools can invoke.\n+public class TextFileReader implements AutoCloseable {\n+    private BufferedReader reader;\n+    private int lineNo;\n+\n+    public TextFileReader(String filename) throws IOException {\n+        this(new File(new File(System.getProperty(\"test.src\", \".\"),\n+                               \"TimeZoneData\"),\n+                      filename));\n+    }\n+\n+    public TextFileReader(File file) throws IOException {\n+        InputStream is = new FileInputStream(file);\n+        reader = new BufferedReader(new InputStreamReader(is, \"utf-8\"));\n+    }\n+\n+    public String readLine() throws IOException {\n+        return getLine();\n+    }\n+\n+    public String getLine() throws IOException {\n+        checkReader();\n+\n+        String line;\n+        while ((line = reader.readLine()) != null) {\n+            lineNo++;\n+            line = line.trim();\n+            \/\/ Skip blank and comment lines.\n+            if (line.length() == 0) {\n+                continue;\n+            }\n+            int x = line.indexOf('#');\n+            if (x == 0) {\n+                    continue;\n+            }\n+            if (x > 0) {\n+                line = line.substring(0, x).trim();\n+            }\n+            break;\n+        }\n+        return line;\n+    }\n+\n+    public String getRawLine() throws IOException {\n+        checkReader();\n+\n+        String line = reader.readLine();\n+        if (line != null) {\n+            lineNo++;\n+        }\n+        return line;\n+    }\n+\n+    private void checkReader() throws IOException {\n+        if (reader == null) {\n+            throw new IOException(\"This TextFileReader has been closed.\");\n+        }\n+    }\n+\n+    @Override\n+    public void close() throws IOException {\n+        reader.close();\n+        reader = null;\n+    }\n+\n+    int getLineNo() {\n+        return lineNo;\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/TimeZone\/TextFileReader.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+tzdata2022a\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/VERSION","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,213 @@\n+Link Africa\/Abidjan Africa\/Accra\t# Ghana\n+Link Africa\/Abidjan Africa\/Bamako\t# Mali\n+Link Africa\/Abidjan Africa\/Banjul\t# The Gambia\n+Link Africa\/Abidjan Africa\/Conakry\t# Guinea\n+Link Africa\/Abidjan Africa\/Dakar\t# Senegal\n+Link Africa\/Abidjan Africa\/Freetown\t# Sierra Leone\n+Link Africa\/Abidjan Africa\/Lome\t\t# Togo\n+Link Africa\/Abidjan Africa\/Nouakchott\t# Mauritania\n+Link Africa\/Abidjan Africa\/Ouagadougou\t# Burkina Faso\n+Link Africa\/Abidjan Atlantic\/St_Helena\t# St Helena\n+Link Africa\/Nairobi Africa\/Addis_Ababa\t # Ethiopia\n+Link Africa\/Nairobi Africa\/Asmara\t # Eritrea\n+Link Africa\/Nairobi Africa\/Dar_es_Salaam # Tanzania\n+Link Africa\/Nairobi Africa\/Djibouti\n+Link Africa\/Nairobi Africa\/Kampala\t # Uganda\n+Link Africa\/Nairobi Africa\/Mogadishu\t # Somalia\n+Link Africa\/Nairobi Indian\/Antananarivo\t # Madagascar\n+Link Africa\/Nairobi Indian\/Comoro\n+Link Africa\/Nairobi Indian\/Mayotte\n+Link Africa\/Maputo Africa\/Blantyre\t# Malawi\n+Link Africa\/Maputo Africa\/Bujumbura\t# Burundi\n+Link Africa\/Maputo Africa\/Gaborone\t# Botswana\n+Link Africa\/Maputo Africa\/Harare\t# Zimbabwe\n+Link Africa\/Maputo Africa\/Kigali\t# Rwanda\n+Link Africa\/Maputo Africa\/Lubumbashi\t# E Dem. Rep. of Congo\n+Link Africa\/Maputo Africa\/Lusaka\t# Zambia\n+Link Africa\/Lagos Africa\/Bangui\t\t# Central African Republic\n+Link Africa\/Lagos Africa\/Brazzaville\t# Rep. of the Congo\n+Link Africa\/Lagos Africa\/Douala\t\t# Cameroon\n+Link Africa\/Lagos Africa\/Kinshasa\t# Dem. Rep. of the Congo (west)\n+Link Africa\/Lagos Africa\/Libreville\t# Gabon\n+Link Africa\/Lagos Africa\/Luanda\t\t# Angola\n+Link Africa\/Lagos Africa\/Malabo\t\t# Equatorial Guinea\n+Link Africa\/Lagos Africa\/Niamey\t\t# Niger\n+Link Africa\/Lagos Africa\/Porto-Novo\t# Benin\n+Link Africa\/Johannesburg Africa\/Maseru\t# Lesotho\n+Link Africa\/Johannesburg Africa\/Mbabane\t# Eswatini\n+Link\tAsia\/Nicosia\tEurope\/Nicosia\n+Link Asia\/Qatar Asia\/Bahrain\n+Link Asia\/Riyadh Antarctica\/Syowa\n+Link Asia\/Riyadh Asia\/Aden\t# Yemen\n+Link Asia\/Riyadh Asia\/Kuwait\n+Link Asia\/Bangkok Asia\/Phnom_Penh\t# Cambodia\n+Link Asia\/Bangkok Asia\/Vientiane\t# Laos\n+Link Asia\/Dubai Asia\/Muscat\t# Oman\n+Link Pacific\/Guam Pacific\/Saipan # N Mariana Is\n+Link Pacific\/Auckland Antarctica\/McMurdo\n+Link Pacific\/Port_Moresby Antarctica\/DumontDUrville\n+Link Pacific\/Pago_Pago Pacific\/Midway # in US minor outlying islands\n+Link\tEurope\/London\tEurope\/Jersey\n+Link\tEurope\/London\tEurope\/Guernsey\n+Link\tEurope\/London\tEurope\/Isle_of_Man\n+Link\tEurope\/Helsinki\tEurope\/Mariehamn\n+Link\tEurope\/Zurich\tEurope\/Busingen\n+Link\tEurope\/Rome\tEurope\/Vatican\n+Link\tEurope\/Rome\tEurope\/San_Marino\n+Link Europe\/Zurich Europe\/Vaduz\n+Link\tEurope\/Oslo\tArctic\/Longyearbyen\n+Link Europe\/Belgrade Europe\/Ljubljana\t# Slovenia\n+Link Europe\/Belgrade Europe\/Podgorica\t# Montenegro\n+Link Europe\/Belgrade Europe\/Sarajevo\t# Bosnia and Herzegovina\n+Link Europe\/Belgrade Europe\/Skopje\t# North Macedonia\n+Link Europe\/Belgrade Europe\/Zagreb\t# Croatia\n+Link Europe\/Prague Europe\/Bratislava\n+Link\tEurope\/Istanbul\tAsia\/Istanbul\t# Istanbul is in both continents.\n+Link America\/Phoenix America\/Creston\n+Link America\/Toronto America\/Nassau\n+Link America\/Panama America\/Atikokan\n+Link America\/Panama America\/Cayman\n+Link America\/Puerto_Rico America\/Anguilla\n+Link America\/Puerto_Rico America\/Antigua\n+Link America\/Puerto_Rico America\/Aruba\n+Link America\/Puerto_Rico America\/Curacao\n+Link America\/Puerto_Rico America\/Blanc-Sablon\t# Quebec (Lower North Shore)\n+Link America\/Puerto_Rico America\/Dominica\n+Link America\/Puerto_Rico America\/Grenada\n+Link America\/Puerto_Rico America\/Guadeloupe\n+Link America\/Puerto_Rico America\/Kralendijk\t# Caribbean Netherlands\n+Link America\/Puerto_Rico America\/Lower_Princes\t# Sint Maarten\n+Link America\/Puerto_Rico America\/Marigot\t# St Martin (French part)\n+Link America\/Puerto_Rico America\/Montserrat\n+Link America\/Puerto_Rico America\/Port_of_Spain\t# Trinidad & Tobago\n+Link America\/Puerto_Rico America\/St_Barthelemy\t# St Barthélemy\n+Link America\/Puerto_Rico America\/St_Kitts\t# St Kitts & Nevis\n+Link America\/Puerto_Rico America\/St_Lucia\n+Link America\/Puerto_Rico America\/St_Thomas\t# Virgin Islands (US)\n+Link America\/Puerto_Rico America\/St_Vincent\n+Link America\/Puerto_Rico America\/Tortola\t# Virgin Islands (UK)\n+Link\tAsia\/Riyadh87\tMideast\/Riyadh87\n+Link\tAsia\/Riyadh88\tMideast\/Riyadh88\n+Link\tAsia\/Riyadh89\tMideast\/Riyadh89\n+Link\tAfrica\/Nairobi\t\tAfrica\/Asmera\n+Link\tAfrica\/Abidjan\t\tAfrica\/Timbuktu\n+Link\tAmerica\/Argentina\/Catamarca\tAmerica\/Argentina\/ComodRivadavia\n+Link\tAmerica\/Adak\t\tAmerica\/Atka\n+Link\tAmerica\/Argentina\/Buenos_Aires\tAmerica\/Buenos_Aires\n+Link\tAmerica\/Argentina\/Catamarca\tAmerica\/Catamarca\n+Link\tAmerica\/Panama\t\tAmerica\/Coral_Harbour\n+Link\tAmerica\/Argentina\/Cordoba\tAmerica\/Cordoba\n+Link\tAmerica\/Tijuana\t\tAmerica\/Ensenada\n+Link\tAmerica\/Indiana\/Indianapolis\tAmerica\/Fort_Wayne\n+Link\tAmerica\/Nuuk\t\tAmerica\/Godthab\n+Link\tAmerica\/Indiana\/Indianapolis\tAmerica\/Indianapolis\n+Link\tAmerica\/Argentina\/Jujuy\tAmerica\/Jujuy\n+Link\tAmerica\/Indiana\/Knox\tAmerica\/Knox_IN\n+Link\tAmerica\/Kentucky\/Louisville\tAmerica\/Louisville\n+Link\tAmerica\/Argentina\/Mendoza\tAmerica\/Mendoza\n+Link\tAmerica\/Toronto\t\tAmerica\/Montreal\n+Link\tAmerica\/Rio_Branco\tAmerica\/Porto_Acre\n+Link\tAmerica\/Argentina\/Cordoba\tAmerica\/Rosario\n+Link\tAmerica\/Tijuana\t\tAmerica\/Santa_Isabel\n+Link\tAmerica\/Denver\t\tAmerica\/Shiprock\n+Link\tAmerica\/Puerto_Rico\tAmerica\/Virgin\n+Link\tPacific\/Auckland\tAntarctica\/South_Pole\n+Link\tAsia\/Ashgabat\t\tAsia\/Ashkhabad\n+Link\tAsia\/Kolkata\t\tAsia\/Calcutta\n+Link\tAsia\/Shanghai\t\tAsia\/Chongqing\n+Link\tAsia\/Shanghai\t\tAsia\/Chungking\n+Link\tAsia\/Dhaka\t\tAsia\/Dacca\n+Link\tAsia\/Shanghai\t\tAsia\/Harbin\n+Link\tAsia\/Urumqi\t\tAsia\/Kashgar\n+Link\tAsia\/Kathmandu\t\tAsia\/Katmandu\n+Link\tAsia\/Macau\t\tAsia\/Macao\n+Link\tAsia\/Yangon\t\tAsia\/Rangoon\n+Link\tAsia\/Ho_Chi_Minh\tAsia\/Saigon\n+Link\tAsia\/Jerusalem\t\tAsia\/Tel_Aviv\n+Link\tAsia\/Thimphu\t\tAsia\/Thimbu\n+Link\tAsia\/Makassar\t\tAsia\/Ujung_Pandang\n+Link\tAsia\/Ulaanbaatar\tAsia\/Ulan_Bator\n+Link\tAtlantic\/Faroe\t\tAtlantic\/Faeroe\n+Link\tEurope\/Oslo\t\tAtlantic\/Jan_Mayen\n+Link\tAustralia\/Sydney\tAustralia\/ACT\n+Link\tAustralia\/Sydney\tAustralia\/Canberra\n+Link\tAustralia\/Hobart\tAustralia\/Currie\n+Link\tAustralia\/Lord_Howe\tAustralia\/LHI\n+Link\tAustralia\/Sydney\tAustralia\/NSW\n+Link\tAustralia\/Darwin\tAustralia\/North\n+Link\tAustralia\/Brisbane\tAustralia\/Queensland\n+Link\tAustralia\/Adelaide\tAustralia\/South\n+Link\tAustralia\/Hobart\tAustralia\/Tasmania\n+Link\tAustralia\/Melbourne\tAustralia\/Victoria\n+Link\tAustralia\/Perth\t\tAustralia\/West\n+Link\tAustralia\/Broken_Hill\tAustralia\/Yancowinna\n+Link\tAmerica\/Rio_Branco\tBrazil\/Acre\n+Link\tAmerica\/Noronha\t\tBrazil\/DeNoronha\n+Link\tAmerica\/Sao_Paulo\tBrazil\/East\n+Link\tAmerica\/Manaus\t\tBrazil\/West\n+Link\tAmerica\/Halifax\t\tCanada\/Atlantic\n+Link\tAmerica\/Winnipeg\tCanada\/Central\n+Link\tAmerica\/Toronto\t\tCanada\/Eastern\n+Link\tAmerica\/Edmonton\tCanada\/Mountain\n+Link\tAmerica\/St_Johns\tCanada\/Newfoundland\n+Link\tAmerica\/Vancouver\tCanada\/Pacific\n+Link\tAmerica\/Regina\t\tCanada\/Saskatchewan\n+Link\tAmerica\/Whitehorse\tCanada\/Yukon\n+Link\tAmerica\/Santiago\tChile\/Continental\n+Link\tPacific\/Easter\t\tChile\/EasterIsland\n+Link\tAmerica\/Havana\t\tCuba\n+Link\tAfrica\/Cairo\t\tEgypt\n+Link\tEurope\/Dublin\t\tEire\n+Link\tEtc\/UTC\t\t\tEtc\/UCT\n+Link\tEurope\/London\t\tEurope\/Belfast\n+Link\tEurope\/Chisinau\t\tEurope\/Tiraspol\n+Link\tEurope\/London\t\tGB\n+Link\tEurope\/London\t\tGB-Eire\n+Link\tEtc\/GMT\t\t\tGMT+0\n+Link\tEtc\/GMT\t\t\tGMT-0\n+Link\tEtc\/GMT\t\t\tGMT0\n+Link\tEtc\/GMT\t\t\tGreenwich\n+Link\tAsia\/Hong_Kong\t\tHongkong\n+Link\tAtlantic\/Reykjavik\tIceland\n+Link\tAsia\/Tehran\t\tIran\n+Link\tAsia\/Jerusalem\t\tIsrael\n+Link\tAmerica\/Jamaica\t\tJamaica\n+Link\tAsia\/Tokyo\t\tJapan\n+Link\tPacific\/Kwajalein\tKwajalein\n+Link\tAfrica\/Tripoli\t\tLibya\n+Link\tAmerica\/Tijuana\t\tMexico\/BajaNorte\n+Link\tAmerica\/Mazatlan\tMexico\/BajaSur\n+Link\tAmerica\/Mexico_City\tMexico\/General\n+Link\tPacific\/Auckland\tNZ\n+Link\tPacific\/Chatham\t\tNZ-CHAT\n+Link\tAmerica\/Denver\t\tNavajo\n+Link\tAsia\/Shanghai\t\tPRC\n+Link\tPacific\/Kanton\t\tPacific\/Enderbury\n+Link\tPacific\/Honolulu\tPacific\/Johnston\n+Link\tPacific\/Pohnpei\t\tPacific\/Ponape\n+Link\tPacific\/Pago_Pago\tPacific\/Samoa\n+Link\tPacific\/Chuuk\t\tPacific\/Truk\n+Link\tPacific\/Chuuk\t\tPacific\/Yap\n+Link\tEurope\/Warsaw\t\tPoland\n+Link\tEurope\/Lisbon\t\tPortugal\n+Link\tAsia\/Taipei\t\tROC\n+Link\tAsia\/Seoul\t\tROK\n+Link\tAsia\/Singapore\t\tSingapore\n+Link\tEurope\/Istanbul\t\tTurkey\n+Link\tEtc\/UTC\t\t\tUCT\n+Link\tAmerica\/Anchorage\tUS\/Alaska\n+Link\tAmerica\/Adak\t\tUS\/Aleutian\n+Link\tAmerica\/Phoenix\t\tUS\/Arizona\n+Link\tAmerica\/Chicago\t\tUS\/Central\n+Link\tAmerica\/Indiana\/Indianapolis\tUS\/East-Indiana\n+Link\tAmerica\/New_York\tUS\/Eastern\n+Link\tPacific\/Honolulu\tUS\/Hawaii\n+Link\tAmerica\/Indiana\/Knox\tUS\/Indiana-Starke\n+Link\tAmerica\/Detroit\t\tUS\/Michigan\n+Link\tAmerica\/Denver\t\tUS\/Mountain\n+Link\tAmerica\/Los_Angeles\tUS\/Pacific\n+Link\tPacific\/Pago_Pago\tUS\/Samoa\n+Link\tEtc\/UTC\t\t\tUTC\n+Link\tEtc\/UTC\t\t\tUniversal\n+Link\tEurope\/Moscow\t\tW-SU\n+Link\tEtc\/UTC\t\t\tZulu\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/aliases.txt","additions":213,"deletions":0,"binary":false,"changes":213,"status":"added"},{"patch":"@@ -0,0 +1,189 @@\n+Africa\/Abidjan GMT\n+Africa\/Algiers CET\n+Africa\/Bissau GMT\n+Africa\/Cairo EET EEST\n+Africa\/Ceuta CET CEST\n+Africa\/Johannesburg SAST\n+Africa\/Juba CAT\n+Africa\/Khartoum CAT\n+Africa\/Lagos WAT\n+Africa\/Maputo CAT\n+Africa\/Monrovia GMT\n+Africa\/Nairobi EAT\n+Africa\/Ndjamena WAT\n+Africa\/Sao_Tome GMT\n+Africa\/Tripoli EET\n+Africa\/Tunis CET CEST\n+Africa\/Windhoek CAT WAT\n+America\/Adak HST HDT\n+America\/Anchorage AKST AKDT\n+America\/Bahia_Banderas CST CDT\n+America\/Barbados AST ADT\n+America\/Belize CST CDT\n+America\/Boise MST MDT\n+America\/Cambridge_Bay MST MDT\n+America\/Cancun EST\n+America\/Chicago CST CDT\n+America\/Chihuahua MST MDT\n+America\/Costa_Rica CST CDT\n+America\/Danmarkshavn GMT\n+America\/Dawson MST\n+America\/Dawson_Creek MST\n+America\/Denver MST MDT\n+America\/Detroit EST EDT\n+America\/Edmonton MST MDT\n+America\/El_Salvador CST CDT\n+America\/Fort_Nelson MST\n+America\/Glace_Bay AST ADT\n+America\/Goose_Bay AST ADT\n+America\/Grand_Turk EST EDT\n+America\/Guatemala CST CDT\n+America\/Halifax AST ADT\n+America\/Havana CST CDT\n+America\/Hermosillo MST\n+America\/Indiana\/Indianapolis EST EDT\n+America\/Indiana\/Knox CST CDT\n+America\/Indiana\/Marengo EST EDT\n+America\/Indiana\/Petersburg EST EDT\n+America\/Indiana\/Tell_City CST CDT\n+America\/Indiana\/Vevay EST EDT\n+America\/Indiana\/Vincennes EST EDT\n+America\/Indiana\/Winamac EST EDT\n+America\/Inuvik MST MDT\n+America\/Iqaluit EST EDT\n+America\/Jamaica EST\n+America\/Juneau AKST AKDT\n+America\/Kentucky\/Louisville EST EDT\n+America\/Kentucky\/Monticello EST EDT\n+America\/Los_Angeles PST PDT\n+America\/Managua CST CDT\n+America\/Martinique AST\n+America\/Matamoros CST CDT\n+America\/Mazatlan MST MDT\n+America\/Menominee CST CDT\n+America\/Merida CST CDT\n+America\/Metlakatla AKST AKDT\n+America\/Mexico_City CST CDT\n+America\/Moncton AST ADT\n+America\/Monterrey CST CDT\n+America\/New_York EST EDT\n+America\/Nipigon EST EDT\n+America\/Nome AKST AKDT\n+America\/North_Dakota\/Beulah CST CDT\n+America\/North_Dakota\/Center CST CDT\n+America\/North_Dakota\/New_Salem CST CDT\n+America\/Ojinaga MST MDT\n+America\/Panama EST\n+America\/Pangnirtung EST EDT\n+America\/Phoenix MST\n+America\/Port-au-Prince EST EDT\n+America\/Puerto_Rico AST\n+America\/Rainy_River CST CDT\n+America\/Rankin_Inlet CST CDT\n+America\/Regina CST\n+America\/Resolute CST CDT\n+America\/Santo_Domingo AST\n+America\/Sitka AKST AKDT\n+America\/St_Johns NST NDT\n+America\/Swift_Current CST\n+America\/Tegucigalpa CST CDT\n+America\/Thule AST ADT\n+America\/Thunder_Bay EST EDT\n+America\/Tijuana PST PDT\n+America\/Toronto EST EDT\n+America\/Vancouver PST PDT\n+America\/Whitehorse MST\n+America\/Winnipeg CST CDT\n+America\/Yakutat AKST AKDT\n+America\/Yellowknife MST MDT\n+Antarctica\/Macquarie AEST AEDT\n+Antarctica\/Troll UTC\n+Asia\/Amman EET EEST\n+Asia\/Beirut EET EEST\n+Asia\/Damascus EET EEST\n+Asia\/Famagusta EET EEST\n+Asia\/Gaza EET EEST\n+Asia\/Hebron EET EEST\n+Asia\/Hong_Kong HKT HKST\n+Asia\/Jakarta WIB\n+Asia\/Jayapura WIT\n+Asia\/Jerusalem IST IDT\n+Asia\/Karachi PKT PKST\n+Asia\/Kolkata IST\n+Asia\/Macau CST CDT\n+Asia\/Makassar WITA\n+Asia\/Manila PST PDT\n+Asia\/Nicosia EET EEST\n+Asia\/Pontianak WIB\n+Asia\/Pyongyang KST\n+Asia\/Seoul KST KDT\n+Asia\/Shanghai CST CDT\n+Asia\/Taipei CST CDT\n+Asia\/Tokyo JST JDT\n+Atlantic\/Bermuda AST ADT\n+Atlantic\/Canary WET WEST\n+Atlantic\/Faroe WET WEST\n+Atlantic\/Madeira WET WEST\n+Atlantic\/Reykjavik GMT\n+Australia\/Adelaide ACST ACDT\n+Australia\/Brisbane AEST AEDT\n+Australia\/Broken_Hill ACST ACDT\n+Australia\/Darwin ACST ACDT\n+Australia\/Hobart AEST AEDT\n+Australia\/Lindeman AEST AEDT\n+Australia\/Melbourne AEST AEDT\n+Australia\/Perth AWST AWDT\n+Australia\/Sydney AEST AEDT\n+CET CET CEST\n+CST6CDT CST CDT\n+EET EET EEST\n+EST EST\n+EST5EDT EST EDT\n+Europe\/Amsterdam CET CEST\n+Europe\/Andorra CET CEST\n+Europe\/Athens EET EEST\n+Europe\/Belgrade CET CEST\n+Europe\/Berlin CET CEST\n+Europe\/Brussels CET CEST\n+Europe\/Bucharest EET EEST\n+Europe\/Budapest CET CEST\n+Europe\/Chisinau EET EEST\n+Europe\/Copenhagen CET CEST\n+Europe\/Dublin IST\/GMT IST\/GMT\n+Europe\/Gibraltar CET CEST\n+Europe\/Helsinki EET EEST\n+Europe\/Kaliningrad EET\n+Europe\/Kiev EET EEST\n+Europe\/Lisbon WET WEST\n+Europe\/London GMT\/BST GMT\/BST\n+Europe\/Luxembourg CET CEST\n+Europe\/Madrid CET CEST\n+Europe\/Malta CET CEST\n+Europe\/Monaco CET CEST\n+Europe\/Moscow MSK\n+Europe\/Oslo CET CEST\n+Europe\/Paris CET CEST\n+Europe\/Prague CET CEST\n+Europe\/Riga EET EEST\n+Europe\/Rome CET CEST\n+Europe\/Simferopol MSK\n+Europe\/Sofia EET EEST\n+Europe\/Stockholm CET CEST\n+Europe\/Tallinn EET EEST\n+Europe\/Tirane CET CEST\n+Europe\/Uzhgorod EET EEST\n+Europe\/Vienna CET CEST\n+Europe\/Vilnius EET EEST\n+Europe\/Warsaw CET CEST\n+Europe\/Zaporozhye EET EEST\n+Europe\/Zurich CET CEST\n+HST HST\n+MET MET MEST\n+MST MST\n+MST7MDT MST MDT\n+PST8PDT PST PDT\n+Pacific\/Auckland NZST NZDT\n+Pacific\/Guam ChST\n+Pacific\/Honolulu HST\n+Pacific\/Pago_Pago SST\n+WET WET WEST\n","filename":"test\/jdk\/java\/util\/TimeZone\/TimeZoneData\/displaynames.txt","additions":189,"deletions":0,"binary":false,"changes":189,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+#\n+# Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#\n+# Compares two year* test data files\n+# Typical usage:\n+#     perl CompareYearData.pl ..\/..\/TimeZoneData\/year2008 year2008\n+#\n+\n+%oldData = &readData($ARGV[0]);\n+%newData = &readData($ARGV[1]);\n+\n+foreach $key (sort(keys(%oldData))) {\n+  if (defined($newData{$key})) {\n+    if ($oldData{$key} ne $newData{$key}) {\n+      print \"Changed:\\n\";\n+      print \"$oldData{$key}\";\n+      print \"---\\n\";\n+      print \"$newData{$key}\";\n+    }\n+    delete $newData{$key};\n+  } else {\n+    print \"Deleted:\\n\";\n+    print \"$oldData{$key}\";\n+  }\n+}\n+foreach $key (sort(keys(%newData))) {\n+  print \"Added:\\n\";\n+  print \"$newData{$key}\";\n+}\n+\n+sub readData {\n+  local($file) = @_;\n+\n+  open(F, $file) || die \"Can't open $file\\n\";\n+  my %data = ();\n+  my $line = 0;\n+  my $id = \"\";\n+\n+  while (<F>) {\n+    $line++;\n+    s\/^\\s*\\d+ \/\/;\n+    if (\/tzdata\\d+\/) {\n+      $data{\" version\"} = $_;\n+      next;\n+    }\n+    if (\/(\\s*#.*$)\/) {\n+      $data{\" comments\"} .= $_;\n+      next;\n+    }\n+    if (\/^(Zone|Rule)\/) {\n+      die \"No id at line: $line\\n\" if ($id eq \"\");\n+      $data{$id} .= $_;\n+    } elsif (\/^(\\S+)\\s+\\S+\/) {\n+      $id = $1;\n+      $data{$id} = $_;\n+      $flag = 1;\n+    } else {\n+      die \"Unknown format at line: $line: $file\\n\";\n+    }\n+  }\n+  close(F);\n+  return %data;\n+}\n","filename":"test\/jdk\/java\/util\/TimeZone\/tools\/share\/CompareYearData.pl","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,58 @@\n+#\n+# Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#\n+#\n+# This makefile is used to update the time zone tests data: aliases.txt displaynames.txt\n+# and VERSION. After switching to new build system in JDK8 the following make\n+# command should be used for test data updates:\n+#     make JDK_HOME=<path to built JDK with latest tzdata>\n+#     make install\n+#\n+\n+TZDATA = ..\/..\/..\/..\/..\/..\/..\/src\/java.base\/share\/data\/tzdata\n+TZDATA_VER = `grep '^tzdata' $(TZDATA)\/VERSION`\n+TZNAME = africa antarctica asia australasia europe northamerica \\\n+\tsolar87 solar88 solar89 southamerica \\\n+\tbackward\n+TZFILES = $(addprefix $(TZDATA)\/, $(TZNAME))\n+ALIASLIST = aliases.txt\n+DISPLAYNAMES = displaynames.txt\n+\n+all:\t$(DISPLAYNAMES) VERSION $(ALIASLIST)\n+\n+$(DISPLAYNAMES): $(TZFILES) makeZoneData.pl\n+\t(cat $(TZFILES) | perl makeZoneData.pl -v -V \"$(TZDATA_VER)\") 2>errors\n+\n+VERSION: $(TZDATA)\/VERSION\n+\techo \"$(TZDATA_VER)\" > VERSION\n+\n+$(ALIASLIST): $(TZFILES)\n+\trm -f $(ALIASLIST)\n+\tgrep -h \"^Link\" $(TZFILES) >> $(ALIASLIST)\n+\n+clean:\n+\trm -f $(DISPLAYNAMES) errors year???? VERSION $(ALIASLIST)\n+\n+install:\n+\tcp $(ALIASLIST) $(DISPLAYNAMES) VERSION ..\/..\/TimeZoneData\/\n","filename":"test\/jdk\/java\/util\/TimeZone\/tools\/share\/Makefile","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,283 @@\n+#\n+# Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#\n+#\n+#\n+# Perl script to generate ZoneData from Olson public time zone data.\n+#\n+# For J2SE before JDK1.3, see ..\/..\/README how to update TimeZone.java \n+# static TimeZoneData.\n+# For J2SE since JDK1.4, this script is used to generate testdata(reference)\n+# for ZoneData.sh which is one of TimeZone Regression test.\n+\n+$continue = 0;\n+\n+# verbose flag\n+$verbose = 0;\n+\n+# version of Olson's public zone information (e.g. \"tzdata2000g\")\n+$versionName = \"unknown\";\n+\n+# Number of testdata files.\n+$count = 5;\n+\n+# Display name datafile\n+$displayNameFile = \"displaynames.txt\";\n+\n+# time zone IDs to be generated. If it's empty, then generate all time\n+# zone in the tzdata files.\n+@javatzids = ();\n+\n+#\n+# Parses command-line options\n+#\n+while ($#ARGV >= 0) {\n+    if ($ARGV[0] =~ \/^-v\/) {\n+\t$verbose = 1;\n+    } elsif ($ARGV[0] =~ \/^-V\/) {\n+\t$versionName = $ARGV[1];\n+\tshift(@ARGV);\n+    } else {\n+\t@javatzids = &readIDs($ARGV[0]);\n+\tlast;\n+    }\n+    shift(@ARGV);\n+}\n+\n+# Beginning year of testdata\n+($sec, $min, $hour, $mday, $mon, $year, $wday, $ydat, $isdst) = gmtime();\n+$baseYear = $year+1900;\n+\n+if ($verbose == 1) {\n+    print STDERR \"baseYear : $baseYear\\n\";\n+    print STDERR \"versionName : $versionName\\n\";\n+}\n+\n+# Open display name datafile\n+open (DNFD, \">$displayNameFile\") || die (\"$displayNameFile : open error.\\n\");\n+\n+while(<STDIN>) {\n+    chop;\n+    if (\/^\\#\/) { # skip comment line\n+\tnext;\n+    }\n+    @item = (\"foo\");\n+\n+    # Zone\tNAME\t\tGMTOFF\tRULES\tFORMAT\t[UNTIL]\n+    if ($continue == 1) {\n+\ts\/\\#.*\/\/; # chop trailing comments\n+\ts\/\\s+$\/\/;\n+\ts\/^\\s+\/\/;\n+\t@item = split(\/\\s+\/, $_);\n+\t@item = ($zname, @item); # push zone name\n+    } elsif (\/^Zone\/) {\n+\ts\/\\#.*\/\/; # chop trailing comments\n+\ts\/\\s+$\/\/;\n+\t@item = split(\/\\s+\/, $_);\n+\t$zname = $item[1];\n+\tif (defined ($zones{$name})) {\n+\t    printf STDERR \"WARNING: duplicate definition of zone $name\\n\";\n+\t}\n+\tshift(@item);\n+    }\n+    if (@item[0] ne \"foo\") {\n+\tif($#item == 3) { # find out no UNTIL line\n+\t    $item[3] =~ s\/%\/%%\/;\n+\t    $zones{$item[0]} = \"Zone $item[0]\\t$item[1]\\t$item[2]\\t$item[3]\";\n+\t} else {\n+\t    $continue = 1;\n+\t    next;\n+\t}\n+    }\n+\n+    # Rule\tNAME\tFROM\tTO\tTYPE\tIN\tON\tAT\tSAVE\tLETTER\/S\n+    if (\/^Rule\/) {\n+\t($rule, $name, $from, $to, $type, $in, $on, $at, $save, $letter)\n+\t  = split(\/\\s+\/, $_);\n+\n+\t# matches specified year?\n+\tfor ($i = 0; $i < $count; $i++) {\n+\t    if ($from <= $baseYear+$i && ($to >= $baseYear+$i || $to eq \"max\")\n+\t\t|| ($from == $baseYear+$i && $to eq \"only\")) {\n+\t\tif ($save ne \"0\") {\n+\t\t    $rules[$i]{$name . \"0\"} = $_;\n+\t\t} else {\n+\t\t    $rules[$i]{$name . \"1\"} = $_;\n+\t\t}\n+\t    } else {\n+                if ($from <= $baseYear) {\n+                    if ($save ne \"0\") {\n+\t\t        $oldRules[0]{$name} = $_;\n+\t\t    } else {\n+\t\t        $oldRules[1]{$name} = $_;\n+\t\t    }\n+                }\n+\t    }\n+\t}\n+    }\n+    $continue = 0;\n+}\n+\n+#\n+# Prepare output files\n+#\n+for ($i = 0, $fd = 0; $i < $count; $i++, $fd++) {\n+    $filename = \"year\".($baseYear+$i);\n+    open ($fd, \">$filename\") || die (\"$filename : open error.\\n\");\n+    print $fd \"# Based on $versionName\\n\";\n+}\n+\n+#\n+# If no IDs are specified, produce test data for all zones.\n+#\n+if ($#javatzids < 0) {\n+    @javatzids = keys(%zones);\n+}\n+\n+foreach $z (@javatzids) {\n+    #\n+    # skip any Riyadh zones; ZoneData.java can't handle Riyada zones\n+    #\n+    next if ($z =~ \/Riyadh\/);\n+\n+    for ($i = 0, $fd = 0; $i < $count; $i++, $fd++) {\n+\tif (!defined($zones{$z})) {\n+\t    printf $fd \"$z ?\\n\";\n+\t    printf STDERR \"WARNING: java zone $z not found\\n\";\n+\t    next;\n+\t}\n+\t@item = split(\/\\s+\/, $zones{$z});\n+\tif ($item[3] ne \"-\") {\n+\t    printf $fd \"$item[1] $item[2] \";\n+\t    if (defined($rules[$i]{$item[3] . \"0\"})\n+\t\t&& defined($rules[$i]{$item[3] . \"1\"})) {\n+\t\t$rule0 = $rules[$i]{$item[3] . \"0\"};\n+\t\t$rule1 = $rules[$i]{$item[3] . \"1\"};\n+\t\t@r0 = split(\/\\s+\/, $rule0);\n+\t\t@r1 = split(\/\\s+\/, $rule1);\n+\t\tprintf $fd \"$r0[5] $r0[6] $r0[7] $r1[5] $r1[6] $r1[7] $r0[8]\\n\";\n+\t\tprintf $fd \"$zones{$z}\\n\";\n+\t\tprintf $fd \"$rule0\\n\";\n+\t\tprintf $fd \"$rule1\\n\";\n+                if ($i == 0) {\n+                    $std = $dst = $item[4];\n+                    $std =~ s\/%%s\/$r1[9]\/;\n+                    if ($r1[9] eq \"-\") {\n+                        $std =~ s\/-\/\/;\n+                    }\n+                    $dst =~ s\/%%s\/$r0[9]\/;\n+                    if ($r0[9] eq \"-\") {\n+                        $dst =~ s\/-\/\/;\n+                    }\n+                    if (\"$std$dst\" =~ \/[A-Z]\/) {\n+                        print DNFD \"$item[1] $std $dst\\n\";\n+                    }\n+                }\n+\t    } else {\n+\t\tprintf $fd \"-\\n\"; # In case we cannot find Rule, assume no DST.\n+\t\tprintf $fd \"$zones{$z}\\n\";\n+\t\tprintf STDERR \"WARNING: $z no rules defined for $item[3]\\n\";\n+                if ($i == 0) {\n+                    # About 30 time zones (e.g. Asia\/Tokyo needs the following\n+                    # recovery.\n+                    if ($item[4] =~ m\/%\/) {\n+                        @r0 = split(\/\\s+\/, $oldRules[0]{$item[3]});\n+                        @r1 = split(\/\\s+\/, $oldRules[1]{$item[3]});\n+                        if ($i == 0) {\n+                            $std = $dst = $item[4];\n+                            $std =~ s\/%%s\/$r1[9]\/;\n+                            if ($r1[9] eq \"-\") {\n+                                $std =~ s\/-\/\/;\n+                            }\n+                            $dst =~ s\/%%s\/$r0[9]\/;\n+                            if ($r0[9] eq \"-\") {\n+                                $dst =~ s\/-\/\/;\n+                            }\n+                            if (\"$std$dst\" =~ \/[A-Z]\/) {\n+                                print DNFD \"$item[1] $std $dst\\n\";\n+                            }\n+                        }\n+                    } else {\n+                        if (\"$item[4]\" =~ \/[A-Z]\/) {\n+                            print DNFD \"$item[1] $item[4]\\n\";\n+                        }\n+                    }\n+                }\n+\t    }\n+\t} else {\n+\t    printf $fd \"$item[1] $item[2] $item[3]\\n\";\n+\t    printf $fd \"$zones{$z}\\n\";\n+            if ($i == 0 && \"$item[4]\" =~ \/[A-Z]\/) {\n+                print DNFD \"$item[1] $item[4]\\n\";\n+            }\n+\t}\n+    }\n+}\n+\n+#\n+# Close all the output files\n+#\n+close (DNFD);\n+for ($i = 0, $fd = 0; $i < $count; $i++, $fd++) {\n+    close ($fd);\n+}\n+\n+#\n+# Sort the displaynames.txt file\n+#\n+open my $fh, '<', $displayNameFile || die (\"Can't open $displayNameFile for sorting\\n\");;\n+chomp(my @names = <$fh>);\n+close $fh;\n+open my $fh, '>', $displayNameFile;\n+foreach $line (sort @names) { print $fh $line,\"\\n\"; }\n+close $fh;\n+\n+exit(0);\n+\n+sub readIDs {\n+    local ($file) = @_;\n+    local (@ids, $i);\n+\n+    open(F, $file) || die \"Fatal: can't open $file.\\n\";\n+\n+    $i = 0;\n+    while (<F>) {\n+\tchop;\n+\tif (\/^\\#\/) { # skip comment line\n+\t    next;\n+\t}\n+\n+\t# trim any leading and trailing space\n+\ts\/^\\s+\/\/;\n+\ts\/\\s+$\/\/;\n+\n+        if (\/^\\s*$\/) { # skip blank line\n+\t    next;\n+\t}\n+\n+\t$ids[$i++] = $_;\n+    }\n+    close(F);\n+    return @ids;\n+}\n","filename":"test\/jdk\/java\/util\/TimeZone\/tools\/share\/makeZoneData.pl","additions":283,"deletions":0,"binary":false,"changes":283,"status":"added"}]}