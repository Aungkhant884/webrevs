{"files":[{"patch":"@@ -352,0 +352,3 @@\n+        if (resourceName == null) {\n+            throw new NullPointerException();\n+        }\n@@ -405,0 +408,3 @@\n+        if (resourceName == null) {\n+            throw new NullPointerException();\n+        }\n@@ -480,1 +486,1 @@\n-        if (ret.isEmpty() && resourceName != null && resourceName.charAt(0) != '\/') {\n+        if (ret.isEmpty() && resourceName.charAt(0) != '\/') {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/Init.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-            if (hmacLength != null && !\"\".equals(hmacLength)) {\n+            if (hmacLength != null && hmacLength.length() != 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/algorithms\/implementations\/IntegrityHmac.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map)},\n+     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map, OutputStream)},\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/Canonicalizer20010315.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-        do {\n+        do {    \/\/NOPMD\n@@ -341,1 +341,1 @@\n-        do {\n+        do {    \/\/NOPMD\n@@ -563,1 +563,1 @@\n-        if (nsprefix != null && \"\".equals(nsprefix.getValue())) {\n+        if (nsprefix != null && nsprefix.getValue().length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/CanonicalizerBase.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map)},\n+     * {@link #outputAttributes(Element, NameSpaceSymbTable, Map, OutputStream)},\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/CanonicalizerPhysical.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-            if (entries[i] != null && !\"\".equals(entries[i].uri)) {\n+            if (entries[i] != null && entries[i].uri.length() != 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/c14n\/implementations\/NameSpaceSymbTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,181 +0,0 @@\n-\/*\n- * reserved comment block\n- * DO NOT REMOVE OR ALTER!\n- *\/\n-\/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements. See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership. The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License. You may obtain a copy of the License at\n- *\n- * http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied. See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- *\/\n-package com.sun.org.apache.xml.internal.security.exceptions;\n-\n-import java.text.MessageFormat;\n-\n-import com.sun.org.apache.xml.internal.security.utils.Constants;\n-import com.sun.org.apache.xml.internal.security.utils.I18n;\n-\n-\/**\n- * The mother of all runtime Exceptions in this bundle. It allows exceptions to have\n- * their messages translated to the different locales.\n- *\n- * The {@code xmlsecurity_en.properties} file contains this line:\n- * <pre>\n- * xml.WrongElement = Can't create a {0} from a {1} element\n- * <\/pre>\n- *\n- * Usage in the Java source is:\n- * <pre>\n- * {\n- *    Object[] exArgs = { Constants._TAG_TRANSFORMS, \"BadElement\" };\n- *\n- *    throw new XMLSecurityException(\"xml.WrongElement\", exArgs);\n- * }\n- * <\/pre>\n- *\n- * Additionally, if another Exception has been caught, we can supply it, too\n- * <pre>\n- * try {\n- *    ...\n- * } catch (Exception oldEx) {\n- *    Object[] exArgs = { Constants._TAG_TRANSFORMS, \"BadElement\" };\n- *\n- *    throw new XMLSecurityException(\"xml.WrongElement\", exArgs, oldEx);\n- * }\n- * <\/pre>\n- *\n- *\n- *\/\n-public class XMLSecurityRuntimeException extends RuntimeException {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    \/** Field msgID *\/\n-    protected String msgID;\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     *\/\n-    public XMLSecurityRuntimeException() {\n-        super(\"Missing message string\");\n-\n-        this.msgID = null;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID) {\n-        super(I18n.getExceptionMessage(msgID));\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param exArgs\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Object[] exArgs) {\n-        super(MessageFormat.format(I18n.getExceptionMessage(msgID), exArgs));\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(Exception originalException) {\n-        super(\"Missing message ID to locate message string in resource bundle \\\"\"\n-              + Constants.exceptionMessagesResourceBundleBase\n-              + \"\\\". Original Exception was a \"\n-              + originalException.getClass().getName() + \" and message \"\n-              + originalException.getMessage(), originalException);\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Exception originalException) {\n-        super(I18n.getExceptionMessage(msgID, originalException), originalException);\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Constructor XMLSecurityRuntimeException\n-     *\n-     * @param msgID\n-     * @param exArgs\n-     * @param originalException\n-     *\/\n-    public XMLSecurityRuntimeException(String msgID, Object[] exArgs, Exception originalException) {\n-        super(MessageFormat.format(I18n.getExceptionMessage(msgID), exArgs), originalException);\n-\n-        this.msgID = msgID;\n-    }\n-\n-    \/**\n-     * Method getMsgID\n-     *\n-     * @return the messageId\n-     *\/\n-    public String getMsgID() {\n-        if (msgID == null) {\n-            return \"Missing message ID\";\n-        }\n-        return msgID;\n-    }\n-\n-    \/** {@inheritDoc} *\/\n-    public String toString() {\n-        String s = this.getClass().getName();\n-        String message = super.getLocalizedMessage();\n-\n-        if (message != null) {\n-            message = s + \": \" + message;\n-        } else {\n-            message = s;\n-        }\n-\n-        if (this.getCause() != null) {\n-            message = message + \"\\nOriginal Exception was \" + this.getCause().toString();\n-        }\n-\n-        return message;\n-    }\n-\n-    \/**\n-     * Method getOriginalException\n-     *\n-     * @return the original exception\n-     *\/\n-    public Exception getOriginalException() {\n-        if (this.getCause() instanceof Exception) {\n-            return (Exception)this.getCause();\n-        }\n-        return null;\n-    }\n-\n-}\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/exceptions\/XMLSecurityRuntimeException.java","additions":0,"deletions":181,"binary":false,"changes":181,"status":"deleted"},{"patch":"@@ -173,2 +173,2 @@\n-        KeyResolverSpi keyResolverSpi =\n-            (KeyResolverSpi) JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+        KeyResolverSpi keyResolverSpi = (KeyResolverSpi)\n+            JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n@@ -196,2 +196,2 @@\n-            keyResolverSpi = (KeyResolverSpi) JavaUtils.newInstanceWithEmptyConstructor(\n-                    ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+            keyResolverSpi = (KeyResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n@@ -256,2 +256,2 @@\n-            KeyResolverSpi keyResolverSpi = (KeyResolverSpi)JavaUtils\n-                    .newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n+            KeyResolverSpi keyResolverSpi = (KeyResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, KeyResolver.class));\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/keys\/keyresolver\/KeyResolver.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -165,0 +165,1 @@\n+        referent.setSecureValidation(secureValidation);\n@@ -184,1 +185,1 @@\n-        if (referent.containsKeyInfoReference()) {\n+        if (referent.containsKeyInfoReference() || referent.containsRetrievalMethod()) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/keys\/keyresolver\/implementations\/KeyInfoReferenceResolver.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -99,2 +99,0 @@\n-      <SignatureAlgorithm URI=\"http:\/\/www.w3.org\/2007\/05\/xmldsig-more#ripemd160-rsa-MGF1\"\r\n-                          JAVACLASS=\"com.sun.org.apache.xml.internal.security.algorithms.implementations.SignatureBaseRSA$SignatureRSARIPEMD160MGF1\" \/>\r\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/resource\/config.xml","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -129,0 +129,1 @@\n+signature.Transform.XPathError = Error evaluating XPath expression\r\n@@ -199,1 +200,1 @@\n-stax.idgenerationdisablewithmultipleparts = Id generation must not be disabled when multiple parts need signing\n\\ No newline at end of file\n+stax.idgenerationdisablewithmultipleparts = Id generation must not be disabled when multiple parts need signing\r\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/resource\/xmlsecurity_en.properties","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityRuntimeException;\n@@ -144,1 +143,1 @@\n-     * method included the node and <I>all<\/I> his descendants in the output.\n+     * method included the node and <I>all<\/I> its descendants in the output.\n@@ -531,1 +530,1 @@\n-        try {\n+        try {   \/\/NOPMD\n@@ -542,1 +541,1 @@\n-    public void addNodeFilter(NodeFilter filter) {\n+    public void addNodeFilter(NodeFilter filter)  throws XMLParserException, IOException {\n@@ -544,7 +543,1 @@\n-            try {\n-                convertToNodes();\n-            } catch (Exception e) {\n-                throw new XMLSecurityRuntimeException(\n-                    \"signature.XMLSignatureInput.nodesetReference\", e\n-                );\n-            }\n+            convertToNodes();\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/signature\/XMLSignatureInput.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-        if (os == null) {\n+        if (os == null && (input.isOctetStream() || input.isElement() || input.isNodeSet())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformC14N.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            if (os == null) {\n+            if (os == null && (input.isOctetStream() || input.isElement() || input.isNodeSet())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformC14NExclusive.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.io.IOException;\n@@ -27,0 +28,1 @@\n+import com.sun.org.apache.xml.internal.security.parser.XMLParserException;\n@@ -74,1 +76,5 @@\n-        input.addNodeFilter(new EnvelopedNodeFilter(signatureElement));\n+        try {\n+            input.addNodeFilter(new EnvelopedNodeFilter(signatureElement));\n+        } catch (XMLParserException | IOException ex) {\n+            throw new TransformationException(ex);\n+        }\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformEnvelopedSignature.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.io.IOException;\n@@ -29,1 +30,1 @@\n-import com.sun.org.apache.xml.internal.security.exceptions.XMLSecurityRuntimeException;\n+import com.sun.org.apache.xml.internal.security.parser.XMLParserException;\n@@ -54,0 +55,3 @@\n+    private static final com.sun.org.slf4j.internal.Logger LOG =\n+            com.sun.org.slf4j.internal.LoggerFactory.getLogger(TransformXPath.class);\n+\n@@ -105,1 +109,1 @@\n-        } catch (DOMException ex) {\n+        } catch (XMLParserException | IOException | DOMException ex) {\n@@ -147,5 +151,2 @@\n-                Object[] eArgs = {currentNode};\n-                throw new XMLSecurityRuntimeException(\"signature.Transform.node\", eArgs, e);\n-            } catch (Exception e) {\n-                Object[] eArgs = {currentNode, currentNode.getNodeType()};\n-                throw new XMLSecurityRuntimeException(\"signature.Transform.nodeAndType\",eArgs, e);\n+                LOG.debug(\"Error evaluating XPath expression\", e);\n+                return 0;\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/transforms\/implementations\/TransformXPath.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+@SuppressWarnings(\"PMD\")\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/Base64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-        if (namespaceURI == null) {\n+        if (namespaceURI == null && context != null) {\n@@ -132,1 +132,1 @@\n-        } else if (namespaceURI.equals(XML_NS_URI)) {\n+        } else if (XML_NS_URI.equals(namespaceURI)) {\n@@ -134,1 +134,1 @@\n-        } else if (namespaceURI.equals(XMLNS_ATTRIBUTE_NS_URI)) {\n+        } else if (XMLNS_ATTRIBUTE_NS_URI.equals(namespaceURI)) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/DOMNamespaceContext.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -193,3 +193,3 @@\n-            StringReader sr = new StringReader(value.substring(1, value.length() - 1));\n-            int i = 0;\n-            char c;\n+            try (StringReader sr = new StringReader(value.substring(1, value.length() - 1))) {\n+                int i = 0;\n+                char c;\n@@ -197,2 +197,2 @@\n-            while ((i = sr.read()) > -1) {\n-                c = (char) i;\n+                while ((i = sr.read()) > -1) {\n+                    c = (char) i;\n@@ -200,5 +200,5 @@\n-                \/\/the following char is defined at 4.Relationship with RFC1779 and LDAPv2 inrfc2253\n-                if (c == ',' || c == '=' || c == '+' || c == '<'\n-                    || c == '>' || c == '#' || c == ';') {\n-                    sb.append('\\\\');\n-                }\n+                    \/\/the following char is defined at 4.Relationship with RFC1779 and LDAPv2 inrfc2253\n+                    if (c == ',' || c == '=' || c == '+' || c == '<'\n+                            || c == '>' || c == '#' || c == ';') {\n+                        sb.append('\\\\');\n+                    }\n@@ -206,1 +206,2 @@\n-                sb.append(c);\n+                    sb.append(c);\n+                }\n@@ -266,1 +267,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -270,15 +270,3 @@\n-        while ((i = sr.read()) > -1) {\n-            c = (char) i;\n-\n-            if (c == '\\\\') {\n-                sb.append(c);\n-\n-                char c1 = (char) sr.read();\n-                char c2 = (char) sr.read();\n-\n-                \/\/65 (A) 97 (a)\n-                if ((c1 >= 48 && c1 <= 57 || c1 >= 65 && c1 <= 70 || c1 >= 97 && c1 <= 102)\n-                    && (c2 >= 48 && c2 <= 57\n-                        || c2 >= 65 && c2 <= 70\n-                        || c2 >= 97 && c2 <= 102)) {\n-                    char ch = (char) Byte.parseByte(\"\" + c1 + c2, 16);\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                c = (char) i;\n@@ -286,1 +274,22 @@\n-                    sb.append(ch);\n+                if (c == '\\\\') {\n+                    sb.append(c);\n+\n+                    char c1 = (char) sr.read();\n+                    char c2 = (char) sr.read();\n+\n+                    \/\/65 (A) 97 (a)\n+                    if ((c1 >= 48 && c1 <= 57 || c1 >= 65 && c1 <= 70 || c1 >= 97 && c1 <= 102)\n+                            && (c2 >= 48 && c2 <= 57\n+                            || c2 >= 65 && c2 <= 70\n+                            || c2 >= 97 && c2 <= 102)) {\n+                        try {\n+                            char ch = (char) Byte.parseByte(\"\" + c1 + c2, 16);\n+\n+                            sb.append(ch);\n+                        } catch (NumberFormatException ex) {\n+                            throw new IOException(ex);\n+                        }\n+                    } else {\n+                        sb.append(c1);\n+                        sb.append(c2);\n+                    }\n@@ -288,2 +297,1 @@\n-                    sb.append(c1);\n-                    sb.append(c2);\n+                    sb.append(c);\n@@ -291,2 +299,0 @@\n-            } else {\n-                sb.append(c);\n@@ -308,1 +314,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -311,6 +316,8 @@\n-        while ((i = sr.read()) > -1) {\n-            if (i < 32) {\n-                sb.append('\\\\');\n-                sb.append(Integer.toHexString(i));\n-            } else {\n-                sb.append((char) i);\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                if (i < 32) {\n+                    sb.append('\\\\');\n+                    sb.append(Integer.toHexString(i));\n+                } else {\n+                    sb.append((char) i);\n+                }\n@@ -332,1 +339,0 @@\n-        StringReader sr = new StringReader(string);\n@@ -336,2 +342,3 @@\n-        while ((i = sr.read()) > -1) {\n-            c = (char) i;\n+        try (StringReader sr = new StringReader(string)) {\n+            while ((i = sr.read()) > -1) {\n+                c = (char) i;\n@@ -339,2 +346,2 @@\n-            if (c == '\\\\') {\n-                char c1 = (char) sr.read();\n+                if (c == '\\\\') {\n+                    char c1 = (char) sr.read();\n@@ -342,2 +349,2 @@\n-                if (c1 == ' ') {\n-                    sb.append('\\\\');\n+                    if (c1 == ' ') {\n+                        sb.append('\\\\');\n@@ -345,1 +352,1 @@\n-                    String s = \"20\";\n+                        String s = \"20\";\n@@ -347,1 +354,5 @@\n-                    sb.append(s);\n+                        sb.append(s);\n+                    } else {\n+                        sb.append('\\\\');\n+                        sb.append(c1);\n+                    }\n@@ -349,2 +360,1 @@\n-                    sb.append('\\\\');\n-                    sb.append(c1);\n+                    sb.append(c);\n@@ -352,2 +362,0 @@\n-            } else {\n-                sb.append(c);\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/RFC2253Parser.java","additions":60,"deletions":52,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -584,1 +584,1 @@\n-        do {\n+        do {    \/\/NOPMD\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/XMLUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,2 +125,2 @@\n-            ResourceResolverSpi resourceResolverSpi = (ResourceResolverSpi)JavaUtils\n-                    .newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, ResourceResolver.class));\n+            ResourceResolverSpi resourceResolverSpi = (ResourceResolverSpi)\n+                JavaUtils.newInstanceWithEmptyConstructor(ClassLoaderUtils.loadClass(className, ResourceResolver.class));\n@@ -162,9 +162,0 @@\n-                \/\/ Check to see whether the Resolver is allowed\n-                if (context.secureValidation\n-                    && (resolver instanceof ResolverLocalFilesystem\n-                        || resolver instanceof ResolverDirectHTTP)) {\n-                    Object[] exArgs = { resolver.getClass().getName() };\n-                    throw new ResourceResolverException(\n-                        \"signature.Reference.ForbiddenResolver\", exArgs, context.uriToResolve, context.baseUri\n-                    );\n-                }\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/ResourceResolver.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/ResourceResolverContext.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -222,1 +222,2 @@\n-            context.baseUri != null && context.baseUri.startsWith(\"http:\")) {\n+            context.uriToResolve.startsWith(\"https:\") ||\n+            context.baseUri != null && (context.baseUri.startsWith(\"http:\") || context.baseUri.startsWith(\"https:\"))) {\n@@ -234,1 +235,1 @@\n-        if (baseURI == null || \"\".equals(baseURI)) {\n+        if (baseURI == null || baseURI.length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverDirectHTTP.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-    private static final int FILE_URI_LENGTH = \"file:\/\".length();\n-\n@@ -56,3 +54,1 @@\n-            String fileName =\n-                ResolverLocalFilesystem.translateUriToFilename(uriNew.toString());\n-            InputStream inputStream = Files.newInputStream(Paths.get(fileName));\n+            InputStream inputStream = Files.newInputStream(Paths.get(uriNew));  \/\/NOPMD\n@@ -70,35 +66,0 @@\n-    \/**\n-     * Method translateUriToFilename\n-     *\n-     * @param uri\n-     * @return the string of the filename\n-     *\/\n-    private static String translateUriToFilename(String uri) {\n-\n-        String subStr = uri.substring(FILE_URI_LENGTH);\n-\n-        if (subStr.indexOf(\"%20\") > -1) {\n-            int offset = 0;\n-            int index = 0;\n-            StringBuilder temp = new StringBuilder(subStr.length());\n-            do {\n-                index = subStr.indexOf(\"%20\",offset);\n-                if (index == -1) {\n-                    temp.append(subStr.substring(offset));\n-                } else {\n-                    temp.append(subStr.substring(offset, index));\n-                    temp.append(' ');\n-                    offset = index + 3;\n-                }\n-            } while(index != -1);\n-            subStr = temp.toString();\n-        }\n-\n-        if (subStr.charAt(1) == ':') {\n-            \/\/ we're running M$ Windows, so this works fine\n-            return subStr;\n-        }\n-        \/\/ we're running some UNIX, so we have to prepend a slash\n-        return \"\/\" + subStr;\n-    }\n-\n@@ -114,1 +75,1 @@\n-            context.uriToResolve.startsWith(\"http:\")) {\n+            context.uriToResolve.startsWith(\"http:\") || context.uriToResolve.startsWith(\"https:\")) {\n@@ -136,1 +97,1 @@\n-        if (baseURI == null || \"\".equals(baseURI)) {\n+        if (baseURI == null || baseURI.length() == 0) {\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverLocalFilesystem.java","additions":3,"deletions":42,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -242,3 +242,0 @@\n-            if (!in.isNodeSet() && !in.isElement()) {\n-                return null;\n-            }\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/ApacheCanonicalizer.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -128,1 +128,5 @@\n-        outputLength = Integer.parseInt(paramsElem.getFirstChild().getNodeValue());\n+        try {\n+            outputLength = Integer.parseInt(paramsElem.getFirstChild().getNodeValue());\n+        } catch (NumberFormatException ex) {\n+            throw new MarshalException(\"Invalid output length supplied: \" + paramsElem.getFirstChild().getNodeValue());\n+        }\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMHMACSignatureMethod.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-        try (OutputStream os = new UnsyncBufferedOutputStream(dos)) {\n+        try (OutputStream os = new UnsyncBufferedOutputStream(dos)) { \/\/NOPMD\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMReference.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-        if (parent.getLocalName().equals(\"Transforms\")) {\n+        if (\"Transforms\".equals(parent.getLocalName())) {\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMTransform.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-            ResourceResolverContext resContext = new ResourceResolverContext(uriAttr, baseURI, false);\n+            ResourceResolverContext resContext = new ResourceResolverContext(uriAttr, baseURI, secVal);\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/DOMURIDereferencer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,8 +46,7 @@\n-    \/\/ all restrictions are initialized to be unconstrained\n-    private static Set<URI> disallowedAlgs = new HashSet<>();\n-    private static int maxTrans = Integer.MAX_VALUE;\n-    private static int maxRefs = Integer.MAX_VALUE;\n-    private static Set<String> disallowedRefUriSchemes = new HashSet<>();\n-    private static Map<String, Integer> minKeyMap = new HashMap<>();\n-    private static boolean noDuplicateIds = false;\n-    private static boolean noRMLoops = false;\n+    private static Set<URI> disallowedAlgs;\n+    private static int maxTrans;\n+    private static int maxRefs;\n+    private static Set<String> disallowedRefUriSchemes;\n+    private static Map<String, Integer> minKeyMap;\n+    private static boolean noDuplicateIds;\n+    private static boolean noRMLoops;\n@@ -67,0 +66,10 @@\n+        \/\/ First initialized to be unconstrained and then parse the\n+        \/\/ security property \"jdk.xml.dsig.secureValidationPolicy\"\n+        disallowedAlgs = new HashSet<>();\n+        maxTrans = Integer.MAX_VALUE;\n+        maxRefs = Integer.MAX_VALUE;\n+        disallowedRefUriSchemes = new HashSet<>();\n+        minKeyMap = new HashMap<>();\n+        noDuplicateIds = false;\n+        noRMLoops = false;\n+\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Policy.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-        Boolean value = (Boolean)xc.getProperty(name);\n+        Boolean value = (Boolean) xc.getProperty(name);\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-        \/\/ Apache Santuario XML Security for Java, version 2.2.1\n+        \/\/ Apache Santuario XML Security for Java, version 2.3.0\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/XMLDSigRI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## Apache Santuario v2.2.1\n+## Apache Santuario v2.3.0\n","filename":"src\/java.xml.crypto\/share\/legal\/santuario.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}