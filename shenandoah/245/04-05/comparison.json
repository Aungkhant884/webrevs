{"files":[{"patch":"@@ -1020,1 +1020,1 @@\n-      Node *mem = addp->last_out(j);\n+      Node* mem = addp->last_out(j);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-  ShenandoahObjToScanQueue* old = (_old_queue_set == nullptr) ?\n+  ShenandoahObjToScanQueue* old_q = (_old_queue_set == nullptr) ?\n@@ -183,1 +183,1 @@\n-  ShenandoahMarkRefsClosure<GENERATION> cl(q, _rp, old);\n+  ShenandoahMarkRefsClosure<GENERATION> cl(q, _rp, old_q);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-          scanner->register_object_wo_lock(obj_addr);\n+          scanner->register_object_without_lock(obj_addr);\n@@ -120,1 +120,1 @@\n-            scanner->register_object_wo_lock(obj_addr);\n+            scanner->register_object_without_lock(obj_addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-  card_scan()->register_object_wo_lock(obj);\n+  card_scan()->register_object_without_lock(obj);\n@@ -1045,1 +1045,1 @@\n-    card_scan()->register_object_wo_lock(top);\n+    card_scan()->register_object_without_lock(top);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1062,1 +1062,1 @@\n-  heap->card_scan()->register_object_wo_lock(bottom());\n+  heap->card_scan()->register_object_without_lock(bottom());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -622,1 +622,1 @@\n-  \/\/ register_object_wo_lock() does not require that the caller hold\n+  \/\/ register_object_without_lock() does not require that the caller hold\n@@ -627,1 +627,1 @@\n-  void register_object_wo_lock(HeapWord* address);\n+  void register_object_without_lock(HeapWord* address);\n@@ -843,1 +843,1 @@\n-  void register_object_wo_lock(HeapWord *addr);\n+  void register_object_without_lock(HeapWord *addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-  register_object_wo_lock(address);\n+  register_object_without_lock(address);\n@@ -191,1 +191,1 @@\n-ShenandoahCardCluster<RememberedSet>::register_object_wo_lock(HeapWord* address) {\n+ShenandoahCardCluster<RememberedSet>::register_object_without_lock(HeapWord* address) {\n@@ -422,2 +422,2 @@\n-ShenandoahScanRemembered<RememberedSet>::register_object_wo_lock(HeapWord *addr) {\n-  _scc->register_object_wo_lock(addr);\n+ShenandoahScanRemembered<RememberedSet>::register_object_without_lock(HeapWord *addr) {\n+  _scc->register_object_without_lock(addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}