{"files":[{"patch":"@@ -43,0 +43,1 @@\n+  _has_old_regions(false),\n@@ -90,0 +91,1 @@\n+  _has_old_regions |= r->is_old();\n@@ -110,0 +112,2 @@\n+\n+  _has_old_regions = false;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+  bool                  _has_old_regions;\n@@ -79,2 +80,4 @@\n-  size_t used()      const { return _used; }\n-  size_t garbage()   const { return _garbage;   }\n+  bool has_old_regions() const { return _has_old_regions; }\n+  size_t used()          const { return _used; }\n+\n+  size_t garbage()       const { return _garbage; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2133,1 +2133,1 @@\n-\n+    bool is_mixed = _heap->collection_set()->has_old_regions();\n@@ -2143,3 +2143,3 @@\n-          if (!_heap->is_gc_generation_young()) {\n-            \/\/ Old region in an old or global cycle.\n-            \/\/ We need to make sure that the next cycle does not iterate over dead objects\n+          if (!_heap->is_gc_generation_young() || is_mixed) {\n+            \/\/ Old region in global or mixed cycle (in which case, old regions should be marked).\n+            \/\/ We need to make sure that the next remembered set scan does not iterate over dead objects\n@@ -2149,1 +2149,1 @@\n-            \/\/ Old region in a young cycle.\n+            \/\/ Old region in a young cycle with no old regions.\n@@ -2153,15 +2153,1 @@\n-              if (r->is_humongous()) {\n-                r->oop_iterate_humongous(&cl);\n-              } else {\n-                \/\/ We don't have liveness information about this region.\n-                \/\/ Therefore we process all objects, rather than just marked ones.\n-                \/\/ Otherwise subsequent traversals will encounter stale pointers.\n-                HeapWord *p = r->bottom();\n-                ShenandoahObjectToOopBoundedClosure<T> objs(&cl, p, update_watermark);\n-                \/\/ Anything beyond update_watermark is not yet allocated or initialized.\n-                while (p < update_watermark) {\n-                  oop obj = oop(p);\n-                  objs.do_object(obj);\n-                  p += obj->size();\n-                }\n-              }\n+              update_all_references(&cl, r, update_watermark);\n@@ -2181,0 +2167,19 @@\n+\n+  template<class T>\n+  void update_all_references(T* cl, ShenandoahHeapRegion* r, HeapWord* update_watermark) {\n+    if (r->is_humongous()) {\n+      r->oop_iterate_humongous(cl);\n+    } else {\n+      \/\/ We don't have liveness information about this region.\n+      \/\/ Therefore we process all objects, rather than just marked ones.\n+      \/\/ Otherwise subsequent traversals will encounter stale pointers.\n+      HeapWord* p = r->bottom();\n+      ShenandoahObjectToOopBoundedClosure<T> objs(cl, p, update_watermark);\n+      \/\/ Anything beyond update_watermark is not yet allocated or initialized.\n+      while (p < update_watermark) {\n+        oop obj = oop(p);\n+        objs.do_object(obj);\n+        p += obj->size();\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":25,"deletions":20,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -233,4 +233,0 @@\n-  if (mode()->is_generational() && obj != NULL) {\n-    ShenandoahHeap::heap()->card_scan()->register_object(obj);\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -85,4 +85,6 @@\n-      if (!region->is_trash()) {\n-        ShenandoahMark::mark_through_ref<oop, OLD, STRING_DEDUP>(p, _queue, NULL, _mark_context, false);\n-      } else {\n-        ++_trashed_oops;\n+      if (region->is_old()) {\n+        if (!region->is_trash()) {\n+          ShenandoahMark::mark_through_ref<oop, OLD, STRING_DEDUP>(p, _queue, NULL, _mark_context, false);\n+        } else {\n+          ++_trashed_oops;\n+        }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -597,1 +597,1 @@\n-    if (region->affiliation() == OLD_GENERATION) {\n+    if (region->is_old() && region->is_active() && !region->is_cset()) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}