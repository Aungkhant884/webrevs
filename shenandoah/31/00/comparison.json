{"files":[{"patch":"@@ -672,0 +672,1 @@\n+  void mark_card_as_dirty(HeapWord* location);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"gc\/shenandoah\/shenandoahScanRemembered.inline.hpp\"\n@@ -582,0 +583,7 @@\n+inline void ShenandoahHeap::mark_card_as_dirty(HeapWord* location) {\n+  if (mode()->is_generational()) {\n+    _card_scan->mark_card_as_dirty(location);\n+  }\n+}\n+\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -272,0 +272,1 @@\n+      \/\/ Young mark, bootstrapping old.\n@@ -274,0 +275,4 @@\n+    } else if (GENERATION == OLD) {\n+      \/\/ Old mark, found a young pointer.\n+      assert(ShenandoahHeap::heap()->is_in_young(obj), \"Expected young object.\");\n+      ShenandoahHeap::heap()->mark_card_as_dirty((HeapWord*)p);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}