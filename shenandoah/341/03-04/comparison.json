{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shenandoah\/shenandoahCollectorPolicy.hpp\"\n@@ -526,3 +527,3 @@\n-    if ((current_usage < ShenandoahGenerationalIgnoreOldGrowthBelowPercentage * heap_size \/ 100) &&\n-        ((consecutive_young_cycles = heap->control_thread()->consecutive_young_collections())\n-         < ShenandoahGenerationalDoNotIgnoreGrowthAfterYoungCycles)) {\n+    if ((current_usage < ShenandoahIgnoreOldGrowthBelowPercentage * heap_size \/ 100) &&\n+        ((consecutive_young_cycles = heap->shenandoah_policy()->consecutive_young_gc_count())\n+         < ShenandoahDoNotIgnoreGrowthAfterYoungCycles)) {\n@@ -532,2 +533,2 @@\n-                   byte_size_in_proper_unit(ShenandoahGenerationalDoNotIgnoreGrowthAfterYoungCycles),\n-                   proper_unit_for_byte_size(ShenandoahGenerationalDoNotIgnoreGrowthAfterYoungCycles),\n+                   byte_size_in_proper_unit(ShenandoahDoNotIgnoreGrowthAfterYoungCycles),\n+                   proper_unit_for_byte_size(ShenandoahDoNotIgnoreGrowthAfterYoungCycles),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+  _consecutive_young_gcs(0),\n@@ -87,1 +88,6 @@\n-void ShenandoahCollectorPolicy::record_success_concurrent() {\n+void ShenandoahCollectorPolicy::record_success_concurrent(bool is_young) {\n+  if (is_young) {\n+    _consecutive_young_gcs++;\n+  } else {\n+    _consecutive_young_gcs = 0;\n+  }\n@@ -100,0 +106,1 @@\n+  _consecutive_young_gcs = 0;\n@@ -104,0 +111,1 @@\n+  _consecutive_young_gcs = 0;\n@@ -107,1 +115,6 @@\n-void ShenandoahCollectorPolicy::record_success_degenerated() {\n+void ShenandoahCollectorPolicy::record_success_degenerated(bool is_young) {\n+  if (is_young) {\n+    _consecutive_young_gcs++;\n+  } else {\n+    _consecutive_young_gcs = 0;\n+  }\n@@ -112,0 +125,1 @@\n+  _consecutive_young_gcs = 0;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.cpp","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+  volatile size_t _consecutive_young_gcs;\n@@ -72,1 +73,1 @@\n-  void record_success_concurrent();\n+  void record_success_concurrent(bool is_young);\n@@ -75,1 +76,1 @@\n-  void record_success_degenerated();\n+  void record_success_degenerated(bool is_young);\n@@ -97,0 +98,4 @@\n+\n+  inline size_t consecutive_young_gc_count() const {\n+    return _consecutive_young_gcs;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-  _consecutive_young = 0;\n@@ -624,1 +623,0 @@\n-    _consecutive_young = 0;\n@@ -718,5 +716,0 @@\n-    if (generation->is_young()) {\n-      _consecutive_young++;\n-    } else {\n-      _consecutive_young = 0;\n-    }\n@@ -819,1 +812,0 @@\n-  _consecutive_young = 0;\n@@ -847,5 +839,0 @@\n-  if (_degen_generation->is_young()) {\n-    _consecutive_young++;\n-  } else {\n-    _consecutive_young = 0;\n-  }\n@@ -853,1 +840,1 @@\n-  heap->shenandoah_policy()->record_success_degenerated();\n+  heap->shenandoah_policy()->record_success_degenerated(_degen_generation->is_young());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -106,2 +106,0 @@\n-  volatile size_t _consecutive_young;\n-  shenandoah_padding(4);\n@@ -178,2 +176,0 @@\n-  inline size_t consecutive_young_collections() { return _consecutive_young; };\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1019,1 +1019,1 @@\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_success_concurrent();\n+  ShenandoahHeap::heap()->shenandoah_policy()->record_success_concurrent(is_young());\n@@ -1024,1 +1024,1 @@\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_success_degenerated();\n+  ShenandoahHeap::heap()->shenandoah_policy()->record_success_degenerated(is_young());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-    _min_growth_before_compaction ((ShenandoahGenerationalMinOldGenGrowthPercent * FRACTIONAL_DENOMINATOR) \/ 100)\n+    _min_growth_before_compaction ((ShenandoahMinOldGenGrowthPercent * FRACTIONAL_DENOMINATOR) \/ 100)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-  static const uint16_t INITIAL_LIVE_FRACTION = FRACTIONAL_DENOMINATOR \/ 32;                \/\/   3.125%\n+  static const uint16_t INITIAL_LIVE_FRACTION = FRACTIONAL_DENOMINATOR \/ 16;                \/\/   6.25%\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,1 @@\n-  product(double, ShenandoahGenerationalMinOldGenGrowthPercent,             \\\n-          12.5, EXPERIMENTAL,                                               \\\n+  product(double, ShenandoahMinOldGenGrowthPercent,12.5, EXPERIMENTAL,      \\\n@@ -47,2 +46,1 @@\n-  product(uintx, ShenandoahGenerationalIgnoreOldGrowthBelowPercentage,      \\\n-          5, EXPERIMENTAL,                                                  \\\n+  product(uintx, ShenandoahIgnoreOldGrowthBelowPercentage,5, EXPERIMENTAL,  \\\n@@ -57,1 +55,1 @@\n-  product(uintx, ShenandoahGenerationalDoNotIgnoreGrowthAfterYoungCycles,   \\\n+  product(uintx, ShenandoahDoNotIgnoreGrowthAfterYoungCycles,               \\\n@@ -60,1 +58,1 @@\n-          \"is below ShenandoahGenerationalIgnoreOldGrowthBelowPercentage, \" \\\n+          \"is below ShenandoahIgnoreOldGrowthBelowPercentage, \"             \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"}]}