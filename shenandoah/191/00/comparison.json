{"files":[{"patch":"@@ -992,0 +992,3 @@\n+  assert((adjusted_capacity() - used_regions_size()) % ShenandoahHeapRegion::region_size_bytes() == 0,\n+         \"adjusted_capacity (\" SIZE_FORMAT \") and used regions size (\" SIZE_FORMAT \") should be multiples of region_size_bytes\",\n+         adjusted_capacity(), used_regions_size());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -162,0 +162,1 @@\n+  default_value &= ~ShenandoahHeapRegion::region_size_bytes_mask();\n@@ -167,0 +168,1 @@\n+  default_value &= ~ShenandoahHeapRegion::region_size_bytes_mask();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}