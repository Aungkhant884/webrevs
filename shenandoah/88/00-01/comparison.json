{"files":[{"patch":"@@ -75,15 +75,0 @@\n-class ShenandoahGlobalCoalesceAndFill : public ShenandoahHeapRegionClosure {\n- public:\n-  virtual void heap_region_do(ShenandoahHeapRegion* region) override {\n-    \/\/ old region is not in the collection set and was not immediately trashed\n-    if (region->is_old() && region->is_active() && !region->is_humongous()) {\n-      bool result = region->oop_fill_and_coalesce();\n-      assert(result = true, \"Do not preempt or cancel fill and coalesce during GLOBAL gc\");\n-    }\n-  }\n-\n-  virtual bool is_thread_safe() override {\n-    return true;\n-  }\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -175,2 +175,6 @@\n-    \/\/ Any OLD region allocated during concurrent coalesce-and-fill does not need to be coalesced and filled.\n-    \/\/ This code is only necessary if req.affiliation() is old, but harmless if not.\n+    \/\/ Any OLD region allocated during concurrent coalesce-and-fill does not need to be coalesced and filled because\n+    \/\/ all objects allocated within this region are above TAMS (and thus are implicitly marked).  In case this is an\n+    \/\/ OLD region and concurrent preparation for mixed evacuations visits this region before the start of the next\n+    \/\/ old-gen concurrent mark (i.e. this region is allocated following the start of old-gen concurrent mark but before\n+    \/\/ concurrent preparation for mixed evacuations are completed), we mark this region as not requiring any\n+    \/\/ coalesce-and-fill processing.y\/ This code is only necessary if req.affiliation() is OLD, but harmless if not.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -467,1 +467,1 @@\n-    if (!ops_before_preempt_check--) {\n+    if (ops_before_preempt_check-- == 0) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}