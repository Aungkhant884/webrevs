{"files":[{"patch":"@@ -627,0 +627,2 @@\n+  _mmu_tracker.initialize();\n+\n@@ -640,1 +642,0 @@\n-  _mmu_tracker.initialize();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-  _mmu_lock(Mutex::nosafepoint - 2, \"ShenandoahMMU_lock\", true),\n@@ -87,1 +86,1 @@\n-  MonitorLocker lock(&_mmu_lock, Mutex::_no_safepoint_check_flag);\n+  \/\/ This is only called by the control thread.\n@@ -95,1 +94,1 @@\n-  MonitorLocker lock(&_mmu_lock, Mutex::_no_safepoint_check_flag);\n+  \/\/ This is only called by the periodic thread.\n@@ -132,1 +131,1 @@\n-  assert(bytes > heap_capacity, \"Must be less than total capacity\");\n+  assert(bytes < heap_capacity, \"Must be less than total capacity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  Monitor _mmu_lock;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}