{"files":[{"patch":"@@ -95,1 +95,1 @@\n-  if (idx = _left_mosts[set]) {\n+  if (idx == _left_mosts[set]) {\n@@ -160,1 +160,0 @@\n-  assert (region_capacity == _region_size_bytes, \"Only move entirely empty regions\");\n@@ -162,0 +161,1 @@\n+  assert ((new_set > NotFree) && (new_set < NumFreeSets), \"New set must be valid\");\n@@ -164,1 +164,9 @@\n-  assert ((new_set > NotFree) && (new_set < NumFreeSets), \"New set must be valid\");\n+  \/\/ Expected transitions:\n+  \/\/  During rebuild: Mutator => Collector\n+  \/\/                  Mutator empty => Collector\n+  \/\/  During flip_to_gc:\n+  \/\/                  Mutator empty => Collector\n+  \/\/                  Mutator empty => Old Collector\n+  assert (((region_capacity < _region_size_bytes) && (orig_set == Mutator) && (new_set == Collector)) ||\n+\t  ((region_capacity == _region_size_bytes) && (orig_set == Mutator) && (new_set == Collector || new_set == OldCollector)),\n+\t  \"Unexpected movement between sets\");\n@@ -319,1 +327,1 @@\n-        if (i > right_mosts[i]) {\n+        if (i > right_mosts[set]) {\n@@ -1183,2 +1191,2 @@\n-                       \" mM:mutator_free cC:collector_free oO:old_collector_free\"\n-                       \" h:humongous young H:humongous old ~:retired old _:retired young\");\n+                       \" M:mutator_free C:collector_free O:old_collector_free\"\n+                       \" H:humongous ~:retired old _:retired young\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -96,1 +96,0 @@\n-    shenandoah_assert_heaplocked();\n@@ -102,1 +101,0 @@\n-    shenandoah_assert_heaplocked();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}