{"files":[{"patch":"@@ -536,0 +536,19 @@\n+      \/\/ It is possible for a young generation request to preempt this nascent old\n+      \/\/ collection cycle _after_ we've finished making the old regions parseable (filling),\n+      \/\/ but _before_ we have unset the preemption flag. So, we must check if we\n+      \/\/ have been preempted before we start a bootstrap cycle.\n+      if (check_cancellation_or_degen(ShenandoahGC::_degenerated_outside_cycle)) {\n+        if (heap->cancelled_gc()) {\n+          \/\/ If this was a preemption request, the cancellation would have been cleared\n+          \/\/ so that we run a concurrent young cycle. If the cancellation is still set,\n+          \/\/ then this is an allocation failure and we need to run a degenerated cycle.\n+          \/\/ If this is a preemption request, we're just going to fall through and run\n+          \/\/ the bootstrap cycle to start the old generation cycle (the bootstrap cycle is\n+          \/\/ a concurrent young cycle - which is what we're being asked to do in that case).\n+          \/\/ If the cycle is cancelled for any other reason, we return from here and let\n+          \/\/ the control thread return to the top of its decision loop.\n+          log_info(gc)(\"Preparation for old generation cycle was cancelled\");\n+          return;\n+        }\n+      }\n+\n@@ -541,0 +560,1 @@\n+      set_gc_mode(bootstrapping_old);\n@@ -559,3 +579,1 @@\n-      \/\/ done by the bootstrapping young cycle. In order to simplify the debugging\n-      \/\/ effort, the old cycle will ONLY complete the mark phase. No actual\n-      \/\/ collection of the old generation is happening here.\n+      \/\/ done by the bootstrapping young cycle.\n@@ -1019,0 +1037,1 @@\n+    case bootstrapping_old: return \"bootstrap\";\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":22,"deletions":3,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -77,0 +77,1 @@\n+    bootstrapping_old,\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -87,1 +87,0 @@\n-gc\/shenandoah\/TestArrayCopyStress.java#generational 8306334 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}