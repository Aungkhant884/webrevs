{"files":[{"patch":"@@ -334,0 +334,7 @@\n+  } else {\n+    \/\/ we're going to skip evacuation and update refs because we reclaimed sufficient amounts of immediate garbage.\n+    heap->shenandoah_policy()->record_abbreviated_cycle();\n+  }\n+\n+  if (collection_set->has_old_regions()) {\n+    heap->shenandoah_policy()->record_mixed_cycle();\n@@ -335,1 +342,0 @@\n-  \/\/ else, we're going to skip evacuation and update refs because we reclaimed sufficient amounts of immediate garbage.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+  _mixed_gcs(0),\n+  _abbreviated_cycles(0),\n@@ -88,0 +90,8 @@\n+void ShenandoahCollectorPolicy::record_mixed_cycle() {\n+  _mixed_gcs++;\n+}\n+\n+void ShenandoahCollectorPolicy::record_abbreviated_cycle() {\n+  _abbreviated_cycles++;\n+}\n+\n@@ -124,1 +134,2 @@\n-  out->print_cr(\"to avoid Degenerated and Full GC cycles.\");\n+  out->print_cr(\"to avoid Degenerated and Full GC cycles. Abbreviated cycles are those which found\");\n+  out->print_cr(\"enough regions with no live objects to skip evacuation.\");\n@@ -133,0 +144,1 @@\n+  out->print_cr(\"  \" SIZE_FORMAT_W(5) \" mixed\",                        _mixed_gcs);\n@@ -147,0 +159,3 @@\n+  out->print_cr(SIZE_FORMAT_W(5) \" Abbreviated GCs\",                   _abbreviated_cycles);\n+  out->cr();\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.cpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+  size_t _mixed_gcs;\n+  size_t _abbreviated_cycles;\n@@ -68,0 +70,2 @@\n+  void record_mixed_cycle();\n+  void record_abbreviated_cycle();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectorPolicy.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}