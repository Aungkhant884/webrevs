{"files":[{"patch":"@@ -214,2 +214,1 @@\n-        assert (result != NULL, \"Allocation must succeed: free \" SIZE_FORMAT \", actual \" SIZE_FORMAT, usable_free, size);\n-        if (free > usable_free) {\n+        if (result != nullptr && free > usable_free) {\n@@ -244,9 +243,9 @@\n-      assert (result != NULL, \"Allocation must succeed: free \" SIZE_FORMAT \", actual \" SIZE_FORMAT, usable_free, size);\n-\n-      \/\/ Account for the alignment padding\n-      size_t padding = (free - usable_free) * HeapWordSize;\n-      increase_used(padding);\n-      assert(r->affiliation() == ShenandoahRegionAffiliation::OLD_GENERATION, \"All PLABs reside in old-gen\");\n-      _heap->old_generation()->increase_used(padding);\n-      \/\/ For verification consistency, we need to report this padding to _heap\n-      _heap->increase_used(padding);\n+      if (result != nullptr) {\n+        \/\/ Account for the alignment padding\n+        size_t padding = (free - usable_free) * HeapWordSize;\n+        increase_used(padding);\n+        assert(r->affiliation() == ShenandoahRegionAffiliation::OLD_GENERATION, \"All PLABs reside in old-gen\");\n+        _heap->old_generation()->increase_used(padding);\n+        \/\/ For verification consistency, we need to report this padding to _heap\n+        _heap->increase_used(padding);\n+      }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"}]}