[{"commit":{"message":"Separated out stats for scan_rs and update_refs\nStill need to carry cumulative stats, and merge stats from each round\ninto cumulative.The latter needs a \"merge\" method in NumberSeq, which\nwill be a separate PR."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCardStats.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"0d65158c1db796c56724db31a2e10c536a35150c"},{"commit":{"message":"Extract ShenandoahCardStats into its own {.h,.c}pp files."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCardStats.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCardStats.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"388a03daf30e5798399f44cdd3b9290274fb7b5d"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"488c9399b7d445d20d8df0b3bf7d2a83d5c64ca2"},{"commit":{"message":"NOT_PRODUCT() for the stats allocation. Although the stats colelction\ncalls were inlined and constant-folded away by the comoiler, the\nallocation was not removed, go figure. Thus it made sense to remove them\nall via NOT_PRODUCT(). I might revisit this in later iterations as I\nwork on the card-scan loop itself, but for now this is sufficient."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"d857547758d02c15d88714f686008975c9867470"},{"commit":{"message":"Moved some more methods into non-product mode."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"c0a4a9d74664389b721b6730a1171fa0701b83dc"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"f56695777ab581733a07b6b297740681f226231b"},{"commit":{"message":"Card stats only in non-product mode (until impact of stats collection is\nreduce)."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"734b468f4f5a23919fd01e248c9ac83c782afafb"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[],"sha":"b6d357e02ac834e37abc50b8aee2003dca606bf6"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[],"sha":"471eb41e72c24ac766666efa98e8640b1b7bd42c"},{"commit":{"message":"jcheck whitespace fixes."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"4deb71ee8403ce4600a74677131d1200aaa34692"},{"commit":{"message":"Fix card_stats() so it doesn't crash when card stats aren't enabled."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"}],"sha":"e5166ad87df5ca4c9fd93b5b56584bd7f5a72d36"},{"commit":{"message":"Fix comment."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"}],"sha":"436e54942b58f8c053ee6f09b2573c1c43eb7e1e"},{"commit":{"message":"Don't allocate stats arrays if not enabled. Should we decide we want\nthis to be a \"manageable\", we will have to slightly rework this."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"}],"sha":"ed2cc518d9036a03490c88b061772bc1509d21ce"},{"commit":{"message":"Disable card stats printing when disabled"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"c86fc55df3558b6760d393bf766a14ae302a5e23"},{"commit":{"message":"Remove compile time preprocesor option.\nStrengthen some asserts.\nFix a type issue in a couple of variables.\nFix a copy-and-paste error in previous commit which was messing up stats\n(and trigerred an assert)."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"74598e3e0ddb265bec164985e2de4a93ddddcac5"},{"commit":{"message":"Protect card stats with a diagnostic shenandoah flag disabled by\ndefault. The resulting performance impact when disabled is near zero.\n\nThe next commit will remove the compile time options which are now\nrendered unnecessary."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"4f7d1584d53d9c6e7a764dfb221802305176e47c"},{"commit":{"message":"Fix typo in spelling of preprocessor option name.\nFix a boundary condition in comparison for NumberSeq that was triggering\nan assert. Re-enable asserts that had previously been disabled."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"}],"sha":"8f312e47ffd5aca49bb861fdbed0211246438ad0"},{"commit":{"message":"Fix build when card stats are disabled.\n\nMight make sense to extract card stats class itself into a separate\nfile to reduce the syntactic footprint of card stats code."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"}],"sha":"932d654118947c5dc806aacc9f5b71a8ee9de2c0"},{"commit":{"message":"Enum to replaces hard-wired constants, up to 11, for indexing the rows of card stats."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"02207465076a2e3f81d15d38cfb9b21a96b28ab8"},{"commit":{"message":"Need ParallelGCThreads worth of stats array because degenerate GCs use\nup to that many threads for the otherwise concurrent phases."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"90e75dc88970cd8776d95bd0f04746bd84937864"},{"commit":{"message":"Local stats updates to avoid unnecessary synchronization.\nAllocate only ConcGCThreads worth of stats array, but may need to extend\nback to ParallelGCThreads again as I suspect that sometimes more threads\nare used for process_clusters(). Worker 0 is overloaded for work done\nsimgle threaded.\n\nStill need to redo careful measurements of stat overhead following local\nstats updates and no synchronization. Stats code is still protected by a\ncompile time flag in source."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"f229cc4b002c599edec4372c0a72b5c50bcfa9f0"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"0b1c7c8f2f0b21d0d518b8e362e1620bdee32c69"},{"commit":{"message":"Remove the no longer used \"worker_id\"; we might need to reintroduce it\nor similar at an appropriate place should we decide to reduce locking\nfor stats updates. Coarse locking or no locking may work because shared\nstats are updated only at the end of each cluster."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"503c0d0cfcc207b047a65b650508c65d1849b9d4"},{"commit":{"message":"Complete instrumentation, protected by preprocessor flag.\nPrints quartiles of various card stats per chunk (cluster).\nTested with prepocessor flag enabled and disabled."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"0842f844bf8039404253d2ad347b5472851f8125"},{"commit":{"message":"JVM-1264: extract stats maintenance into ShenandoahCardStats & formalize\ninterface API. Arrange for stats code to be elided via pre-processor\nswitch.\n\nWe still need to accumulate stats in a distribution (histogram) for\nfrequency distribution of clean and dirty cards in a cluster."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"f8c16ec03a62a527b941dba98b9e162f35195b89"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"25f467e82b6a0ab4e35633f21b5bc644093051cd"},{"commit":{"message":"Fix merge error."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"e460809223c1ffea559826bdf44a2b44f6d53883"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"6e37dabe94e96a3c5e5a7028e16bd776052aaaf9"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"68766450b7977da08de4768f0e2329c17cb88532"},{"commit":{"message":"Fix configuration of the number of workers used in concurrent remembered\nset scanning so we based off of ConcGCThreads, rather than off of\nParallelGCThreads."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"744713ce9839038aa2d96e5404a47316f3870859"},{"commit":{"message":"Refine metrics, add additional instrumentation sites."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"44a6fc515d019d1e0ce8f0b3f3f7e87f56eb8dd0"},{"commit":{"message":"Card stats can be locally allocated; related cleanups."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"1b62612d58f4e23e0e0eee6c956c41222e646db7"},{"commit":{"message":"Merge branch 'master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"408cb7f5194b97c061b79f72a2a102e82b9aec45"},{"commit":{"message":"Fix a bug in instrumentation & assertions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"0f721d04d19b41870aefc523128feede2f6e977b"},{"commit":{"message":"Add basic logging of instrumentation data. Correct some\ninstrumentation code and related assertions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"5538175ddc138d29f875edb2db0e84c4a5fa21c5"},{"commit":{"message":"The beginnings of instrumentation for card statistics for GenShen.\nSome updates to comments related to card scanning."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"290468c75fa2fbba5561ff6814b1546772cd665f"},{"commit":{"message":"Merge branch 'openjdk:master' into JVM-1264"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"aec3ef61a150ffbd69a60937e577dca3865d1c67"},{"commit":{"message":"Leave cancel\/yield in ShenandoahScanRemeberedTask::do_work() disabled,\nas the change to where the yield is performed does not fix the crashing\nbehaviour. A ticket now tracks the issue."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"}],"sha":"1a2068e5165d61c77c7f28a8879bc2fc12137356"},{"commit":{"message":"Fix an issue with cacnellation in\nShenandoahScanRememberedTask::do_work(() where an item of work was\npulled off the worklist, but dropped on the floor without first\nprocessing it before returning.\n\nRemoved unused process_region() methods in ShenandoahScanRemembered, et\nal."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"d8619e28b01a7e5aac0aa8f9704875e94702fc5e"},{"commit":{"message":"Elaborate some comments; remove unused overreach related methods and commets. These will not be needed as a result of upcoming changes to process_clusters() where we will treat objects that start cards in a more uniform fashion in-line with the scan of dirty cards in the cluster being processed."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp"}],"sha":"0068179fc076494e0e2c69b83d40e819409554cc"}]