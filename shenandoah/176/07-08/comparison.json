{"files":[{"patch":"@@ -126,1 +126,1 @@\n-void HdrSeq::merge(HdrSeq* hdr2, bool clear_this) {\n+void HdrSeq::merge(HdrSeq& hdr2, bool clear_this) {\n@@ -129,1 +129,1 @@\n-      int* that_bucket = hdr2->_hdr[mag];\n+      int* that_bucket = hdr2._hdr[mag];\n@@ -134,1 +134,1 @@\n-          hdr2->_hdr[mag] = _hdr[mag];\n+          hdr2._hdr[mag] = _hdr[mag];\n@@ -142,1 +142,1 @@\n-          hdr2->_hdr[mag] = that_bucket;\n+          hdr2._hdr[mag] = that_bucket;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-  void merge(HdrSeq* hdr2, bool clear_this = true);\n+  void merge(HdrSeq& hdr2, bool clear_this = true);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNumberSeq.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -707,2 +707,2 @@\n-  HdrSeq _card_stats_scan_rs;\n-  HdrSeq _card_stats_update_refs;\n+  HdrSeq _card_stats_scan_rs[MAX_CARD_STAT_TYPE];\n+  HdrSeq _card_stats_update_refs[MAX_CARD_STAT_TYPE];\n@@ -725,0 +725,2 @@\n+  int _card_stats_log_counter[2] = {0, 0};\n+\n@@ -779,1 +781,1 @@\n-        return &_card_stats_scan_rs;\n+        return _card_stats_scan_rs;\n@@ -781,1 +783,1 @@\n-        return &_card_stats_update_refs;\n+        return _card_stats_update_refs;\n@@ -929,0 +931,4 @@\n+\n+  \/\/ Log given stats\n+  inline void log_card_stats(HdrSeq* stats) PRODUCT_RETURN;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -803,0 +803,13 @@\n+\/\/ Log given card stats \n+template<typename RememberedSet>\n+inline void ShenandoahScanRemembered<RememberedSet>::log_card_stats(HdrSeq* stats) {\n+  for (int i = 0; i < MAX_CARD_STAT_TYPE; i++) {\n+    log_info(gc, remset)(\"%18s: [ %8.2f %8.2f %8.2f %8.2f %8.2f ]\",\n+      _card_stats_name[i],\n+      stats[i].percentile(0), stats[i].percentile(25),\n+      stats[i].percentile(50), stats[i].percentile(75),\n+      stats[i].maximum());\n+  }\n+}\n+\n+\/\/ Log card stats for all nworkers for a specific phase t\n@@ -811,0 +824,7 @@\n+\n+  \/\/ Every so often, log the cumulative global stats\n+  if (++_card_stats_log_counter[t] >= ShenandoahCardStatsLogInterval) {\n+    _card_stats_log_counter[t] = 0;\n+    log_info(gc, remset)(\"Cumulative stats\");\n+    log_card_stats(cum_stats);\n+  }\n@@ -813,0 +833,1 @@\n+\/\/ Log card stats for given worker_id, & clear them after merging into given cumulative stats\n@@ -819,9 +840,3 @@\n-  for (int i = 0; i < MAX_CARD_STAT_TYPE; i++) {\n-    log_info(gc, remset)(\"%18s: [ %8.2f %8.2f %8.2f %8.2f %8.2f ]\",\n-      _card_stats_name[i],\n-      worker_card_stats[i].percentile(0), worker_card_stats[i].percentile(25),\n-      worker_card_stats[i].percentile(50), worker_card_stats[i].percentile(75),\n-      worker_card_stats[i].maximum());\n-    \/\/ Merge worker stats into the cumulative stats & clear worker stats\n-    merge_worker_card_stats_cumulative(worker_card_stats, cum_stats);\n-  }\n+  log_card_stats(worker_card_stats);\n+  \/\/ Merge worker stats into the cumulative stats & clear worker stats\n+  merge_worker_card_stats_cumulative(worker_card_stats, cum_stats);\n@@ -833,1 +848,3 @@\n-  worker_stats->merge(cum_stats);\n+  for (int i = 0; i < MAX_CARD_STAT_TYPE; i++) {\n+    worker_stats[i].merge(cum_stats[i]);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp","additions":27,"deletions":10,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -546,1 +546,4 @@\n-          \"Enable statistics collection related to clean & dirty cards\")\n+          \"Enable statistics collection related to clean & dirty cards\")    \\\n+                                                                            \\\n+  notproduct(int, ShenandoahCardStatsLogInterval, 50,                       \\\n+          \"Log cumulative card stats every so many cycles\")                 \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-void AbsSeq::merge(AbsSeq* abs2, bool clear_this) {\n+void AbsSeq::merge(AbsSeq& abs2, bool clear_this) {\n@@ -117,3 +117,3 @@\n-  abs2->_num += _num;\n-  abs2->_sum += _sum;\n-  abs2->_sum_of_squares += _sum_of_squares;\n+  abs2._num += _num;\n+  abs2._sum += _sum;\n+  abs2._sum_of_squares += _sum_of_squares;\n@@ -122,1 +122,1 @@\n-  assert(abs2->_alpha == _alpha, \"Caution: merge incompatible?\");\n+  assert(abs2._alpha == _alpha, \"Caution: merge incompatible?\");\n@@ -162,1 +162,1 @@\n-void NumberSeq::merge(NumberSeq* nseq2, bool clear_this) {\n+void NumberSeq::merge(NumberSeq& nseq2, bool clear_this) {\n@@ -166,2 +166,2 @@\n-  nseq2->_last = _last;   \/\/ this is newer than that\n-  nseq2->_maximum = MAX2(_maximum, nseq2->_maximum);\n+  nseq2._last = _last;   \/\/ this is newer than that\n+  nseq2._maximum = MAX2(_maximum, nseq2._maximum);\n@@ -172,2 +172,2 @@\n-    nseq2->_last = 0;\n-    nseq2->_maximum = 0;\n+    _last = 0;\n+    _maximum = 0;\n","filename":"src\/hotspot\/share\/utilities\/numberSeq.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-  void merge(AbsSeq* seq2, bool clear_this = true);\n+  void merge(AbsSeq& seq2, bool clear_this = true);\n@@ -110,1 +110,1 @@\n-  void merge(NumberSeq* seq2, bool clear_this = true);\n+  void merge(NumberSeq& seq2, bool clear_this = true);\n","filename":"src\/hotspot\/share\/utilities\/numberSeq.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}