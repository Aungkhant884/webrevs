{"files":[{"patch":"@@ -2114,12 +2114,4 @@\n-      JavaThread* java_thread = JavaThread::cast(thread);\n-      if (java_thread->thread_state() == _thread_in_Java) {\n-        \/\/ ThreadBlockInVM requires thread state to be _thread_in_vm.  If we are in Java, safely transition thread state.\n-        ThreadInVMfromJava transition(java_thread);\n-        \/\/ We need to provide a safepoint here.  Otherwise we might spin forever if a SP is pending.\n-        ThreadBlockInVM sp(JavaThread::cast(thread));\n-        SpinPause();\n-      } else {\n-        \/\/ We need to provide a safepoint here.  Otherwise we might spin forever if a SP is pending.\n-        ThreadBlockInVM sp(JavaThread::cast(thread));\n-        SpinPause();\n-      }\n+      \/\/ We need to provide a safepoint here, otherwise we might\n+      \/\/ spin forever if a SP is pending.\n+      ThreadBlockInVM sp(JavaThread::cast(thread));\n+      SpinPause();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"}]}