{"files":[{"patch":"@@ -99,0 +99,3 @@\n+    if (heap->mode()->is_generational() && region->affiliation() != ShenandoahRegionAffiliation::YOUNG_GENERATION) {\n+      continue;\n+    }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -269,14 +269,16 @@\n-      bool skip_live = false;\n-      bool marked;\n-      if (weak) {\n-        marked = mark_context->mark_weak(obj);\n-      } else {\n-        marked = mark_context->mark_strong(obj, \/* was_upgraded = *\/ skip_live);\n-      }\n-      if (marked) {\n-        bool pushed = q->push(ShenandoahMarkTask(obj, skip_live, weak));\n-        assert(pushed, \"overflow queue should always succeed pushing\");\n-\n-        if ((STRING_DEDUP == ENQUEUE_DEDUP) && ShenandoahStringDedup::is_candidate(obj)) {\n-          assert(ShenandoahStringDedup::is_enabled(), \"Must be enabled\");\n-          ShenandoahStringDedup::enqueue_candidate(obj);\n+      if (GENERATION != YOUNG || heap->is_in_young(obj)) {\n+        bool skip_live = false;\n+        bool marked;\n+        if (weak) {\n+          marked = mark_context->mark_weak(obj);\n+        } else {\n+          marked = mark_context->mark_strong(obj, \/* was_upgraded = *\/ skip_live);\n+        }\n+        if (marked) {\n+          bool pushed = q->push(ShenandoahMarkTask(obj, skip_live, weak));\n+          assert(pushed, \"overflow queue should always succeed pushing\");\n+\n+          if ((STRING_DEDUP == ENQUEUE_DEDUP) && ShenandoahStringDedup::is_candidate(obj)) {\n+            assert(ShenandoahStringDedup::is_enabled(), \"Must be enabled\");\n+            ShenandoahStringDedup::enqueue_candidate(obj);\n+          }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.inline.hpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -314,0 +314,1 @@\n+    r->set_affiliation(req.affiliation());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}