{"files":[{"patch":"@@ -443,0 +443,4 @@\n+  if (mode()->is_generational() && target_gen == YOUNG_GENERATION && is_aging_cycle()) {\n+    ShenandoahHeap::increase_object_age(copy_val, from_region->age() + 1);\n+  }\n+\n@@ -447,10 +451,2 @@\n-    if (mode()->is_generational()) {\n-      if (target_gen == OLD_GENERATION) {\n-        handle_old_evacuation(copy, size, from_region->is_young());\n-      } else if (target_gen == YOUNG_GENERATION) {\n-        if (is_aging_cycle()) {\n-          ShenandoahHeap::increase_object_age(copy_val, from_region->age() + 1);\n-        }\n-      } else {\n-        ShouldNotReachHere();\n-      }\n+    if (mode()->is_generational() && target_gen == OLD_GENERATION) {\n+      handle_old_evacuation(copy, size, from_region->is_young());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"}]}