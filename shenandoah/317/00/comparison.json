{"files":[{"patch":"@@ -397,1 +397,13 @@\n-  assert(old_available >= old_consumed, \"Cannot consume more than is available\");\n+\n+  if (old_available < old_consumed) {\n+    \/\/ This can happen due to round-off errors when adding the results of truncated integer arithmetic.\n+    \/\/ We've already truncated old_evacuated_committed.  Truncate young_advance_promoted_reserve_used here.\n+    assert(young_advance_promoted_reserve_used <= (33 * (old_available - old_evacuated_committed)) \/ 32,\n+           \"Round-off errors should be less than 3.125%%, committed: \" SIZE_FORMAT \", reserved: \" SIZE_FORMAT,\n+           young_advance_promoted_reserve_used, old_available - old_evacuated_committed);\n+    young_advance_promoted_reserve_used = old_available - old_evacuated_committed;\n+    old_consumed = old_evacuated_committed + young_advance_promoted_reserve_used;\n+  }\n+\n+  assert(old_available >= old_consumed, \"Cannot consume (\" SIZE_FORMAT \") more than is available (\" SIZE_FORMAT \")\",\n+         old_consumed, old_available);\n@@ -602,0 +614,2 @@\n+    size_t selected_regions = 0;\n+    size_t selected_live = 0;\n@@ -610,0 +624,2 @@\n+        selected_regions++;\n+        selected_live += region_live_data;\n@@ -618,0 +634,3 @@\n+    log_info(gc)(\"Preselected \" SIZE_FORMAT \" regions containing \" SIZE_FORMAT \" live bytes,\"\n+                 \" consuming: \" SIZE_FORMAT \" of budgeted: \" SIZE_FORMAT,\n+                 selected_regions, selected_live, old_consumed, old_available);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"}]}