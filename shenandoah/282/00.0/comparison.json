{"files":[{"patch":"@@ -169,1 +169,1 @@\n-  \/\/ that checks that the *(rfp+frame::interpreter_frame_last_sp) == NULL.\n+  \/\/ that checks that the *(rfp+frame::interpreter_frame_last_sp) == nullptr.\n@@ -482,1 +482,1 @@\n-\/\/ Upon entry to cmpxchg_oop, it is assured that new_val equals NULL\n+\/\/ Upon entry to cmpxchg_oop, it is assured that new_val equals null\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -54,2 +55,6 @@\n-  if (UseZGC) {\n-    return NA;\n+ if (UseZGC) {\n+    if (ZGenerational) {\n+      return ZMinor;\n+    } else {\n+      return NA;\n+    }\n@@ -57,1 +62,0 @@\n-\n@@ -71,1 +75,5 @@\n-    return Z;\n+    if (ZGenerational) {\n+      return ZMajor;\n+    } else {\n+      return Z;\n+    }\n@@ -75,1 +83,6 @@\n-    return Shenandoah;\n+#if INCLUDE_SHENANDOAHGC\n+    if (strcmp(ShenandoahGCMode, \"generational\") == 0) {\n+      return Shenandoah;\n+    }\n+#endif\n+    return NA;\n","filename":"src\/hotspot\/share\/gc\/shared\/gcConfiguration.cpp","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -955,0 +955,1 @@\n+    ShenandoahSuspendibleThreadSetJoiner sts_join;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -579,2 +579,2 @@\n-  _stw_memory_manager(\"Shenandoah Pauses\", \"end of GC pause\"),\n-  _cycle_memory_manager(\"Shenandoah Cycles\", \"end of GC cycle\"),\n+  _stw_memory_manager(\"Shenandoah Pauses\"),\n+  _cycle_memory_manager(\"Shenandoah Cycles\"),\n@@ -2222,1 +2222,1 @@\n-      size_t cur = Atomic::fetch_and_add(&_index, stride, memory_order_relaxed);\n+      size_t cur = Atomic::fetch_then_add(&_index, stride, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -475,1 +475,1 @@\n-    size_t cur = Atomic::fetch_and_add(&_claimed, stride, memory_order_relaxed);\n+    size_t cur = Atomic::fetch_then_add(&_claimed, stride, memory_order_relaxed);\n@@ -499,1 +499,1 @@\n-    size_t cur = Atomic::fetch_and_add(&_claimed, stride, memory_order_relaxed);\n+    size_t cur = Atomic::fetch_then_add(&_claimed, stride, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+          \"end of GC cycle\",\n@@ -82,0 +83,1 @@\n+          notification_message,\n@@ -89,2 +91,1 @@\n-          \/* countCollection = *\/         true,\n-          \/* notificationMessage = *\/     notification_message\n+          \/* countCollection = *\/         true\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-      size_t v = Atomic::fetch_and_add(&_claimed, 1u, memory_order_relaxed);\n+      size_t v = Atomic::fetch_then_add(&_claimed, 1u, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,0 @@\n-runtime\/Thread\/TestAlwaysPreTouchStacks.java 8305416 generic-all\n@@ -142,1 +141,2 @@\n-gtest\/NMTGtests.java 8306561 aix-ppc64\n+gtest\/NMTGtests.java#nmt-detail 8306561 aix-ppc64\n+gtest\/NMTGtests.java#nmt-summary 8306561 aix-ppc64\n@@ -150,2 +150,0 @@\n-vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop001\/TestDescription.java 7034630 generic-all\n-\n@@ -157,0 +155,1 @@\n+vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/TestDescription.java 8307462 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}