{"files":[{"patch":"@@ -924,10 +924,14 @@\n-  size_t waste = plab->waste();\n-  HeapWord* top = plab->top();\n-  plab->retire();\n-  if (top != NULL && plab->waste() > waste) {\n-    \/\/ If retiring the plab created a filler object, then we\n-    \/\/ need to register it with our card scanner so it can\n-    \/\/ safely walk the region backing the plab.\n-    log_debug(gc)(\"retire_plab() is registering remnant of size \" SIZE_FORMAT \" at \" PTR_FORMAT,\n-                  plab->waste() - waste, p2i(top));\n-    card_scan()->register_object_wo_lock(top);\n+  if (!mode()->is_generational()) {\n+    plab->retire();\n+  } else {\n+    size_t waste = plab->waste();\n+    HeapWord* top = plab->top();\n+    plab->retire();\n+    if (top != NULL && plab->waste() > waste) {\n+      \/\/ If retiring the plab created a filler object, then we\n+      \/\/ need to register it with our card scanner so it can\n+      \/\/ safely walk the region backing the plab.\n+      log_debug(gc)(\"retire_plab() is registering remnant of size \" SIZE_FORMAT \" at \" PTR_FORMAT,\n+                    plab->waste() - waste, p2i(top));\n+      card_scan()->register_object_wo_lock(top);\n+    }\n@@ -1244,1 +1248,1 @@\n-    gclab->retire();\n+    ShenandoahHeap::heap()->retire_plab(gclab);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"}]}