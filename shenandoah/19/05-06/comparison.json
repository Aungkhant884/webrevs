{"files":[{"patch":"@@ -24,0 +24,1 @@\n+#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -925,1 +925,1 @@\n-    ShenandoahHeap::heap()->card_scan()->register_object(result, req.actual_size());\n+    ShenandoahHeap::heap()->card_scan()->register_object(result);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -418,1 +418,1 @@\n-     ShenandoahHeap::heap()->card_scan()->register_object(bottom(), obj->size());\n+      ShenandoahHeap::heap()->card_scan()->register_object(bottom());\n@@ -451,1 +451,1 @@\n-            heap->card_scan()->register_object(fill_addr, fill_size);\n+             heap->card_scan()->register_object(fill_addr);\n@@ -458,1 +458,1 @@\n-          heap->card_scan()->register_object(obj_addr, obj->size());\n+          heap->card_scan()->register_object(obj_addr);\n@@ -476,1 +476,1 @@\n-        heap->card_scan()->register_object(fill_addr, fill_size);\n+        heap->card_scan()->register_object(fill_addr);\n@@ -831,1 +831,1 @@\n-    heap->card_scan()->register_object(bottom(), obj->size());\n+    heap->card_scan()->register_object(bottom());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+#include \"precompiled.hpp\"\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkClosures.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+#include \"precompiled.hpp\"\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,2 @@\n+#include \"precompiled.hpp\"\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -742,6 +742,1 @@\n-\n-  \/\/ Note that length_in_bytes is unused in the current implementation.  Its presence\n-  \/\/ was required for a more general solution that provided more lookup services than\n-  \/\/ are currently implemented.\n-\n-  void register_object(HeapWord *address, uint32_t length_in_words);\n+  void register_object(HeapWord* address);\n@@ -897,1 +892,1 @@\n-  void register_object(HeapWord *addr, uint32_t length_in_words);\n+  void register_object(HeapWord *addr);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -138,2 +138,1 @@\n-ShenandoahCardCluster<RememberedSet>::register_object(HeapWord *address, uint32_t length_in_words) {\n-#ifdef FAST_REMEMBERED_SET_SCANNING\n+ShenandoahCardCluster<RememberedSet>::register_object(HeapWord* address) {\n@@ -154,5 +153,0 @@\n-\n-#else  \/\/ FAST_REMEMBERED_SET_SCANNING\n-  \/\/ Do nothing for now as we have a brute-force implementation\n-  \/\/ of findSpanningObject().\n-#endif \/\/ FAST_REMEMBERED_SET_SCANNING\n@@ -413,3 +407,3 @@\n-ShenandoahScanRemembered<RememberedSet>::register_object(HeapWord *addr, uint32_t length_in_words) {\n-    _scc->register_object(addr, length_in_words);\n-  }\n+ShenandoahScanRemembered<RememberedSet>::register_object(HeapWord *addr) {\n+  _scc->register_object(addr);\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.inline.hpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}