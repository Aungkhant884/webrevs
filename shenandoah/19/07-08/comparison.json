{"files":[{"patch":"@@ -760,1 +760,1 @@\n-  __ mov(rscratch2, ShenandoahHeap::MARKING);\n+  __ mov(rscratch2, ShenandoahHeap::YOUNG_MARKING | ShenandoahHeap::OLD_MARKING);\n","filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -994,1 +994,2 @@\n-  assert(!heap->has_forwarded_objects(), \"Should not have forwarded objects here\");\n+  assert(!heap->has_forwarded_objects() || heap->is_concurrent_old_mark_in_progress(),\n+         \"Should not have forwarded objects during final mark (unless old gen concurrent mark is running)\");\n@@ -1004,1 +1005,2 @@\n-  assert(!heap->has_forwarded_objects(), \"Should not have forwarded objects here\");\n+  assert(!heap->has_forwarded_objects() || heap->is_concurrent_old_mark_in_progress(),\n+         \"Should not have forwarded objects concurrent mark (unless old gen concurrent mark is running\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -542,1 +542,2 @@\n-  if (is_concurrent_mark_in_progress())        st->print(\"marking, \");\n+  if (is_concurrent_old_mark_in_progress())    st->print(\"old marking, \");\n+  if (is_concurrent_young_mark_in_progress())  st->print(\"young marking, \");\n@@ -1989,2 +1990,2 @@\n-    \/\/ With M7 we no longer update references in the global\/old cycle.\n-    assert(_heap->young_generation()->is_mark_complete(), \"Expected complete marking\");\n+    \/\/ We update references for global and young collections.\n+    assert(_heap->active_generation()->is_mark_complete(), \"Expected complete marking\");\n@@ -2334,17 +2335,0 @@\n-\n-ShenandoahGeneration* ShenandoahHeap::get_generation(oop obj) const {\n-  return get_generation(heap_region_containing(obj));\n-}\n-\n-ShenandoahGeneration* ShenandoahHeap::get_generation(ShenandoahHeapRegion* region) const {\n-  if (region->affiliation() == YOUNG_GENERATION) {\n-    return young_generation();\n-  }\n-\n-  if (region->affiliation() == OLD_GENERATION) {\n-    return old_generation();\n-  }\n-\n-  \/\/ TODO?\n-  return global_generation();\n-}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -386,1 +386,0 @@\n-  void prepare_evacuation(bool concurrent);\n@@ -430,2 +429,1 @@\n-  ShenandoahGeneration*      get_generation(oop obj) const;\n-  ShenandoahGeneration*      get_generation(ShenandoahHeapRegion* region) const;\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -276,4 +276,1 @@\n-  \/\/ HEY! Should we just set the generation instance directly on the region?\n-  \/\/ Rather than setting its affiliation and having this extra indirection to\n-  \/\/ get to the generation?\n-  assert(ShenandoahHeap::heap()->get_generation(this)->is_mark_complete(), \"Marking should be complete here.\");\n+  assert(ShenandoahHeap::heap()->active_generation()->is_mark_complete(), \"Marking should be complete here.\");\n@@ -440,1 +437,1 @@\n-    assert(heap->get_generation(this)->is_mark_complete(), \"sanity\");\n+    assert(heap->active_generation()->is_mark_complete(), \"sanity\");\n@@ -822,1 +819,1 @@\n-  assert(heap->get_generation(this)->is_mark_complete(), \"sanity\");\n+  assert(heap->active_generation()->is_mark_complete(), \"sanity\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-                                       bool strdedup) {\n+                                       bool strdedup, bool update_refs) {\n@@ -64,1 +64,1 @@\n-    if (heap->has_forwarded_objects()) {\n+    if (update_refs) {\n@@ -82,1 +82,1 @@\n-    if (heap->has_forwarded_objects()) {\n+    if (update_refs) {\n@@ -182,0 +182,1 @@\n+  bool update_refs = ShenandoahHeap::heap()->has_forwarded_objects();\n@@ -185,1 +186,1 @@\n-        mark_loop_prework<YOUNG, true>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<YOUNG, true>(worker_id, terminator, rp, strdedup, update_refs);\n@@ -187,1 +188,1 @@\n-        mark_loop_prework<YOUNG, false>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<YOUNG, false>(worker_id, terminator, rp, strdedup, update_refs);\n@@ -192,0 +193,1 @@\n+      \/\/ Old generation collection only performs marking, it should to update references.\n@@ -193,1 +195,1 @@\n-        mark_loop_prework<OLD, true>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<OLD, true>(worker_id, terminator, rp, strdedup, false);\n@@ -195,1 +197,1 @@\n-        mark_loop_prework<OLD, false>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<OLD, false>(worker_id, terminator, rp, strdedup, false);\n@@ -201,1 +203,1 @@\n-        mark_loop_prework<GLOBAL, true>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<GLOBAL, true>(worker_id, terminator, rp, strdedup, update_refs);\n@@ -203,1 +205,1 @@\n-        mark_loop_prework<GLOBAL, false>(worker_id, terminator, rp, strdedup);\n+        mark_loop_prework<GLOBAL, false>(worker_id, terminator, rp, strdedup, update_refs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -91,1 +91,2 @@\n-  void mark_loop_prework(uint worker_id, TaskTerminator *terminator, ShenandoahReferenceProcessor *rp, bool strdedup);\n+  void mark_loop_prework(uint worker_id, TaskTerminator *terminator,\n+                         ShenandoahReferenceProcessor *rp, bool strdedup, bool update_refs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -242,1 +242,1 @@\n-    assert(size == 0 || !_heap->has_forwarded_objects(), \"Forwarded objects are not expected here\");\n+    assert(size == 0 || !_heap->has_forwarded_objects() || _heap->is_concurrent_old_mark_in_progress(), \"Forwarded objects are not expected here\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}