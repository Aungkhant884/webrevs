{"files":[{"patch":"@@ -392,0 +392,1 @@\n+      assert(_generation->is_global(), \"Expected global collection here\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -200,0 +200,1 @@\n+  }\n@@ -201,0 +202,1 @@\n+  if (heap->has_forwarded_objects()) {\n@@ -785,1 +787,0 @@\n-        \/\/ TODO: we do not need to run update-references following evacuation if collection_set->is_empty().\n@@ -788,2 +789,0 @@\n-        \/\/ From here on, we need to update references.\n-        heap->set_has_forwarded_objects(true);\n@@ -797,0 +796,6 @@\n+        \/\/ Generational mode may promote objects in place during the evacuation phase.\n+        \/\/ If that is the only reason we are evacuating, we don't need to update references\n+        \/\/ and there will be no forwarded objects on the heap.\n+        heap->set_has_forwarded_objects(!heap->collection_set()->is_empty());\n+\n+        \/\/ Arm nmethods\/stack for concurrent processing\n@@ -832,2 +837,0 @@\n-        \/\/ From here on, we need to update references.\n-        heap->set_has_forwarded_objects(true);\n@@ -841,0 +844,3 @@\n+        \/\/ From here on, we need to update references.\n+        heap->set_has_forwarded_objects(true);\n+\n@@ -1292,1 +1298,2 @@\n-  ShenandoahHeap::heap()->set_concurrent_weak_root_in_progress(false);\n+  heap->set_evacuation_in_progress(false);\n+  heap->set_concurrent_weak_root_in_progress(false);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -260,0 +260,5 @@\n+      \/\/ Update collector state regardless of whether or not there are forwarded objects\n+      heap->set_evacuation_in_progress(false);\n+      heap->set_concurrent_weak_root_in_progress(false);\n+      heap->set_concurrent_strong_root_in_progress(false);\n+\n@@ -400,1 +405,0 @@\n-    heap->set_has_forwarded_objects(true);\n@@ -405,0 +409,2 @@\n+\n+    heap->set_has_forwarded_objects(!heap->collection_set()->is_empty());\n@@ -432,4 +438,0 @@\n-  heap->set_evacuation_in_progress(false);\n-  heap->set_concurrent_weak_root_in_progress(false);\n-  heap->set_concurrent_strong_root_in_progress(false);\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -803,1 +803,1 @@\n-        expected = ShenandoahHeap::HAS_FORWARDED | ShenandoahHeap::EVACUATION;\n+        expected = ShenandoahHeap::EVACUATION;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}