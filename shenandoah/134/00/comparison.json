{"files":[{"patch":"@@ -80,3 +80,2 @@\n-\/\/ Returns true iff the chosen collection set includes old-gen regions\n-bool ShenandoahHeuristics::choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics) {\n-  bool result = false;\n+void ShenandoahHeuristics::choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics) {\n+\n@@ -187,3 +186,1 @@\n-      if (old_heuristics->prime_collection_set(collection_set)) {\n-        result = true;\n-      }\n+      old_heuristics->prime_collection_set(collection_set);\n@@ -209,1 +206,1 @@\n-    \/\/ TODO: younng_available can include available (between top() and end()) within each young region that is not\n+    \/\/ TODO: young_available can include available (between top() and end()) within each young region that is not\n@@ -359,1 +356,0 @@\n-  return result;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -156,2 +156,1 @@\n-  \/\/ Return true iff the chosen collection set includes at least one old-gen region.\n-  virtual bool choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics);\n+  virtual void choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-bool ShenandoahOldHeuristics::choose_collection_set(ShenandoahCollectionSet* collection_set,\n+void ShenandoahOldHeuristics::choose_collection_set(ShenandoahCollectionSet* collection_set,\n@@ -163,1 +163,0 @@\n-  return false;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,2 +82,1 @@\n-  \/\/ Return true iff chosen collection set includes at least one old-gen HeapRegion.\n-  virtual bool choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics) override;\n+  virtual void choose_collection_set(ShenandoahCollectionSet* collection_set, ShenandoahOldHeuristics* old_heuristics) override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -697,1 +697,1 @@\n-    bool mixed_evac = _generation->prepare_regions_and_collection_set(true \/*concurrent*\/);\n+    _generation->prepare_regions_and_collection_set(true \/*concurrent*\/);\n@@ -719,2 +719,0 @@\n-    heap->set_mixed_evac(mixed_evac);\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -224,3 +224,2 @@\n-\/\/ Returns true iff the chosen collection set includes a mix of young-gen and old-gen regions.\n-bool ShenandoahGeneration::prepare_regions_and_collection_set(bool concurrent) {\n-  bool result;\n+void  ShenandoahGeneration::prepare_regions_and_collection_set(bool concurrent) {\n+\n@@ -336,1 +335,1 @@\n-    result = _heuristics->choose_collection_set(heap->collection_set(), heap->old_heuristics());\n+    _heuristics->choose_collection_set(heap->collection_set(), heap->old_heuristics());\n@@ -362,1 +361,0 @@\n-  return result;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-  virtual bool prepare_regions_and_collection_set(bool concurrent);\n+  virtual void prepare_regions_and_collection_set(bool concurrent);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -500,1 +500,0 @@\n-  _mixed_evac(false),\n@@ -502,1 +501,0 @@\n-  _evacuation_allowance(0),\n@@ -2408,1 +2406,0 @@\n-  bool _mixed_evac;             \/\/ true iff most recent evacuation includes old-gen HeapRegions\n@@ -2411,1 +2408,1 @@\n-  ShenandoahUpdateHeapRefsTask(ShenandoahRegionIterator* regions, bool mixed_evac) :\n+  explicit ShenandoahUpdateHeapRefsTask(ShenandoahRegionIterator* regions) :\n@@ -2414,2 +2411,1 @@\n-    _regions(regions),\n-    _mixed_evac(mixed_evac)\n+    _regions(regions)\n@@ -2453,1 +2449,1 @@\n-            if (!_mixed_evac) {\n+            if (!is_mixed) {\n@@ -2529,1 +2525,1 @@\n-    ShenandoahUpdateHeapRefsTask<true> task(&_update_refs_iterator, _mixed_evac);\n+    ShenandoahUpdateHeapRefsTask<true> task(&_update_refs_iterator);\n@@ -2532,1 +2528,1 @@\n-    ShenandoahUpdateHeapRefsTask<false> task(&_update_refs_iterator, _mixed_evac);\n+    ShenandoahUpdateHeapRefsTask<false> task(&_update_refs_iterator);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -154,1 +154,0 @@\n-  bool _mixed_evac;                      \/\/ true iff most recent evac included at least one old-gen HeapRegion\n@@ -157,2 +156,0 @@\n-  size_t _evacuation_allowance;          \/\/ amount by which young-gen usage may temporarily exceed young-gen capacity\n-\n@@ -173,4 +170,0 @@\n-  void set_mixed_evac(bool mixed_evac) {\n-    _mixed_evac = mixed_evac;\n-  }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-bool ShenandoahOldGeneration::prepare_regions_and_collection_set(bool concurrent) {\n+void ShenandoahOldGeneration::prepare_regions_and_collection_set(bool concurrent) {\n@@ -207,1 +207,0 @@\n-  return false;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  bool prepare_regions_and_collection_set(bool concurrent) override;\n+  void prepare_regions_and_collection_set(bool concurrent) override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}