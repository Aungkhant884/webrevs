{"files":[{"patch":"@@ -347,18 +347,0 @@\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-  if (heap->is_aging_cycle()) {\n-    ShenandoahMarkingContext* ctx = heap->complete_marking_context();\n-\n-    for (size_t i = 0; i < heap->num_regions(); i++) {\n-      ShenandoahHeapRegion *r = heap->get_region(i);\n-      if (r->is_active() && r->is_young()) {\n-        HeapWord* tams = ctx->top_at_mark_start(r);\n-        HeapWord* top = r->top();\n-        if (top > tams) {\n-          r->reset_age();\n-        } else {\n-          r->increment_age();\n-        }\n-      }\n-    }\n-  }\n-\n@@ -1225,0 +1207,19 @@\n+\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+  if (heap->is_aging_cycle()) {\n+    ShenandoahMarkingContext* ctx = heap->complete_marking_context();\n+\n+    for (size_t i = 0; i < heap->num_regions(); i++) {\n+      ShenandoahHeapRegion *r = heap->get_region(i);\n+      if (r->is_active() && r->is_young()) {\n+        HeapWord* tams = ctx->top_at_mark_start(r);\n+        HeapWord* top = r->top();\n+        if (top > tams) {\n+          r->reset_age();\n+        } else {\n+          r->increment_age();\n+        }\n+      }\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"}]}