{"files":[{"patch":"@@ -88,0 +88,14 @@\n+\n+const char* generation_name(GenerationMode mode) {\n+  switch (mode) {\n+    case GenerationMode::GLOBAL:\n+      return \"Global\";\n+    case GenerationMode::OLD:\n+      return \"Old\";\n+    case GenerationMode::YOUNG:\n+      return \"Young\";\n+    default:\n+      ShouldNotReachHere();\n+      return nullptr;\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahGenerationalMode.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+const char* generation_name(GenerationMode mode);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahGenerationalMode.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -213,0 +213,6 @@\n+\n+        \/\/ Don't want to spin in this loop and start a cycle every time, so\n+        \/\/ clear requested gc cause. This creates a race with callers of the\n+        \/\/ blocking 'request_gc' method, but there it loops and resets the\n+        \/\/ '_requested_gc_cause' until a full cycle is completed.\n+        _requested_gc_cause = GCCause::_no_gc;\n@@ -216,0 +222,4 @@\n+        log_info(gc)(\"Resume old gc: marking=%s, preparing=%s\",\n+                     BOOL_TO_STR(heap->is_concurrent_old_mark_in_progress()),\n+                     BOOL_TO_STR(heap->is_concurrent_prep_for_mixed_evacuation_in_progress()));\n+\n@@ -220,6 +230,0 @@\n-\n-      \/\/ Don't want to spin in this loop and start a cycle every time, so\n-      \/\/ clear requested gc cause. This creates a race with callers of the\n-      \/\/ blocking 'request_gc' method, but there it loops and resets the\n-      \/\/ '_requested_gc_cause' until a full cycle is completed.\n-      _requested_gc_cause = GCCause::_no_gc;\n@@ -757,1 +761,1 @@\n-    log_info(gc)(\"Preempting old generation mark to allow young GC.\");\n+    log_info(gc)(\"Preempting old generation mark to allow %s GC.\", generation_name(generation));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}