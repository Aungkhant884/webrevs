{"files":[{"patch":"@@ -2465,9 +2465,1 @@\n-                ShenandoahHeapRegion* start_region = r->humongous_start_region();\n-                oop obj = cast_to_oop(start_region->bottom());\n-                size_t obj_size = obj->size();\n-                HeapWord* end_of_object = start_region->bottom() + obj_size;\n-                HeapWord* start_of_scan = r->bottom();\n-                size_t card_size_in_words = CardTable::card_size_in_words();\n-                size_t words_to_scan = end_of_object - start_of_scan;\n-                size_t size_up = (words_to_scan - 1 + card_size_in_words) & ~(card_size_in_words - 1);\n-                r->oop_iterate_humongous_slice(&cl, false, start_of_scan, size_up, true, CONCURRENT);\n+                r->oop_iterate_humongous(&cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -620,4 +620,1 @@\n-    while (num_cards-- > 0) {\n-      obj->oop_iterate(blk, MemRegion(start, start + CardTable::card_size_in_words()));\n-      start += CardTable::card_size_in_words();\n-    }\n+    obj->oop_iterate(blk, MemRegion(start, start + num_cards * CardTable::card_size_in_words()));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}