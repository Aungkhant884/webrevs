{"files":[{"patch":"@@ -75,14 +75,0 @@\n-class ShenandoahGlobalCoalesceAndFill : public ShenandoahHeapRegionClosure {\n- public:\n-  virtual void heap_region_do(ShenandoahHeapRegion* region) override {\n-    \/\/ old region is not in the collection set and was not immediately trashed\n-    if (region->is_old() && region->is_active() && !region->is_humongous()) {\n-      region->oop_fill_and_coalesce();\n-    }\n-  }\n-\n-  virtual bool is_thread_safe() override {\n-    return true;\n-  }\n-};\n-\n@@ -1071,3 +1057,1 @@\n-  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n-  ShenandoahGlobalCoalesceAndFill coalesce;\n-  heap->parallel_heap_region_iterate(&coalesce);\n+  ShenandoahHeap::heap()->coalesce_and_fill_old_regions();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -137,0 +137,4 @@\n+      if (heap->mode()->is_generational() && _generation->generation_mode() == GLOBAL) {\n+        op_global_coalesce_and_fill();\n+      }\n+\n@@ -285,0 +289,4 @@\n+void ShenandoahDegenGC::op_global_coalesce_and_fill() {\n+  ShenandoahHeap::heap()->coalesce_and_fill_old_regions();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+  void op_global_coalesce_and_fill();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -946,0 +946,18 @@\n+void ShenandoahHeap::coalesce_and_fill_old_regions() {\n+  class ShenandoahGlobalCoalesceAndFill : public ShenandoahHeapRegionClosure {\n+   public:\n+    virtual void heap_region_do(ShenandoahHeapRegion* region) override {\n+      \/\/ old region is not in the collection set and was not immediately trashed\n+      if (region->is_old() && region->is_active() && !region->is_humongous()) {\n+        region->oop_fill_and_coalesce();\n+      }\n+    }\n+\n+    virtual bool is_thread_safe() override {\n+      return true;\n+    }\n+  };\n+  ShenandoahGlobalCoalesceAndFill coalesce;\n+  parallel_heap_region_iterate(&coalesce);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -710,0 +710,1 @@\n+  void coalesce_and_fill_old_regions();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}