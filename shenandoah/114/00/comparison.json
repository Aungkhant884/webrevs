{"files":[{"patch":"@@ -121,1 +121,1 @@\n-      if (_generation->generation_mode() == YOUNG || (_generation->generation_mode() == GLOBAL && ShenandoahVerify)) {\n+      if (heap->mode()->is_generational() && (_generation->generation_mode() == YOUNG || (_generation->generation_mode() == GLOBAL && ShenandoahVerify))) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -298,1 +298,6 @@\n-        _heap->expend_young_evac(size * HeapWordSize);\n+        if (_heap->mode()->is_generational()) {\n+          _heap->expend_young_evac(size * HeapWordSize);\n+        } else {\n+          \/\/ If we are not in generational mode, we still need to count this allocation as used memory.\n+          _heap->young_generation()->increase_used(size * HeapWordSize);\n+        }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}