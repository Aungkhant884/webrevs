{"files":[{"patch":"@@ -525,1 +525,1 @@\n-    \/\/ old gc cycle is still completed and we have to deal with this\n+    \/\/ old gc cycle is still completed, and we have to deal with this\n@@ -749,1 +749,1 @@\n-  return generation == YOUNG && _allow_old_preemption.is_set();\n+  return generation == YOUNG && _allow_old_preemption.try_unset();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,2 +123,11 @@\n-  _allow_preemption.unset();\n-  if (check_cancellation_and_abort(ShenandoahDegenPoint::_degenerated_mark)) return false;\n+  if (!_allow_preemption.try_unset()) {\n+    \/\/ The regulator thread has unset the preemption guard. That thread will shortly cancel\n+    \/\/ the gc, but the control thread is now racing it. Wait until this thread sees the cancellation.\n+    while (!heap->cancelled_gc()) {\n+      SpinPause();\n+    }\n+  }\n+\n+  if (check_cancellation_and_abort(ShenandoahDegenPoint::_degenerated_mark)) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}