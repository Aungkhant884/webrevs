[{"commit":{"message":"Respond to reviewer feedback"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"28a53a86171c21365e2bc1d6bf079aff346ee6fa"},{"commit":{"message":"Fix whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"}],"sha":"f5b3e0dbfe1257500c54c8ac80c394a5fb4f28f4"},{"commit":{"message":"Merge remote-tracking branch 'GitFarmBranch\/enforce-max-old-regions' into enforce-max-regions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"178163fbaa7843ce69b479b1ed97ab5a06e79c69"},{"commit":{"message":"Remove instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"86eca09f493b750bdd621143e8afc7dfa5aaa6e4"},{"commit":{"message":"Fixup region budgeting errors\n\nInitial division between Young and Old must align on heap region\nboundaries.  In full GC, unadjust available after full GC completes\nbecause regions loaned from old-gen cannot be reclaimed until after full\nGC has sifted through the live memory."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"0ff0135e718516f10db8f92803380b9497dd1fea"},{"commit":{"message":"Fix spelling error in assertion symbol\n\nA misspelled symbol resulted in compile-time error for debug builds,\nnow fixed."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"98fd2c6851ba8f58873ff5e1b088b2fa50e76ecf"},{"commit":{"message":"Enforce bounds on regions per generation\n\nThis adds code to ShenandoahVerifier, adds specific log messages, and\nintroduces new code to force compliance with bounds on the number of\nheap regions affiliated with each generation.  This was accidentally not\nenforced previously.  The observed consequence of failing to enforce\nthis constraint was that allocations were failing even though the total\nbytes available within particular regions was very large (over 10 GBytes\nin some cases)."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGlobalGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"399e4025ba445d0065318bd7cfe249913c6b15ef"}]