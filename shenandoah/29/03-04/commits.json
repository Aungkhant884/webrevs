[{"commit":{"message":"Refactor ShenandoahOldHeuristics\n\nCode reviewers of the draft mixed-evacuation pull request raised a concern\nabout entanglement between young-gen and old-gen heuristics.  In response to\nsuggestions by reviewers, this patch refactors the old-gen heuristics\nimplementation as follows:\n\n1. Add old_heuristics argument and pass it so we no longer depend on\n   _old_heuristics field.\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\"\n\n2. Hoist test for should_defer_gc() into\n   ShenandoahRegulatorThread::start_old_cycle().  Remove all other\n   invocations of should_defer_gc().\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\"\n\n3. Remove _old_heuristics field and constructor and initializer\n   argument from ShenandoahPassiveHeuristics,\n   ShenandoahStaticHeuristics, ShenandoahAdaptiveHeuristics,\n   ShenandoahAggresiveHeuristics,\n   ShenandoahMode::initialize_heuristics(),\n   ShenandoahPassiveMode:::initialize_heuristics(),\n   ShenandoahGeneration::initialize_heuristics().\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\".  Note that GC behavior\n   changed a little in run-milestone8-github.  Without confirmed\n   review of output files, my impression is that full GC triggered\n   earlier, at GC(101), and piggyback collections each processed fewer\n   old-gen candidates (18 rather than 30).\n\n4. Introduce a new ShenandoahOldHeuristics subclass of\n   ShenandoahHeuristics.  Move certain old-gen specific methods there,\n   including: prime_collection_set() (renamed from\n   prime_collection_set_with_old_candidates()),\n   prepare_for_old_collection(), start_old_evacuations(),\n   unprocessed_old_collection_candidates(),\n   next_old_collection_candidates(),\n   consume_old_collection_candidates(),\n   old_coalesce_and_fill_candidates(),\n   get_coalesce_and_fill_candidates(), should_defer_gc().\n   Remove the _old_heuristics argument from prime_collection_set() and\n   prepare_for_old_collection(); adjust the invocations.\n\n5. Make the following subclasses of ShenandoahOldHeuristics.  In the\n   initial implementation, these subclasses have the same behavior\n   as the young-gen heuristics from which they were copied.  Future\n   refinement may result in tailored behavior of the old-gen\n   versions of each heuristic: ShenandoahAdaptiveOldHeuristics,\n   ShenandoahAggresiveOldHeuristics, ShenandoahCompactHeuristics,\n   ShenandoahPassiveOldHeuristics, ShenandoahStaticOldHeuristics."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.hpp"}],"sha":"c883f2374a046fc755bc6f448e548c20e606d1e7"}]