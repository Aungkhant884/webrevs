{"files":[{"patch":"@@ -238,2 +238,2 @@\n-  \/\/ Fill in buffer with all of the old-collection regions that were identified at the end of the most recenet old-gen\n-  \/\/ mark to require their unamrked objects to be coalesced and filled.  The buffer array must have at least\n+  \/\/ Fill in buffer with all of the old-collection regions that were identified at the end of the most recent old-gen\n+  \/\/ mark to require their unmarked objects to be coalesced and filled.  The buffer array must have at least\n@@ -241,1 +241,1 @@\n-  \/\/ end of the array. \n+  \/\/ end of the array.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -417,1 +417,1 @@\n-  \/\/ I expect this to be invoked only from within threads that are doing old-gen GC, and I expect\n+  \/\/ Expect this to be invoked only from within threads perfoming old-gen GC, and expect\n@@ -421,2 +421,0 @@\n-  HeapWord* fill_addr = NULL;\n-  size_t fill_size = 0;\n@@ -426,5 +424,0 @@\n-      if (fill_addr != NULL) {\n-        ShenandoahHeap::fill_with_object(fill_addr, fill_size);\n-        heap->card_scan()->coalesce_objects(fill_addr, fill_size);\n-        fill_addr = NULL;\n-      }\n@@ -434,13 +427,7 @@\n-      \/\/ Object is not marked, accumulate it into span of unmarked objects to be coalesced and filled\n-\n-      \/\/ TODO: We can optimize this.  Don't visit each of possibly many consecutive unmarked objects.\n-      \/\/ Instead, skip to the following marked object, as indicated by the first following mark bit in\n-      \/\/ marking_context.\n-      int size = obj->size();\n-      if (fill_addr == NULL) {\n-        fill_addr = obj_addr;\n-        fill_size = size;\n-      } else {\n-        fill_size += size;\n-      }\n-      obj_addr += size;\n+      \/\/ Object is not marked.  Coalesce and fill dead object with dead neighbors.\n+      HeapWord* next_marked_obj = marking_context->get_next_marked_addr(obj_addr, t);\n+      assert(next_marked_obj <= t, \"next marked object cannot exceed top\");\n+      size_t fill_size = next_marked_obj - obj_addr;\n+      ShenandoahHeap::fill_with_object(obj_addr, fill_size);\n+      heap->card_scan()->coalesce_objects(obj_addr, fill_size);\n+      obj_addr = next_marked_obj;\n@@ -449,4 +436,0 @@\n-  if (fill_addr != NULL) {\n-    ShenandoahHeap::fill_with_object(fill_addr, fill_size);\n-    heap->card_scan()->coalesce_objects(fill_addr, fill_size);\n-  }\n@@ -486,2 +469,0 @@\n-    HeapWord* fill_addr = NULL;\n-    size_t fill_size = 0;\n@@ -491,9 +472,0 @@\n-        if (fill_addr != NULL) {\n-           if (reregister_coalesced_objects) { \/\/ change existing crossing map information\n-            heap->card_scan()->coalesce_objects(fill_addr, fill_size);\n-          } else {              \/\/ establish new crossing map information\n-             heap->card_scan()->register_object(fill_addr);\n-          }\n-          ShenandoahHeap::fill_with_object(fill_addr, fill_size);\n-          fill_addr = NULL;\n-        }\n@@ -501,1 +473,1 @@\n-        if (!reregister_coalesced_objects)\n+        if (!reregister_coalesced_objects) {\n@@ -503,0 +475,1 @@\n+        }\n@@ -505,11 +478,9 @@\n-        \/\/ Object is not marked, accumulate it into span of unmarked objects to be coalesced and filled\n-\n-        \/\/ TODO:  We can optimize this.  Don't visit each of possibly many consecutive unmarked objects.\n-        \/\/ Instead, skip to the following marked object, as indicated by the first following mark bit in\n-        \/\/ marking_context.\n-        int size = obj->size();\n-        if (fill_addr == NULL) {\n-          fill_addr = obj_addr;\n-          fill_size = size;\n-        } else {\n-          fill_size += size;\n+        \/\/ Object is not marked.  Coalesce and fill dead object with dead neighbors.\n+        HeapWord* next_marked_obj = marking_context->get_next_marked_addr(obj_addr, t);\n+        assert(next_marked_obj <= t, \"next marked object cannot exceed top\");\n+        size_t fill_size = next_marked_obj - obj_addr;\n+        ShenandoahHeap::fill_with_object(obj_addr, fill_size);\n+        if (reregister_coalesced_objects) {\n+          heap->card_scan()->coalesce_objects(obj_addr, fill_size);\n+        } else {              \/\/ establish new crossing map information\n+          heap->card_scan()->register_object(obj_addr);\n@@ -517,9 +488,1 @@\n-        obj_addr += size;\n-      }\n-    }\n-    if (fill_addr != NULL) {\n-      ShenandoahHeap::fill_with_object(fill_addr, fill_size);\n-      if (reregister_coalesced_objects) { \/\/ change existing crossing map information\n-        heap->card_scan()->coalesce_objects(fill_addr, fill_size);\n-      } else {              \/\/ establish new crossing map information\n-        heap->card_scan()->register_object(fill_addr);\n+        obj_addr = next_marked_obj;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":20,"deletions":57,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shenandoah\/shenandoahMonitoringSupport.hpp\"\n@@ -33,0 +34,2 @@\n+#include \"gc\/shenandoah\/shenandoahWorkerPolicy.hpp\"\n+#include \"utilities\/events.hpp\"\n@@ -164,7 +167,5 @@\n-  \/\/ Not sure if I want\/need any of the following here:\n-  \/\/\n-  \/\/ TraceCollectorStats tcs(heap->monitoring_support()->concurrent_collection_counters());\n-  \/\/ EventMark em(\"%s\", msg);\n-  \/\/ ShenandoahWorkerScope scope(heap->workers(),\n-  \/\/ ShenandoahWorkerPolicy::calc_workers_for_conc_marking(),\n-  \/\/ \"concurrent coalesce and fill\");\n+  TraceCollectorStats tcs(heap->monitoring_support()->concurrent_collection_counters());\n+  EventMark em(\"%s\", msg);\n+  ShenandoahWorkerScope scope(heap->workers(),\n+                              ShenandoahWorkerPolicy::calc_workers_for_conc_marking(),\n+                              \"concurrent coalesce and fill\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}