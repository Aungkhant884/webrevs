[{"commit":{"message":"Additional changes requested by reviewers\n\nThis code builds and tests TIER1 and hotspot_gc_shenandoah with no regressions.  It also runs a generational GC stress test."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.hpp"}],"sha":"0c99ef2bd93371eec0d49879e84d044286ae716e"},{"commit":{"message":"Cosmetic improvements requested by review\n\nFollowing these changes, we ran jtreg TIER1 and hotspot_gc_shenandoah tests with no regressions.\nAlso ran a stress Extremem workload."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.hpp"}],"sha":"d6fa428bef00403ab88c92c6d9bac9ab093b5944"},{"commit":{"message":"Change definition of CollectionThresholdGarbagePercent\n\nThis is now defined to equal ShenandoahGarbageThreshold, which seems to have\na default value of 25.  The effect on running workloads is to choose more\nregions for the collection set than was observed with the previous\nconfiguration.\n\nAlso addressed several improvements in white space and comments.\n\nThe code now runs tier1 and hotspot_gc_shenandoah without regressions.  It\nalso succsessfully runs an Extremem stress test up until the point of\nfailure due to triggering of full GC (after 113 completed GC passes, including\ntwo old-gen GC passes)."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/generational\/TestConcurrentEvac.java"}],"sha":"c8377a534be405d2e2969701a2ceebc016389eaa"},{"commit":{"message":"Refactor ShenandoahOldHeuristics\n\nCode reviewers of the draft mixed-evacuation pull request raised a concern\nabout entanglement between young-gen and old-gen heuristics.  In response to\nsuggestions by reviewers, this patch refactors the old-gen heuristics\nimplementation as follows:\n\n1. Add old_heuristics argument and pass it so we no longer depend on\n   _old_heuristics field.\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\"\n\n2. Hoist test for should_defer_gc() into\n   ShenandoahRegulatorThread::start_old_cycle().  Remove all other\n   invocations of should_defer_gc().\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\"\n\n3. Remove _old_heuristics field and constructor and initializer\n   argument from ShenandoahPassiveHeuristics,\n   ShenandoahStaticHeuristics, ShenandoahAdaptiveHeuristics,\n   ShenandoahAggresiveHeuristics,\n   ShenandoahMode::initialize_heuristics(),\n   ShenandoahPassiveMode:::initialize_heuristics(),\n   ShenandoahGeneration::initialize_heuristics().\n\n   Done, tested with run-milestone8-github, \"make test TEST=tier1\" and\n   \"make test TEST=hotspot_gc_shenandoah\".  Note that GC behavior\n   changed a little in run-milestone8-github.  Without confirmed\n   review of output files, my impression is that full GC triggered\n   earlier, at GC(101), and piggyback collections each processed fewer\n   old-gen candidates (18 rather than 30).\n\n4. Introduce a new ShenandoahOldHeuristics subclass of\n   ShenandoahHeuristics.  Move certain old-gen specific methods there,\n   including: prime_collection_set() (renamed from\n   prime_collection_set_with_old_candidates()),\n   prepare_for_old_collection(), start_old_evacuations(),\n   unprocessed_old_collection_candidates(),\n   next_old_collection_candidates(),\n   consume_old_collection_candidates(),\n   old_coalesce_and_fill_candidates(),\n   get_coalesce_and_fill_candidates(), should_defer_gc().\n   Remove the _old_heuristics argument from prime_collection_set() and\n   prepare_for_old_collection(); adjust the invocations.\n\n5. Make the following subclasses of ShenandoahOldHeuristics.  In the\n   initial implementation, these subclasses have the same behavior\n   as the young-gen heuristics from which they were copied.  Future\n   refinement may result in tailored behavior of the old-gen\n   versions of each heuristic: ShenandoahAdaptiveOldHeuristics,\n   ShenandoahAggresiveOldHeuristics, ShenandoahCompactHeuristics,\n   ShenandoahPassiveOldHeuristics, ShenandoahStaticOldHeuristics."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.hpp"}],"sha":"c883f2374a046fc755bc6f448e548c20e606d1e7"},{"commit":{"message":"Refactor choose_collection_set\n\nDivide the implementation of ShenandoahHeuristic::choose_colection_set() into\nprepare_for_other_collection() and prime_collection_set_with_old_candiates() as\nrequested by reviewer of draft pull request.  The resulting code passes TIER1 and\nhotspot_gc_shenandoah jtreg regressions and runs additional generational shenandoah\nstress tests."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"f6f6a734c284450208d007ad2e385c55b7e73b19"},{"commit":{"message":"Add collector statistics tracking\n\nAs requested by reviewer feedback for draft upstream pull request,\nShenandoahOldGC::entry_coalesce_and_fill() now gathers additional\ncollector statistics."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"76213506be3353943887c1c3decd511aca3cfe59"},{"commit":{"message":"Improve coalesce and fill\n\nIn old-gen memory ranges of HeapRegions not selected for collection,\nuse marking_context->get_next_marked_addr() instead of visiting each unmarked\nobject independently when deciding which ranges of memory to coalesce and\nfill.  This change builds and runs jtreg test=TIER1 and\ntest=hotspot_gc_shenandoah wihtout regressions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"678ddc9305de27c25811ffc2c0eca06931362b9f"},{"commit":{"message":"Fix trailing whitespace error and correct spelling errors in comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"}],"sha":"c744235fbfad066ab64aa2821de726fac54a3315"},{"commit":{"message":"Chasing bug during prepare_for_old_collection\n\nOne bug fix, a few cosmetic improvements, a change in loop structure to possibly avoid a gcc\noptimization error."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"50ffb169861f4659ed051f5c77a44e55b36fa00b"},{"commit":{"message":"Perform mixed collections\n\nUpon completion of old-gen concurrent marking, select certain old-gen regions to be\nevacuated and other old-gen regions to be coalesced and filled.  Use concurrent threads\nto coalesce and fill the relevant old-gen regions.  Then schedule the other old-gen\nregions to be evacuated during subsequent young-gen evacuation passes.  Use garbage\nfirst heuristics to prioritize old-gen collection regions and limit the amount of old-gen\ndata that needs to be evacuated during each young-gen evacuation so as to minimize\nimpact on young-gen evacuation cadence.  A new jtreg test case exercises mixed collections.\n\ncr https:\/\/code.amazon.com\/reviews\/CR-47908455"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.cpp"}],"sha":"7bbd6a376ac0c11ebc14b8c2078181f2768d80ee"},{"commit":{"message":"Perform mixed collections\n\nUpon completion of old-gen concurrent marking, select certain old-gen regions to be\nevacuated and other old-gen regions to be coalesced and filled.  Use concurrent threads\nto coalesce and fill the relevant old-gen regions.  Then schedule the other old-gen\nregions to be evacuated during subsequent young-gen evacuation passes.  Use garbage\nfirst heuristics to prioritize old-gen collection regions and limit the amount of old-gen\ndata that needs to be evacuated during each young-gen evacuation so as to minimize\nimpact on young-gen evacuation cadence.  A new jtreg test case exercises mixed collections.\n\ncr https:\/\/code.amazon.com\/reviews\/CR-47908455"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/generational\/TestConcurrentEvac.java"}],"sha":"0b9560e7817b6b44f73a6719e518ed0c1cc8b65b"}]