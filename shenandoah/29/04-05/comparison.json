{"files":[{"patch":"@@ -312,3 +312,3 @@\n-  return (_generation->generation_mode() == GLOBAL)\n-    || (_generation->generation_mode() == YOUNG && region->affiliation() == YOUNG_GENERATION)\n-    || (_generation->generation_mode() == OLD && region->affiliation() == OLD_GENERATION);\n+  return ((_generation->generation_mode() == GLOBAL)\n+          || (_generation->generation_mode() == YOUNG && region->affiliation() == YOUNG_GENERATION)\n+          || (_generation->generation_mode() == OLD && region->affiliation() == OLD_GENERATION));\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    if (!in_generation(region))\n+    if (!in_generation(region)) {\n@@ -162,1 +162,1 @@\n-    else {\n+    } else {\n@@ -180,2 +180,0 @@\n-  \/\/ This loop is written as while rather than for because of\n-  \/\/ suspected gcc error in translating\/optimizing for-loop\n@@ -218,4 +216,5 @@\n-  \/\/ Any old-gen region that contains 50% garbage or more is to be\n-  \/\/ evacuated.  In the future, this threshold percentage may be specified on\n-  \/\/ the command line or preferrably determined by dynamic heuristics.\n-#define CollectionThresholdGarbagePercent 50\n+  \/\/ Any old-gen region that contains (ShenandoahGarbageThreshold\n+  \/\/ (default value 25))% garbage or more is to be evacuated.  In the\n+  \/\/ future, this threshold percentage may be specified on the command\n+  \/\/ line or preferrably determined by dynamic heuristics.\n+#define CollectionThresholdGarbagePercent ShenandoahGarbageThreshold\n@@ -294,1 +293,1 @@\n-  while (count-- > 0)\n+  while (count-- > 0) {\n@@ -296,0 +295,1 @@\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -518,1 +518,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -140,0 +140,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- *  currently support full GC.  If garbage collection falls behind mutator\n+ *  not currently support full GC.  If garbage collection falls behind mutator\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/generational\/TestConcurrentEvac.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}