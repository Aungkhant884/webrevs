[{"commit":{"message":"Add collector statistics tracking\n\nAs requested by reviewer feedback for draft upstream pull request,\nShenandoahOldGC::entry_coalesce_and_fill() now gathers additional\ncollector statistics."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"76213506be3353943887c1c3decd511aca3cfe59"},{"commit":{"message":"Improve coalesce and fill\n\nIn old-gen memory ranges of HeapRegions not selected for collection,\nuse marking_context->get_next_marked_addr() instead of visiting each unmarked\nobject independently when deciding which ranges of memory to coalesce and\nfill.  This change builds and runs jtreg test=TIER1 and\ntest=hotspot_gc_shenandoah wihtout regressions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"678ddc9305de27c25811ffc2c0eca06931362b9f"},{"commit":{"message":"Fix trailing whitespace error and correct spelling errors in comment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"}],"sha":"c744235fbfad066ab64aa2821de726fac54a3315"},{"commit":{"message":"Chasing bug during prepare_for_old_collection\n\nOne bug fix, a few cosmetic improvements, a change in loop structure to possibly avoid a gcc\noptimization error."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"}],"sha":"50ffb169861f4659ed051f5c77a44e55b36fa00b"},{"commit":{"message":"Perform mixed collections\n\nUpon completion of old-gen concurrent marking, select certain old-gen regions to be\nevacuated and other old-gen regions to be coalesced and filled.  Use concurrent threads\nto coalesce and fill the relevant old-gen regions.  Then schedule the other old-gen\nregions to be evacuated during subsequent young-gen evacuation passes.  Use garbage\nfirst heuristics to prioritize old-gen collection regions and limit the amount of old-gen\ndata that needs to be evacuated during each young-gen evacuation so as to minimize\nimpact on young-gen evacuation cadence.  A new jtreg test case exercises mixed collections.\n\ncr https:\/\/code.amazon.com\/reviews\/CR-47908455"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.cpp"}],"sha":"7bbd6a376ac0c11ebc14b8c2078181f2768d80ee"},{"commit":{"message":"Perform mixed collections\n\nUpon completion of old-gen concurrent marking, select certain old-gen regions to be\nevacuated and other old-gen regions to be coalesced and filled.  Use concurrent threads\nto coalesce and fill the relevant old-gen regions.  Then schedule the other old-gen\nregions to be evacuated during subsequent young-gen evacuation passes.  Use garbage\nfirst heuristics to prioritize old-gen collection regions and limit the amount of old-gen\ndata that needs to be evacuated during each young-gen evacuation so as to minimize\nimpact on young-gen evacuation cadence.  A new jtreg test case exercises mixed collections.\n\ncr https:\/\/code.amazon.com\/reviews\/CR-47908455"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAggressiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahCompactHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahPassiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahStaticHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/generational\/TestConcurrentEvac.java"}],"sha":"0b9560e7817b6b44f73a6719e518ed0c1cc8b65b"}]