[{"commit":{"message":"Remove gratuitous new line"},"files":[],"sha":"a2fbf33230548958a9611da28e6c4435c33e23ec"},{"commit":{"message":"Undo JRT_ENTRY prologue attempts"},"files":[],"sha":"46e3c9b76a081de1a47a64927bdb415cb0eb4303"},{"commit":{"message":"Retreat to original solution"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"2cfd5726f93b4d560633fb1f8b75472ed9398bd8"},{"commit":{"message":"Let write_ref_field_pre_entry use JRT_LEAF protocol"},"files":[],"sha":"6a1b31d1a2f55c1fc09646914c5854b0963419a0"},{"commit":{"message":"Change LRB implementations for mutators"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"0c110117113c6e21c5cdfbfeca749329dff7b67c"},{"commit":{"message":"is_Java_thread() does not imply thread->thread_state() == thread_in_Java\n\nI had incorrectly assumed these are equivalent.  I need a run-time check\nto confirm both conditions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"db852c2135817eb6f09f98772deadbfe374b9a87"},{"commit":{"message":"Transition Java thread to VM thread Before Blocking Thread"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"f3095e3c07757b5ad86fe3a7122fcce6ccade82b"}]