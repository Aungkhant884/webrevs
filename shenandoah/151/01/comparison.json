{"files":[{"patch":"@@ -126,1 +126,0 @@\n-  size_t remnant_available = 0;\n@@ -152,1 +151,1 @@\n-          \/\/ If regions is presected, we know mode()->is_generational() and region->age() >= InitialTenuringThreshold)\n+          \/\/ If region is preselected, we know mode()->is_generational() and region->age() >= InitialTenuringThreshold)\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-  bool is_preselected(int region_idx) { return (_preselected_regions != nullptr) && _preselected_regions[region_idx]; }\n+  bool is_preselected(size_t region_idx) { return (_preselected_regions != nullptr) && _preselected_regions[region_idx]; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-    bool preselected_regions[num_regions];\n+    bool* preselected_regions = NEW_C_HEAP_ARRAY(bool, num_regions, mtGC);\n@@ -263,0 +263,1 @@\n+\n@@ -448,1 +449,1 @@\n-    _heuristics->choose_collection_set(heap->collection_set(), heap->old_heuristics());\n+    _heuristics->choose_collection_set(collection_set, heap->old_heuristics());\n@@ -450,0 +451,1 @@\n+    FREE_C_HEAP_ARRAY(bool, preselected_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}