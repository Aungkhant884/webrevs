{"files":[{"patch":"@@ -260,2 +260,4 @@\n-  if (young_generation->available() > young_evacuation_reserve) {\n-    excess_young = young_generation->available() - young_evacuation_reserve;\n+\n+  size_t total_young_available = young_generation->available_with_reserve();\n+  if (total_young_available > young_evacuation_reserve) {\n+    excess_young = total_young_available - young_evacuation_reserve;\n@@ -263,1 +265,1 @@\n-    young_evacuation_reserve = young_generation->available();\n+    young_evacuation_reserve = total_young_available;\n@@ -278,0 +280,2 @@\n+  \/\/ TODO: excess_young is unused.  Did we want to add it old_promo_reserve and\/or old_evacuation_reserve?\n+\n@@ -409,1 +413,2 @@\n-  assert(young_evacuated_reserve_used <= young_generation->available(), \"Cannot evacuate more than is available in young\");\n+  size_t total_young_available = young_generation->available_with_reserve();\n+  assert(young_evacuated_reserve_used <= total_young_available, \"Cannot evacuate more than is available in young\");\n@@ -958,0 +963,5 @@\n+\/\/ For ShenandoahYoungGeneration, Include the young available that may have been reserved for the Collector.\n+size_t ShenandoahGeneration::available_with_reserve() const {\n+  return available(max_capacity());\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -127,0 +127,1 @@\n+  size_t available_with_reserve() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,0 +67,3 @@\n+\n+  \/\/ Do not override available_with_reserve() because that needs to see memory reserved for Collector\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahYoungGeneration.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}