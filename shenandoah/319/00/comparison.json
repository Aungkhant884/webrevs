{"files":[{"patch":"@@ -726,9 +726,9 @@\n-    if (heap->cancelled_gc()) {\n-      msg = (generation->is_young()) ? \"At end of Interrupted Concurrent Young GC\" :\n-                                       \"At end of Interrupted Concurrent Bootstrap GC\";\n-    } else {\n-      msg = (generation->is_young()) ? \"At end of Concurrent Young GC\" :\n-                                       \"At end of Concurrent Bootstrap GC\";\n-      \/\/ We only record GC results if GC was successful\n-      ShenandoahMmuTracker* mmu_tracker = heap->mmu_tracker();\n-      if (generation->is_young()) {\n+    ShenandoahMmuTracker* mmu_tracker = heap->mmu_tracker();\n+    if (generation->is_young()) {\n+      if (heap->cancelled_gc()) {\n+        msg = (do_old_gc_bootstrap) ? \"At end of Interrupted Concurrent Bootstrap GC\":\n+                                      \"At end of Interrupted Concurrent Young GC\";\n+      } else {\n+        \/\/ We only record GC results if GC was successful\n+        msg = (do_old_gc_bootstrap) ? \"At end of Concurrent Bootstrap GC\":\n+                                      \"At end of Concurrent Young GC\";\n@@ -738,0 +738,2 @@\n+        } else if (do_old_gc_bootstrap) {\n+          mmu_tracker->record_bootstrap(generation, get_gc_id(), heap->collection_set()->has_old_regions());\n@@ -741,0 +743,6 @@\n+      }\n+    } else {\n+      assert(generation->is_global(), \"If not young, must be GLOBAL\");\n+      assert(!do_old_gc_bootstrap, \"Do not bootstrap with GLOBAL GC\");\n+      if (heap->cancelled_gc()) {\n+        msg = \"At end of Interrupted Concurrent GLOBAL GC\";\n@@ -742,1 +750,3 @@\n-        mmu_tracker->record_bootstrap(generation, get_gc_id(), heap->collection_set()->has_old_regions());\n+        \/\/ We only record GC results if GC was successful\n+        msg = \"At end of Concurrent Global GC\";\n+        mmu_tracker->record_global(generation, get_gc_id());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    bool is_bootstrap_gc = heap->is_concurrent_old_mark_in_progress() && _generation->is_young();\n+    bool is_bootstrap_gc = heap->old_generation()->state() == ShenandoahOldGeneration::BOOTSTRAPPING;\n@@ -63,1 +63,1 @@\n-    const char* msg = is_bootstrap_gc? \"At end of Degenerated Boostrap Old GC\": \"At end of Degenerated GC\";\n+    const char* msg = is_bootstrap_gc? \"At end of Degenerated Bootstrap Old GC\": \"At end of Degenerated Young GC\";\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,0 +116,4 @@\n+void ShenandoahMmuTracker::record_global(ShenandoahGeneration* generation, size_t gcid) {\n+  update_utilization(generation, gcid, \"Concurrent Global GC\");\n+}\n+\n@@ -118,1 +122,1 @@\n-  update_utilization(generation, gcid, \"Bootstrap Old GC\");\n+  update_utilization(generation, gcid, \"Concurrent Bootstrap GC\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+  void record_global(ShenandoahGeneration* generation, size_t gcid);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}