[{"commit":{"message":"Add comment to clarify that _affiliation required for non-generational"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"}],"sha":"15a0825fcddfc23383fa533f292b623da2d9abf1"},{"commit":{"message":"Add assertions to clarify locks required for setting affiliation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"927ea198fda714540d65132d631470a568f46979"},{"commit":{"message":"Adjust asserts for heap lock"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"f632ad561d0363989332b26bb73c4d69a43e74fc"},{"commit":{"message":"Undo change to _affiliations add assertion to clarify heap lock"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"221b0b3da1dfdc03c2a5db1e707d61f4abac1872"},{"commit":{"message":"Only initialize _affiliations if mode is generational"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"22d76dee353a4731a6b83075b2f65df1b9410758"},{"commit":{"message":"Only initialize _affiiations in generational mode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"cd3a03f07cabaa1d0299616b290bc75f61603566"},{"commit":{"message":"Fix white space"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"1033b0cdc5f00af5261f96d5e945c3b9b9ac4c13"},{"commit":{"message":"Merge remote-tracking branch 'GitFarmBranch\/change-affiliation-rep-rebase' into change-affiliation-representation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"3adf16bdc90ea3afeb7b3318a0453e88e965b284"},{"commit":{"message":"Add detail to assert message"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"0fd714305d207603b996dcbcc23f4f7aa91fff30"},{"commit":{"message":"Fix syntax errorx"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"a5354cb43e91df44d74f645e0fd5fbfd0c181eb6"},{"commit":{"message":"Make ShenandoahHeap::is_in_active_generation() mimic previous behavior\n\nMy original fix to in-line the implementation of check_is_in_active_generation() treated Free regions differently than the code that I replaced"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"715b2d2701139665f291581dbbd000edb54307dc"},{"commit":{"message":"Inline check for in-active-generation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"013a521e6a8787e2fb9596e3eb9b9cee101ca49f"},{"commit":{"message":"Force pipeline tests"},"files":[],"sha":"3454e0fa564b13ce45fbc21a03ea3098b7ca8fde"},{"commit":{"message":"Optimize implementation of region affiliation\n\nLooking up the affiliation of an object is very frequent during\nconcurrent marking and remembered set scanning.  This change provides he\nanswer in 1 less memory access (out of 3) and improves cache locality."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"57d70b03a52dd5dba07ed5efec3c513a004981fd"}]