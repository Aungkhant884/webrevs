{"files":[{"patch":"@@ -28,2 +28,0 @@\n-#include \"gc\/shenandoah\/shenandoahStringDedup.hpp\"\n-\n@@ -31,0 +29,3 @@\n+#include \"gc\/shenandoah\/shenandoahHeap.inline.hpp\"\n+#include \"gc\/shenandoah\/shenandoahStringDedup.hpp\"\n+#include \"oops\/markWord.hpp\"\n@@ -48,16 +49,4 @@\n-  const markWord mark = obj->mark();\n-\n-  \/\/ Having\/had displaced header, too risky to deal with them, skip\n-  if ((LockingMode != LM_LIGHTWEIGHT && mark == markWord::INFLATING()) || mark.has_displaced_mark_helper()) {\n-    return false;\n-  }\n-\n-  if (StringDedup::is_below_threshold_age(mark.age())) {\n-    \/\/ Increase string age and enqueue it when it reaches age threshold\n-    markWord new_mark = mark.incr_age();\n-    if (mark == obj->cas_set_mark(new_mark, mark)) {\n-      return StringDedup::is_threshold_age(new_mark.age()) &&\n-             !dedup_requested(obj);\n-    }\n-  }\n-  return false;\n+  uint age = ShenandoahHeap::get_object_age(obj);\n+  return (age <= markWord::max_age) &&\n+         StringDedup::is_below_threshold_age(age) &&\n+         !dedup_requested(obj);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahStringDedup.inline.hpp","additions":7,"deletions":18,"binary":false,"changes":25,"status":"modified"}]}