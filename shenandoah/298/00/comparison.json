{"files":[{"patch":"@@ -541,1 +541,1 @@\n-        return;\n+        assert(heap->cancelled_gc(), \"Preparation for GC is not complete, expected cancellation\");\n@@ -544,5 +544,6 @@\n-      \/\/ It is possible for a young generation request to preempt this nascent old\n-      \/\/ collection cycle _after_ we've finished making the old regions parseable (filling),\n-      \/\/ but _before_ we have unset the preemption flag. It is also possible for an\n-      \/\/ allocation failure to occur after the threads have finished filling. We must\n-      \/\/ check if we have been cancelled before we start a bootstrap cycle.\n+      \/\/ Before bootstrapping begins, we must acknowledge any cancellation request.\n+      \/\/ If the gc has not been cancelled, this does nothing. If it has been cancelled,\n+      \/\/ this will clear the cancellation request and exit before starting the bootstrap\n+      \/\/ phase. This will allow the young GC cycle to proceed normally. If we do not\n+      \/\/ acknowledge the cancellation request, the subsequent young cycle will observe\n+      \/\/ the request and essentially cancel itself.\n@@ -550,12 +551,2 @@\n-        if (heap->cancelled_gc()) {\n-          \/\/ If this was a preemption request, the cancellation would have been cleared\n-          \/\/ so that we run a concurrent young cycle. If the cancellation is still set,\n-          \/\/ then this is an allocation failure and we need to run a degenerated cycle.\n-          \/\/ If this is a preemption request, we're just going to fall through and run\n-          \/\/ the bootstrap cycle to start the old generation cycle (the bootstrap cycle is\n-          \/\/ a concurrent young cycle - which is what we're being asked to do in that case).\n-          \/\/ If the cycle is cancelled for any other reason, we return from here and let\n-          \/\/ the control thread return to the top of its decision loop.\n-          log_info(gc)(\"Preparation for old generation cycle was cancelled\");\n-          return;\n-        }\n+        log_info(gc)(\"Preparation for old generation cycle was cancelled\");\n+        return;\n@@ -563,0 +554,3 @@\n+\n+      \/\/ Coalescing threads completed and nothing was cancelled. it is safe to transition\n+      \/\/ to the bootstrapping state now.\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"}]}