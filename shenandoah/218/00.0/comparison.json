{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,2 +102,2 @@\n-  const size_t rs_align = _page_size == (size_t) os::vm_page_size() ? 0 :\n-    MAX2(_page_size, (size_t) os::vm_allocation_granularity());\n+  const size_t rs_align = _page_size == os::vm_page_size() ? 0 :\n+    MAX2(_page_size, os::vm_allocation_granularity());\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -203,1 +203,0 @@\n-    assert(obj != NULL, \"must have a base\");\n@@ -595,4 +594,1 @@\n-  bool anonymous = (decorators & ON_UNKNOWN_OOP_REF) != 0;\n-  bool on_heap = (decorators & IN_HEAP) != 0;\n-\n-  if (!access.is_oop() || (!on_heap && !anonymous)) {\n+  if (!access.is_oop()) {\n@@ -615,0 +611,2 @@\n+\n+    bool anonymous = (decorators & ON_UNKNOWN_OOP_REF) != 0;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2016, 2023, Red Hat, Inc. All rights reserved.\n@@ -64,1 +64,1 @@\n-  size_t page_size = (size_t)os::vm_page_size();\n+  size_t page_size = os::vm_page_size();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -192,3 +192,3 @@\n-  size_t heap_page_size   = UseLargePages ? (size_t)os::large_page_size() : (size_t)os::vm_page_size();\n-  size_t bitmap_page_size = UseLargePages ? (size_t)os::large_page_size() : (size_t)os::vm_page_size();\n-  size_t region_page_size = UseLargePages ? (size_t)os::large_page_size() : (size_t)os::vm_page_size();\n+  size_t heap_page_size   = UseLargePages ? os::large_page_size() : os::vm_page_size();\n+  size_t bitmap_page_size = UseLargePages ? os::large_page_size() : os::vm_page_size();\n+  size_t region_page_size = UseLargePages ? os::large_page_size() : os::vm_page_size();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -806,1 +807,1 @@\n-  int page_size = os::vm_page_size();\n+  size_t page_size = os::vm_page_size();\n@@ -811,1 +812,1 @@\n-      page_size = (int)large_page_size;\n+      page_size = large_page_size;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}