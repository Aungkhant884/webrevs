[{"commit":{"message":"Remove infrastructure to adjust generation capacities for loans from old\n\nA previous mechanism would loan memory from old to young during the\nevacuation and update-refs phases of GC.  This approach had limited\nvalue because the loans had to be repaid immediately upon completion of\nthe update-refs phase.  A newer approach dynamically adjusts the size of\nold generation, consistently keeping it as small as possible.  This\nallows the maximum amount of allocation to be performed between\nconsecutive young-gc efforts."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"fc85f085c84d00a4319a8a5fc12bb16f8ea885af"}]