{"files":[{"patch":"@@ -1037,1 +1037,4 @@\n-void ShenandoahFreeSet::find_regions_with_alloc_capacity() {\n+void ShenandoahFreeSet::find_regions_with_alloc_capacity(size_t &young_cset_regions, size_t &old_cset_regions) {\n+\n+  young_cset_regions = 0;\n+  old_cset_regions = 0;\n@@ -1041,0 +1044,10 @@\n+    if (region->is_trash()) {\n+      \/\/ Trashed regions represent regions that had been in the collection set but have not yet been \"cleaned up\".\n+      if (region->is_old()) {\n+\told_cset_regions++;\n+      } else {\n+\tassert(region->is_young(), \"Trashed region should be old or young\");\n+\tyoung_cset_regions++;\n+      }\n+    }\n+\n@@ -1071,3 +1084,0 @@\n-  young_cset_regions = 0;\n-  old_cset_regions = 0;\n-\n@@ -1078,1 +1088,1 @@\n-  find_regions_with_alloc_capacity();\n+  find_regions_with_alloc_capacity(young_cset_regions, old_cset_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -223,1 +223,1 @@\n-  void find_regions_with_alloc_capacity();\n+  void find_regions_with_alloc_capacity(size_t &young_cset_regions, size_t &old_cset_regions);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}