{"files":[{"patch":"@@ -370,0 +370,2 @@\n+\n+  heap->finish_fullgc();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1325,1 +1325,1 @@\n-    \/\/ Full GC, which means we want to try more than ShenandoahFullGCThreshold times.\n+    \/\/ Full GC.\n@@ -1327,0 +1327,1 @@\n+    size_t original_fullgc_count = fullgc_count();\n@@ -1332,1 +1333,1 @@\n-    while (result == nullptr && tries <= ShenandoahFullGCThreshold) {\n+    while (result == nullptr && ((fullgc_count() == original_fullgc_count) || (tries <= ShenandoahOOMGCRetries))) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -357,0 +357,3 @@\n+  \/\/ How many full-gc cycles have been completed?\n+  volatile size_t _completed_fullgc_cycles;\n+\n@@ -393,0 +396,8 @@\n+  void finish_fullgc() {\n+    Atomic::add(&_completed_fullgc_cycles, (size_t) 1);\n+  };\n+\n+  size_t fullgc_count() {\n+    return Atomic::load(&_completed_fullgc_cycles);\n+  };\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -206,2 +206,2 @@\n-  product(uintx, ShenandoahGuaranteedYoungGCInterval, 30*1000,  EXPERIMENTAL,  \\\n-          \"Run a collection of the young generation at least this often. \"    \\\n+  product(uintx, ShenandoahGuaranteedYoungGCInterval, 5*60*1000,  EXPERIMENTAL,  \\\n+          \"Run a collection of the young generation at least this often. \"  \\\n@@ -424,0 +424,4 @@\n+  product(uintx, ShenandoahOOMGCRetries, 3, EXPERIMENTAL,                   \\\n+          \"How many GCs should happen before we throw OutOfMemoryException \"\\\n+          \"for allocation request, including at least one Full GC.\")        \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"}]}