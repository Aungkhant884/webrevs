[{"commit":{"message":"Change ShenandoahFullGCThreshold defaulit\n\nThis experimental parameter specifies how many degenerated GCs to\nperform before upgrading the degenerated GC to a Full GC.  Prior to this\nchange, the default value was 3.  This changes the default to 64.  In\ngeneral, upgrading degenerated GC to Full GC is to be discouraged\nbecause Full GC duplicates all of the work performed by concurrent GC\nbefore degeneration occurs and because concurrent GC triggered\nimmediately following completion of FullGC is generally ineffective\nbecause there has been no time for objects allocated following\ncompletion of FullGC to die.  In many workload scenarios, this results\nin a deadly embrace between repeated interleaving of interrupted\nconcurrent GC followed by degenerated GC that upgrades to FullGC.\nA series of degenerated GCs is much more effective because the\ndegenerated GC preserves the progress made by concurrent GC rather than\nduplicating those efforts, and because the degenerated GC leaves\nfloating garbage around which will be cleaned up by the next concurrent\nGC.  On Specjbb, this change improved critical JOPS and max JOPS scores\nby over 20%."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"b1e5c2674ef936b0bc5d885f0b4c185b9e055efa"}]