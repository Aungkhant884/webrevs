[{"commit":{"message":"Merge remote-tracking branch 'origin' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"fa77116293499c2dad74c4f4117c2acf86bab719"},{"commit":{"message":"More fixes to verification of deferred generation accounting\n\nDuring promote in place, certain regions are re-affiilated old before the\ntotal amounts of memory consumed by these regions have been tallied into\nthe respective region's totals."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"5ab4fd1f3b99bf60b4f85143f4d93ed727ed3832"},{"commit":{"message":"Fix assert to use <= insted of <"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"3bce0b19ba3f3acb2dfd437522a253a8af4d3bcf"},{"commit":{"message":"Make verifier adjust for deferred accounting of humongous waste"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"339137ca40500a6863098fd80ce1217e21a57f18"},{"commit":{"message":"Disable certain assertions for global generation\n\nThis is a temporary fix.  After global generation correctly accounts for\naffiliated regions, we can enable these assertions anew."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"0cc23fd98c140f1b63ad509e06347a78385a93ec"},{"commit":{"message":"Minor comment fixups following merge"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"8f212799458db158778685746841c2c775fe52aa"},{"commit":{"message":"Merge remote-tracking branch 'origin' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"23b8b396141c89f2989502244f8fcb8c6ad6449e"},{"commit":{"message":"Do not call min_threshold unless generation is not old\n\nFollowing the merge, min_threshold() asserts generation is not old.\nmin_threshold() is not relevant to old-generation GC triggers."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"}],"sha":"157d42d4b1463ea1da843099b540c943fe3c8a79"},{"commit":{"message":"Merge remote-tracking branch 'origin' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"4bb564959c4bcc329a4543b32a63a9816f06fa47"},{"commit":{"message":"Fix whitespace errors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"52ddd21d027aec8530941052dbe53529712eaa27"},{"commit":{"message":"Fix my fix for overwriting update_watermark in promote_in_place\n\nI wasn't careful enough to assure that I did not introduce another\nassertion error with my previous \"fix\"."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"8bf033667570ad87cbedb74e75df42eb2e1e6e19"},{"commit":{"message":"Overwrite update_water_mark in ShenandoahHeapRegion::promote_in_place\n\nWhile a region waits to be promoted in place, its value of top equals\nend.  This is a temporary arrangement, to prevent young-gen objects\nfrom being allocated within this region before it is promoted.  Once\nthe region is promoted, its value of top() is adjusted to its previous\nvalue.  The region's update_watermark value was likely set when the\nregion had its artificially high value of top.  So we fix it here."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"9a15b8e1cd933729bc6a37ef2fd8011f8caf2d0a"},{"commit":{"message":"Degen GC needs to evacuate even if cset is empty in some cases\n\nIn particular, when there are humongous or regular regions to be promoted\nin place, we still need to \"evacuate\", because the evacuation phase takes\nresponsibility for registering objects and building the remembered set."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"}],"sha":"585116df9fad27b4b91b5256f02653bbe04b38b4"},{"commit":{"message":"Refine generational assertions for full-gc mode\n\nCertain assertions are not valid in full gc mode because full gc does not\nnecessarily maintain all invariants during the STW pause.  By the time\nfull gc finishes, all invariants should be restored, and they are checked\nthen."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"6c5cb83bca212df38e08f7ebf1af93ff47acd49a"},{"commit":{"message":"Do not verify usage accounting at start of Full GC\n\nIf we degenerate to full in the middle of evacuation, usage accounts are in limbo."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"1fef7943b3e09b5409623e1f4e25b092e0a2fdff"},{"commit":{"message":"Remove unreferenced variable"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"}],"sha":"ab207852597d460345e6f1f4beefd2eb44e46f0a"},{"commit":{"message":"Fixup whitespace and comments"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"}],"sha":"0b8450bf3c01acdb91764c2b3b84191cba6d1e94"},{"commit":{"message":"Remove infrastructure to adjust generation capacities for loans from old\n\nA previous mechanism would loan memory from old to young during the\nevacuation and update-refs phases of GC.  This approach had limited\nvalue because the loans had to be repaid immediately upon completion of\nthe update-refs phase.  A newer approach dynamically adjusts the size of\nold generation, consistently keeping it as small as possible.  This\nallows the maximum amount of allocation to be performed between\nconsecutive young-gc efforts."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"fc85f085c84d00a4319a8a5fc12bb16f8ea885af"},{"commit":{"message":"Correct miscalculation of fill size\n\nAn error was confirming that fill_size_bytes >= min_fill_size_words.\nThis commit corrects the error."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"18217b4c9cebbbd6fa0b847c241cb3cc8e767c6b"},{"commit":{"message":"Remove an invalid assertion\n\nReplace with comments that explain what really happens in this code."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"}],"sha":"9f0b545949368e79468f4f42a8427976add32e0c"},{"commit":{"message":"Fix initialization error and remove extraneous typo"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"be6184055f460b8faa67d38042dbd3844efffc8e"},{"commit":{"message":"Fix error in commment"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"a081fba0a3714cdd006df67ae4eaf2d905d4b152"},{"commit":{"message":"More precisely limit old-gen collection set"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"6ba51a8d1e9146d5baa781bcd3e536de00e661c3"},{"commit":{"message":"Polish to facilitate code reviews\n\nReorder some code so that it better matches original organization.\nCleanup comments."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"}],"sha":"c64971f29190712e12db07da6c03f70bcc739060"},{"commit":{"message":"Address a regression in processing of preselected regions\n\nAll preselected regions are supposed to be added to the collection set.\nHowever, an error during implementation of expand-old-on-demand branch\nallowed certain preselected regions not to be placed into the collection\nset.  This has been corrected.  Some comments have also been improved."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"}],"sha":"da2de284e52f3dfe8d04ca4e3e4147f22a61b12c"},{"commit":{"message":"Fix more whitespace errors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp"}],"sha":"40ba78b46ef3daf6c749b505955e245dddb297b9"},{"commit":{"message":"Fix whitespace errors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"624fe58fa5e9cdc2d036739b6f0e9105d8f6437e"},{"commit":{"message":"Remove extraneous whitespace and instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"4d532f48b6655df2ba94944909cf17ea075a9e46"},{"commit":{"message":"Fix a missing curly brace (manual merge conflict resolution error)"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"ad5443f9eb3db0b483220af8f75cd68af0f1f165"},{"commit":{"message":"Merge remote-tracking branch 'GitFarmBranch\/expand-old-on-demand' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"0836fd0a1166c180f608624321f2a66995bb0dcd"},{"commit":{"message":"Fix indentation and brace nesting in ShenandoahFreeSet::allocate_single\n\nIncorrect nesting resulted in bad control flow in satb mode (for gclab\nallocations).  This error was apparently introduced only on this\ndevelopment branch."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"581d2eee7626f248f346c83fd26d2763e555c11b"},{"commit":{"message":"Add asserts to assure fill_objects are sufficiently large"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"}],"sha":"9094984a0acaecb076caacb3634c068960b5a199"},{"commit":{"message":"Fix initialization error and add object registration for fill  object"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"ce120c605857053f05f8ef0d411eae36d4127c00"},{"commit":{"message":"Disable over-zealous assertions\n\n(This is just to get through some regression testing.  These assertions\nwill be disabled with merges from upstream.)"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"6cecec6baedc60431bf771661933d898d74aeef0"},{"commit":{"message":"Disable redundant calculation of generation usage"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"93a459e114546a91c0c11b40e840eee065785c8a"},{"commit":{"message":"Merge remote-tracking branch 'origin\/shenandoah' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"89e8559a01af1426f3e693013fe80a117c7b0403"},{"commit":{"message":"Do not increase used for generations in non-gen mode at region retirement"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"b4836589cf4e3ecd243f11563d1c73661adc9afa"},{"commit":{"message":"Revert accidental change that counts waste toward SH::used()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"d6b9ce47ada614e323302861a2af08ef475b61bf"},{"commit":{"message":"Style and substantive refinments upon review of merge conflicts"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"58ce39de96e7ae37c034db30ea3d9cc7b3da843a"},{"commit":{"message":"Fill old-gen regions with waste object when remaining memory is small"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"360fd0b271801adc0bbfa7217b7e0675ac3895b2"},{"commit":{"message":"Tidy up humongous accounting"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"80a4c29e62149a98f2a4f34774f3eff63adb1a28"},{"commit":{"message":"Consistently do not account for generation usage in non-generational mode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"}],"sha":"2a98e496c21db15d6940fbae64108f3da6c317e5"},{"commit":{"message":"Merge remote-tracking branch 'GitFarmTrunk\/shenandoah' into expand-old-on-demand"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"a39810e6f237a8550fba540d6a2ea061029128fa"},{"commit":{"message":"Refinements to faciliate upstreaming of MMU components"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"}],"sha":"f7a07d3c5dfdb395fd7c2da7d8d6e814cee073a8"},{"commit":{"message":"Fix code related to plab alignment in try_allocate_in\n\nAn assertion error triggered because of a mistake in the code that\npreceded the assertion.  Needed >= instead of >."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"35c8a14ecb236e3b22ee127668b8ded0d5db1af3"},{"commit":{"message":"Adjust asserts for different execution modes"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"8990a0ab36dbda007e5842e799ee39e53e550a0b"},{"commit":{"message":"Adjust leftmost and rightmost when adding old_collector_is_free region"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"a52e43d1e73fdcbfae49f3287202272a0ae169e5"},{"commit":{"message":"Disable min-threshold trigger for OLD GC\n\nSince we are striving to keep OLD-gen as small as possible, the\nmin-threshold trigger is no longer relevant.  We have other adaptive\ntriggers in place now."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"71622afc85953a243a64dc996f5fd5d12d9c9fdd"},{"commit":{"message":"Only call try_allocate_in() if region known to have free memory"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"bfbf9d614233c34617b414e1b90e9da678e00891"},{"commit":{"message":"Do not consider OLD humongous regions for promotion in place\n\nWe accidentally were considering OLD humongous regions as eligible for\npromotion. This resulit in miscalculation of how much memory could be\ntransferred from YOUNG to OLD during promotions in place."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"ebaee0ff8835d906d28bf23df7519b1ab58c8150"},{"commit":{"message":"Disable certain free-set assertions until old-collector-is-free implementation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"1bb71d40e3cc19714eafec79bac0af9a08216a03"},{"commit":{"message":"Only increase ShenandoahFreeSet used for mutator allocations"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"}],"sha":"33a1a928277fa614269191004f94a0139c91284f"},{"commit":{"message":"Remove deprecated command-line options"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"9ff06f1c6716e517008430420f8416c8b38ea4bc"},{"commit":{"message":"FullGC to recompute humongous waste and generations to relax min\/max"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"}],"sha":"31cd39ff10b686cfda1323670e9c6708d5c18a8c"},{"commit":{"message":"Increase affiliated old regions before increasing used after promote in place\n\nOtherwise, we may see an assertion failure because used exceeds span of affiliated regions."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"d0703bd9c2845de02c45672d63bb450c55a13200"},{"commit":{"message":"Force transfer of 1 region to old when regular region promoted in place"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"727c231249cebc5b9ef8fd04f1ba15e2d0a08785"},{"commit":{"message":"Remove redundant assertion\n\nThe removed assert enforced weaker constraints than the assert that\nimmediately followed it."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"f7cbeddfaf90bec77cdbac46572bd199e965e482"},{"commit":{"message":"Account for regular regions promoted in place promptly\n\nIn the previous implementation, accounting was deferred until the end\nthe evacuation and updating cycles.  However, the affiliation of the\nregion was changed at the time the region was promoted.  The problem\nthat arose was that PLABs and shared allocations can be taken from the\nnewly promoted regions, resulting in usage that exceeds the\nold-generationi capacity and exceeds the span of the regions that are\naffiliated with the old generation.  Then, availability in old becomes\n\"negative\" because available is calculated as capacity - used.  But\nnegative is really ginormous, because the type of available is unsigned\nsize_t.  This patch fixes these problems."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"9cfa3a95a7743784e2ee1e16d38a3e2e540ee0d1"},{"commit":{"message":"Cleanup some assertions so failures do not trigger in traditional Shen"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"9237ed0ecbde8cd710d0f0a33ad74e7e93c94200"},{"commit":{"message":"Enable PLAB allocations for every thread at start of evacuation\n\nThese may have been disabled during previous evacuation if promotion\nbudget was exceeded."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"f0782463d3461fa906b3238e1df45c6e27b62615"},{"commit":{"message":"Do not enable_plab_promotions in try_evacuate_object\n\nThe trigger for this was too liberal, and we ended up thrashing between\ndisabling and enabling plab promotions.  This performs much better with\nthis change.  However, once a thread's plab promotions have been\ndisabled, that thread will never again be able to perform plab\npromotions.\n\nI need to add code that re-enabled plab promotions at the start of the\nevacuation cycle."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"90d00ca8870f60543895b97447f5e18c5d70f6c0"},{"commit":{"message":"Fix humongous waste accounting in make_trash and adjust old triggers"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRegulatorThread.cpp"}],"sha":"801cc634a8547c1b862662c8c82eb766f267a1b7"},{"commit":{"message":"Tidy up ShenandoahMMuTracker implementation for upstreaming"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"}],"sha":"6cb9e6a423f913de9ecc3ad096c3e29bb7c5fa8a"},{"commit":{"message":"Give special handling to certain assertions during full gc"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"895827db58f2027ed362dbd543363805a1c1aed4"},{"commit":{"message":"Fix two assertions to apply only in generational mode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"aa37bcddf3695a2f62946490d206984ab3ae6af5"},{"commit":{"message":"Fix assert to allow fullgc worker threads"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"ce96aa65c02650c68346d78608f5bb730b39b655"},{"commit":{"message":"Fix computation of humongous bytes promoted in place"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"}],"sha":"946d162b06dad9e58bb515a9bb44f7255da33743"},{"commit":{"message":"Remember top_before_promoted even for regions with excessive garbage\n\nOtherwise, we may get a bogus estimate of how much garbage before promoted."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"}],"sha":"85e272d80d5c33f23294e9c89583e55ffec09b28"},{"commit":{"message":"Another fix to humongous accounting"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"8dc4015b3356ad6482c3c532917303e8d988e1e8"},{"commit":{"message":"Fix another bug in humongous waste accounting"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"}],"sha":"b76bd0b0e92c7c137389ebaffcd9544d49452f44"},{"commit":{"message":"Fix bugs in humongous waste accounting"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"}],"sha":"7b3a7a4d28585dc90b58a411ac09c1f34e6e756a"},{"commit":{"message":"Several small bug fixes"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"8347c2f7d14df1a05171ea0814399b5b6159f809"},{"commit":{"message":"Add automatic triggering of old-gen collections"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"72b225f022a53d39038dab22f85200a9267d14c3"},{"commit":{"message":"Fix verification error when regions are promoted in place"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"aff8b6db9e4b883bd5d629da18f396b44f35f5d0"},{"commit":{"message":"Fix up several assert statements\n\nUse <= instead of <."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"e061eae428514371e5e024bc2693636c72d983a0"},{"commit":{"message":"Disqualify from promotion if !region->has_live()\n\nFound and fixed a bug whereby a region with no live was planned for\npromotion, but then was not promoted because reclaimed as immediate\ngarbage.  This left accounting for used memory confused."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"a72669e386ec96efeb6dbb1cf3a674f51b256bf7"},{"commit":{"message":"Initialize two fields of ShenandoahHeap\n\nAlso, turn on some temporary instrumentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"ea20f1136a65734cf82b56f5d5c3779b8a62e82b"},{"commit":{"message":"Remove anti-pattern code to disable mixed evac when young under duress"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"5b93775772cc1dba7d374c13ada1a2c559c3b67a"},{"commit":{"message":"Add heuristic triggers for old-gen collection"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.hpp"}],"sha":"fb536efec6e1feb021756c7a5840a9b00fa3fa59"},{"commit":{"message":"Fix bugs with GLOBAL collections"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"e7d344252787986a3463dea214d6b548934ab8d1"},{"commit":{"message":"Several fixes to run in single-generation mode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"}],"sha":"67c4531edc0bc5dad5cea6cd5f58238afd9638c0"},{"commit":{"message":"Arrange to coalesce-and-fill regions promoted in place"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"b3176c8fba12ea8dc0be13c79d9d09936a540cde"},{"commit":{"message":"Force evacuation even when collection set is empty if promote in place\n\nPromote-in-place processing happens during concurrent evacuation.  A\nfuture improvement can skip update refs following evacuation if the\ncollection set is empty."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"dbbfb46ef21aae3df42161d65cee2f62c874750e"},{"commit":{"message":"Fix calculation of old-region surplus and deficit"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"a5a9ac17152a588d7015da94f4a71e5e1c13fb56"},{"commit":{"message":"During evacuation of promote-in-place regions, use a special garbage api\n\nGarbage is computed as used() - get_live_data_bytes().  Since we pad promote-in-place\nregular regions to prevent further allocations, the pad looks like garbage and confuses\nthe traditional garbage() function.  This commit introduces a new API to be used in\nthis scenario."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp"}],"sha":"a8c22f925f47f292cbe5489a0633da5263e2b500"},{"commit":{"message":"Promote regular regions in place"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"090b5f6f46dc224f4db012015a451e9ae4b7c842"},{"commit":{"message":"Add support for promote in place\n\nRegions of tenure age that are highly utilized will be promoted in\nplace, by affiliating the region with OLD rather than evacuating the\nregion into OLD.  This eliminates the need for \"spare\" memory in OLD\nto hold the results of evacuation and reduces the effort required to\nperform the promotion."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"132250e483d54fb10957470c4ea6ebc0243fecfa"},{"commit":{"message":"Relax constraint on thread assertion"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"}],"sha":"d3c9796e70aaebaf1bed7318b3ea6628fb419dd8"},{"commit":{"message":"Fix assertion syntax errors"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"f60343013c09252ad2d9f08304244e82b806168c"},{"commit":{"message":"Minor refactoring and some logging improvements"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"}],"sha":"1c883d416c236e41a0f126e711e783384e592274"},{"commit":{"message":"Fix error in plab accounting for promotions"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"9242af6b5ccf63af8c3f7c2a9bc8ca0540bf57ed"},{"commit":{"message":"Fix single-gen initialization"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"}],"sha":"1c8f793af9fbc94eda3c650f237a8c9adb1d9fc9"},{"commit":{"message":"Put future budgeting code behind test for mode->is_generational"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"0de22919fd80099c0626a8c7b340fd757c496bc8"},{"commit":{"message":"Test for req.is_lab_alloc() before testing req.min_size()"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"fee8506af873a7f5e800f0ebca5723cfa59b68bf"},{"commit":{"message":"Fix syntax error\n\nCertain C++ compilers did not accept the syntax as originally written."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"}],"sha":"6fb6c9da53a205f7ca7e08c8496ba10f2fdcd4d6"},{"commit":{"message":"Fixes to FreeSet implementation to improve performance"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"}],"sha":"2fdce04c4af7d5accebd5d822032fd539fed5072"},{"commit":{"message":"Performance improvements\n\nStart old gc immediately after a young gc to maximize allocation runway.\nPreselect aged regions in order of least live data bytes.\nTransfer fromn young to old after cleanup recycles collected regions.,"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"54fdce494f358512755fcd8116dc8dfcfa835416"},{"commit":{"message":"Simplify mutator-time calculation"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"}],"sha":"f85648b9b156144135f5f3149f3f156d9bc048f7"},{"commit":{"message":"Misc bug fixes and performance improvements to auto-sizing"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"}],"sha":"e3f552983d24e38b46f334e8807b984398ed1181"},{"commit":{"message":"Increments of progress on auto-sizing refinements\n\nCode builds but does not yet run correctly."},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahAdaptiveHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/heuristics\/shenandoahOldHeuristics.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahAsserts.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahGeneration.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMmuTracker.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahOldGeneration.cpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp"},{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/shenandoah\/test_shenandoahOldHeuristic.cpp"}],"sha":"8af99ec555941417969030b2256fe30fa644d106"}]