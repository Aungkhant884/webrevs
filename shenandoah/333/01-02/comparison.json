{"files":[{"patch":"@@ -264,1 +264,1 @@\n-    bool gc_requested = (_mode != none);\n+    bool gc_requested = (gc_mode() != none);\n@@ -288,1 +288,1 @@\n-      switch (_mode) {\n+      switch (gc_mode()) {\n@@ -905,1 +905,1 @@\n-  if (_mode == none) {\n+  if (gc_mode() == none) {\n@@ -911,5 +911,2 @@\n-    while (_mode == none) {\n-      bool timeout = ml.wait(5);\n-      if (LogTarget(Debug, gc, thread)::is_enabled() && timeout) {\n-        log_debug(gc, thread)(\"Regulator thread timed out waiting for cycle to start\");\n-      }\n+    while (gc_mode() == none) {\n+      ml.wait();\n@@ -922,1 +919,1 @@\n-    assert(_mode == servicing_old, \"Cannot preempt old if old cycle isn't running.\");\n+    assert(gc_mode() == servicing_old, \"Expected to be servicing old, but was: %s.\", gc_mode_name(gc_mode()));\n@@ -930,5 +927,2 @@\n-    while (_mode == servicing_old) {\n-      bool timeout = ml.wait(5);\n-      if (LogTarget(Debug, gc, thread)::is_enabled() && timeout) {\n-        log_debug(gc, thread)(\"Regulator thread timed out waiting to preempt old cycle\");\n-      }\n+    while (gc_mode() == servicing_old) {\n+      ml.wait();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}