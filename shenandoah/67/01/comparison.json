{"files":[{"patch":"@@ -153,0 +153,1 @@\n+        generation = GLOBAL;\n@@ -254,1 +255,4 @@\n-            service_stw_degenerated_cycle(cause, degen_point);\n+            if (!service_stw_degenerated_cycle(cause, degen_point)) {\n+              \/\/ The degenerated GC was upgraded to a Full GC\n+              generation = GLOBAL;\n+            }\n@@ -311,1 +315,1 @@\n-        assert(generation != YOUNG, \"should not unload classes in young cycle\");\n+        assert(generation == GLOBAL, \"Only unload classes during GLOBAL cycle\");\n@@ -389,1 +393,3 @@\n-\/\/ Young cycles are degenerated to complete the young cycle.\n+\/\/ Young cycles are degenerated to complete the young cycle.  Young\n+\/\/ and old degen may upgrade to Full GC.  Full GC may also be\n+\/\/ triggered directly by a System.gc() invocation.\n@@ -392,18 +398,15 @@\n-\/\/      +-------------+----------+  Idle  +--------------+\n-\/\/      |             |              +                   |\n-\/\/      |             |              |                   |\n-\/\/      |             |              |                   |\n-\/\/      |             |              |                   |\n-\/\/      |             v              v                   v\n-\/\/      |\n-\/\/      |           Young  <---+ Resume Old  <----+ Bootstrap Old\n-\/\/      |             +            +     +               +\n-\/\/      |             |            |     |               |\n-\/\/      |             v            |     |               v\n-\/\/      v        Young Degen       |     |           Young Degen\n-\/\/                                 |     |\n-\/\/   Global  <--------------------+      |\n-\/\/      +                                |\n-\/\/      |                                v\n-\/\/      |\n-\/\/      +--------------------->  Global Degen\n+\/\/      +-----+ Idle +-----+-----------+---------------------+\n+\/\/      |         +        |           |                     |\n+\/\/      |         |        |           |                     |\n+\/\/      |         |        v           |                     |\n+\/\/      |         |  Bootstrap Old +-- | ------------+       |\n+\/\/      |         |   +                |             |       |\n+\/\/      |         |   |                |             |       |\n+\/\/      |         v   v                v             v       |\n+\/\/      |    Resume Old <----------+ Young +--> Young Degen  |\n+\/\/      |     +  +                                   +       |\n+\/\/      v     |  |                                   |       |\n+\/\/   Global <-+  |                                   |       |\n+\/\/      +        |                                   |       |\n+\/\/      |        v                                   v       |\n+\/\/      +--->  Global Degen +--------------------> Full <----+\n@@ -588,0 +591,3 @@\n+    assert(generation->generation_mode() != OLD, \"Old GC takes a different control path\");\n+    \/\/ Concurrent young-gen collection degenerates to young\n+    \/\/ collection.  Same for global collections.\n@@ -645,1 +651,1 @@\n-void ShenandoahControlThread::service_stw_degenerated_cycle(GCCause::Cause cause, ShenandoahGC::ShenandoahDegenPoint point) {\n+bool ShenandoahControlThread::service_stw_degenerated_cycle(GCCause::Cause cause, ShenandoahGC::ShenandoahDegenPoint point) {\n@@ -665,0 +671,1 @@\n+  return !gc.upgraded_to_full();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":29,"deletions":22,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -108,1 +108,4 @@\n-  void service_stw_degenerated_cycle(GCCause::Cause cause, ShenandoahGC::ShenandoahDegenPoint point);\n+\n+  \/\/ Return true if degenerated cycle finishes normally.  Return false if the degenerated cycle transformed itself\n+  \/\/ into a full GC.\n+  bool service_stw_degenerated_cycle(GCCause::Cause cause, ShenandoahGC::ShenandoahDegenPoint point);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -49,1 +49,2 @@\n-  _generation(generation) {\n+  _generation(generation),\n+  _upgraded_to_full(false) {\n@@ -334,3 +335,1 @@\n-  log_info(gc)(\"Cannot finish degeneration, upgrading to Full GC\");\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_degenerated_upgrade_to_full();\n-\n+  upgrade_to_full();\n@@ -342,1 +341,1 @@\n-  ShenandoahHeap::heap()->shenandoah_policy()->record_degenerated_upgrade_to_full();\n+  upgrade_to_full();\n@@ -364,0 +363,10 @@\n+\n+void ShenandoahDegenGC::upgrade_to_full() {\n+  log_info(gc)(\"Degenerate GC upgrading to Full GC\");\n+  ShenandoahHeap::heap()->shenandoah_policy()->record_degenerated_upgrade_to_full();\n+  _upgraded_to_full = true;\n+}\n+\n+bool ShenandoahDegenGC::upgraded_to_full() {\n+  return _upgraded_to_full;\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+  bool _upgraded_to_full;\n@@ -42,0 +43,1 @@\n+  bool upgraded_to_full();\n@@ -64,0 +66,1 @@\n+  void upgrade_to_full();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahDegeneratedGC.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}