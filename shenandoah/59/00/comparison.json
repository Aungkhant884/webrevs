{"files":[{"patch":"@@ -124,0 +124,24 @@\n+    if (ShenandoahHeap::heap()->mode()->is_generational()) {\n+      bool checkcast = (decorators & ARRAYCOPY_CHECKCAST) != 0;\n+      bool disjoint = (decorators & ARRAYCOPY_DISJOINT) != 0;\n+      bool obj_int = type == T_OBJECT LP64_ONLY(&& UseCompressedOops);\n+\n+      \/\/ We need to squirrel away the original element count because the\n+      \/\/ array copy assembly will destroy the value and we need it for the\n+      \/\/ card marking barrier.\n+#ifdef _LP64\n+      if (!checkcast) {\n+        if (!obj_int) {\n+          \/\/ Save count for barrier\n+          __ movptr(r11, count);\n+        } else if (disjoint) {\n+          \/\/ Save dst in r11 in the disjoint case\n+          __ movq(r11, dst);\n+        }\n+      }\n+#else\n+if (disjoint) {\n+        __ mov(rdx, dst);          \/\/ save 'to'\n+      }\n+#endif\n+    }\n@@ -190,3 +214,0 @@\n-#ifdef _LP64\n-  Register tmp = rscratch1;\n-#else\n@@ -194,1 +215,0 @@\n-#endif\n@@ -198,2 +218,1 @@\n-#if COMPILER2_OR_JVMCI\n-    if (VM_Version::supports_avx512vlbw() && MaxVectorSize  >= 32 && !checkcast) {\n+    if (!checkcast) {\n@@ -207,0 +226,2 @@\n+    } else {\n+      tmp = rscratch1;\n@@ -208,1 +229,0 @@\n-#  endif\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"}]}