{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2018, 2023, Red Hat, Inc. All rights reserved.\n@@ -106,1 +106,1 @@\n-  AllocateNode* alloc = AllocateNode::Ideal_allocation(base, phase);\n+  AllocateNode* alloc = AllocateNode::Ideal_allocation(base);\n@@ -154,1 +154,1 @@\n-                                              AllocateNode::Ideal_allocation(st_base, phase),\n+                                              AllocateNode::Ideal_allocation(st_base),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahBarrierSetC2.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -290,1 +290,1 @@\n-  inline ShenandoahHeapRegion* const heap_region_containing(const void* addr) const;\n+  inline ShenandoahHeapRegion* heap_region_containing(const void* addr) const;\n@@ -293,1 +293,1 @@\n-  inline ShenandoahHeapRegion* const get_region(size_t region_idx) const;\n+  inline ShenandoahHeapRegion* get_region(size_t region_idx) const;\n@@ -298,1 +298,1 @@\n-  inline ShenandoahMmuTracker* const mmu_tracker() { return &_mmu_tracker; };\n+  inline ShenandoahMmuTracker* mmu_tracker() { return &_mmu_tracker; };\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-inline ShenandoahHeapRegion* const ShenandoahHeap::heap_region_containing(const void* addr) const {\n+inline ShenandoahHeapRegion* ShenandoahHeap::heap_region_containing(const void* addr) const {\n@@ -935,1 +935,1 @@\n-inline ShenandoahHeapRegion* const ShenandoahHeap::get_region(size_t region_idx) const {\n+inline ShenandoahHeapRegion* ShenandoahHeap::get_region(size_t region_idx) const {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-  static const int region_states_num() {\n+  static int region_states_num() {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -978,1 +978,1 @@\n-  static const size_t smallest_chunk_size_words() {\n+  static size_t smallest_chunk_size_words() {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahScanRemembered.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}