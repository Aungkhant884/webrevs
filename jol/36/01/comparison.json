{"files":[{"patch":"@@ -114,1 +114,1 @@\n-        lilliputVM = guessLilliput(objectHeaderSize);\n+        lilliputVM = guessLilliput(addressSize);\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/HotspotUnsafe.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+    static final String COMP_OOPS_CLASSNAME = \"sun.jvm.hotspot.oops.CompressedOops\";\n+    static final String COMP_KLASS_CLASSNAME = \"sun.jvm.hotspot.oops.CompressedKlassPointers\";\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/sa\/Constants.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -274,0 +274,1 @@\n+                args.add(\"--add-exports\"); args.add(\"jdk.hotspot.agent\/sun.jvm.hotspot.oops=ALL-UNNAMED\");\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/sa\/ServiceabilityAgentSupport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-            Object vm = ClassUtils.loadClass(VM_CLASSNAME).getMethod(\"getVM\").invoke(null);\n@@ -48,2 +47,1 @@\n-            Method getOopSizeMethod = vmClass.getMethod(\"getOopSize\");\n-            Method getObjectAlignmentInBytesMethod = vmClass.getMethod(\"getObjectAlignmentInBytes\");\n+            Method vmMethod = vmClass.getMethod(\"getVM\");\n@@ -51,4 +49,3 @@\n-            Method getHeapOopSizeMethod = vmClass.getMethod(\"getHeapOopSize\");\n-            Method isCompressedOopsEnabledMethod = vmClass.getMethod(\"isCompressedOopsEnabled\");\n-            Method getNarrowOopBaseMethod = universeClass.getMethod(\"getNarrowOopBase\");\n-            Method getNarrowOopShiftMethod = universeClass.getMethod(\"getNarrowOopShift\");\n+            Method heapOopSizeMethod = vmClass.getMethod(\"getHeapOopSize\");\n+            Method oopSizeMethod = vmClass.getMethod(\"getOopSize\");\n+            Method objectAlignmentMethod = vmClass.getMethod(\"getObjectAlignmentInBytes\");\n@@ -56,3 +53,2 @@\n-            Method isCompressedKlassPtrsEnabledMethod = null;\n-            Method getNarrowKlassBaseMethod = null;\n-            Method getNarrowKlassShiftMethod = null;\n+            Method compOopsEnabledMethod = vmClass.getMethod(\"isCompressedOopsEnabled\");\n+            Method compKlassEnabledMethod = vmClass.getMethod(\"isCompressedKlassPointersEnabled\");\n@@ -60,0 +56,2 @@\n+            Method narrowOopBaseMethod = null;\n+            Method narrowOopShiftMethod = null;\n@@ -61,5 +59,7 @@\n-                isCompressedKlassPtrsEnabledMethod = vmClass.getMethod(\"isCompressedKlassPointersEnabled\");\n-                getNarrowKlassBaseMethod = universeClass.getMethod(\"getNarrowKlassBase\");\n-                getNarrowKlassShiftMethod = universeClass.getMethod(\"getNarrowKlassShift\");\n-            } catch (NoSuchMethodException e) {\n-                \/\/ There is nothing to do, seems target JVM is not Java 8\n+                \/\/ Past JDK 13, JDK-8223136, we have a special class for this data.\n+                Class<?> coopClass = ClassUtils.loadClass(COMP_OOPS_CLASSNAME);\n+                narrowOopBaseMethod = coopClass.getMethod(\"getBase\");\n+                narrowOopShiftMethod = coopClass.getMethod(\"getShift\");\n+            } catch (Exception e) {\n+                narrowOopBaseMethod = universeClass.getMethod(\"getNarrowOopBase\");\n+                narrowOopShiftMethod = universeClass.getMethod(\"getNarrowOopShift\");\n@@ -68,12 +68,11 @@\n-            int addressSize = ((Long) getOopSizeMethod.invoke(vm)).intValue();\n-            int objectAlignment = (Integer) getObjectAlignmentInBytesMethod.invoke(vm);\n-\n-            int oopSize = (Integer) getHeapOopSizeMethod.invoke(vm);\n-            boolean compressedOopsEnabled = (Boolean) isCompressedOopsEnabledMethod.invoke(vm);\n-            long narrowOopBase = (Long) getNarrowOopBaseMethod.invoke(null);\n-            int narrowOopShift = (Integer) getNarrowOopShiftMethod.invoke(null);\n-\n-            \/*\n-             * If compressed klass references is not supported (before Java 8),\n-             * use compressed oop references values instead of them.\n-             *\/\n+            Method narrowKlassBaseMethod = null;\n+            Method narrowKlassShiftMethod = null;\n+            try {\n+                \/\/ Past JDK 13, JDK-8223136, we have a special class for this data.\n+                Class<?> coopClass = ClassUtils.loadClass(COMP_KLASS_CLASSNAME);\n+                narrowKlassBaseMethod = coopClass.getMethod(\"getBase\");\n+                narrowKlassShiftMethod = coopClass.getMethod(\"getShift\");\n+            } catch (Exception e) {\n+                narrowKlassBaseMethod = universeClass.getMethod(\"getNarrowKlassBase\");\n+                narrowKlassShiftMethod = universeClass.getMethod(\"getNarrowKlassShift\");\n+            }\n@@ -81,6 +80,1 @@\n-            boolean compressedKlassPtrsEnabled = isCompressedKlassPtrsEnabledMethod != null ?\n-                    (Boolean) isCompressedKlassPtrsEnabledMethod.invoke(vm) : compressedOopsEnabled;\n-            long narrowKlassBase = getNarrowKlassBaseMethod != null ?\n-                    (Long) getNarrowKlassBaseMethod.invoke(null) : narrowOopBase;\n-            int narrowKlassShift = getNarrowKlassShiftMethod != null ?\n-                    (Integer) getNarrowKlassShiftMethod.invoke(null) : narrowOopShift;\n+            Object vm = vmMethod.invoke(null);\n@@ -88,9 +82,11 @@\n-            return new UniverseData(addressSize,\n-                                                        objectAlignment,\n-                                                        oopSize,\n-                                                        compressedOopsEnabled,\n-                                                        narrowOopBase,\n-                                                        narrowOopShift,\n-                                                        compressedKlassPtrsEnabled,\n-                                                        narrowKlassBase,\n-                                                        narrowKlassShift);\n+            return new UniverseData(\n+                    ((Long) oopSizeMethod.invoke(vm)).intValue(),\n+                    (Integer) objectAlignmentMethod.invoke(vm),\n+                    (Integer) heapOopSizeMethod.invoke(vm),\n+                    (Boolean) compOopsEnabledMethod.invoke(vm),\n+                    (Long) narrowOopBaseMethod.invoke(null),\n+                    (Integer) narrowOopShiftMethod.invoke(null),\n+                    (Boolean) compKlassEnabledMethod.invoke(vm),\n+                    (Long) narrowKlassBaseMethod.invoke(null),\n+                    (Integer) narrowKlassShiftMethod.invoke(null)\n+            );\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/sa\/UniverseTask.java","additions":38,"deletions":42,"binary":false,"changes":80,"status":"modified"}]}