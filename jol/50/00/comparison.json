{"files":[{"patch":"@@ -45,6 +45,6 @@\n-            new Model64_Lilliput(false, 8, false),\n-            new Model64_Lilliput(true, 8, false),\n-            new Model64_Lilliput(true, 16, false),\n-            new Model64_Lilliput(false, 8, true),\n-            new Model64_Lilliput(true, 8, true),\n-            new Model64_Lilliput(true, 16, true),\n+            new Model64_Lilliput(false, 8, 8, false),\n+            new Model64_Lilliput(true, 8, 8, false),\n+            new Model64_Lilliput(true, 16, 8, false),\n+            new Model64_Lilliput(false, 8, 8, true),\n+            new Model64_Lilliput(true, 8, 8, true),\n+            new Model64_Lilliput(true, 16, 8, true),\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/EstimatedModels.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-        long jdk8_32 = computeWithLayouter(data, new HotSpotLayouter(new Model32(), 8));;\n+        long jdk8_32 = computeWithLayouter(data, new HotSpotLayouter(new Model32(), 8));\n@@ -109,5 +109,1 @@\n-            out.printf(\"%10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_32),\n-                    MathUtil.diffPercent(jdk8_32, rawSize),\n-                    \"32-bit (<4 GB heap)\"\n-            );\n+            printLine(\"32-bit (<4 GB heap)\",              rawSize,    jdk8_32);\n@@ -121,4 +117,4 @@\n-        long jdk8_coops =           computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 8), 8));\n-        long jdk8_coops_align16 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 16), 8));\n-        long jdk8_coops_align32 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 32), 8));\n-        long jdk8_coops_align64 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 64), 8));\n+        long jdk8_coops =           computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,   8), 8));\n+        long jdk8_coops_align16 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  16), 8));\n+        long jdk8_coops_align32 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  32), 8));\n+        long jdk8_coops_align64 =   computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  64), 8));\n@@ -133,48 +129,7 @@\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_noCoops),\n-                    MathUtil.diffPercent(jdk8_noCoops, rawSize),\n-                    MathUtil.diffPercent(jdk8_noCoops, jdk8_coops),\n-                    msg_noCoops\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops),\n-                    MathUtil.diffPercent(jdk8_coops, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops, jdk8_coops),\n-                    msg_coops\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops_align16),\n-                    MathUtil.diffPercent(jdk8_coops_align16, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops_align16, jdk8_coops),\n-                    msg_coops_align16\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops_align32),\n-                    MathUtil.diffPercent(jdk8_coops_align32, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops_align32, jdk8_coops),\n-                    msg_coops_align32\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops_align64),\n-                    MathUtil.diffPercent(jdk8_coops_align64, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops_align64, jdk8_coops),\n-                    msg_coops_align64\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops_align128),\n-                    MathUtil.diffPercent(jdk8_coops_align128, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops_align128, jdk8_coops),\n-                    msg_coops_align128\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk8_coops_align256),\n-                    MathUtil.diffPercent(jdk8_coops_align256, rawSize),\n-                    MathUtil.diffPercent(jdk8_coops_align256, jdk8_coops),\n-                    msg_coops_align256\n-            );\n+            printLine(msg_noCoops,              rawSize,    jdk8_noCoops,           jdk8_coops);\n+            printLine(msg_coops,                rawSize,    jdk8_coops,             jdk8_coops);\n+            printLine(msg_coops_align16,        rawSize,    jdk8_coops_align16,     jdk8_coops);\n+            printLine(msg_coops_align32,        rawSize,    jdk8_coops_align32,     jdk8_coops);\n+            printLine(msg_coops_align64,        rawSize,    jdk8_coops_align64,     jdk8_coops);\n+            printLine(msg_coops_align128,       rawSize,    jdk8_coops_align128,    jdk8_coops);\n+            printLine(msg_coops_align256,       rawSize,    jdk8_coops_align256,    jdk8_coops);\n@@ -185,4 +140,4 @@\n-        long jdk15_coops =          computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 8), 15));\n-        long jdk15_coops_align16 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 16), 15));\n-        long jdk15_coops_align32 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 32), 15));\n-        long jdk15_coops_align64 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 64), 15));\n+        long jdk15_coops =          computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,   8), 15));\n+        long jdk15_coops_align16 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  16), 15));\n+        long jdk15_coops_align32 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  32), 15));\n+        long jdk15_coops_align64 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true,  64), 15));\n@@ -201,55 +156,7 @@\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_noCoops),\n-                    MathUtil.diffPercent(jdk15_noCoops, rawSize),\n-                    MathUtil.diffPercent(jdk15_noCoops, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_noCoops, jdk8_noCoops),\n-                    msg_noCoops_ccp\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops, jdk8_coops),\n-                    msg_coops\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops_align16),\n-                    MathUtil.diffPercent(jdk15_coops_align16, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops_align16, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops_align16, jdk8_coops_align16),\n-                    msg_coops_align16\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops_align32),\n-                    MathUtil.diffPercent(jdk15_coops_align32, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops_align32, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops_align32, jdk8_coops_align32),\n-                    msg_coops_align32\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops_align64),\n-                    MathUtil.diffPercent(jdk15_coops_align64, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops_align64, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops_align64, jdk8_coops_align64),\n-                    msg_coops_align64\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops_align128),\n-                    MathUtil.diffPercent(jdk15_coops_align128, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops_align128, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops_align128, jdk8_coops_align128),\n-                    msg_coops_align128\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdk15_coops_align256),\n-                    MathUtil.diffPercent(jdk15_coops_align256, rawSize),\n-                    MathUtil.diffPercent(jdk15_coops_align256, jdk15_coops),\n-                    MathUtil.diffPercent(jdk15_coops_align256, jdk8_coops_align256),\n-                    msg_coops_align256\n-            );\n+            printLine(msg_noCoops_ccp,      rawSize,    jdk15_noCoops,          jdk15_coops,    jdk8_noCoops);\n+            printLine(msg_coops,            rawSize,    jdk15_coops,            jdk15_coops,    jdk8_coops);\n+            printLine(msg_coops_align16,    rawSize,    jdk15_coops_align16,    jdk15_coops,    jdk8_coops_align16);\n+            printLine(msg_coops_align32,    rawSize,    jdk15_coops_align32,    jdk15_coops,    jdk8_coops_align32);\n+            printLine(msg_coops_align64,    rawSize,    jdk15_coops_align64,    jdk15_coops,    jdk8_coops_align64);\n+            printLine(msg_coops_align128,   rawSize,    jdk15_coops_align128,   jdk15_coops,    jdk8_coops_align128);\n+            printLine(msg_coops_align256,   rawSize,    jdk15_coops_align256,   jdk15_coops,    jdk8_coops_align256);\n@@ -262,7 +169,7 @@\n-        long jdkLilliput_noCoops =          computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(false, 8, false), 99));\n-        long jdkLilliput_coops =            computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 8, false), 99));\n-        long jdkLilliput_coops_align16 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 16, false), 99));\n-        long jdkLilliput_coops_align32 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 32, false), 99));\n-        long jdkLilliput_coops_align64 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 64, false), 99));\n-        long jdkLilliput_coops_align128 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 128, false), 99));\n-        long jdkLilliput_coops_align256 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256, false), 99));\n+        long jdkLilliput_noBase_noCoops =          computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(false,  8,    8, false), 99));\n+        long jdkLilliput_noBase_coops =            computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,   8,    8, false), 99));\n+        long jdkLilliput_noBase_coops_align16 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  16,    8, false), 99));\n+        long jdkLilliput_noBase_coops_align32 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  32,    8, false), 99));\n+        long jdkLilliput_noBase_coops_align64 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  64,    8, false), 99));\n+        long jdkLilliput_noBase_coops_align128 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 128,    8, false), 99));\n+        long jdkLilliput_noBase_coops_align256 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256,    8, false), 99));\n@@ -276,53 +183,7 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_noCoops),\n-                    MathUtil.diffPercent(jdkLilliput_noCoops, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_noCoops, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_noCoops, jdk8_noCoops),\n-                    MathUtil.diffPercent(jdkLilliput_noCoops, jdk15_noCoops),\n-                    msg_noCoops_ccp\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops, jdk8_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops, jdk15_coops),\n-                    msg_coops\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops_align16),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align16, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdk8_coops_align16),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdk15_coops_align16),\n-                    msg_coops_align16\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops_align32),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align32, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdk8_coops_align32),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdk15_coops_align32),\n-                    msg_coops_align32\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops_align64),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align64, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdk8_coops_align64),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdk15_coops_align64),\n-                    msg_coops_align64\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops_align128),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align128, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdk8_coops_align128),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdk15_coops_align128),\n-                    msg_coops_align128\n-            );\n+            printLine(msg_noCoops_ccp,      rawSize, jdkLilliput_noBase_noCoops,            jdkLilliput_noBase_coops, jdk8_noCoops,         jdk15_noCoops);\n+            printLine(msg_coops,            rawSize, jdkLilliput_noBase_coops,              jdkLilliput_noBase_coops, jdk8_coops,           jdk15_coops);\n+            printLine(msg_coops_align16,    rawSize, jdkLilliput_noBase_coops_align16,      jdkLilliput_noBase_coops, jdk8_coops_align16,   jdk15_coops_align16);\n+            printLine(msg_coops_align32,    rawSize, jdkLilliput_noBase_coops_align32,      jdkLilliput_noBase_coops, jdk8_coops_align32,   jdk15_coops_align32);\n+            printLine(msg_coops_align64,    rawSize, jdkLilliput_noBase_coops_align64,      jdkLilliput_noBase_coops, jdk8_coops_align64,   jdk15_coops_align64);\n+            printLine(msg_coops_align128,   rawSize, jdkLilliput_noBase_coops_align128,     jdkLilliput_noBase_coops, jdk8_coops_align128,  jdk15_coops_align128);\n+            printLine(msg_coops_align256,   rawSize, jdkLilliput_noBase_coops_align256,     jdkLilliput_noBase_coops, jdk8_coops_align256,  jdk15_coops_align256);\n@@ -330,8 +191,0 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput_coops_align256),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align256, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdkLilliput_coops),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdk8_coops_align256),\n-                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdk15_coops_align256),\n-                    msg_coops_align256\n-            );\n@@ -341,1 +194,1 @@\n-        out.println(\"=== Experimental 64-bit OpenJDK: Lilliput, 32-bit headers\");\n+        out.println(\"=== Experimental 64-bit OpenJDK: Lilliput, 64-bit headers, array base improvements\");\n@@ -344,7 +197,7 @@\n-        long jdkLilliput32_noCoops =        computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(false, 8, true), 99));\n-        long jdkLilliput32_coops =          computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 8, true), 99));\n-        long jdkLilliput32_coops_align16 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 16, true), 99));\n-        long jdkLilliput32_coops_align32 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 32, true), 99));\n-        long jdkLilliput32_coops_align64 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 64, true), 99));\n-        long jdkLilliput32_coops_align128 = computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 128, true), 99));\n-        long jdkLilliput32_coops_align256 = computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256, true), 99));\n+        long jdkLilliput_base_noCoops =          computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(false,  8,  4, false), 99));\n+        long jdkLilliput_base_coops =            computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,   8,  4, false), 99));\n+        long jdkLilliput_base_coops_align16 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  16,  4, false), 99));\n+        long jdkLilliput_base_coops_align32 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  32,  4, false), 99));\n+        long jdkLilliput_base_coops_align64 =    computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  64,  4, false), 99));\n+        long jdkLilliput_base_coops_align128 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 128,  4, false), 99));\n+        long jdkLilliput_base_coops_align256 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256,  4, false), 99));\n@@ -358,19 +211,9 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_noCoops),\n-                    MathUtil.diffPercent(jdkLilliput32_noCoops, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdk8_noCoops),\n-                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdk15_noCoops),\n-                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdkLilliput_noCoops),\n-                    msg_noCoops_ccp\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops, jdk8_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops, jdk15_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops, jdkLilliput_coops),\n-                    msg_coops\n-            );\n+            printLine(msg_noCoops_ccp,      rawSize, jdkLilliput_base_noCoops,          jdkLilliput_base_coops, jdk8_noCoops,           jdk15_noCoops,          jdkLilliput_noBase_noCoops);\n+            printLine(msg_coops,            rawSize, jdkLilliput_base_coops,            jdkLilliput_base_coops, jdk8_coops,             jdk15_coops,            jdkLilliput_noBase_coops);\n+            printLine(msg_coops_align16,    rawSize, jdkLilliput_base_coops_align16,    jdkLilliput_base_coops, jdk8_coops_align16,     jdk15_coops_align16,    jdkLilliput_noBase_coops_align16);\n+            printLine(msg_coops_align32,    rawSize, jdkLilliput_base_coops_align32,    jdkLilliput_base_coops, jdk8_coops_align32,     jdk15_coops_align32,    jdkLilliput_noBase_coops_align32);\n+            printLine(msg_coops_align64,    rawSize, jdkLilliput_base_coops_align64,    jdkLilliput_base_coops, jdk8_coops_align64,     jdk15_coops_align64,    jdkLilliput_noBase_coops_align64);\n+            printLine(msg_coops_align128,   rawSize, jdkLilliput_base_coops_align128,   jdkLilliput_base_coops, jdk8_coops_align128,    jdk15_coops_align128,   jdkLilliput_noBase_coops_align128);\n+            printLine(msg_coops_align256,   rawSize, jdkLilliput_base_coops_align256,   jdkLilliput_base_coops, jdk8_coops_align256,    jdk15_coops_align256,   jdkLilliput_noBase_coops_align256);\n+        }\n+        out.println();\n@@ -378,9 +221,2 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops_align16),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align16, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdk8_coops_align16),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdk15_coops_align16),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdkLilliput_coops_align16),\n-                    msg_coops_align16\n-            );\n+        out.println(\"=== Experimental 64-bit OpenJDK: Lilliput, 32-bit headers\");\n+        out.println();\n@@ -388,9 +224,7 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops_align32),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align32, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdk8_coops_align32),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdk15_coops_align32),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdkLilliput_coops_align32),\n-                    msg_coops_align32\n-            );\n+        long jdkLilliput32_noCoops =        computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(false,  8, 8, true), 99));\n+        long jdkLilliput32_coops =          computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,   8, 8, true), 99));\n+        long jdkLilliput32_coops_align16 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  16, 8, true), 99));\n+        long jdkLilliput32_coops_align32 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  32, 8, true), 99));\n+        long jdkLilliput32_coops_align64 =  computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true,  64, 8, true), 99));\n+        long jdkLilliput32_coops_align128 = computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 128, 8, true), 99));\n+        long jdkLilliput32_coops_align256 = computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256, 8, true), 99));\n@@ -398,18 +232,4 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops_align64),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align64, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdk8_coops_align64),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdk15_coops_align64),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdkLilliput_coops_align64),\n-                    msg_coops_align64\n-            );\n-\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops_align128),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align128, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdk8_coops_align128),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdk15_coops_align128),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdkLilliput_coops_align128),\n-                    msg_coops_align128\n+        {\n+            out.printf(\"%37s %s%n\", \"\", \"Upgrade From:\");\n+            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n+                    \"Footprint\", \"Overhead\", \"JVM Mode\", \"JDK < 15\", \"JDK >= 15\", \"Lill-64\", \"Lill-64-AB\", \"Description\"\n@@ -418,9 +238,7 @@\n-            out.printf(\"%10s, %10s, %10s, %10s, %10s, %10s,     %s%n\",\n-                    MathUtil.inProperUnits(jdkLilliput32_coops_align256),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align256, rawSize),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdkLilliput32_coops),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdk8_coops_align256),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdk15_coops_align256),\n-                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdkLilliput_coops_align256),\n-                    msg_coops_align256\n-            );\n+            printLine(msg_noCoops_ccp,    rawSize,  jdkLilliput32_noCoops,        jdkLilliput32_coops, jdk8_noCoops,          jdk15_noCoops,          jdkLilliput_noBase_noCoops,         jdkLilliput_base_noCoops);\n+            printLine(msg_coops,          rawSize,  jdkLilliput32_coops,          jdkLilliput32_coops, jdk8_coops,            jdk15_coops,            jdkLilliput_noBase_coops,           jdkLilliput_base_coops);\n+            printLine(msg_coops_align16,  rawSize,  jdkLilliput32_coops_align16,  jdkLilliput32_coops, jdk8_coops_align16,    jdk15_coops_align16,    jdkLilliput_noBase_coops_align16,   jdkLilliput_base_coops_align16);\n+            printLine(msg_coops_align32,  rawSize,  jdkLilliput32_coops_align32,  jdkLilliput32_coops, jdk8_coops_align32,    jdk15_coops_align32,    jdkLilliput_noBase_coops_align32,   jdkLilliput_base_coops_align32);\n+            printLine(msg_coops_align64,  rawSize,  jdkLilliput32_coops_align64,  jdkLilliput32_coops, jdk8_coops_align64,    jdk15_coops_align64,    jdkLilliput_noBase_coops_align64,   jdkLilliput_base_coops_align64);\n+            printLine(msg_coops_align128, rawSize,  jdkLilliput32_coops_align128, jdkLilliput32_coops, jdk8_coops_align256,   jdk15_coops_align128,   jdkLilliput_noBase_coops_align128,  jdkLilliput_base_coops_align128);\n+            printLine(msg_coops_align256, rawSize,  jdkLilliput32_coops_align256, jdkLilliput32_coops, jdk8_coops_align256,   jdk15_coops_align256,   jdkLilliput_noBase_coops_align256,  jdkLilliput_base_coops_align256);\n@@ -429,0 +247,1 @@\n+    }\n@@ -430,0 +249,6 @@\n+    private static void printLine(String msg, long rawSize, long value, long... bases) {\n+        out.printf(\"%10s, %10s, \", MathUtil.inProperUnits(value), MathUtil.diffPercent(value, rawSize));\n+        for (long base : bases) {\n+            out.printf(\"%10s, \", MathUtil.diffPercent(value, base));\n+        }\n+        out.printf(\"    %s%n\", msg);\n@@ -440,1 +265,0 @@\n-\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpEstimates.java","additions":82,"deletions":258,"binary":false,"changes":340,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-     * Return the address size for this model: the size of the native pointer.\n+     * Return the minimal alignment for array bases.\n@@ -85,1 +85,1 @@\n-     * @return address size in bytes\n+     * @return minimal array base alignment\n@@ -87,1 +87,1 @@\n-    int addressSize();\n+    int arrayBaseAlignment();\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/DataModel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -97,1 +97,2 @@\n-    public int addressSize() {\n+    public int arrayBaseAlignment() {\n+        \/\/ Can be just address size\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model32.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    public int addressSize() {\n+    public int arrayBaseAlignment() {\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+    private final int arrayBaseAlign;\n@@ -39,1 +40,1 @@\n-        this(false, 8, false);\n+        this(false, 8, 8, false);\n@@ -42,1 +43,1 @@\n-    public Model64_Lilliput(boolean compRefs, int align, boolean target) {\n+    public Model64_Lilliput(boolean compRefs, int align, int arrayBaseAlign, boolean target) {\n@@ -45,0 +46,1 @@\n+        this.arrayBaseAlign = target ? 4 : arrayBaseAlign;\n@@ -99,2 +101,2 @@\n-    public int addressSize() {\n-        return 8;\n+    public int arrayBaseAlignment() {\n+        return arrayBaseAlign;\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model64_Lilliput.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,0 +76,10 @@\n+    int arrayBaseAlignment;\n+\n+    private static int guessArrayBaseAlignment(String type) {\n+        int byteOff = VM.current().arrayBaseOffset(type);\n+        if ((byteOff % 8) == 0) return 8;\n+        if ((byteOff % 4) == 0) return 4;\n+        if ((byteOff % 2) == 0) return 2;\n+        return 1;\n+    }\n+\n@@ -77,2 +87,17 @@\n-    public int addressSize() {\n-        return VM.current().addressSize();\n+    public int arrayBaseAlignment() {\n+        if (arrayBaseAlignment != 0) {\n+            return arrayBaseAlignment;\n+        }\n+        int al = Integer.MAX_VALUE;\n+        al = Math.min(al, guessArrayBaseAlignment(\"boolean\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"byte\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"short\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"char\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"int\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"float\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"long\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"double\"));\n+        al = Math.min(al, guessArrayBaseAlignment(\"Object\"));\n+        arrayBaseAlignment = al;\n+\n+        return al;\n@@ -84,1 +109,1 @@\n-                (headerSize() + \"-byte object header, \") +\n+                (headerSize() + \"-byte object headers, \") +\n@@ -86,1 +111,2 @@\n-                (objectAlignment() + \"-byte aligned\");\n+                (objectAlignment() + \"-byte aligned objects, \") +\n+                (arrayBaseAlignment() + \"-byte aligned array bases\");\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/ModelVM.java","additions":30,"deletions":4,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-            base = MathUtil.align(base, Math.max(model.addressSize(), scale));\n+            base = MathUtil.align(base, Math.max(model.arrayBaseAlignment(), scale));\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/layouters\/HotSpotLayouter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}