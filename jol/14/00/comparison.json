{"files":[{"patch":"@@ -73,1 +73,1 @@\n-        Layouter layouter = new HotSpotLayouter(new ModelVM());\n+        Layouter layouter = new HotSpotLayouter(new ModelVM(), 8);\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpStats.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import org.openjdk.jol.layouters.Layouter;\n@@ -48,1 +49,1 @@\n-    static final DataModel[] DATA_MODELS = new DataModel[]{\n+    private static final DataModel[] MODELS_JDK8 = new DataModel[]{\n@@ -53,0 +54,3 @@\n+    };\n+\n+    private static final DataModel[] MODELS_JDK15 = new DataModel[]{\n@@ -59,3 +63,16 @@\n-        for (DataModel model : DATA_MODELS) {\n-            out.println(\"***** \" + model.toString());\n-            out.println(ClassLayout.parseClass(klass, new HotSpotLayouter(model)).toPrintable());\n+        for (DataModel model : MODELS_JDK8) {\n+            Layouter l = new HotSpotLayouter(model, 8);\n+            out.println(\"***** \" + l);\n+            out.println(ClassLayout.parseClass(klass, l).toPrintable());\n+        }\n+\n+        for (DataModel model : MODELS_JDK8) {\n+            Layouter l = new HotSpotLayouter(model, 15);\n+            out.println(\"***** \" + l);\n+            out.println(ClassLayout.parseClass(klass, l).toPrintable());\n+        }\n+\n+        for (DataModel model : MODELS_JDK15) {\n+            Layouter l = new HotSpotLayouter(model, 15);\n+            out.println(\"***** \" + l);\n+            out.println(ClassLayout.parseClass(klass, l).toPrintable());\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/ObjectEstimates.java","additions":21,"deletions":4,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-                    printLine(data, new HotSpotLayouter(model));\n+                    printLine(data, new HotSpotLayouter(model, 8));\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/StringCompress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,12 +254,1 @@\n-            String simpleName = f.typeClass();\n-\n-            if (\n-                !simpleName.equals(\"boolean\") &&\n-                !simpleName.equals(\"byte\") &&\n-                !simpleName.equals(\"short\") &&\n-                !simpleName.equals(\"char\") &&\n-                !simpleName.equals(\"int\") &&\n-                !simpleName.equals(\"float\") &&\n-                !simpleName.equals(\"long\") &&\n-                !simpleName.equals(\"double\")\n-            ) {\n+            if (!f.isPrimitive()) {\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/info\/ClassData.java","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -110,0 +110,16 @@\n+    public boolean isPrimitive() {\n+        switch (type) {\n+            case \"boolean\":\n+            case \"byte\":\n+            case \"short\":\n+            case \"char\":\n+            case \"int\":\n+            case \"float\":\n+            case \"long\":\n+            case \"double\":\n+                return true;\n+            default:\n+                return false;\n+        }\n+    }\n+\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/info\/FieldData.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+    private final int jdkVersion;\n@@ -70,1 +71,1 @@\n-    public HotSpotLayouter(DataModel model) {\n+    public HotSpotLayouter(DataModel model, int jdkVersion) {\n@@ -72,0 +73,1 @@\n+        this.jdkVersion = jdkVersion;\n@@ -76,2 +78,0 @@\n-        SortedSet<FieldLayout> result = new TreeSet<>();\n-\n@@ -87,0 +87,1 @@\n+            SortedSet<FieldLayout> result = new TreeSet<>();\n@@ -91,0 +92,60 @@\n+        if (jdkVersion >= 15) {\n+            return newLayouter(cd);\n+        } else {\n+            return oldLayouter(cd);\n+        }\n+    }\n+\n+    private ClassLayout newLayouter(ClassData cd) {\n+        SortedSet<FieldLayout> result = new TreeSet<>();\n+\n+        List<String> hierarchy = cd.classHierarchy();\n+\n+        BitSet claimed = new BitSet();\n+        claimed.set(0, model.headerSize());\n+\n+        for (String k : hierarchy) {\n+            Collection<FieldData> fields = cd.fieldsFor(k);\n+\n+            SortedSet<FieldLayout> current = new TreeSet<>();\n+            for (int size : new int[]{8, 4, 2, 1}) {\n+                for (FieldData f : fields) {\n+                    if (!f.isPrimitive()) continue;\n+                    int fSize = model.sizeOf(f.typeClass());\n+                    if (fSize != size) continue;\n+\n+                    for (int t = 0; t < Integer.MAX_VALUE; t++) {\n+                        if (claimed.get(t * size, (t + 1) * size).isEmpty()) {\n+                            claimed.set(t * size, (t + 1) * size);\n+                            current.add(new FieldLayout(f, t * size, size));\n+                            break;\n+                        }\n+                    }\n+                }\n+            }\n+            for (int size : new int[]{8, 4, 2, 1}) {\n+                for (FieldData f : fields) {\n+                    if (f.isPrimitive()) continue;\n+                    int fSize = model.sizeOf(f.typeClass());\n+                    if (fSize != size) continue;\n+\n+                    for (int t = 0; t < Integer.MAX_VALUE; t++) {\n+                        if (claimed.get(t * size, (t + 1) * size).isEmpty()) {\n+                            claimed.set(t * size, (t + 1) * size);\n+                            current.add(new FieldLayout(f, t * size, size));\n+                            break;\n+                        }\n+                    }\n+                }\n+            }\n+            result.addAll(current);\n+        }\n+\n+        int instanceSize = MathUtil.align(claimed.length(), model.objectAlignment());\n+\n+        return ClassLayout.create(cd, result, model, instanceSize, true);\n+    }\n+\n+    private ClassLayout oldLayouter(ClassData cd) {\n+        SortedSet<FieldLayout> result = new TreeSet<>();\n+\n@@ -357,1 +418,1 @@\n-        return \"VM Layout Simulation (\" + model + \")\";\n+        return \"Hotspot Layout Simulation (JDK \" + jdkVersion + \", \" + model + \")\";\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/layouters\/HotSpotLayouter.java","additions":65,"deletions":4,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n-        if (getVersion() >= 15) return;\n-        tryWith(1, 5);\n+        tryWith(1, 5, getVersion());\n@@ -34,2 +33,1 @@\n-        if (getVersion() >= 15) return;\n-        tryWith(2, 5);\n+        tryWith(2, 5, getVersion());\n@@ -38,1 +36,1 @@\n-    public void tryWith(int hierarchyDepth, int fieldsPerClass) throws Exception {\n+    public void tryWith(int hierarchyDepth, int fieldsPerClass, int jdkVersion) throws Exception {\n@@ -47,1 +45,1 @@\n-                Map<Layouter, ClassLayout> candidates = candidateLayouts(cl);\n+                Map<Layouter, ClassLayout> candidates = candidateLayouts(cl, jdkVersion);\n@@ -63,1 +61,1 @@\n-    private Map<Layouter, ClassLayout> candidateLayouts(Class<?> cl) {\n+    private Map<Layouter, ClassLayout> candidateLayouts(Class<?> cl, int jdkVersion) {\n@@ -67,1 +65,1 @@\n-            HotSpotLayouter layouter = new HotSpotLayouter(model);\n+            HotSpotLayouter layouter = new HotSpotLayouter(model, jdkVersion);\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/layouters\/HotspotLayouterRealTest.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    public void testHotspot() {\n+    public void testHotspot_Old() {\n@@ -70,1 +70,16 @@\n-                    HotSpotLayouter layouter = new HotSpotLayouter(model);\n+                    HotSpotLayouter layouter = new HotSpotLayouter(model, 8);\n+                    layouter.layout(cd);\n+                }\n+            } catch (Exception e) {\n+                Assert.fail(\"Failed. Seed = \" + SEEDS[c]);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    public void testHotspot_New() {\n+        for (int c = 0; c < ITERATIONS; c++) {\n+            ClassData cd = ClassData.parseClass(CLS[c]);\n+            try {\n+                for (DataModel model : MODELS) {\n+                    HotSpotLayouter layouter = new HotSpotLayouter(model, 15);\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/layouters\/LayouterInvariantsTest.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -46,2 +46,6 @@\n-     * First layout is the actual VM layout, the remaining three\n-     * are simulations.\n+     * First layout is the actual VM layout, everything else are\n+     * simulations.\n+     *\n+     * JDK 15 brought a new layouter, which may pack fields more densely.\n+     * JDK 15 also allows to have compressed class pointers without\n+     * compressed oops.\n@@ -64,1 +68,1 @@\n-     *     (since JDK 16, can be enabled even without compressed references)\n+     *     (since JDK 15, can be enabled even without compressed references)\n@@ -67,1 +71,1 @@\n-    static final DataModel[] MODELS = new DataModel[]{\n+    private static final DataModel[] MODELS_JDK8 = new DataModel[]{\n@@ -72,0 +76,3 @@\n+    };\n+\n+    private static final DataModel[] MODELS_JDK15 = new DataModel[]{\n@@ -83,2 +90,14 @@\n-        for (DataModel model : MODELS) {\n-            Layouter l = new HotSpotLayouter(model);\n+        for (DataModel model : MODELS_JDK8) {\n+            Layouter l = new HotSpotLayouter(model, 8);\n+            System.out.println(\"***** \" + l);\n+            System.out.println(ClassLayout.parseClass(A.class, l).toPrintable());\n+        }\n+\n+        for (DataModel model : MODELS_JDK8) {\n+            Layouter l = new HotSpotLayouter(model, 15);\n+            System.out.println(\"***** \" + l);\n+            System.out.println(ClassLayout.parseClass(A.class, l).toPrintable());\n+        }\n+\n+        for (DataModel model : MODELS_JDK15) {\n+            Layouter l = new HotSpotLayouter(model, 15);\n@@ -92,1 +111,1 @@\n-        Object b;\n+        int b;\n","filename":"jol-samples\/src\/main\/java\/org\/openjdk\/jol\/samples\/JOLSample_10_DataModels.java","additions":26,"deletions":7,"binary":false,"changes":33,"status":"modified"}]}