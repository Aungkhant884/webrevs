{"files":[{"patch":"@@ -149,1 +149,1 @@\n-If you have never contributed to OpenJDK before, then bots would require you to [sign OCA first](http:\/\/openjdk.java.net\/contribute).\n+If you have never contributed to OpenJDK before, then bots would require you to [sign OCA first](https:\/\/openjdk.java.net\/contribute\/).\n","filename":"README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -86,2 +86,1 @@\n-        List<String> sorted = new ArrayList<>();\n-        sorted.addAll(sizes.keys());\n+        List<String> sorted = new ArrayList<>(sizes.keys());\n@@ -91,1 +90,1 @@\n-                return Long.valueOf(sizes.count(o2)).compareTo(sizes.count(o1));\n+                return Long.compare(sizes.count(o2), sizes.count(o1));\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpStats.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -96,0 +96,4 @@\n+        return classShortName() +  \".\" + name();\n+    }\n+\n+    public String classShortName() {\n@@ -98,2 +102,2 @@\n-        if (idx != -1 && idx < cl.length()) {\n-            return cl.substring(idx + 1) + \".\" + f.name();\n+        if (idx != -1) {\n+            return cl.substring(idx + 1);\n@@ -101,1 +105,1 @@\n-            return cl + \".\" + name();\n+            return cl;\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/info\/FieldLayout.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        Assert.assertNotSame(\"GraphLayout and ClassLayout sizes disagree on B\",\n+        Assert.assertNotEquals(\"GraphLayout and ClassLayout sizes disagree on B\",\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/info\/GraphLayoutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import junit.framework.Assert;\n+import org.junit.Assert;\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/jvms\/AnonymousTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import junit.framework.Assert;\n+import org.junit.Assert;\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/jvms\/ByteLongTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import junit.framework.Assert;\n+import org.junit.Assert;\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/jvms\/DoubleInnerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-import junit.framework.Assert;\n+import org.junit.Assert;\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/layouters\/HotspotLayouterRealTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,0 @@\n-import junit.framework.Assert;\n@@ -5,0 +4,1 @@\n+import org.junit.Assert;\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/layouters\/LayouterInvariantsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,0 +67,8 @@\n+        @sun.misc.Contended(\"first\")\n+        int f;\n+        @sun.misc.Contended(\"first\")\n+        int g;\n+        @sun.misc.Contended(\"last\")\n+        int i;\n+        @sun.misc.Contended(\"last\")\n+        int k;\n","filename":"jol-samples\/src\/main\/java\/org\/openjdk\/jol\/samples\/JOLSample_09_Contended.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,0 +41,4 @@\n+    \/**\n+     * Contended group\n+     *\/\n+    String value() default \"\";\n","filename":"jol-samples\/src\/main\/java\/sun\/misc\/Contended.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}