{"files":[{"patch":"@@ -34,3 +34,3 @@\n-            new Model64(),\n-            new Model64_COOPS_CCPS(),\n-            new Model64_COOPS_CCPS(16),\n+            new Model64(false, false),\n+            new Model64(true, true),\n+            new Model64(true, true, 16),\n@@ -40,2 +40,2 @@\n-            new Model64_CCPS(),\n-            new Model64_CCPS(16),\n+            new Model64(false, true),\n+            new Model64(false, true, 16),\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/EstimatedModels.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -63,5 +63,5 @@\n-            new Model64(),\n-            new Model64_COOPS_CCPS(),\n-            new Model64_COOPS_CCPS(16),\n-            new Model64_CCPS(),\n-            new Model64_CCPS(16),\n+            new Model64(false, false),\n+            new Model64(true, true),\n+            new Model64(true, true, 16),\n+            new Model64(false, true),\n+            new Model64(false, true, 16),\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/StringCompress.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * 64 bits model, no compressed references, no compressed class pointers.\n+ * 64 bits model.\n@@ -37,0 +37,2 @@\n+    private final boolean compRefs;\n+    private final boolean compKlass;\n@@ -38,2 +40,4 @@\n-    public Model64() {\n-        this(8);\n+    public Model64(boolean compressedRefs, boolean compressedClasses, int align) {\n+        this.compRefs = compressedRefs;\n+        this.compKlass = compressedClasses;\n+        this.align = align;\n@@ -42,2 +46,2 @@\n-    public Model64(int align) {\n-        this.align = align;\n+    public Model64(boolean compressedRefs, boolean compressedClasses) {\n+        this(compressedRefs, compressedClasses, 8);\n@@ -53,1 +57,1 @@\n-        return 8;\n+        return compKlass ? 4 : 8;\n@@ -87,1 +91,1 @@\n-                return 8;\n+                return (compRefs ? 4 : 8);\n@@ -98,1 +102,4 @@\n-        return \"64-bit model, \" + align + \"-byte aligned\";\n+        return \"64-bit model\" +\n+                \", \" + (compRefs ? \"\" : \"NO \") + \"compressed references\" +\n+                \", \" + (compKlass ? \"\" : \"NO \") + \"compressed classes\" +\n+                \", \" + align + \"-byte aligned\";\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model64.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,111 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.jol.datamodel;\n-\n-\/**\n- * 64 bits, no compressed references, but have compressed class pointers.\n- *\n- * @author Aleksey Shipilev\n- *\/\n-public class Model64_CCPS implements DataModel {\n-\n-    private final int align;\n-\n-    public Model64_CCPS() {\n-        this(8);\n-    }\n-\n-    public Model64_CCPS(int align) {\n-        this.align = align;\n-    }\n-\n-    @Override\n-    public int markHeaderSize() {\n-        return 8;\n-    }\n-\n-    @Override\n-    public int classHeaderSize() {\n-        return 4;\n-    }\n-\n-    @Override\n-    public int arrayLengthHeaderSize() {\n-        return 4;\n-    }\n-\n-    @Override\n-    public int headerSize() {\n-        return markHeaderSize() + classHeaderSize();\n-    }\n-\n-    @Override\n-    public int arrayHeaderSize() {\n-        return headerSize() + arrayLengthHeaderSize();\n-    }\n-\n-    @Override\n-    public int sizeOf(String klass) {\n-        switch (klass) {\n-            case \"byte\":\n-            case \"boolean\":\n-                return 1;\n-            case \"short\":\n-            case \"char\":\n-                return 2;\n-            case \"int\":\n-            case \"float\":\n-                return 4;\n-            case \"long\":\n-            case \"double\":\n-                return 8;\n-            default:\n-                return 8;\n-        }\n-    }\n-\n-    @Override\n-    public int objectAlignment() {\n-        return align;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"64-bit model, compressed class pointers, \" + align + \"-byte aligned\";\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        Model64_CCPS that = (Model64_CCPS) o;\n-        return align == that.align;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return align;\n-    }\n-}\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model64_CCPS.java","additions":0,"deletions":111,"binary":false,"changes":111,"status":"deleted"},{"patch":"@@ -1,116 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.jol.datamodel;\n-\n-\/**\n- * 64 bits, compressed references, compressed class pointers.\n- *\n- * @author Aleksey Shipilev\n- *\/\n-public class Model64_COOPS_CCPS implements DataModel {\n-\n-    private final int align;\n-\n-    public Model64_COOPS_CCPS() {\n-        this(8);\n-    }\n-\n-    public Model64_COOPS_CCPS(int align) {\n-        this.align = align;\n-    }\n-\n-\n-    @Override\n-    public int markHeaderSize() {\n-        return 8;\n-    }\n-\n-    @Override\n-    public int classHeaderSize() {\n-        return 4;\n-    }\n-\n-    @Override\n-    public int arrayLengthHeaderSize() {\n-        return 4;\n-    }\n-\n-    @Override\n-    public int headerSize() {\n-        return markHeaderSize() + classHeaderSize();\n-    }\n-\n-    @Override\n-    public int arrayHeaderSize() {\n-        return headerSize() + arrayLengthHeaderSize();\n-    }\n-\n-    @Override\n-    public int sizeOf(String klass) {\n-        switch (klass) {\n-            case \"byte\":\n-            case \"boolean\":\n-                return 1;\n-            case \"short\":\n-            case \"char\":\n-                return 2;\n-            case \"int\":\n-            case \"float\":\n-                return 4;\n-            case \"long\":\n-            case \"double\":\n-                return 8;\n-            default:\n-                return 4;\n-        }\n-    }\n-\n-    @Override\n-    public int objectAlignment() {\n-        return align;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"64-bit model, compressed references, compressed class pointers, \" + align + \"-byte aligned\";\n-    }\n-\n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        Model64_COOPS_CCPS that = (Model64_COOPS_CCPS) o;\n-        return align == that.align;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return align;\n-    }\n-}\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/datamodel\/Model64_COOPS_CCPS.java","additions":0,"deletions":116,"binary":false,"changes":116,"status":"deleted"},{"patch":"@@ -19,3 +19,3 @@\n-            new Model64(),\n-            new Model64_CCPS(),\n-            new Model64_COOPS_CCPS(),\n+            new Model64(false, false, 8),\n+            new Model64(false, true, 8),\n+            new Model64(true, true, 8),\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/layouters\/LayouterInvariantsTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -73,3 +73,3 @@\n-            new Model64(),\n-            new Model64_COOPS_CCPS(),\n-            new Model64_COOPS_CCPS(16),\n+            new Model64(false, false),\n+            new Model64(true, true),\n+            new Model64(true, true, 16),\n@@ -79,2 +79,2 @@\n-            new Model64_CCPS(),\n-            new Model64_CCPS(16),\n+            new Model64(false, true),\n+            new Model64(false, true, 16),\n","filename":"jol-samples\/src\/main\/java\/org\/openjdk\/jol\/samples\/JOLSample_10_DataModels.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}