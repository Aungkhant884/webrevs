{"files":[{"patch":"@@ -34,0 +34,1 @@\n+import org.openjdk.jol.util.MathUtil;\n@@ -85,2 +86,2 @@\n-        out.printf(\"%10s,     %s%n\", inProperUnits(rawCount), \"Total objects\");\n-        out.printf(\"%10s,     %s%n\", inProperUnits(rawSize), \"Total data size\");\n+        out.printf(\"%10s,     %s%n\", MathUtil.inProperUnits(rawCount), \"Total objects\");\n+        out.printf(\"%10s,     %s%n\", MathUtil.inProperUnits(rawSize), \"Total data size\");\n@@ -109,2 +110,2 @@\n-                    inProperUnits(jdk8_32),\n-                    diff(jdk8_32, rawSize),\n+                    MathUtil.inProperUnits(jdk8_32),\n+                    MathUtil.diffPercent(jdk8_32, rawSize),\n@@ -133,3 +134,3 @@\n-                    inProperUnits(jdk8_noCoops),\n-                    diff(jdk8_noCoops, rawSize),\n-                    diff(jdk8_noCoops, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_noCoops),\n+                    MathUtil.diffPercent(jdk8_noCoops, rawSize),\n+                    MathUtil.diffPercent(jdk8_noCoops, jdk8_coops),\n@@ -140,3 +141,3 @@\n-                    inProperUnits(jdk8_coops),\n-                    diff(jdk8_coops, rawSize),\n-                    diff(jdk8_coops, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops),\n+                    MathUtil.diffPercent(jdk8_coops, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops, jdk8_coops),\n@@ -147,3 +148,3 @@\n-                    inProperUnits(jdk8_coops_align16),\n-                    diff(jdk8_coops_align16, rawSize),\n-                    diff(jdk8_coops_align16, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops_align16),\n+                    MathUtil.diffPercent(jdk8_coops_align16, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops_align16, jdk8_coops),\n@@ -154,3 +155,3 @@\n-                    inProperUnits(jdk8_coops_align32),\n-                    diff(jdk8_coops_align32, rawSize),\n-                    diff(jdk8_coops_align32, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops_align32),\n+                    MathUtil.diffPercent(jdk8_coops_align32, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops_align32, jdk8_coops),\n@@ -161,3 +162,3 @@\n-                    inProperUnits(jdk8_coops_align64),\n-                    diff(jdk8_coops_align64, rawSize),\n-                    diff(jdk8_coops_align64, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops_align64),\n+                    MathUtil.diffPercent(jdk8_coops_align64, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops_align64, jdk8_coops),\n@@ -168,3 +169,3 @@\n-                    inProperUnits(jdk8_coops_align128),\n-                    diff(jdk8_coops_align128, rawSize),\n-                    diff(jdk8_coops_align128, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops_align128),\n+                    MathUtil.diffPercent(jdk8_coops_align128, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops_align128, jdk8_coops),\n@@ -175,3 +176,3 @@\n-                    inProperUnits(jdk8_coops_align256),\n-                    diff(jdk8_coops_align256, rawSize),\n-                    diff(jdk8_coops_align256, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk8_coops_align256),\n+                    MathUtil.diffPercent(jdk8_coops_align256, rawSize),\n+                    MathUtil.diffPercent(jdk8_coops_align256, jdk8_coops),\n@@ -201,4 +202,4 @@\n-                    inProperUnits(jdk15_noCoops),\n-                    diff(jdk15_noCoops, rawSize),\n-                    diff(jdk15_noCoops, jdk15_coops),\n-                    diff(jdk15_noCoops, jdk8_noCoops),\n+                    MathUtil.inProperUnits(jdk15_noCoops),\n+                    MathUtil.diffPercent(jdk15_noCoops, rawSize),\n+                    MathUtil.diffPercent(jdk15_noCoops, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_noCoops, jdk8_noCoops),\n@@ -209,4 +210,4 @@\n-                    inProperUnits(jdk15_coops),\n-                    diff(jdk15_coops, rawSize),\n-                    diff(jdk15_coops, jdk15_coops),\n-                    diff(jdk15_coops, jdk8_coops),\n+                    MathUtil.inProperUnits(jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops, jdk8_coops),\n@@ -217,4 +218,4 @@\n-                    inProperUnits(jdk15_coops_align16),\n-                    diff(jdk15_coops_align16, rawSize),\n-                    diff(jdk15_coops_align16, jdk15_coops),\n-                    diff(jdk15_coops_align16, jdk8_coops_align16),\n+                    MathUtil.inProperUnits(jdk15_coops_align16),\n+                    MathUtil.diffPercent(jdk15_coops_align16, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops_align16, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops_align16, jdk8_coops_align16),\n@@ -225,4 +226,4 @@\n-                    inProperUnits(jdk15_coops_align32),\n-                    diff(jdk15_coops_align32, rawSize),\n-                    diff(jdk15_coops_align32, jdk15_coops),\n-                    diff(jdk15_coops_align32, jdk8_coops_align32),\n+                    MathUtil.inProperUnits(jdk15_coops_align32),\n+                    MathUtil.diffPercent(jdk15_coops_align32, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops_align32, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops_align32, jdk8_coops_align32),\n@@ -233,4 +234,4 @@\n-                    inProperUnits(jdk15_coops_align64),\n-                    diff(jdk15_coops_align64, rawSize),\n-                    diff(jdk15_coops_align64, jdk15_coops),\n-                    diff(jdk15_coops_align64, jdk8_coops_align64),\n+                    MathUtil.inProperUnits(jdk15_coops_align64),\n+                    MathUtil.diffPercent(jdk15_coops_align64, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops_align64, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops_align64, jdk8_coops_align64),\n@@ -241,4 +242,4 @@\n-                    inProperUnits(jdk15_coops_align128),\n-                    diff(jdk15_coops_align128, rawSize),\n-                    diff(jdk15_coops_align128, jdk15_coops),\n-                    diff(jdk15_coops_align128, jdk8_coops_align128),\n+                    MathUtil.inProperUnits(jdk15_coops_align128),\n+                    MathUtil.diffPercent(jdk15_coops_align128, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops_align128, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops_align128, jdk8_coops_align128),\n@@ -249,4 +250,4 @@\n-                    inProperUnits(jdk15_coops_align256),\n-                    diff(jdk15_coops_align256, rawSize),\n-                    diff(jdk15_coops_align256, jdk15_coops),\n-                    diff(jdk15_coops_align256, jdk8_coops_align256),\n+                    MathUtil.inProperUnits(jdk15_coops_align256),\n+                    MathUtil.diffPercent(jdk15_coops_align256, rawSize),\n+                    MathUtil.diffPercent(jdk15_coops_align256, jdk15_coops),\n+                    MathUtil.diffPercent(jdk15_coops_align256, jdk8_coops_align256),\n@@ -276,5 +277,5 @@\n-                    inProperUnits(jdkLilliput_noCoops),\n-                    diff(jdkLilliput_noCoops, rawSize),\n-                    diff(jdkLilliput_noCoops, jdkLilliput_coops),\n-                    diff(jdkLilliput_noCoops, jdk8_noCoops),\n-                    diff(jdkLilliput_noCoops, jdk15_noCoops),\n+                    MathUtil.inProperUnits(jdkLilliput_noCoops),\n+                    MathUtil.diffPercent(jdkLilliput_noCoops, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_noCoops, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_noCoops, jdk8_noCoops),\n+                    MathUtil.diffPercent(jdkLilliput_noCoops, jdk15_noCoops),\n@@ -285,5 +286,5 @@\n-                    inProperUnits(jdkLilliput_coops),\n-                    diff(jdkLilliput_coops, rawSize),\n-                    diff(jdkLilliput_coops, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops, jdk8_coops),\n-                    diff(jdkLilliput_coops, jdk15_coops),\n+                    MathUtil.inProperUnits(jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops, jdk8_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops, jdk15_coops),\n@@ -294,5 +295,5 @@\n-                    inProperUnits(jdkLilliput_coops_align16),\n-                    diff(jdkLilliput_coops_align16, rawSize),\n-                    diff(jdkLilliput_coops_align16, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops_align16, jdk8_coops_align16),\n-                    diff(jdkLilliput_coops_align16, jdk15_coops_align16),\n+                    MathUtil.inProperUnits(jdkLilliput_coops_align16),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align16, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdk8_coops_align16),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align16, jdk15_coops_align16),\n@@ -303,5 +304,5 @@\n-                    inProperUnits(jdkLilliput_coops_align32),\n-                    diff(jdkLilliput_coops_align32, rawSize),\n-                    diff(jdkLilliput_coops_align32, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops_align32, jdk8_coops_align32),\n-                    diff(jdkLilliput_coops_align32, jdk15_coops_align32),\n+                    MathUtil.inProperUnits(jdkLilliput_coops_align32),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align32, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdk8_coops_align32),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align32, jdk15_coops_align32),\n@@ -312,5 +313,5 @@\n-                    inProperUnits(jdkLilliput_coops_align64),\n-                    diff(jdkLilliput_coops_align64, rawSize),\n-                    diff(jdkLilliput_coops_align64, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops_align64, jdk8_coops_align64),\n-                    diff(jdkLilliput_coops_align64, jdk15_coops_align64),\n+                    MathUtil.inProperUnits(jdkLilliput_coops_align64),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align64, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdk8_coops_align64),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align64, jdk15_coops_align64),\n@@ -321,5 +322,5 @@\n-                    inProperUnits(jdkLilliput_coops_align128),\n-                    diff(jdkLilliput_coops_align128, rawSize),\n-                    diff(jdkLilliput_coops_align128, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops_align128, jdk8_coops_align128),\n-                    diff(jdkLilliput_coops_align128, jdk15_coops_align128),\n+                    MathUtil.inProperUnits(jdkLilliput_coops_align128),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align128, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdk8_coops_align128),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align128, jdk15_coops_align128),\n@@ -330,5 +331,5 @@\n-                    inProperUnits(jdkLilliput_coops_align256),\n-                    diff(jdkLilliput_coops_align256, rawSize),\n-                    diff(jdkLilliput_coops_align256, jdkLilliput_coops),\n-                    diff(jdkLilliput_coops_align256, jdk8_coops_align256),\n-                    diff(jdkLilliput_coops_align256, jdk15_coops_align256),\n+                    MathUtil.inProperUnits(jdkLilliput_coops_align256),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align256, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdkLilliput_coops),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdk8_coops_align256),\n+                    MathUtil.diffPercent(jdkLilliput_coops_align256, jdk15_coops_align256),\n@@ -358,6 +359,6 @@\n-                    inProperUnits(jdkLilliput32_noCoops),\n-                    diff(jdkLilliput32_noCoops, rawSize),\n-                    diff(jdkLilliput32_noCoops, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_noCoops, jdk8_noCoops),\n-                    diff(jdkLilliput32_noCoops, jdk15_noCoops),\n-                    diff(jdkLilliput32_noCoops, jdkLilliput_noCoops),\n+                    MathUtil.inProperUnits(jdkLilliput32_noCoops),\n+                    MathUtil.diffPercent(jdkLilliput32_noCoops, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdk8_noCoops),\n+                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdk15_noCoops),\n+                    MathUtil.diffPercent(jdkLilliput32_noCoops, jdkLilliput_noCoops),\n@@ -368,6 +369,6 @@\n-                    inProperUnits(jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops, rawSize),\n-                    diff(jdkLilliput32_coops, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops, jdk8_coops),\n-                    diff(jdkLilliput32_coops, jdk15_coops),\n-                    diff(jdkLilliput32_coops, jdkLilliput_coops),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops, jdk8_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops, jdk15_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops, jdkLilliput_coops),\n@@ -378,6 +379,6 @@\n-                    inProperUnits(jdkLilliput32_coops_align16),\n-                    diff(jdkLilliput32_coops_align16, rawSize),\n-                    diff(jdkLilliput32_coops_align16, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops_align16, jdk8_coops_align16),\n-                    diff(jdkLilliput32_coops_align16, jdk15_coops_align16),\n-                    diff(jdkLilliput32_coops_align16, jdkLilliput_coops_align16),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops_align16),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align16, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdk8_coops_align16),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdk15_coops_align16),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align16, jdkLilliput_coops_align16),\n@@ -388,6 +389,6 @@\n-                    inProperUnits(jdkLilliput32_coops_align32),\n-                    diff(jdkLilliput32_coops_align32, rawSize),\n-                    diff(jdkLilliput32_coops_align32, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops_align32, jdk8_coops_align32),\n-                    diff(jdkLilliput32_coops_align32, jdk15_coops_align32),\n-                    diff(jdkLilliput32_coops_align32, jdkLilliput_coops_align32),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops_align32),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align32, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdk8_coops_align32),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdk15_coops_align32),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align32, jdkLilliput_coops_align32),\n@@ -398,6 +399,6 @@\n-                    inProperUnits(jdkLilliput32_coops_align64),\n-                    diff(jdkLilliput32_coops_align64, rawSize),\n-                    diff(jdkLilliput32_coops_align64, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops_align64, jdk8_coops_align64),\n-                    diff(jdkLilliput32_coops_align64, jdk15_coops_align64),\n-                    diff(jdkLilliput32_coops_align64, jdkLilliput_coops_align64),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops_align64),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align64, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdk8_coops_align64),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdk15_coops_align64),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align64, jdkLilliput_coops_align64),\n@@ -408,6 +409,6 @@\n-                    inProperUnits(jdkLilliput32_coops_align128),\n-                    diff(jdkLilliput32_coops_align128, rawSize),\n-                    diff(jdkLilliput32_coops_align128, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops_align128, jdk8_coops_align128),\n-                    diff(jdkLilliput32_coops_align128, jdk15_coops_align128),\n-                    diff(jdkLilliput32_coops_align128, jdkLilliput_coops_align128),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops_align128),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align128, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdk8_coops_align128),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdk15_coops_align128),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align128, jdkLilliput_coops_align128),\n@@ -418,6 +419,6 @@\n-                    inProperUnits(jdkLilliput32_coops_align256),\n-                    diff(jdkLilliput32_coops_align256, rawSize),\n-                    diff(jdkLilliput32_coops_align256, jdkLilliput32_coops),\n-                    diff(jdkLilliput32_coops_align256, jdk8_coops_align256),\n-                    diff(jdkLilliput32_coops_align256, jdk15_coops_align256),\n-                    diff(jdkLilliput32_coops_align256, jdkLilliput_coops_align256),\n+                    MathUtil.inProperUnits(jdkLilliput32_coops_align256),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align256, rawSize),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdkLilliput32_coops),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdk8_coops_align256),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdk15_coops_align256),\n+                    MathUtil.diffPercent(jdkLilliput32_coops_align256, jdkLilliput_coops_align256),\n@@ -439,22 +440,0 @@\n-    private String inProperUnits(long bytes) {\n-        final long K = 1000L;\n-        final long M = K * K;\n-        final long G = K * K * K;\n-        if (bytes > 100 * G) {\n-            return (bytes \/ G) + \"G\";\n-        } else if (bytes > 100 * M) {\n-            return (bytes \/ M) + \"M\";\n-        } else if (bytes > 100 * K) {\n-            return (bytes \/ K) + \"K\";\n-        } else {\n-            return bytes + \"\";\n-        }\n-    }\n-\n-    private String diff(long size, long baseline) {\n-        if (size == baseline) {\n-            return \"(same)\";\n-        } else {\n-            return String.format(\"%+.1f%%\", 100F * size \/ baseline - 100F);\n-        }\n-    }\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpEstimates.java","additions":131,"deletions":152,"binary":false,"changes":283,"status":"modified"},{"patch":"@@ -89,0 +89,42 @@\n+\n+    \/**\n+     * Computes the human-readable string representation of percent ratio of value\/base.\n+     *\n+     * @param value value to compute from\n+     * @param base base to compute from\n+     * @return human-readable representation\n+     *\/\n+    public static String diffPercent(long value, long base) {\n+        if (value == base) {\n+            return \"0%\";\n+        } else {\n+            double v = 100D * value \/ base - 100D;\n+            if (Math.abs(v) < 0.1) {\n+                return \"~0%\";\n+            } else {\n+                return String.format(\"%+.1f%%\", v);\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Returns the value formatted in proper units. Assumes power-of-ten suffixes.\n+     *\n+     * @param value value to compute from\n+     * @return string representation of the value\n+     *\/\n+    public static String inProperUnits(long value) {\n+        final long K = 1000L;\n+        final long M = K * K;\n+        final long G = K * K * K;\n+        if (value > 100 * G) {\n+            return (value \/ G) + \"G\";\n+        } else if (value > 100 * M) {\n+            return (value \/ M) + \"M\";\n+        } else if (value > 100 * K) {\n+            return (value \/ K) + \"K\";\n+        } else {\n+            return value + \"\";\n+        }\n+    }\n+\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/util\/MathUtil.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -6,0 +6,2 @@\n+import java.text.NumberFormat;\n+\n@@ -60,0 +62,45 @@\n+    @Test\n+    public void inProperUnitsTest() {\n+        Assert.assertEquals(\"0\", MathUtil.inProperUnits(0));\n+        Assert.assertEquals(\"1\", MathUtil.inProperUnits(1));\n+        Assert.assertEquals(\"10\", MathUtil.inProperUnits(10));\n+        Assert.assertEquals(\"100\", MathUtil.inProperUnits(100));\n+        Assert.assertEquals(\"1000\", MathUtil.inProperUnits(1000));\n+        Assert.assertEquals(\"10000\", MathUtil.inProperUnits(10_000));\n+        Assert.assertEquals(\"100000\", MathUtil.inProperUnits(100_000));\n+\n+        Assert.assertEquals(\"100K\", MathUtil.inProperUnits(100_000 + 1));\n+        Assert.assertEquals(\"1000K\", MathUtil.inProperUnits(1_000_000));\n+        Assert.assertEquals(\"10000K\", MathUtil.inProperUnits(10_000_000));\n+        Assert.assertEquals(\"100000K\", MathUtil.inProperUnits(100_000_000));\n+\n+        Assert.assertEquals(\"100M\", MathUtil.inProperUnits(100_000_000 + 1));\n+        Assert.assertEquals(\"1000M\", MathUtil.inProperUnits(1_000_000_000));\n+        Assert.assertEquals(\"10000M\", MathUtil.inProperUnits(10_000_000_000L));\n+        Assert.assertEquals(\"100000M\", MathUtil.inProperUnits(100_000_000_000L));\n+\n+        Assert.assertEquals(\"100G\", MathUtil.inProperUnits(100_000_000_000L + 1));\n+        Assert.assertEquals(\"1000G\", MathUtil.inProperUnits(1_000_000_000_000L));\n+        Assert.assertEquals(\"10000G\", MathUtil.inProperUnits(10_000_000_000_000L));\n+        Assert.assertEquals(\"100000G\", MathUtil.inProperUnits(100_000_000_000_000L));\n+    }\n+\n+    @Test\n+    public void diffInPercentTest() {\n+        Assert.assertEquals(\"0%\", MathUtil.diffPercent(0, 0));\n+        Assert.assertEquals(\"0%\", MathUtil.diffPercent(1, 1));\n+\n+        Assert.assertEquals(\"~0%\",   MathUtil.diffPercent(10001, 10000));\n+        Assert.assertEquals(\"~0%\",   MathUtil.diffPercent(10009, 10000));\n+\n+        NumberFormat nf = NumberFormat.getInstance();\n+        nf.setMinimumFractionDigits(1);\n+        nf.setMaximumFractionDigits(1);\n+\n+        Assert.assertEquals(\"+\" + nf.format(0.1) + \"%\", MathUtil.diffPercent(10011, 10000));\n+        Assert.assertEquals(\"-\" + nf.format(0.1) + \"%\", MathUtil.diffPercent( 9989, 10000));\n+\n+        Assert.assertEquals(\"+\" + nf.format(5) + \"%\", MathUtil.diffPercent(1050, 1000));\n+        Assert.assertEquals(\"-\" + nf.format(5) + \"%\", MathUtil.diffPercent( 950, 1000));\n+    }\n+\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/util\/MathUtilTest.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"modified"}]}