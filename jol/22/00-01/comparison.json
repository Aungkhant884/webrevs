{"files":[{"patch":"@@ -178,5 +178,5 @@\n-        \/\/ Check that difference is always in the first word.\n-        \/\/ Lilliput encodes classes in that word, so objects of different type\n-        \/\/ would be different in first word. Non Lilliput VMs can have different\n-        \/\/ first words due to biased locking startup, so we try several times.\n-        nextTry: for (int t = 0; t < 1000; t++) {\n+        \/\/ Lilliput encodes classes in mark word, so objects of different types\n+        \/\/ would be different there. Non Lilliput VMs can have different mark words\n+        \/\/ due to different prototype headers, so we try several times, with a little\n+        \/\/ (safepointing) sleep in between.\n+        for (int t = 0; t < 100; t++) {\n@@ -185,3 +185,4 @@\n-            for (int c = 0; c < addressSize; c += 4) {\n-                if (getInt(o1, c) != getInt(o2, c)) {\n-                    continue nextTry;\n+            if (addressSize == 4) {\n+                if (getInt(o1, 0) == getInt(o2, 0)) {\n+                    \/\/ Mark words are identical, definitely not Lilliput.\n+                    return false;\n@@ -189,0 +190,12 @@\n+            } else if (addressSize == 8) {\n+                if (getLong(o1, 0) == getLong(o2, 0)) {\n+                    \/\/ Mark words are identical, definitely not Lilliput.\n+                    return false;\n+                }\n+            } else {\n+                throw new IllegalArgumentException(\"Unknown address size: \" + addressSize);\n+            }\n+            try {\n+                Thread.sleep(1);\n+            } catch (InterruptedException e) {\n+                \/\/ Do nothing.\n@@ -190,2 +203,0 @@\n-            \/\/ Mark words are identical, definitely not Lilliput.\n-            return false;\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/HotspotUnsafe.java","additions":21,"deletions":10,"binary":false,"changes":31,"status":"modified"}]}