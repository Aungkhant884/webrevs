{"files":[{"patch":"@@ -466,1 +466,1 @@\n-        maybe-uninitialized class-memaccess\n+        maybe-uninitialized class-memaccess unused-result\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## Harfbuzz v2.7.2\n+## Harfbuzz v2.8\n","filename":"src\/java.desktop\/share\/legal\/harfbuzz.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -513,1 +513,1 @@\n-      klass = StateTable<Types, Entry<Extra>>::CLASS_OUT_OF_BOUNDS;\n+      klass = StateTable::CLASS_OUT_OF_BOUNDS;\n@@ -579,1 +579,1 @@\n-            num_entries = hb_max (num_entries, *(p - 1) + 1);\n+            num_entries = hb_max (num_entries, *(p - 1) + 1u);\n@@ -600,1 +600,1 @@\n-            num_entries = hb_max (num_entries, *p + 1);\n+            num_entries = hb_max (num_entries, *p + 1u);\n@@ -732,1 +732,4 @@\n-  StateTableDriver (const StateTable<Types, EntryData> &machine_,\n+  using StateTableT = StateTable<Types, EntryData>;\n+  using EntryT = Entry<EntryData>;\n+\n+  StateTableDriver (const StateTableT &machine_,\n@@ -745,1 +748,1 @@\n-    int state = StateTable<Types, EntryData>::STATE_START_OF_TEXT;\n+    int state = StateTableT::STATE_START_OF_TEXT;\n@@ -750,1 +753,1 @@\n-                           (unsigned) StateTable<Types, EntryData>::CLASS_END_OF_TEXT;\n+                           (unsigned) StateTableT::CLASS_END_OF_TEXT;\n@@ -752,1 +755,2 @@\n-      const Entry<EntryData> &entry = machine.get_entry (state, klass);\n+      const EntryT &entry = machine.get_entry (state, klass);\n+      const int next_state = machine.new_state (entry.newState);\n@@ -754,2 +758,1 @@\n-      \/* Unsafe-to-break before this if not in state 0, as things might\n-       * go differently if we start from state 0 here.\n+      \/* Conditions under which it's guaranteed safe-to-break before current glyph:\n@@ -757,18 +760,64 @@\n-       * Ugh.  The indexing here is ugly... *\/\n-      if (state && buffer->backtrack_len () && buffer->idx < buffer->len)\n-      {\n-        \/* If there's no action and we're just epsilon-transitioning to state 0,\n-         * safe to break. *\/\n-        if (c->is_actionable (this, entry) ||\n-            !(entry.newState == StateTable<Types, EntryData>::STATE_START_OF_TEXT &&\n-              entry.flags == context_t::DontAdvance))\n-          buffer->unsafe_to_break_from_outbuffer (buffer->backtrack_len () - 1, buffer->idx + 1);\n-      }\n-\n-      \/* Unsafe-to-break if end-of-text would kick in here. *\/\n-      if (buffer->idx + 2 <= buffer->len)\n-      {\n-        const Entry<EntryData> &end_entry = machine.get_entry (state, StateTable<Types, EntryData>::CLASS_END_OF_TEXT);\n-        if (c->is_actionable (this, end_entry))\n-          buffer->unsafe_to_break (buffer->idx, buffer->idx + 2);\n-      }\n+       * 1. There was no action in this transition; and\n+       *\n+       * 2. If we break before current glyph, the results will be the same. That\n+       *    is guaranteed if:\n+       *\n+       *    2a. We were already in start-of-text state; or\n+       *\n+       *    2b. We are epsilon-transitioning to start-of-text state; or\n+       *\n+       *    2c. Starting from start-of-text state seeing current glyph:\n+       *\n+       *        2c'. There won't be any actions; and\n+       *\n+       *        2c\". We would end up in the same state that we were going to end up\n+       *             in now, including whether epsilon-transitioning.\n+       *\n+       *    and\n+       *\n+       * 3. If we break before current glyph, there won't be any end-of-text action\n+       *    after previous glyph.\n+       *\n+       * This triples the transitions we need to look up, but is worth returning\n+       * granular unsafe-to-break results. See eg.:\n+       *\n+       *   https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/2860\n+       *\/\n+      const EntryT *wouldbe_entry;\n+      bool safe_to_break =\n+        \/* 1. *\/\n+        !c->is_actionable (this, entry)\n+      &&\n+        \/* 2. *\/\n+        (\n+          \/* 2a. *\/\n+          state == StateTableT::STATE_START_OF_TEXT\n+        ||\n+          \/* 2b. *\/\n+          (\n+            (entry.flags & context_t::DontAdvance) &&\n+            next_state == StateTableT::STATE_START_OF_TEXT\n+          )\n+        ||\n+          \/* 2c. *\/\n+          (\n+            wouldbe_entry = &machine.get_entry (StateTableT::STATE_START_OF_TEXT, klass)\n+          ,\n+            \/* 2c'. *\/\n+            !c->is_actionable (this, *wouldbe_entry)\n+          &&\n+            \/* 2c\". *\/\n+            (\n+              next_state == machine.new_state (wouldbe_entry->newState)\n+            &&\n+              (entry.flags & context_t::DontAdvance) == (wouldbe_entry->flags & context_t::DontAdvance)\n+            )\n+          )\n+        )\n+      &&\n+        \/* 3. *\/\n+        !c->is_actionable (this, machine.get_entry (state, StateTableT::CLASS_END_OF_TEXT))\n+      ;\n+\n+      if (!safe_to_break && buffer->backtrack_len () && buffer->idx < buffer->len)\n+        buffer->unsafe_to_break_from_outbuffer (buffer->backtrack_len () - 1, buffer->idx + 1);\n@@ -778,1 +827,1 @@\n-      state = machine.new_state (entry.newState);\n+      state = next_state;\n@@ -781,1 +830,1 @@\n-      if (buffer->idx == buffer->len)\n+      if (buffer->idx == buffer->len || unlikely (!buffer->successful))\n@@ -785,1 +834,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -789,3 +838,0 @@\n-    {\n-      for (; buffer->successful && buffer->idx < buffer->len;)\n-        buffer->next_glyph ();\n@@ -793,1 +839,0 @@\n-    }\n@@ -797,1 +842,1 @@\n-  const StateTable<Types, EntryData> &machine;\n+  const StateTableT &machine;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-aat-layout-common.hh","additions":80,"deletions":35,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-        num_lookups = hb_max (num_lookups, 1 + data.markIndex);\n+        num_lookups = hb_max (num_lookups, 1u + data.markIndex);\n@@ -342,1 +342,1 @@\n-        num_lookups = hb_max (num_lookups, 1 + data.currentIndex);\n+        num_lookups = hb_max (num_lookups, 1u + data.currentIndex);\n@@ -502,1 +502,1 @@\n-          buffer->move_to (match_positions[--cursor % ARRAY_LENGTH (match_positions)]);\n+          if (unlikely (!buffer->move_to (match_positions[--cursor % ARRAY_LENGTH (match_positions)]))) return;\n@@ -528,1 +528,1 @@\n-            buffer->replace_glyph (lig);\n+            if (unlikely (!buffer->replace_glyph (lig))) return;\n@@ -535,2 +535,2 @@\n-              buffer->move_to (match_positions[--match_length % ARRAY_LENGTH (match_positions)]);\n-              buffer->replace_glyph (DELETED_GLYPH);\n+              if (unlikely (!buffer->move_to (match_positions[--match_length % ARRAY_LENGTH (match_positions)]))) return;\n+              if (unlikely (!buffer->replace_glyph (DELETED_GLYPH))) return;\n@@ -539,1 +539,1 @@\n-            buffer->move_to (lig_end);\n+            if (unlikely (!buffer->move_to (lig_end))) return;\n@@ -546,1 +546,1 @@\n-        buffer->move_to (end);\n+        if (unlikely (!buffer->move_to (end))) return;\n@@ -736,1 +736,1 @@\n-        buffer->move_to (mark);\n+        if (unlikely (!buffer->move_to (mark))) return;\n@@ -739,1 +739,1 @@\n-          buffer->copy_glyph ();\n+          if (unlikely (!buffer->copy_glyph ())) return;\n@@ -741,2 +741,1 @@\n-        for (unsigned int i = 0; i < count; i++)\n-          buffer->output_glyph (glyphs[i]);\n+        if (unlikely (!buffer->replace_glyphs (0, count, glyphs))) return;\n@@ -746,1 +745,1 @@\n-        buffer->move_to (end + count);\n+        if (unlikely (!buffer->move_to (end + count))) return;\n@@ -767,1 +766,1 @@\n-          buffer->copy_glyph ();\n+          if (unlikely (!buffer->copy_glyph ())) return;\n@@ -769,2 +768,1 @@\n-        for (unsigned int i = 0; i < count; i++)\n-          buffer->output_glyph (glyphs[i]);\n+        if (unlikely (!buffer->replace_glyphs (0, count, glyphs))) return;\n@@ -789,1 +787,1 @@\n-        buffer->move_to ((flags & DontAdvance) ? end : end + count);\n+        if (unlikely (!buffer->move_to ((flags & DontAdvance) ? end : end + count))) return;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-aat-layout-morx-table.hh","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -82,1 +82,4 @@\n- * Functions for querying OpenType Layout features in the font face.\n+ * Functions for querying AAT Layout features in the font face.\n+ *\n+ * HarfBuzz supports all of the AAT tables used to implement shaping. Other\n+ * AAT tables and their associated features are not supported.\n@@ -88,1 +91,3 @@\n-\/* Table data courtesy of Apple.  Converted from mnemonics to integers\n+\/* Mapping from OpenType feature tags to AAT feature names and selectors.\n+ *\n+ * Table data courtesy of Apple.  Converted from mnemonics to integers\n@@ -170,0 +175,11 @@\n+\/**\n+ * hb_aat_layout_find_feature_mapping:\n+ * @tag: The requested #hb_tag_t feature tag\n+ *\n+ * Fetches the AAT feature-and-selector combination that corresponds\n+ * to a given OpenType feature tag.\n+ *\n+ * Return value: the AAT features and selectors corresponding to the\n+ * OpenType feature tag queried\n+ *\n+ **\/\n@@ -205,1 +221,1 @@\n-\/*\n+\/**\n@@ -207,1 +223,8 @@\n- * @face:\n+ * @face: #hb_face_t to work upon\n+ *\n+ * Tests whether the specified face includes any substitutions in the\n+ * `morx` or `mort` tables.\n+ *\n+ * <note>Note: does not examine the `GSUB` table.<\/note>\n+ *\n+ * Return value: %true if data found, %false otherwise\n@@ -209,1 +232,0 @@\n- * Returns:\n@@ -266,1 +288,1 @@\n-\/*\n+\/**\n@@ -268,1 +290,8 @@\n- * @face:\n+ * @face: #hb_face_t to work upon\n+ *\n+ * Tests whether the specified face includes any positioning information\n+ * in the `kerx` table.\n+ *\n+ * <note>Note: does not examine the `GPOS` table.<\/note>\n+ *\n+ * Return value: %true if data found, %false otherwise\n@@ -270,1 +299,0 @@\n- * Returns:\n@@ -293,1 +321,1 @@\n-\/*\n+\/**\n@@ -295,1 +323,6 @@\n- * @face:\n+ * @face:: #hb_face_t to work upon\n+ *\n+ * Tests whether the specified face includes any tracking information\n+ * in the `trak` table.\n+ *\n+ * Return value: %true if data found, %false otherwise\n@@ -297,1 +330,0 @@\n- * Returns:\n@@ -319,4 +351,7 @@\n- * @face: a face object\n- * @start_offset: iteration's start offset\n- * @feature_count:(inout) (allow-none): buffer size as input, filled size as output\n- * @features: (out caller-allocates) (array length=feature_count): features buffer\n+ * @face: #hb_face_t to work upon\n+ * @start_offset: offset of the first feature type to retrieve\n+ * @feature_count: (inout) (optional): Input = the maximum number of feature types to return;\n+ *                 Output = the actual number of feature types returned (may be zero)\n+ * @features: (out caller-allocates) (array length=feature_count): Array of feature types found\n+ *\n+ * Fetches a list of the AAT feature types included in the specified face.\n@@ -339,2 +374,4 @@\n- * @face: a face object\n- * @feature_type: feature id\n+ * @face: #hb_face_t to work upon\n+ * @feature_type: The #hb_aat_layout_feature_type_t of the requested feature type\n+ *\n+ * Fetches the name identifier of the specified feature type in the face's `name` table.\n@@ -342,1 +379,1 @@\n- * Return value: Name ID index\n+ * Return value: Name identifier of the requested feature type\n@@ -354,7 +391,11 @@\n- * hb_aat_layout_feature_type_get_selectors:\n- * @face:    a face object\n- * @feature_type: feature id\n- * @start_offset:    iteration's start offset\n- * @selector_count: (inout) (allow-none): buffer size as input, filled size as output\n- * @selectors: (out caller-allocates) (array length=selector_count): settings buffer\n- * @default_index: (out) (allow-none): index of default selector if any\n+ * hb_aat_layout_feature_type_get_selector_infos:\n+ * @face: #hb_face_t to work upon\n+ * @feature_type: The #hb_aat_layout_feature_type_t of the requested feature type\n+ * @start_offset: offset of the first feature type to retrieve\n+ * @selector_count: (inout) (optional): Input = the maximum number of selectors to return;\n+ *                  Output = the actual number of selectors returned (may be zero)\n+ * @selectors: (out caller-allocates) (array length=selector_count) (optional):\n+ *             A buffer pointer. The selectors available for the feature type queries.\n+ * @default_index: (out) (optional): The index of the feature's default selector, if any\n+ *\n+ * Fetches a list of the selectors available for the specified feature in the given face.\n@@ -366,1 +407,1 @@\n- * Return value: Number of all available feature selectors.\n+ * Return value: Number of all available feature selectors\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-aat-layout.cc","additions":67,"deletions":26,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_AAT_H_IN\n+#if !defined(HB_AAT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -40,0 +40,40 @@\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_INVALID: Initial, unset feature type\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC: [All Typographic Features](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type0)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES: [Ligatures](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type1)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CURISVE_CONNECTION: [Cursive Connection](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type2)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_LETTER_CASE: [Letter Case](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type3)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION: [Vertical Substitution](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type4)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT: [Linguistic Rearrangement](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type5)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING: [Number Spacing](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type6)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE: [Smart Swash](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type8)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE: [Diacritics](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type9)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION: [Vertical Position](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type10)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS: [Fractions](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type11)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE: [Overlapping Characters](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type13)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS: [Typographic Extras](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type14)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS: [Mathematical Extras](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type15)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE: [Ornament Sets](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type16)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES: [Character Alternatives](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type17)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE: [Design Complexity](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type18)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS: [Style Options](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type19)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE: [Character Shape](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type20)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE: [Number Case](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type21)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING: [Text Spacing](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type22)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION: [Transliteration](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type23)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE: [Annotation](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type24)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE: [Kana Spacing](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type25)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE: [Ideographic Spacing](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type26)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE: [Unicode Decomposition](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type27)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA: [Ruby Kana](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type28)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE: [CJK Symbol Alternatives](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type29)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE: [Ideographic Alternatives](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type30)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE: [CJK Vertical Roman Placement](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type31)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN: [Italic CJK Roman](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type32)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT: [Case Sensitive Layout](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type33)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA: [Alternate Kana](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type34)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES: [Stylistic Alternatives](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type35)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES: [Contextual Alternatives](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type36)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE: [Lower Case](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type37)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE: [Upper Case](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type38)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_LANGUAGE_TAG_TYPE: [Language Tag](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type39)\n+ * @HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE: [CJK Roman Spacing](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html#Type103)\n@@ -41,0 +81,1 @@\n+ * The possible feature types defined for AAT shaping, from Apple [Font Feature Registry](https:\/\/developer.apple.com\/fonts\/TrueType-Reference-Manual\/RM09\/AppendixF.html).\n@@ -88,0 +129,1 @@\n+  \/*< private >*\/\n@@ -93,0 +135,251 @@\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INVALID: Initial, unset feature selector\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_TYPE_FEATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALL_TYPOGRAPHIC\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_REQUIRED_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_COMMON_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_RARE_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LOGOS_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_REBUS_PICTURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DIPHTHONG_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SQUARED_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ABBREV_SQUARED_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SYMBOL_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HISTORICAL_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_UNCONNECTED: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PARTIALLY_CONNECTED: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CURSIVE: for #HB_AAT_LAYOUT_FEATURE_TYPE_LIGATURES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_AND_LOWER_CASE: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_CAPS: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALL_LOWER_CASE: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SMALL_CAPS: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INITIAL_CAPS_AND_SMALL_CAPS: Deprecated\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SUBSTITUTE_VERTICAL_FORMS_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_SUBSTITUTION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINGUISTIC_REARRANGEMENT_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_LINGUISTIC_REARRANGEMENT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_INITIAL_SWASHES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_WORD_FINAL_SWASHES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_INITIAL_SWASHES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LINE_FINAL_SWASHES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NON_FINAL_SWASHES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_SMART_SWASH_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SHOW_DIACRITICS: for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HIDE_DIACRITICS: for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DECOMPOSE_DIACRITICS: for #HB_AAT_LAYOUT_FEATURE_TYPE_DIACRITICS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NORMAL_POSITION: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SUPERIORS: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INFERIORS: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ORDINALS: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SCIENTIFIC_INFERIORS: for #HB_AAT_LAYOUT_FEATURE_TYPE_VERTICAL_POSITION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_FRACTIONS: for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_VERTICAL_FRACTIONS: for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAGONAL_FRACTIONS: for #HB_AAT_LAYOUT_FEATURE_TYPE_FRACTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PREVENT_OVERLAP_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_OVERLAPPING_CHARACTERS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHENS_TO_EM_DASH_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_EN_DASH_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASHED_ZERO_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FORM_INTERROBANG_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SMART_QUOTES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIODS_TO_ELLIPSIS_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_TYPOGRAPHIC_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HYPHEN_TO_MINUS_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ASTERISK_TO_MULTIPLY_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SLASH_TO_DIVIDE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INEQUALITY_LIGATURES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPONENTS_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_MATHEMATICAL_GREEK_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_MATHEMATICAL_EXTRAS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ORNAMENTS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DINGBATS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PI_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FLEURONS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DECORATIVE_BORDERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INTERNATIONAL_SYMBOLS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_MATH_SYMBOLS: for #HB_AAT_LAYOUT_FEATURE_TYPE_ORNAMENT_SETS_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ALTERNATES: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL1: for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL2: for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL3: for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL4: for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DESIGN_LEVEL5: for #HB_AAT_LAYOUT_FEATURE_TYPE_DESIGN_COMPLEXITY_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLE_OPTIONS: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DISPLAY_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ENGRAVED_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ILLUMINATED_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TITLING_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TALL_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLE_OPTIONS\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SIMPLIFIED_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1978_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1983_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS1990_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_ONE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_TWO: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_THREE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FOUR: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_ALT_FIVE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_EXPERT_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_JIS2004_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HOJO_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NLCCHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRADITIONAL_NAMES_CHARACTERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_CHARACTER_SHAPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_NUMBERS: for #HB_AAT_LAYOUT_FEATURE_TYPE_NUMBER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_MONOSPACED_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_THIRD_WIDTH_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_QUARTER_WIDTH_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_PROPORTIONAL_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALT_HALF_WIDTH_TEXT: for #HB_AAT_LAYOUT_FEATURE_TYPE_TEXT_SPACING\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_TRANSLITERATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HIRAGANA_TO_KATAKANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_KATAKANA_TO_HIRAGANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_KANA_TO_ROMANIZATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_HIRAGANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMANIZATION_TO_KATAKANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_ONE: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_TWO: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HANJA_TO_HANGUL_ALT_THREE: for #HB_AAT_LAYOUT_FEATURE_TYPE_TRANSLITERATION\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_BOX_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ROUNDED_BOX_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CIRCLE_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_CIRCLE_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PARENTHESIS_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PERIOD_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ROMAN_NUMERAL_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DIAMOND_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_BOX_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_INVERTED_ROUNDED_BOX_ANNOTATION: for #HB_AAT_LAYOUT_FEATURE_TYPE_ANNOTATION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_KANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_KANA: for #HB_AAT_LAYOUT_FEATURE_TYPE_KANA_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_IDEOGRAPHS: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_IDEOGRAPHS: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_IDEOGRAPHS: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CANONICAL_COMPOSITION_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_COMPATIBILITY_COMPOSITION_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_TRANSCODING_COMPOSITION_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_UNICODE_DECOMPOSITION_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_RUBY_KANA: Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF instead\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA: Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON instead\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_RUBY_KANA_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_RUBY_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_SYMBOL_ALTERNATIVES: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_ONE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_TWO: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_THREE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FOUR: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_SYMBOL_ALT_FIVE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_SYMBOL_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_IDEOGRAPHIC_ALTERNATIVES: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_ONE: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_TWO: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_THREE: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FOUR: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_IDEOGRAPHIC_ALT_FIVE: for #HB_AAT_LAYOUT_FEATURE_TYPE_IDEOGRAPHIC_ALTERNATIVES_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_CENTERED: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_VERTICAL_ROMAN_HBASELINE: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_VERTICAL_ROMAN_PLACEMENT_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_CJK_ITALIC_ROMAN: Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF instead\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN: Deprecated; use #HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON instead\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CJK_ITALIC_ROMAN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_ITALIC_CJK_ROMAN\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_LAYOUT_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CASE_SENSITIVE_SPACING_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_CASE_SENSITIVE_LAYOUT\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_HORIZ_KANA_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_ALTERNATE_VERT_KANA_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_ALTERNATE_KANA\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_NO_STYLISTIC_ALTERNATES: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ONE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWO_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THREE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOUR_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIVE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIX_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHT_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_ELEVEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWELVE_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_THIRTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FOURTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_FIFTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SIXTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_SEVENTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_EIGHTEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_NINETEEN_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_STYLISTIC_ALT_TWENTY_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_STYLISTIC_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_ALTERNATES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_SWASH_ALTERNATES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_ON: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_CONTEXTUAL_SWASH_ALTERNATES_OFF: for #HB_AAT_LAYOUT_FEATURE_TYPE_CONTEXTUAL_ALTERNATIVES\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_LOWER_CASE: for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_SMALL_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_LOWER_CASE_PETITE_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_LOWER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_UPPER_CASE: for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_SMALL_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_UPPER_CASE_PETITE_CAPS: for #HB_AAT_LAYOUT_FEATURE_TYPE_UPPER_CASE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_HALF_WIDTH_CJK_ROMAN: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_PROPORTIONAL_CJK_ROMAN: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_DEFAULT_CJK_ROMAN: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE\n+ * @HB_AAT_LAYOUT_FEATURE_SELECTOR_FULL_WIDTH_CJK_ROMAN: for #HB_AAT_LAYOUT_FEATURE_TYPE_CJK_ROMAN_SPACING_TYPE\n@@ -94,0 +387,1 @@\n+ * The selectors defined for specifying AAT feature settings.\n@@ -427,0 +721,1 @@\n+  \/*< private >*\/\n@@ -440,2 +735,9 @@\n-typedef struct hb_aat_layout_feature_selector_info_t\n-{\n+\/**\n+ * hb_aat_layout_feature_selector_info_t:\n+ * @name_id: The selector's name identifier\n+ * @enable: The value to turn the selector on\n+ * @disable: The value to turn the selector off\n+ *\n+ * Structure representing a setting for an #hb_aat_layout_feature_type_t.\n+ *\/\n+typedef struct hb_aat_layout_feature_selector_info_t {\n@@ -449,0 +751,7 @@\n+\/**\n+ * HB_AAT_LAYOUT_NO_SELECTOR_INDEX\n+ *\n+ * Used when getting or setting AAT feature selectors. Indicates that\n+ * there is no selector index corresponding to the selector of interest.\n+ *\n+ *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-aat-layout.h","additions":312,"deletions":3,"binary":false,"changes":315,"status":"modified"},{"patch":"@@ -38,0 +38,126 @@\n+\/*\n+ * Flags\n+ *\/\n+\n+\/* Enable bitwise ops on enums marked as flags_t *\/\n+\/* To my surprise, looks like the function resolver is happy to silently cast\n+ * one enum to another...  So this doesn't provide the type-checking that I\n+ * originally had in mind... :(.\n+ *\n+ * For MSVC warnings, see: https:\/\/github.com\/harfbuzz\/harfbuzz\/pull\/163\n+ *\/\n+#ifdef _MSC_VER\n+# pragma warning(disable:4200)\n+# pragma warning(disable:4800)\n+#endif\n+#define HB_MARK_AS_FLAG_T(T) \\\n+        extern \"C++\" { \\\n+          static inline constexpr T operator | (T l, T r) { return T ((unsigned) l | (unsigned) r); } \\\n+          static inline constexpr T operator & (T l, T r) { return T ((unsigned) l & (unsigned) r); } \\\n+          static inline constexpr T operator ^ (T l, T r) { return T ((unsigned) l ^ (unsigned) r); } \\\n+          static inline constexpr T operator ~ (T r) { return T (~(unsigned int) r); } \\\n+          static inline T& operator |= (T &l, T r) { l = l | r; return l; } \\\n+          static inline T& operator &= (T& l, T r) { l = l & r; return l; } \\\n+          static inline T& operator ^= (T& l, T r) { l = l ^ r; return l; } \\\n+        } \\\n+        static_assert (true, \"\")\n+\n+\/* Useful for set-operations on small enums.\n+ * For example, for testing \"x ∈ {x1, x2, x3}\" use:\n+ * (FLAG_UNSAFE(x) & (FLAG(x1) | FLAG(x2) | FLAG(x3)))\n+ *\/\n+#define FLAG(x) (static_assert_expr ((unsigned)(x) < 32) + (((uint32_t) 1U) << (unsigned)(x)))\n+#define FLAG_UNSAFE(x) ((unsigned)(x) < 32 ? (((uint32_t) 1U) << (unsigned)(x)) : 0)\n+#define FLAG_RANGE(x,y) (static_assert_expr ((x) < (y)) + FLAG(y+1) - FLAG(x))\n+#define FLAG64(x) (static_assert_expr ((unsigned)(x) < 64) + (((uint64_t) 1ULL) << (unsigned)(x)))\n+#define FLAG64_UNSAFE(x) ((unsigned)(x) < 64 ? (((uint64_t) 1ULL) << (unsigned)(x)) : 0)\n+\n+\n+\/*\n+ * Big-endian integers.\n+ *\/\n+\n+\/* Endian swap, used in Windows related backends *\/\n+static inline constexpr uint16_t hb_uint16_swap (uint16_t v)\n+{ return (v >> 8) | (v << 8); }\n+static inline constexpr uint32_t hb_uint32_swap (uint32_t v)\n+{ return (hb_uint16_swap (v) << 16) | hb_uint16_swap (v >> 16); }\n+\n+template <typename Type, int Bytes = sizeof (Type)>\n+struct BEInt;\n+template <typename Type>\n+struct BEInt<Type, 1>\n+{\n+  public:\n+  BEInt () = default;\n+  constexpr BEInt (Type V) : v {uint8_t (V)} {}\n+  constexpr operator Type () const { return v; }\n+  private: uint8_t v;\n+};\n+template <typename Type>\n+struct BEInt<Type, 2>\n+{\n+  public:\n+  BEInt () = default;\n+  constexpr BEInt (Type V) : v {uint8_t ((V >>  8) & 0xFF),\n+                                uint8_t ((V      ) & 0xFF)} {}\n+\n+  struct __attribute__((packed)) packed_uint16_t { uint16_t v; };\n+  constexpr operator Type () const\n+  {\n+#if ((defined(__GNUC__) && __GNUC__ >= 5) || defined(__clang__)) && \\\n+    defined(__BYTE_ORDER) && \\\n+    (__BYTE_ORDER == __LITTLE_ENDIAN || __BYTE_ORDER == __BIG_ENDIAN)\n+    \/* Spoon-feed the compiler a big-endian integer with alignment 1.\n+     * https:\/\/github.com\/harfbuzz\/harfbuzz\/pull\/1398 *\/\n+#if __BYTE_ORDER == __LITTLE_ENDIAN\n+    return __builtin_bswap16 (((packed_uint16_t *) this)->v);\n+#else \/* __BYTE_ORDER == __BIG_ENDIAN *\/\n+    return ((packed_uint16_t *) this)->v;\n+#endif\n+#else\n+    return (v[0] <<  8)\n+         + (v[1]      );\n+#endif\n+  }\n+  private: uint8_t v[2];\n+};\n+template <typename Type>\n+struct BEInt<Type, 3>\n+{\n+  static_assert (!hb_is_signed (Type), \"\");\n+  public:\n+  BEInt () = default;\n+  constexpr BEInt (Type V) : v {uint8_t ((V >> 16) & 0xFF),\n+                                uint8_t ((V >>  8) & 0xFF),\n+                                uint8_t ((V      ) & 0xFF)} {}\n+\n+  constexpr operator Type () const { return (v[0] << 16)\n+                                          + (v[1] <<  8)\n+                                          + (v[2]      ); }\n+  private: uint8_t v[3];\n+};\n+template <typename Type>\n+struct BEInt<Type, 4>\n+{\n+  public:\n+  BEInt () = default;\n+  constexpr BEInt (Type V) : v {uint8_t ((V >> 24) & 0xFF),\n+                                uint8_t ((V >> 16) & 0xFF),\n+                                uint8_t ((V >>  8) & 0xFF),\n+                                uint8_t ((V      ) & 0xFF)} {}\n+  constexpr operator Type () const { return (v[0] << 24)\n+                                          + (v[1] << 16)\n+                                          + (v[2] <<  8)\n+                                          + (v[3]      ); }\n+  private: uint8_t v[4];\n+};\n+\n+\/* Floats. *\/\n+\n+\/* We want our rounding towards +infinity. *\/\n+static inline float\n+_hb_roundf (float x) { return floorf (x + .5f); }\n+#define roundf(x) _hb_roundf(x)\n+\n+\n@@ -51,0 +177,1 @@\n+\n@@ -218,1 +345,3 @@\n-  (hb_deref (hb_forward<Pred> (p)).has (hb_forward<Val> (v)))\n+  (\n+    hb_deref (hb_forward<Pred> (p)).has (hb_forward<Val> (v))\n+  )\n@@ -272,1 +401,3 @@\n-  (hb_deref (hb_forward<Proj> (f)).get (hb_forward<Val> (v)))\n+  (\n+    hb_deref (hb_forward<Proj> (f)).get (hb_forward<Val> (v))\n+  )\n@@ -299,0 +430,34 @@\n+struct\n+{\n+  private:\n+\n+  template <typename T1, typename T2> auto\n+  impl (T1&& v1, T2 &&v2, hb_priority<2>) const HB_AUTO_RETURN\n+  (\n+    hb_forward<T2> (v2).cmp (hb_forward<T1> (v1)) == 0\n+  )\n+\n+  template <typename T1, typename T2> auto\n+  impl (T1&& v1, T2 &&v2, hb_priority<1>) const HB_AUTO_RETURN\n+  (\n+    hb_forward<T1> (v1).cmp (hb_forward<T2> (v2)) == 0\n+  )\n+\n+  template <typename T1, typename T2> auto\n+  impl (T1&& v1, T2 &&v2, hb_priority<0>) const HB_AUTO_RETURN\n+  (\n+    hb_forward<T1> (v1) == hb_forward<T2> (v2)\n+  )\n+\n+  public:\n+\n+  template <typename T1, typename T2> auto\n+  operator () (T1&& v1, T2 &&v2) const HB_AUTO_RETURN\n+  (\n+    impl (hb_forward<T1> (v1),\n+          hb_forward<T2> (v2),\n+          hb_prioritize)\n+  )\n+}\n+HB_FUNCOBJ (hb_equal);\n+\n@@ -353,1 +518,1 @@\n-  (hb_forward<T> (a) <= hb_forward<T2> (b) ? hb_forward<T> (a) : hb_forward<T2> (b))\n+  (a <= b ? hb_forward<T> (a) : hb_forward<T2> (b))\n@@ -360,1 +525,1 @@\n-  (hb_forward<T> (a) >= hb_forward<T2> (b) ? hb_forward<T> (a) : hb_forward<T2> (b))\n+  (a >= b ? hb_forward<T> (a) : hb_forward<T2> (b))\n@@ -378,1 +543,1 @@\n-static inline HB_CONST_FUNC unsigned int\n+static inline unsigned int\n@@ -419,1 +584,1 @@\n-static inline HB_CONST_FUNC unsigned int\n+static inline unsigned int\n@@ -493,1 +658,1 @@\n-static inline HB_CONST_FUNC unsigned int\n+static inline unsigned int\n@@ -991,2 +1156,0 @@\n-  static constexpr bool passthru_left = false;\n-  static constexpr bool passthru_right = false;\n@@ -999,2 +1162,0 @@\n-  static constexpr bool passthru_left = true;\n-  static constexpr bool passthru_right = true;\n@@ -1007,2 +1168,0 @@\n-  static constexpr bool passthru_left = true;\n-  static constexpr bool passthru_right = true;\n@@ -1015,2 +1174,0 @@\n-  static constexpr bool passthru_left = true;\n-  static constexpr bool passthru_right = false;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-algs.hh","additions":172,"deletions":15,"binary":false,"changes":187,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-      if (!this->arrayZ[i].cmp (x))\n+      if (hb_equal (x, this->arrayZ[i]))\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-array.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-\/* C++11-style GCC primitives. *\/\n+\/* C++11-style GCC primitives. We prefer these as they don't require linking to libstdc++ \/ libc++. *\/\n@@ -76,1 +76,2 @@\n-#elif !defined(HB_NO_MT) && __cplusplus >= 201103L\n+\n+#elif !defined(HB_NO_MT)\n@@ -104,111 +105,0 @@\n-#elif !defined(HB_NO_MT) && defined(_WIN32)\n-\n-#include <windows.h>\n-\n-static inline void _hb_memory_barrier ()\n-{\n-#if !defined(MemoryBarrier) && !defined(__MINGW32_VERSION)\n-  \/* MinGW has a convoluted history of supporting MemoryBarrier. *\/\n-  LONG dummy = 0;\n-  InterlockedExchange (&dummy, 1);\n-#else\n-  MemoryBarrier ();\n-#endif\n-}\n-#define _hb_memory_barrier()                    _hb_memory_barrier ()\n-\n-#define hb_atomic_int_impl_add(AI, V)           InterlockedExchangeAdd ((LONG *) (AI), (V))\n-static_assert ((sizeof (LONG) == sizeof (int)), \"\");\n-\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       (InterlockedCompareExchangePointer ((P), (N), (O)) == (O))\n-\n-\n-#elif !defined(HB_NO_MT) && defined(HAVE_INTEL_ATOMIC_PRIMITIVES)\n-\n-#define _hb_memory_barrier()                    __sync_synchronize ()\n-\n-#define hb_atomic_int_impl_add(AI, V)           __sync_fetch_and_add ((AI), (V))\n-\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       __sync_bool_compare_and_swap ((P), (O), (N))\n-\n-\n-#elif !defined(HB_NO_MT) && defined(HAVE_SOLARIS_ATOMIC_OPS)\n-\n-#include <atomic.h>\n-#include <mbarrier.h>\n-\n-#define _hb_memory_r_barrier()                  __machine_r_barrier ()\n-#define _hb_memory_w_barrier()                  __machine_w_barrier ()\n-#define _hb_memory_barrier()                    __machine_rw_barrier ()\n-\n-static inline int _hb_fetch_and_add (int *AI, int V)\n-{\n-  _hb_memory_w_barrier ();\n-  int result = atomic_add_int_nv ((uint_t *) AI, V) - V;\n-  _hb_memory_r_barrier ();\n-  return result;\n-}\n-static inline bool _hb_compare_and_swap_ptr (void **P, void *O, void *N)\n-{\n-  _hb_memory_w_barrier ();\n-  bool result = atomic_cas_ptr (P, O, N) == O;\n-  _hb_memory_r_barrier ();\n-  return result;\n-}\n-\n-#define hb_atomic_int_impl_add(AI, V)           _hb_fetch_and_add ((AI), (V))\n-\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       _hb_compare_and_swap_ptr ((P), (O), (N))\n-\n-\n-#elif !defined(HB_NO_MT) && defined(__APPLE__)\n-\n-#include <libkern\/OSAtomic.h>\n-#ifdef __MAC_OS_X_MIN_REQUIRED\n-#include <AvailabilityMacros.h>\n-#elif defined(__IPHONE_OS_MIN_REQUIRED)\n-#include <Availability.h>\n-#endif\n-\n-#define _hb_memory_barrier()                    OSMemoryBarrier ()\n-\n-#define hb_atomic_int_impl_add(AI, V)           (OSAtomicAdd32Barrier ((V), (AI)) - (V))\n-\n-#if (MAC_OS_X_VERSION_MIN_REQUIRED > MAC_OS_X_VERSION_10_4 || __IPHONE_VERSION_MIN_REQUIRED >= 20100)\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       OSAtomicCompareAndSwapPtrBarrier ((O), (N), (P))\n-#else\n-#if __ppc64__ || __x86_64__ || __aarch64__\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       OSAtomicCompareAndSwap64Barrier ((int64_t) (O), (int64_t) (N), (int64_t*) (P))\n-#else\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       OSAtomicCompareAndSwap32Barrier ((int32_t) (O), (int32_t) (N), (int32_t*) (P))\n-#endif\n-#endif\n-\n-\n-#elif !defined(HB_NO_MT) && defined(_AIX) && (defined(__IBMCPP__) || defined(__ibmxl__))\n-\n-#include <builtins.h>\n-\n-#define _hb_memory_barrier()                    __lwsync ()\n-\n-static inline int _hb_fetch_and_add (int *AI, int V)\n-{\n-  _hb_memory_barrier ();\n-  int result = __fetch_and_add (AI, V);\n-  _hb_memory_barrier ();\n-  return result;\n-}\n-static inline bool _hb_compare_and_swaplp (long *P, long O, long N)\n-{\n-  _hb_memory_barrier ();\n-  bool result = __compare_and_swaplp (P, &O, N);\n-  _hb_memory_barrier ();\n-  return result;\n-}\n-\n-#define hb_atomic_int_impl_add(AI, V)           _hb_fetch_and_add ((AI), (V))\n-\n-#define hb_atomic_ptr_impl_cmpexch(P,O,N)       _hb_compare_and_swaplp ((long *) (P), (long) (O), (long) (N))\n-static_assert ((sizeof (long) == sizeof (void *)), \"\");\n-\n-\n@@ -262,1 +152,0 @@\n-#define HB_ATOMIC_INT_INIT(V)          {V}\n@@ -265,0 +154,3 @@\n+  hb_atomic_int_t () = default;\n+  constexpr hb_atomic_int_t (int v) : v (v) {}\n+\n@@ -272,1 +164,1 @@\n-  int v;\n+  int v = 0;\n@@ -275,2 +167,0 @@\n-\n-#define HB_ATOMIC_PTR_INIT(V)          {V}\n@@ -282,0 +172,3 @@\n+  hb_atomic_ptr_t () = default;\n+  constexpr hb_atomic_ptr_t (T* v) : v (v) {}\n+\n@@ -291,1 +184,1 @@\n-  T *v;\n+  T *v = nullptr;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-atomic.hh","additions":11,"deletions":118,"binary":false,"changes":129,"status":"modified"},{"patch":"@@ -38,3 +38,0 @@\n-#include <stdio.h>\n-#include <stdlib.h>\n-\n@@ -61,1 +58,1 @@\n- * @destroy: Callback to call when @data is not needed anymore.\n+ * @destroy: (nullable): Callback to call when @data is not needed anymore.\n@@ -119,1 +116,1 @@\n- * blob is always created with %HB_MEMORY_MODE_READONLY, meaning that it\n+ * blob is always created with #HB_MEMORY_MODE_READONLY, meaning that it\n@@ -159,1 +156,1 @@\n- * Return value: New blob, or nullptr if allocation failed.\n+ * Return value: The new blob, or nullptr if allocation failed\n@@ -185,1 +182,1 @@\n- * Return value: (transfer full): the empty blob.\n+ * Return value: (transfer full): The empty blob.\n@@ -237,5 +234,7 @@\n- * @blob: a blob.\n- * @key: key for data to set.\n- * @data: data to set.\n- * @destroy: callback to call when @data is not needed anymore.\n- * @replace: whether to replace an existing data with the same key.\n+ * @blob: An #hb_blob_t\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data to set\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n+ *\n+ * Attaches a user-data key\/data pair to the specified blob.\n@@ -243,1 +242,1 @@\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -259,3 +258,2 @@\n- * @blob: a blob.\n- * @key: key for data to get.\n- *\n+ * @blob: a blob\n+ * @key: The user-data key to query\n@@ -263,0 +261,2 @@\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified font-functions structure.\n@@ -264,1 +264,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -278,2 +278,1 @@\n- * @blob: a blob.\n- *\n+ * @blob: a blob\n@@ -281,0 +280,1 @@\n+ * Makes a blob immutable.\n@@ -297,0 +297,1 @@\n+ * Tests whether a blob is immutable.\n@@ -298,2 +299,1 @@\n- *\n- * Return value: TODO\n+ * Return value: %true if @blob is immutable, %false otherwise\n@@ -314,0 +314,1 @@\n+ * Fetches the length of a blob's data.\n@@ -315,2 +316,1 @@\n- *\n- * Return value: the length of blob data in bytes.\n+ * Return value: the length of @blob data in bytes.\n@@ -329,1 +329,1 @@\n- * @length: (out):\n+ * @length: (out): The length in bytes of the data retrieved\n@@ -331,0 +331,1 @@\n+ * Fetches the data from a blob.\n@@ -332,2 +333,1 @@\n- *\n- * Returns: (transfer none) (array length=length):\n+ * Returns: (transfer none) (array length=length): the byte data of @blob.\n@@ -365,4 +365,4 @@\n-  if (!blob->try_make_writable ()) {\n-    if (length)\n-      *length = 0;\n-\n+  if (hb_object_is_immutable (blob) ||\n+     !blob->try_make_writable ())\n+  {\n+    if (length) *length = 0;\n@@ -372,3 +372,1 @@\n-  if (length)\n-    *length = blob->length;\n-\n+  if (length) *length = blob->length;\n@@ -440,2 +438,2 @@\n-  if (hb_object_is_immutable (this))\n-    return false;\n+  if (unlikely (!length))\n+    mode = HB_MEMORY_MODE_WRITABLE;\n@@ -561,1 +559,4 @@\n- * @file_name: font filename.\n+ * @file_name: A font filename\n+ *\n+ * Creates a new blob containing the data from the\n+ * specified binary font file.\n@@ -563,1 +564,1 @@\n- * Returns: A hb_blob_t pointer with the content of the file\n+ * Returns: An #hb_blob_t pointer with the content of the file\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-blob.cc","additions":38,"deletions":37,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -39,2 +39,13 @@\n-\/*\n- * Note re various memory-modes:\n+\/**\n+ * hb_memory_mode_t:\n+ * @HB_MEMORY_MODE_DUPLICATE: HarfBuzz immediately makes a copy of the data.\n+ * @HB_MEMORY_MODE_READONLY: HarfBuzz client will never modify the data,\n+ *     and HarfBuzz will never modify the data.\n+ * @HB_MEMORY_MODE_WRITABLE: HarfBuzz client made a copy of the data solely\n+ *     for HarfBuzz, so HarfBuzz may modify the data.\n+ * @HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE: See above\n+ *\n+ * Data type holding the memory modes available to\n+ * client programs.\n+ *\n+ * Regarding these various memory-modes:\n@@ -44,1 +55,1 @@\n- *   any such possibility, MODE_DUPLICATE should be used\n+ *   any such possibility, @HB_MEMORY_MODE_DUPLICATE should be used\n@@ -47,1 +58,1 @@\n- * - Use MODE_READONLY otherwise, unless you really really\n+ * - Use @HB_MEMORY_MODE_READONLY otherwise, unless you really really\n@@ -50,1 +61,1 @@\n- * - MODE_WRITABLE is appropriate if you really made a\n+ * - @HB_MEMORY_MODE_WRITABLE is appropriate if you really made a\n@@ -54,4 +65,4 @@\n- * - If the font is mmap()ed, it's ok to use\n- *   READONLY_MAY_MAKE_WRITABLE, however, using that mode\n- *   correctly is very tricky.  Use MODE_READONLY instead.\n- *\/\n+ * - If the font is mmap()ed, it's okay to use\n+ *   @HB_MEMORY_READONLY_MAY_MAKE_WRITABLE, however, using that mode\n+ *   correctly is very tricky.  Use @HB_MEMORY_MODE_READONLY instead.\n+ **\/\n@@ -65,0 +76,8 @@\n+\/**\n+ * hb_blob_t:\n+ *\n+ * Data type for blobs. A blob wraps a chunk of binary\n+ * data and facilitates its lifecycle management between\n+ * a client program and HarfBuzz.\n+ *\n+ **\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-blob.h","additions":29,"deletions":10,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+  private:\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-blob.hh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -4,24 +3,24 @@\n- * Copyright © 2013  Google, Inc.\n- *\n- *  This is part of HarfBuzz, a text shaping library.\n- *\n- * Permission is hereby granted, without written agreement and without\n- * license or royalty fees, to use, copy, modify, and distribute this\n- * software and its documentation for any purpose, provided that the\n- * above copyright notice and the following two paragraphs appear in\n- * all copies of this software.\n- *\n- * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n- * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n- * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n- * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n- * DAMAGE.\n- *\n- * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n- * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n- * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n- * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n- *\n- * Google Author(s): Behdad Esfahbod\n- *\/\n+* Copyright © 2013  Google, Inc.\n+*\n+*  This is part of HarfBuzz, a text shaping library.\n+*\n+* Permission is hereby granted, without written agreement and without\n+* license or royalty fees, to use, copy, modify, and distribute this\n+* software and its documentation for any purpose, provided that the\n+* above copyright notice and the following two paragraphs appear in\n+* all copies of this software.\n+*\n+* IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+* DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+* ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+* IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+* DAMAGE.\n+*\n+* THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+* FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+* ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+* PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*\n+* Google Author(s): Behdad Esfahbod\n+*\/\n@@ -35,1 +34,1 @@\n-#line 36 \"hb-buffer-deserialize-json.hh\"\n+#line 35 \"hb-buffer-deserialize-json.hh\"\n@@ -37,6 +36,14 @@\n-        0u, 0u, 9u, 123u, 9u, 34u, 97u, 103u, 120u, 121u, 34u, 34u, 9u, 58u, 9u, 57u,\n-        48u, 57u, 9u, 125u, 9u, 125u, 9u, 125u, 34u, 34u, 9u, 58u, 9u, 57u, 48u, 57u,\n-        9u, 125u, 9u, 125u, 108u, 108u, 34u, 34u, 9u, 58u, 9u, 57u, 9u, 125u, 9u, 125u,\n-        120u, 121u, 34u, 34u, 9u, 58u, 9u, 57u, 48u, 57u, 9u, 125u, 9u, 125u, 34u, 34u,\n-        9u, 58u, 9u, 57u, 48u, 57u, 9u, 125u, 9u, 125u, 34u, 34u, 9u, 58u, 9u, 57u,\n-        65u, 122u, 34u, 122u, 9u, 125u, 9u, 125u, 9u, 93u, 9u, 123u, 0u, 0u, 0\n+        1u, 0u, 0u, 18u, 0u, 2u, 10u, 15u,\n+        16u, 17u, 2u, 2u, 0u, 7u, 0u, 6u,\n+        5u, 6u, 0u, 19u, 0u, 19u, 0u, 19u,\n+        2u, 2u, 0u, 7u, 0u, 6u, 5u, 6u,\n+        0u, 19u, 0u, 19u, 14u, 14u, 2u, 2u,\n+        0u, 7u, 0u, 6u, 0u, 19u, 0u, 19u,\n+        16u, 17u, 2u, 2u, 0u, 7u, 0u, 6u,\n+        5u, 6u, 0u, 19u, 0u, 19u, 2u, 2u,\n+        0u, 7u, 0u, 6u, 5u, 6u, 0u, 19u,\n+        0u, 19u, 2u, 2u, 0u, 7u, 0u, 6u,\n+        2u, 8u, 0u, 19u, 2u, 8u, 0u, 19u,\n+        0u, 19u, 2u, 2u, 0u, 7u, 0u, 6u,\n+        0u, 19u, 0u, 9u, 0u, 18u, 1u, 0u,\n+        0u\n@@ -45,7 +52,16 @@\n-static const char _deserialize_json_key_spans[] = {\n-        0, 115, 26, 7, 2, 1, 50, 49,\n-        10, 117, 117, 117, 1, 50, 49, 10,\n-        117, 117, 1, 1, 50, 49, 117, 117,\n-        2, 1, 50, 49, 10, 117, 117, 1,\n-        50, 49, 10, 117, 117, 1, 50, 49,\n-        58, 89, 117, 117, 85, 115, 0\n+static const signed char _deserialize_json_char_class[] = {\n+        0, 0, 0, 0, 0, 1, 1, 1,\n+        1, 1, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 1, 1, 1, 1, 0,\n+        1, 2, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 3, 4, 1, 1, 5,\n+        6, 6, 6, 6, 6, 6, 6, 6,\n+        6, 7, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 1, 1, 1, 1, 1,\n+        1, 1, 1, 8, 9, 1, 1, 1,\n+        10, 1, 11, 12, 1, 1, 13, 1,\n+        1, 1, 1, 14, 1, 1, 1, 1,\n+        1, 1, 1, 1, 15, 1, 1, 16,\n+        17, 1, 18, 1, 19, 0\n@@ -55,6 +71,7 @@\n-        0, 0, 116, 143, 151, 154, 156, 207,\n-        257, 268, 386, 504, 622, 624, 675, 725,\n-        736, 854, 972, 974, 976, 1027, 1077, 1195,\n-        1313, 1316, 1318, 1369, 1419, 1430, 1548, 1666,\n-        1668, 1719, 1769, 1780, 1898, 2016, 2018, 2069,\n-        2119, 2178, 2268, 2386, 2504, 2590, 2706\n+        0, 0, 19, 22, 28, 30, 31, 39,\n+        46, 48, 68, 88, 108, 109, 117, 124,\n+        126, 146, 166, 167, 168, 176, 183, 203,\n+        223, 225, 226, 234, 241, 243, 263, 283,\n+        284, 292, 299, 301, 321, 341, 342, 350,\n+        357, 364, 384, 391, 411, 431, 432, 440,\n+        447, 467, 477, 496, 0\n@@ -63,340 +80,64 @@\n-static const char _deserialize_json_indicies[] = {\n-        0, 0, 0, 0, 0, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        0, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 2, 1, 3, 3, 3,\n-        3, 3, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 3, 1, 4, 1,\n-        5, 1, 6, 7, 1, 1, 8, 1,\n-        9, 10, 1, 11, 1, 11, 11, 11,\n-        11, 11, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 11, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 12, 1,\n-        12, 12, 12, 12, 12, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 12,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 13, 1, 1, 14,\n-        15, 15, 15, 15, 15, 15, 15, 15,\n-        15, 1, 16, 17, 17, 17, 17, 17,\n-        17, 17, 17, 17, 1, 18, 18, 18,\n-        18, 18, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 18, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        19, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 20, 1, 21, 21, 21, 21, 21,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 21, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 3, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 22,\n-        1, 18, 18, 18, 18, 18, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        18, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 19, 1, 1, 1,\n-        17, 17, 17, 17, 17, 17, 17, 17,\n-        17, 17, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 20, 1, 23,\n-        1, 23, 23, 23, 23, 23, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        23, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 24, 1, 24, 24, 24, 24,\n-        24, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 24, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        25, 1, 1, 26, 27, 27, 27, 27,\n-        27, 27, 27, 27, 27, 1, 28, 29,\n-        29, 29, 29, 29, 29, 29, 29, 29,\n-        1, 30, 30, 30, 30, 30, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        30, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 31, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 32, 1, 30,\n-        30, 30, 30, 30, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 30, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 31, 1, 1, 1, 29, 29,\n-        29, 29, 29, 29, 29, 29, 29, 29,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 32, 1, 33, 1, 34,\n-        1, 34, 34, 34, 34, 34, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        34, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 35, 1, 35, 35, 35, 35,\n-        35, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 35, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 36, 37, 37, 37, 37,\n-        37, 37, 37, 37, 37, 1, 38, 38,\n-        38, 38, 38, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 38, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 39, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 40, 1, 38, 38, 38, 38,\n-        38, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 38, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 39,\n-        1, 1, 1, 41, 41, 41, 41, 41,\n-        41, 41, 41, 41, 41, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        40, 1, 42, 43, 1, 44, 1, 44,\n-        44, 44, 44, 44, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 44, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        45, 1, 45, 45, 45, 45, 45, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 45, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 46, 1,\n-        1, 47, 48, 48, 48, 48, 48, 48,\n-        48, 48, 48, 1, 49, 50, 50, 50,\n-        50, 50, 50, 50, 50, 50, 1, 51,\n-        51, 51, 51, 51, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 51, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 52, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 53, 1, 51, 51, 51,\n-        51, 51, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 51, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        52, 1, 1, 1, 50, 50, 50, 50,\n-        50, 50, 50, 50, 50, 50, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 53, 1, 54, 1, 54, 54, 54,\n-        54, 54, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 54, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 55, 1,\n-        55, 55, 55, 55, 55, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 55,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 56, 1, 1, 57,\n-        58, 58, 58, 58, 58, 58, 58, 58,\n-        58, 1, 59, 60, 60, 60, 60, 60,\n-        60, 60, 60, 60, 1, 61, 61, 61,\n-        61, 61, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 61, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        62, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 63, 1, 61, 61, 61, 61, 61,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 61, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 62, 1,\n-        1, 1, 60, 60, 60, 60, 60, 60,\n-        60, 60, 60, 60, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 63,\n-        1, 64, 1, 64, 64, 64, 64, 64,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 64, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 65, 1, 65, 65,\n-        65, 65, 65, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 65, 1, 66,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 67, 68, 68,\n-        68, 68, 68, 68, 68, 68, 68, 1,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 1, 1, 1, 1, 1, 1,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 69, 69, 69, 69, 69, 69,\n-        69, 69, 1, 70, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 71, 71,\n-        1, 71, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 1, 1, 1, 1, 1,\n-        1, 1, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 1, 1, 1, 1,\n-        71, 1, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 71, 71, 71, 71,\n-        71, 71, 71, 71, 1, 72, 72, 72,\n-        72, 72, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 72, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        73, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 74, 1, 72, 72, 72, 72, 72,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 72, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 73, 1,\n-        1, 1, 75, 75, 75, 75, 75, 75,\n-        75, 75, 75, 75, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 74,\n-        1, 76, 76, 76, 76, 76, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        76, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 77, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 78, 1, 0,\n-        0, 0, 0, 0, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 0, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 2, 1, 1, 0\n+static const signed char _deserialize_json_indicies[] = {\n+        1, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 2, 3, 0, 4, 5, 6,\n+        7, 8, 0, 9, 10, 11, 12, 12,\n+        0, 0, 0, 0, 0, 0, 13, 13,\n+        0, 0, 0, 14, 15, 16, 18, 19,\n+        20, 0, 0, 21, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 22, 23, 0, 0, 3,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 24,\n+        20, 0, 0, 21, 0, 19, 19, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 22, 25, 25, 0, 0,\n+        0, 0, 0, 0, 26, 26, 0, 0,\n+        0, 27, 28, 29, 31, 32, 33, 0,\n+        0, 34, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 35, 33, 0, 0, 34, 0, 32,\n+        32, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 35, 36, 37,\n+        37, 0, 0, 0, 0, 0, 0, 38,\n+        38, 0, 0, 0, 0, 39, 40, 42,\n+        0, 0, 43, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 44, 42, 0, 0, 43, 0,\n+        45, 45, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 44, 46,\n+        47, 48, 48, 0, 0, 0, 0, 0,\n+        0, 49, 49, 0, 0, 0, 50, 51,\n+        52, 54, 55, 56, 0, 0, 57, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 58, 56,\n+        0, 0, 57, 0, 55, 55, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 58, 59, 59, 0, 0, 0,\n+        0, 0, 0, 60, 60, 0, 0, 0,\n+        61, 62, 63, 65, 66, 67, 0, 0,\n+        68, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        69, 67, 0, 0, 68, 0, 66, 66,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 69, 70, 70, 0,\n+        0, 0, 0, 0, 0, 71, 71, 0,\n+        72, 0, 0, 73, 74, 76, 75, 75,\n+        75, 75, 75, 77, 79, 0, 0, 80,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 81,\n+        75, 0, 0, 0, 0, 0, 75, 83,\n+        0, 0, 84, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 85, 83, 0, 0, 84, 0,\n+        87, 87, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 85, 88,\n+        88, 0, 0, 0, 0, 0, 0, 89,\n+        89, 0, 0, 0, 0, 90, 91, 83,\n+        0, 0, 84, 0, 93, 93, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 85, 94, 0, 0, 95, 0,\n+        0, 0, 0, 0, 96, 1, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 2,\n+        0\n@@ -405,11 +146,8 @@\n-static const char _deserialize_json_trans_targs[] = {\n-        1, 0, 2, 2, 3, 4, 18, 24,\n-        37, 5, 12, 6, 7, 8, 9, 11,\n-        9, 11, 10, 2, 44, 10, 44, 13,\n-        14, 15, 16, 17, 16, 17, 10, 2,\n-        44, 19, 20, 21, 22, 23, 10, 2,\n-        44, 23, 25, 31, 26, 27, 28, 29,\n-        30, 29, 30, 10, 2, 44, 32, 33,\n-        34, 35, 36, 35, 36, 10, 2, 44,\n-        38, 39, 40, 42, 43, 41, 10, 41,\n-        10, 2, 44, 43, 44, 45, 46\n+static const signed char _deserialize_json_index_defaults[] = {\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        75, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0\n@@ -418,1 +156,17 @@\n-static const char _deserialize_json_trans_actions[] = {\n+static const signed char _deserialize_json_cond_targs[] = {\n+        0, 1, 2, 2, 3, 4, 18, 24,\n+        37, 45, 5, 12, 6, 7, 8, 9,\n+        11, 8, 9, 11, 10, 2, 49, 10,\n+        49, 13, 14, 15, 16, 17, 15, 16,\n+        17, 10, 2, 49, 19, 20, 21, 22,\n+        23, 22, 10, 2, 49, 23, 25, 31,\n+        26, 27, 28, 29, 30, 28, 29, 30,\n+        10, 2, 49, 32, 33, 34, 35, 36,\n+        34, 35, 36, 10, 2, 49, 38, 39,\n+        40, 43, 44, 40, 41, 42, 41, 10,\n+        2, 49, 43, 10, 2, 49, 44, 44,\n+        46, 47, 43, 48, 48, 48, 49, 50,\n+        51, 0\n+};\n+\n+static const signed char _deserialize_json_cond_actions[] = {\n@@ -420,9 +174,12 @@\n-        0, 0, 0, 0, 0, 2, 2, 2,\n-        0, 0, 3, 3, 4, 0, 5, 0,\n-        0, 2, 2, 2, 0, 0, 6, 6,\n-        7, 0, 0, 0, 2, 2, 8, 8,\n-        9, 0, 0, 0, 0, 0, 2, 2,\n-        2, 0, 0, 10, 10, 11, 0, 0,\n-        2, 2, 2, 0, 0, 12, 12, 13,\n-        0, 0, 0, 2, 2, 2, 14, 0,\n-        15, 15, 16, 0, 0, 0, 0\n+        0, 0, 0, 0, 0, 0, 2, 2,\n+        2, 0, 0, 0, 3, 3, 4, 0,\n+        5, 0, 0, 2, 2, 2, 0, 0,\n+        0, 6, 6, 7, 0, 0, 0, 2,\n+        2, 0, 8, 8, 9, 0, 0, 0,\n+        0, 0, 2, 2, 2, 0, 0, 0,\n+        10, 10, 11, 0, 0, 2, 2, 2,\n+        0, 0, 0, 12, 12, 13, 0, 0,\n+        2, 14, 14, 0, 15, 0, 0, 16,\n+        16, 17, 0, 18, 18, 19, 0, 15,\n+        0, 0, 20, 20, 0, 21, 0, 0,\n+        0, 0\n@@ -432,1 +189,1 @@\n-static const int deserialize_json_first_final = 44;\n+static const int deserialize_json_first_final = 49;\n@@ -438,1 +195,1 @@\n-#line 97 \"hb-buffer-deserialize-json.rl\"\n+#line 108 \"hb-buffer-deserialize-json.rl\"\n@@ -442,5 +199,5 @@\n-_hb_buffer_deserialize_glyphs_json (hb_buffer_t *buffer,\n-                                    const char *buf,\n-                                    unsigned int buf_len,\n-                                    const char **end_ptr,\n-                                    hb_font_t *font)\n+_hb_buffer_deserialize_json (hb_buffer_t *buffer,\n+const char *buf,\n+unsigned int buf_len,\n+const char **end_ptr,\n+hb_font_t *font)\n@@ -448,1 +205,1 @@\n-  const char *p = buf, *pe = buf + buf_len;\n+        const char *p = buf, *pe = buf + buf_len;\n@@ -450,2 +207,2 @@\n-  \/* Ensure we have positions. *\/\n-  (void) hb_buffer_get_glyph_positions (buffer, nullptr);\n+        \/* Ensure we have positions. *\/\n+        (void) hb_buffer_get_glyph_positions (buffer, nullptr);\n@@ -453,6 +210,6 @@\n-  while (p < pe && ISSPACE (*p))\n-    p++;\n-  if (p < pe && *p == (buffer->len ? ',' : '['))\n-  {\n-    *end_ptr = ++p;\n-  }\n+        while (p < pe && ISSPACE (*p))\n+        p++;\n+        if (p < pe && *p == (buffer->len ? ',' : '['))\n+                {\n+                *end_ptr = ++p;\n+        }\n@@ -460,4 +217,4 @@\n-  const char *tok = nullptr;\n-  int cs;\n-  hb_glyph_info_t info = {0};\n-  hb_glyph_position_t pos = {0};\n+        const char *tok = nullptr;\n+        int cs;\n+        hb_glyph_info_t info = {0};\n+        hb_glyph_position_t pos = {0};\n@@ -465,1 +222,1 @@\n-#line 466 \"hb-buffer-deserialize-json.hh\"\n+#line 223 \"hb-buffer-deserialize-json.hh\"\n@@ -467,1 +224,1 @@\n-        cs = deserialize_json_start;\n+                cs = (int)deserialize_json_start;\n@@ -470,1 +227,1 @@\n-#line 471 \"hb-buffer-deserialize-json.hh\"\n+#line 228 \"hb-buffer-deserialize-json.hh\"\n@@ -472,24 +229,28 @@\n-        int _slen;\n-        int _trans;\n-        const unsigned char *_keys;\n-        const char *_inds;\n-        if ( p == pe )\n-                goto _test_eof;\n-        if ( cs == 0 )\n-                goto _out;\n-_resume:\n-        _keys = _deserialize_json_trans_keys + (cs<<1);\n-        _inds = _deserialize_json_indicies + _deserialize_json_index_offsets[cs];\n-\n-        _slen = _deserialize_json_key_spans[cs];\n-        _trans = _inds[ _slen > 0 && _keys[0] <=(*p) &&\n-                (*p) <= _keys[1] ?\n-                (*p) - _keys[0] : _slen ];\n-\n-        cs = _deserialize_json_trans_targs[_trans];\n-\n-        if ( _deserialize_json_trans_actions[_trans] == 0 )\n-                goto _again;\n-\n-        switch ( _deserialize_json_trans_actions[_trans] ) {\n-        case 1:\n+                unsigned int _trans = 0;\n+                const unsigned char * _keys;\n+                const signed char * _inds;\n+                int _ic;\n+                _resume: {}\n+                if ( p == pe )\n+                        goto _out;\n+                _keys = ( _deserialize_json_trans_keys + ((cs<<1)));\n+                _inds = ( _deserialize_json_indicies + (_deserialize_json_index_offsets[cs]));\n+\n+                if ( ( (*( p))) <= 125 && ( (*( p))) >= 9 ) {\n+                        _ic = (int)_deserialize_json_char_class[(int)( (*( p))) - 9];\n+                        if ( _ic <= (int)(*( _keys+1)) && _ic >= (int)(*( _keys)) )\n+                                _trans = (unsigned int)(*( _inds + (int)( _ic - (int)(*( _keys)) ) ));\n+                        else\n+                                _trans = (unsigned int)_deserialize_json_index_defaults[cs];\n+                }\n+                else {\n+                        _trans = (unsigned int)_deserialize_json_index_defaults[cs];\n+                }\n+\n+                cs = (int)_deserialize_json_cond_targs[_trans];\n+\n+                if ( _deserialize_json_cond_actions[_trans] != 0 ) {\n+\n+                        switch ( _deserialize_json_cond_actions[_trans] ) {\n+                                case 1:  {\n+                                        {\n@@ -497,6 +258,12 @@\n-        {\n-        memset (&info, 0, sizeof (info));\n-        memset (&pos , 0, sizeof (pos ));\n-}\n-        break;\n-        case 5:\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 264 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 5:  {\n+                                        {\n@@ -504,9 +271,15 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 2:\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 280 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 2:  {\n+                                        {\n@@ -514,5 +287,11 @@\n-        {\n-        tok = p;\n-}\n-        break;\n-        case 14:\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 292 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 15:  {\n+                                        {\n@@ -520,24 +299,35 @@\n-        {\n-        if (!hb_font_glyph_from_string (font,\n-                                        tok, p - tok,\n-                                        &info.codepoint))\n-          return false;\n-}\n-        break;\n-        case 15:\n-#line 62 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_uint (tok, p, &info.codepoint)) return false; }\n-        break;\n-        case 8:\n-#line 63 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_uint (tok, p, &info.cluster )) return false; }\n-        break;\n-        case 10:\n-#line 64 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n-        break;\n-        case 12:\n-#line 65 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n-        break;\n-        case 3:\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 302 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 21:  {\n+                                        {\n+#line 56 \"hb-buffer-deserialize-json.rl\"\n+                                                if (unlikely (!buffer->ensure_unicode ())) return false; }\n+\n+#line 312 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 16:  {\n+                                        {\n+#line 58 \"hb-buffer-deserialize-json.rl\"\n+\n+                                                \/* TODO Unescape \\\" and \\\\ if found. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 328 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 18:  {\n+                                        {\n@@ -545,3 +335,9 @@\n-        { if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n-        break;\n-        case 6:\n+                                                if (!parse_uint (tok, p, &info.codepoint)) return false; }\n+\n+#line 338 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 8:  {\n+                                        {\n@@ -549,5 +345,97 @@\n-        { if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n-        break;\n-        case 16:\n-#line 62 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_uint (tok, p, &info.codepoint)) return false; }\n+                                                if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+#line 348 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 10:  {\n+                                        {\n+#line 68 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n+\n+#line 358 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 12:  {\n+                                        {\n+#line 69 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+#line 368 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 3:  {\n+                                        {\n+#line 70 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+#line 378 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 6:  {\n+                                        {\n+#line 71 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+#line 388 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 14:  {\n+                                        {\n+#line 51 \"hb-buffer-deserialize-json.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 400 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n+#line 55 \"hb-buffer-deserialize-json.rl\"\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 406 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 20:  {\n+                                        {\n+#line 51 \"hb-buffer-deserialize-json.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 418 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n+#line 56 \"hb-buffer-deserialize-json.rl\"\n+                                                if (unlikely (!buffer->ensure_unicode ())) return false; }\n+\n+#line 424 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 17:  {\n+                                        {\n+#line 58 \"hb-buffer-deserialize-json.rl\"\n+\n+                                                \/* TODO Unescape \\\" and \\\\ if found. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 440 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -555,11 +443,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 9:\n-#line 63 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 452 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 19:  {\n+                                        {\n+#line 66 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_uint (tok, p, &info.codepoint)) return false; }\n+\n+#line 462 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -567,11 +465,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 11:\n-#line 64 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 474 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 9:  {\n+                                        {\n+#line 67 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+#line 484 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -579,11 +487,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 13:\n-#line 65 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 496 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 11:  {\n+                                        {\n+#line 68 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n+\n+#line 506 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -591,11 +509,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 4:\n-#line 66 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 518 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 13:  {\n+                                        {\n+#line 69 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+#line 528 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -603,11 +531,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 7:\n-#line 67 \"hb-buffer-deserialize-json.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 540 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 4:  {\n+                                        {\n+#line 70 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+#line 550 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n@@ -615,10 +553,0 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-#line 624 \"hb-buffer-deserialize-json.hh\"\n-        }\n@@ -626,7 +554,43 @@\n-_again:\n-        if ( cs == 0 )\n-                goto _out;\n-        if ( ++p != pe )\n-                goto _resume;\n-        _test_eof: {}\n-        _out: {}\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 562 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 7:  {\n+                                        {\n+#line 71 \"hb-buffer-deserialize-json.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+#line 572 \"hb-buffer-deserialize-json.hh\"\n+\n+                                        {\n+#line 43 \"hb-buffer-deserialize-json.rl\"\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 584 \"hb-buffer-deserialize-json.hh\"\n+\n+\n+                                        break;\n+                                }\n+                        }\n+\n+                }\n+\n+                if ( cs != 0 ) {\n+                        p += 1;\n+                        goto _resume;\n+                }\n+                _out: {}\n@@ -635,1 +599,1 @@\n-#line 125 \"hb-buffer-deserialize-json.rl\"\n+#line 136 \"hb-buffer-deserialize-json.rl\"\n@@ -638,1 +602,1 @@\n-  *end_ptr = p;\n+        *end_ptr = p;\n@@ -640,1 +604,1 @@\n-  return p == pe && *(p-1) != ']';\n+        return p == pe && *(p-1) != ']';\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer-deserialize-json.hh","additions":544,"deletions":580,"binary":false,"changes":1124,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -4,24 +3,24 @@\n- * Copyright © 2013  Google, Inc.\n- *\n- *  This is part of HarfBuzz, a text shaping library.\n- *\n- * Permission is hereby granted, without written agreement and without\n- * license or royalty fees, to use, copy, modify, and distribute this\n- * software and its documentation for any purpose, provided that the\n- * above copyright notice and the following two paragraphs appear in\n- * all copies of this software.\n- *\n- * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n- * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n- * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n- * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n- * DAMAGE.\n- *\n- * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n- * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n- * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n- * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n- *\n- * Google Author(s): Behdad Esfahbod\n- *\/\n+* Copyright © 2013  Google, Inc.\n+*\n+*  This is part of HarfBuzz, a text shaping library.\n+*\n+* Permission is hereby granted, without written agreement and without\n+* license or royalty fees, to use, copy, modify, and distribute this\n+* software and its documentation for any purpose, provided that the\n+* above copyright notice and the following two paragraphs appear in\n+* all copies of this software.\n+*\n+* IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+* DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+* ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+* IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+* DAMAGE.\n+*\n+* THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+* FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+* ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+* PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*\n+* Google Author(s): Behdad Esfahbod\n+*\/\n@@ -35,1 +34,1 @@\n-#line 36 \"hb-buffer-deserialize-text.hh\"\n+#line 35 \"hb-buffer-deserialize-text.hh\"\n@@ -37,18 +36,10 @@\n-        0u, 0u, 9u, 122u, 45u, 57u, 48u, 57u, 45u, 57u, 48u, 57u, 48u, 57u, 45u, 57u,\n-        48u, 57u, 44u, 44u, 45u, 57u, 48u, 57u, 44u, 57u, 9u, 124u, 9u, 124u, 0u, 0u,\n-        9u, 122u, 9u, 124u, 9u, 124u, 9u, 124u, 9u, 124u, 9u, 124u, 9u, 124u, 9u, 124u,\n-        9u, 124u, 9u, 124u, 9u, 124u, 0\n-};\n-\n-static const char _deserialize_text_key_spans[] = {\n-        0, 114, 13, 10, 13, 10, 10, 13,\n-        10, 1, 13, 10, 14, 116, 116, 0,\n-        114, 116, 116, 116, 116, 116, 116, 116,\n-        116, 116, 116\n-};\n-\n-static const short _deserialize_text_index_offsets[] = {\n-        0, 0, 115, 129, 140, 154, 165, 176,\n-        190, 201, 203, 217, 228, 243, 360, 477,\n-        478, 593, 710, 827, 944, 1061, 1178, 1295,\n-        1412, 1529, 1646\n+        1u, 0u, 0u, 13u, 12u, 12u, 2u, 2u,\n+        5u, 11u, 0u, 12u, 5u, 6u, 4u, 6u,\n+        5u, 6u, 5u, 6u, 4u, 6u, 5u, 6u,\n+        3u, 3u, 4u, 6u, 5u, 6u, 3u, 6u,\n+        2u, 16u, 4u, 6u, 5u, 6u, 0u, 16u,\n+        0u, 16u, 1u, 0u, 0u, 12u, 0u, 16u,\n+        0u, 16u, 0u, 16u, 0u, 16u, 0u, 16u,\n+        0u, 16u, 0u, 16u, 0u, 16u, 0u, 16u,\n+        0u, 16u, 0u, 16u, 0u, 16u, 0u, 16u,\n+        0u, 16u, 0u\n@@ -57,160 +48,2 @@\n-static const char _deserialize_text_indicies[] = {\n-        0, 0, 0, 0, 0, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        0, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        2, 3, 3, 3, 3, 3, 3, 3,\n-        3, 3, 1, 1, 1, 1, 1, 1,\n-        1, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 1, 1, 1, 1, 1,\n-        1, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 1, 5, 1, 1, 6,\n-        7, 7, 7, 7, 7, 7, 7, 7,\n-        7, 1, 8, 9, 9, 9, 9, 9,\n-        9, 9, 9, 9, 1, 10, 1, 1,\n-        11, 12, 12, 12, 12, 12, 12, 12,\n-        12, 12, 1, 13, 14, 14, 14, 14,\n-        14, 14, 14, 14, 14, 1, 15, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        1, 17, 1, 1, 18, 19, 19, 19,\n-        19, 19, 19, 19, 19, 19, 1, 20,\n-        21, 21, 21, 21, 21, 21, 21, 21,\n-        21, 1, 22, 1, 23, 1, 1, 24,\n-        25, 25, 25, 25, 25, 25, 25, 25,\n-        25, 1, 26, 27, 27, 27, 27, 27,\n-        27, 27, 27, 27, 1, 22, 1, 1,\n-        1, 21, 21, 21, 21, 21, 21, 21,\n-        21, 21, 21, 1, 28, 28, 28, 28,\n-        28, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 28, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 29, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        30, 1, 1, 31, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        32, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 33,\n-        1, 34, 34, 34, 34, 34, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        34, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 35, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 36, 1, 1, 0,\n-        0, 0, 0, 0, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 0, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 2, 3,\n-        3, 3, 3, 3, 3, 3, 3, 3,\n-        1, 1, 1, 1, 1, 1, 1, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 1, 1, 1, 1, 1, 1, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 4, 4, 4, 4, 4, 4, 4,\n-        4, 1, 28, 28, 28, 28, 28, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 28, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 29, 1, 1, 1,\n-        1, 37, 37, 37, 37, 37, 37, 37,\n-        37, 37, 37, 1, 1, 1, 30, 1,\n-        1, 31, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 32, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 33, 1, 38,\n-        38, 38, 38, 38, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 38, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 39, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 40, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 41, 1, 42, 42, 42, 42,\n-        42, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 42, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        43, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 44,\n-        1, 42, 42, 42, 42, 42, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        42, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        14, 14, 14, 14, 14, 14, 14, 14,\n-        14, 14, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 43, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 44, 1, 38, 38,\n-        38, 38, 38, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 38, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 39, 1, 1, 1, 9, 9, 9,\n-        9, 9, 9, 9, 9, 9, 9, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 40, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 41, 1, 45, 45, 45, 45, 45,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 45, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 46, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 47, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 48,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n+static const signed char _deserialize_text_char_class[] = {\n+        0, 0, 0, 0, 0, 1, 1, 1,\n@@ -218,0 +51,1 @@\n+        1, 1, 1, 1, 1, 1, 1, 0,\n@@ -219,2 +53,4 @@\n-        1, 1, 1, 1, 1, 1, 49, 1,\n-        50, 50, 50, 50, 50, 1, 1, 1,\n+        1, 1, 2, 3, 4, 1, 1, 5,\n+        6, 6, 6, 6, 6, 6, 6, 6,\n+        6, 1, 1, 7, 8, 9, 1, 10,\n+        11, 11, 11, 11, 11, 11, 1, 1,\n@@ -222,1 +58,3 @@\n-        1, 1, 1, 1, 1, 1, 1, 50,\n+        1, 1, 1, 1, 12, 1, 1, 1,\n+        1, 1, 13, 14, 15, 1, 1, 1,\n+        11, 11, 11, 11, 11, 11, 1, 1,\n@@ -224,1 +62,0 @@\n-        1, 1, 51, 1, 1, 1, 1, 1,\n@@ -226,53 +63,1 @@\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 52, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 53, 1, 50, 50, 50,\n-        50, 50, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 50, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 51,\n-        1, 1, 1, 1, 27, 27, 27, 27,\n-        27, 27, 27, 27, 27, 27, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 52, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        53, 1, 45, 45, 45, 45, 45, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 45, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 46, 1, 1, 1,\n-        1, 54, 54, 54, 54, 54, 54, 54,\n-        54, 54, 54, 1, 1, 1, 1, 1,\n-        1, 47, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 48, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 49, 1, 28,\n-        28, 28, 28, 28, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 1, 1, 1, 1, 1, 28, 1,\n-        1, 1, 1, 1, 1, 1, 1, 1,\n-        1, 29, 1, 55, 55, 1, 55, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        1, 1, 1, 30, 1, 1, 31, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 1, 1, 32, 1, 55, 1, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 55, 55, 55, 55, 55, 55, 55,\n-        55, 1, 33, 1, 0\n+        1, 1, 1, 16, 0\n@@ -281,8 +66,6 @@\n-static const char _deserialize_text_trans_targs[] = {\n-        1, 0, 13, 17, 26, 3, 18, 21,\n-        18, 21, 5, 19, 20, 19, 20, 22,\n-        25, 8, 9, 12, 9, 12, 10, 11,\n-        23, 24, 23, 24, 14, 2, 6, 7,\n-        15, 16, 14, 15, 16, 17, 14, 4,\n-        15, 16, 14, 15, 16, 14, 2, 7,\n-        15, 16, 14, 2, 15, 16, 25, 26\n+static const short _deserialize_text_index_offsets[] = {\n+        0, 0, 14, 15, 16, 23, 36, 38,\n+        41, 43, 45, 48, 50, 51, 54, 56,\n+        60, 75, 78, 80, 97, 114, 114, 127,\n+        144, 161, 178, 195, 212, 229, 246, 263,\n+        280, 297, 314, 331, 348, 0\n@@ -291,8 +74,47 @@\n-static const char _deserialize_text_trans_actions[] = {\n-        0, 0, 1, 1, 1, 2, 2, 2,\n-        0, 0, 2, 2, 2, 0, 0, 2,\n-        2, 2, 2, 2, 0, 0, 3, 2,\n-        2, 2, 0, 0, 4, 5, 5, 5,\n-        4, 4, 0, 0, 0, 0, 6, 7,\n-        6, 6, 8, 8, 8, 9, 10, 10,\n-        9, 9, 11, 12, 11, 11, 0, 0\n+static const signed char _deserialize_text_indicies[] = {\n+        1, 0, 0, 0, 0, 0, 0, 2,\n+        0, 0, 0, 0, 0, 3, 4, 6,\n+        7, 7, 0, 0, 0, 0, 7, 8,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 4, 10, 11, 13, 14,\n+        15, 17, 18, 20, 21, 23, 24, 25,\n+        27, 28, 29, 31, 32, 33, 35, 36,\n+        29, 0, 28, 28, 38, 38, 0, 0,\n+        0, 0, 38, 0, 38, 0, 0, 0,\n+        38, 38, 38, 40, 41, 42, 44, 45,\n+        47, 0, 0, 0, 0, 48, 48, 0,\n+        49, 50, 0, 48, 0, 0, 0, 0,\n+        51, 52, 0, 0, 0, 0, 0, 0,\n+        0, 0, 53, 0, 0, 0, 0, 0,\n+        0, 54, 8, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 4, 56,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        57, 0, 0, 0, 0, 0, 0, 58,\n+        56, 0, 0, 0, 0, 60, 60, 0,\n+        0, 57, 0, 0, 0, 0, 0, 0,\n+        58, 63, 62, 64, 0, 62, 62, 62,\n+        62, 65, 62, 66, 62, 62, 62, 67,\n+        68, 69, 71, 38, 72, 0, 38, 38,\n+        38, 38, 73, 38, 74, 38, 38, 38,\n+        37, 75, 76, 78, 0, 0, 79, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 80, 81, 82, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 53, 83, 84, 62, 64,\n+        0, 62, 62, 62, 62, 65, 62, 66,\n+        62, 62, 62, 67, 68, 69, 86, 0,\n+        87, 0, 0, 0, 0, 0, 0, 0,\n+        88, 0, 0, 0, 0, 57, 89, 91,\n+        0, 92, 0, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 93, 94,\n+        91, 0, 92, 0, 0, 36, 36, 0,\n+        0, 0, 0, 0, 0, 0, 0, 93,\n+        94, 86, 0, 87, 0, 0, 97, 97,\n+        0, 0, 0, 88, 0, 0, 0, 0,\n+        57, 89, 99, 0, 0, 0, 0, 0,\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 100, 101, 99, 0, 0, 0, 0,\n+        45, 45, 0, 0, 0, 0, 0, 0,\n+        0, 0, 100, 101, 78, 0, 0, 79,\n+        0, 18, 18, 0, 0, 0, 0, 0,\n+        0, 0, 0, 80, 81, 0\n@@ -301,1 +123,2 @@\n-static const char _deserialize_text_eof_actions[] = {\n+static const signed char _deserialize_text_index_defaults[] = {\n+        0, 0, 0, 0, 0, 0, 0, 0,\n@@ -303,3 +126,45 @@\n-        0, 0, 0, 0, 0, 4, 0, 0,\n-        0, 4, 6, 8, 8, 6, 9, 11,\n-        11, 9, 4\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0, 62, 38, 0, 0, 62, 0, 0,\n+        0, 0, 0, 0, 0, 0\n+};\n+\n+static const signed char _deserialize_text_cond_targs[] = {\n+        0, 1, 2, 25, 3, 3, 4, 19,\n+        5, 6, 23, 24, 7, 8, 27, 36,\n+        8, 27, 36, 9, 30, 33, 10, 11,\n+        12, 15, 11, 12, 15, 13, 13, 14,\n+        31, 32, 14, 31, 32, 16, 26, 17,\n+        18, 34, 35, 18, 34, 35, 19, 20,\n+        19, 6, 21, 22, 20, 21, 22, 23,\n+        20, 21, 22, 24, 24, 25, 26, 26,\n+        7, 9, 10, 16, 21, 29, 26, 26,\n+        7, 9, 10, 21, 29, 27, 28, 17,\n+        21, 29, 28, 29, 29, 30, 28, 7,\n+        10, 29, 31, 28, 7, 21, 29, 32,\n+        33, 33, 34, 28, 21, 29, 35, 36,\n+        0\n+};\n+\n+static const signed char _deserialize_text_cond_actions[] = {\n+        0, 0, 0, 0, 1, 0, 0, 2,\n+        0, 0, 2, 2, 0, 3, 4, 4,\n+        0, 5, 5, 0, 4, 4, 0, 3,\n+        3, 3, 0, 0, 0, 6, 0, 3,\n+        4, 4, 0, 5, 5, 0, 5, 0,\n+        3, 4, 4, 0, 5, 5, 7, 7,\n+        8, 9, 7, 7, 0, 0, 0, 10,\n+        10, 10, 10, 10, 8, 11, 12, 13,\n+        14, 14, 14, 15, 11, 11, 16, 17,\n+        18, 18, 18, 16, 16, 19, 19, 20,\n+        19, 19, 0, 0, 13, 10, 10, 21,\n+        21, 10, 22, 22, 23, 22, 22, 22,\n+        10, 5, 24, 24, 24, 24, 24, 19,\n+        0\n+};\n+\n+static const signed char _deserialize_text_eof_trans[] = {\n+        1, 2, 3, 6, 7, 9, 10, 13,\n+        17, 20, 23, 27, 28, 31, 35, 29,\n+        38, 40, 44, 47, 53, 54, 55, 56,\n+        60, 62, 71, 78, 83, 70, 86, 91,\n+        96, 97, 99, 103, 104, 0\n@@ -309,1 +174,1 @@\n-static const int deserialize_text_first_final = 13;\n+static const int deserialize_text_first_final = 19;\n@@ -315,1 +180,1 @@\n-#line 91 \"hb-buffer-deserialize-text.rl\"\n+#line 114 \"hb-buffer-deserialize-text.rl\"\n@@ -319,5 +184,5 @@\n-_hb_buffer_deserialize_glyphs_text (hb_buffer_t *buffer,\n-                                    const char *buf,\n-                                    unsigned int buf_len,\n-                                    const char **end_ptr,\n-                                    hb_font_t *font)\n+_hb_buffer_deserialize_text (hb_buffer_t *buffer,\n+const char *buf,\n+unsigned int buf_len,\n+const char **end_ptr,\n+hb_font_t *font)\n@@ -325,1 +190,1 @@\n-  const char *p = buf, *pe = buf + buf_len;\n+        const char *p = buf, *pe = buf + buf_len;\n@@ -327,2 +192,2 @@\n-  \/* Ensure we have positions. *\/\n-  (void) hb_buffer_get_glyph_positions (buffer, nullptr);\n+        \/* Ensure we have positions. *\/\n+        (void) hb_buffer_get_glyph_positions (buffer, nullptr);\n@@ -330,6 +195,2 @@\n-  while (p < pe && ISSPACE (*p))\n-    p++;\n-  if (p < pe && *p == (buffer->len ? '|' : '['))\n-  {\n-    *end_ptr = ++p;\n-  }\n+        while (p < pe && ISSPACE (*p))\n+        p++;\n@@ -337,4 +198,4 @@\n-  const char *eof = pe, *tok = nullptr;\n-  int cs;\n-  hb_glyph_info_t info = {0};\n-  hb_glyph_position_t pos = {0};\n+        const char *eof = pe, *tok = nullptr;\n+        int cs;\n+        hb_glyph_info_t info = {0};\n+        hb_glyph_position_t pos = {0};\n@@ -342,1 +203,1 @@\n-#line 343 \"hb-buffer-deserialize-text.hh\"\n+#line 204 \"hb-buffer-deserialize-text.hh\"\n@@ -344,1 +205,1 @@\n-        cs = deserialize_text_start;\n+                cs = (int)deserialize_text_start;\n@@ -347,1 +208,1 @@\n-#line 348 \"hb-buffer-deserialize-text.hh\"\n+#line 209 \"hb-buffer-deserialize-text.hh\"\n@@ -349,24 +210,48 @@\n-        int _slen;\n-        int _trans;\n-        const unsigned char *_keys;\n-        const char *_inds;\n-        if ( p == pe )\n-                goto _test_eof;\n-        if ( cs == 0 )\n-                goto _out;\n-_resume:\n-        _keys = _deserialize_text_trans_keys + (cs<<1);\n-        _inds = _deserialize_text_indicies + _deserialize_text_index_offsets[cs];\n-\n-        _slen = _deserialize_text_key_spans[cs];\n-        _trans = _inds[ _slen > 0 && _keys[0] <=(*p) &&\n-                (*p) <= _keys[1] ?\n-                (*p) - _keys[0] : _slen ];\n-\n-        cs = _deserialize_text_trans_targs[_trans];\n-\n-        if ( _deserialize_text_trans_actions[_trans] == 0 )\n-                goto _again;\n-\n-        switch ( _deserialize_text_trans_actions[_trans] ) {\n-        case 2:\n+                unsigned int _trans = 0;\n+                const unsigned char * _keys;\n+                const signed char * _inds;\n+                int _ic;\n+                _resume: {}\n+                if ( p == pe && p != eof )\n+                        goto _out;\n+                if ( p == eof ) {\n+                        if ( _deserialize_text_eof_trans[cs] > 0 ) {\n+                                _trans = (unsigned int)_deserialize_text_eof_trans[cs] - 1;\n+                        }\n+                }\n+                else {\n+                        _keys = ( _deserialize_text_trans_keys + ((cs<<1)));\n+                        _inds = ( _deserialize_text_indicies + (_deserialize_text_index_offsets[cs]));\n+\n+                        if ( ( (*( p))) <= 124 && ( (*( p))) >= 9 ) {\n+                                _ic = (int)_deserialize_text_char_class[(int)( (*( p))) - 9];\n+                                if ( _ic <= (int)(*( _keys+1)) && _ic >= (int)(*( _keys)) )\n+                                        _trans = (unsigned int)(*( _inds + (int)( _ic - (int)(*( _keys)) ) ));\n+                                else\n+                                        _trans = (unsigned int)_deserialize_text_index_defaults[cs];\n+                        }\n+                        else {\n+                                _trans = (unsigned int)_deserialize_text_index_defaults[cs];\n+                        }\n+\n+                }\n+                cs = (int)_deserialize_text_cond_targs[_trans];\n+\n+                if ( _deserialize_text_cond_actions[_trans] != 0 ) {\n+\n+                        switch ( _deserialize_text_cond_actions[_trans] ) {\n+                                case 1:  {\n+                                        {\n+#line 38 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 252 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 3:  {\n+                                        {\n@@ -374,5 +259,11 @@\n-        {\n-        tok = p;\n-}\n-        break;\n-        case 5:\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 264 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 5:  {\n+                                        {\n@@ -380,24 +271,85 @@\n-        {\n-        if (!hb_font_glyph_from_string (font,\n-                                        tok, p - tok,\n-                                        &info.codepoint))\n-          return false;\n-}\n-        break;\n-        case 10:\n-#line 62 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_uint (tok, p, &info.cluster )) return false; }\n-        break;\n-        case 3:\n-#line 63 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n-        break;\n-        case 12:\n-#line 64 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n-        break;\n-        case 7:\n-#line 65 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n-        break;\n-        case 1:\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 274 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 8:  {\n+                                        {\n+#line 56 \"hb-buffer-deserialize-text.rl\"\n+                                                if (unlikely (!buffer->ensure_unicode ())) return false; }\n+\n+#line 284 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 18:  {\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 300 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 9:  {\n+                                        {\n+#line 66 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_hex (tok, p, &info.codepoint )) return false; }\n+\n+#line 310 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 21:  {\n+                                        {\n+#line 68 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+#line 320 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 6:  {\n+                                        {\n+#line 69 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_offset )) return false; }\n+\n+#line 330 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 23:  {\n+                                        {\n+#line 70 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+#line 340 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 20:  {\n+                                        {\n+#line 71 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+#line 350 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 15:  {\n+                                        {\n@@ -405,4 +357,8 @@\n-        {\n-        memset (&info, 0, sizeof (info));\n-        memset (&pos , 0, sizeof (pos ));\n-}\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 363 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -410,5 +366,19 @@\n-        {\n-        tok = p;\n-}\n-        break;\n-        case 4:\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 371 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 4:  {\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 383 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -416,18 +386,39 @@\n-        {\n-        if (!hb_font_glyph_from_string (font,\n-                                        tok, p - tok,\n-                                        &info.codepoint))\n-          return false;\n-}\n-#line 43 \"hb-buffer-deserialize-text.rl\"\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 9:\n-#line 62 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_uint (tok, p, &info.cluster )) return false; }\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 389 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 2:  {\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 401 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 56 \"hb-buffer-deserialize-text.rl\"\n+                                                if (unlikely (!buffer->ensure_unicode ())) return false; }\n+\n+#line 407 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 16:  {\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 423 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -435,11 +426,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 11:\n-#line 64 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 435 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 7:  {\n+                                        {\n+#line 66 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_hex (tok, p, &info.codepoint )) return false; }\n+\n+#line 445 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -447,11 +448,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 6:\n-#line 65 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 457 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 10:  {\n+                                        {\n+#line 68 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+#line 467 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -459,11 +470,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 8:\n-#line 66 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 479 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 22:  {\n+                                        {\n+#line 70 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+#line 489 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -471,10 +492,0 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-#line 480 \"hb-buffer-deserialize-text.hh\"\n-        }\n@@ -482,17 +493,20 @@\n-_again:\n-        if ( cs == 0 )\n-                goto _out;\n-        if ( ++p != pe )\n-                goto _resume;\n-        _test_eof: {}\n-        if ( p == eof )\n-        {\n-        switch ( _deserialize_text_eof_actions[cs] ) {\n-        case 4:\n-#line 55 \"hb-buffer-deserialize-text.rl\"\n-        {\n-        if (!hb_font_glyph_from_string (font,\n-                                        tok, p - tok,\n-                                        &info.codepoint))\n-          return false;\n-}\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 501 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 19:  {\n+                                        {\n+#line 71 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+#line 511 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -500,11 +514,21 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 9:\n-#line 62 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_uint (tok, p, &info.cluster )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 523 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 24:  {\n+                                        {\n+#line 72 \"hb-buffer-deserialize-text.rl\"\n+                                                if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+#line 533 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -512,11 +536,93 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 11:\n-#line 64 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_offset )) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 545 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 12:  {\n+                                        {\n+#line 38 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 558 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 566 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 55 \"hb-buffer-deserialize-text.rl\"\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 572 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 14:  {\n+                                        {\n+#line 38 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 585 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 593 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 605 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 17:  {\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 621 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 55 \"hb-buffer-deserialize-text.rl\"\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 627 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -524,11 +630,44 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 6:\n-#line 65 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.x_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 639 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 11:  {\n+                                        {\n+#line 38 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 652 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 660 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 672 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -536,11 +675,50 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-        case 8:\n-#line 66 \"hb-buffer-deserialize-text.rl\"\n-        { if (!parse_int  (tok, p, &pos.y_advance)) return false; }\n+\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 684 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 13:  {\n+                                        {\n+#line 38 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                memset (&info, 0, sizeof (info));\n+                                                memset (&pos , 0, sizeof (pos ));\n+                                        }\n+\n+#line 697 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 51 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                tok = p;\n+                                        }\n+\n+#line 705 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 58 \"hb-buffer-deserialize-text.rl\"\n+\n+                                                \/* TODO Unescape delimeters. *\/\n+                                                if (!hb_font_glyph_from_string (font,\n+                                                tok, p - tok,\n+                                                &info.codepoint))\n+                                                return false;\n+                                        }\n+\n+#line 717 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n+#line 55 \"hb-buffer-deserialize-text.rl\"\n+                                                if (unlikely (!buffer->ensure_glyphs ())) return false; }\n+\n+#line 723 \"hb-buffer-deserialize-text.hh\"\n+\n+                                        {\n@@ -548,11 +726,0 @@\n-        {\n-        buffer->add_info (info);\n-        if (unlikely (!buffer->successful))\n-          return false;\n-        buffer->pos[buffer->len - 1] = pos;\n-        *end_ptr = p;\n-}\n-        break;\n-#line 557 \"hb-buffer-deserialize-text.hh\"\n-        }\n-        }\n@@ -560,1 +727,27 @@\n-        _out: {}\n+                                                buffer->add_info (info);\n+                                                if (unlikely (!buffer->successful))\n+                                                return false;\n+                                                buffer->pos[buffer->len - 1] = pos;\n+                                                *end_ptr = p;\n+                                        }\n+\n+#line 735 \"hb-buffer-deserialize-text.hh\"\n+\n+\n+                                        break;\n+                                }\n+                        }\n+\n+                }\n+\n+                if ( p == eof ) {\n+                        if ( cs >= 19 )\n+                                goto _out;\n+                }\n+                else {\n+                        if ( cs != 0 ) {\n+                                p += 1;\n+                                goto _resume;\n+                        }\n+                }\n+                _out: {}\n@@ -563,1 +756,1 @@\n-#line 119 \"hb-buffer-deserialize-text.rl\"\n+#line 138 \"hb-buffer-deserialize-text.rl\"\n@@ -566,1 +759,1 @@\n-  *end_ptr = p;\n+        *end_ptr = p;\n@@ -568,1 +761,1 @@\n-  return p == pe && *(p-1) != ']';\n+        return p == pe && *(p-1) != ']';\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer-deserialize-text.hh","additions":696,"deletions":503,"binary":false,"changes":1199,"status":"modified"},{"patch":"@@ -94,2 +94,2 @@\n-    case HB_BUFFER_SERIALIZE_FORMAT_TEXT:       return serialize_formats[0];\n-    case HB_BUFFER_SERIALIZE_FORMAT_JSON:       return serialize_formats[1];\n+    case HB_BUFFER_SERIALIZE_FORMAT_TEXT: return serialize_formats[0];\n+    case HB_BUFFER_SERIALIZE_FORMAT_JSON: return serialize_formats[1];\n@@ -97,1 +97,1 @@\n-    case HB_BUFFER_SERIALIZE_FORMAT_INVALID:    return nullptr;\n+    case HB_BUFFER_SERIALIZE_FORMAT_INVALID:  return nullptr;\n@@ -128,0 +128,2 @@\n+    else\n+      *p++ = '[';\n@@ -137,2 +139,3 @@\n-      for (char *q = g; *q; q++) {\n-        if (*q == '\"')\n+      for (char *q = g; *q; q++)\n+      {\n+        if (unlikely (*q == '\"' || *q == '\\\\'))\n@@ -154,1 +157,1 @@\n-                             x+pos[i].x_offset, y+pos[i].y_offset));\n+                   x+pos[i].x_offset, y+pos[i].y_offset));\n@@ -157,1 +160,1 @@\n-                               pos[i].x_advance, pos[i].y_advance));\n+                     pos[i].x_advance, pos[i].y_advance));\n@@ -171,1 +174,1 @@\n-                extents.x_bearing, extents.y_bearing));\n+                                extents.x_bearing, extents.y_bearing));\n@@ -173,1 +176,1 @@\n-                extents.width, extents.height));\n+                                extents.width, extents.height));\n@@ -177,0 +180,2 @@\n+    if (i == end-1)\n+      *p++ = ']';\n@@ -199,0 +204,53 @@\n+static unsigned int\n+_hb_buffer_serialize_unicode_json (hb_buffer_t *buffer,\n+          unsigned int start,\n+          unsigned int end,\n+          char *buf,\n+          unsigned int buf_size,\n+          unsigned int *buf_consumed,\n+          hb_buffer_serialize_flags_t flags)\n+{\n+  hb_glyph_info_t *info = hb_buffer_get_glyph_infos (buffer, nullptr);\n+\n+  *buf_consumed = 0;\n+  for (unsigned int i = start; i < end; i++)\n+  {\n+    char b[1024];\n+    char *p = b;\n+\n+    if (i)\n+      *p++ = ',';\n+    else\n+      *p++ = '[';\n+\n+    *p++ = '{';\n+\n+    APPEND (\"\\\"u\\\":\");\n+\n+    p += hb_max (0, snprintf (p, ARRAY_LENGTH (b) - (p - b), \"%u\", info[i].codepoint));\n+\n+    if (!(flags & HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS)) {\n+      p += hb_max (0, snprintf (p, ARRAY_LENGTH (b) - (p - b), \",\\\"cl\\\":%u\", info[i].cluster));\n+    }\n+\n+    *p++ = '}';\n+\n+    if (i == end-1)\n+      *p++ = ']';\n+\n+    unsigned int l = p - b;\n+    if (buf_size > l)\n+    {\n+      memcpy (buf, b, l);\n+      buf += l;\n+      buf_size -= l;\n+      *buf_consumed += l;\n+      *buf = '\\0';\n+    } else\n+      return i - start;\n+\n+  }\n+\n+  return end - start;\n+}\n+\n@@ -211,1 +269,1 @@\n-                             nullptr : hb_buffer_get_glyph_positions (buffer, nullptr);\n+           nullptr : hb_buffer_get_glyph_positions (buffer, nullptr);\n@@ -224,0 +282,2 @@\n+    else\n+      *p++ = '[';\n@@ -227,0 +287,1 @@\n+      \/* TODO Escape delimiters we use. *\/\n@@ -264,0 +325,4 @@\n+    if (i == end-1) {\n+      *p++ = ']';\n+    }\n+\n@@ -285,0 +350,45 @@\n+\n+static unsigned int\n+_hb_buffer_serialize_unicode_text (hb_buffer_t *buffer,\n+                                   unsigned int start,\n+                                   unsigned int end,\n+                                   char *buf,\n+                                   unsigned int buf_size,\n+                                   unsigned int *buf_consumed,\n+                                   hb_buffer_serialize_flags_t flags)\n+{\n+  hb_glyph_info_t *info = hb_buffer_get_glyph_infos (buffer, nullptr);\n+  *buf_consumed = 0;\n+  for (unsigned int i = start; i < end; i++)\n+  {\n+    char b[1024];\n+    char *p = b;\n+\n+    if (i)\n+      *p++ = '|';\n+    else\n+      *p++ = '<';\n+\n+    p += hb_max (0, snprintf (p, ARRAY_LENGTH (b) - (p - b), \"U+%04X\", info[i].codepoint));\n+\n+    if (!(flags & HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS)) {\n+      p += hb_max (0, snprintf (p, ARRAY_LENGTH (b) - (p - b), \"=%u\", info[i].cluster));\n+    }\n+\n+    if (i == end-1)\n+      *p++ = '>';\n+\n+    unsigned int l = p - b;\n+    if (buf_size > l)\n+    {\n+      memcpy (buf, b, l);\n+      buf += l;\n+      buf_size -= l;\n+      *buf_consumed += l;\n+      *buf = '\\0';\n+    } else\n+      return i - start;\n+  }\n+  return end - start;\n+}\n+\n@@ -293,2 +403,2 @@\n- * @buf_consumed: (out) (allow-none): if not %NULL, will be set to the number of byes written into @buf.\n- * @font: (allow-none): the #hb_font_t used to shape this buffer, needed to\n+ * @buf_consumed: (out) (optional): if not %NULL, will be set to the number of byes written into @buf.\n+ * @font: (nullable): the #hb_font_t used to shape this buffer, needed to\n@@ -311,0 +421,1 @@\n+ *\n@@ -319,3 +430,1 @@\n- *   - If #HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS is set, the\n- *     #hb_glyph_extents_t in the format\n- *     `&lt;x_bearing,y_bearing,width,height&gt;`\n+ *   - If #HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS is set, the #hb_glyph_extents_t in the format `<x_bearing,y_bearing,width,height>`\n@@ -324,1 +433,19 @@\n- * TODO.\n+ * A machine-readable, structured format.\n+ * The serialized glyphs will look something like:\n+ *\n+ * ```\n+ * [{\"g\":\"uni0651\",\"cl\":0,\"dx\":518,\"dy\":0,\"ax\":0,\"ay\":0},\n+ * {\"g\":\"uni0628\",\"cl\":0,\"dx\":0,\"dy\":0,\"ax\":1897,\"ay\":0}]\n+ * ```\n+ *\n+ * Each glyph is a JSON object, with the following properties:\n+ * - `g`: the glyph name or glyph index if\n+ *   #HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES flag is set.\n+ * - `cl`: #hb_glyph_info_t.cluster if\n+ *   #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set.\n+ * - `dx`,`dy`,`ax`,`ay`: #hb_glyph_position_t.x_offset, #hb_glyph_position_t.y_offset,\n+ *    #hb_glyph_position_t.x_advance and #hb_glyph_position_t.y_advance\n+ *    respectively, if #HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS is not set.\n+ * - `xb`,`yb`,`w`,`h`: #hb_glyph_extents_t.x_bearing, #hb_glyph_extents_t.y_bearing,\n+ *    #hb_glyph_extents_t.width and #hb_glyph_extents_t.height respectively if\n+ *    #HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS is set.\n@@ -342,1 +469,2 @@\n-  assert (start <= end && end <= buffer->len);\n+  end = hb_clamp (end, start, buffer->len);\n+  start = hb_min (start, end);\n@@ -351,2 +479,1 @@\n-  assert ((!buffer->len && (buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)) ||\n-          (buffer->content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS));\n+  buffer->assert_glyphs ();\n@@ -367,2 +494,2 @@\n-                                               buf, buf_size, buf_consumed,\n-                                               font, flags);\n+                 buf, buf_size, buf_consumed,\n+                 font, flags);\n@@ -372,2 +499,2 @@\n-                                               buf, buf_size, buf_consumed,\n-                                               font, flags);\n+                 buf, buf_size, buf_consumed,\n+                 font, flags);\n@@ -382,0 +509,178 @@\n+\/**\n+ * hb_buffer_serialize_unicode:\n+ * @buffer: an #hb_buffer_t buffer.\n+ * @start: the first item in @buffer to serialize.\n+ * @end: the last item in @buffer to serialize.\n+ * @buf: (out) (array length=buf_size) (element-type uint8_t): output string to\n+ *       write serialized buffer into.\n+ * @buf_size: the size of @buf.\n+ * @buf_consumed: (out) (optional): if not %NULL, will be set to the number of byes written into @buf.\n+ * @format: the #hb_buffer_serialize_format_t to use for formatting the output.\n+ * @flags: the #hb_buffer_serialize_flags_t that control what glyph properties\n+ *         to serialize.\n+ *\n+ * Serializes @buffer into a textual representation of its content,\n+ * when the buffer contains Unicode codepoints (i.e., before shaping). This is\n+ * useful for showing the contents of the buffer, for example during debugging.\n+ * There are currently two supported serialization formats:\n+ *\n+ * ## text\n+ * A human-readable, plain text format.\n+ * The serialized codepoints will look something like:\n+ *\n+ * ```\n+ *  <U+0651=0|U+0628=1>\n+ * ```\n+ *\n+ * - Glyphs are separated with `|`\n+ * - Unicode codepoints are expressed as zero-padded four (or more)\n+ *   digit hexadecimal numbers preceded by `U+`\n+ * - If #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set, the cluster\n+ *   will be indicated with a `=` then #hb_glyph_info_t.cluster.\n+ *\n+ * ## json\n+ * A machine-readable, structured format.\n+ * The serialized codepoints will be a list of objects with the following\n+ * properties:\n+ * - `u`: the Unicode codepoint as a decimal integer\n+ * - `cl`: #hb_glyph_info_t.cluster if\n+ *   #HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS is not set.\n+ *\n+ * For example:\n+ *\n+ * ```\n+ * [{u:1617,cl:0},{u:1576,cl:1}]\n+ * ```\n+ *\n+ * Return value:\n+ * The number of serialized items.\n+ *\n+ * Since: 2.7.3\n+ **\/\n+unsigned int\n+hb_buffer_serialize_unicode (hb_buffer_t *buffer,\n+                             unsigned int start,\n+                             unsigned int end,\n+                             char *buf,\n+                             unsigned int buf_size,\n+                             unsigned int *buf_consumed,\n+                             hb_buffer_serialize_format_t format,\n+                             hb_buffer_serialize_flags_t flags)\n+{\n+  end = hb_clamp (end, start, buffer->len);\n+  start = hb_min (start, end);\n+\n+  unsigned int sconsumed;\n+  if (!buf_consumed)\n+    buf_consumed = &sconsumed;\n+  *buf_consumed = 0;\n+  if (buf_size)\n+    *buf = '\\0';\n+\n+  buffer->assert_unicode ();\n+\n+  if (unlikely (start == end))\n+    return 0;\n+\n+  switch (format)\n+  {\n+    case HB_BUFFER_SERIALIZE_FORMAT_TEXT:\n+      return _hb_buffer_serialize_unicode_text (buffer, start, end,\n+                                                buf, buf_size, buf_consumed, flags);\n+\n+    case HB_BUFFER_SERIALIZE_FORMAT_JSON:\n+      return _hb_buffer_serialize_unicode_json (buffer, start, end,\n+                                                buf, buf_size, buf_consumed, flags);\n+\n+    default:\n+    case HB_BUFFER_SERIALIZE_FORMAT_INVALID:\n+      return 0;\n+\n+  }\n+}\n+\n+static unsigned int\n+_hb_buffer_serialize_invalid (hb_buffer_t *buffer,\n+                              unsigned int start,\n+                              unsigned int end,\n+                              char *buf,\n+                              unsigned int buf_size,\n+                              unsigned int *buf_consumed,\n+                              hb_buffer_serialize_format_t format,\n+                              hb_buffer_serialize_flags_t flags)\n+{\n+  assert (!buffer->len);\n+\n+  unsigned int sconsumed;\n+  if (!buf_consumed)\n+    buf_consumed = &sconsumed;\n+  if (buf_size < 3)\n+    return 0;\n+  if (format == HB_BUFFER_SERIALIZE_FORMAT_JSON) {\n+    *buf++ = '[';\n+    *buf++ = ']';\n+    *buf = '\\0';\n+  } else if (format == HB_BUFFER_SERIALIZE_FORMAT_TEXT) {\n+    *buf++ = '!';\n+    *buf++ = '!';\n+    *buf = '\\0';\n+  }\n+  *buf_consumed = 2;\n+  return 0;\n+}\n+\n+\/**\n+ * hb_buffer_serialize:\n+ * @buffer: an #hb_buffer_t buffer.\n+ * @start: the first item in @buffer to serialize.\n+ * @end: the last item in @buffer to serialize.\n+ * @buf: (out) (array length=buf_size) (element-type uint8_t): output string to\n+ *       write serialized buffer into.\n+ * @buf_size: the size of @buf.\n+ * @buf_consumed: (out) (optional): if not %NULL, will be set to the number of byes written into @buf.\n+ * @font: (nullable): the #hb_font_t used to shape this buffer, needed to\n+ *        read glyph names and extents. If %NULL, and empty font will be used.\n+ * @format: the #hb_buffer_serialize_format_t to use for formatting the output.\n+ * @flags: the #hb_buffer_serialize_flags_t that control what glyph properties\n+ *         to serialize.\n+ *\n+ * Serializes @buffer into a textual representation of its content, whether\n+ * Unicode codepoints or glyph identifiers and positioning information. This is\n+ * useful for showing the contents of the buffer, for example during debugging.\n+ * See the documentation of hb_buffer_serialize_unicode() and\n+ * hb_buffer_serialize_glyphs() for a description of the output format.\n+ *\n+ * Return value:\n+ * The number of serialized items.\n+ *\n+ * Since: 2.7.3\n+ **\/\n+unsigned int\n+hb_buffer_serialize (hb_buffer_t *buffer,\n+                     unsigned int start,\n+                     unsigned int end,\n+                     char *buf,\n+                     unsigned int buf_size,\n+                     unsigned int *buf_consumed,\n+                     hb_font_t *font,\n+                     hb_buffer_serialize_format_t format,\n+                     hb_buffer_serialize_flags_t flags)\n+{\n+  switch (buffer->content_type)\n+  {\n+\n+    case HB_BUFFER_CONTENT_TYPE_GLYPHS:\n+      return hb_buffer_serialize_glyphs (buffer, start, end, buf, buf_size,\n+                                         buf_consumed, font, format, flags);\n+\n+    case HB_BUFFER_CONTENT_TYPE_UNICODE:\n+      return hb_buffer_serialize_unicode (buffer, start, end, buf, buf_size,\n+                                          buf_consumed, format, flags);\n+\n+    case HB_BUFFER_CONTENT_TYPE_INVALID:\n+    default:\n+      return _hb_buffer_serialize_invalid (buffer, start, end, buf, buf_size,\n+                                           buf_consumed, format, flags);\n+  }\n+}\n+\n@@ -406,0 +711,12 @@\n+static bool\n+parse_hex (const char *pp, const char *end, uint32_t *pv)\n+{\n+  unsigned int v;\n+  const char *p = pp;\n+  if (unlikely (!hb_parse_uint (&p, end, &v, true\/* whole buffer *\/, 16)))\n+    return false;\n+\n+  *pv = v;\n+  return true;\n+}\n+\n@@ -412,5 +729,6 @@\n- * @buf: (array length=buf_len):\n- * @buf_len:\n- * @end_ptr: (out):\n- * @font:\n- * @format:\n+ * @buf: (array length=buf_len): string to deserialize\n+ * @buf_len: the size of @buf, or -1 if it is %NULL-terminated\n+ * @end_ptr: (out) (optional): output pointer to the character after last\n+ *                               consumed one.\n+ * @font: (nullable): font for getting glyph IDs\n+ * @format: the #hb_buffer_serialize_format_t of the input @buf\n@@ -418,0 +736,2 @@\n+ * Deserializes glyphs @buffer from textual representation in the format\n+ * produced by hb_buffer_serialize_glyphs().\n@@ -419,2 +739,1 @@\n- *\n- * Return value:\n+ * Return value: %true if @buf is not fully consumed, %false otherwise.\n@@ -437,2 +756,8 @@\n-  assert ((!buffer->len && (buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)) ||\n-          (buffer->content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS));\n+  buffer->assert_glyphs ();\n+\n+  if (unlikely (hb_object_is_immutable (buffer)))\n+  {\n+    if (end_ptr)\n+      *end_ptr = buf;\n+    return false;\n+  }\n@@ -457,3 +782,73 @@\n-      return _hb_buffer_deserialize_glyphs_text (buffer,\n-                                                 buf, buf_len, end_ptr,\n-                                                 font);\n+      return _hb_buffer_deserialize_text (buffer,\n+                                          buf, buf_len, end_ptr,\n+                                          font);\n+\n+    case HB_BUFFER_SERIALIZE_FORMAT_JSON:\n+      return _hb_buffer_deserialize_json (buffer,\n+                                          buf, buf_len, end_ptr,\n+                                          font);\n+\n+    default:\n+    case HB_BUFFER_SERIALIZE_FORMAT_INVALID:\n+      return false;\n+\n+  }\n+}\n+\n+\n+\/**\n+ * hb_buffer_deserialize_unicode:\n+ * @buffer: an #hb_buffer_t buffer.\n+ * @buf: (array length=buf_len): string to deserialize\n+ * @buf_len: the size of @buf, or -1 if it is %NULL-terminated\n+ * @end_ptr: (out) (optional): output pointer to the character after last\n+ *                               consumed one.\n+ * @format: the #hb_buffer_serialize_format_t of the input @buf\n+ *\n+ * Deserializes Unicode @buffer from textual representation in the format\n+ * produced by hb_buffer_serialize_unicode().\n+ *\n+ * Return value: %true if @buf is not fully consumed, %false otherwise.\n+ *\n+ * Since: 2.7.3\n+ **\/\n+hb_bool_t\n+hb_buffer_deserialize_unicode (hb_buffer_t *buffer,\n+                               const char *buf,\n+                               int buf_len, \/* -1 means nul-terminated *\/\n+                               const char **end_ptr, \/* May be NULL *\/\n+                               hb_buffer_serialize_format_t format)\n+{\n+  const char *end;\n+  if (!end_ptr)\n+    end_ptr = &end;\n+  *end_ptr = buf;\n+\n+  buffer->assert_unicode ();\n+\n+  if (unlikely (hb_object_is_immutable (buffer)))\n+  {\n+    if (end_ptr)\n+      *end_ptr = buf;\n+    return false;\n+  }\n+\n+  if (buf_len == -1)\n+    buf_len = strlen (buf);\n+\n+  if (!buf_len)\n+  {\n+    *end_ptr = buf;\n+    return false;\n+  }\n+\n+  hb_buffer_set_content_type (buffer, HB_BUFFER_CONTENT_TYPE_UNICODE);\n+\n+  hb_font_t* font = hb_font_get_empty ();\n+\n+  switch (format)\n+  {\n+    case HB_BUFFER_SERIALIZE_FORMAT_TEXT:\n+      return _hb_buffer_deserialize_text (buffer,\n+                                          buf, buf_len, end_ptr,\n+                                          font);\n@@ -462,3 +857,3 @@\n-      return _hb_buffer_deserialize_glyphs_json (buffer,\n-                                                 buf, buf_len, end_ptr,\n-                                                 font);\n+      return _hb_buffer_deserialize_json (buffer,\n+                                          buf, buf_len, end_ptr,\n+                                          font);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer-serialize.cc","additions":433,"deletions":38,"binary":false,"changes":471,"status":"modified"},{"patch":"@@ -40,2 +40,3 @@\n- * Buffers serve dual role in HarfBuzz; they hold the input characters that are\n- * passed to hb_shape(), and after shaping they hold the output glyphs.\n+ * Buffers serve a dual role in HarfBuzz; before shaping, they hold\n+ * the input characters that are passed to hb_shape(), and after\n+ * shaping they hold the output glyphs.\n@@ -53,1 +54,1 @@\n- * %true if all properties of @a equal those of @b, false otherwise.\n+ * %true if all properties of @a equal those of @b, %false otherwise.\n@@ -220,3 +221,0 @@\n-  if (unlikely (hb_object_is_immutable (this)))\n-    return;\n-\n@@ -235,3 +233,0 @@\n-  if (unlikely (hb_object_is_immutable (this)))\n-    return;\n-\n@@ -292,3 +287,0 @@\n-  if (unlikely (hb_object_is_immutable (this)))\n-    return;\n-\n@@ -305,3 +297,0 @@\n-  if (unlikely (hb_object_is_immutable (this)))\n-    return;\n-\n@@ -318,3 +307,0 @@\n-  if (unlikely (hb_object_is_immutable (this)))\n-    return;\n-\n@@ -335,0 +321,3 @@\n+  assert (idx <= len);\n+  if (unlikely (!next_glyphs (len - idx))) return;\n+\n@@ -340,2 +329,2 @@\n-    hb_glyph_info_t *tmp_string;\n-    tmp_string = info;\n+    hb_glyph_info_t *tmp;\n+    tmp = info;\n@@ -343,1 +332,2 @@\n-    out_info = tmp_string;\n+    out_info = tmp;\n+\n@@ -355,25 +345,0 @@\n-\n-void\n-hb_buffer_t::replace_glyphs (unsigned int num_in,\n-                             unsigned int num_out,\n-                             const uint32_t *glyph_data)\n-{\n-  if (unlikely (!make_room_for (num_in, num_out))) return;\n-\n-  assert (idx + num_in <= len);\n-\n-  merge_clusters (idx, idx + num_in);\n-\n-  hb_glyph_info_t orig_info = info[idx];\n-  hb_glyph_info_t *pinfo = &out_info[out_len];\n-  for (unsigned int i = 0; i < num_out; i++)\n-  {\n-    *pinfo = orig_info;\n-    pinfo->codepoint = glyph_data[i];\n-    pinfo++;\n-  }\n-\n-  idx  += num_in;\n-  out_len += num_out;\n-}\n-\n@@ -620,2 +585,1 @@\n-  assert ((content_type == HB_BUFFER_CONTENT_TYPE_UNICODE) ||\n-          (!len && (content_type == HB_BUFFER_CONTENT_TYPE_INVALID)));\n+  assert_unicode ();\n@@ -709,0 +673,1 @@\n+ * Fetches an empty #hb_buffer_t.\n@@ -710,2 +675,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The empty buffer\n@@ -723,1 +687,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -741,1 +705,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -768,6 +732,5 @@\n- * @buffer: an #hb_buffer_t.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n- *\n+ * @buffer: An #hb_buffer_t\n+ * @key: The user-data key\n+ * @data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -775,0 +738,1 @@\n+ * Attaches a user-data key\/data pair to the specified buffer.\n@@ -776,1 +740,1 @@\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -792,3 +756,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @key:\n- *\n+ * @buffer: An #hb_buffer_t\n+ * @key: The user-data key to query\n@@ -796,0 +759,2 @@\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified buffer.\n@@ -797,1 +762,1 @@\n- * Return value:\n+ * Return value: (transfer none): A pointer to the user data\n@@ -811,2 +776,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @content_type: the type of buffer contents to set\n+ * @buffer: An #hb_buffer_t\n+ * @content_type: The type of buffer contents to set\n@@ -814,2 +779,2 @@\n- * Sets the type of @buffer contents, buffers are either empty, contain\n- * characters (before shaping) or glyphs (the result of shaping).\n+ * Sets the type of @buffer contents. Buffers are either empty, contain\n+ * characters (before shaping), or contain glyphs (the result of shaping).\n@@ -828,1 +793,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -830,1 +795,2 @@\n- * see hb_buffer_set_content_type().\n+ * Fetches the type of @buffer contents. Buffers are either empty, contain\n+ * characters (before shaping), or contain glyphs (the result of shaping).\n@@ -833,1 +799,1 @@\n- * The type of @buffer contents.\n+ * The type of @buffer contents\n@@ -846,3 +812,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @unicode_funcs:\n- *\n+ * @buffer: An #hb_buffer_t\n+ * @unicode_funcs: The Unicode-functions structure\n@@ -850,0 +815,2 @@\n+ * Sets the Unicode-functions structure of a buffer to\n+ * @unicode_funcs.\n@@ -870,1 +837,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -872,0 +839,1 @@\n+ * Fetches the Unicode-functions structure of a buffer.\n@@ -873,2 +841,1 @@\n- *\n- * Return value:\n+ * Return value: The Unicode-functions structure\n@@ -886,1 +853,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -912,1 +879,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -929,2 +896,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @script: an #hb_script_t to set.\n+ * @buffer: An #hb_buffer_t\n+ * @script: An #hb_script_t to set.\n@@ -956,1 +923,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -958,1 +925,1 @@\n- * See hb_buffer_set_script().\n+ * Fetches the script of @buffer.\n@@ -961,1 +928,1 @@\n- * The #hb_script_t of the @buffer.\n+ * The #hb_script_t of the @buffer\n@@ -973,2 +940,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @language: an hb_language_t to set.\n+ * @buffer: An #hb_buffer_t\n+ * @language: An hb_language_t to set\n@@ -1000,1 +967,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1017,2 +984,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @props: an #hb_segment_properties_t to use.\n+ * @buffer: An #hb_buffer_t\n+ * @props: An #hb_segment_properties_t to use\n@@ -1038,2 +1005,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @props: (out): the output #hb_segment_properties_t.\n+ * @buffer: An #hb_buffer_t\n+ * @props: (out): The output #hb_segment_properties_t\n@@ -1055,2 +1022,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @flags: the buffer flags to set.\n+ * @buffer: An #hb_buffer_t\n+ * @flags: The buffer flags to set\n@@ -1074,1 +1041,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1076,1 +1043,1 @@\n- * See hb_buffer_set_flags().\n+ * Fetches the #hb_buffer_flags_t of @buffer.\n@@ -1079,1 +1046,1 @@\n- * The @buffer flags.\n+ * The @buffer flags\n@@ -1091,3 +1058,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @cluster_level:\n- *\n+ * @buffer: An #hb_buffer_t\n+ * @cluster_level: The cluster level to set on the buffer\n@@ -1095,0 +1061,3 @@\n+ * Sets the cluster level of a buffer. The #hb_buffer_cluster_level_t\n+ * dictates one aspect of how HarfBuzz will treat non-base characters\n+ * during shaping.\n@@ -1110,1 +1079,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1112,0 +1081,3 @@\n+ * Fetches the cluster level of a buffer. The #hb_buffer_cluster_level_t\n+ * dictates one aspect of how HarfBuzz will treat non-base characters\n+ * during shaping.\n@@ -1113,2 +1085,1 @@\n- *\n- * Return value:\n+ * Return value: The cluster level of @buffer\n@@ -1127,1 +1098,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1133,1 +1104,1 @@\n- * Default is %HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT.\n+ * Default is #HB_BUFFER_REPLACEMENT_CODEPOINT_DEFAULT.\n@@ -1149,1 +1120,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1151,1 +1122,2 @@\n- * See hb_buffer_set_replacement_codepoint().\n+ * Fetches the #hb_codepoint_t that replaces invalid entries for a given encoding\n+ * when adding text to @buffer.\n@@ -1154,1 +1126,1 @@\n- * The @buffer replacement #hb_codepoint_t.\n+ * The @buffer replacement #hb_codepoint_t\n@@ -1167,1 +1139,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1189,1 +1161,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1194,1 +1166,1 @@\n- * The @buffer invisible #hb_codepoint_t.\n+ * The @buffer invisible #hb_codepoint_t\n@@ -1207,1 +1179,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1217,0 +1189,3 @@\n+  if (unlikely (hb_object_is_immutable (buffer)))\n+    return;\n+\n@@ -1222,1 +1197,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1232,0 +1207,3 @@\n+  if (unlikely (hb_object_is_immutable (buffer)))\n+    return;\n+\n@@ -1237,2 +1215,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @size: number of items to pre allocate.\n+ * @buffer: An #hb_buffer_t\n+ * @size: Number of items to pre allocate.\n@@ -1243,1 +1221,1 @@\n- * %true if @buffer memory allocation succeeded, %false otherwise.\n+ * %true if @buffer memory allocation succeeded, %false otherwise\n@@ -1255,1 +1233,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1272,3 +1250,3 @@\n- * @buffer: an #hb_buffer_t.\n- * @codepoint: a Unicode code point.\n- * @cluster: the cluster value of @codepoint.\n+ * @buffer: An #hb_buffer_t\n+ * @codepoint: A Unicode code point.\n+ * @cluster: The cluster value of @codepoint.\n@@ -1298,2 +1276,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @length: the new length of @buffer.\n+ * @buffer: An #hb_buffer_t\n+ * @length: The new length of @buffer\n@@ -1316,1 +1294,1 @@\n-  if (!buffer->ensure (length))\n+  if (unlikely (!buffer->ensure (length)))\n@@ -1340,1 +1318,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1358,2 +1336,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @length: (out): output array length.\n+ * @buffer: An #hb_buffer_t\n+ * @length: (out): The output-array length.\n@@ -1382,2 +1360,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @length: (out): output length.\n+ * @buffer: An #hb_buffer_t\n+ * @length: (out): The output length\n@@ -1407,0 +1385,19 @@\n+\/**\n+ * hb_buffer_has_positions:\n+ * @buffer: an #hb_buffer_t.\n+ *\n+ * Returns whether @buffer has glyph position data.\n+ * A buffer gains position data when hb_buffer_get_glyph_positions() is called on it,\n+ * and cleared of position data when hb_buffer_clear_contents() is called.\n+ *\n+ * Return value:\n+ * %true if the @buffer has position array, %false otherwise.\n+ *\n+ * Since: 2.7.3\n+ **\/\n+HB_EXTERN hb_bool_t\n+hb_buffer_has_positions (hb_buffer_t  *buffer)\n+{\n+  return buffer->have_positions;\n+}\n+\n@@ -1409,1 +1406,1 @@\n- * @info: a #hb_glyph_info_t.\n+ * @info: a #hb_glyph_info_t\n@@ -1414,1 +1411,1 @@\n- * The #hb_glyph_flags_t encoded within @info.\n+ * The #hb_glyph_flags_t encoded within @info\n@@ -1426,1 +1423,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1440,3 +1437,3 @@\n- * @buffer: an #hb_buffer_t.\n- * @start: start index.\n- * @end: end index.\n+ * @buffer: An #hb_buffer_t\n+ * @start: start index\n+ * @end: end index\n@@ -1444,1 +1441,1 @@\n- * Reverses buffer contents between start to end.\n+ * Reverses buffer contents between @start and @end.\n@@ -1457,1 +1454,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1473,1 +1470,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1477,1 +1474,1 @@\n- * %HB_BUFFER_CONTENT_TYPE_UNICODE.\n+ * #HB_BUFFER_CONTENT_TYPE_UNICODE.\n@@ -1479,1 +1476,1 @@\n- * If buffer script is not set (ie. is %HB_SCRIPT_INVALID), it\n+ * If buffer script is not set (ie. is #HB_SCRIPT_INVALID), it\n@@ -1481,2 +1478,2 @@\n- * the buffer that has a script other than %HB_SCRIPT_COMMON,\n- * %HB_SCRIPT_INHERITED, and %HB_SCRIPT_UNKNOWN.\n+ * the buffer that has a script other than #HB_SCRIPT_COMMON,\n+ * #HB_SCRIPT_INHERITED, and #HB_SCRIPT_UNKNOWN.\n@@ -1484,1 +1481,1 @@\n- * Next, if buffer direction is not set (ie. is %HB_DIRECTION_INVALID),\n+ * Next, if buffer direction is not set (ie. is #HB_DIRECTION_INVALID),\n@@ -1487,2 +1484,2 @@\n- * If hb_script_get_horizontal_direction() returns %HB_DIRECTION_INVALID,\n- * then %HB_DIRECTION_LTR is used.\n+ * If hb_script_get_horizontal_direction() returns #HB_DIRECTION_INVALID,\n+ * then #HB_DIRECTION_LTR is used.\n@@ -1490,1 +1487,1 @@\n- * Finally, if buffer language is not set (ie. is %HB_LANGUAGE_INVALID),\n+ * Finally, if buffer language is not set (ie. is #HB_LANGUAGE_INVALID),\n@@ -1516,2 +1513,1 @@\n-  assert ((buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE) ||\n-          (!buffer->len && (buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)));\n+  buffer->assert_unicode ();\n@@ -1528,1 +1524,4 @@\n-  buffer->ensure (buffer->len + item_length * sizeof (T) \/ 4);\n+  if (unlikely (item_length < 0 ||\n+                item_length > INT_MAX \/ 8 ||\n+                !buffer->ensure (buffer->len + item_length * sizeof (T) \/ 4)))\n+    return;\n@@ -1576,2 +1575,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @text: (array length=text_length) (element-type uint8_t): an array of UTF-8\n+ * @buffer: An #hb_buffer_t\n+ * @text: (array length=text_length) (element-type uint8_t): An array of UTF-8\n@@ -1579,3 +1578,3 @@\n- * @text_length: the length of the @text, or -1 if it is %NULL terminated.\n- * @item_offset: the offset of the first character to add to the @buffer.\n- * @item_length: the number of characters to add to the @buffer, or -1 for the\n+ * @text_length: The length of the @text, or -1 if it is %NULL terminated.\n+ * @item_offset: The offset of the first character to add to the @buffer.\n+ * @item_length: The number of characters to add to the @buffer, or -1 for the\n@@ -1603,6 +1602,6 @@\n- * @buffer: an #hb_buffer_t.\n- * @text: (array length=text_length): an array of UTF-16 characters to append.\n- * @text_length: the length of the @text, or -1 if it is %NULL terminated.\n- * @item_offset: the offset of the first character to add to the @buffer.\n- * @item_length: the number of characters to add to the @buffer, or -1 for the\n- *               end of @text (assuming it is %NULL terminated).\n+ * @buffer: An #hb_buffer_t\n+ * @text: (array length=text_length): An array of UTF-16 characters to append\n+ * @text_length: The length of the @text, or -1 if it is %NULL terminated\n+ * @item_offset: The offset of the first character to add to the @buffer\n+ * @item_length: The number of characters to add to the @buffer, or -1 for the\n+ *               end of @text (assuming it is %NULL terminated)\n@@ -1629,6 +1628,6 @@\n- * @buffer: an #hb_buffer_t.\n- * @text: (array length=text_length): an array of UTF-32 characters to append.\n- * @text_length: the length of the @text, or -1 if it is %NULL terminated.\n- * @item_offset: the offset of the first character to add to the @buffer.\n- * @item_length: the number of characters to add to the @buffer, or -1 for the\n- *               end of @text (assuming it is %NULL terminated).\n+ * @buffer: An #hb_buffer_t\n+ * @text: (array length=text_length): An array of UTF-32 characters to append\n+ * @text_length: The length of the @text, or -1 if it is %NULL terminated\n+ * @item_offset: The offset of the first character to add to the @buffer\n+ * @item_length: The number of characters to add to the @buffer, or -1 for the\n+ *               end of @text (assuming it is %NULL terminated)\n@@ -1655,1 +1654,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1657,3 +1656,3 @@\n- *               characters to append.\n- * @text_length: the length of the @text, or -1 if it is %NULL terminated.\n- * @item_offset: the offset of the first character to add to the @buffer.\n+ *               characters to append\n+ * @text_length: the length of the @text, or -1 if it is %NULL terminated\n+ * @item_offset: the offset of the first character to add to the @buffer\n@@ -1661,1 +1660,1 @@\n- *               end of @text (assuming it is %NULL terminated).\n+ *               end of @text (assuming it is %NULL terminated)\n@@ -1717,2 +1716,2 @@\n- * @buffer: an #hb_buffer_t.\n- * @source: source #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n+ * @source: source #hb_buffer_t\n@@ -1745,5 +1744,0 @@\n-  if (!buffer->len)\n-    buffer->content_type = source->content_type;\n-  if (!buffer->have_positions && source->have_positions)\n-    buffer->clear_positions ();\n-\n@@ -1761,0 +1755,5 @@\n+  if (!orig_len)\n+    buffer->content_type = source->content_type;\n+  if (!buffer->have_positions && source->have_positions)\n+    buffer->clear_positions ();\n+\n@@ -1824,1 +1823,1 @@\n- * @buffer: an #hb_buffer_t.\n+ * @buffer: An #hb_buffer_t\n@@ -1837,2 +1836,2 @@\n-  assert ((buffer->content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS) ||\n-          (!buffer->len && (buffer->content_type == HB_BUFFER_CONTENT_TYPE_INVALID)));\n+\n+  buffer->assert_glyphs ();\n@@ -1879,2 +1878,2 @@\n- * If dottedcircle_glyph is (hb_codepoint_t) -1 then %HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT\n- * and %HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT are never returned.  This should be used by most\n+ * If dottedcircle_glyph is (hb_codepoint_t) -1 then #HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT\n+ * and #HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT are never returned.  This should be used by most\n@@ -1970,5 +1969,4 @@\n- * @buffer: an #hb_buffer_t.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @buffer: An #hb_buffer_t\n+ * @func: (closure user_data) (destroy destroy) (scope notified): Callback function\n+ * @user_data: (nullable): Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -1976,0 +1974,1 @@\n+ * Sets the implementation function for #hb_buffer_message_func_t.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer.cc","additions":184,"deletions":185,"binary":false,"changes":369,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -62,2 +62,1 @@\n-typedef struct hb_glyph_info_t\n-{\n+typedef struct hb_glyph_info_t {\n@@ -94,0 +93,2 @@\n+ * Flags for #hb_glyph_info_t.\n+ *\n@@ -154,0 +155,5 @@\n+\/**\n+ * HB_SEGMENT_PROPERTIES_DEFAULT:\n+ *\n+ * The default #hb_segment_properties_t of of freshly created #hb_buffer_t.\n+ *\/\n@@ -207,0 +213,2 @@\n+ *\n+ * The type of #hb_buffer_t contents.\n@@ -292,0 +300,2 @@\n+ * Flags for #hb_buffer_t.\n+ *\n@@ -319,0 +329,17 @@\n+ * Data type for holding HarfBuzz's clustering behavior options. The cluster level\n+ * dictates one aspect of how HarfBuzz will treat non-base characters\n+ * during shaping.\n+ *\n+ * In @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES, non-base\n+ * characters are merged into the cluster of the base character that precedes them.\n+ *\n+ * In @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS, non-base characters are initially\n+ * assigned their own cluster values, which are not merged into preceding base\n+ * clusters. This allows HarfBuzz to perform additional operations like reorder\n+ * sequences of adjacent marks.\n+ *\n+ * @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES is the default, because it maintains\n+ * backward compatibility with older versions of HarfBuzz. New client programs that\n+ * do not need to maintain such backward compatibility are recommended to use\n+ * @HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS instead of the default.\n+ *\n@@ -450,0 +477,3 @@\n+HB_EXTERN hb_bool_t\n+hb_buffer_has_positions (hb_buffer_t  *buffer);\n+\n@@ -521,0 +551,21 @@\n+HB_EXTERN unsigned int\n+hb_buffer_serialize_unicode (hb_buffer_t *buffer,\n+                                        unsigned int start,\n+                                        unsigned int end,\n+                                        char *buf,\n+                                        unsigned int buf_size,\n+                                        unsigned int *buf_consumed,\n+                                        hb_buffer_serialize_format_t format,\n+                                        hb_buffer_serialize_flags_t flags);\n+\n+HB_EXTERN unsigned int\n+hb_buffer_serialize (hb_buffer_t *buffer,\n+                                        unsigned int start,\n+                                        unsigned int end,\n+                                        char *buf,\n+                                        unsigned int buf_size,\n+                                        unsigned int *buf_consumed,\n+                                        hb_font_t *font,\n+                                        hb_buffer_serialize_format_t format,\n+                                        hb_buffer_serialize_flags_t flags);\n+\n@@ -529,0 +580,8 @@\n+HB_EXTERN hb_bool_t\n+hb_buffer_deserialize_unicode (hb_buffer_t *buffer,\n+            const char *buf,\n+            int buf_len,\n+            const char **end_ptr,\n+            hb_buffer_serialize_format_t format);\n+\n+\n@@ -534,0 +593,29 @@\n+\/**\n+ * hb_buffer_diff_flags_t:\n+ * @HB_BUFFER_DIFF_FLAG_EQUAL: equal buffers.\n+ * @HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH: buffers with different\n+ *     #hb_buffer_content_type_t.\n+ * @HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH: buffers with differing length.\n+ * @HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT: `.notdef` glyph is present in the\n+ *     reference buffer.\n+ * @HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT: dotted circle glyph is present\n+ *     in the reference buffer.\n+ * @HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH: difference in #hb_glyph_info_t.codepoint\n+ * @HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH: difference in #hb_glyph_info_t.cluster\n+ * @HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH: difference in #hb_glyph_flags_t.\n+ * @HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH: difference in #hb_glyph_position_t.\n+ *\n+ * Flags from comparing two #hb_buffer_t's.\n+ *\n+ * Buffer with different #hb_buffer_content_type_t cannot be meaningfully\n+ * compared in any further detail.\n+ *\n+ * For buffers with differing length, the per-glyph comparison is not\n+ * attempted, though we do still scan reference buffer for dotted circle and\n+ * `.notdef` glyphs.\n+ *\n+ * If the buffers have the same length, we compare them glyph-by-glyph and\n+ * report which aspect(s) of the glyph info\/position are different.\n+ *\n+ * Since: 1.5.0\n+ *\/\n@@ -573,0 +661,17 @@\n+\/**\n+ * hb_buffer_message_func_t:\n+ * @buffer: An #hb_buffer_t to work upon\n+ * @font: The #hb_font_t the @buffer is shaped with\n+ * @message: %NULL-terminated message passed to the function\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A callback method for #hb_buffer_t. The method gets called with the\n+ * #hb_buffer_t it was set on, the #hb_font_t the buffer is shaped with and a\n+ * message describing what step of the shaping process will be performed.\n+ * Returning %false from this method will skip this shaping step and move to\n+ * the next one.\n+ *\n+ * Return value: %true to perform the shaping step, %false to skip it.\n+ *\n+ * Since: 1.1.3\n+ *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer.h","additions":108,"deletions":3,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-#define HB_BUFFER_MAX_LEN_FACTOR 32\n+#define HB_BUFFER_MAX_LEN_FACTOR 64\n@@ -41,1 +41,1 @@\n-#define HB_BUFFER_MAX_LEN_MIN 8192\n+#define HB_BUFFER_MAX_LEN_MIN 16384\n@@ -48,1 +48,1 @@\n-#define HB_BUFFER_MAX_OPS_FACTOR 64\n+#define HB_BUFFER_MAX_OPS_FACTOR 1024\n@@ -51,1 +51,1 @@\n-#define HB_BUFFER_MAX_OPS_MIN 1024\n+#define HB_BUFFER_MAX_OPS_MIN 16384\n@@ -142,1 +142,1 @@\n-  bool in_error () const { return !successful; }\n+  HB_NODISCARD bool in_error () const { return !successful; }\n@@ -189,1 +189,1 @@\n-  bool has_separate_output () const { return info != out_info; }\n+  HB_NODISCARD bool has_separate_output () const { return info != out_info; }\n@@ -213,5 +213,4 @@\n-  HB_INTERNAL void replace_glyphs (unsigned int num_in,\n-                                   unsigned int num_out,\n-                                   const hb_codepoint_t *glyph_data);\n-\n-  void replace_glyph (hb_codepoint_t glyph_index)\n+  template <typename T>\n+  HB_NODISCARD bool replace_glyphs (unsigned int num_in,\n+                                    unsigned int num_out,\n+                                    const T *glyph_data)\n@@ -219,5 +218,1 @@\n-    if (unlikely (out_info != info || out_len != idx)) {\n-      if (unlikely (!make_room_for (1, 1))) return;\n-      out_info[out_len] = info[idx];\n-    }\n-    out_info[out_len].codepoint = glyph_index;\n+    if (unlikely (!make_room_for (num_in, num_out))) return false;\n@@ -225,7 +220,1 @@\n-    idx++;\n-    out_len++;\n-  }\n-  \/* Makes a copy of the glyph at idx to output and replace glyph_index *\/\n-  hb_glyph_info_t & output_glyph (hb_codepoint_t glyph_index)\n-  {\n-    if (unlikely (!make_room_for (0, 1))) return Crap (hb_glyph_info_t);\n+    assert (idx + num_in <= len);\n@@ -233,2 +222,1 @@\n-    if (unlikely (idx == len && !out_len))\n-      return Crap (hb_glyph_info_t);\n+    merge_clusters (idx, idx + num_in);\n@@ -236,2 +224,1 @@\n-    out_info[out_len] = idx < len ? info[idx] : out_info[out_len - 1];\n-    out_info[out_len].codepoint = glyph_index;\n+    hb_glyph_info_t &orig_info = idx < len ? cur() : prev();\n@@ -239,1 +226,7 @@\n-    out_len++;\n+    hb_glyph_info_t *pinfo = &out_info[out_len];\n+    for (unsigned int i = 0; i < num_out; i++)\n+    {\n+      *pinfo = orig_info;\n+      pinfo->codepoint = glyph_data[i];\n+      pinfo++;\n+    }\n@@ -241,1 +234,3 @@\n-    return out_info[out_len - 1];\n+    idx  += num_in;\n+    out_len += num_out;\n+    return true;\n@@ -243,1 +238,9 @@\n-  void output_info (const hb_glyph_info_t &glyph_info)\n+\n+  HB_NODISCARD bool replace_glyph (hb_codepoint_t glyph_index)\n+  { return replace_glyphs (1, 1, &glyph_index); }\n+\n+  \/* Makes a copy of the glyph at idx to output and replace glyph_index *\/\n+  HB_NODISCARD bool output_glyph (hb_codepoint_t glyph_index)\n+  { return replace_glyphs (0, 1, &glyph_index); }\n+\n+  HB_NODISCARD bool output_info (const hb_glyph_info_t &glyph_info)\n@@ -245,1 +248,1 @@\n-    if (unlikely (!make_room_for (0, 1))) return;\n+    if (unlikely (!make_room_for (0, 1))) return false;\n@@ -250,0 +253,1 @@\n+    return true;\n@@ -252,1 +256,1 @@\n-  void copy_glyph ()\n+  HB_NODISCARD bool copy_glyph ()\n@@ -254,5 +258,3 @@\n-    if (unlikely (!make_room_for (0, 1))) return;\n-\n-    out_info[out_len] = info[idx];\n-\n-    out_len++;\n+    \/* Extra copy because cur()'s return can be freed within\n+     * output_info() call if buffer reallocates. *\/\n+    return output_info (hb_glyph_info_t (cur()));\n@@ -260,0 +262,1 @@\n+\n@@ -262,2 +265,1 @@\n-  void\n-  next_glyph ()\n+  HB_NODISCARD bool next_glyph ()\n@@ -269,1 +271,1 @@\n-        if (unlikely (!make_room_for (1, 1))) return;\n+        if (unlikely (!make_room_for (1, 1))) return false;\n@@ -276,0 +278,1 @@\n+    return true;\n@@ -279,2 +282,1 @@\n-  void\n-  next_glyphs (unsigned int n)\n+  HB_NODISCARD bool next_glyphs (unsigned int n)\n@@ -286,1 +288,1 @@\n-        if (unlikely (!make_room_for (n, n))) return;\n+        if (unlikely (!make_room_for (n, n))) return false;\n@@ -293,0 +295,1 @@\n+    return true;\n@@ -332,1 +335,1 @@\n-  HB_INTERNAL bool move_to (unsigned int i); \/* i is output-buffer index. *\/\n+  HB_NODISCARD HB_INTERNAL bool move_to (unsigned int i); \/* i is output-buffer index. *\/\n@@ -334,1 +337,1 @@\n-  HB_INTERNAL bool enlarge (unsigned int size);\n+  HB_NODISCARD HB_INTERNAL bool enlarge (unsigned int size);\n@@ -336,1 +339,1 @@\n-  bool ensure (unsigned int size)\n+  HB_NODISCARD bool ensure (unsigned int size)\n@@ -339,1 +342,1 @@\n-  bool ensure_inplace (unsigned int size)\n+  HB_NODISCARD bool ensure_inplace (unsigned int size)\n@@ -342,2 +345,35 @@\n-  HB_INTERNAL bool make_room_for (unsigned int num_in, unsigned int num_out);\n-  HB_INTERNAL bool shift_forward (unsigned int count);\n+  void assert_glyphs ()\n+  {\n+    assert ((content_type == HB_BUFFER_CONTENT_TYPE_GLYPHS) ||\n+            (!len && (content_type == HB_BUFFER_CONTENT_TYPE_INVALID)));\n+  }\n+  void assert_unicode ()\n+  {\n+    assert ((content_type == HB_BUFFER_CONTENT_TYPE_UNICODE) ||\n+            (!len && (content_type == HB_BUFFER_CONTENT_TYPE_INVALID)));\n+  }\n+  HB_NODISCARD bool ensure_glyphs ()\n+  {\n+    if (unlikely (content_type != HB_BUFFER_CONTENT_TYPE_GLYPHS))\n+    {\n+      if (content_type != HB_BUFFER_CONTENT_TYPE_INVALID)\n+        return false;\n+      assert (len == 0);\n+      content_type = HB_BUFFER_CONTENT_TYPE_GLYPHS;\n+    }\n+    return true;\n+  }\n+  HB_NODISCARD bool ensure_unicode ()\n+  {\n+    if (unlikely (content_type != HB_BUFFER_CONTENT_TYPE_UNICODE))\n+    {\n+      if (content_type != HB_BUFFER_CONTENT_TYPE_INVALID)\n+        return false;\n+      assert (len == 0);\n+      content_type = HB_BUFFER_CONTENT_TYPE_UNICODE;\n+    }\n+    return true;\n+  }\n+\n+  HB_NODISCARD HB_INTERNAL bool make_room_for (unsigned int num_in, unsigned int num_out);\n+  HB_NODISCARD HB_INTERNAL bool shift_forward (unsigned int count);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-buffer.hh","additions":85,"deletions":49,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -89,2 +89,2 @@\n- * @str: (array length=len) (element-type uint8_t):\n- * @len:\n+ * @str: (array length=len) (element-type uint8_t): String to convert\n+ * @len: Length of @str, or -1 if it is %NULL-terminated\n@@ -92,0 +92,4 @@\n+ * Converts a string into an #hb_tag_t. Valid tags\n+ * are four characters. Shorter input strings will be\n+ * padded with spaces. Longer input strings will be\n+ * truncated.\n@@ -93,2 +97,1 @@\n- *\n- * Return value:\n+ * Return value: The #hb_tag_t corresponding to @str\n@@ -119,3 +122,2 @@\n- * @tag:\n- * @buf: (out caller-allocates) (array fixed-size=4) (element-type uint8_t):\n- *\n+ * @tag: #hb_tag_t to convert\n+ * @buf: (out caller-allocates) (array fixed-size=4) (element-type uint8_t): Converted string\n@@ -123,0 +125,2 @@\n+ * Converts an #hb_tag_t to a string and returns it in @buf.\n+ * Strings will be four characters long.\n@@ -147,2 +151,2 @@\n- * @str: (array length=len) (element-type uint8_t):\n- * @len:\n+ * @str: (array length=len) (element-type uint8_t): String to convert\n+ * @len: Length of @str, or -1 if it is %NULL-terminated\n@@ -150,0 +154,1 @@\n+ * Converts a string to an #hb_direction_t.\n@@ -151,0 +156,2 @@\n+ * Matching is loose and applies only to the first letter. For\n+ * examples, \"LTR\" and \"left-to-right\" will both return #HB_DIRECTION_LTR.\n@@ -152,1 +159,3 @@\n- * Return value:\n+ * Unmatched strings will return #HB_DIRECTION_INVALID.\n+ *\n+ * Return value: The #hb_direction_t matching @str\n@@ -175,2 +184,1 @@\n- * @direction:\n- *\n+ * @direction: The #hb_direction_t to convert\n@@ -178,0 +186,1 @@\n+ * Converts an #hb_direction_t to a string.\n@@ -179,1 +188,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): The string corresponding to @direction\n@@ -370,1 +379,1 @@\n- * @language: an #hb_language_t to convert.\n+ * @language: The #hb_language_t to convert\n@@ -372,1 +381,1 @@\n- * See hb_language_from_string().\n+ * Converts an #hb_language_t to a string.\n@@ -391,1 +400,1 @@\n- * Get default language from current locale.\n+ * Fetch the default language from current locale.\n@@ -393,1 +402,1 @@\n- * Note that the first time this function is called, it calls\n+ * <note>Note that the first time this function is called, it calls\n@@ -398,1 +407,1 @@\n- * HarfBuzz itself.\n+ * HarfBuzz itself.<\/note>\n@@ -400,1 +409,2 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): The default language of the locale as\n+ * an #hb_language_t\n@@ -451,0 +461,1 @@\n+    case HB_TAG('A','r','a','n'): return HB_SCRIPT_ARABIC;\n@@ -452,0 +463,4 @@\n+    case HB_TAG('G','e','o','k'): return HB_SCRIPT_GEORGIAN;\n+    case HB_TAG('H','a','n','s'): return HB_SCRIPT_HAN;\n+    case HB_TAG('H','a','n','t'): return HB_SCRIPT_HAN;\n+    case HB_TAG('J','a','m','o'): return HB_SCRIPT_HANGUL;\n@@ -492,1 +507,1 @@\n- * See hb_script_from_iso15924_tag().\n+ * Converts an #hb_script_t to a corresponding ISO 15924 script tag.\n@@ -507,2 +522,1 @@\n- * @script:\n- *\n+ * @script: The #hb_script_t to query\n@@ -510,0 +524,6 @@\n+ * Fetches the #hb_direction_t of a script when it is\n+ * set horizontally. All right-to-left scripts will return\n+ * #HB_DIRECTION_RTL. All left-to-right scripts will return\n+ * #HB_DIRECTION_LTR.  Scripts that can be written either\n+ * horizontally or vertically will return #HB_DIRECTION_INVALID.\n+ * Unknown scripts will return #HB_DIRECTION_LTR.\n@@ -511,1 +531,1 @@\n- * Return value:\n+ * Return value: The horizontal #hb_direction_t of @script\n@@ -616,3 +636,3 @@\n- * @major: (out): Library major version component.\n- * @minor: (out): Library minor version component.\n- * @micro: (out): Library micro version component.\n+ * @major: (out): Library major version component\n+ * @minor: (out): Library minor version component\n+ * @micro: (out): Library micro version component\n@@ -639,1 +659,1 @@\n- * Return value: library version string.\n+ * Return value: Library version string\n@@ -651,3 +671,3 @@\n- * @major:\n- * @minor:\n- * @micro:\n+ * @major: Library major version component\n+ * @minor: Library minor version component\n+ * @micro: Library micro version component\n@@ -655,0 +675,2 @@\n+ * Tests the library version against a minimum value,\n+ * as three integer components.\n@@ -656,2 +678,2 @@\n- *\n- * Return value:\n+ * Return value: %true if the library is equal to or greater than\n+ * the test value, %false otherwise\n@@ -886,1 +908,1 @@\n- * %true if @str is successfully parsed, %false otherwise.\n+ * %true if @str is successfully parsed, %false otherwise\n@@ -984,0 +1006,15 @@\n+ * @str: (array length=len) (element-type uint8_t): a string to parse\n+ * @len: length of @str, or -1 if string is %NULL terminated\n+ * @variation: (out): the #hb_variation_t to initialize with the parsed values\n+ *\n+ * Parses a string into a #hb_variation_t.\n+ *\n+ * The format for specifying variation settings follows. All valid CSS\n+ * font-variation-settings values other than 'normal' and 'inherited' are also\n+ * accepted, though, not documented below.\n+ *\n+ * The format is a tag, optionally followed by an equals sign, followed by a\n+ * number. For example `wght=500`, or `slnt=-7.5`.\n+ *\n+ * Return value:\n+ * %true if @str is successfully parsed, %false otherwise\n@@ -1010,0 +1047,7 @@\n+ * @variation: an #hb_variation_t to convert\n+ * @buf: (array length=size) (out): output string\n+ * @size: the allocated size of @buf\n+ *\n+ * Converts an #hb_variation_t into a %NULL-terminated string in the format\n+ * understood by hb_variation_from_string(). The client in responsible for\n+ * allocating big enough size for @buf, 128 bytes is more than enough.\n@@ -1036,1 +1080,3 @@\n- * color: a #hb_color_t we are interested in its channels.\n+ * @color: an #hb_color_t we are interested in its channels.\n+ *\n+ * Fetches the alpha channel of the given @color.\n@@ -1038,1 +1084,1 @@\n- * Return value: Alpha channel value of the given color\n+ * Return value: Alpha channel value\n@@ -1050,1 +1096,1 @@\n- * color: a #hb_color_t we are interested in its channels.\n+ * @color: an #hb_color_t we are interested in its channels.\n@@ -1052,1 +1098,3 @@\n- * Return value: Red channel value of the given color\n+ * Fetches the red channel of the given @color.\n+ *\n+ * Return value: Red channel value\n@@ -1064,1 +1112,3 @@\n- * color: a #hb_color_t we are interested in its channels.\n+ * @color: an #hb_color_t we are interested in its channels.\n+ *\n+ * Fetches the green channel of the given @color.\n@@ -1066,1 +1116,1 @@\n- * Return value: Green channel value of the given color\n+ * Return value: Green channel value\n@@ -1078,1 +1128,3 @@\n- * color: a #hb_color_t we are interested in its channels.\n+ * @color: an #hb_color_t we are interested in its channels.\n+ *\n+ * Fetches the blue channel of the given @color.\n@@ -1080,1 +1132,1 @@\n- * Return value: Blue channel value of the given color\n+ * Return value: Blue channel value\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-common.cc","additions":93,"deletions":41,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -91,1 +91,6 @@\n-\n+\/**\n+ * hb_bool_t:\n+ *\n+ * Data type for booleans.\n+ *\n+ **\/\n@@ -94,0 +99,7 @@\n+\/**\n+ * hb_codepoint_t:\n+ *\n+ * Data type for holding Unicode codepoints. Also\n+ * used to hold glyph IDs.\n+ *\n+ **\/\n@@ -95,0 +107,8 @@\n+\/**\n+ * hb_position_t:\n+ *\n+ * Data type for holding a single coordinate value.\n+ * Contour points and other multi-dimensional data are\n+ * stored as tuples of #hb_position_t's.\n+ *\n+ **\/\n@@ -96,0 +116,6 @@\n+\/**\n+ * hb_mask_t:\n+ *\n+ * Data type for bitmasks.\n+ *\n+ **\/\n@@ -110,0 +136,11 @@\n+\/**\n+ * hb_tag_t:\n+ *\n+ * Data type for tag identifiers. Tags are four\n+ * byte integers, each byte representing a character.\n+ *\n+ * Tags are used to identify tables, design-variation axes,\n+ * scripts, languages, font features, and baselines with\n+ * human-readable names.\n+ *\n+ **\/\n@@ -112,0 +149,10 @@\n+\/**\n+ * HB_TAG:\n+ * @c1: 1st character of the tag\n+ * @c2: 2nd character of the tag\n+ * @c3: 3rd character of the tag\n+ * @c4: 4th character of the tag\n+ *\n+ * Constructs an #hb_tag_t from four character literals.\n+ *\n+ **\/\n@@ -113,0 +160,10 @@\n+\n+\/**\n+ * HB_UNTAG:\n+ * @tag: an #hb_tag_t\n+ *\n+ * Extracts four character literals from an #hb_tag_t.\n+ *\n+ * Since: 0.6.0\n+ *\n+ **\/\n@@ -115,0 +172,5 @@\n+\/**\n+ * HB_TAG_NONE:\n+ *\n+ * Unset #hb_tag_t.\n+ *\/\n@@ -116,0 +178,7 @@\n+\/**\n+ * HB_TAG_MAX:\n+ *\n+ * Maximum possible unsigned #hb_tag_t.\n+ *\n+ * Since: 0.9.26\n+ *\/\n@@ -117,0 +186,7 @@\n+\/**\n+ * HB_TAG_MAX_SIGNED:\n+ *\n+ * Maximum possible signed #hb_tag_t.\n+ *\n+ * Since: 0.9.33\n+ *\/\n@@ -135,0 +211,7 @@\n+ *\n+ * The direction of a text segment or buffer.\n+ *\n+ * A segment can also be tested for horizontal or vertical\n+ * orientation (irrespective of specific direction) with\n+ * HB_DIRECTION_IS_HORIZONTAL() or HB_DIRECTION_IS_VERTICAL().\n+ *\n@@ -151,0 +234,7 @@\n+\/**\n+ * HB_DIRECTION_IS_VALID:\n+ * @dir: #hb_direction_t to test\n+ *\n+ * Tests whether a text direction is valid.\n+ *\n+ **\/\n@@ -153,0 +243,8 @@\n+\/**\n+ * HB_DIRECTION_IS_HORIZONTAL:\n+ * @dir: #hb_direction_t to test\n+ *\n+ * Tests whether a text direction is horizontal. Requires\n+ * that the direction be valid.\n+ *\n+ **\/\n@@ -154,0 +252,8 @@\n+\/**\n+ * HB_DIRECTION_IS_VERTICAL:\n+ * @dir: #hb_direction_t to test\n+ *\n+ * Tests whether a text direction is vertical. Requires\n+ * that the direction be valid.\n+ *\n+ **\/\n@@ -155,0 +261,8 @@\n+\/**\n+ * HB_DIRECTION_IS_FORWARD:\n+ * @dir: #hb_direction_t to test\n+ *\n+ * Tests whether a text direction moves forward (from left to right, or from\n+ * top to bottom). Requires that the direction be valid.\n+ *\n+ **\/\n@@ -156,0 +270,8 @@\n+\/**\n+ * HB_DIRECTION_IS_BACKWARD:\n+ * @dir: #hb_direction_t to test\n+ *\n+ * Tests whether a text direction moves backward (from right to left, or from\n+ * bottom to top). Requires that the direction be valid.\n+ *\n+ **\/\n@@ -157,0 +279,8 @@\n+\/**\n+ * HB_DIRECTION_REVERSE:\n+ * @dir: #hb_direction_t to reverse\n+ *\n+ * Reverses a text direction. Requires that the direction\n+ * be valid.\n+ *\n+ **\/\n@@ -162,0 +292,7 @@\n+\/**\n+ * hb_language_t:\n+ *\n+ * Data type for languages. Each #hb_language_t corresponds to a BCP 47\n+ * language tag.\n+ *\n+ *\/\n@@ -170,0 +307,7 @@\n+\/**\n+ * HB_LANGUAGE_INVALID:\n+ *\n+ * An unset #hb_language_t.\n+ *\n+ * Since: 0.6.0\n+ *\/\n@@ -176,1 +320,167 @@\n-\/* hb_script_t *\/\n+\/**\n+ * hb_script_t:\n+ * @HB_SCRIPT_COMMON: `Zyyy`\n+ * @HB_SCRIPT_INHERITED: `Zinh`\n+ * @HB_SCRIPT_UNKNOWN: `Zzzz`\n+ * @HB_SCRIPT_ARABIC: `Arab`\n+ * @HB_SCRIPT_ARMENIAN: `Armn`\n+ * @HB_SCRIPT_BENGALI: `Beng`\n+ * @HB_SCRIPT_CYRILLIC: `Cyrl`\n+ * @HB_SCRIPT_DEVANAGARI: `Deva`\n+ * @HB_SCRIPT_GEORGIAN: `Geor`\n+ * @HB_SCRIPT_GREEK: `Grek`\n+ * @HB_SCRIPT_GUJARATI: `Gujr`\n+ * @HB_SCRIPT_GURMUKHI: `Guru`\n+ * @HB_SCRIPT_HANGUL: `Hang`\n+ * @HB_SCRIPT_HAN: `Hani`\n+ * @HB_SCRIPT_HEBREW: `Hebr`\n+ * @HB_SCRIPT_HIRAGANA: `Hira`\n+ * @HB_SCRIPT_KANNADA: `Knda`\n+ * @HB_SCRIPT_KATAKANA: `Kana`\n+ * @HB_SCRIPT_LAO: `Laoo`\n+ * @HB_SCRIPT_LATIN: `Latn`\n+ * @HB_SCRIPT_MALAYALAM: `Mlym`\n+ * @HB_SCRIPT_ORIYA: `Orya`\n+ * @HB_SCRIPT_TAMIL: `Taml`\n+ * @HB_SCRIPT_TELUGU: `Telu`\n+ * @HB_SCRIPT_THAI: `Thai`\n+ * @HB_SCRIPT_TIBETAN: `Tibt`\n+ * @HB_SCRIPT_BOPOMOFO: `Bopo`\n+ * @HB_SCRIPT_BRAILLE: `Brai`\n+ * @HB_SCRIPT_CANADIAN_SYLLABICS: `Cans`\n+ * @HB_SCRIPT_CHEROKEE: `Cher`\n+ * @HB_SCRIPT_ETHIOPIC: `Ethi`\n+ * @HB_SCRIPT_KHMER: `Khmr`\n+ * @HB_SCRIPT_MONGOLIAN: `Mong`\n+ * @HB_SCRIPT_MYANMAR: `Mymr`\n+ * @HB_SCRIPT_OGHAM: `Ogam`\n+ * @HB_SCRIPT_RUNIC: `Runr`\n+ * @HB_SCRIPT_SINHALA: `Sinh`\n+ * @HB_SCRIPT_SYRIAC: `Syrc`\n+ * @HB_SCRIPT_THAANA: `Thaa`\n+ * @HB_SCRIPT_YI: `Yiii`\n+ * @HB_SCRIPT_DESERET: `Dsrt`\n+ * @HB_SCRIPT_GOTHIC: `Goth`\n+ * @HB_SCRIPT_OLD_ITALIC: `Ital`\n+ * @HB_SCRIPT_BUHID: `Buhd`\n+ * @HB_SCRIPT_HANUNOO: `Hano`\n+ * @HB_SCRIPT_TAGALOG: `Tglg`\n+ * @HB_SCRIPT_TAGBANWA: `Tagb`\n+ * @HB_SCRIPT_CYPRIOT: `Cprt`\n+ * @HB_SCRIPT_LIMBU: `Limb`\n+ * @HB_SCRIPT_LINEAR_B: `Linb`\n+ * @HB_SCRIPT_OSMANYA: `Osma`\n+ * @HB_SCRIPT_SHAVIAN: `Shaw`\n+ * @HB_SCRIPT_TAI_LE: `Tale`\n+ * @HB_SCRIPT_UGARITIC: `Ugar`\n+ * @HB_SCRIPT_BUGINESE: `Bugi`\n+ * @HB_SCRIPT_COPTIC: `Copt`\n+ * @HB_SCRIPT_GLAGOLITIC: `Glag`\n+ * @HB_SCRIPT_KHAROSHTHI: `Khar`\n+ * @HB_SCRIPT_NEW_TAI_LUE: `Talu`\n+ * @HB_SCRIPT_OLD_PERSIAN: `Xpeo`\n+ * @HB_SCRIPT_SYLOTI_NAGRI: `Sylo`\n+ * @HB_SCRIPT_TIFINAGH: `Tfng`\n+ * @HB_SCRIPT_BALINESE: `Bali`\n+ * @HB_SCRIPT_CUNEIFORM: `Xsux`\n+ * @HB_SCRIPT_NKO: `Nkoo`\n+ * @HB_SCRIPT_PHAGS_PA: `Phag`\n+ * @HB_SCRIPT_PHOENICIAN: `Phnx`\n+ * @HB_SCRIPT_CARIAN: `Cari`\n+ * @HB_SCRIPT_CHAM: `Cham`\n+ * @HB_SCRIPT_KAYAH_LI: `Kali`\n+ * @HB_SCRIPT_LEPCHA: `Lepc`\n+ * @HB_SCRIPT_LYCIAN: `Lyci`\n+ * @HB_SCRIPT_LYDIAN: `Lydi`\n+ * @HB_SCRIPT_OL_CHIKI: `Olck`\n+ * @HB_SCRIPT_REJANG: `Rjng`\n+ * @HB_SCRIPT_SAURASHTRA: `Saur`\n+ * @HB_SCRIPT_SUNDANESE: `Sund`\n+ * @HB_SCRIPT_VAI: `Vaii`\n+ * @HB_SCRIPT_AVESTAN: `Avst`\n+ * @HB_SCRIPT_BAMUM: `Bamu`\n+ * @HB_SCRIPT_EGYPTIAN_HIEROGLYPHS: `Egyp`\n+ * @HB_SCRIPT_IMPERIAL_ARAMAIC: `Armi`\n+ * @HB_SCRIPT_INSCRIPTIONAL_PAHLAVI: `Phli`\n+ * @HB_SCRIPT_INSCRIPTIONAL_PARTHIAN: `Prti`\n+ * @HB_SCRIPT_JAVANESE: `Java`\n+ * @HB_SCRIPT_KAITHI: `Kthi`\n+ * @HB_SCRIPT_LISU: `Lisu`\n+ * @HB_SCRIPT_MEETEI_MAYEK: `Mtei`\n+ * @HB_SCRIPT_OLD_SOUTH_ARABIAN: `Sarb`\n+ * @HB_SCRIPT_OLD_TURKIC: `Orkh`\n+ * @HB_SCRIPT_SAMARITAN: `Samr`\n+ * @HB_SCRIPT_TAI_THAM: `Lana`\n+ * @HB_SCRIPT_TAI_VIET: `Tavt`\n+ * @HB_SCRIPT_BATAK: `Batk`\n+ * @HB_SCRIPT_BRAHMI: `Brah`\n+ * @HB_SCRIPT_MANDAIC: `Mand`\n+ * @HB_SCRIPT_CHAKMA: `Cakm`\n+ * @HB_SCRIPT_MEROITIC_CURSIVE: `Merc`\n+ * @HB_SCRIPT_MEROITIC_HIEROGLYPHS: `Mero`\n+ * @HB_SCRIPT_MIAO: `Plrd`\n+ * @HB_SCRIPT_SHARADA: `Shrd`\n+ * @HB_SCRIPT_SORA_SOMPENG: `Sora`\n+ * @HB_SCRIPT_TAKRI: `Takr`\n+ * @HB_SCRIPT_BASSA_VAH: `Bass`, Since: 0.9.30\n+ * @HB_SCRIPT_CAUCASIAN_ALBANIAN: `Aghb`, Since: 0.9.30\n+ * @HB_SCRIPT_DUPLOYAN: `Dupl`, Since: 0.9.30\n+ * @HB_SCRIPT_ELBASAN: `Elba`, Since: 0.9.30\n+ * @HB_SCRIPT_GRANTHA: `Gran`, Since: 0.9.30\n+ * @HB_SCRIPT_KHOJKI: `Khoj`, Since: 0.9.30\n+ * @HB_SCRIPT_KHUDAWADI: `Sind`, Since: 0.9.30\n+ * @HB_SCRIPT_LINEAR_A: `Lina`, Since: 0.9.30\n+ * @HB_SCRIPT_MAHAJANI: `Mahj`, Since: 0.9.30\n+ * @HB_SCRIPT_MANICHAEAN: `Mani`, Since: 0.9.30\n+ * @HB_SCRIPT_MENDE_KIKAKUI: `Mend`, Since: 0.9.30\n+ * @HB_SCRIPT_MODI: `Modi`, Since: 0.9.30\n+ * @HB_SCRIPT_MRO: `Mroo`, Since: 0.9.30\n+ * @HB_SCRIPT_NABATAEAN: `Nbat`, Since: 0.9.30\n+ * @HB_SCRIPT_OLD_NORTH_ARABIAN: `Narb`, Since: 0.9.30\n+ * @HB_SCRIPT_OLD_PERMIC: `Perm`, Since: 0.9.30\n+ * @HB_SCRIPT_PAHAWH_HMONG: `Hmng`, Since: 0.9.30\n+ * @HB_SCRIPT_PALMYRENE: `Palm`, Since: 0.9.30\n+ * @HB_SCRIPT_PAU_CIN_HAU: `Pauc`, Since: 0.9.30\n+ * @HB_SCRIPT_PSALTER_PAHLAVI: `Phlp`, Since: 0.9.30\n+ * @HB_SCRIPT_SIDDHAM: `Sidd`, Since: 0.9.30\n+ * @HB_SCRIPT_TIRHUTA: `Tirh`, Since: 0.9.30\n+ * @HB_SCRIPT_WARANG_CITI: `Wara`, Since: 0.9.30\n+ * @HB_SCRIPT_AHOM: `Ahom`, Since: 0.9.30\n+ * @HB_SCRIPT_ANATOLIAN_HIEROGLYPHS: `Hluw`, Since: 0.9.30\n+ * @HB_SCRIPT_HATRAN: `Hatr`, Since: 0.9.30\n+ * @HB_SCRIPT_MULTANI: `Mult`, Since: 0.9.30\n+ * @HB_SCRIPT_OLD_HUNGARIAN: `Hung`, Since: 0.9.30\n+ * @HB_SCRIPT_SIGNWRITING: `Sgnw`, Since: 0.9.30\n+ * @HB_SCRIPT_ADLAM: `Adlm`, Since: 1.3.0\n+ * @HB_SCRIPT_BHAIKSUKI: `Bhks`, Since: 1.3.0\n+ * @HB_SCRIPT_MARCHEN: `Marc`, Since: 1.3.0\n+ * @HB_SCRIPT_OSAGE: `Osge`, Since: 1.3.0\n+ * @HB_SCRIPT_TANGUT: `Tang`, Since: 1.3.0\n+ * @HB_SCRIPT_NEWA: `Newa`, Since: 1.3.0\n+ * @HB_SCRIPT_MASARAM_GONDI: `Gonm`, Since: 1.6.0\n+ * @HB_SCRIPT_NUSHU: `Nshu`, Since: 1.6.0\n+ * @HB_SCRIPT_SOYOMBO: `Soyo`, Since: 1.6.0\n+ * @HB_SCRIPT_ZANABAZAR_SQUARE: `Zanb`, Since: 1.6.0\n+ * @HB_SCRIPT_DOGRA: `Dogr`, Since: 1.8.0\n+ * @HB_SCRIPT_GUNJALA_GONDI: `Gong`, Since: 1.8.0\n+ * @HB_SCRIPT_HANIFI_ROHINGYA: `Rohg`, Since: 1.8.0\n+ * @HB_SCRIPT_MAKASAR: `Maka`, Since: 1.8.0\n+ * @HB_SCRIPT_MEDEFAIDRIN: `Medf`, Since: 1.8.0\n+ * @HB_SCRIPT_OLD_SOGDIAN: `Sogo`, Since: 1.8.0\n+ * @HB_SCRIPT_SOGDIAN: `Sogd`, Since: 1.8.0\n+ * @HB_SCRIPT_ELYMAIC: `Elym`, Since: 2.4.0\n+ * @HB_SCRIPT_NANDINAGARI: `Nand`, Since: 2.4.0\n+ * @HB_SCRIPT_NYIAKENG_PUACHUE_HMONG: `Hmnp`, Since: 2.4.0\n+ * @HB_SCRIPT_WANCHO: `Wcho`, Since: 2.4.0\n+ * @HB_SCRIPT_CHORASMIAN: `Chrs`, Since: 2.6.7\n+ * @HB_SCRIPT_DIVES_AKURU: `Diak`, Since: 2.6.7\n+ * @HB_SCRIPT_KHITAN_SMALL_SCRIPT: `Kits`, Since: 2.6.7\n+ * @HB_SCRIPT_YEZIDI: `Yezi`, Since: 2.6.7\n+ * @HB_SCRIPT_INVALID: No script set\n+ *\n+ * Data type for scripts. Each #hb_script_t's value is an #hb_tag_t corresponding\n+ * to the four-letter values defined by [ISO 15924](https:\/\/unicode.org\/iso15924\/).\n+ *\n+ * See also the Script (sc) property of the Unicode Character Database.\n+ *\n+ **\/\n@@ -178,1 +488,0 @@\n-\/* https:\/\/unicode.org\/iso15924\/ *\/\n@@ -180,1 +489,0 @@\n-\/* Unicode Character Database property: Script (sc) *\/\n@@ -183,115 +491,115 @@\n-  \/*1.1*\/ HB_SCRIPT_COMMON                      = HB_TAG ('Z','y','y','y'),\n-  \/*1.1*\/ HB_SCRIPT_INHERITED                   = HB_TAG ('Z','i','n','h'),\n-  \/*5.0*\/ HB_SCRIPT_UNKNOWN                     = HB_TAG ('Z','z','z','z'),\n-\n-  \/*1.1*\/ HB_SCRIPT_ARABIC                      = HB_TAG ('A','r','a','b'),\n-  \/*1.1*\/ HB_SCRIPT_ARMENIAN                    = HB_TAG ('A','r','m','n'),\n-  \/*1.1*\/ HB_SCRIPT_BENGALI                     = HB_TAG ('B','e','n','g'),\n-  \/*1.1*\/ HB_SCRIPT_CYRILLIC                    = HB_TAG ('C','y','r','l'),\n-  \/*1.1*\/ HB_SCRIPT_DEVANAGARI                  = HB_TAG ('D','e','v','a'),\n-  \/*1.1*\/ HB_SCRIPT_GEORGIAN                    = HB_TAG ('G','e','o','r'),\n-  \/*1.1*\/ HB_SCRIPT_GREEK                       = HB_TAG ('G','r','e','k'),\n-  \/*1.1*\/ HB_SCRIPT_GUJARATI                    = HB_TAG ('G','u','j','r'),\n-  \/*1.1*\/ HB_SCRIPT_GURMUKHI                    = HB_TAG ('G','u','r','u'),\n-  \/*1.1*\/ HB_SCRIPT_HANGUL                      = HB_TAG ('H','a','n','g'),\n-  \/*1.1*\/ HB_SCRIPT_HAN                         = HB_TAG ('H','a','n','i'),\n-  \/*1.1*\/ HB_SCRIPT_HEBREW                      = HB_TAG ('H','e','b','r'),\n-  \/*1.1*\/ HB_SCRIPT_HIRAGANA                    = HB_TAG ('H','i','r','a'),\n-  \/*1.1*\/ HB_SCRIPT_KANNADA                     = HB_TAG ('K','n','d','a'),\n-  \/*1.1*\/ HB_SCRIPT_KATAKANA                    = HB_TAG ('K','a','n','a'),\n-  \/*1.1*\/ HB_SCRIPT_LAO                         = HB_TAG ('L','a','o','o'),\n-  \/*1.1*\/ HB_SCRIPT_LATIN                       = HB_TAG ('L','a','t','n'),\n-  \/*1.1*\/ HB_SCRIPT_MALAYALAM                   = HB_TAG ('M','l','y','m'),\n-  \/*1.1*\/ HB_SCRIPT_ORIYA                       = HB_TAG ('O','r','y','a'),\n-  \/*1.1*\/ HB_SCRIPT_TAMIL                       = HB_TAG ('T','a','m','l'),\n-  \/*1.1*\/ HB_SCRIPT_TELUGU                      = HB_TAG ('T','e','l','u'),\n-  \/*1.1*\/ HB_SCRIPT_THAI                        = HB_TAG ('T','h','a','i'),\n-\n-  \/*2.0*\/ HB_SCRIPT_TIBETAN                     = HB_TAG ('T','i','b','t'),\n-\n-  \/*3.0*\/ HB_SCRIPT_BOPOMOFO                    = HB_TAG ('B','o','p','o'),\n-  \/*3.0*\/ HB_SCRIPT_BRAILLE                     = HB_TAG ('B','r','a','i'),\n-  \/*3.0*\/ HB_SCRIPT_CANADIAN_SYLLABICS          = HB_TAG ('C','a','n','s'),\n-  \/*3.0*\/ HB_SCRIPT_CHEROKEE                    = HB_TAG ('C','h','e','r'),\n-  \/*3.0*\/ HB_SCRIPT_ETHIOPIC                    = HB_TAG ('E','t','h','i'),\n-  \/*3.0*\/ HB_SCRIPT_KHMER                       = HB_TAG ('K','h','m','r'),\n-  \/*3.0*\/ HB_SCRIPT_MONGOLIAN                   = HB_TAG ('M','o','n','g'),\n-  \/*3.0*\/ HB_SCRIPT_MYANMAR                     = HB_TAG ('M','y','m','r'),\n-  \/*3.0*\/ HB_SCRIPT_OGHAM                       = HB_TAG ('O','g','a','m'),\n-  \/*3.0*\/ HB_SCRIPT_RUNIC                       = HB_TAG ('R','u','n','r'),\n-  \/*3.0*\/ HB_SCRIPT_SINHALA                     = HB_TAG ('S','i','n','h'),\n-  \/*3.0*\/ HB_SCRIPT_SYRIAC                      = HB_TAG ('S','y','r','c'),\n-  \/*3.0*\/ HB_SCRIPT_THAANA                      = HB_TAG ('T','h','a','a'),\n-  \/*3.0*\/ HB_SCRIPT_YI                          = HB_TAG ('Y','i','i','i'),\n-\n-  \/*3.1*\/ HB_SCRIPT_DESERET                     = HB_TAG ('D','s','r','t'),\n-  \/*3.1*\/ HB_SCRIPT_GOTHIC                      = HB_TAG ('G','o','t','h'),\n-  \/*3.1*\/ HB_SCRIPT_OLD_ITALIC                  = HB_TAG ('I','t','a','l'),\n-\n-  \/*3.2*\/ HB_SCRIPT_BUHID                       = HB_TAG ('B','u','h','d'),\n-  \/*3.2*\/ HB_SCRIPT_HANUNOO                     = HB_TAG ('H','a','n','o'),\n-  \/*3.2*\/ HB_SCRIPT_TAGALOG                     = HB_TAG ('T','g','l','g'),\n-  \/*3.2*\/ HB_SCRIPT_TAGBANWA                    = HB_TAG ('T','a','g','b'),\n-\n-  \/*4.0*\/ HB_SCRIPT_CYPRIOT                     = HB_TAG ('C','p','r','t'),\n-  \/*4.0*\/ HB_SCRIPT_LIMBU                       = HB_TAG ('L','i','m','b'),\n-  \/*4.0*\/ HB_SCRIPT_LINEAR_B                    = HB_TAG ('L','i','n','b'),\n-  \/*4.0*\/ HB_SCRIPT_OSMANYA                     = HB_TAG ('O','s','m','a'),\n-  \/*4.0*\/ HB_SCRIPT_SHAVIAN                     = HB_TAG ('S','h','a','w'),\n-  \/*4.0*\/ HB_SCRIPT_TAI_LE                      = HB_TAG ('T','a','l','e'),\n-  \/*4.0*\/ HB_SCRIPT_UGARITIC                    = HB_TAG ('U','g','a','r'),\n-\n-  \/*4.1*\/ HB_SCRIPT_BUGINESE                    = HB_TAG ('B','u','g','i'),\n-  \/*4.1*\/ HB_SCRIPT_COPTIC                      = HB_TAG ('C','o','p','t'),\n-  \/*4.1*\/ HB_SCRIPT_GLAGOLITIC                  = HB_TAG ('G','l','a','g'),\n-  \/*4.1*\/ HB_SCRIPT_KHAROSHTHI                  = HB_TAG ('K','h','a','r'),\n-  \/*4.1*\/ HB_SCRIPT_NEW_TAI_LUE                 = HB_TAG ('T','a','l','u'),\n-  \/*4.1*\/ HB_SCRIPT_OLD_PERSIAN                 = HB_TAG ('X','p','e','o'),\n-  \/*4.1*\/ HB_SCRIPT_SYLOTI_NAGRI                = HB_TAG ('S','y','l','o'),\n-  \/*4.1*\/ HB_SCRIPT_TIFINAGH                    = HB_TAG ('T','f','n','g'),\n-\n-  \/*5.0*\/ HB_SCRIPT_BALINESE                    = HB_TAG ('B','a','l','i'),\n-  \/*5.0*\/ HB_SCRIPT_CUNEIFORM                   = HB_TAG ('X','s','u','x'),\n-  \/*5.0*\/ HB_SCRIPT_NKO                         = HB_TAG ('N','k','o','o'),\n-  \/*5.0*\/ HB_SCRIPT_PHAGS_PA                    = HB_TAG ('P','h','a','g'),\n-  \/*5.0*\/ HB_SCRIPT_PHOENICIAN                  = HB_TAG ('P','h','n','x'),\n-\n-  \/*5.1*\/ HB_SCRIPT_CARIAN                      = HB_TAG ('C','a','r','i'),\n-  \/*5.1*\/ HB_SCRIPT_CHAM                        = HB_TAG ('C','h','a','m'),\n-  \/*5.1*\/ HB_SCRIPT_KAYAH_LI                    = HB_TAG ('K','a','l','i'),\n-  \/*5.1*\/ HB_SCRIPT_LEPCHA                      = HB_TAG ('L','e','p','c'),\n-  \/*5.1*\/ HB_SCRIPT_LYCIAN                      = HB_TAG ('L','y','c','i'),\n-  \/*5.1*\/ HB_SCRIPT_LYDIAN                      = HB_TAG ('L','y','d','i'),\n-  \/*5.1*\/ HB_SCRIPT_OL_CHIKI                    = HB_TAG ('O','l','c','k'),\n-  \/*5.1*\/ HB_SCRIPT_REJANG                      = HB_TAG ('R','j','n','g'),\n-  \/*5.1*\/ HB_SCRIPT_SAURASHTRA                  = HB_TAG ('S','a','u','r'),\n-  \/*5.1*\/ HB_SCRIPT_SUNDANESE                   = HB_TAG ('S','u','n','d'),\n-  \/*5.1*\/ HB_SCRIPT_VAI                         = HB_TAG ('V','a','i','i'),\n-\n-  \/*5.2*\/ HB_SCRIPT_AVESTAN                     = HB_TAG ('A','v','s','t'),\n-  \/*5.2*\/ HB_SCRIPT_BAMUM                       = HB_TAG ('B','a','m','u'),\n-  \/*5.2*\/ HB_SCRIPT_EGYPTIAN_HIEROGLYPHS        = HB_TAG ('E','g','y','p'),\n-  \/*5.2*\/ HB_SCRIPT_IMPERIAL_ARAMAIC            = HB_TAG ('A','r','m','i'),\n-  \/*5.2*\/ HB_SCRIPT_INSCRIPTIONAL_PAHLAVI       = HB_TAG ('P','h','l','i'),\n-  \/*5.2*\/ HB_SCRIPT_INSCRIPTIONAL_PARTHIAN      = HB_TAG ('P','r','t','i'),\n-  \/*5.2*\/ HB_SCRIPT_JAVANESE                    = HB_TAG ('J','a','v','a'),\n-  \/*5.2*\/ HB_SCRIPT_KAITHI                      = HB_TAG ('K','t','h','i'),\n-  \/*5.2*\/ HB_SCRIPT_LISU                        = HB_TAG ('L','i','s','u'),\n-  \/*5.2*\/ HB_SCRIPT_MEETEI_MAYEK                = HB_TAG ('M','t','e','i'),\n-  \/*5.2*\/ HB_SCRIPT_OLD_SOUTH_ARABIAN           = HB_TAG ('S','a','r','b'),\n-  \/*5.2*\/ HB_SCRIPT_OLD_TURKIC                  = HB_TAG ('O','r','k','h'),\n-  \/*5.2*\/ HB_SCRIPT_SAMARITAN                   = HB_TAG ('S','a','m','r'),\n-  \/*5.2*\/ HB_SCRIPT_TAI_THAM                    = HB_TAG ('L','a','n','a'),\n-  \/*5.2*\/ HB_SCRIPT_TAI_VIET                    = HB_TAG ('T','a','v','t'),\n-\n-  \/*6.0*\/ HB_SCRIPT_BATAK                       = HB_TAG ('B','a','t','k'),\n-  \/*6.0*\/ HB_SCRIPT_BRAHMI                      = HB_TAG ('B','r','a','h'),\n-  \/*6.0*\/ HB_SCRIPT_MANDAIC                     = HB_TAG ('M','a','n','d'),\n-\n-  \/*6.1*\/ HB_SCRIPT_CHAKMA                      = HB_TAG ('C','a','k','m'),\n-  \/*6.1*\/ HB_SCRIPT_MEROITIC_CURSIVE            = HB_TAG ('M','e','r','c'),\n-  \/*6.1*\/ HB_SCRIPT_MEROITIC_HIEROGLYPHS        = HB_TAG ('M','e','r','o'),\n-  \/*6.1*\/ HB_SCRIPT_MIAO                        = HB_TAG ('P','l','r','d'),\n-  \/*6.1*\/ HB_SCRIPT_SHARADA                     = HB_TAG ('S','h','r','d'),\n-  \/*6.1*\/ HB_SCRIPT_SORA_SOMPENG                = HB_TAG ('S','o','r','a'),\n-  \/*6.1*\/ HB_SCRIPT_TAKRI                       = HB_TAG ('T','a','k','r'),\n+  HB_SCRIPT_COMMON                      = HB_TAG ('Z','y','y','y'), \/*1.1*\/\n+  HB_SCRIPT_INHERITED                   = HB_TAG ('Z','i','n','h'), \/*1.1*\/\n+  HB_SCRIPT_UNKNOWN                     = HB_TAG ('Z','z','z','z'), \/*5.0*\/\n+\n+  HB_SCRIPT_ARABIC                      = HB_TAG ('A','r','a','b'), \/*1.1*\/\n+  HB_SCRIPT_ARMENIAN                    = HB_TAG ('A','r','m','n'), \/*1.1*\/\n+  HB_SCRIPT_BENGALI                     = HB_TAG ('B','e','n','g'), \/*1.1*\/\n+  HB_SCRIPT_CYRILLIC                    = HB_TAG ('C','y','r','l'), \/*1.1*\/\n+  HB_SCRIPT_DEVANAGARI                  = HB_TAG ('D','e','v','a'), \/*1.1*\/\n+  HB_SCRIPT_GEORGIAN                    = HB_TAG ('G','e','o','r'), \/*1.1*\/\n+  HB_SCRIPT_GREEK                       = HB_TAG ('G','r','e','k'), \/*1.1*\/\n+  HB_SCRIPT_GUJARATI                    = HB_TAG ('G','u','j','r'), \/*1.1*\/\n+  HB_SCRIPT_GURMUKHI                    = HB_TAG ('G','u','r','u'), \/*1.1*\/\n+  HB_SCRIPT_HANGUL                      = HB_TAG ('H','a','n','g'), \/*1.1*\/\n+  HB_SCRIPT_HAN                         = HB_TAG ('H','a','n','i'), \/*1.1*\/\n+  HB_SCRIPT_HEBREW                      = HB_TAG ('H','e','b','r'), \/*1.1*\/\n+  HB_SCRIPT_HIRAGANA                    = HB_TAG ('H','i','r','a'), \/*1.1*\/\n+  HB_SCRIPT_KANNADA                     = HB_TAG ('K','n','d','a'), \/*1.1*\/\n+  HB_SCRIPT_KATAKANA                    = HB_TAG ('K','a','n','a'), \/*1.1*\/\n+  HB_SCRIPT_LAO                         = HB_TAG ('L','a','o','o'), \/*1.1*\/\n+  HB_SCRIPT_LATIN                       = HB_TAG ('L','a','t','n'), \/*1.1*\/\n+  HB_SCRIPT_MALAYALAM                   = HB_TAG ('M','l','y','m'), \/*1.1*\/\n+  HB_SCRIPT_ORIYA                       = HB_TAG ('O','r','y','a'), \/*1.1*\/\n+  HB_SCRIPT_TAMIL                       = HB_TAG ('T','a','m','l'), \/*1.1*\/\n+  HB_SCRIPT_TELUGU                      = HB_TAG ('T','e','l','u'), \/*1.1*\/\n+  HB_SCRIPT_THAI                        = HB_TAG ('T','h','a','i'), \/*1.1*\/\n+\n+  HB_SCRIPT_TIBETAN                     = HB_TAG ('T','i','b','t'), \/*2.0*\/\n+\n+  HB_SCRIPT_BOPOMOFO                    = HB_TAG ('B','o','p','o'), \/*3.0*\/\n+  HB_SCRIPT_BRAILLE                     = HB_TAG ('B','r','a','i'), \/*3.0*\/\n+  HB_SCRIPT_CANADIAN_SYLLABICS          = HB_TAG ('C','a','n','s'), \/*3.0*\/\n+  HB_SCRIPT_CHEROKEE                    = HB_TAG ('C','h','e','r'), \/*3.0*\/\n+  HB_SCRIPT_ETHIOPIC                    = HB_TAG ('E','t','h','i'), \/*3.0*\/\n+  HB_SCRIPT_KHMER                       = HB_TAG ('K','h','m','r'), \/*3.0*\/\n+  HB_SCRIPT_MONGOLIAN                   = HB_TAG ('M','o','n','g'), \/*3.0*\/\n+  HB_SCRIPT_MYANMAR                     = HB_TAG ('M','y','m','r'), \/*3.0*\/\n+  HB_SCRIPT_OGHAM                       = HB_TAG ('O','g','a','m'), \/*3.0*\/\n+  HB_SCRIPT_RUNIC                       = HB_TAG ('R','u','n','r'), \/*3.0*\/\n+  HB_SCRIPT_SINHALA                     = HB_TAG ('S','i','n','h'), \/*3.0*\/\n+  HB_SCRIPT_SYRIAC                      = HB_TAG ('S','y','r','c'), \/*3.0*\/\n+  HB_SCRIPT_THAANA                      = HB_TAG ('T','h','a','a'), \/*3.0*\/\n+  HB_SCRIPT_YI                          = HB_TAG ('Y','i','i','i'), \/*3.0*\/\n+\n+  HB_SCRIPT_DESERET                     = HB_TAG ('D','s','r','t'), \/*3.1*\/\n+  HB_SCRIPT_GOTHIC                      = HB_TAG ('G','o','t','h'), \/*3.1*\/\n+  HB_SCRIPT_OLD_ITALIC                  = HB_TAG ('I','t','a','l'), \/*3.1*\/\n+\n+  HB_SCRIPT_BUHID                       = HB_TAG ('B','u','h','d'), \/*3.2*\/\n+  HB_SCRIPT_HANUNOO                     = HB_TAG ('H','a','n','o'), \/*3.2*\/\n+  HB_SCRIPT_TAGALOG                     = HB_TAG ('T','g','l','g'), \/*3.2*\/\n+  HB_SCRIPT_TAGBANWA                    = HB_TAG ('T','a','g','b'), \/*3.2*\/\n+\n+  HB_SCRIPT_CYPRIOT                     = HB_TAG ('C','p','r','t'), \/*4.0*\/\n+  HB_SCRIPT_LIMBU                       = HB_TAG ('L','i','m','b'), \/*4.0*\/\n+  HB_SCRIPT_LINEAR_B                    = HB_TAG ('L','i','n','b'), \/*4.0*\/\n+  HB_SCRIPT_OSMANYA                     = HB_TAG ('O','s','m','a'), \/*4.0*\/\n+  HB_SCRIPT_SHAVIAN                     = HB_TAG ('S','h','a','w'), \/*4.0*\/\n+  HB_SCRIPT_TAI_LE                      = HB_TAG ('T','a','l','e'), \/*4.0*\/\n+  HB_SCRIPT_UGARITIC                    = HB_TAG ('U','g','a','r'), \/*4.0*\/\n+\n+  HB_SCRIPT_BUGINESE                    = HB_TAG ('B','u','g','i'), \/*4.1*\/\n+  HB_SCRIPT_COPTIC                      = HB_TAG ('C','o','p','t'), \/*4.1*\/\n+  HB_SCRIPT_GLAGOLITIC                  = HB_TAG ('G','l','a','g'), \/*4.1*\/\n+  HB_SCRIPT_KHAROSHTHI                  = HB_TAG ('K','h','a','r'), \/*4.1*\/\n+  HB_SCRIPT_NEW_TAI_LUE                 = HB_TAG ('T','a','l','u'), \/*4.1*\/\n+  HB_SCRIPT_OLD_PERSIAN                 = HB_TAG ('X','p','e','o'), \/*4.1*\/\n+  HB_SCRIPT_SYLOTI_NAGRI                = HB_TAG ('S','y','l','o'), \/*4.1*\/\n+  HB_SCRIPT_TIFINAGH                    = HB_TAG ('T','f','n','g'), \/*4.1*\/\n+\n+  HB_SCRIPT_BALINESE                    = HB_TAG ('B','a','l','i'), \/*5.0*\/\n+  HB_SCRIPT_CUNEIFORM                   = HB_TAG ('X','s','u','x'), \/*5.0*\/\n+  HB_SCRIPT_NKO                         = HB_TAG ('N','k','o','o'), \/*5.0*\/\n+  HB_SCRIPT_PHAGS_PA                    = HB_TAG ('P','h','a','g'), \/*5.0*\/\n+  HB_SCRIPT_PHOENICIAN                  = HB_TAG ('P','h','n','x'), \/*5.0*\/\n+\n+  HB_SCRIPT_CARIAN                      = HB_TAG ('C','a','r','i'), \/*5.1*\/\n+  HB_SCRIPT_CHAM                        = HB_TAG ('C','h','a','m'), \/*5.1*\/\n+  HB_SCRIPT_KAYAH_LI                    = HB_TAG ('K','a','l','i'), \/*5.1*\/\n+  HB_SCRIPT_LEPCHA                      = HB_TAG ('L','e','p','c'), \/*5.1*\/\n+  HB_SCRIPT_LYCIAN                      = HB_TAG ('L','y','c','i'), \/*5.1*\/\n+  HB_SCRIPT_LYDIAN                      = HB_TAG ('L','y','d','i'), \/*5.1*\/\n+  HB_SCRIPT_OL_CHIKI                    = HB_TAG ('O','l','c','k'), \/*5.1*\/\n+  HB_SCRIPT_REJANG                      = HB_TAG ('R','j','n','g'), \/*5.1*\/\n+  HB_SCRIPT_SAURASHTRA                  = HB_TAG ('S','a','u','r'), \/*5.1*\/\n+  HB_SCRIPT_SUNDANESE                   = HB_TAG ('S','u','n','d'), \/*5.1*\/\n+  HB_SCRIPT_VAI                         = HB_TAG ('V','a','i','i'), \/*5.1*\/\n+\n+  HB_SCRIPT_AVESTAN                     = HB_TAG ('A','v','s','t'), \/*5.2*\/\n+  HB_SCRIPT_BAMUM                       = HB_TAG ('B','a','m','u'), \/*5.2*\/\n+  HB_SCRIPT_EGYPTIAN_HIEROGLYPHS        = HB_TAG ('E','g','y','p'), \/*5.2*\/\n+  HB_SCRIPT_IMPERIAL_ARAMAIC            = HB_TAG ('A','r','m','i'), \/*5.2*\/\n+  HB_SCRIPT_INSCRIPTIONAL_PAHLAVI       = HB_TAG ('P','h','l','i'), \/*5.2*\/\n+  HB_SCRIPT_INSCRIPTIONAL_PARTHIAN      = HB_TAG ('P','r','t','i'), \/*5.2*\/\n+  HB_SCRIPT_JAVANESE                    = HB_TAG ('J','a','v','a'), \/*5.2*\/\n+  HB_SCRIPT_KAITHI                      = HB_TAG ('K','t','h','i'), \/*5.2*\/\n+  HB_SCRIPT_LISU                        = HB_TAG ('L','i','s','u'), \/*5.2*\/\n+  HB_SCRIPT_MEETEI_MAYEK                = HB_TAG ('M','t','e','i'), \/*5.2*\/\n+  HB_SCRIPT_OLD_SOUTH_ARABIAN           = HB_TAG ('S','a','r','b'), \/*5.2*\/\n+  HB_SCRIPT_OLD_TURKIC                  = HB_TAG ('O','r','k','h'), \/*5.2*\/\n+  HB_SCRIPT_SAMARITAN                   = HB_TAG ('S','a','m','r'), \/*5.2*\/\n+  HB_SCRIPT_TAI_THAM                    = HB_TAG ('L','a','n','a'), \/*5.2*\/\n+  HB_SCRIPT_TAI_VIET                    = HB_TAG ('T','a','v','t'), \/*5.2*\/\n+\n+  HB_SCRIPT_BATAK                       = HB_TAG ('B','a','t','k'), \/*6.0*\/\n+  HB_SCRIPT_BRAHMI                      = HB_TAG ('B','r','a','h'), \/*6.0*\/\n+  HB_SCRIPT_MANDAIC                     = HB_TAG ('M','a','n','d'), \/*6.0*\/\n+\n+  HB_SCRIPT_CHAKMA                      = HB_TAG ('C','a','k','m'), \/*6.1*\/\n+  HB_SCRIPT_MEROITIC_CURSIVE            = HB_TAG ('M','e','r','c'), \/*6.1*\/\n+  HB_SCRIPT_MEROITIC_HIEROGLYPHS        = HB_TAG ('M','e','r','o'), \/*6.1*\/\n+  HB_SCRIPT_MIAO                        = HB_TAG ('P','l','r','d'), \/*6.1*\/\n+  HB_SCRIPT_SHARADA                     = HB_TAG ('S','h','r','d'), \/*6.1*\/\n+  HB_SCRIPT_SORA_SOMPENG                = HB_TAG ('S','o','r','a'), \/*6.1*\/\n+  HB_SCRIPT_TAKRI                       = HB_TAG ('T','a','k','r'), \/*6.1*\/\n@@ -302,30 +610,30 @@\n-  \/*7.0*\/ HB_SCRIPT_BASSA_VAH                   = HB_TAG ('B','a','s','s'),\n-  \/*7.0*\/ HB_SCRIPT_CAUCASIAN_ALBANIAN          = HB_TAG ('A','g','h','b'),\n-  \/*7.0*\/ HB_SCRIPT_DUPLOYAN                    = HB_TAG ('D','u','p','l'),\n-  \/*7.0*\/ HB_SCRIPT_ELBASAN                     = HB_TAG ('E','l','b','a'),\n-  \/*7.0*\/ HB_SCRIPT_GRANTHA                     = HB_TAG ('G','r','a','n'),\n-  \/*7.0*\/ HB_SCRIPT_KHOJKI                      = HB_TAG ('K','h','o','j'),\n-  \/*7.0*\/ HB_SCRIPT_KHUDAWADI                   = HB_TAG ('S','i','n','d'),\n-  \/*7.0*\/ HB_SCRIPT_LINEAR_A                    = HB_TAG ('L','i','n','a'),\n-  \/*7.0*\/ HB_SCRIPT_MAHAJANI                    = HB_TAG ('M','a','h','j'),\n-  \/*7.0*\/ HB_SCRIPT_MANICHAEAN                  = HB_TAG ('M','a','n','i'),\n-  \/*7.0*\/ HB_SCRIPT_MENDE_KIKAKUI               = HB_TAG ('M','e','n','d'),\n-  \/*7.0*\/ HB_SCRIPT_MODI                        = HB_TAG ('M','o','d','i'),\n-  \/*7.0*\/ HB_SCRIPT_MRO                         = HB_TAG ('M','r','o','o'),\n-  \/*7.0*\/ HB_SCRIPT_NABATAEAN                   = HB_TAG ('N','b','a','t'),\n-  \/*7.0*\/ HB_SCRIPT_OLD_NORTH_ARABIAN           = HB_TAG ('N','a','r','b'),\n-  \/*7.0*\/ HB_SCRIPT_OLD_PERMIC                  = HB_TAG ('P','e','r','m'),\n-  \/*7.0*\/ HB_SCRIPT_PAHAWH_HMONG                = HB_TAG ('H','m','n','g'),\n-  \/*7.0*\/ HB_SCRIPT_PALMYRENE                   = HB_TAG ('P','a','l','m'),\n-  \/*7.0*\/ HB_SCRIPT_PAU_CIN_HAU                 = HB_TAG ('P','a','u','c'),\n-  \/*7.0*\/ HB_SCRIPT_PSALTER_PAHLAVI             = HB_TAG ('P','h','l','p'),\n-  \/*7.0*\/ HB_SCRIPT_SIDDHAM                     = HB_TAG ('S','i','d','d'),\n-  \/*7.0*\/ HB_SCRIPT_TIRHUTA                     = HB_TAG ('T','i','r','h'),\n-  \/*7.0*\/ HB_SCRIPT_WARANG_CITI                 = HB_TAG ('W','a','r','a'),\n-\n-  \/*8.0*\/ HB_SCRIPT_AHOM                        = HB_TAG ('A','h','o','m'),\n-  \/*8.0*\/ HB_SCRIPT_ANATOLIAN_HIEROGLYPHS       = HB_TAG ('H','l','u','w'),\n-  \/*8.0*\/ HB_SCRIPT_HATRAN                      = HB_TAG ('H','a','t','r'),\n-  \/*8.0*\/ HB_SCRIPT_MULTANI                     = HB_TAG ('M','u','l','t'),\n-  \/*8.0*\/ HB_SCRIPT_OLD_HUNGARIAN               = HB_TAG ('H','u','n','g'),\n-  \/*8.0*\/ HB_SCRIPT_SIGNWRITING                 = HB_TAG ('S','g','n','w'),\n+  HB_SCRIPT_BASSA_VAH                   = HB_TAG ('B','a','s','s'), \/*7.0*\/\n+  HB_SCRIPT_CAUCASIAN_ALBANIAN          = HB_TAG ('A','g','h','b'), \/*7.0*\/\n+  HB_SCRIPT_DUPLOYAN                    = HB_TAG ('D','u','p','l'), \/*7.0*\/\n+  HB_SCRIPT_ELBASAN                     = HB_TAG ('E','l','b','a'), \/*7.0*\/\n+  HB_SCRIPT_GRANTHA                     = HB_TAG ('G','r','a','n'), \/*7.0*\/\n+  HB_SCRIPT_KHOJKI                      = HB_TAG ('K','h','o','j'), \/*7.0*\/\n+  HB_SCRIPT_KHUDAWADI                   = HB_TAG ('S','i','n','d'), \/*7.0*\/\n+  HB_SCRIPT_LINEAR_A                    = HB_TAG ('L','i','n','a'), \/*7.0*\/\n+  HB_SCRIPT_MAHAJANI                    = HB_TAG ('M','a','h','j'), \/*7.0*\/\n+  HB_SCRIPT_MANICHAEAN                  = HB_TAG ('M','a','n','i'), \/*7.0*\/\n+  HB_SCRIPT_MENDE_KIKAKUI               = HB_TAG ('M','e','n','d'), \/*7.0*\/\n+  HB_SCRIPT_MODI                        = HB_TAG ('M','o','d','i'), \/*7.0*\/\n+  HB_SCRIPT_MRO                         = HB_TAG ('M','r','o','o'), \/*7.0*\/\n+  HB_SCRIPT_NABATAEAN                   = HB_TAG ('N','b','a','t'), \/*7.0*\/\n+  HB_SCRIPT_OLD_NORTH_ARABIAN           = HB_TAG ('N','a','r','b'), \/*7.0*\/\n+  HB_SCRIPT_OLD_PERMIC                  = HB_TAG ('P','e','r','m'), \/*7.0*\/\n+  HB_SCRIPT_PAHAWH_HMONG                = HB_TAG ('H','m','n','g'), \/*7.0*\/\n+  HB_SCRIPT_PALMYRENE                   = HB_TAG ('P','a','l','m'), \/*7.0*\/\n+  HB_SCRIPT_PAU_CIN_HAU                 = HB_TAG ('P','a','u','c'), \/*7.0*\/\n+  HB_SCRIPT_PSALTER_PAHLAVI             = HB_TAG ('P','h','l','p'), \/*7.0*\/\n+  HB_SCRIPT_SIDDHAM                     = HB_TAG ('S','i','d','d'), \/*7.0*\/\n+  HB_SCRIPT_TIRHUTA                     = HB_TAG ('T','i','r','h'), \/*7.0*\/\n+  HB_SCRIPT_WARANG_CITI                 = HB_TAG ('W','a','r','a'), \/*7.0*\/\n+\n+  HB_SCRIPT_AHOM                        = HB_TAG ('A','h','o','m'), \/*8.0*\/\n+  HB_SCRIPT_ANATOLIAN_HIEROGLYPHS       = HB_TAG ('H','l','u','w'), \/*8.0*\/\n+  HB_SCRIPT_HATRAN                      = HB_TAG ('H','a','t','r'), \/*8.0*\/\n+  HB_SCRIPT_MULTANI                     = HB_TAG ('M','u','l','t'), \/*8.0*\/\n+  HB_SCRIPT_OLD_HUNGARIAN               = HB_TAG ('H','u','n','g'), \/*8.0*\/\n+  HB_SCRIPT_SIGNWRITING                 = HB_TAG ('S','g','n','w'), \/*8.0*\/\n@@ -336,6 +644,6 @@\n-  \/*9.0*\/ HB_SCRIPT_ADLAM                       = HB_TAG ('A','d','l','m'),\n-  \/*9.0*\/ HB_SCRIPT_BHAIKSUKI                   = HB_TAG ('B','h','k','s'),\n-  \/*9.0*\/ HB_SCRIPT_MARCHEN                     = HB_TAG ('M','a','r','c'),\n-  \/*9.0*\/ HB_SCRIPT_OSAGE                       = HB_TAG ('O','s','g','e'),\n-  \/*9.0*\/ HB_SCRIPT_TANGUT                      = HB_TAG ('T','a','n','g'),\n-  \/*9.0*\/ HB_SCRIPT_NEWA                        = HB_TAG ('N','e','w','a'),\n+  HB_SCRIPT_ADLAM                       = HB_TAG ('A','d','l','m'), \/*9.0*\/\n+  HB_SCRIPT_BHAIKSUKI                   = HB_TAG ('B','h','k','s'), \/*9.0*\/\n+  HB_SCRIPT_MARCHEN                     = HB_TAG ('M','a','r','c'), \/*9.0*\/\n+  HB_SCRIPT_OSAGE                       = HB_TAG ('O','s','g','e'), \/*9.0*\/\n+  HB_SCRIPT_TANGUT                      = HB_TAG ('T','a','n','g'), \/*9.0*\/\n+  HB_SCRIPT_NEWA                        = HB_TAG ('N','e','w','a'), \/*9.0*\/\n@@ -346,4 +654,4 @@\n-  \/*10.0*\/HB_SCRIPT_MASARAM_GONDI               = HB_TAG ('G','o','n','m'),\n-  \/*10.0*\/HB_SCRIPT_NUSHU                       = HB_TAG ('N','s','h','u'),\n-  \/*10.0*\/HB_SCRIPT_SOYOMBO                     = HB_TAG ('S','o','y','o'),\n-  \/*10.0*\/HB_SCRIPT_ZANABAZAR_SQUARE            = HB_TAG ('Z','a','n','b'),\n+  HB_SCRIPT_MASARAM_GONDI               = HB_TAG ('G','o','n','m'), \/*10.0*\/\n+  HB_SCRIPT_NUSHU                       = HB_TAG ('N','s','h','u'), \/*10.0*\/\n+  HB_SCRIPT_SOYOMBO                     = HB_TAG ('S','o','y','o'), \/*10.0*\/\n+  HB_SCRIPT_ZANABAZAR_SQUARE            = HB_TAG ('Z','a','n','b'), \/*10.0*\/\n@@ -354,7 +662,7 @@\n-  \/*11.0*\/HB_SCRIPT_DOGRA                       = HB_TAG ('D','o','g','r'),\n-  \/*11.0*\/HB_SCRIPT_GUNJALA_GONDI               = HB_TAG ('G','o','n','g'),\n-  \/*11.0*\/HB_SCRIPT_HANIFI_ROHINGYA             = HB_TAG ('R','o','h','g'),\n-  \/*11.0*\/HB_SCRIPT_MAKASAR                     = HB_TAG ('M','a','k','a'),\n-  \/*11.0*\/HB_SCRIPT_MEDEFAIDRIN                 = HB_TAG ('M','e','d','f'),\n-  \/*11.0*\/HB_SCRIPT_OLD_SOGDIAN                 = HB_TAG ('S','o','g','o'),\n-  \/*11.0*\/HB_SCRIPT_SOGDIAN                     = HB_TAG ('S','o','g','d'),\n+  HB_SCRIPT_DOGRA                       = HB_TAG ('D','o','g','r'), \/*11.0*\/\n+  HB_SCRIPT_GUNJALA_GONDI               = HB_TAG ('G','o','n','g'), \/*11.0*\/\n+  HB_SCRIPT_HANIFI_ROHINGYA             = HB_TAG ('R','o','h','g'), \/*11.0*\/\n+  HB_SCRIPT_MAKASAR                     = HB_TAG ('M','a','k','a'), \/*11.0*\/\n+  HB_SCRIPT_MEDEFAIDRIN                 = HB_TAG ('M','e','d','f'), \/*11.0*\/\n+  HB_SCRIPT_OLD_SOGDIAN                 = HB_TAG ('S','o','g','o'), \/*11.0*\/\n+  HB_SCRIPT_SOGDIAN                     = HB_TAG ('S','o','g','d'), \/*11.0*\/\n@@ -365,4 +673,4 @@\n-  \/*12.0*\/HB_SCRIPT_ELYMAIC                     = HB_TAG ('E','l','y','m'),\n-  \/*12.0*\/HB_SCRIPT_NANDINAGARI                 = HB_TAG ('N','a','n','d'),\n-  \/*12.0*\/HB_SCRIPT_NYIAKENG_PUACHUE_HMONG      = HB_TAG ('H','m','n','p'),\n-  \/*12.0*\/HB_SCRIPT_WANCHO                      = HB_TAG ('W','c','h','o'),\n+  HB_SCRIPT_ELYMAIC                     = HB_TAG ('E','l','y','m'), \/*12.0*\/\n+  HB_SCRIPT_NANDINAGARI                 = HB_TAG ('N','a','n','d'), \/*12.0*\/\n+  HB_SCRIPT_NYIAKENG_PUACHUE_HMONG      = HB_TAG ('H','m','n','p'), \/*12.0*\/\n+  HB_SCRIPT_WANCHO                      = HB_TAG ('W','c','h','o'), \/*12.0*\/\n@@ -373,4 +681,4 @@\n-  \/*13.0*\/HB_SCRIPT_CHORASMIAN                  = HB_TAG ('C','h','r','s'),\n-  \/*13.0*\/HB_SCRIPT_DIVES_AKURU                 = HB_TAG ('D','i','a','k'),\n-  \/*13.0*\/HB_SCRIPT_KHITAN_SMALL_SCRIPT         = HB_TAG ('K','i','t','s'),\n-  \/*13.0*\/HB_SCRIPT_YEZIDI                      = HB_TAG ('Y','e','z','i'),\n+  HB_SCRIPT_CHORASMIAN                  = HB_TAG ('C','h','r','s'), \/*13.0*\/\n+  HB_SCRIPT_DIVES_AKURU                 = HB_TAG ('D','i','a','k'), \/*13.0*\/\n+  HB_SCRIPT_KHITAN_SMALL_SCRIPT         = HB_TAG ('K','i','t','s'), \/*13.0*\/\n+  HB_SCRIPT_YEZIDI                      = HB_TAG ('Y','e','z','i'), \/*13.0*\/\n@@ -379,1 +687,3 @@\n-  HB_SCRIPT_INVALID                             = HB_TAG_NONE,\n+  HB_SCRIPT_INVALID                     = HB_TAG_NONE,\n+\n+  \/*< private >*\/\n@@ -413,0 +723,6 @@\n+\/**\n+ * hb_user_data_key_t:\n+ *\n+ * Data structure for holding user-data keys.\n+ *\n+ **\/\n@@ -418,0 +734,7 @@\n+\/**\n+ * hb_destroy_func_t:\n+ * @user_data: the data to be destroyed\n+ *\n+ * A virtual method for destroy user-data callbacks.\n+ *\n+ *\/\n@@ -424,1 +747,4 @@\n- * HB_FEATURE_GLOBAL_START\n+ * HB_FEATURE_GLOBAL_START:\n+ *\n+ * Special setting for #hb_feature_t.start to apply the feature from the start\n+ * of the buffer.\n@@ -429,0 +755,1 @@\n+\n@@ -430,1 +757,4 @@\n- * HB_FEATURE_GLOBAL_END\n+ * HB_FEATURE_GLOBAL_END:\n+ *\n+ * Special setting for #hb_feature_t.end to apply the feature from to the end\n+ * of the buffer.\n@@ -438,4 +768,4 @@\n- * @tag: a feature tag\n- * @value: 0 disables the feature, non-zero (usually 1) enables the feature.\n- * For features implemented as lookup type 3 (like 'salt') the @value is a one\n- * based index into the alternates.\n+ * @tag: The #hb_tag_t tag of the feature\n+ * @value: The value of the feature. 0 disables the feature, non-zero (usually\n+ * 1) enables the feature.  For features implemented as lookup type 3 (like\n+ * 'salt') the @value is a one based index into the alternates.\n@@ -448,1 +778,1 @@\n- * Setting start to @HB_FEATURE_GLOBAL_START and end to @HB_FEATURE_GLOBAL_END\n+ * Setting start to #HB_FEATURE_GLOBAL_START and end to #HB_FEATURE_GLOBAL_END\n@@ -468,0 +798,6 @@\n+ * @tag: The #hb_tag_t tag of the variation-axis name\n+ * @value: The value of the variation axis\n+ *\n+ * Data type for holding variation data. Registered OpenType\n+ * variation-axis tags are listed in\n+ * [OpenType Axis Tag Registry](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/dvaraxisreg).\n@@ -487,1 +823,2 @@\n- * Data type for holding color values.\n+ * Data type for holding color values. Colors are eight bits per\n+ * channel RGB plus alpha transparency.\n@@ -493,0 +830,11 @@\n+\/**\n+ * HB_COLOR:\n+ * @b: blue channel value\n+ * @g: green channel value\n+ * @r: red channel value\n+ * @a: alpha channel value\n+ *\n+ * Constructs an #hb_color_t from four integers.\n+ *\n+ * Since: 2.1.0\n+ *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-common.h","additions":532,"deletions":184,"binary":false,"changes":716,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-#include <math.h>\n@@ -193,0 +192,2 @@\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n@@ -194,0 +195,1 @@\n+#pragma GCC diagnostic pop\n@@ -349,1 +351,1 @@\n-  if (fabs (CTFontGetSize ((CTFontRef) data) - (CGFloat) font->ptem) > .5)\n+  if (fabs (CTFontGetSize ((CTFontRef) data) - (CGFloat) font->ptem) > (CGFloat) .5)\n@@ -405,1 +407,1 @@\n- * hb_coretext_face_get_ct_font:\n+ * hb_coretext_font_get_ct_font:\n@@ -861,1 +863,1 @@\n-    double advances_so_far = 0;\n+    CGFloat advances_so_far = 0;\n@@ -883,1 +885,1 @@\n-      double run_advance = CTRunGetTypographicBounds (run, range_all, nullptr, nullptr, nullptr);\n+      CGFloat run_advance = CTRunGetTypographicBounds (run, range_all, nullptr, nullptr, nullptr);\n@@ -886,1 +888,1 @@\n-      DEBUG_MSG (CORETEXT, run, \"Run advance: %g\", run_advance);\n+      DEBUG_MSG (CORETEXT, run, \"Run advance: %g\", (double) run_advance);\n@@ -1065,1 +1067,1 @@\n-            double advance;\n+            CGFloat advance;\n@@ -1081,1 +1083,1 @@\n-            double advance;\n+            CGFloat advance;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-coretext.cc","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -56,0 +56,7 @@\n+\/**\n+ * HB_SCRIPT_CANADIAN_ABORIGINAL:\n+ *\n+ * Use #HB_SCRIPT_CANADIAN_SYLLABICS instead:\n+ *\n+ * Deprecated: 0.9.20\n+ *\/\n@@ -58,0 +65,7 @@\n+\/**\n+ * HB_BUFFER_FLAGS_DEFAULT:\n+ *\n+ * Use #HB_BUFFER_FLAG_DEFAULT instead.\n+ *\n+ * Deprecated: 0.9.20\n+ *\/\n@@ -59,0 +73,7 @@\n+\/**\n+ * HB_BUFFER_SERIALIZE_FLAGS_DEFAULT:\n+ *\n+ * Use #HB_BUFFER_SERIALIZE_FLAG_DEFAULT instead.\n+ *\n+ * Deprecated: 0.9.20\n+ *\/\n@@ -61,0 +82,18 @@\n+\/**\n+ * hb_font_get_glyph_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @unicode: The Unicode code point to query\n+ * @variation_selector: The  variation-selector code point to query\n+ * @glyph: (out): The glyph ID retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the glyph ID for a specified Unicode code point\n+ * font, with an optional variation selector.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ * Deprecated: 1.2.3\n+ *\n+ **\/\n@@ -76,0 +115,5 @@\n+ * @ufuncs: A Unicode-functions structure\n+ * @unicode: The code point to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n@@ -85,5 +129,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: a Unicode-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -91,0 +134,1 @@\n+ * Sets the implementation function for #hb_unicode_eastasian_width_func_t.\n@@ -102,0 +146,4 @@\n+ * @ufuncs: a Unicode-function structure\n+ * @unicode: The code point to query\n+ *\n+ * Don't use. Not used by HarfBuzz.\n@@ -115,1 +163,1 @@\n- * @decomposed: address of codepoint array (of length %HB_UNICODE_MAX_DECOMPOSITION_LEN) to write decomposition into\n+ * @decomposed: address of codepoint array (of length #HB_UNICODE_MAX_DECOMPOSITION_LEN) to write decomposition into\n@@ -123,1 +171,1 @@\n- * The Unicode standard guarantees that a buffer of length %HB_UNICODE_MAX_DECOMPOSITION_LEN codepoints will always be sufficient for any\n+ * The Unicode standard guarantees that a buffer of length #HB_UNICODE_MAX_DECOMPOSITION_LEN codepoints will always be sufficient for any\n@@ -147,4 +195,6 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n+ *\n+ * Sets the implementation function for #hb_unicode_decompose_compatibility_func_t.\n@@ -168,0 +218,9 @@\n+\/**\n+ * hb_font_get_glyph_v_kerning_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the kerning-adjustment value for a glyph-pair in\n+ * the specified font, for vertical text segments.\n+ *\n+ **\/\n@@ -172,5 +231,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -178,0 +236,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_v_kerning_func_t.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-deprecated.h","additions":76,"deletions":17,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-  hb_dispatch_context_t () : debug_depth (0) {}\n@@ -57,1 +56,1 @@\n-  unsigned debug_depth;\n+  unsigned debug_depth = 0;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-dispatch.hh","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-draw.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,2 +44,4 @@\n- * Font face is objects represent a single face in a font family.\n- * More exactly, a font face represents a single face in a binary font file.\n+ * A font face is an object that represents a single face from within a\n+ * font family.\n+ *\n+ * More precisely, a font face represents a single face in a binary font file.\n@@ -55,1 +57,1 @@\n- * Get number of faces in a blob.\n+ * Fetches the number of faces in a blob.\n@@ -90,2 +92,2 @@\n-  HB_ATOMIC_INT_INIT (1000), \/* upem *\/\n-  HB_ATOMIC_INT_INIT (0),    \/* num_glyphs *\/\n+  1000, \/* upem *\/\n+  0,    \/* num_glyphs *\/\n@@ -99,3 +101,3 @@\n- * @reference_table_func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n+ * @reference_table_func: (closure user_data) (destroy destroy) (scope notified): Table-referencing function\n+ * @user_data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n@@ -103,0 +105,4 @@\n+ * Variant of hb_face_create(), built for those cases where it is more\n+ * convenient to provide data for individual tables instead of the whole font\n+ * data. With the caveat that hb_face_get_table_tags() does not currently work\n+ * with faces created this way.\n@@ -104,0 +110,2 @@\n+ * Creates a new face object from the specified @user_data and @reference_table_func,\n+ * with the @destroy callback.\n@@ -105,1 +113,1 @@\n- * Return value: (transfer full)\n+ * Return value: (transfer full): The new face object\n@@ -185,3 +193,2 @@\n- * @blob:\n- * @index:\n- *\n+ * @blob: #hb_blob_t to work upon\n+ * @index: The index of the face within @blob\n@@ -189,0 +196,4 @@\n+ * Constructs a new face object from the specified blob and\n+ * a face index into that blob. This is used for blobs of\n+ * file formats such as Dfont and TTC that can contain more\n+ * than one face.\n@@ -190,1 +201,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The new face object\n@@ -225,0 +236,1 @@\n+ * Fetches the singleton empty face object.\n@@ -226,2 +238,1 @@\n- *\n- * Return value: (transfer full)\n+ * Return value: (transfer full): The empty face object\n@@ -240,1 +251,1 @@\n- * @face: a face.\n+ * @face: A face object\n@@ -242,0 +253,1 @@\n+ * Increases the reference count on a face object.\n@@ -243,2 +255,1 @@\n- *\n- * Return value:\n+ * Return value: The @face object\n@@ -256,2 +267,1 @@\n- * @face: a face.\n- *\n+ * @face: A face object\n@@ -259,0 +269,3 @@\n+ * Decreases the reference count on a face object. When the\n+ * reference count reaches zero, the face is destroyed,\n+ * freeing all memory.\n@@ -286,5 +299,5 @@\n- * @face: a face.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @face: A face object\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -292,0 +305,1 @@\n+ * Attaches a user-data key\/data pair to the given face object.\n@@ -293,2 +307,1 @@\n- *\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -310,3 +323,2 @@\n- * @face: a face.\n- * @key:\n- *\n+ * @face: A face object\n+ * @key: The user-data key to query\n@@ -314,0 +326,2 @@\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified face object.\n@@ -315,1 +329,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -328,2 +342,1 @@\n- * @face: a face.\n- *\n+ * @face: A face object\n@@ -331,0 +344,1 @@\n+ * Makes the given face object immutable.\n@@ -345,2 +359,1 @@\n- * @face: a face.\n- *\n+ * @face: A face object\n@@ -348,0 +361,1 @@\n+ * Tests whether the given face object is immutable.\n@@ -349,1 +363,1 @@\n- * Return value:\n+ * Return value: %true is @face is immutable, %false otherwise\n@@ -362,2 +376,2 @@\n- * @face: a face.\n- * @tag:\n+ * @face: A face object\n+ * @tag: The #hb_tag_t of the table to query\n@@ -365,0 +379,2 @@\n+ * Fetches a reference to the specified table within\n+ * the specified face.\n@@ -366,2 +382,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): A pointer to the @tag table within @face\n@@ -383,2 +398,1 @@\n- * @face: a face.\n- *\n+ * @face: A face object\n@@ -386,0 +400,3 @@\n+ * Fetches a pointer to the binary blob that contains the\n+ * specified face. Returns an empty blob if referencing face data is not\n+ * possible.\n@@ -387,1 +404,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): A pointer to the blob for @face\n@@ -399,2 +416,2 @@\n- * @face: a face.\n- * @index:\n+ * @face: A face object\n+ * @index: The index to assign\n@@ -402,0 +419,2 @@\n+ * Assigns the specified face-index to @face. Fails if the\n+ * face is immutable.\n@@ -403,0 +422,1 @@\n+ * <note>Note: face indices within a collection are zero-based.<\/note>\n@@ -418,1 +438,1 @@\n- * @face: a face.\n+ * @face: A face object\n@@ -420,0 +440,1 @@\n+ * Fetches the face-index corresponding to the given face.\n@@ -421,0 +442,1 @@\n+ * <note>Note: face indices within a collection are zero-based.<\/note>\n@@ -422,1 +444,1 @@\n- * Return value:\n+ * Return value: The index of @face.\n@@ -434,3 +456,2 @@\n- * @face: a face.\n- * @upem:\n- *\n+ * @face: A face object\n+ * @upem: The units-per-em value to assign\n@@ -438,0 +459,1 @@\n+ * Sets the units-per-em (upem) for a face object to the specified value.\n@@ -453,1 +475,1 @@\n- * @face: a face.\n+ * @face: A face object\n@@ -455,0 +477,1 @@\n+ * Fetches the units-per-em (upem) value of the specified face object.\n@@ -456,2 +479,1 @@\n- *\n- * Return value:\n+ * Return value: The upem value of @face\n@@ -469,3 +491,2 @@\n- * @face: a face.\n- * @glyph_count:\n- *\n+ * @face: A face object\n+ * @glyph_count: The glyph-count value to assign\n@@ -473,0 +494,1 @@\n+ * Sets the glyph count for a face object to the specified value.\n@@ -488,1 +510,1 @@\n- * @face: a face.\n+ * @face: A face object\n@@ -490,0 +512,1 @@\n+ * Fetches the glyph-count value of the specified face object.\n@@ -491,2 +514,1 @@\n- *\n- * Return value:\n+ * Return value: The glyph-count value of @face\n@@ -504,4 +526,5 @@\n- * @face: a face.\n- * @start_offset: index of first tag to return.\n- * @table_count: input length of @table_tags array, output number of items written.\n- * @table_tags: array to write tags into.\n+ * @face: A face object\n+ * @start_offset: The index of first table tag to retrieve\n+ * @table_count: (inout): Input = the maximum number of table tags to return;\n+ *                Output = the actual number of table tags returned (may be zero)\n+ * @table_tags: (out) (array length=table_count): The array of table tags found\n@@ -509,1 +532,2 @@\n- * Retrieves table tags for a face, if possible.\n+ * Fetches a list of all table tags for a face, if possible. The list returned will\n+ * begin at the offset provided\n@@ -511,1 +535,1 @@\n- * Return value: total number of tables, or 0 if not possible to list.\n+ * Return value: Total number of tables, or zero if it is not possible to list\n@@ -545,2 +569,5 @@\n- * @face: font face.\n- * @out: set to add Unicode characters covered by @face to.\n+ * @face: A face object\n+ * @out: The set to add Unicode characters to\n+ *\n+ * Collects all of the Unicode characters covered by @face and adds\n+ * them to the #hb_set_t set @out.\n@@ -558,3 +585,2 @@\n- * @face: font face.\n- * @out: set to add Variation Selector characters covered by @face to.\n- *\n+ * @face: A face object\n+ * @out: The set to add Variation Selector characters to\n@@ -562,0 +588,2 @@\n+ * Collects all Unicode \"Variation Selector\" characters covered by @face and adds\n+ * them to the #hb_set_t set @out.\n@@ -573,3 +601,3 @@\n- * @face: font face.\n- * @out: set to add Unicode characters for @variation_selector covered by @face to.\n- *\n+ * @face: A face object\n+ * @variation_selector: The Variation Selector to query\n+ * @out: The set to add Unicode characters to\n@@ -577,0 +605,2 @@\n+ * Collects all Unicode characters for @variation_selector covered by @face and adds\n+ * them to the #hb_set_t set @out.\n@@ -711,0 +741,3 @@\n+ * @face: A face object created with hb_face_builder_create()\n+ * @tag: The #hb_tag_t of the table to add\n+ * @blob: The blob containing the table data to add\n@@ -726,1 +759,1 @@\n-  if (data->tables.in_error())\n+  if (unlikely (data->tables.in_error()))\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-face.cc","additions":107,"deletions":74,"binary":false,"changes":181,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -49,0 +49,6 @@\n+\/**\n+ * hb_face_t:\n+ *\n+ * Data type for holding font faces.\n+ *\n+ **\/\n@@ -55,0 +61,13 @@\n+\/**\n+ * hb_reference_table_func_t:\n+ * @face: an #hb_face_t to reference table for\n+ * @tag: the tag of the table to reference\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * Callback function for hb_face_create_for_tables().\n+ *\n+ * Return value: (transfer full): A pointer to the @tag table within @face\n+ *\n+ * Since: 0.9.2\n+ *\/\n+\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-face.h","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  HB_PURE_FUNC unsigned int get_upem () const\n+  unsigned int get_upem () const\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-face.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,4 +46,14 @@\n- * Font objects represent a font face at a certain size and other\n- * parameters (pixels per EM, points per EM, variation settings.)\n- * Fonts are created from font faces, and are used as input to\n- * hb_shape() among other things.\n+ * Functions for working with font objects.\n+ *\n+ * A font object represents a font face at a specific size and with\n+ * certain other parameters (pixels-per-em, points-per-em, variation\n+ * settings) specified. Font objects are created from font face\n+ * objects, and are used as input to hb_shape(), among other things.\n+ *\n+ * Client programs can optionally pass in their own functions that\n+ * implement the basic, lower-level queries of font objects. This set\n+ * of font functions is defined by the virtual methods in\n+ * #hb_font_funcs_t.\n+ *\n+ * HarfBuzz provides a built-in set of lightweight default\n+ * functions for each method in #hb_font_funcs_t.\n@@ -58,2 +68,2 @@\n-hb_font_get_font_h_extents_nil (hb_font_t *font HB_UNUSED,\n-                                void *font_data HB_UNUSED,\n+hb_font_get_font_h_extents_nil (hb_font_t         *font HB_UNUSED,\n+                                void              *font_data HB_UNUSED,\n@@ -61,1 +71,1 @@\n-                                void *user_data HB_UNUSED)\n+                                void              *user_data HB_UNUSED)\n@@ -66,0 +76,1 @@\n+\n@@ -67,2 +78,2 @@\n-hb_font_get_font_h_extents_default (hb_font_t *font,\n-                                    void *font_data HB_UNUSED,\n+hb_font_get_font_h_extents_default (hb_font_t         *font,\n+                                    void              *font_data HB_UNUSED,\n@@ -70,1 +81,1 @@\n-                                    void *user_data HB_UNUSED)\n+                                    void              *user_data HB_UNUSED)\n@@ -82,2 +93,2 @@\n-hb_font_get_font_v_extents_nil (hb_font_t *font HB_UNUSED,\n-                                void *font_data HB_UNUSED,\n+hb_font_get_font_v_extents_nil (hb_font_t         *font HB_UNUSED,\n+                                void              *font_data HB_UNUSED,\n@@ -85,1 +96,1 @@\n-                                void *user_data HB_UNUSED)\n+                                void              *user_data HB_UNUSED)\n@@ -90,0 +101,1 @@\n+\n@@ -91,2 +103,2 @@\n-hb_font_get_font_v_extents_default (hb_font_t *font,\n-                                    void *font_data HB_UNUSED,\n+hb_font_get_font_v_extents_default (hb_font_t         *font,\n+                                    void              *font_data HB_UNUSED,\n@@ -94,1 +106,1 @@\n-                                    void *user_data HB_UNUSED)\n+                                    void              *user_data HB_UNUSED)\n@@ -106,3 +118,3 @@\n-hb_font_get_nominal_glyph_nil (hb_font_t *font HB_UNUSED,\n-                               void *font_data HB_UNUSED,\n-                               hb_codepoint_t unicode HB_UNUSED,\n+hb_font_get_nominal_glyph_nil (hb_font_t      *font HB_UNUSED,\n+                               void           *font_data HB_UNUSED,\n+                               hb_codepoint_t  unicode HB_UNUSED,\n@@ -110,1 +122,1 @@\n-                               void *user_data HB_UNUSED)\n+                               void           *user_data HB_UNUSED)\n@@ -115,0 +127,1 @@\n+\n@@ -116,3 +129,3 @@\n-hb_font_get_nominal_glyph_default (hb_font_t *font,\n-                                   void *font_data HB_UNUSED,\n-                                   hb_codepoint_t unicode,\n+hb_font_get_nominal_glyph_default (hb_font_t      *font,\n+                                   void           *font_data HB_UNUSED,\n+                                   hb_codepoint_t  unicode,\n@@ -120,1 +133,1 @@\n-                                   void *user_data HB_UNUSED)\n+                                   void           *user_data HB_UNUSED)\n@@ -130,0 +143,1 @@\n+\n@@ -131,3 +145,3 @@\n-hb_font_get_nominal_glyphs_default (hb_font_t *font,\n-                                    void *font_data HB_UNUSED,\n-                                    unsigned int count,\n+hb_font_get_nominal_glyphs_default (hb_font_t            *font,\n+                                    void                 *font_data HB_UNUSED,\n+                                    unsigned int          count,\n@@ -135,4 +149,4 @@\n-                                    unsigned int unicode_stride,\n-                                    hb_codepoint_t *first_glyph,\n-                                    unsigned int glyph_stride,\n-                                    void *user_data HB_UNUSED)\n+                                    unsigned int          unicode_stride,\n+                                    hb_codepoint_t       *first_glyph,\n+                                    unsigned int          glyph_stride,\n+                                    void                 *user_data HB_UNUSED)\n@@ -159,4 +173,4 @@\n-hb_font_get_variation_glyph_nil (hb_font_t *font HB_UNUSED,\n-                                 void *font_data HB_UNUSED,\n-                                 hb_codepoint_t unicode HB_UNUSED,\n-                                 hb_codepoint_t variation_selector HB_UNUSED,\n+hb_font_get_variation_glyph_nil (hb_font_t      *font HB_UNUSED,\n+                                 void           *font_data HB_UNUSED,\n+                                 hb_codepoint_t  unicode HB_UNUSED,\n+                                 hb_codepoint_t  variation_selector HB_UNUSED,\n@@ -164,1 +178,1 @@\n-                                 void *user_data HB_UNUSED)\n+                                 void           *user_data HB_UNUSED)\n@@ -169,0 +183,1 @@\n+\n@@ -170,4 +185,4 @@\n-hb_font_get_variation_glyph_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t unicode,\n-                                     hb_codepoint_t variation_selector,\n+hb_font_get_variation_glyph_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  unicode,\n+                                     hb_codepoint_t  variation_selector,\n@@ -175,1 +190,1 @@\n-                                     void *user_data HB_UNUSED)\n+                                     void           *user_data HB_UNUSED)\n@@ -182,4 +197,4 @@\n-hb_font_get_glyph_h_advance_nil (hb_font_t *font,\n-                                 void *font_data HB_UNUSED,\n-                                 hb_codepoint_t glyph HB_UNUSED,\n-                                 void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_advance_nil (hb_font_t      *font,\n+                                 void           *font_data HB_UNUSED,\n+                                 hb_codepoint_t  glyph HB_UNUSED,\n+                                 void           *user_data HB_UNUSED)\n@@ -189,0 +204,1 @@\n+\n@@ -190,4 +206,4 @@\n-hb_font_get_glyph_h_advance_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t glyph,\n-                                     void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_advance_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  glyph,\n+                                     void           *user_data HB_UNUSED)\n@@ -205,4 +221,4 @@\n-hb_font_get_glyph_v_advance_nil (hb_font_t *font,\n-                                 void *font_data HB_UNUSED,\n-                                 hb_codepoint_t glyph HB_UNUSED,\n-                                 void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_advance_nil (hb_font_t      *font,\n+                                 void           *font_data HB_UNUSED,\n+                                 hb_codepoint_t  glyph HB_UNUSED,\n+                                 void           *user_data HB_UNUSED)\n@@ -213,0 +229,1 @@\n+\n@@ -214,4 +231,4 @@\n-hb_font_get_glyph_v_advance_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t glyph,\n-                                     void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_advance_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  glyph,\n+                                     void           *user_data HB_UNUSED)\n@@ -229,0 +246,1 @@\n+\n@@ -230,3 +248,3 @@\n-hb_font_get_glyph_h_advances_default (hb_font_t* font,\n-                                      void* font_data HB_UNUSED,\n-                                      unsigned int count,\n+hb_font_get_glyph_h_advances_default (hb_font_t*            font,\n+                                      void*                 font_data HB_UNUSED,\n+                                      unsigned int          count,\n@@ -234,4 +252,4 @@\n-                                      unsigned int glyph_stride,\n-                                      hb_position_t *first_advance,\n-                                      unsigned int advance_stride,\n-                                      void *user_data HB_UNUSED)\n+                                      unsigned int          glyph_stride,\n+                                      hb_position_t        *first_advance,\n+                                      unsigned int          advance_stride,\n+                                      void                 *user_data HB_UNUSED)\n@@ -262,3 +280,3 @@\n-hb_font_get_glyph_v_advances_default (hb_font_t* font,\n-                                      void* font_data HB_UNUSED,\n-                                      unsigned int count,\n+hb_font_get_glyph_v_advances_default (hb_font_t*            font,\n+                                      void*                 font_data HB_UNUSED,\n+                                      unsigned int          count,\n@@ -266,4 +284,4 @@\n-                                      unsigned int glyph_stride,\n-                                      hb_position_t *first_advance,\n-                                      unsigned int advance_stride,\n-                                      void *user_data HB_UNUSED)\n+                                      unsigned int          glyph_stride,\n+                                      hb_position_t        *first_advance,\n+                                      unsigned int          advance_stride,\n+                                      void                 *user_data HB_UNUSED)\n@@ -293,6 +311,6 @@\n-hb_font_get_glyph_h_origin_nil (hb_font_t *font HB_UNUSED,\n-                                void *font_data HB_UNUSED,\n-                                hb_codepoint_t glyph HB_UNUSED,\n-                                hb_position_t *x,\n-                                hb_position_t *y,\n-                                void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_origin_nil (hb_font_t      *font HB_UNUSED,\n+                                void           *font_data HB_UNUSED,\n+                                hb_codepoint_t  glyph HB_UNUSED,\n+                                hb_position_t  *x,\n+                                hb_position_t  *y,\n+                                void           *user_data HB_UNUSED)\n@@ -303,0 +321,1 @@\n+\n@@ -304,6 +323,6 @@\n-hb_font_get_glyph_h_origin_default (hb_font_t *font,\n-                                    void *font_data HB_UNUSED,\n-                                    hb_codepoint_t glyph,\n-                                    hb_position_t *x,\n-                                    hb_position_t *y,\n-                                    void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_origin_default (hb_font_t      *font,\n+                                    void           *font_data HB_UNUSED,\n+                                    hb_codepoint_t  glyph,\n+                                    hb_position_t  *x,\n+                                    hb_position_t  *y,\n+                                    void           *user_data HB_UNUSED)\n@@ -318,6 +337,6 @@\n-hb_font_get_glyph_v_origin_nil (hb_font_t *font HB_UNUSED,\n-                                void *font_data HB_UNUSED,\n-                                hb_codepoint_t glyph HB_UNUSED,\n-                                hb_position_t *x,\n-                                hb_position_t *y,\n-                                void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_origin_nil (hb_font_t      *font HB_UNUSED,\n+                                void           *font_data HB_UNUSED,\n+                                hb_codepoint_t  glyph HB_UNUSED,\n+                                hb_position_t  *x,\n+                                hb_position_t  *y,\n+                                void           *user_data HB_UNUSED)\n@@ -328,0 +347,1 @@\n+\n@@ -329,6 +349,6 @@\n-hb_font_get_glyph_v_origin_default (hb_font_t *font,\n-                                    void *font_data HB_UNUSED,\n-                                    hb_codepoint_t glyph,\n-                                    hb_position_t *x,\n-                                    hb_position_t *y,\n-                                    void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_origin_default (hb_font_t      *font,\n+                                    void           *font_data HB_UNUSED,\n+                                    hb_codepoint_t  glyph,\n+                                    hb_position_t  *x,\n+                                    hb_position_t  *y,\n+                                    void           *user_data HB_UNUSED)\n@@ -343,5 +363,5 @@\n-hb_font_get_glyph_h_kerning_nil (hb_font_t *font HB_UNUSED,\n-                                 void *font_data HB_UNUSED,\n-                                 hb_codepoint_t left_glyph HB_UNUSED,\n-                                 hb_codepoint_t right_glyph HB_UNUSED,\n-                                 void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_kerning_nil (hb_font_t      *font HB_UNUSED,\n+                                 void           *font_data HB_UNUSED,\n+                                 hb_codepoint_t  left_glyph HB_UNUSED,\n+                                 hb_codepoint_t  right_glyph HB_UNUSED,\n+                                 void           *user_data HB_UNUSED)\n@@ -351,0 +371,1 @@\n+\n@@ -352,5 +373,5 @@\n-hb_font_get_glyph_h_kerning_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t left_glyph,\n-                                     hb_codepoint_t right_glyph,\n-                                     void *user_data HB_UNUSED)\n+hb_font_get_glyph_h_kerning_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  left_glyph,\n+                                     hb_codepoint_t  right_glyph,\n+                                     void           *user_data HB_UNUSED)\n@@ -363,5 +384,5 @@\n-hb_font_get_glyph_v_kerning_nil (hb_font_t *font HB_UNUSED,\n-                                 void *font_data HB_UNUSED,\n-                                 hb_codepoint_t top_glyph HB_UNUSED,\n-                                 hb_codepoint_t bottom_glyph HB_UNUSED,\n-                                 void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_kerning_nil (hb_font_t      *font HB_UNUSED,\n+                                 void           *font_data HB_UNUSED,\n+                                 hb_codepoint_t  top_glyph HB_UNUSED,\n+                                 hb_codepoint_t  bottom_glyph HB_UNUSED,\n+                                 void           *user_data HB_UNUSED)\n@@ -371,0 +392,1 @@\n+\n@@ -372,5 +394,5 @@\n-hb_font_get_glyph_v_kerning_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t top_glyph,\n-                                     hb_codepoint_t bottom_glyph,\n-                                     void *user_data HB_UNUSED)\n+hb_font_get_glyph_v_kerning_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  top_glyph,\n+                                     hb_codepoint_t  bottom_glyph,\n+                                     void           *user_data HB_UNUSED)\n@@ -383,3 +405,3 @@\n-hb_font_get_glyph_extents_nil (hb_font_t *font HB_UNUSED,\n-                               void *font_data HB_UNUSED,\n-                               hb_codepoint_t glyph HB_UNUSED,\n+hb_font_get_glyph_extents_nil (hb_font_t          *font HB_UNUSED,\n+                               void               *font_data HB_UNUSED,\n+                               hb_codepoint_t      glyph HB_UNUSED,\n@@ -387,1 +409,1 @@\n-                               void *user_data HB_UNUSED)\n+                               void               *user_data HB_UNUSED)\n@@ -392,0 +414,1 @@\n+\n@@ -393,3 +416,3 @@\n-hb_font_get_glyph_extents_default (hb_font_t *font,\n-                                   void *font_data HB_UNUSED,\n-                                   hb_codepoint_t glyph,\n+hb_font_get_glyph_extents_default (hb_font_t          *font,\n+                                   void               *font_data HB_UNUSED,\n+                                   hb_codepoint_t      glyph,\n@@ -397,1 +420,1 @@\n-                                   void *user_data HB_UNUSED)\n+                                   void               *user_data HB_UNUSED)\n@@ -408,7 +431,7 @@\n-hb_font_get_glyph_contour_point_nil (hb_font_t *font HB_UNUSED,\n-                                     void *font_data HB_UNUSED,\n-                                     hb_codepoint_t glyph HB_UNUSED,\n-                                     unsigned int point_index HB_UNUSED,\n-                                     hb_position_t *x,\n-                                     hb_position_t *y,\n-                                     void *user_data HB_UNUSED)\n+hb_font_get_glyph_contour_point_nil (hb_font_t      *font HB_UNUSED,\n+                                     void           *font_data HB_UNUSED,\n+                                     hb_codepoint_t  glyph HB_UNUSED,\n+                                     unsigned int    point_index HB_UNUSED,\n+                                     hb_position_t  *x,\n+                                     hb_position_t  *y,\n+                                     void           *user_data HB_UNUSED)\n@@ -419,0 +442,1 @@\n+\n@@ -420,7 +444,7 @@\n-hb_font_get_glyph_contour_point_default (hb_font_t *font,\n-                                         void *font_data HB_UNUSED,\n-                                         hb_codepoint_t glyph,\n-                                         unsigned int point_index,\n-                                         hb_position_t *x,\n-                                         hb_position_t *y,\n-                                         void *user_data HB_UNUSED)\n+hb_font_get_glyph_contour_point_default (hb_font_t      *font,\n+                                         void           *font_data HB_UNUSED,\n+                                         hb_codepoint_t  glyph,\n+                                         unsigned int    point_index,\n+                                         hb_position_t  *x,\n+                                         hb_position_t  *y,\n+                                         void           *user_data HB_UNUSED)\n@@ -435,5 +459,6 @@\n-hb_font_get_glyph_name_nil (hb_font_t *font HB_UNUSED,\n-                            void *font_data HB_UNUSED,\n-                            hb_codepoint_t glyph HB_UNUSED,\n-                            char *name, unsigned int size,\n-                            void *user_data HB_UNUSED)\n+hb_font_get_glyph_name_nil (hb_font_t      *font HB_UNUSED,\n+                            void           *font_data HB_UNUSED,\n+                            hb_codepoint_t  glyph HB_UNUSED,\n+                            char           *name,\n+                            unsigned int    size,\n+                            void           *user_data HB_UNUSED)\n@@ -444,0 +469,1 @@\n+\n@@ -445,5 +471,6 @@\n-hb_font_get_glyph_name_default (hb_font_t *font,\n-                                void *font_data HB_UNUSED,\n-                                hb_codepoint_t glyph,\n-                                char *name, unsigned int size,\n-                                void *user_data HB_UNUSED)\n+hb_font_get_glyph_name_default (hb_font_t      *font,\n+                                void           *font_data HB_UNUSED,\n+                                hb_codepoint_t  glyph,\n+                                char           *name,\n+                                unsigned int    size,\n+                                void           *user_data HB_UNUSED)\n@@ -455,4 +482,4 @@\n-hb_font_get_glyph_from_name_nil (hb_font_t *font HB_UNUSED,\n-                                 void *font_data HB_UNUSED,\n-                                 const char *name HB_UNUSED,\n-                                 int len HB_UNUSED, \/* -1 means nul-terminated *\/\n+hb_font_get_glyph_from_name_nil (hb_font_t      *font HB_UNUSED,\n+                                 void           *font_data HB_UNUSED,\n+                                 const char     *name HB_UNUSED,\n+                                 int             len HB_UNUSED, \/* -1 means nul-terminated *\/\n@@ -460,1 +487,1 @@\n-                                 void *user_data HB_UNUSED)\n+                                 void           *user_data HB_UNUSED)\n@@ -465,0 +492,1 @@\n+\n@@ -466,3 +494,4 @@\n-hb_font_get_glyph_from_name_default (hb_font_t *font,\n-                                     void *font_data HB_UNUSED,\n-                                     const char *name, int len, \/* -1 means nul-terminated *\/\n+hb_font_get_glyph_from_name_default (hb_font_t      *font,\n+                                     void           *font_data HB_UNUSED,\n+                                     const char     *name,\n+                                     int             len, \/* -1 means nul-terminated *\/\n@@ -470,1 +499,1 @@\n-                                     void *user_data HB_UNUSED)\n+                                     void           *user_data HB_UNUSED)\n@@ -524,0 +553,1 @@\n+ * Creates a new #hb_font_funcs_t structure of font functions.\n@@ -525,2 +555,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The font-functions structure\n@@ -546,0 +575,1 @@\n+ * Fetches an empty font-functions structure.\n@@ -547,2 +577,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The font-functions structure\n@@ -560,1 +589,1 @@\n- * @ffuncs: font functions.\n+ * @ffuncs: The font-functions structure\n@@ -562,0 +591,1 @@\n+ * Increases the reference count on a font-functions structure.\n@@ -563,2 +593,1 @@\n- *\n- * Return value:\n+ * Return value: The font-functions structure\n@@ -576,2 +605,1 @@\n- * @ffuncs: font functions.\n- *\n+ * @ffuncs: The font-functions structure\n@@ -579,0 +607,3 @@\n+ * Decreases the reference count on a font-functions structure. When\n+ * the reference count reaches zero, the font-functions structure is\n+ * destroyed, freeing all memory.\n@@ -597,5 +628,5 @@\n- * @ffuncs: font functions.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @ffuncs: The font-functions structure\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data set\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -603,0 +634,1 @@\n+ * Attaches a user-data key\/data pair to the specified font-functions structure.\n@@ -604,2 +636,1 @@\n- *\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -613,1 +644,1 @@\n-                             hb_destroy_func_t   destroy,\n+                             hb_destroy_func_t   destroy \/* May be NULL. *\/,\n@@ -621,3 +652,2 @@\n- * @ffuncs: font functions.\n- * @key:\n- *\n+ * @ffuncs: The font-functions structure\n+ * @key: The user-data key to query\n@@ -625,0 +655,2 @@\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified font-functions structure.\n@@ -626,1 +658,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -640,2 +672,1 @@\n- * @ffuncs: font functions.\n- *\n+ * @ffuncs: The font-functions structure\n@@ -643,0 +674,1 @@\n+ * Makes a font-functions structure immutable.\n@@ -657,2 +689,1 @@\n- * @ffuncs: font functions.\n- *\n+ * @ffuncs: The font-functions structure\n@@ -660,0 +691,1 @@\n+ * Tests whether a font-functions structure is immutable.\n@@ -661,1 +693,1 @@\n- * Return value:\n+ * Return value: %true if @ffuncs is immutable, %false otherwise\n@@ -721,2 +753,2 @@\n- * @font: a font.\n- * @extents: (out):\n+ * @font: #hb_font_t to work upon\n+ * @extents: (out): The font extents retrieved\n@@ -724,0 +756,2 @@\n+ * Fetches the extents for a specified font, for horizontal\n+ * text segments.\n@@ -725,2 +759,1 @@\n- *\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -731,1 +764,1 @@\n-hb_font_get_h_extents (hb_font_t *font,\n+hb_font_get_h_extents (hb_font_t         *font,\n@@ -739,2 +772,2 @@\n- * @font: a font.\n- * @extents: (out):\n+ * @font: #hb_font_t to work upon\n+ * @extents: (out): The font extents retrieved\n@@ -742,0 +775,2 @@\n+ * Fetches the extents for a specified font, for vertical\n+ * text segments.\n@@ -743,2 +778,1 @@\n- *\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -749,1 +783,1 @@\n-hb_font_get_v_extents (hb_font_t *font,\n+hb_font_get_v_extents (hb_font_t         *font,\n@@ -757,4 +791,4 @@\n- * @font: a font.\n- * @unicode:\n- * @variation_selector:\n- * @glyph: (out):\n+ * @font: #hb_font_t to work upon\n+ * @unicode: The Unicode code point to query\n+ * @variation_selector: A variation-selector code point\n+ * @glyph: (out): The glyph ID retrieved\n@@ -762,0 +796,2 @@\n+ * Fetches the glyph ID for a Unicode code point in the specified\n+ * font, with an optional variation selector.\n@@ -763,0 +799,2 @@\n+ * If @variation_selector is 0, calls hb_font_get_nominal_glyph();\n+ * otherwise calls hb_font_get_variation_glyph().\n@@ -764,1 +802,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -769,2 +807,3 @@\n-hb_font_get_glyph (hb_font_t *font,\n-                   hb_codepoint_t unicode, hb_codepoint_t variation_selector,\n+hb_font_get_glyph (hb_font_t      *font,\n+                   hb_codepoint_t  unicode,\n+                   hb_codepoint_t  variation_selector,\n@@ -780,3 +819,3 @@\n- * @font: a font.\n- * @unicode:\n- * @glyph: (out):\n+ * @font: #hb_font_t to work upon\n+ * @unicode: The Unicode code point to query\n+ * @glyph: (out): The glyph ID retrieved\n@@ -784,0 +823,2 @@\n+ * Fetches the nominal glyph ID for a Unicode code point in the\n+ * specified font.\n@@ -785,0 +826,3 @@\n+ * This version of the function should not be used to fetch glyph IDs\n+ * for code points modified by variation selectors. For variation-selector\n+ * support, user hb_font_get_variation_glyph() or use hb_font_get_glyph().\n@@ -786,1 +830,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -791,2 +835,2 @@\n-hb_font_get_nominal_glyph (hb_font_t *font,\n-                           hb_codepoint_t unicode,\n+hb_font_get_nominal_glyph (hb_font_t      *font,\n+                           hb_codepoint_t  unicode,\n@@ -800,2 +844,6 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n+ * @count: number of code points to query\n+ * @first_unicode: The first Unicode code point to query\n+ * @unicode_stride: The stride between successive code points\n+ * @first_glyph: (out): The first glyph ID retrieved\n+ * @glyph_stride: The stride between successive glyph IDs\n@@ -803,0 +851,2 @@\n+ * Fetches the nominal glyph IDs for a sequence of Unicode code points. Glyph\n+ * IDs must be returned in a #hb_codepoint_t output parameter.\n@@ -804,1 +854,1 @@\n- * Return value:\n+ * Return value: the number of code points processed\n@@ -823,5 +873,4 @@\n- * @font: a font.\n- * @unicode:\n- * @variation_selector:\n- * @glyph: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @unicode: The Unicode code point to query\n+ * @variation_selector: The  variation-selector code point to query\n+ * @glyph: (out): The glyph ID retrieved\n@@ -829,0 +878,3 @@\n+ * Fetches the glyph ID for a Unicode code point when followed by\n+ * by the specified variation-selector code point, in the specified\n+ * font.\n@@ -830,1 +882,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -835,2 +887,3 @@\n-hb_font_get_variation_glyph (hb_font_t *font,\n-                             hb_codepoint_t unicode, hb_codepoint_t variation_selector,\n+hb_font_get_variation_glyph (hb_font_t      *font,\n+                             hb_codepoint_t  unicode,\n+                             hb_codepoint_t  variation_selector,\n@@ -844,3 +897,2 @@\n- * @font: a font.\n- * @glyph:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n@@ -848,0 +900,2 @@\n+ * Fetches the advance for a glyph ID in the specified font,\n+ * for horizontal text segments.\n@@ -849,1 +903,1 @@\n- * Return value:\n+ * Return value: The advance of @glyph within @font\n@@ -854,2 +908,2 @@\n-hb_font_get_glyph_h_advance (hb_font_t *font,\n-                             hb_codepoint_t glyph)\n+hb_font_get_glyph_h_advance (hb_font_t      *font,\n+                             hb_codepoint_t  glyph)\n@@ -862,3 +916,2 @@\n- * @font: a font.\n- * @glyph:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n@@ -866,0 +919,2 @@\n+ * Fetches the advance for a glyph ID in the specified font,\n+ * for vertical text segments.\n@@ -867,1 +922,1 @@\n- * Return value:\n+ * Return value: The advance of @glyph within @font\n@@ -872,2 +927,2 @@\n-hb_font_get_glyph_v_advance (hb_font_t *font,\n-                             hb_codepoint_t glyph)\n+hb_font_get_glyph_v_advance (hb_font_t      *font,\n+                             hb_codepoint_t  glyph)\n@@ -880,2 +935,6 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n+ * @count: The number of glyph IDs in the sequence queried\n+ * @first_glyph: The first glyph ID to query\n+ * @glyph_stride: The stride between successive glyph IDs\n+ * @first_advance: (out): The first advance retrieved\n+ * @advance_stride: The stride between successive advances\n@@ -883,0 +942,2 @@\n+ * Fetches the advances for a sequence of glyph IDs in the specified\n+ * font, for horizontal text segments.\n@@ -887,2 +948,2 @@\n-hb_font_get_glyph_h_advances (hb_font_t* font,\n-                              unsigned int count,\n+hb_font_get_glyph_h_advances (hb_font_t*            font,\n+                              unsigned int          count,\n@@ -890,3 +951,3 @@\n-                              unsigned glyph_stride,\n-                              hb_position_t *first_advance,\n-                              unsigned advance_stride)\n+                              unsigned              glyph_stride,\n+                              hb_position_t        *first_advance,\n+                              unsigned              advance_stride)\n@@ -898,2 +959,6 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n+ * @count: The number of glyph IDs in the sequence queried\n+ * @first_glyph: The first glyph ID to query\n+ * @glyph_stride: The stride between successive glyph IDs\n+ * @first_advance: (out): The first advance retrieved\n+ * @advance_stride: (out): The stride between successive advances\n@@ -901,0 +966,2 @@\n+ * Fetches the advances for a sequence of glyph IDs in the specified\n+ * font, for vertical text segments.\n@@ -905,2 +972,2 @@\n-hb_font_get_glyph_v_advances (hb_font_t* font,\n-                              unsigned int count,\n+hb_font_get_glyph_v_advances (hb_font_t*            font,\n+                              unsigned int          count,\n@@ -908,3 +975,3 @@\n-                              unsigned glyph_stride,\n-                              hb_position_t *first_advance,\n-                              unsigned advance_stride)\n+                              unsigned              glyph_stride,\n+                              hb_position_t        *first_advance,\n+                              unsigned              advance_stride)\n@@ -917,4 +984,4 @@\n- * @font: a font.\n- * @glyph:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @x: (out): The X coordinate of the origin\n+ * @y: (out): The Y coordinate of the origin\n@@ -922,0 +989,2 @@\n+ * Fetches the (X,Y) coordinates of the origin for a glyph ID\n+ * in the specified font, for horizontal text segments.\n@@ -923,2 +992,1 @@\n- *\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -929,3 +997,4 @@\n-hb_font_get_glyph_h_origin (hb_font_t *font,\n-                            hb_codepoint_t glyph,\n-                            hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_h_origin (hb_font_t      *font,\n+                            hb_codepoint_t  glyph,\n+                            hb_position_t  *x,\n+                            hb_position_t  *y)\n@@ -938,5 +1007,4 @@\n- * @font: a font.\n- * @glyph:\n- * @x: (out):\n- * @y: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @x: (out): The X coordinate of the origin\n+ * @y: (out): The Y coordinate of the origin\n@@ -944,0 +1012,2 @@\n+ * Fetches the (X,Y) coordinates of the origin for a glyph ID\n+ * in the specified font, for vertical text segments.\n@@ -945,1 +1015,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -950,3 +1020,4 @@\n-hb_font_get_glyph_v_origin (hb_font_t *font,\n-                            hb_codepoint_t glyph,\n-                            hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_v_origin (hb_font_t      *font,\n+                            hb_codepoint_t  glyph,\n+                            hb_position_t  *x,\n+                            hb_position_t  *y)\n@@ -959,3 +1030,3 @@\n- * @font: a font.\n- * @left_glyph:\n- * @right_glyph:\n+ * @font: #hb_font_t to work upon\n+ * @left_glyph: The glyph ID of the left glyph in the glyph pair\n+ * @right_glyph: The glyph ID of the right glyph in the glyph pair\n@@ -963,0 +1034,2 @@\n+ * Fetches the kerning-adjustment value for a glyph-pair in\n+ * the specified font, for horizontal text segments.\n@@ -964,0 +1037,2 @@\n+ * <note>It handles legacy kerning only (as returned by the corresponding\n+ * #hb_font_funcs_t function).<\/note>\n@@ -965,1 +1040,1 @@\n- * Return value:\n+ * Return value: The kerning adjustment value\n@@ -970,2 +1045,3 @@\n-hb_font_get_glyph_h_kerning (hb_font_t *font,\n-                             hb_codepoint_t left_glyph, hb_codepoint_t right_glyph)\n+hb_font_get_glyph_h_kerning (hb_font_t      *font,\n+                             hb_codepoint_t  left_glyph,\n+                             hb_codepoint_t  right_glyph)\n@@ -979,3 +1055,3 @@\n- * @font: a font.\n- * @top_glyph:\n- * @bottom_glyph:\n+ * @font: #hb_font_t to work upon\n+ * @top_glyph: The glyph ID of the top glyph in the glyph pair\n+ * @bottom_glyph: The glyph ID of the bottom glyph in the glyph pair\n@@ -983,0 +1059,2 @@\n+ * Fetches the kerning-adjustment value for a glyph-pair in\n+ * the specified font, for vertical text segments.\n@@ -984,0 +1062,2 @@\n+ * <note>It handles legacy kerning only (as returned by the corresponding\n+ * #hb_font_funcs_t function).<\/note>\n@@ -985,1 +1065,1 @@\n- * Return value:\n+ * Return value: The kerning adjustment value\n@@ -991,2 +1071,3 @@\n-hb_font_get_glyph_v_kerning (hb_font_t *font,\n-                             hb_codepoint_t top_glyph, hb_codepoint_t bottom_glyph)\n+hb_font_get_glyph_v_kerning (hb_font_t      *font,\n+                             hb_codepoint_t  top_glyph,\n+                             hb_codepoint_t  bottom_glyph)\n@@ -1000,4 +1081,3 @@\n- * @font: a font.\n- * @glyph:\n- * @extents: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @extents: (out): The #hb_glyph_extents_t retrieved\n@@ -1005,0 +1085,2 @@\n+ * Fetches the #hb_glyph_extents_t data for a glyph ID\n+ * in the specified font.\n@@ -1006,1 +1088,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1011,2 +1093,2 @@\n-hb_font_get_glyph_extents (hb_font_t *font,\n-                           hb_codepoint_t glyph,\n+hb_font_get_glyph_extents (hb_font_t          *font,\n+                           hb_codepoint_t      glyph,\n@@ -1020,6 +1102,5 @@\n- * @font: a font.\n- * @glyph:\n- * @point_index:\n- * @x: (out):\n- * @y: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @point_index: The contour-point index to query\n+ * @x: (out): The X value retrieved for the contour point\n+ * @y: (out): The Y value retrieved for the contour point\n@@ -1027,0 +1108,2 @@\n+ * Fetches the (x,y) coordinates of a specified contour-point index\n+ * in the specified glyph, within the specified font.\n@@ -1028,1 +1111,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1033,3 +1116,5 @@\n-hb_font_get_glyph_contour_point (hb_font_t *font,\n-                                 hb_codepoint_t glyph, unsigned int point_index,\n-                                 hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_contour_point (hb_font_t      *font,\n+                                 hb_codepoint_t  glyph,\n+                                 unsigned int    point_index,\n+                                 hb_position_t  *x,\n+                                 hb_position_t  *y)\n@@ -1042,4 +1127,4 @@\n- * @font: a font.\n- * @glyph:\n- * @name: (array length=size):\n- * @size:\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @name: (out) (array length=size): Name string retrieved for the glyph ID\n+ * @size: Length of the glyph-name string retrieved\n@@ -1047,0 +1132,1 @@\n+ * Fetches the glyph-name string for a glyph ID in the specified @font.\n@@ -1048,2 +1134,1 @@\n- *\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1054,3 +1139,4 @@\n-hb_font_get_glyph_name (hb_font_t *font,\n-                        hb_codepoint_t glyph,\n-                        char *name, unsigned int size)\n+hb_font_get_glyph_name (hb_font_t      *font,\n+                        hb_codepoint_t  glyph,\n+                        char           *name,\n+                        unsigned int    size)\n@@ -1063,4 +1149,4 @@\n- * @font: a font.\n- * @name: (array length=len):\n- * @len:\n- * @glyph: (out):\n+ * @font: #hb_font_t to work upon\n+ * @name: (array length=len): The name string to query\n+ * @len: The length of the name queried\n+ * @glyph: (out): The glyph ID retrieved\n@@ -1068,0 +1154,1 @@\n+ * Fetches the glyph ID that corresponds to a name string in the specified @font.\n@@ -1069,0 +1156,1 @@\n+ * <note>Note: @len == -1 means the name string is null-terminated.<\/note>\n@@ -1070,1 +1158,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1075,2 +1163,3 @@\n-hb_font_get_glyph_from_name (hb_font_t *font,\n-                             const char *name, int len, \/* -1 means nul-terminated *\/\n+hb_font_get_glyph_from_name (hb_font_t      *font,\n+                             const char     *name,\n+                             int             len, \/* -1 means nul-terminated *\/\n@@ -1087,3 +1176,3 @@\n- * @font: a font.\n- * @direction:\n- * @extents: (out):\n+ * @font: #hb_font_t to work upon\n+ * @direction: The direction of the text segment\n+ * @extents: (out): The #hb_font_extents_t retrieved\n@@ -1091,0 +1180,2 @@\n+ * Fetches the extents for a font in a text segment of the\n+ * specified direction.\n@@ -1092,0 +1183,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1096,2 +1189,2 @@\n-hb_font_get_extents_for_direction (hb_font_t *font,\n-                                   hb_direction_t direction,\n+hb_font_get_extents_for_direction (hb_font_t         *font,\n+                                   hb_direction_t     direction,\n@@ -1104,5 +1197,5 @@\n- * @font: a font.\n- * @glyph:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @direction: The direction of the text segment\n+ * @x: (out): The horizontal advance retrieved\n+ * @y: (out):  The vertical advance retrieved\n@@ -1110,0 +1203,2 @@\n+ * Fetches the advance for a glyph ID from the specified font,\n+ * in a text segment of the specified direction.\n@@ -1111,0 +1206,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1115,4 +1212,5 @@\n-hb_font_get_glyph_advance_for_direction (hb_font_t *font,\n-                                         hb_codepoint_t glyph,\n-                                         hb_direction_t direction,\n-                                         hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_advance_for_direction (hb_font_t      *font,\n+                                         hb_codepoint_t  glyph,\n+                                         hb_direction_t  direction,\n+                                         hb_position_t  *x,\n+                                         hb_position_t  *y)\n@@ -1124,2 +1222,7 @@\n- * @font: a font.\n- * @direction:\n+ * @font: #hb_font_t to work upon\n+ * @direction: The direction of the text segment\n+ * @count: The number of glyph IDs in the sequence queried\n+ * @first_glyph: The first glyph ID to query\n+ * @glyph_stride: The stride between successive glyph IDs\n+ * @first_advance: (out): The first advance retrieved\n+ * @advance_stride: (out): The stride between successive advances\n@@ -1127,0 +1230,2 @@\n+ * Fetches the advances for a sequence of glyph IDs in the specified\n+ * font, in a text segment of the specified direction.\n@@ -1128,0 +1233,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1132,3 +1239,3 @@\n-hb_font_get_glyph_advances_for_direction (hb_font_t* font,\n-                                          hb_direction_t direction,\n-                                          unsigned int count,\n+hb_font_get_glyph_advances_for_direction (hb_font_t*            font,\n+                                          hb_direction_t        direction,\n+                                          unsigned int          count,\n@@ -1136,3 +1243,3 @@\n-                                          unsigned glyph_stride,\n-                                          hb_position_t *first_advance,\n-                                          unsigned advance_stride)\n+                                          unsigned              glyph_stride,\n+                                          hb_position_t        *first_advance,\n+                                          unsigned              advance_stride)\n@@ -1145,5 +1252,5 @@\n- * @font: a font.\n- * @glyph:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @direction: The direction of the text segment\n+ * @x: (out): The X coordinate retrieved for the origin\n+ * @y: (out): The Y coordinate retrieved for the origin\n@@ -1151,0 +1258,2 @@\n+ * Fetches the (X,Y) coordinates of the origin for a glyph in\n+ * the specified font.\n@@ -1152,0 +1261,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1156,4 +1267,5 @@\n-hb_font_get_glyph_origin_for_direction (hb_font_t *font,\n-                                        hb_codepoint_t glyph,\n-                                        hb_direction_t direction,\n-                                        hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_origin_for_direction (hb_font_t      *font,\n+                                        hb_codepoint_t  glyph,\n+                                        hb_direction_t  direction,\n+                                        hb_position_t  *x,\n+                                        hb_position_t  *y)\n@@ -1166,5 +1278,7 @@\n- * @font: a font.\n- * @glyph:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @direction: The direction of the text segment\n+ * @x: (inout): Input = The original X coordinate\n+ *     Output = The X coordinate plus the X-coordinate of the origin\n+ * @y: (inout): Input = The original Y coordinate\n+ *     Output = The Y coordinate plus the Y-coordinate of the origin\n@@ -1172,0 +1286,2 @@\n+ * Adds the origin coordinates to an (X,Y) point coordinate, in\n+ * the specified glyph ID in the specified font.\n@@ -1173,0 +1289,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1177,4 +1295,5 @@\n-hb_font_add_glyph_origin_for_direction (hb_font_t *font,\n-                                        hb_codepoint_t glyph,\n-                                        hb_direction_t direction,\n-                                        hb_position_t *x, hb_position_t *y)\n+hb_font_add_glyph_origin_for_direction (hb_font_t      *font,\n+                                        hb_codepoint_t  glyph,\n+                                        hb_direction_t  direction,\n+                                        hb_position_t  *x,\n+                                        hb_position_t  *y)\n@@ -1187,5 +1306,7 @@\n- * @font: a font.\n- * @glyph:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @direction: The direction of the text segment\n+ * @x: (inout): Input = The original X coordinate\n+ *     Output = The X coordinate minus the X-coordinate of the origin\n+ * @y: (inout): Input = The original Y coordinate\n+ *     Output = The Y coordinate minus the Y-coordinate of the origin\n@@ -1193,0 +1314,2 @@\n+ * Subtracts the origin coordinates from an (X,Y) point coordinate,\n+ * in the specified glyph ID in the specified font.\n@@ -1194,0 +1317,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1198,4 +1323,5 @@\n-hb_font_subtract_glyph_origin_for_direction (hb_font_t *font,\n-                                             hb_codepoint_t glyph,\n-                                             hb_direction_t direction,\n-                                             hb_position_t *x, hb_position_t *y)\n+hb_font_subtract_glyph_origin_for_direction (hb_font_t      *font,\n+                                             hb_codepoint_t  glyph,\n+                                             hb_direction_t  direction,\n+                                             hb_position_t  *x,\n+                                             hb_position_t  *y)\n@@ -1208,6 +1334,6 @@\n- * @font: a font.\n- * @first_glyph:\n- * @second_glyph:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @first_glyph: The glyph ID of the first glyph in the glyph pair to query\n+ * @second_glyph: The glyph ID of the second glyph in the glyph pair to query\n+ * @direction: The direction of the text segment\n+ * @x: (out): The horizontal kerning-adjustment value retrieved\n+ * @y: (out): The vertical kerning-adjustment value retrieved\n@@ -1215,0 +1341,1 @@\n+ * Fetches the kerning-adjustment value for a glyph-pair in the specified font.\n@@ -1216,0 +1343,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1220,4 +1349,6 @@\n-hb_font_get_glyph_kerning_for_direction (hb_font_t *font,\n-                                         hb_codepoint_t first_glyph, hb_codepoint_t second_glyph,\n-                                         hb_direction_t direction,\n-                                         hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_kerning_for_direction (hb_font_t      *font,\n+                                         hb_codepoint_t  first_glyph,\n+                                         hb_codepoint_t  second_glyph,\n+                                         hb_direction_t  direction,\n+                                         hb_position_t  *x,\n+                                         hb_position_t  *y)\n@@ -1230,4 +1361,4 @@\n- * @font: a font.\n- * @glyph:\n- * @direction:\n- * @extents: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @direction: The direction of the text segment\n+ * @extents: (out): The #hb_glyph_extents_t retrieved\n@@ -1235,0 +1366,3 @@\n+ * Fetches the #hb_glyph_extents_t data for a glyph ID\n+ * in the specified font, with respect to the origin in\n+ * a text segment in the specified direction.\n@@ -1236,0 +1370,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1237,1 +1373,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1242,3 +1378,3 @@\n-hb_font_get_glyph_extents_for_origin (hb_font_t *font,\n-                                      hb_codepoint_t glyph,\n-                                      hb_direction_t direction,\n+hb_font_get_glyph_extents_for_origin (hb_font_t          *font,\n+                                      hb_codepoint_t      glyph,\n+                                      hb_direction_t      direction,\n@@ -1252,6 +1388,6 @@\n- * @font: a font.\n- * @glyph:\n- * @point_index:\n- * @direction:\n- * @x: (out):\n- * @y: (out):\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @point_index: The contour-point index to query\n+ * @direction: The direction of the text segment\n+ * @x: (out): The X value retrieved for the contour point\n+ * @y: (out): The Y value retrieved for the contour point\n@@ -1259,0 +1395,3 @@\n+ * Fetches the (X,Y) coordinates of a specified contour-point index\n+ * in the specified glyph ID in the specified font, with respect\n+ * to the origin in a text segment in the specified direction.\n@@ -1260,0 +1399,2 @@\n+ * Calls the appropriate direction-specific variant (horizontal\n+ * or vertical) depending on the value of @direction.\n@@ -1261,1 +1402,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1266,4 +1407,6 @@\n-hb_font_get_glyph_contour_point_for_origin (hb_font_t *font,\n-                                            hb_codepoint_t glyph, unsigned int point_index,\n-                                            hb_direction_t direction,\n-                                            hb_position_t *x, hb_position_t *y)\n+hb_font_get_glyph_contour_point_for_origin (hb_font_t      *font,\n+                                            hb_codepoint_t  glyph,\n+                                            unsigned int    point_index,\n+                                            hb_direction_t  direction,\n+                                            hb_position_t  *x,\n+                                            hb_position_t  *y)\n@@ -1274,1 +1417,0 @@\n-\/* Generates gidDDD if glyph has no name. *\/\n@@ -1277,4 +1419,4 @@\n- * @font: a font.\n- * @glyph:\n- * @s: (array length=size):\n- * @size:\n+ * @font: #hb_font_t to work upon\n+ * @glyph: The glyph ID to query\n+ * @s: (out) (array length=size): The string containing the glyph name\n+ * @size: Length of string @s\n@@ -1282,0 +1424,2 @@\n+ * Fetches the name of the specified glyph ID in @font and returns\n+ * it in string @s.\n@@ -1283,0 +1427,2 @@\n+ * If the glyph ID has no name in @font, a string of the form `gidDDD` is\n+ * generated, with `DDD` being the glyph ID.\n@@ -1287,3 +1433,4 @@\n-hb_font_glyph_to_string (hb_font_t *font,\n-                         hb_codepoint_t glyph,\n-                         char *s, unsigned int size)\n+hb_font_glyph_to_string (hb_font_t      *font,\n+                         hb_codepoint_t  glyph,\n+                         char           *s,\n+                         unsigned int    size)\n@@ -1294,1 +1441,0 @@\n-\/* Parses gidDDD and uniUUUU strings automatically. *\/\n@@ -1297,4 +1443,4 @@\n- * @font: a font.\n- * @s: (array length=len) (element-type uint8_t):\n- * @len:\n- * @glyph: (out):\n+ * @font: #hb_font_t to work upon\n+ * @s: (array length=len) (element-type uint8_t): string to query\n+ * @len: The length of the string @s\n+ * @glyph: (out): The glyph ID corresponding to the string requested\n@@ -1302,0 +1448,2 @@\n+ * Fetches the glyph ID from @font that matches the specified string.\n+ * Strings of the format `gidDDD` or `uniUUUU` are parsed automatically.\n@@ -1303,0 +1451,1 @@\n+ * <note>Note: @len == -1 means the string is null-terminated.<\/note>\n@@ -1304,1 +1453,1 @@\n- * Return value:\n+ * Return value: %true if data found, %false otherwise\n@@ -1309,2 +1458,3 @@\n-hb_font_glyph_from_string (hb_font_t *font,\n-                           const char *s, int len, \/* -1 means nul-terminated *\/\n+hb_font_glyph_from_string (hb_font_t      *font,\n+                           const char     *s,\n+                           int             len,\n@@ -1372,0 +1522,1 @@\n+ * Constructs a new font object from the specified face.\n@@ -1373,2 +1524,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The new font object\n@@ -1407,1 +1557,1 @@\n- * @parent: parent font.\n+ * @parent: The parent font object\n@@ -1409,0 +1559,2 @@\n+ * Constructs a sub-font font object from the specified @parent font,\n+ * replicating the parent's properties.\n@@ -1410,2 +1562,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The new sub-font font object\n@@ -1459,0 +1610,1 @@\n+ * Fetches the empty font object.\n@@ -1460,2 +1612,1 @@\n- *\n- * Return value: (transfer full)\n+ * Return value: (transfer full): The empty font object\n@@ -1473,2 +1624,1 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n@@ -1476,0 +1626,1 @@\n+ * Increases the reference count on the given font object.\n@@ -1477,1 +1628,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The @font object\n@@ -1489,2 +1640,1 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n@@ -1492,0 +1642,3 @@\n+ * Decreases the reference count on the given font object. When the\n+ * reference count reaches zero, the font is destroyed,\n+ * freeing all memory.\n@@ -1517,5 +1670,5 @@\n- * @font: a font.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @font: #hb_font_t to work upon\n+ * @key: The user-data key\n+ * @data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -1523,0 +1676,1 @@\n+ * Attaches a user-data key\/data pair to the specified font object.\n@@ -1524,2 +1678,1 @@\n- *\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -1533,1 +1686,1 @@\n-                       hb_destroy_func_t   destroy,\n+                       hb_destroy_func_t   destroy \/* May be NULL. *\/,\n@@ -1541,2 +1694,2 @@\n- * @font: a font.\n- * @key:\n+ * @font: #hb_font_t to work upon\n+ * @key: The user-data key to query\n@@ -1544,0 +1697,2 @@\n+ * Fetches the user-data object associated with the specified key,\n+ * attached to the specified font object.\n@@ -1545,2 +1700,1 @@\n- *\n- * Return value: (transfer none):\n+ * Return value: (transfer none): Pointer to the user data\n@@ -1559,2 +1713,1 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n@@ -1562,0 +1715,1 @@\n+ * Makes @font immutable.\n@@ -1579,2 +1733,1 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n@@ -1582,0 +1735,1 @@\n+ * Tests whether a font object is immutable.\n@@ -1583,1 +1737,1 @@\n- * Return value:\n+ * Return value: %true if @font is immutable, %false otherwise\n@@ -1595,2 +1749,2 @@\n- * @font: a font.\n- * @parent: new parent.\n+ * @font: #hb_font_t to work upon\n+ * @parent: The parent font object to assign\n@@ -1598,1 +1752,1 @@\n- * Sets parent font of @font.\n+ * Sets the parent font of @font.\n@@ -1621,1 +1775,1 @@\n- * @font: a font.\n+ * @font: #hb_font_t to work upon\n@@ -1623,0 +1777,1 @@\n+ * Fetches the parent font of @font.\n@@ -1624,2 +1779,1 @@\n- *\n- * Return value: (transfer none):\n+ * Return value: (transfer none): The parent font object\n@@ -1637,2 +1791,2 @@\n- * @font: a font.\n- * @face: new face.\n+ * @font: #hb_font_t to work upon\n+ * @face: The #hb_face_t to assign\n@@ -1640,1 +1794,1 @@\n- * Sets font-face of @font.\n+ * Sets @face as the font-face value of @font.\n@@ -1665,2 +1819,1 @@\n- * @font: a font.\n- *\n+ * @font: #hb_font_t to work upon\n@@ -1668,0 +1821,1 @@\n+ * Fetches the face associated with the specified font object.\n@@ -1669,1 +1823,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): The #hb_face_t value\n@@ -1682,5 +1836,4 @@\n- * @font: a font.\n- * @klass: (closure font_data) (destroy destroy) (scope notified):\n- * @font_data:\n- * @destroy:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @klass: (closure font_data) (destroy destroy) (scope notified): The font-functions structure.\n+ * @font_data: Data to attach to @font\n+ * @destroy: (nullable): The function to call when @font_data is not needed anymore\n@@ -1688,0 +1841,2 @@\n+ * Replaces the font-functions structure attached to a font, updating\n+ * the font's user-data with @font-data and the @destroy callback.\n@@ -1695,1 +1850,1 @@\n-                   hb_destroy_func_t  destroy)\n+                   hb_destroy_func_t  destroy \/* May be NULL. *\/)\n@@ -1719,4 +1874,3 @@\n- * @font: a font.\n- * @font_data: (destroy destroy) (scope notified):\n- * @destroy:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @font_data: (destroy destroy) (scope notified): Data to attach to @font\n+ * @destroy: (nullable): The function to call when @font_data is not needed anymore\n@@ -1724,0 +1878,2 @@\n+ * Replaces the user data attached to a font, updating the font's\n+ * @destroy callback.\n@@ -1730,1 +1886,1 @@\n-                        hb_destroy_func_t  destroy)\n+                        hb_destroy_func_t  destroy \/* May be NULL. *\/)\n@@ -1750,4 +1906,3 @@\n- * @font: a font.\n- * @x_scale:\n- * @y_scale:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @x_scale: Horizontal scale value to assign\n+ * @y_scale: Vertical scale value to assign\n@@ -1755,0 +1910,1 @@\n+ * Sets the horizontal and vertical scale of a font.\n@@ -1760,2 +1916,2 @@\n-                   int x_scale,\n-                   int y_scale)\n+                   int        x_scale,\n+                   int        y_scale)\n@@ -1773,4 +1929,3 @@\n- * @font: a font.\n- * @x_scale: (out):\n- * @y_scale: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @x_scale: (out): Horizontal scale value\n+ * @y_scale: (out): Vertical scale value\n@@ -1778,0 +1933,1 @@\n+ * Fetches the horizontal and vertical scale of a font.\n@@ -1783,2 +1939,2 @@\n-                   int *x_scale,\n-                   int *y_scale)\n+                   int       *x_scale,\n+                   int       *y_scale)\n@@ -1792,4 +1948,3 @@\n- * @font: a font.\n- * @x_ppem:\n- * @y_ppem:\n- *\n+ * @font: #hb_font_t to work upon\n+ * @x_ppem: Horizontal ppem value to assign\n+ * @y_ppem: Vertical ppem value to assign\n@@ -1797,0 +1952,1 @@\n+ * Sets the horizontal and vertical pixels-per-em (ppem) of a font.\n@@ -1801,3 +1957,3 @@\n-hb_font_set_ppem (hb_font_t *font,\n-                  unsigned int x_ppem,\n-                  unsigned int y_ppem)\n+hb_font_set_ppem (hb_font_t    *font,\n+                  unsigned int  x_ppem,\n+                  unsigned int  y_ppem)\n@@ -1814,4 +1970,3 @@\n- * @font: a font.\n- * @x_ppem: (out):\n- * @y_ppem: (out):\n- *\n+ * @font: #hb_font_t to work upon\n+ * @x_ppem: (out): Horizontal ppem value\n+ * @y_ppem: (out): Vertical ppem value\n@@ -1819,0 +1974,1 @@\n+ * Fetches the horizontal and vertical points-per-em (ppem) of a font.\n@@ -1823,1 +1979,1 @@\n-hb_font_get_ppem (hb_font_t *font,\n+hb_font_get_ppem (hb_font_t    *font,\n@@ -1833,1 +1989,1 @@\n- * @font: a font.\n+ * @font: #hb_font_t to work upon\n@@ -1836,1 +1992,2 @@\n- * Sets \"point size\" of the font.  Set to 0 to unset.\n+ * Sets the \"point size\" of a font. Set to zero to unset.\n+ * Used in CoreText to implement optical sizing.\n@@ -1838,1 +1995,1 @@\n- * There are 72 points in an inch.\n+ * <note>Note: There are 72 points in an inch.<\/note>\n@@ -1843,1 +2000,2 @@\n-hb_font_set_ptem (hb_font_t *font, float ptem)\n+hb_font_set_ptem (hb_font_t *font,\n+                  float      ptem)\n@@ -1853,1 +2011,1 @@\n- * @font: a font.\n+ * @font: #hb_font_t to work upon\n@@ -1855,1 +2013,2 @@\n- * Gets the \"point size\" of the font.  A value of 0 means unset.\n+ * Fetches the \"point size\" of a font. Used in CoreText to\n+ * implement optical sizing.\n@@ -1857,1 +2016,1 @@\n- * Return value: Point size.\n+ * Return value: Point size.  A value of zero means \"not set.\"\n@@ -1874,0 +2033,5 @@\n+ * @font: #hb_font_t to work upon\n+ * @variations: (array length=variations_length): Array of variation settings to apply\n+ * @variations_length: Number of variations to apply\n+ *\n+ * Applies a list of font-variation settings to a font.\n@@ -1878,1 +2042,1 @@\n-hb_font_set_variations (hb_font_t *font,\n+hb_font_set_variations (hb_font_t            *font,\n@@ -1880,1 +2044,1 @@\n-                        unsigned int variations_length)\n+                        unsigned int          variations_length)\n@@ -1922,0 +2086,6 @@\n+ * @font: #hb_font_t to work upon\n+ * @coords: (array length=coords_length): Array of variation coordinates to apply\n+ * @coords_length: Number of coordinates to apply\n+ *\n+ * Applies a list of variation coordinates (in design-space units)\n+ * to a font.\n@@ -1926,3 +2096,3 @@\n-hb_font_set_var_coords_design (hb_font_t *font,\n-                               const float *coords,\n-                               unsigned int coords_length)\n+hb_font_set_var_coords_design (hb_font_t    *font,\n+                               const float  *coords,\n+                               unsigned int  coords_length)\n@@ -1979,0 +2149,8 @@\n+ * @font: #hb_font_t to work upon\n+ * @coords: (array length=coords_length): Array of variation coordinates to apply\n+ * @coords_length: Number of coordinates to apply\n+ *\n+ * Applies a list of variation coordinates (in normalized units)\n+ * to a font.\n+ *\n+ * <note>Note: Coordinates should be normalized to 2.14.<\/note>\n@@ -1983,3 +2161,3 @@\n-hb_font_set_var_coords_normalized (hb_font_t *font,\n-                                   const int *coords, \/* 2.14 normalized *\/\n-                                   unsigned int coords_length)\n+hb_font_set_var_coords_normalized (hb_font_t    *font,\n+                                   const int    *coords, \/* 2.14 normalized *\/\n+                                   unsigned int  coords_length)\n@@ -2019,0 +2197,5 @@\n+ * @font: #hb_font_t to work upon\n+ * @length: Number of coordinates retrieved\n+ *\n+ * Fetches the list of normalized variation coordinates currently\n+ * set on a font.\n@@ -2026,1 +2209,1 @@\n-hb_font_get_var_coords_normalized (hb_font_t *font,\n+hb_font_get_var_coords_normalized (hb_font_t    *font,\n@@ -2038,0 +2221,2 @@\n+ * @font: #hb_font_t to work upon\n+ * @length: (out): number of coordinates\n@@ -2042,0 +2227,2 @@\n+ * Return value: coordinates array\n+ *\n@@ -2118,3 +2305,3 @@\n-hb_font_get_nominal_glyph_trampoline (hb_font_t *font,\n-                                      void *font_data,\n-                                      hb_codepoint_t unicode,\n+hb_font_get_nominal_glyph_trampoline (hb_font_t      *font,\n+                                      void           *font_data,\n+                                      hb_codepoint_t  unicode,\n@@ -2122,1 +2309,1 @@\n-                                      void *user_data)\n+                                      void           *user_data)\n@@ -2129,4 +2316,4 @@\n-hb_font_get_variation_glyph_trampoline (hb_font_t *font,\n-                                        void *font_data,\n-                                        hb_codepoint_t unicode,\n-                                        hb_codepoint_t variation_selector,\n+hb_font_get_variation_glyph_trampoline (hb_font_t      *font,\n+                                        void           *font_data,\n+                                        hb_codepoint_t  unicode,\n+                                        hb_codepoint_t  variation_selector,\n@@ -2134,1 +2321,1 @@\n-                                        void *user_data)\n+                                        void           *user_data)\n@@ -2142,4 +2329,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified): callback function.\n- * @user_data: data to pass to @func.\n- * @destroy: function to call when @user_data is not needed anymore.\n+ * @ffuncs: The font-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): callback function\n+ * @user_data: data to pass to @func\n+ * @destroy: (nullable): function to call when @user_data is not needed anymore\n@@ -2154,3 +2341,4 @@\n-hb_font_funcs_set_glyph_func (hb_font_funcs_t *ffuncs,\n-                              hb_font_get_glyph_func_t func,\n-                              void *user_data, hb_destroy_func_t destroy)\n+hb_font_funcs_set_glyph_func (hb_font_funcs_t          *ffuncs,\n+                              hb_font_get_glyph_func_t  func,\n+                              void                     *user_data,\n+                              hb_destroy_func_t         destroy \/* May be NULL. *\/)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-font.cc","additions":695,"deletions":507,"binary":false,"changes":1202,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -40,1 +40,6 @@\n-\n+\/**\n+ * hb_font_t:\n+ *\n+ * Data type for holding fonts.\n+ *\n+ *\/\n@@ -48,0 +53,13 @@\n+\/**\n+ * hb_font_funcs_t:\n+ *\n+ * Data type containing a set of virtual methods used for\n+ * working on #hb_font_t font objects.\n+ *\n+ * HarfBuzz provides a lightweight default function for each of\n+ * the methods in #hb_font_funcs_t. Client programs can implement\n+ * their own replacements for the individual font functions, as\n+ * needed, and replace the default by calling the setter for a\n+ * method.\n+ *\n+ **\/\n@@ -84,6 +102,15 @@\n-\/* Note that typically ascender is positive and descender negative in coordinate systems that grow up. *\/\n-typedef struct hb_font_extents_t\n-{\n-  hb_position_t ascender; \/* typographic ascender. *\/\n-  hb_position_t descender; \/* typographic descender. *\/\n-  hb_position_t line_gap; \/* suggested line spacing gap. *\/\n+\/**\n+ * hb_font_extents_t:\n+ * @ascender: The height of typographic ascenders.\n+ * @descender: The depth of typographic descenders.\n+ * @line_gap: The suggested line-spacing gap.\n+ *\n+ * Font-wide extent values, measured in font units.\n+ *\n+ * Note that typically @ascender is positive and @descender\n+ * negative, in coordinate systems that grow up.\n+ **\/\n+typedef struct hb_font_extents_t {\n+  hb_position_t ascender;\n+  hb_position_t descender;\n+  hb_position_t line_gap;\n@@ -102,7 +129,16 @@\n-\/* Note that height is negative in coordinate systems that grow up. *\/\n-typedef struct hb_glyph_extents_t\n-{\n-  hb_position_t x_bearing; \/* left side of glyph from origin. *\/\n-  hb_position_t y_bearing; \/* top side of glyph from origin. *\/\n-  hb_position_t width; \/* distance from left to right side. *\/\n-  hb_position_t height; \/* distance from top to bottom side. *\/\n+\/**\n+ * hb_glyph_extents_t:\n+ * @x_bearing: Distance from the x-origin to the left extremum of the glyph.\n+ * @y_bearing: Distance from the top extremum of the glyph to the y-origin.\n+ * @width: Distance from the left extremum of the glyph to the right extremum.\n+ * @height: Distance from the top extremum of the glyph to the bottom extremum.\n+ *\n+ * Glyph extent values, measured in font units.\n+ *\n+ * Note that @height is negative, in coordinate systems that grow up.\n+ **\/\n+typedef struct hb_glyph_extents_t {\n+  hb_position_t x_bearing;\n+  hb_position_t y_bearing;\n+  hb_position_t width;\n+  hb_position_t height;\n@@ -113,0 +149,10 @@\n+\/**\n+ * hb_font_get_font_extents_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @extents: (out): The font extents retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * This method should retrieve the extents for a font.\n+ *\n+ **\/\n@@ -116,0 +162,11 @@\n+\n+\/**\n+ * hb_font_get_font_h_extents_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the extents for a font, for horizontal-direction\n+ * text segments. Extents must be returned in an #hb_glyph_extents output\n+ * parameter.\n+ *\n+ **\/\n@@ -117,0 +174,11 @@\n+\n+\/**\n+ * hb_font_get_font_v_extents_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the extents for a font, for vertical-direction\n+ * text segments. Extents must be returned in an #hb_glyph_extents output\n+ * parameter.\n+ *\n+ **\/\n@@ -120,0 +188,16 @@\n+\/**\n+ * hb_font_get_nominal_glyph_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @unicode: The Unicode code point to query\n+ * @glyph: (out): The glyph ID retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the nominal glyph ID for a specified Unicode code\n+ * point. Glyph IDs must be returned in a #hb_codepoint_t output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -124,0 +208,19 @@\n+\n+\/**\n+ * hb_font_get_variation_glyph_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @unicode: The Unicode code point to query\n+ * @variation_selector: The  variation-selector code point to query\n+ * @glyph: (out): The glyph ID retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the glyph ID for a specified Unicode code point\n+ * followed by a specified Variation Selector code point. Glyph IDs must be\n+ * returned in a #hb_codepoint_t output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -129,0 +232,21 @@\n+\n+\/**\n+ * hb_font_get_nominal_glyphs_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @count: number of code points to query\n+ * @first_unicode: The first Unicode code point to query\n+ * @unicode_stride: The stride between successive code points\n+ * @first_glyph: (out): The first glyph ID retrieved\n+ * @glyph_stride: The stride between successive glyph IDs\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the nominal glyph IDs for a sequence of\n+ * Unicode code points. Glyph IDs must be returned in a #hb_codepoint_t\n+ * output parameter.\n+ *\n+ * Return value: the number of code points processed\n+ *\n+ **\/\n@@ -137,1 +261,15 @@\n-\n+\/**\n+ * hb_font_get_glyph_advance_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @glyph: The glyph ID to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advance for a specified glyph. The\n+ * method must return an #hb_position_t.\n+ *\n+ * Return value: The advance of @glyph within @font\n+ *\n+ **\/\n@@ -141,0 +279,11 @@\n+\n+\/**\n+ * hb_font_get_glyph_h_advance_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advance for a specified glyph, in\n+ * horizontal-direction text segments. Advances must be returned in\n+ * an #hb_position_t output parameter.\n+ *\n+ **\/\n@@ -142,0 +291,11 @@\n+\n+\/**\n+ * hb_font_get_glyph_v_advance_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advance for a specified glyph, in\n+ * vertical-direction text segments. Advances must be returned in\n+ * an #hb_position_t output parameter.\n+ *\n+ **\/\n@@ -144,0 +304,16 @@\n+\/**\n+ * hb_font_get_glyph_advances_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @count: The number of glyph IDs in the sequence queried\n+ * @first_glyph: The first glyph ID to query\n+ * @glyph_stride: The stride between successive glyph IDs\n+ * @first_advance: (out): The first advance retrieved\n+ * @advance_stride: The stride between successive advances\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advances for a sequence of glyphs.\n+ *\n+ **\/\n@@ -151,0 +327,10 @@\n+\n+\/**\n+ * hb_font_get_glyph_h_advances_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advances for a sequence of glyphs, in\n+ * horizontal-direction text segments.\n+ *\n+ **\/\n@@ -152,0 +338,10 @@\n+\n+\/**\n+ * hb_font_get_glyph_v_advances_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the advances for a sequence of glyphs, in\n+ * vertical-direction text segments.\n+ *\n+ **\/\n@@ -154,0 +350,18 @@\n+\/**\n+ * hb_font_get_glyph_origin_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @glyph: The glyph ID to query\n+ * @x: (out): The X coordinate of the origin\n+ * @y: (out): The Y coordinate of the origin\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the (X,Y) coordinates (in font units) of the\n+ * origin for a glyph. Each coordinate must be returned in an #hb_position_t\n+ * output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -158,0 +372,11 @@\n+\n+\/**\n+ * hb_font_get_glyph_h_origin_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the (X,Y) coordinates (in font units) of the\n+ * origin for a glyph, for horizontal-direction text segments. Each\n+ * coordinate must be returned in an #hb_position_t output parameter.\n+ *\n+ **\/\n@@ -159,0 +384,11 @@\n+\n+\/**\n+ * hb_font_get_glyph_v_origin_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the (X,Y) coordinates (in font units) of the\n+ * origin for a glyph, for vertical-direction text segments. Each coordinate\n+ * must be returned in an #hb_position_t output parameter.\n+ *\n+ **\/\n@@ -161,0 +397,12 @@\n+\/**\n+ * hb_font_get_glyph_kerning_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @first_glyph: The glyph ID of the first glyph in the glyph pair\n+ * @second_glyph: The glyph ID of the second glyph in the glyph pair\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * This method should retrieve the kerning-adjustment value for a glyph-pair in\n+ * the specified font, for horizontal text segments.\n+ *\n+ **\/\n@@ -164,0 +412,9 @@\n+\/**\n+ * hb_font_get_glyph_h_kerning_func_t:\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the kerning-adjustment value for a glyph-pair in\n+ * the specified font, for horizontal text segments.\n+ *\n+ **\/\n@@ -167,0 +424,16 @@\n+\/**\n+ * hb_font_get_glyph_extents_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @glyph: The glyph ID to query\n+ * @extents: (out): The #hb_glyph_extents_t retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the extents for a specified glyph. Extents must be\n+ * returned in an #hb_glyph_extents output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -171,0 +444,20 @@\n+\n+\/**\n+ * hb_font_get_glyph_contour_point_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @glyph: The glyph ID to query\n+ * @point_index: The contour-point index to query\n+ * @x: (out): The X value retrieved for the contour point\n+ * @y: (out): The Y value retrieved for the contour point\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the (X,Y) coordinates (in font units) for a\n+ * specified contour point in a glyph. Each coordinate must be returned as\n+ * an #hb_position_t output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -177,0 +470,17 @@\n+\/**\n+ * hb_font_get_glyph_name_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @glyph: The glyph ID to query\n+ * @name: (out) (array length=size): Name string retrieved for the glyph ID\n+ * @size: Length of the glyph-name string retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the glyph name that corresponds to a\n+ * glyph ID. The name should be returned in a string output parameter.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -181,0 +491,18 @@\n+\n+\/**\n+ * hb_font_get_glyph_from_name_func_t:\n+ * @font: #hb_font_t to work upon\n+ * @font_data: @font user data pointer\n+ * @name: (array length=len): The name string to query\n+ * @len: The length of the name queried\n+ * @glyph: (out): The glyph ID retrieved\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_font_funcs_t of an #hb_font_t object.\n+ *\n+ * This method should retrieve the glyph ID that corresponds to a glyph-name\n+ * string.\n+ *\n+ * Return value: %true if data found, %false otherwise\n+ *\n+ **\/\n@@ -191,5 +519,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -197,0 +524,1 @@\n+ * Sets the implementation function for #hb_font_get_font_h_extents_func_t.\n@@ -207,5 +535,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -213,0 +540,1 @@\n+ * Sets the implementation function for #hb_font_get_font_v_extents_func_t.\n@@ -223,5 +551,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -229,0 +556,1 @@\n+ * Sets the implementation function for #hb_font_get_nominal_glyph_func_t.\n@@ -239,5 +567,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -245,0 +572,1 @@\n+ * Sets the implementation function for #hb_font_get_nominal_glyphs_func_t.\n@@ -255,5 +583,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -261,0 +588,1 @@\n+ * Sets the implementation function for #hb_font_get_variation_glyph_func_t.\n@@ -271,5 +599,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -277,0 +604,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_h_advance_func_t.\n@@ -287,5 +615,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -293,0 +620,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_v_advance_func_t.\n@@ -303,5 +631,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -309,0 +636,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_h_advances_func_t.\n@@ -319,5 +647,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -325,0 +652,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_v_advances_func_t.\n@@ -335,5 +663,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -341,0 +668,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_h_origin_func_t.\n@@ -351,5 +679,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -357,0 +684,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_v_origin_func_t.\n@@ -367,5 +695,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -373,0 +700,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_h_kerning_func_t.\n@@ -383,5 +711,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -389,0 +716,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_extents_func_t.\n@@ -399,5 +727,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -405,0 +732,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_contour_point_func_t.\n@@ -415,5 +743,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -421,0 +748,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_name_func_t.\n@@ -431,5 +759,4 @@\n- * @ffuncs: font functions.\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ffuncs: A font-function structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -437,0 +764,1 @@\n+ * Sets the implementation function for #hb_font_get_glyph_from_name_func_t.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-font.h","additions":424,"deletions":96,"binary":false,"changes":520,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  mutable hb_atomic_int_t cached_x_scale;\n+  mutable int cached_x_scale;\n@@ -104,1 +104,1 @@\n-  ft_font->cached_x_scale.set_relaxed (0);\n+  ft_font->cached_x_scale = 0;\n@@ -182,1 +182,1 @@\n- * hb_ft_get_face:\n+ * hb_ft_font_get_face:\n@@ -188,1 +188,1 @@\n- * Return value: the FT_Face found\n+ * Return value: (nullable): the FT_Face found or %NULL\n@@ -205,2 +205,1 @@\n- * @font:\n- *\n+ * @font: #hb_font_t to work upon\n@@ -208,0 +207,2 @@\n+ * Gets the FT_Face associated with @font, This face will be kept around until\n+ * you call hb_ft_font_unlock_face().\n@@ -209,1 +210,1 @@\n- * Return value:\n+ * Return value: (nullable): the FT_Face associated with @font or %NULL\n@@ -227,2 +228,1 @@\n- * @font:\n- *\n+ * @font: #hb_font_t to work upon\n@@ -230,0 +230,1 @@\n+ * Releases an FT_Face previously obtained with hb_ft_font_lock_face().\n@@ -231,1 +232,0 @@\n- * Return value:\n@@ -338,1 +338,1 @@\n-  if (font->x_scale != ft_font->cached_x_scale.get ())\n+  if (font->x_scale != ft_font->cached_x_scale)\n@@ -341,1 +341,1 @@\n-    ft_font->cached_x_scale.set (font->x_scale);\n+    ft_font->cached_x_scale = font->x_scale;\n@@ -664,1 +664,1 @@\n- * @destroy: A callback to call when the face object is not needed anymore\n+ * @destroy: (nullable): A callback to call when the face object is not needed anymore\n@@ -774,1 +774,1 @@\n- * @destroy: (optional): A callback to call when the font object is not needed anymore\n+ * @destroy: (nullable): A callback to call when the font object is not needed anymore\n@@ -779,2 +779,2 @@\n- * hb_ft_font_create() on it. Otherwise, HarfBuzz will not pick up\n- * the face size.<\/note>\n+ * hb_ft_font_create() on it. HarfBuzz assumes size is always set and will\n+ * access `size` member of FT_Face unconditionally.<\/note>\n@@ -817,1 +817,1 @@\n- * hb_ft_font_has_changed:\n+ * hb_ft_font_changed:\n@@ -887,2 +887,2 @@\n- * hb_ft_font_create_references() on it. Otherwise, HarfBuzz will not pick up\n- * the face size.<\/note>\n+ * hb_ft_font_create_referenced() on it. HarfBuzz assumes size is always set\n+ * and will access `size` member of FT_Face unconditionally.<\/note>\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ft.cc","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -925,1 +925,1 @@\n-hb_fill (C& c, const V &v)\n+hb_fill (C&& c, const V &v)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-iter.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,0 +83,5 @@\n+\/* Size signifying variable-sized array *\/\n+#ifndef HB_VAR_ARRAY\n+#define HB_VAR_ARRAY 1\n+#endif\n+\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-machinery.hh","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -45,1 +45,3 @@\n- * Return value: (transfer full):\n+ * Creates a new, initially empty map.\n+ *\n+ * Return value: (transfer full): The new #hb_map_t\n@@ -65,1 +67,3 @@\n- * Return value: (transfer full):\n+ * Fetches the singleton empty #hb_map_t.\n+ *\n+ * Return value: (transfer full): The empty #hb_map_t\n@@ -77,1 +81,3 @@\n- * @map: a map.\n+ * @map: A map\n+ *\n+ * Increases the reference count on a map.\n@@ -79,1 +85,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The map\n@@ -91,1 +97,5 @@\n- * @map: a map.\n+ * @map: A map\n+ *\n+ * Decreases the reference count on a map. When\n+ * the reference count reaches zero, the map is\n+ * destroyed, freeing all memory.\n@@ -107,5 +117,7 @@\n- * @map: a map.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @map: A map\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data to set\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n+ *\n+ * Attaches a user-data key\/data pair to the specified map.\n@@ -113,1 +125,1 @@\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -129,2 +141,5 @@\n- * @map: a map.\n- * @key:\n+ * @map: A map\n+ * @key: The user-data key to query\n+ *\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified map.\n@@ -132,1 +147,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -146,1 +161,1 @@\n- * @map: a map.\n+ * @map: A map\n@@ -148,0 +163,1 @@\n+ * Tests whether memory allocation for a set was successful.\n@@ -149,2 +165,1 @@\n- *\n- * Return value:\n+ * Return value: %true if allocation succeeded, %false otherwise\n@@ -163,4 +178,3 @@\n- * @map: a map.\n- * @key:\n- * @value:\n- *\n+ * @map: A map\n+ * @key: The key to store in the map\n+ * @value: The value to store for @key\n@@ -168,0 +182,1 @@\n+ * Stores @key:@value in the map.\n@@ -181,3 +196,2 @@\n- * @map: a map.\n- * @key:\n- *\n+ * @map: A map\n+ * @key: The key to query\n@@ -185,0 +199,1 @@\n+ * Fetches the value stored for @key in @map.\n@@ -197,3 +212,2 @@\n- * @map: a map.\n- * @key:\n- *\n+ * @map: A map\n+ * @key: The key to delete\n@@ -201,0 +215,1 @@\n+ * Removes @key and its stored value from @map.\n@@ -213,2 +228,2 @@\n- * @map: a map.\n- * @key:\n+ * @map: A map\n+ * @key: The key to query\n@@ -216,0 +231,1 @@\n+ * Tests whether @key is an element of @map.\n@@ -217,0 +233,1 @@\n+ * Return value: %true if @key is found in @map, %false otherwise\n@@ -230,2 +247,1 @@\n- * @map: a map.\n- *\n+ * @map: A map\n@@ -233,0 +249,1 @@\n+ * Clears out the contents of @map.\n@@ -239,0 +256,3 @@\n+  if (unlikely (hb_object_is_immutable (map)))\n+    return;\n+\n@@ -244,1 +264,1 @@\n- * @map: a map.\n+ * @map: A map\n@@ -246,0 +266,1 @@\n+ * Tests whether @map is empty (contains no elements).\n@@ -247,0 +268,1 @@\n+ * Return value: %true if @map is empty\n@@ -258,1 +280,1 @@\n- * @map: a map.\n+ * @map: A map\n@@ -260,0 +282,1 @@\n+ * Returns the number of key-value pairs in the map.\n@@ -261,0 +284,1 @@\n+ * Return value: The population of @map\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-map.cc","additions":57,"deletions":33,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -39,1 +39,5 @@\n-\/*\n+\/**\n+ * HB_MAP_VALUE_INVALID:\n+ *\n+ * Unset #hb_map_t value.\n+ *\n@@ -44,0 +48,6 @@\n+\/**\n+ * hb_map_t:\n+ *\n+ * Data type for holding integer-to-integer hash maps.\n+ *\n+ **\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-map.h","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -100,2 +100,0 @@\n-    if (unlikely (hb_object_is_immutable (this)))\n-      return;\n@@ -174,2 +172,0 @@\n-    if (unlikely (hb_object_is_immutable (this)))\n-      return;\n@@ -184,0 +180,1 @@\n+  explicit operator bool () const { return !is_empty (); }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-map.hh","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -52,0 +52,4 @@\n+\/* Static-assert as expression. *\/\n+template <bool cond> struct static_assert_expr;\n+template <> struct static_assert_expr<true> : hb_false_type {};\n+#define static_assert_expr(C) static_assert_expr<C>::value\n@@ -223,0 +227,2 @@\n+\/* Type traits *\/\n+\n@@ -295,0 +301,9 @@\n+\/* Class traits. *\/\n+\n+#define HB_DELETE_COPY_ASSIGN(TypeName) \\\n+  TypeName(const TypeName&) = delete; \\\n+  void operator=(const TypeName&) = delete\n+#define HB_DELETE_CREATE_COPY_ASSIGN(TypeName) \\\n+  TypeName() = delete; \\\n+  TypeName(const TypeName&) = delete; \\\n+  void operator=(const TypeName&) = delete\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-meta.hh","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -76,18 +76,0 @@\n-#elif !defined(HB_NO_MT) && defined(HAVE_INTEL_ATOMIC_PRIMITIVES)\n-\n-#if defined(HAVE_SCHED_H) && defined(HAVE_SCHED_YIELD)\n-# include <sched.h>\n-# define HB_SCHED_YIELD() sched_yield ()\n-#else\n-# define HB_SCHED_YIELD() HB_STMT_START {} HB_STMT_END\n-#endif\n-\n-\/* This actually is not a totally awful implementation. *\/\n-typedef volatile int hb_mutex_impl_t;\n-#define HB_MUTEX_IMPL_INIT      0\n-#define hb_mutex_impl_init(M)   *(M) = 0\n-#define hb_mutex_impl_lock(M)   HB_STMT_START { while (__sync_lock_test_and_set((M), 1)) HB_SCHED_YIELD (); } HB_STMT_END\n-#define hb_mutex_impl_unlock(M) __sync_lock_release (M)\n-#define hb_mutex_impl_finish(M) HB_STMT_START {} HB_STMT_END\n-\n-\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-mutex.hh","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -180,0 +180,1 @@\n+  private:\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-null.hh","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -143,3 +143,1 @@\n-#define HB_REFERENCE_COUNT_INERT_VALUE 0\n-#define HB_REFERENCE_COUNT_POISON_VALUE -0x0000DEAD\n-#define HB_REFERENCE_COUNT_INIT {HB_ATOMIC_INT_INIT (HB_REFERENCE_COUNT_INERT_VALUE)}\n+#define HB_REFERENCE_COUNT_INIT {0}\n@@ -155,1 +153,1 @@\n-  void fini () { ref_count.set_relaxed (HB_REFERENCE_COUNT_POISON_VALUE); }\n+  void fini () { ref_count.set_relaxed (-0x0000DEAD); }\n@@ -157,1 +155,1 @@\n-  bool is_inert () const { return ref_count.get_relaxed () == HB_REFERENCE_COUNT_INERT_VALUE; }\n+  bool is_inert () const { return !ref_count.get_relaxed (); }\n@@ -200,1 +198,1 @@\n-  mutable hb_atomic_int_t writable;\n+  mutable hb_atomic_int_t writable = 0;\n@@ -203,6 +201,1 @@\n-#define HB_OBJECT_HEADER_STATIC \\\n-        { \\\n-          HB_REFERENCE_COUNT_INIT, \\\n-          HB_ATOMIC_INT_INIT (false), \\\n-          HB_ATOMIC_PTR_INIT (nullptr) \\\n-        }\n+#define HB_OBJECT_HEADER_STATIC {}\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-object.hh","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-struct OffsetTable;\n+struct OpenTypeOffsetTable;\n@@ -81,1 +81,1 @@\n-typedef struct OffsetTable\n+typedef struct OpenTypeOffsetTable\n@@ -221,1 +221,1 @@\n-  LArrayOf<LOffsetTo<OffsetTable>>\n+  LArrayOf<LOffsetTo<OpenTypeOffsetTable>>\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-open-file.hh","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-template <typename Type, unsigned int Size>\n+template <typename Type,\n+          unsigned int Size = sizeof (Type)>\n@@ -60,1 +61,0 @@\n-  typedef hb_conditional<hb_is_signed (Type), signed, unsigned> wide_type;\n@@ -62,2 +62,7 @@\n-  IntType& operator = (wide_type i) { v = i; return *this; }\n-  operator wide_type () const { return v; }\n+  IntType () = default;\n+  explicit constexpr IntType (Type V) : v {V} {}\n+  IntType& operator = (Type i) { v = i; return *this; }\n+  \/* For reason we define cast out operator for signed\/unsigned, instead of Type, see:\n+   * https:\/\/github.com\/harfbuzz\/harfbuzz\/pull\/2875\/commits\/09836013995cab2b9f07577a179ad7b024130467 *\/\n+  operator hb_conditional<hb_is_signed (Type), signed, unsigned> () const { return v; }\n+\n@@ -83,1 +88,4 @@\n-  template <typename Type2>\n+  template <typename Type2,\n+            hb_enable_if (hb_is_integral (Type2) &&\n+                          sizeof (Type2) < sizeof (int) &&\n+                          sizeof (Type) < sizeof (int))>\n@@ -87,4 +95,8 @@\n-    if (sizeof (Type) < sizeof (int) && sizeof (Type2) < sizeof (int))\n-      return (int) a - (int) b;\n-    else\n-      return a < b ? -1 : a == b ? 0 : +1;\n+    return (int) a - (int) b;\n+  }\n+  template <typename Type2,\n+            hb_enable_if (hb_is_convertible (Type2, Type))>\n+  int cmp (Type2 a) const\n+  {\n+    Type b = v;\n+    return a < b ? -1 : a == b ? 0 : +1;\n@@ -103,6 +115,6 @@\n-typedef IntType<uint8_t,  1> HBUINT8;   \/* 8-bit unsigned integer. *\/\n-typedef IntType<int8_t,   1> HBINT8;    \/* 8-bit signed integer. *\/\n-typedef IntType<uint16_t, 2> HBUINT16;  \/* 16-bit unsigned integer. *\/\n-typedef IntType<int16_t,  2> HBINT16;   \/* 16-bit signed integer. *\/\n-typedef IntType<uint32_t, 4> HBUINT32;  \/* 32-bit unsigned integer. *\/\n-typedef IntType<int32_t,  4> HBINT32;   \/* 32-bit signed integer. *\/\n+typedef IntType<uint8_t>  HBUINT8;      \/* 8-bit unsigned integer. *\/\n+typedef IntType<int8_t>   HBINT8;       \/* 8-bit signed integer. *\/\n+typedef IntType<uint16_t> HBUINT16;     \/* 16-bit unsigned integer. *\/\n+typedef IntType<int16_t>  HBINT16;      \/* 16-bit signed integer. *\/\n+typedef IntType<uint32_t> HBUINT32;     \/* 32-bit unsigned integer. *\/\n+typedef IntType<int32_t>  HBINT32;      \/* 32-bit signed integer. *\/\n@@ -166,2 +178,2 @@\n-  operator const char* () const { return reinterpret_cast<const char *> (&this->v); }\n-  operator char* ()             { return reinterpret_cast<char *> (&this->v); }\n+  operator const char* () const { return reinterpret_cast<const char *> (this); }\n+  operator char* ()             { return reinterpret_cast<char *> (this); }\n@@ -436,2 +448,0 @@\n-  operator hb_array_t<      Type> ()       { return as_array (); }\n-  operator hb_array_t<const Type> () const { return as_array (); }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-open-type.hh","additions":29,"deletions":19,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-      for (const byte_str_t &_ : +it)\n+      for (const auto &_ : +it)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-cff-common.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -429,1 +429,1 @@\n-    extents->width = font->em_scalef_x (bounds.max.x.to_real () - bounds.min.x.to_real ());\n+    extents->width = font->em_scalef_x (bounds.max.x.to_real ()) - extents->x_bearing;\n@@ -439,1 +439,1 @@\n-    extents->height = font->em_scalef_y (bounds.min.y.to_real () - bounds.max.y.to_real ());\n+    extents->height = font->em_scalef_y (bounds.min.y.to_real ()) - extents->y_bearing;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-cff1-table.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-    extents->width = font->em_scalef_x (param.max_x.to_real () - param.min_x.to_real ());\n+    extents->width = font->em_scalef_x (param.max_x.to_real ()) - extents->x_bearing;\n@@ -140,1 +140,1 @@\n-    extents->height = font->em_scalef_y (param.min_y.to_real () - param.max_y.to_real ());\n+    extents->height = font->em_scalef_y (param.min_y.to_real ()) - extents->y_bearing;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-cff2-table.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    for (const hb_item_type<Iterator> _ : +it)\n+    for (const auto& _ : +it)\n@@ -134,1 +134,1 @@\n-    for (const hb_item_type<Iterator> _ : +it)\n+    for (const auto& _ : +it)\n@@ -173,1 +173,1 @@\n-    for (const hb_item_type<Iterator> _ : +it)\n+    for (const auto& _ : +it)\n@@ -699,1 +699,1 @@\n-    for (const hb_item_type<Iterator> _ : +it)\n+    for (const auto& _ : +it)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-cmap-table.hh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-    if (unlikely (!records->resize (records->length + 1)))\n-      return_trace (c->serializer->check_success (false));\n+    if (unlikely (!c->serializer->check_success (records->resize (records->length + 1))))\n+      return_trace (false);\n@@ -570,2 +570,2 @@\n-    if (unlikely (lookup.in_error ()))\n-      return c->serializer->check_success (false);\n+    if (unlikely (!c->serializer->propagate_error (lookup)))\n+      return false;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-color-cbdt-table.hh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-                                BaseGlyphRecord new_record;\n+                                BaseGlyphRecord new_record = {};\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-color-colr-table.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,3 +40,0 @@\n-#include <stdlib.h>\n-#include <string.h>\n-\n@@ -67,1 +64,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -198,1 +195,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -245,1 +242,1 @@\n- * Return value: true if data found, false otherwise.\n+ * Return value: %true if data found, %false otherwise.\n@@ -283,1 +280,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-color.cc","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -69,0 +69,2 @@\n+ * Flags that describe the properties of color palette.\n+ *\n@@ -98,0 +100,2 @@\n+ * @glyph: the glyph ID of the layer\n+ * @color_index: the palette color index of the layer\n@@ -103,2 +107,1 @@\n-typedef struct hb_ot_color_layer_t\n-{\n+typedef struct hb_ot_color_layer_t {\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-color.h","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -44,0 +44,7 @@\n+\/**\n+ * HB_MATH_GLYPH_PART_FLAG_EXTENDER:\n+ *\n+ * Use #HB_OT_MATH_GLYPH_PART_FLAG_EXTENDER instead.\n+ *\n+ * Deprecated: 2.5.1\n+ *\/\n@@ -74,0 +81,2 @@\n+ * Do not use.\n+ *\n@@ -81,0 +90,7 @@\n+ * @tag: axis tag\n+ * @name_id: axis name identifier\n+ * @min_value: minimum value of the axis\n+ * @default_value: default value of the axis\n+ * @max_value: maximum value of the axis\n+ *\n+ * Use #hb_ot_var_axis_info_t instead.\n@@ -85,2 +101,1 @@\n-typedef struct hb_ot_var_axis_t\n-{\n+typedef struct hb_ot_var_axis_t {\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-deprecated.h","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -309,0 +309,3 @@\n+ * @font: #hb_font_t to work upon\n+ *\n+ * Sets the font functions to use when working with @font.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-font.cc","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-font.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-    if (c->serializer->in_error ()) return_trace (false);\n+    if (unlikely (c->serializer->in_error ())) return_trace (false);\n@@ -947,1 +947,1 @@\n-          extents->width = font->em_scalef_x (max_x - min_x);\n+          extents->width = font->em_scalef_x (max_x) - extents->x_bearing;\n@@ -949,1 +949,1 @@\n-          extents->height = font->em_scalef_y (min_y - max_y);\n+          extents->height = font->em_scalef_y (min_y) - extents->y_bearing;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-glyf-table.hh","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  friend struct OffsetTable;\n+  friend struct OpenTypeOffsetTable;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-head-table.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -382,1 +382,5 @@\n-    if (!base_script.has_data ()) return false;\n+    if (!base_script.has_data ())\n+    {\n+      *coord = nullptr;\n+      return false;\n+    }\n@@ -387,1 +391,5 @@\n-      (this+baseTagList).bfind (baseline_tag, &tag_index);\n+      if (!(this+baseTagList).bfind (baseline_tag, &tag_index))\n+      {\n+        *coord = nullptr;\n+        return false;\n+      }\n@@ -401,1 +409,5 @@\n-    if (!base_script.has_data ()) return false;\n+    if (!base_script.has_data ())\n+    {\n+      *min_coord = *max_coord = nullptr;\n+      return false;\n+    }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout-base-table.hh","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1131,1 +1131,1 @@\n-    const hb_set_t *glyphset = c->plan->glyphset ();\n+    const hb_set_t *glyphset = c->plan->glyphset_gsub ();\n@@ -1254,0 +1254,1 @@\n+    const HBGlyphID *arr = glyphArray.arrayZ;\n@@ -1255,1 +1256,1 @@\n-      if (glyphs->has (glyphArray[i]))\n+      if (glyphs->has (arr[i]))\n@@ -1359,3 +1360,5 @@\n-    unsigned int count = rangeRecord.len;\n-    for (unsigned int i = 0; i < count; i++)\n-      if (rangeRecord[i].intersects (glyphs))\n+    \/* TODO(iter) Rewrite as dagger. *\/\n+    unsigned count = rangeRecord.len;\n+    const RangeRecord *arr = rangeRecord.arrayZ;\n+    for (unsigned i = 0; i < count; i++)\n+      if (arr[i].intersects (glyphs))\n@@ -1367,4 +1370,5 @@\n-    unsigned int i;\n-    unsigned int count = rangeRecord.len;\n-    for (i = 0; i < count; i++) {\n-      const RangeRecord &range = rangeRecord[i];\n+    \/* TODO(iter) Rewrite as dagger. *\/\n+    unsigned count = rangeRecord.len;\n+    const RangeRecord *arr = rangeRecord.arrayZ;\n+    for (unsigned i = 0; i < count; i++) {\n+      const RangeRecord &range = arr[i];\n@@ -1505,1 +1509,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1732,1 +1736,1 @@\n-    const hb_set_t &glyphset = *c->plan->_glyphset_gsub;\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1787,1 +1791,1 @@\n-  bool collect_class (set_t *glyphs, unsigned int klass) const\n+  bool collect_class (set_t *glyphs, unsigned klass) const\n@@ -1805,1 +1809,1 @@\n-  bool intersects_class (const hb_set_t *glyphs, unsigned int klass) const\n+  bool intersects_class (const hb_set_t *glyphs, uint16_t klass) const\n@@ -1818,0 +1822,4 @@\n+    \/* TODO Speed up, using set overlap first? *\/\n+    \/* TODO(iter) Rewrite as dagger. *\/\n+    HBUINT16 k {klass};\n+    const HBUINT16 *arr = classValue.arrayZ;\n@@ -1819,1 +1827,1 @@\n-      if (classValue[i] == klass && glyphs->has (startGlyph + i))\n+      if (arr[i] == k && glyphs->has (startGlyph + i))\n@@ -1901,1 +1909,1 @@\n-    const hb_set_t &glyphset = *c->plan->_glyphset_gsub;\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1964,1 +1972,3 @@\n-      if (rangeRecord[i].intersects (glyphs))\n+    {\n+      const auto& range = rangeRecord[i];\n+      if (range.intersects (glyphs) && range.value)\n@@ -1966,0 +1976,1 @@\n+    }\n@@ -1968,1 +1979,1 @@\n-  bool intersects_class (const hb_set_t *glyphs, unsigned int klass) const\n+  bool intersects_class (const hb_set_t *glyphs, uint16_t klass) const\n@@ -1987,0 +1998,4 @@\n+    \/* TODO Speed up, using set overlap first? *\/\n+    \/* TODO(iter) Rewrite as dagger. *\/\n+    HBUINT16 k {klass};\n+    const RangeRecord *arr = rangeRecord.arrayZ;\n@@ -1988,1 +2003,1 @@\n-      if (rangeRecord[i].value == klass && rangeRecord[i].intersects (glyphs))\n+      if (arr[i].value == k && arr[i].intersects (glyphs))\n@@ -2540,1 +2555,4 @@\n-    return_trace (bool (varstore_prime->dataSets));\n+\n+    return_trace (\n+        !c->serializer->in_error()\n+        && varstore_prime->dataSets);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout-common.hh","additions":37,"deletions":19,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -569,0 +569,20 @@\n+  bool subset (hb_subset_context_t *c,\n+               unsigned cols,\n+               const hb_map_t *klass_mapping) const\n+  {\n+    TRACE_SUBSET (this);\n+    auto *out = c->serializer->start_embed (*this);\n+\n+    auto indexes =\n+    + hb_range (rows * cols)\n+    | hb_filter ([=] (unsigned index) { return klass_mapping->has (index % cols); })\n+    ;\n+\n+    out->serialize (c->serializer,\n+                    (unsigned) rows,\n+                    this,\n+                    c->plan->layout_variation_idx_map,\n+                    indexes);\n+    return_trace (true);\n+  }\n+\n@@ -758,1 +778,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -873,1 +893,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1132,1 +1152,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1253,1 +1273,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1444,1 +1464,1 @@\n-    const hb_set_t &glyphset = *c->plan->_glyphset_gsub;\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1731,1 +1751,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1907,1 +1927,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -2028,4 +2048,31 @@\n-typedef OffsetListOf<LigatureAttach> LigatureArray;\n-                                        \/* Array of LigatureAttach\n-                                         * tables ordered by\n-                                         * LigatureCoverage Index *\/\n+\/* Array of LigatureAttach tables ordered by LigatureCoverage Index *\/\n+struct LigatureArray : OffsetListOf<LigatureAttach>\n+{\n+  template <typename Iterator,\n+            hb_requires (hb_is_iterator (Iterator))>\n+  bool subset (hb_subset_context_t *c,\n+               Iterator             coverage,\n+               unsigned             class_count,\n+               const hb_map_t      *klass_mapping) const\n+  {\n+    TRACE_SUBSET (this);\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n+\n+    auto *out = c->serializer->start_embed (this);\n+    if (unlikely (!c->serializer->extend_min (out)))  return_trace (false);\n+\n+    for (const auto _ : + hb_zip (coverage, *this)\n+                  | hb_filter (glyphset, hb_first))\n+    {\n+      auto *matrix = out->serialize_append (c->serializer);\n+      if (unlikely (!matrix)) return_trace (false);\n+\n+      matrix->serialize_subset (c,\n+                                _.second,\n+                                this,\n+                                class_count,\n+                                klass_mapping);\n+    }\n+    return_trace (this->len);\n+  }\n+};\n@@ -2133,2 +2180,50 @@\n-    \/\/ TODO(subset)\n-    return_trace (false);\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n+    const hb_map_t &glyph_map = *c->plan->glyph_map;\n+\n+    auto *out = c->serializer->start_embed (*this);\n+    if (unlikely (!c->serializer->extend_min (out))) return_trace (false);\n+    out->format = format;\n+\n+    hb_map_t klass_mapping;\n+    Markclass_closure_and_remap_indexes (this+markCoverage, this+markArray, glyphset, &klass_mapping);\n+\n+    if (!klass_mapping.get_population ()) return_trace (false);\n+    out->classCount = klass_mapping.get_population ();\n+\n+    auto mark_iter =\n+    + hb_zip (this+markCoverage, this+markArray)\n+    | hb_filter (glyphset, hb_first)\n+    ;\n+\n+    auto new_mark_coverage =\n+    + mark_iter\n+    | hb_map_retains_sorting (hb_first)\n+    | hb_map_retains_sorting (glyph_map)\n+    ;\n+\n+    if (!out->markCoverage.serialize (c->serializer, out)\n+                          .serialize (c->serializer, new_mark_coverage))\n+      return_trace (false);\n+\n+    out->markArray.serialize (c->serializer, out)\n+                  .serialize (c->serializer,\n+                              &klass_mapping,\n+                              c->plan->layout_variation_idx_map,\n+                              &(this+markArray),\n+                              + mark_iter\n+                              | hb_map (hb_second));\n+\n+    auto new_ligature_coverage =\n+    + hb_iter (this + ligatureCoverage)\n+    | hb_filter (glyphset)\n+    | hb_map_retains_sorting (glyph_map)\n+    ;\n+\n+    if (!out->ligatureCoverage.serialize (c->serializer, out)\n+                              .serialize (c->serializer, new_ligature_coverage))\n+      return_trace (false);\n+\n+    out->ligatureArray.serialize_subset (c, ligatureArray, this,\n+                                         hb_iter (this+ligatureCoverage), classCount, &klass_mapping);\n+\n+    return_trace (true);\n@@ -2167,0 +2262,1 @@\n+\n@@ -2291,1 +2387,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout-gpos-table.hh","additions":110,"deletions":14,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -450,1 +450,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -585,1 +585,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -685,1 +685,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -843,1 +843,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1061,1 +1061,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout-gsub-table.hh","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    if (done_lookups->in_error ())\n+    if (unlikely (done_lookups->in_error ()))\n@@ -149,1 +149,0 @@\n-    set_lookup_visited (lookup_index);\n@@ -166,1 +165,1 @@\n-    if (lookup_count++ > HB_MAX_LOOKUP_INDICES)\n+    if (unlikely (lookup_count++ > HB_MAX_LOOKUP_INDICES))\n@@ -169,1 +168,1 @@\n-    if (visited_lookups->in_error ())\n+    if (unlikely (visited_lookups->in_error ()))\n@@ -663,1 +662,1 @@\n-    buffer->replace_glyph (glyph_index);\n+    (void) buffer->replace_glyph (glyph_index);\n@@ -674,1 +673,1 @@\n-    buffer->replace_glyph (glyph_index);\n+    (void) buffer->replace_glyph (glyph_index);\n@@ -680,1 +679,1 @@\n-    buffer->output_glyph (glyph_index);\n+    (void) buffer->output_glyph (glyph_index);\n@@ -1047,1 +1046,1 @@\n-      buffer->next_glyph ();\n+      (void) buffer->next_glyph ();\n@@ -1191,1 +1190,1 @@\n-    if (idx == 0 && lookupRecord[i].lookupListIndex == c->lookup_index)\n+    if (unlikely (idx == 0 && lookupRecord[i].lookupListIndex == c->lookup_index))\n@@ -1229,1 +1228,2 @@\n-     *     and current-position + n instead.\n+     *     and current-position + n instead. Though, am not sure which\n+     *     one is better. Both cases have valid uses. Sigh.\n@@ -1275,1 +1275,1 @@\n-  buffer->move_to (end);\n+  (void) buffer->move_to (end);\n@@ -1392,1 +1392,2 @@\n-  void closure_lookups (hb_closure_lookups_context_t *c) const\n+  void closure_lookups (hb_closure_lookups_context_t *c,\n+                        ContextClosureLookupContext &lookup_context) const\n@@ -1395,0 +1396,1 @@\n+    if (!intersects (c->glyphs, lookup_context)) return;\n@@ -1524,1 +1526,2 @@\n-  void closure_lookups (hb_closure_lookups_context_t *c) const\n+  void closure_lookups (hb_closure_lookups_context_t *c,\n+                        ContextClosureLookupContext &lookup_context) const\n@@ -1527,2 +1530,0 @@\n-\n-    return\n@@ -1531,1 +1532,1 @@\n-    | hb_apply ([&] (const Rule &_) { _.closure_lookups (c); })\n+    | hb_apply ([&] (const Rule &_) { _.closure_lookups (c, lookup_context); })\n@@ -1650,1 +1651,8 @@\n-    + hb_iter (ruleSet)\n+    struct ContextClosureLookupContext lookup_context = {\n+      {intersects_glyph},\n+      nullptr\n+    };\n+\n+    + hb_zip (this+coverage, ruleSet)\n+    | hb_filter (*c->glyphs, hb_first)\n+    | hb_map (hb_second)\n@@ -1652,1 +1660,1 @@\n-    | hb_apply ([&] (const RuleSet &_) { _.closure_lookups (c); })\n+    | hb_apply ([&] (const RuleSet &_) { _.closure_lookups (c, lookup_context); })\n@@ -1703,1 +1711,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -1794,0 +1802,10 @@\n+    if (!(this+coverage).intersects (c->glyphs))\n+      return;\n+\n+    const ClassDef &class_def = this+classDef;\n+\n+    struct ContextClosureLookupContext lookup_context = {\n+      {intersects_class},\n+      &class_def\n+    };\n+\n@@ -1796,2 +1814,6 @@\n-    | hb_apply ([&] (const RuleSet &_) { _.closure_lookups (c); })\n-    ;\n+    | hb_enumerate\n+    | hb_filter ([&] (const hb_pair_t<unsigned, const RuleSet &> p)\n+    { return class_def.intersects_class (c->glyphs, p.first); })\n+    | hb_map (hb_second)\n+    | hb_apply ([&] (const RuleSet & _)\n+    { _.closure_lookups (c, lookup_context); });\n@@ -1862,3 +1884,3 @@\n-    unsigned non_zero_index = 0, index = 0;\n-    for (const hb_pair_t<unsigned, const OffsetTo<RuleSet>&> _ : + hb_enumerate (ruleSet)\n-                                                                 | hb_filter (klass_map, hb_first))\n+    int non_zero_index = 0, index = 0;\n+    for (const auto& _ : + hb_enumerate (ruleSet)\n+                         | hb_filter (klass_map, hb_first))\n@@ -1948,0 +1970,2 @@\n+    if (!intersects (c->glyphs))\n+      return;\n@@ -2013,0 +2037,1 @@\n+      \/* TODO(subset) This looks like should not be necessary to write this way. *\/\n@@ -2241,1 +2266,2 @@\n-  void closure_lookups (hb_closure_lookups_context_t *c) const\n+  void closure_lookups (hb_closure_lookups_context_t *c,\n+                        ChainContextClosureLookupContext &lookup_context) const\n@@ -2244,0 +2270,1 @@\n+    if (!intersects (c->glyphs, lookup_context)) return;\n@@ -2299,5 +2326,1 @@\n-    {\n-      HBUINT16 gid;\n-      gid = g;\n-      c->copy (gid);\n-    }\n+      c->copy ((HBUINT16) g);\n@@ -2331,3 +2354,0 @@\n-    HBUINT16 lookupCount;\n-    lookupCount = lookupRecord.len;\n-    if (!c->copy (lookupCount)) return_trace (nullptr);\n@@ -2335,1 +2355,10 @@\n-    for (unsigned i = 0; i < (unsigned) lookupCount; i++)\n+    HBUINT16* lookupCount = c->embed (&(lookupRecord.len));\n+    if (!lookupCount) return_trace (nullptr);\n+\n+    for (unsigned i = 0; i < lookupRecord.len; i++)\n+    {\n+      if (!lookup_map->has (lookupRecord[i].lookupListIndex))\n+      {\n+        (*lookupCount)--;\n+        continue;\n+      }\n@@ -2337,0 +2366,1 @@\n+    }\n@@ -2354,1 +2384,1 @@\n-      const hb_set_t &glyphset = *c->plan->glyphset ();\n+      const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -2427,1 +2457,2 @@\n-  void closure_lookups (hb_closure_lookups_context_t *c) const\n+  void closure_lookups (hb_closure_lookups_context_t *c,\n+                        ChainContextClosureLookupContext &lookup_context) const\n@@ -2431,1 +2462,0 @@\n-    return\n@@ -2434,1 +2464,1 @@\n-    | hb_apply ([&] (const ChainRule &_) { _.closure_lookups (c); })\n+    | hb_apply ([&] (const ChainRule &_) { _.closure_lookups (c, lookup_context); })\n@@ -2555,1 +2585,8 @@\n-    + hb_iter (ruleSet)\n+    struct ChainContextClosureLookupContext lookup_context = {\n+      {intersects_glyph},\n+      {nullptr, nullptr, nullptr}\n+    };\n+\n+    + hb_zip (this+coverage, ruleSet)\n+    | hb_filter (*c->glyphs, hb_first)\n+    | hb_map (hb_second)\n@@ -2557,1 +2594,1 @@\n-    | hb_apply ([&] (const ChainRuleSet &_) { _.closure_lookups (c); })\n+    | hb_apply ([&] (const ChainRuleSet &_) { _.closure_lookups (c, lookup_context); })\n@@ -2607,1 +2644,1 @@\n-    const hb_set_t &glyphset = *c->plan->glyphset ();\n+    const hb_set_t &glyphset = *c->plan->glyphset_gsub ();\n@@ -2704,0 +2741,14 @@\n+    if (!(this+coverage).intersects (c->glyphs))\n+      return;\n+\n+    const ClassDef &backtrack_class_def = this+backtrackClassDef;\n+    const ClassDef &input_class_def = this+inputClassDef;\n+    const ClassDef &lookahead_class_def = this+lookaheadClassDef;\n+\n+    struct ChainContextClosureLookupContext lookup_context = {\n+      {intersects_class},\n+      {&backtrack_class_def,\n+       &input_class_def,\n+       &lookahead_class_def}\n+    };\n+\n@@ -2706,1 +2757,6 @@\n-    | hb_apply ([&] (const ChainRuleSet &_) { _.closure_lookups (c); })\n+    | hb_enumerate\n+    | hb_filter([&] (unsigned klass)\n+    { return input_class_def.intersects_class (c->glyphs, klass); }, hb_first)\n+    | hb_map (hb_second)\n+    | hb_apply ([&] (const ChainRuleSet &_)\n+    { _.closure_lookups (c, lookup_context); })\n@@ -2782,5 +2838,0 @@\n-    out->backtrackClassDef.serialize_subset (c, backtrackClassDef, this, &backtrack_klass_map);\n-    if (unlikely (!c->serializer->check_success (!backtrack_klass_map.in_error ())))\n-      return_trace (false);\n-\n-    \/\/ subset inputClassDef based on glyphs survived in Coverage subsetting\n@@ -2788,4 +2839,0 @@\n-    out->inputClassDef.serialize_subset (c, inputClassDef, this, &input_klass_map);\n-    if (unlikely (!c->serializer->check_success (!input_klass_map.in_error ())))\n-      return_trace (false);\n-\n@@ -2793,0 +2840,4 @@\n+\n+    out->backtrackClassDef.serialize_subset (c, backtrackClassDef, this, &backtrack_klass_map);\n+    \/\/ TODO: subset inputClassDef based on glyphs survived in Coverage subsetting\n+    out->inputClassDef.serialize_subset (c, inputClassDef, this, &input_klass_map);\n@@ -2794,1 +2845,4 @@\n-    if (unlikely (!c->serializer->check_success (!lookahead_klass_map.in_error ())))\n+\n+    if (unlikely (!c->serializer->propagate_error (backtrack_klass_map,\n+                                                   input_klass_map,\n+                                                   lookahead_klass_map)))\n@@ -2797,1 +2851,1 @@\n-    unsigned non_zero_index = 0, index = 0;\n+    int non_zero_index = -1, index = 0;\n@@ -2800,0 +2854,1 @@\n+    auto last_non_zero = c->serializer->snapshot ();\n@@ -2815,0 +2870,2 @@\n+      {\n+        last_non_zero = c->serializer->snapshot ();\n@@ -2816,0 +2873,1 @@\n+      }\n@@ -2822,6 +2880,4 @@\n-    \/\/prune empty trailing ruleSets\n-    --index;\n-    while (index > non_zero_index)\n-    {\n-      out->ruleSet.pop ();\n-      index--;\n+    \/\/ prune empty trailing ruleSets\n+    if (index > non_zero_index) {\n+      c->serializer->revert (last_non_zero);\n+      out->ruleSet.len = non_zero_index + 1;\n@@ -2911,0 +2967,3 @@\n+    if (!intersects (c->glyphs))\n+      return;\n+\n@@ -2989,1 +3048,2 @@\n-    if (unlikely (!c->serializer->allocate_size<HBUINT16> (HBUINT16::static_size))) return_trace (false);\n+    if (unlikely (!c->serializer->allocate_size<HBUINT16> (HBUINT16::static_size)))\n+      return_trace (false);\n@@ -2991,3 +3051,5 @@\n-    + it\n-    | hb_apply (subset_offset_array (c, *out, base))\n-    ;\n+    for (auto& offset : it) {\n+      auto *o = out->serialize_append (c->serializer);\n+      if (unlikely (!o) || !o->serialize_subset (c, offset, base))\n+        return_trace (false);\n+    }\n@@ -2995,1 +3057,1 @@\n-    return_trace (out->len);\n+    return_trace (true);\n@@ -3116,0 +3178,18 @@\n+  bool subset (hb_subset_context_t *c) const\n+  {\n+    TRACE_SUBSET (this);\n+\n+    auto *out = c->serializer->start_embed (this);\n+    if (unlikely (!out || !c->serializer->extend_min (out))) return_trace (false);\n+\n+    out->format = format;\n+    out->extensionLookupType = extensionLookupType;\n+\n+    const auto& src_offset =\n+        reinterpret_cast<const LOffsetTo<typename T::SubTable> &> (extensionOffset);\n+    auto& dest_offset =\n+        reinterpret_cast<LOffsetTo<typename T::SubTable> &> (out->extensionOffset);\n+\n+    return_trace (dest_offset.serialize_subset (c, src_offset, this, get_type ()));\n+  }\n+\n@@ -3146,0 +3226,12 @@\n+  \/\/ Specialization of dispatch for subset. dispatch() normally just\n+  \/\/ dispatches to the sub table this points too, but for subset\n+  \/\/ we need to run subset on this subtable too.\n+  template <typename ...Ts>\n+  typename hb_subset_context_t::return_t dispatch (hb_subset_context_t *c, Ts&&... ds) const\n+  {\n+    switch (u.format) {\n+    case 1: return u.format1.subset (c);\n+    default: return c->default_return_value ();\n+    }\n+  }\n+\n@@ -3323,2 +3415,2 @@\n-  void closure_features (const hb_map_t *lookup_indexes, \/* IN *\/\n-                         hb_set_t       *feature_indexes \/* OUT *\/) const\n+  void prune_features (const hb_map_t *lookup_indices, \/* IN *\/\n+                       hb_set_t       *feature_indices \/* IN\/OUT *\/) const\n@@ -3326,2 +3418,14 @@\n-    unsigned int feature_count = hb_min (get_feature_count (), (unsigned) HB_MAX_FEATURES);\n-    for (unsigned i = 0; i < feature_count; i++)\n+#ifndef HB_NO_VAR\n+    \/\/ This is the set of feature indices which have alternate versions defined\n+    \/\/ if the FeatureVariation's table and the alternate version(s) intersect the\n+    \/\/ set of lookup indices.\n+    hb_set_t alternate_feature_indices;\n+    if (version.to_int () >= 0x00010001u)\n+      (this+featureVars).closure_features (lookup_indices, &alternate_feature_indices);\n+    if (unlikely (alternate_feature_indices.in_error())) {\n+      feature_indices->successful = false;\n+      return;\n+    }\n+#endif\n+\n+    for (unsigned i : feature_indices->iter())\n@@ -3330,3 +3434,3 @@\n-      if ((!f.featureParams.is_null ()) || f.intersects_lookup_indexes (lookup_indexes))\n-        feature_indexes->add (i);\n-    }\n+\n+      if (f.featureParams.is_null ()\n+          && !f.intersects_lookup_indexes (lookup_indices)\n@@ -3334,2 +3438,1 @@\n-    if (version.to_int () >= 0x00010001u)\n-      (this+featureVars).closure_features (lookup_indexes, feature_indexes);\n+          && !alternate_feature_indices.has (i)\n@@ -3337,0 +3440,3 @@\n+          )\n+        feature_indices->del (i);\n+    }\n@@ -3381,0 +3487,1 @@\n+      {\n@@ -3382,0 +3489,3 @@\n+        this->table.destroy ();\n+        this->table = hb_blob_get_empty ();\n+      }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout-gsubgpos.hh","additions":183,"deletions":73,"binary":false,"changes":256,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -95,1 +95,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -115,1 +115,1 @@\n- * Return value: true is data found, false otherwise\n+ * Return value: %true is data found, %false otherwise\n@@ -271,1 +271,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -325,1 +325,1 @@\n- * @point_count: (inout) (allow-none): Input = the maximum number of attachment points to return;\n+ * @point_count: (inout) (optional): Input = the maximum number of attachment points to return;\n@@ -353,1 +353,1 @@\n- * @caret_count: (inout) (allow-none): Input = the maximum number of caret positions to return;\n+ * @caret_count: (inout) (optional): Input = the maximum number of caret positions to return;\n@@ -413,1 +413,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -415,1 +415,1 @@\n- * @script_count: (inout) (allow-none): Input = the maximum number of script tags to return;\n+ * @script_count: (inout) (optional): Input = the maximum number of script tags to return;\n@@ -440,1 +440,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -447,1 +447,1 @@\n- * Return value: true if the script is found, false otherwise\n+ * Return value: %true if the script is found, %false otherwise\n@@ -484,1 +484,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -507,1 +507,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -510,2 +510,13 @@\n- * @script_index: (out): The index of the requested script\n- * @chosen_script: (out): #hb_tag_t of the requested script\n+ * @script_index: (out) (optional): The index of the requested script\n+ * @chosen_script: (out) (optional): #hb_tag_t of the requested script\n+ *\n+ * Selects an OpenType script for @table_tag from the @script_tags array.\n+ *\n+ * If the table does not have any of the requested scripts, then `DFLT`,\n+ * `dflt`, and `latn` tags are tried in that order. If the table still does not\n+ * have any of these scripts, @script_index and @chosen_script are set to\n+ * #HB_OT_LAYOUT_NO_SCRIPT_INDEX.\n+ *\n+ * Return value:\n+ * %true if one of the requested scripts is selected, %false if a fallback\n+ * script is selected or if no scripts are selected.\n@@ -569,1 +580,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -571,1 +582,1 @@\n- * @feature_count: (inout) (allow-none): Input = the maximum number of feature tags to return;\n+ * @feature_count: (inout) (optional): Input = the maximum number of feature tags to return;\n@@ -594,1 +605,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -601,1 +612,1 @@\n- * Return value: true if the feature is found, false otherwise\n+ * Return value: %true if the feature is found, %false otherwise\n@@ -629,1 +640,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -632,1 +643,1 @@\n- * @language_count: (inout) (allow-none): Input = the maximum number of language tags to return;\n+ * @language_count: (inout) (optional): Input = the maximum number of language tags to return;\n@@ -658,1 +669,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -666,1 +677,1 @@\n- * Return value: true if the language tag is found, false otherwise\n+ * Return value: %true if the language tag is found, %false otherwise\n@@ -691,1 +702,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -700,1 +711,1 @@\n- * Return value: true if the language tag is found, false otherwise\n+ * Return value: %true if the language tag is found, %false otherwise\n@@ -734,1 +745,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -742,1 +753,1 @@\n- * Return value: true if the feature is found, false otherwise\n+ * Return value: %true if the feature is found, %false otherwise\n@@ -764,1 +775,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -773,1 +784,1 @@\n- * Return value: true if the feature is found, false otherwise\n+ * Return value: %true if the feature is found, %false otherwise\n@@ -799,1 +810,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -803,1 +814,1 @@\n- * @feature_count: (inout) (allow-none): Input = the maximum number of feature tags to return;\n+ * @feature_count: (inout) (optional): Input = the maximum number of feature tags to return;\n@@ -830,1 +841,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -834,1 +845,1 @@\n- * @feature_count: (inout) (allow-none): Input = the maximum number of feature tags to return;\n+ * @feature_count: (inout) (optional): Input = the maximum number of feature tags to return;\n@@ -871,1 +882,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -880,1 +891,1 @@\n- * Return value: true if the feature is found, false otherwise\n+ * Return value: %true if the feature is found, %false otherwise\n@@ -913,1 +924,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -916,1 +927,1 @@\n- * @lookup_count: (inout) (allow-none): Input = the maximum number of lookups to return;\n+ * @lookup_count: (inout) (optional): Input = the maximum number of lookups to return;\n@@ -947,1 +958,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1104,1 +1115,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1155,1 +1166,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1194,1 +1205,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1199,1 +1210,1 @@\n- * @glyphs_output: (out): Array of glyphs that would be the substitued output of the lookup\n+ * @glyphs_output: (out): Array of glyphs that would be the substituted output of the lookup\n@@ -1246,1 +1257,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1248,1 +1259,1 @@\n- * @num_coords: The number of variation coorinates\n+ * @num_coords: The number of variation coordinates\n@@ -1271,1 +1282,1 @@\n- * @table_tag: HB_OT_TAG_GSUB or HB_OT_TAG_GPOS\n+ * @table_tag: #HB_OT_TAG_GSUB or #HB_OT_TAG_GPOS\n@@ -1275,1 +1286,1 @@\n- * @lookup_count: (inout) (allow-none): Input = the maximum number of lookups to return;\n+ * @lookup_count: (inout) (optional): Input = the maximum number of lookups to return;\n@@ -1313,1 +1324,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -1334,1 +1345,1 @@\n- * Return value: true if a substitution would be triggered, false otherwise\n+ * Return value: %true if a substitution would be triggered, %false otherwise\n@@ -1491,1 +1502,3 @@\n- * Return value: true if the face has GPOS data, false otherwise\n+ * Tests whether the specified face includes any GPOS positioning.\n+ *\n+ * Return value: %true if the face has GPOS data, %false otherwise\n@@ -1564,1 +1577,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -1613,1 +1626,1 @@\n- * @label_id: (out) (allow-none): The ‘name’ table name ID that specifies a string\n+ * @label_id: (out) (optional): The ‘name’ table name ID that specifies a string\n@@ -1615,1 +1628,1 @@\n- * @tooltip_id: (out) (allow-none): The ‘name’ table name ID that specifies a string\n+ * @tooltip_id: (out) (optional): The ‘name’ table name ID that specifies a string\n@@ -1618,1 +1631,1 @@\n- * @sample_id: (out) (allow-none): The ‘name’ table name ID that specifies sample text\n+ * @sample_id: (out) (optional): The ‘name’ table name ID that specifies sample text\n@@ -1620,2 +1633,2 @@\n- * @num_named_parameters: (out) (allow-none):  Number of named parameters. (May be zero.)\n- * @first_param_id: (out) (allow-none): The first ‘name’ table name ID used to specify\n+ * @num_named_parameters: (out) (optional):  Number of named parameters. (May be zero.)\n+ * @first_param_id: (out) (optional): The first ‘name’ table name ID used to specify\n@@ -1628,1 +1641,1 @@\n- * Return value: true if data found, false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -1688,1 +1701,1 @@\n- * @char_count: (inout) (allow-none): Input = the maximum number of characters to return;\n+ * @char_count: (inout) (optional): Input = the maximum number of characters to return;\n@@ -1772,1 +1785,1 @@\n-      buffer->next_glyph ();\n+      (void) buffer->next_glyph ();\n@@ -1884,1 +1897,1 @@\n-  (void)buffer->message (font, \"end table GSUB\");\n+  (void) buffer->message (font, \"end table GSUB\");\n@@ -1892,1 +1905,1 @@\n-  (void)buffer->message (font, \"end table GPOS\");\n+  (void) buffer->message (font, \"end table GPOS\");\n@@ -1910,1 +1923,1 @@\n- * @language_tag: language tag.\n+ * @language_tag: language tag, currently unused.\n@@ -1967,1 +1980,1 @@\n- * @alternate_count: (inout) (allow-none): Input = the maximum number of alternate glyphs to return;\n+ * @alternate_count: (inout) (optional): Input = the maximum number of alternate glyphs to return;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout.cc","additions":74,"deletions":61,"binary":false,"changes":135,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -41,0 +41,5 @@\n+\/**\n+ * HB_OT_TAG_BASE:\n+ *\n+ * OpenType [Baseline Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/base).\n+ *\/\n@@ -42,0 +47,5 @@\n+\/**\n+ * HB_OT_TAG_GDEF:\n+ *\n+ * OpenType [Glyph Definition Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/gdef).\n+ *\/\n@@ -43,0 +53,5 @@\n+\/**\n+ * HB_OT_TAG_GSUB:\n+ *\n+ * OpenType [Glyph Substitution Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/gsub).\n+ *\/\n@@ -44,0 +59,5 @@\n+\/**\n+ * HB_OT_TAG_GPOS:\n+ *\n+ * OpenType [Glyph Positioning Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/gpos).\n+ *\/\n@@ -45,0 +65,5 @@\n+\/**\n+ * HB_OT_TAG_JSTF:\n+ *\n+ * OpenType [Justification Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/jstf).\n+ *\/\n@@ -52,0 +77,6 @@\n+\/**\n+ * HB_OT_TAG_DEFAULT_SCRIPT:\n+ *\n+ * OpenType script tag, `DFLT`, for features that are not script-specific.\n+ *\n+ *\/\n@@ -53,0 +84,6 @@\n+\/**\n+ * HB_OT_TAG_DEFAULT_LANGUAGE:\n+ *\n+ * OpenType language tag, `dflt`. Not a valid language tag, but some fonts\n+ * mistakenly use it.\n+ *\/\n@@ -58,0 +95,2 @@\n+ * Maximum number of OpenType tags that can correspond to a give #hb_script_t.\n+ *\n@@ -64,0 +103,2 @@\n+ * Maximum number of OpenType tags that can correspond to a give #hb_language_t.\n+ *\n@@ -147,0 +188,5 @@\n+\/**\n+ * HB_OT_LAYOUT_NO_SCRIPT_INDEX:\n+ *\n+ * Special value for script index indicating unsupported script.\n+ *\/\n@@ -148,0 +194,5 @@\n+\/**\n+ * HB_OT_LAYOUT_NO_FEATURE_INDEX:\n+ *\n+ * Special value for feature index indicating unsupported feature.\n+ *\/\n@@ -149,0 +200,5 @@\n+\/**\n+ * HB_OT_LAYOUT_DEFAULT_LANGUAGE_INDEX:\n+ *\n+ * Special value for language index indicating default or unsupported language.\n+ *\/\n@@ -150,0 +206,5 @@\n+\/**\n+ * HB_OT_LAYOUT_NO_VARIATIONS_INDEX:\n+ *\n+ * Special value for variations index indicating unsupported variation.\n+ *\/\n@@ -436,1 +497,1 @@\n- * Baseline tags from https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/baselinetags\n+ * Baseline tags from [Baseline Tags](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/baselinetags) registry.\n@@ -449,0 +510,1 @@\n+  \/*< private >*\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout.h","additions":64,"deletions":2,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -318,0 +318,1 @@\n+static inline bool _hb_glyph_info_substituted (const hb_glyph_info_t *info);\n@@ -323,1 +324,1 @@\n-         !_hb_glyph_info_ligated (info);\n+         !_hb_glyph_info_substituted (info);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-layout.hh","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -143,1 +143,2 @@\n-    if (unlikely (stage == UINT_MAX)) {\n+    if (unlikely (stage > stages[table_index].length))\n+    {\n@@ -148,1 +149,0 @@\n-    assert (stage <= stages[table_index].length);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-map.hh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- * Return value: true if the table is found, false otherwise\n+ * Return value: %true if the table is found, %false otherwise\n@@ -145,1 +145,1 @@\n- * Return value: true if the glyph is an extended shape, false otherwise\n+ * Return value: %true if the glyph is an extended shape, %false otherwise\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-math.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -43,0 +43,7 @@\n+\/**\n+ * HB_OT_TAG_MATH:\n+ *\n+ * OpenType [Mathematical Typesetting Table](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/math).\n+ *\n+ * Since: 1.3.3\n+ *\/\n@@ -45,1 +52,8 @@\n-\/* Use with hb_buffer_set_script() for math shaping. *\/\n+\/**\n+ * HB_OT_MATH_SCRIPT:\n+ *\n+ * OpenType script tag for math shaping, for use with\n+ * Use with hb_buffer_set_script().\n+ *\n+ * Since: 1.3.3\n+ *\/\n@@ -52,0 +66,56 @@\n+ * @HB_OT_MATH_CONSTANT_SCRIPT_PERCENT_SCALE_DOWN: scriptPercentScaleDown\n+ * @HB_OT_MATH_CONSTANT_SCRIPT_SCRIPT_PERCENT_SCALE_DOWN: scriptScriptPercentScaleDown\n+ * @HB_OT_MATH_CONSTANT_DELIMITED_SUB_FORMULA_MIN_HEIGHT: delimitedSubFormulaMinHeight\n+ * @HB_OT_MATH_CONSTANT_DISPLAY_OPERATOR_MIN_HEIGHT: displayOperatorMinHeight\n+ * @HB_OT_MATH_CONSTANT_MATH_LEADING: mathLeading\n+ * @HB_OT_MATH_CONSTANT_AXIS_HEIGHT: axisHeight\n+ * @HB_OT_MATH_CONSTANT_ACCENT_BASE_HEIGHT: accentBaseHeight\n+ * @HB_OT_MATH_CONSTANT_FLATTENED_ACCENT_BASE_HEIGHT: flattenedAccentBaseHeight\n+ * @HB_OT_MATH_CONSTANT_SUBSCRIPT_SHIFT_DOWN: subscriptShiftDown\n+ * @HB_OT_MATH_CONSTANT_SUBSCRIPT_TOP_MAX: subscriptTopMax\n+ * @HB_OT_MATH_CONSTANT_SUBSCRIPT_BASELINE_DROP_MIN: subscriptBaselineDropMin\n+ * @HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP: superscriptShiftUp\n+ * @HB_OT_MATH_CONSTANT_SUPERSCRIPT_SHIFT_UP_CRAMPED: superscriptShiftUpCramped\n+ * @HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MIN: superscriptBottomMin\n+ * @HB_OT_MATH_CONSTANT_SUPERSCRIPT_BASELINE_DROP_MAX: superscriptBaselineDropMax\n+ * @HB_OT_MATH_CONSTANT_SUB_SUPERSCRIPT_GAP_MIN: subSuperscriptGapMin\n+ * @HB_OT_MATH_CONSTANT_SUPERSCRIPT_BOTTOM_MAX_WITH_SUBSCRIPT: superscriptBottomMaxWithSubscript\n+ * @HB_OT_MATH_CONSTANT_SPACE_AFTER_SCRIPT: spaceAfterScript\n+ * @HB_OT_MATH_CONSTANT_UPPER_LIMIT_GAP_MIN: upperLimitGapMin\n+ * @HB_OT_MATH_CONSTANT_UPPER_LIMIT_BASELINE_RISE_MIN: upperLimitBaselineRiseMin\n+ * @HB_OT_MATH_CONSTANT_LOWER_LIMIT_GAP_MIN: lowerLimitGapMin\n+ * @HB_OT_MATH_CONSTANT_LOWER_LIMIT_BASELINE_DROP_MIN: lowerLimitBaselineDropMin\n+ * @HB_OT_MATH_CONSTANT_STACK_TOP_SHIFT_UP: stackTopShiftUp\n+ * @HB_OT_MATH_CONSTANT_STACK_TOP_DISPLAY_STYLE_SHIFT_UP: stackTopDisplayStyleShiftUp\n+ * @HB_OT_MATH_CONSTANT_STACK_BOTTOM_SHIFT_DOWN: stackBottomShiftDown\n+ * @HB_OT_MATH_CONSTANT_STACK_BOTTOM_DISPLAY_STYLE_SHIFT_DOWN: stackBottomDisplayStyleShiftDown\n+ * @HB_OT_MATH_CONSTANT_STACK_GAP_MIN: stackGapMin\n+ * @HB_OT_MATH_CONSTANT_STACK_DISPLAY_STYLE_GAP_MIN: stackDisplayStyleGapMin\n+ * @HB_OT_MATH_CONSTANT_STRETCH_STACK_TOP_SHIFT_UP: stretchStackTopShiftUp\n+ * @HB_OT_MATH_CONSTANT_STRETCH_STACK_BOTTOM_SHIFT_DOWN: stretchStackBottomShiftDown\n+ * @HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_ABOVE_MIN: stretchStackGapAboveMin\n+ * @HB_OT_MATH_CONSTANT_STRETCH_STACK_GAP_BELOW_MIN: stretchStackGapBelowMin\n+ * @HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_SHIFT_UP: fractionNumeratorShiftUp\n+ * @HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_DISPLAY_STYLE_SHIFT_UP: fractionNumeratorDisplayStyleShiftUp\n+ * @HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_SHIFT_DOWN: fractionDenominatorShiftDown\n+ * @HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_DISPLAY_STYLE_SHIFT_DOWN: fractionDenominatorDisplayStyleShiftDown\n+ * @HB_OT_MATH_CONSTANT_FRACTION_NUMERATOR_GAP_MIN: fractionNumeratorGapMin\n+ * @HB_OT_MATH_CONSTANT_FRACTION_NUM_DISPLAY_STYLE_GAP_MIN: fractionNumDisplayStyleGapMin\n+ * @HB_OT_MATH_CONSTANT_FRACTION_RULE_THICKNESS: fractionRuleThickness\n+ * @HB_OT_MATH_CONSTANT_FRACTION_DENOMINATOR_GAP_MIN: fractionDenominatorGapMin\n+ * @HB_OT_MATH_CONSTANT_FRACTION_DENOM_DISPLAY_STYLE_GAP_MIN: fractionDenomDisplayStyleGapMin\n+ * @HB_OT_MATH_CONSTANT_SKEWED_FRACTION_HORIZONTAL_GAP: skewedFractionHorizontalGap\n+ * @HB_OT_MATH_CONSTANT_SKEWED_FRACTION_VERTICAL_GAP: skewedFractionVerticalGap\n+ * @HB_OT_MATH_CONSTANT_OVERBAR_VERTICAL_GAP: overbarVerticalGap\n+ * @HB_OT_MATH_CONSTANT_OVERBAR_RULE_THICKNESS: overbarRuleThickness\n+ * @HB_OT_MATH_CONSTANT_OVERBAR_EXTRA_ASCENDER: overbarExtraAscender\n+ * @HB_OT_MATH_CONSTANT_UNDERBAR_VERTICAL_GAP: underbarVerticalGap\n+ * @HB_OT_MATH_CONSTANT_UNDERBAR_RULE_THICKNESS: underbarRuleThickness\n+ * @HB_OT_MATH_CONSTANT_UNDERBAR_EXTRA_DESCENDER: underbarExtraDescender\n+ * @HB_OT_MATH_CONSTANT_RADICAL_VERTICAL_GAP: radicalVerticalGap\n+ * @HB_OT_MATH_CONSTANT_RADICAL_DISPLAY_STYLE_VERTICAL_GAP: radicalDisplayStyleVerticalGap\n+ * @HB_OT_MATH_CONSTANT_RADICAL_RULE_THICKNESS: radicalRuleThickness\n+ * @HB_OT_MATH_CONSTANT_RADICAL_EXTRA_ASCENDER: radicalExtraAscender\n+ * @HB_OT_MATH_CONSTANT_RADICAL_KERN_BEFORE_DEGREE: radicalKernBeforeDegree\n+ * @HB_OT_MATH_CONSTANT_RADICAL_KERN_AFTER_DEGREE: radicalKernAfterDegree\n+ * @HB_OT_MATH_CONSTANT_RADICAL_DEGREE_BOTTOM_RAISE_PERCENT: radicalDegreeBottomRaisePercent\n@@ -53,2 +123,3 @@\n- * The 'MATH' table constants specified at\n- * https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/math\n+ * The 'MATH' table constants, refer to\n+ * [OpenType documentation](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/math#mathconstants-table)\n+ * For more explanations.\n@@ -119,0 +190,4 @@\n+ * @HB_OT_MATH_KERN_TOP_RIGHT: The top right corner of the glyph.\n+ * @HB_OT_MATH_KERN_TOP_LEFT: The top left corner of the glyph.\n+ * @HB_OT_MATH_KERN_BOTTOM_RIGHT: The bottom right corner of the glyph.\n+ * @HB_OT_MATH_KERN_BOTTOM_LEFT: The bottom left corner of the glyph.\n@@ -148,0 +223,2 @@\n+ * @HB_OT_MATH_GLYPH_PART_FLAG_EXTENDER: This is an extender glyph part that\n+ * can be repeated to reach the desired length.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-math.h","additions":81,"deletions":4,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @entries_count:(inout) (allow-none): buffer size as input, filled size as output\n+ * @entries_count:(inout) (optional): buffer size as input, filled size as output\n@@ -47,0 +47,2 @@\n+ * Fetches all available feature types.\n+ *\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-meta.cc","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -57,0 +57,1 @@\n+  \/*< private >*\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-meta.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,9 @@\n+\/**\n+ * SECTION:hb-ot-metrics\n+ * @title: hb-ot-metrics\n+ * @short_description: OpenType Metrics\n+ * @include: hb-ot.h\n+ *\n+ * Functions for fetching metrics from fonts.\n+ **\/\n+\n@@ -113,1 +122,1 @@\n- * @font: a #hb_font_t object.\n+ * @font: an #hb_font_t object.\n@@ -117,1 +126,1 @@\n- * It fetches metrics value corresponding to a given tag from a font.\n+ * Fetches metrics value corresponding to @metrics_tag from @font.\n@@ -187,2 +196,2 @@\n- * @font:\n- * @metrics_tag:\n+ * @font: an #hb_font_t object.\n+ * @metrics_tag: tag of metrics value you like to fetch.\n@@ -190,1 +199,4 @@\n- * Returns:\n+ * Fetches metrics value corresponding to @metrics_tag from @font with the\n+ * current font variation settings applied.\n+ *\n+ * Returns: The requested metric value.\n@@ -202,2 +214,5 @@\n- * @font:\n- * @metrics_tag:\n+ * @font: an #hb_font_t object.\n+ * @metrics_tag: tag of metrics value you like to fetch.\n+ *\n+ * Fetches horizontal metrics value corresponding to @metrics_tag from @font\n+ * with the current font variation settings applied.\n@@ -205,1 +220,1 @@\n- * Returns:\n+ * Returns: The requested metric value.\n@@ -217,2 +232,5 @@\n- * @font:\n- * @metrics_tag:\n+ * @font: an #hb_font_t object.\n+ * @metrics_tag: tag of metrics value you like to fetch.\n+ *\n+ * Fetches vertical metrics value corresponding to @metrics_tag from @font with\n+ * the current font variation settings applied.\n@@ -220,1 +238,1 @@\n- * Returns:\n+ * Returns: The requested metric value.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-metrics.cc","additions":29,"deletions":11,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -69,1 +69,2 @@\n- * From https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/mvar#value-tags\n+ * Metric tags corresponding to [MVAR Value\n+ * Tags](https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/mvar#value-tags)\n@@ -103,0 +104,1 @@\n+  \/*< private >*\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-metrics.h","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @num_entries: (out) (allow-none): number of returned entries.\n+ * @num_entries: (out) (optional): number of returned entries.\n@@ -153,1 +153,1 @@\n- * @text_size: (inout) (allow-none): input size of @text buffer, and output size of\n+ * @text_size: (inout) (optional): input size of @text buffer, and output size of\n@@ -180,1 +180,1 @@\n- * @text_size: (inout) (allow-none): input size of @text buffer, and output size of\n+ * @text_size: (inout) (optional): input size of @text buffer, and output size of\n@@ -206,1 +206,1 @@\n- * @text_size: (inout) (allow-none): input size of @text buffer, and output size of\n+ * @text_size: (inout) (optional): input size of @text buffer, and output size of\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-name.cc","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -91,2 +91,1 @@\n-typedef struct hb_ot_name_entry_t\n-{\n+typedef struct hb_ot_name_entry_t {\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-name.h","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -186,2 +186,1 @@\n-      if (c->plan->unicodes->is_empty ()) unicodes.clear ();\n-      else hb_set_set (&unicodes, c->plan->unicodes);\n+      hb_set_set (&unicodes, c->plan->unicodes);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-os2-table.hh","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,1 +90,0 @@\n-    if (c->serializer->in_error () || c->serializer->ran_out_of_room) return_trace (false);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-post-table.hh","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-        \/* ASSERT_STATIC_EXPR_ZERO (len(FromGlyphs) == len(ToGlyphs)) *\/\n+        \/* static_assert_expr (len(FromGlyphs) == len(ToGlyphs)) *\/\n@@ -154,1 +154,1 @@\n-        \/* ASSERT_STATIC_EXPR_ZERO (len(FirstGlyphs) == len(LigatureSetOffsets)) *\/\n+        \/* static_assert_expr (len(FirstGlyphs) == len(LigatureSetOffsets)) *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-arabic-win1256.hh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-#define arabic_shaping_action() complex_var_u8_0() \/* arabic shaping action *\/\n+#define arabic_shaping_action() complex_var_u8_auxiliary() \/* arabic shaping action *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-arabic.cc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-#define hangul_shaping_feature() complex_var_u8_0() \/* hangul jamo shaping feature *\/\n+#define hangul_shaping_feature() complex_var_u8_auxiliary() \/* hangul jamo shaping feature *\/\n@@ -208,1 +208,1 @@\n-        buffer->next_glyph ();\n+        if (unlikely (!buffer->next_glyph ())) break;\n@@ -221,2 +221,2 @@\n-      if (!(buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE) &&\n-          font->has_glyph (0x25CCu))\n+        if (!(buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE) &&\n+            font->has_glyph (0x25CCu))\n@@ -225,1 +225,2 @@\n-          if (!is_zero_width_char (font, u)) {\n+          if (!is_zero_width_char (font, u))\n+          {\n@@ -228,1 +229,2 @@\n-          } else {\n+          } else\n+          {\n@@ -232,1 +234,1 @@\n-          buffer->replace_glyphs (1, 2, chars);\n+          (void) buffer->replace_glyphs (1, 2, chars);\n@@ -237,1 +239,1 @@\n-          buffer->next_glyph ();\n+          (void) buffer->next_glyph ();\n@@ -274,3 +276,1 @@\n-            buffer->replace_glyphs (t ? 3 : 2, 1, &s);\n-            if (unlikely (!buffer->successful))\n-              return;\n+            (void) buffer->replace_glyphs (t ? 3 : 2, 1, &s);\n@@ -288,1 +288,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -290,1 +290,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -294,1 +294,1 @@\n-          buffer->next_glyph ();\n+          (void) buffer->next_glyph ();\n@@ -299,0 +299,2 @@\n+        if (unlikely (!buffer->successful))\n+          break;\n@@ -324,3 +326,1 @@\n-          buffer->replace_glyphs (2, 1, &new_s);\n-          if (unlikely (!buffer->successful))\n-            return;\n+          (void) buffer->replace_glyphs (2, 1, &new_s);\n@@ -350,1 +350,1 @@\n-          buffer->replace_glyphs (1, s_len, decomposed);\n+          (void) buffer->replace_glyphs (1, s_len, decomposed);\n@@ -357,1 +357,1 @@\n-            buffer->next_glyph ();\n+            (void) buffer->next_glyph ();\n@@ -360,1 +360,0 @@\n-\n@@ -362,1 +361,1 @@\n-            return;\n+            break;\n@@ -386,1 +385,1 @@\n-        \/* We didn't decompose the S, so just advance past it. *\/\n+        \/* We didn't decompose the S, so just advance past it and fall through. *\/\n@@ -388,2 +387,0 @@\n-        buffer->next_glyph ();\n-        continue;\n@@ -396,1 +393,1 @@\n-    buffer->next_glyph ();\n+    (void) buffer->next_glyph ();\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-hangul.cc","additions":22,"deletions":25,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -34,0 +34,9 @@\n+enum indic_syllable_type_t {\n+  indic_consonant_syllable,\n+  indic_vowel_syllable,\n+  indic_standalone_cluster,\n+  indic_symbol_cluster,\n+  indic_broken_cluster,\n+  indic_non_indic_cluster,\n+};\n+\n@@ -35,1 +44,21 @@\n-#line 36 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 45 \"hb-ot-shape-complex-indic-machine.hh\"\n+#define indic_syllable_machine_ex_A 10u\n+#define indic_syllable_machine_ex_C 1u\n+#define indic_syllable_machine_ex_CM 17u\n+#define indic_syllable_machine_ex_CS 19u\n+#define indic_syllable_machine_ex_DOTTEDCIRCLE 12u\n+#define indic_syllable_machine_ex_H 4u\n+#define indic_syllable_machine_ex_M 7u\n+#define indic_syllable_machine_ex_N 3u\n+#define indic_syllable_machine_ex_PLACEHOLDER 11u\n+#define indic_syllable_machine_ex_RS 13u\n+#define indic_syllable_machine_ex_Ra 16u\n+#define indic_syllable_machine_ex_Repha 15u\n+#define indic_syllable_machine_ex_SM 8u\n+#define indic_syllable_machine_ex_Symbol 18u\n+#define indic_syllable_machine_ex_V 2u\n+#define indic_syllable_machine_ex_ZWJ 6u\n+#define indic_syllable_machine_ex_ZWNJ 5u\n+\n+\n+#line 65 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -387,1 +416,1 @@\n-#line 36 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 46 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -391,1 +420,1 @@\n-#line 93 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 102 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -398,1 +427,1 @@\n-      info[i].syllable() = (syllable_serial << 4) | indic_##syllable_type; \\\n+      info[i].syllable() = (syllable_serial << 4) | syllable_type; \\\n@@ -410,1 +439,1 @@\n-#line 411 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 440 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -418,1 +447,1 @@\n-#line 113 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 122 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -426,1 +455,1 @@\n-#line 427 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 456 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -440,1 +469,1 @@\n-#line 441 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 470 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -463,2 +492,2 @@\n-#line 89 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p+1;{ found_syllable (non_indic_cluster); }}\n+#line 98 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p+1;{ found_syllable (indic_non_indic_cluster); }}\n@@ -467,2 +496,2 @@\n-#line 84 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (consonant_syllable); }}\n+#line 93 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_consonant_syllable); }}\n@@ -471,2 +500,2 @@\n-#line 85 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (vowel_syllable); }}\n+#line 94 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_vowel_syllable); }}\n@@ -475,2 +504,2 @@\n-#line 86 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (standalone_cluster); }}\n+#line 95 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_standalone_cluster); }}\n@@ -479,2 +508,2 @@\n-#line 87 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (symbol_cluster); }}\n+#line 96 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_symbol_cluster); }}\n@@ -483,2 +512,2 @@\n-#line 88 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (broken_cluster); }}\n+#line 97 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_broken_cluster); }}\n@@ -487,2 +516,2 @@\n-#line 89 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {te = p;p--;{ found_syllable (non_indic_cluster); }}\n+#line 98 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {te = p;p--;{ found_syllable (indic_non_indic_cluster); }}\n@@ -491,2 +520,2 @@\n-#line 84 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (consonant_syllable); }}\n+#line 93 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {{p = ((te))-1;}{ found_syllable (indic_consonant_syllable); }}\n@@ -495,2 +524,2 @@\n-#line 85 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (vowel_syllable); }}\n+#line 94 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {{p = ((te))-1;}{ found_syllable (indic_vowel_syllable); }}\n@@ -499,2 +528,2 @@\n-#line 86 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (standalone_cluster); }}\n+#line 95 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {{p = ((te))-1;}{ found_syllable (indic_standalone_cluster); }}\n@@ -503,2 +532,2 @@\n-#line 87 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (symbol_cluster); }}\n+#line 96 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {{p = ((te))-1;}{ found_syllable (indic_symbol_cluster); }}\n@@ -507,2 +536,2 @@\n-#line 88 \"hb-ot-shape-complex-indic-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (broken_cluster); }}\n+#line 97 \"hb-ot-shape-complex-indic-machine.rl\"\n+        {{p = ((te))-1;}{ found_syllable (indic_broken_cluster); }}\n@@ -514,1 +543,1 @@\n-        {{p = ((te))-1;} found_syllable (consonant_syllable); }\n+        {{p = ((te))-1;} found_syllable (indic_consonant_syllable); }\n@@ -517,1 +546,1 @@\n-        {{p = ((te))-1;} found_syllable (broken_cluster); }\n+        {{p = ((te))-1;} found_syllable (indic_broken_cluster); }\n@@ -520,1 +549,1 @@\n-        {{p = ((te))-1;} found_syllable (non_indic_cluster); }\n+        {{p = ((te))-1;} found_syllable (indic_non_indic_cluster); }\n@@ -528,1 +557,1 @@\n-#line 84 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 93 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -534,1 +563,1 @@\n-#line 88 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 97 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -540,1 +569,1 @@\n-#line 89 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 98 \"hb-ot-shape-complex-indic-machine.rl\"\n@@ -543,1 +572,1 @@\n-#line 544 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 573 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -552,1 +581,1 @@\n-#line 553 \"hb-ot-shape-complex-indic-machine.hh\"\n+#line 582 \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -568,1 +597,1 @@\n-#line 121 \"hb-ot-shape-complex-indic-machine.rl\"\n+#line 130 \"hb-ot-shape-complex-indic-machine.rl\"\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-indic-machine.hh","additions":70,"deletions":41,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-static const INDIC_TABLE_ELEMENT_TYPE indic_table[] = {\n+static const uint16_t indic_table[] = {\n@@ -407,1 +407,1 @@\n-INDIC_TABLE_ELEMENT_TYPE\n+uint16_t\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-indic-table.cc","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"hb-ot-shape-complex-indic-machine.hh\"\n@@ -340,13 +341,0 @@\n-\n-enum indic_syllable_type_t {\n-  indic_consonant_syllable,\n-  indic_vowel_syllable,\n-  indic_standalone_cluster,\n-  indic_symbol_cluster,\n-  indic_broken_cluster,\n-  indic_non_indic_cluster,\n-};\n-\n-#include \"hb-ot-shape-complex-indic-machine.hh\"\n-\n-\n@@ -767,1 +755,22 @@\n-     * would.\n+     * would.  Here's a concrete example:\n+     *\n+     * Assume there's a pre-base consonant and explicit Halant before base,\n+     * followed by a prebase-reordering (left) Matra:\n+     *\n+     *   C,H,ZWNJ,B,M\n+     *\n+     * At this point in reordering we would have:\n+     *\n+     *   M,C,H,ZWNJ,B\n+     *\n+     * whereas in final reordering we will bring the Matra closer to Base:\n+     *\n+     *   C,H,ZWNJ,M,B\n+     *\n+     * That's why we don't want to merge-clusters anything before the Base\n+     * at this point.  But if something moved from after Base to before it,\n+     * we should merge clusters from base to them.  In final-reordering, we\n+     * only move things around before base, and merge-clusters up to base.\n+     * These two merge-clusters from the two sides of base will interlock\n+     * to merge things correctly.  See:\n+     * https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/2272\n@@ -777,0 +786,1 @@\n+          unsigned int min = i;\n@@ -781,0 +791,1 @@\n+            min = hb_min (min, j);\n@@ -786,2 +797,1 @@\n-          if (i != max)\n-            buffer->merge_clusters (i, max + 1);\n+          buffer->merge_clusters (hb_max (base, min), max + 1);\n@@ -941,63 +951,0 @@\n-static inline void\n-insert_dotted_circles_indic (const hb_ot_shape_plan_t *plan HB_UNUSED,\n-                             hb_font_t *font,\n-                             hb_buffer_t *buffer)\n-{\n-  if (unlikely (buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE))\n-    return;\n-\n-  \/* Note: This loop is extra overhead, but should not be measurable.\n-   * TODO Use a buffer scratch flag to remove the loop. *\/\n-  bool has_broken_syllables = false;\n-  unsigned int count = buffer->len;\n-  hb_glyph_info_t *info = buffer->info;\n-  for (unsigned int i = 0; i < count; i++)\n-    if ((info[i].syllable() & 0x0F) == indic_broken_cluster)\n-    {\n-      has_broken_syllables = true;\n-      break;\n-    }\n-  if (likely (!has_broken_syllables))\n-    return;\n-\n-\n-  hb_codepoint_t dottedcircle_glyph;\n-  if (!font->get_nominal_glyph (0x25CCu, &dottedcircle_glyph))\n-    return;\n-\n-  hb_glyph_info_t dottedcircle = {0};\n-  dottedcircle.codepoint = 0x25CCu;\n-  set_indic_properties (dottedcircle);\n-  dottedcircle.codepoint = dottedcircle_glyph;\n-\n-  buffer->clear_output ();\n-\n-  buffer->idx = 0;\n-  unsigned int last_syllable = 0;\n-  while (buffer->idx < buffer->len && buffer->successful)\n-  {\n-    unsigned int syllable = buffer->cur().syllable();\n-    indic_syllable_type_t syllable_type = (indic_syllable_type_t) (syllable & 0x0F);\n-    if (unlikely (last_syllable != syllable && syllable_type == indic_broken_cluster))\n-    {\n-      last_syllable = syllable;\n-\n-      hb_glyph_info_t ginfo = dottedcircle;\n-      ginfo.cluster = buffer->cur().cluster;\n-      ginfo.mask = buffer->cur().mask;\n-      ginfo.syllable() = buffer->cur().syllable();\n-\n-      \/* Insert dottedcircle after possible Repha. *\/\n-      while (buffer->idx < buffer->len && buffer->successful &&\n-             last_syllable == buffer->cur().syllable() &&\n-             buffer->cur().indic_category() == OT_Repha)\n-        buffer->next_glyph ();\n-\n-      buffer->output_info (ginfo);\n-    }\n-    else\n-      buffer->next_glyph ();\n-  }\n-  buffer->swap_buffers ();\n-}\n-\n@@ -1009,0 +956,3 @@\n+  if (!buffer->message (font, \"start reordering indic initial\"))\n+    return;\n+\n@@ -1010,1 +960,4 @@\n-  insert_dotted_circles_indic (plan, font, buffer);\n+  hb_syllabic_insert_dotted_circles (font, buffer,\n+                                     indic_broken_cluster,\n+                                     OT_DOTTEDCIRCLE,\n+                                     OT_Repha);\n@@ -1014,0 +967,2 @@\n+\n+  (void) buffer->message (font, \"end reordering indic initial\");\n@@ -1488,2 +1443,5 @@\n-  foreach_syllable (buffer, start, end)\n-    final_reordering_syllable_indic (plan, buffer, start, end);\n+  if (buffer->message (font, \"start reordering indic final\")) {\n+    foreach_syllable (buffer, start, end)\n+      final_reordering_syllable_indic (plan, buffer, start, end);\n+    (void) buffer->message (font, \"end reordering indic final\");\n+  }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-indic.cc","additions":40,"deletions":82,"binary":false,"changes":122,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"hb-ot-shape-complex.hh\"\n+#include \"hb-ot-shape-complex-syllabic.hh\"\n@@ -36,2 +36,2 @@\n-#define indic_category() complex_var_u8_0() \/* indic_category_t *\/\n-#define indic_position() complex_var_u8_1() \/* indic_position_t *\/\n+#define indic_category() complex_var_u8_category() \/* indic_category_t *\/\n+#define indic_position() complex_var_u8_auxiliary() \/* indic_position_t *\/\n@@ -40,2 +40,0 @@\n-#define INDIC_TABLE_ELEMENT_TYPE uint16_t\n-\n@@ -180,1 +178,1 @@\n-    ASSERT_STATIC_EXPR_ZERO (S < 255 && M < 255) + \\\n+    static_assert_expr (S < 255 && M < 255) + \\\n@@ -197,1 +195,1 @@\n-HB_INTERNAL INDIC_TABLE_ELEMENT_TYPE\n+HB_INTERNAL uint16_t\n@@ -310,2 +308,0 @@\n-\n-  0x179Au, \/* Khmer *\/\n@@ -317,4 +313,1 @@\n-  for (unsigned int i = 0; i < ARRAY_LENGTH (ra_chars); i++)\n-    if (u == ra_chars[i])\n-      return true;\n-  return false;\n+  return hb_array (ra_chars).lfind (u);\n@@ -328,1 +321,1 @@\n-  indic_category_t cat = (indic_category_t) (type & 0x7Fu);\n+  indic_category_t cat = (indic_category_t) (type & 0xFFu);\n@@ -373,0 +366,1 @@\n+  else if (unlikely (u == 0x0B55u)) cat = OT_N; \/* https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/2849 *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-indic.hh","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -4,24 +3,24 @@\n- * Copyright © 2011,2012  Google, Inc.\n- *\n- *  This is part of HarfBuzz, a text shaping library.\n- *\n- * Permission is hereby granted, without written agreement and without\n- * license or royalty fees, to use, copy, modify, and distribute this\n- * software and its documentation for any purpose, provided that the\n- * above copyright notice and the following two paragraphs appear in\n- * all copies of this software.\n- *\n- * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n- * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n- * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n- * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n- * DAMAGE.\n- *\n- * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n- * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n- * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n- * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n- *\n- * Google Author(s): Behdad Esfahbod\n- *\/\n+* Copyright © 2011,2012  Google, Inc.\n+*\n+*  This is part of HarfBuzz, a text shaping library.\n+*\n+* Permission is hereby granted, without written agreement and without\n+* license or royalty fees, to use, copy, modify, and distribute this\n+* software and its documentation for any purpose, provided that the\n+* above copyright notice and the following two paragraphs appear in\n+* all copies of this software.\n+*\n+* IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+* DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+* ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+* IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+* DAMAGE.\n+*\n+* THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+* FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+* ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+* PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*\n+* Google Author(s): Behdad Esfahbod\n+*\/\n@@ -34,0 +33,6 @@\n+enum khmer_syllable_type_t {\n+        khmer_consonant_syllable,\n+        khmer_broken_cluster,\n+        khmer_non_khmer_cluster,\n+};\n+\n@@ -35,1 +40,19 @@\n-#line 36 \"hb-ot-shape-complex-khmer-machine.hh\"\n+#line 41 \"hb-ot-shape-complex-khmer-machine.hh\"\n+#define khmer_syllable_machine_ex_C 1u\n+#define khmer_syllable_machine_ex_Coeng 14u\n+#define khmer_syllable_machine_ex_DOTTEDCIRCLE 12u\n+#define khmer_syllable_machine_ex_PLACEHOLDER 11u\n+#define khmer_syllable_machine_ex_Ra 16u\n+#define khmer_syllable_machine_ex_Robatic 20u\n+#define khmer_syllable_machine_ex_V 2u\n+#define khmer_syllable_machine_ex_VAbv 26u\n+#define khmer_syllable_machine_ex_VBlw 27u\n+#define khmer_syllable_machine_ex_VPre 28u\n+#define khmer_syllable_machine_ex_VPst 29u\n+#define khmer_syllable_machine_ex_Xgroup 21u\n+#define khmer_syllable_machine_ex_Ygroup 22u\n+#define khmer_syllable_machine_ex_ZWJ 6u\n+#define khmer_syllable_machine_ex_ZWNJ 5u\n+\n+\n+#line 59 \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -37,6 +60,11 @@\n-        5u, 26u, 5u, 21u, 5u, 26u, 5u, 21u, 1u, 16u, 5u, 21u, 5u, 26u, 5u, 21u,\n-        5u, 26u, 5u, 21u, 5u, 21u, 5u, 26u, 5u, 21u, 1u, 16u, 5u, 21u, 5u, 26u,\n-        5u, 21u, 5u, 26u, 5u, 21u, 5u, 26u, 1u, 29u, 5u, 29u, 5u, 29u, 5u, 29u,\n-        22u, 22u, 5u, 22u, 5u, 29u, 5u, 29u, 5u, 29u, 1u, 16u, 5u, 26u, 5u, 29u,\n-        5u, 29u, 22u, 22u, 5u, 22u, 5u, 29u, 5u, 29u, 1u, 16u, 5u, 29u, 5u, 29u,\n-        0\n+        2u, 8u, 2u, 6u, 2u, 8u, 2u, 6u,\n+        0u, 0u, 2u, 6u, 2u, 8u, 2u, 6u,\n+        2u, 8u, 2u, 6u, 2u, 6u, 2u, 8u,\n+        2u, 6u, 0u, 0u, 2u, 6u, 2u, 8u,\n+        2u, 6u, 2u, 8u, 2u, 6u, 2u, 8u,\n+        0u, 11u, 2u, 11u, 2u, 11u, 2u, 11u,\n+        7u, 7u, 2u, 7u, 2u, 11u, 2u, 11u,\n+        2u, 11u, 0u, 0u, 2u, 8u, 2u, 11u,\n+        2u, 11u, 7u, 7u, 2u, 7u, 2u, 11u,\n+        2u, 11u, 0u, 0u, 2u, 11u, 2u, 11u,\n+        0u\n@@ -45,6 +73,5 @@\n-static const char _khmer_syllable_machine_key_spans[] = {\n-        22, 17, 22, 17, 16, 17, 22, 17,\n-        22, 17, 17, 22, 17, 16, 17, 22,\n-        17, 22, 17, 22, 29, 25, 25, 25,\n-        1, 18, 25, 25, 25, 16, 22, 25,\n-        25, 1, 18, 25, 25, 16, 25, 25\n+static const signed char _khmer_syllable_machine_char_class[] = {\n+        0, 0, 1, 1, 2, 2, 1, 1,\n+        1, 1, 3, 3, 1, 4, 1, 0,\n+        1, 1, 1, 5, 6, 7, 1, 1,\n+        1, 8, 9, 10, 11, 0\n@@ -54,5 +81,6 @@\n-        0, 23, 41, 64, 82, 99, 117, 140,\n-        158, 181, 199, 217, 240, 258, 275, 293,\n-        316, 334, 357, 375, 398, 428, 454, 480,\n-        506, 508, 527, 553, 579, 605, 622, 645,\n-        671, 697, 699, 718, 744, 770, 787, 813\n+        0, 7, 12, 19, 24, 25, 30, 37,\n+        42, 49, 54, 59, 66, 71, 72, 77,\n+        84, 89, 96, 101, 108, 120, 130, 140,\n+        150, 151, 157, 167, 177, 187, 188, 195,\n+        205, 215, 216, 222, 232, 242, 243, 253,\n+        0\n@@ -61,24 +89,37 @@\n-static const char _khmer_syllable_machine_indicies[] = {\n-        1, 1, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 2,\n-        3, 0, 0, 0, 0, 4, 0, 1,\n-        1, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 3,\n-        0, 1, 1, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 3, 0, 0, 0, 0, 4, 0,\n-        5, 5, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        4, 0, 6, 6, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 6, 0, 7, 7, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 8, 0, 9, 9, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 10, 0, 0,\n-        0, 0, 4, 0, 9, 9, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 10, 0, 11, 11,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 12, 0,\n-        0, 0, 0, 4, 0, 11, 11, 0,\n+static const signed char _khmer_syllable_machine_indicies[] = {\n+        1, 0, 0, 2, 3, 0, 4, 1,\n+        0, 0, 0, 3, 1, 0, 0, 0,\n+        3, 0, 4, 5, 0, 0, 0, 4,\n+        6, 7, 0, 0, 0, 8, 9, 0,\n+        0, 0, 10, 0, 4, 9, 0, 0,\n+        0, 10, 11, 0, 0, 0, 12, 0,\n+        4, 11, 0, 0, 0, 12, 14, 13,\n+        13, 13, 15, 14, 16, 16, 16, 15,\n+        16, 17, 18, 16, 16, 16, 17, 19,\n+        20, 16, 16, 16, 21, 22, 16, 16,\n+        16, 23, 16, 17, 22, 16, 16, 16,\n+        23, 24, 16, 16, 16, 25, 16, 17,\n+        24, 16, 16, 16, 25, 14, 16, 16,\n+        26, 15, 16, 17, 29, 28, 30, 2,\n+        31, 28, 15, 19, 17, 23, 25, 21,\n+        33, 32, 34, 2, 3, 6, 4, 10,\n+        12, 8, 35, 32, 36, 32, 3, 6,\n+        4, 10, 12, 8, 5, 32, 36, 32,\n+        4, 6, 32, 32, 32, 8, 6, 7,\n+        32, 36, 32, 8, 6, 37, 32, 36,\n+        32, 10, 6, 4, 32, 32, 8, 38,\n+        32, 36, 32, 12, 6, 4, 10, 32,\n+        8, 35, 32, 34, 32, 3, 6, 4,\n+        10, 12, 8, 29, 14, 39, 39, 39,\n+        15, 39, 17, 41, 40, 42, 40, 15,\n+        19, 17, 23, 25, 21, 18, 40, 42,\n+        40, 17, 19, 40, 40, 40, 21, 19,\n+        20, 40, 42, 40, 21, 19, 43, 40,\n+        42, 40, 23, 19, 17, 40, 40, 21,\n+        44, 40, 42, 40, 25, 19, 17, 23,\n+        40, 21, 45, 46, 40, 31, 26, 15,\n+        19, 17, 23, 25, 21, 41, 40, 31,\n+        40, 15, 19, 17, 23, 25, 21, 0\n+};\n+\n+static const signed char _khmer_syllable_machine_index_defaults[] = {\n@@ -86,81 +127,5 @@\n-        0, 0, 0, 0, 0, 12, 0, 14,\n-        14, 13, 13, 13, 13, 13, 13, 13,\n-        13, 13, 13, 13, 13, 13, 13, 15,\n-        13, 14, 14, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 15, 16, 16, 16, 16, 17, 16,\n-        18, 18, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        17, 16, 19, 19, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 19, 16, 20, 20, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 21, 16, 22, 22, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 23, 16, 16,\n-        16, 16, 17, 16, 22, 22, 16, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 23, 16, 24, 24,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 25, 16,\n-        16, 16, 16, 17, 16, 24, 24, 16,\n-        16, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 25, 16, 14,\n-        14, 16, 16, 16, 16, 16, 16, 16,\n-        16, 16, 16, 16, 16, 16, 26, 15,\n-        16, 16, 16, 16, 17, 16, 28, 28,\n-        27, 27, 29, 29, 27, 27, 27, 27,\n-        2, 2, 27, 30, 27, 28, 27, 27,\n-        27, 27, 15, 19, 27, 27, 27, 17,\n-        23, 25, 21, 27, 32, 32, 31, 31,\n-        31, 31, 31, 31, 31, 33, 31, 31,\n-        31, 31, 31, 2, 3, 6, 31, 31,\n-        31, 4, 10, 12, 8, 31, 34, 34,\n-        31, 31, 31, 31, 31, 31, 31, 35,\n-        31, 31, 31, 31, 31, 31, 3, 6,\n-        31, 31, 31, 4, 10, 12, 8, 31,\n-        5, 5, 31, 31, 31, 31, 31, 31,\n-        31, 35, 31, 31, 31, 31, 31, 31,\n-        4, 6, 31, 31, 31, 31, 31, 31,\n-        8, 31, 6, 31, 7, 7, 31, 31,\n-        31, 31, 31, 31, 31, 35, 31, 31,\n-        31, 31, 31, 31, 8, 6, 31, 36,\n-        36, 31, 31, 31, 31, 31, 31, 31,\n-        35, 31, 31, 31, 31, 31, 31, 10,\n-        6, 31, 31, 31, 4, 31, 31, 8,\n-        31, 37, 37, 31, 31, 31, 31, 31,\n-        31, 31, 35, 31, 31, 31, 31, 31,\n-        31, 12, 6, 31, 31, 31, 4, 10,\n-        31, 8, 31, 34, 34, 31, 31, 31,\n-        31, 31, 31, 31, 33, 31, 31, 31,\n-        31, 31, 31, 3, 6, 31, 31, 31,\n-        4, 10, 12, 8, 31, 28, 28, 31,\n-        31, 31, 31, 31, 31, 31, 31, 31,\n-        31, 31, 31, 31, 28, 31, 14, 14,\n-        38, 38, 38, 38, 38, 38, 38, 38,\n-        38, 38, 38, 38, 38, 38, 15, 38,\n-        38, 38, 38, 17, 38, 40, 40, 39,\n-        39, 39, 39, 39, 39, 39, 41, 39,\n-        39, 39, 39, 39, 39, 15, 19, 39,\n-        39, 39, 17, 23, 25, 21, 39, 18,\n-        18, 39, 39, 39, 39, 39, 39, 39,\n-        41, 39, 39, 39, 39, 39, 39, 17,\n-        19, 39, 39, 39, 39, 39, 39, 21,\n-        39, 19, 39, 20, 20, 39, 39, 39,\n-        39, 39, 39, 39, 41, 39, 39, 39,\n-        39, 39, 39, 21, 19, 39, 42, 42,\n-        39, 39, 39, 39, 39, 39, 39, 41,\n-        39, 39, 39, 39, 39, 39, 23, 19,\n-        39, 39, 39, 17, 39, 39, 21, 39,\n-        43, 43, 39, 39, 39, 39, 39, 39,\n-        39, 41, 39, 39, 39, 39, 39, 39,\n-        25, 19, 39, 39, 39, 17, 23, 39,\n-        21, 39, 44, 44, 39, 39, 39, 39,\n-        39, 39, 39, 39, 39, 39, 39, 39,\n-        39, 44, 39, 45, 45, 39, 39, 39,\n-        39, 39, 39, 39, 30, 39, 39, 39,\n-        39, 39, 26, 15, 19, 39, 39, 39,\n-        17, 23, 25, 21, 39, 40, 40, 39,\n-        39, 39, 39, 39, 39, 39, 30, 39,\n-        39, 39, 39, 39, 39, 15, 19, 39,\n-        39, 39, 17, 23, 25, 21, 39, 0\n+        0, 0, 13, 16, 16, 16, 16, 16,\n+        16, 16, 16, 16, 28, 32, 32, 32,\n+        32, 32, 32, 32, 32, 32, 39, 40,\n+        40, 40, 40, 40, 40, 40, 40, 40,\n+        0\n@@ -169,1 +134,1 @@\n-static const char _khmer_syllable_machine_trans_targs[] = {\n+static const signed char _khmer_syllable_machine_cond_targs[] = {\n@@ -173,3 +138,3 @@\n-        18, 36, 39, 20, 21, 30, 37, 20,\n-        0, 29, 2, 4, 6, 8, 20, 20,\n-        11, 13, 15, 17, 38, 19\n+        18, 36, 39, 20, 20, 21, 30, 37,\n+        20, 0, 29, 2, 4, 6, 8, 20,\n+        20, 11, 13, 15, 17, 38, 19, 0\n@@ -178,1 +143,1 @@\n-static const char _khmer_syllable_machine_trans_actions[] = {\n+static const signed char _khmer_syllable_machine_cond_actions[] = {\n@@ -182,3 +147,3 @@\n-        0, 2, 4, 8, 2, 9, 0, 10,\n-        0, 0, 0, 0, 0, 0, 11, 12,\n-        0, 0, 0, 0, 4, 0\n+        0, 2, 4, 0, 8, 2, 9, 0,\n+        10, 0, 0, 0, 0, 0, 0, 11,\n+        12, 0, 0, 0, 0, 4, 0, 0\n@@ -187,1 +152,1 @@\n-static const char _khmer_syllable_machine_to_state_actions[] = {\n+static const signed char _khmer_syllable_machine_to_state_actions[] = {\n@@ -192,1 +157,2 @@\n-        0, 0, 0, 0, 0, 0, 0, 0\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0\n@@ -195,1 +161,1 @@\n-static const char _khmer_syllable_machine_from_state_actions[] = {\n+static const signed char _khmer_syllable_machine_from_state_actions[] = {\n@@ -200,1 +166,2 @@\n-        0, 0, 0, 0, 0, 0, 0, 0\n+        0, 0, 0, 0, 0, 0, 0, 0,\n+        0\n@@ -203,1 +170,1 @@\n-static const unsigned char _khmer_syllable_machine_eof_trans[] = {\n+static const signed char _khmer_syllable_machine_eof_trans[] = {\n@@ -206,3 +173,4 @@\n-        17, 17, 17, 17, 0, 32, 32, 32,\n-        32, 32, 32, 32, 32, 32, 39, 40,\n-        40, 40, 40, 40, 40, 40, 40, 40\n+        17, 17, 17, 17, 28, 33, 33, 33,\n+        33, 33, 33, 33, 33, 33, 40, 41,\n+        41, 41, 41, 41, 41, 41, 41, 41,\n+        0\n@@ -218,1 +186,1 @@\n-#line 36 \"hb-ot-shape-complex-khmer-machine.rl\"\n+#line 43 \"hb-ot-shape-complex-khmer-machine.rl\"\n@@ -222,1 +190,1 @@\n-#line 80 \"hb-ot-shape-complex-khmer-machine.rl\"\n+#line 86 \"hb-ot-shape-complex-khmer-machine.rl\"\n@@ -226,7 +194,7 @@\n-  HB_STMT_START { \\\n-    if (0) fprintf (stderr, \"syllable %d..%d %s\\n\", ts, te, #syllable_type); \\\n-    for (unsigned int i = ts; i < te; i++) \\\n-      info[i].syllable() = (syllable_serial << 4) | khmer_##syllable_type; \\\n-    syllable_serial++; \\\n-    if (unlikely (syllable_serial == 16)) syllable_serial = 1; \\\n-  } HB_STMT_END\n+HB_STMT_START { \\\n+        if (0) fprintf (stderr, \"syllable %d..%d %s\\n\", ts, te, #syllable_type); \\\n+                for (unsigned int i = ts; i < te; i++) \\\n+        info[i].syllable() = (syllable_serial << 4) | syllable_type; \\\n+        syllable_serial++; \\\n+        if (unlikely (syllable_serial == 16)) syllable_serial = 1; \\\n+        } HB_STMT_END\n@@ -237,3 +205,3 @@\n-  unsigned int p, pe, eof, ts, te, act HB_UNUSED;\n-  int cs;\n-  hb_glyph_info_t *info = buffer->info;\n+        unsigned int p, pe, eof, ts, te, act HB_UNUSED;\n+        int cs;\n+        hb_glyph_info_t *info = buffer->info;\n@@ -241,1 +209,1 @@\n-#line 242 \"hb-ot-shape-complex-khmer-machine.hh\"\n+#line 210 \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -243,4 +211,4 @@\n-        cs = khmer_syllable_machine_start;\n-        ts = 0;\n-        te = 0;\n-        act = 0;\n+                cs = (int)khmer_syllable_machine_start;\n+                ts = 0;\n+                te = 0;\n+                act = 0;\n@@ -249,1 +217,1 @@\n-#line 100 \"hb-ot-shape-complex-khmer-machine.rl\"\n+#line 106 \"hb-ot-shape-complex-khmer-machine.rl\"\n@@ -252,2 +220,2 @@\n-  p = 0;\n-  pe = eof = buffer->len;\n+        p = 0;\n+        pe = eof = buffer->len;\n@@ -255,1 +223,1 @@\n-  unsigned int syllable_serial = 1;\n+        unsigned int syllable_serial = 1;\n@@ -257,1 +225,1 @@\n-#line 258 \"hb-ot-shape-complex-khmer-machine.hh\"\n+#line 226 \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -259,9 +227,10 @@\n-        int _slen;\n-        int _trans;\n-        const unsigned char *_keys;\n-        const char *_inds;\n-        if ( p == pe )\n-                goto _test_eof;\n-_resume:\n-        switch ( _khmer_syllable_machine_from_state_actions[cs] ) {\n-        case 7:\n+                unsigned int _trans = 0;\n+                const unsigned char * _keys;\n+                const signed char * _inds;\n+                int _ic;\n+                _resume: {}\n+                if ( p == pe && p != eof )\n+                        goto _out;\n+                switch ( _khmer_syllable_machine_from_state_actions[cs] ) {\n+                        case 7:  {\n+                                {\n@@ -269,4 +238,39 @@\n-        {ts = p;}\n-        break;\n-#line 272 \"hb-ot-shape-complex-khmer-machine.hh\"\n-        }\n+                                        {ts = p;}}\n+\n+#line 241 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                break;\n+                        }\n+                }\n+\n+                if ( p == eof ) {\n+                        if ( _khmer_syllable_machine_eof_trans[cs] > 0 ) {\n+                                _trans = (unsigned int)_khmer_syllable_machine_eof_trans[cs] - 1;\n+                        }\n+                }\n+                else {\n+                        _keys = ( _khmer_syllable_machine_trans_keys + ((cs<<1)));\n+                        _inds = ( _khmer_syllable_machine_indicies + (_khmer_syllable_machine_index_offsets[cs]));\n+\n+                        if ( (info[p].khmer_category()) <= 29 && (info[p].khmer_category()) >= 1 ) {\n+                                _ic = (int)_khmer_syllable_machine_char_class[(int)(info[p].khmer_category()) - 1];\n+                                if ( _ic <= (int)(*( _keys+1)) && _ic >= (int)(*( _keys)) )\n+                                        _trans = (unsigned int)(*( _inds + (int)( _ic - (int)(*( _keys)) ) ));\n+                                else\n+                                        _trans = (unsigned int)_khmer_syllable_machine_index_defaults[cs];\n+                        }\n+                        else {\n+                                _trans = (unsigned int)_khmer_syllable_machine_index_defaults[cs];\n+                        }\n+\n+                }\n+                cs = (int)_khmer_syllable_machine_cond_targs[_trans];\n+\n+                if ( _khmer_syllable_machine_cond_actions[_trans] != 0 ) {\n+\n+                        switch ( _khmer_syllable_machine_cond_actions[_trans] ) {\n+                                case 2:  {\n+                                        {\n+#line 1 \"NONE\"\n+                                                {te = p+1;}}\n@@ -274,2 +278,1 @@\n-        _keys = _khmer_syllable_machine_trans_keys + (cs<<1);\n-        _inds = _khmer_syllable_machine_indicies + _khmer_syllable_machine_index_offsets[cs];\n+#line 279 \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -277,4 +280,0 @@\n-        _slen = _khmer_syllable_machine_key_spans[cs];\n-        _trans = _inds[ _slen > 0 && _keys[0] <=( info[p].khmer_category()) &&\n-                ( info[p].khmer_category()) <= _keys[1] ?\n-                ( info[p].khmer_category()) - _keys[0] : _slen ];\n@@ -282,2 +281,9 @@\n-_eof_trans:\n-        cs = _khmer_syllable_machine_trans_targs[_trans];\n+                                        break;\n+                                }\n+                                case 8:  {\n+                                        {\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {te = p+1;{\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_non_khmer_cluster); }\n+                                                }}\n@@ -285,2 +291,1 @@\n-        if ( _khmer_syllable_machine_trans_actions[_trans] == 0 )\n-                goto _again;\n+#line 292 \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -288,30 +293,72 @@\n-        switch ( _khmer_syllable_machine_trans_actions[_trans] ) {\n-        case 2:\n-#line 1 \"NONE\"\n-        {te = p+1;}\n-        break;\n-        case 8:\n-#line 76 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {te = p+1;{ found_syllable (non_khmer_cluster); }}\n-        break;\n-        case 10:\n-#line 74 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {te = p;p--;{ found_syllable (consonant_syllable); }}\n-        break;\n-        case 12:\n-#line 75 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {te = p;p--;{ found_syllable (broken_cluster); }}\n-        break;\n-        case 11:\n-#line 76 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {te = p;p--;{ found_syllable (non_khmer_cluster); }}\n-        break;\n-        case 1:\n-#line 74 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (consonant_syllable); }}\n-        break;\n-        case 5:\n-#line 75 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (broken_cluster); }}\n-        break;\n-        case 3:\n+\n+                                        break;\n+                                }\n+                                case 10:  {\n+                                        {\n+#line 80 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 80 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_consonant_syllable); }\n+                                                }}\n+\n+#line 305 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 12:  {\n+                                        {\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_broken_cluster); }\n+                                                }}\n+\n+#line 318 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 11:  {\n+                                        {\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_non_khmer_cluster); }\n+                                                }}\n+\n+#line 331 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 1:  {\n+                                        {\n+#line 80 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {p = ((te))-1;\n+                                                        {\n+#line 80 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_consonant_syllable); }\n+                                                }}\n+\n+#line 345 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 5:  {\n+                                        {\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {p = ((te))-1;\n+                                                        {\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                found_syllable (khmer_broken_cluster); }\n+                                                }}\n+\n+#line 359 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 3:  {\n+                                        {\n@@ -319,11 +366,25 @@\n-        {       switch( act ) {\n-        case 2:\n-        {{p = ((te))-1;} found_syllable (broken_cluster); }\n-        break;\n-        case 3:\n-        {{p = ((te))-1;} found_syllable (non_khmer_cluster); }\n-        break;\n-        }\n-        }\n-        break;\n-        case 4:\n+                                                {switch( act ) {\n+                                                                case 2:  {\n+                                                                        p = ((te))-1;\n+                                                                        {\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                                found_syllable (khmer_broken_cluster); }\n+                                                                        break;\n+                                                                }\n+                                                                case 3:  {\n+                                                                        p = ((te))-1;\n+                                                                        {\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                                                found_syllable (khmer_non_khmer_cluster); }\n+                                                                        break;\n+                                                                }\n+                                                        }}\n+                                        }\n+\n+#line 385 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 4:  {\n+                                        {\n@@ -331,5 +392,15 @@\n-        {te = p+1;}\n-#line 75 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {act = 2;}\n-        break;\n-        case 9:\n+                                                {te = p+1;}}\n+\n+#line 395 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+                                        {\n+#line 81 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {act = 2;}}\n+\n+#line 401 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 9:  {\n+                                        {\n@@ -337,6 +408,10 @@\n-        {te = p+1;}\n-#line 76 \"hb-ot-shape-complex-khmer-machine.rl\"\n-        {act = 3;}\n-        break;\n-#line 342 \"hb-ot-shape-complex-khmer-machine.hh\"\n-        }\n+                                                {te = p+1;}}\n+\n+#line 411 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+                                        {\n+#line 82 \"hb-ot-shape-complex-khmer-machine.rl\"\n+                                                {act = 3;}}\n+\n+#line 417 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n@@ -344,3 +419,14 @@\n-_again:\n-        switch ( _khmer_syllable_machine_to_state_actions[cs] ) {\n-        case 6:\n+                                        break;\n+                                }\n+                        }\n+\n+                }\n+\n+                if ( p == eof ) {\n+                        if ( cs >= 20 )\n+                                goto _out;\n+                }\n+                else {\n+                        switch ( _khmer_syllable_machine_to_state_actions[cs] ) {\n+                                case 6:  {\n+                                        {\n@@ -348,4 +434,1 @@\n-        {ts = 0;}\n-        break;\n-#line 351 \"hb-ot-shape-complex-khmer-machine.hh\"\n-        }\n+                                                {ts = 0;}}\n@@ -353,10 +436,6 @@\n-        if ( ++p != pe )\n-                goto _resume;\n-        _test_eof: {}\n-        if ( p == eof )\n-        {\n-        if ( _khmer_syllable_machine_eof_trans[cs] > 0 ) {\n-                _trans = _khmer_syllable_machine_eof_trans[cs] - 1;\n-                goto _eof_trans;\n-        }\n-        }\n+#line 437 \"hb-ot-shape-complex-khmer-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                        }\n@@ -364,0 +443,4 @@\n+                        p += 1;\n+                        goto _resume;\n+                }\n+                _out: {}\n@@ -366,1 +449,1 @@\n-#line 108 \"hb-ot-shape-complex-khmer-machine.rl\"\n+#line 114 \"hb-ot-shape-complex-khmer-machine.rl\"\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-khmer-machine.hh","additions":362,"deletions":279,"binary":false,"changes":641,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"hb-ot-shape-complex-khmer-machine.hh\"\n@@ -143,21 +144,0 @@\n-  bool get_virama_glyph (hb_font_t *font, hb_codepoint_t *pglyph) const\n-  {\n-    hb_codepoint_t glyph = virama_glyph;\n-    if (unlikely (virama_glyph == (hb_codepoint_t) -1))\n-    {\n-      if (!font->get_nominal_glyph (0x17D2u, &glyph))\n-        glyph = 0;\n-      \/* Technically speaking, the spec says we should apply 'locl' to virama too.\n-       * Maybe one day... *\/\n-\n-      \/* Our get_nominal_glyph() function needs a font, so we can't get the virama glyph\n-       * during shape planning...  Instead, overwrite it here.  It's safe.  Don't worry! *\/\n-      virama_glyph = glyph;\n-    }\n-\n-    *pglyph = glyph;\n-    return glyph != 0;\n-  }\n-\n-  mutable hb_codepoint_t virama_glyph;\n-\n@@ -174,2 +154,0 @@\n-  khmer_plan->virama_glyph = (hb_codepoint_t) -1;\n-\n@@ -189,9 +167,0 @@\n-\n-enum khmer_syllable_type_t {\n-  khmer_consonant_syllable,\n-  khmer_broken_cluster,\n-  khmer_non_khmer_cluster,\n-};\n-\n-#include \"hb-ot-shape-complex-khmer-machine.hh\"\n-\n@@ -324,63 +293,0 @@\n-static inline void\n-insert_dotted_circles_khmer (const hb_ot_shape_plan_t *plan HB_UNUSED,\n-                             hb_font_t *font,\n-                             hb_buffer_t *buffer)\n-{\n-  if (unlikely (buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE))\n-    return;\n-\n-  \/* Note: This loop is extra overhead, but should not be measurable.\n-   * TODO Use a buffer scratch flag to remove the loop. *\/\n-  bool has_broken_syllables = false;\n-  unsigned int count = buffer->len;\n-  hb_glyph_info_t *info = buffer->info;\n-  for (unsigned int i = 0; i < count; i++)\n-    if ((info[i].syllable() & 0x0F) == khmer_broken_cluster)\n-    {\n-      has_broken_syllables = true;\n-      break;\n-    }\n-  if (likely (!has_broken_syllables))\n-    return;\n-\n-\n-  hb_codepoint_t dottedcircle_glyph;\n-  if (!font->get_nominal_glyph (0x25CCu, &dottedcircle_glyph))\n-    return;\n-\n-  hb_glyph_info_t dottedcircle = {0};\n-  dottedcircle.codepoint = 0x25CCu;\n-  set_khmer_properties (dottedcircle);\n-  dottedcircle.codepoint = dottedcircle_glyph;\n-\n-  buffer->clear_output ();\n-\n-  buffer->idx = 0;\n-  unsigned int last_syllable = 0;\n-  while (buffer->idx < buffer->len && buffer->successful)\n-  {\n-    unsigned int syllable = buffer->cur().syllable();\n-    khmer_syllable_type_t syllable_type = (khmer_syllable_type_t) (syllable & 0x0F);\n-    if (unlikely (last_syllable != syllable && syllable_type == khmer_broken_cluster))\n-    {\n-      last_syllable = syllable;\n-\n-      hb_glyph_info_t ginfo = dottedcircle;\n-      ginfo.cluster = buffer->cur().cluster;\n-      ginfo.mask = buffer->cur().mask;\n-      ginfo.syllable() = buffer->cur().syllable();\n-\n-      \/* Insert dottedcircle after possible Repha. *\/\n-      while (buffer->idx < buffer->len && buffer->successful &&\n-             last_syllable == buffer->cur().syllable() &&\n-             buffer->cur().khmer_category() == OT_Repha)\n-        buffer->next_glyph ();\n-\n-      buffer->output_info (ginfo);\n-    }\n-    else\n-      buffer->next_glyph ();\n-  }\n-  buffer->swap_buffers ();\n-}\n-\n@@ -392,5 +298,11 @@\n-  insert_dotted_circles_khmer (plan, font, buffer);\n-\n-  foreach_syllable (buffer, start, end)\n-    reorder_syllable_khmer (plan, font->face, buffer, start, end);\n-\n+  if (buffer->message (font, \"start reordering khmer\"))\n+  {\n+    hb_syllabic_insert_dotted_circles (font, buffer,\n+                                       khmer_broken_cluster,\n+                                       OT_DOTTEDCIRCLE,\n+                                       OT_Repha);\n+\n+    foreach_syllable (buffer, start, end)\n+      reorder_syllable_khmer (plan, font->face, buffer, start, end);\n+    (void) buffer->message (font, \"end reordering khmer\");\n+  }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-khmer.cc","additions":12,"deletions":100,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  khmer_category_t cat = (khmer_category_t) (type & 0x7Fu);\n+  khmer_category_t cat = (khmer_category_t) (type & 0xFFu);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-khmer.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,7 @@\n+enum myanmar_syllable_type_t {\n+  myanmar_consonant_syllable,\n+  myanmar_punctuation_cluster,\n+  myanmar_broken_cluster,\n+  myanmar_non_myanmar_cluster,\n+};\n+\n@@ -35,1 +42,29 @@\n-#line 36 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 43 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#define myanmar_syllable_machine_ex_A 10u\n+#define myanmar_syllable_machine_ex_As 18u\n+#define myanmar_syllable_machine_ex_C 1u\n+#define myanmar_syllable_machine_ex_CS 19u\n+#define myanmar_syllable_machine_ex_D 32u\n+#define myanmar_syllable_machine_ex_D0 20u\n+#define myanmar_syllable_machine_ex_DB 3u\n+#define myanmar_syllable_machine_ex_GB 11u\n+#define myanmar_syllable_machine_ex_H 4u\n+#define myanmar_syllable_machine_ex_IV 2u\n+#define myanmar_syllable_machine_ex_MH 21u\n+#define myanmar_syllable_machine_ex_MR 22u\n+#define myanmar_syllable_machine_ex_MW 23u\n+#define myanmar_syllable_machine_ex_MY 24u\n+#define myanmar_syllable_machine_ex_P 31u\n+#define myanmar_syllable_machine_ex_PT 25u\n+#define myanmar_syllable_machine_ex_Ra 16u\n+#define myanmar_syllable_machine_ex_V 8u\n+#define myanmar_syllable_machine_ex_VAbv 26u\n+#define myanmar_syllable_machine_ex_VBlw 27u\n+#define myanmar_syllable_machine_ex_VPre 28u\n+#define myanmar_syllable_machine_ex_VPst 29u\n+#define myanmar_syllable_machine_ex_VS 30u\n+#define myanmar_syllable_machine_ex_ZWJ 6u\n+#define myanmar_syllable_machine_ex_ZWNJ 5u\n+\n+\n+#line 71 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -296,1 +331,1 @@\n-#line 36 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+#line 44 \"hb-ot-shape-complex-myanmar-machine.rl\"\n@@ -300,1 +335,1 @@\n-#line 94 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+#line 101 \"hb-ot-shape-complex-myanmar-machine.rl\"\n@@ -307,1 +342,1 @@\n-      info[i].syllable() = (syllable_serial << 4) | myanmar_##syllable_type; \\\n+      info[i].syllable() = (syllable_serial << 4) | syllable_type; \\\n@@ -319,1 +354,1 @@\n-#line 320 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 355 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -327,1 +362,1 @@\n-#line 114 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+#line 121 \"hb-ot-shape-complex-myanmar-machine.rl\"\n@@ -335,1 +370,1 @@\n-#line 336 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 371 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -349,1 +384,1 @@\n-#line 350 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 385 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -368,2 +403,2 @@\n-#line 86 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p+1;{ found_syllable (consonant_syllable); }}\n+#line 93 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p+1;{ found_syllable (myanmar_consonant_syllable); }}\n@@ -372,2 +407,2 @@\n-#line 87 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p+1;{ found_syllable (non_myanmar_cluster); }}\n+#line 94 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p+1;{ found_syllable (myanmar_non_myanmar_cluster); }}\n@@ -376,2 +411,2 @@\n-#line 88 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p+1;{ found_syllable (punctuation_cluster); }}\n+#line 95 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p+1;{ found_syllable (myanmar_punctuation_cluster); }}\n@@ -380,2 +415,2 @@\n-#line 89 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p+1;{ found_syllable (broken_cluster); }}\n+#line 96 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p+1;{ found_syllable (myanmar_broken_cluster); }}\n@@ -384,2 +419,2 @@\n-#line 90 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p+1;{ found_syllable (non_myanmar_cluster); }}\n+#line 97 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p+1;{ found_syllable (myanmar_non_myanmar_cluster); }}\n@@ -388,2 +423,2 @@\n-#line 86 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p;p--;{ found_syllable (consonant_syllable); }}\n+#line 93 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p;p--;{ found_syllable (myanmar_consonant_syllable); }}\n@@ -392,2 +427,2 @@\n-#line 89 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p;p--;{ found_syllable (broken_cluster); }}\n+#line 96 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p;p--;{ found_syllable (myanmar_broken_cluster); }}\n@@ -396,2 +431,2 @@\n-#line 90 \"hb-ot-shape-complex-myanmar-machine.rl\"\n-        {te = p;p--;{ found_syllable (non_myanmar_cluster); }}\n+#line 97 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+        {te = p;p--;{ found_syllable (myanmar_non_myanmar_cluster); }}\n@@ -399,1 +434,1 @@\n-#line 400 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 435 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -408,1 +443,1 @@\n-#line 409 \"hb-ot-shape-complex-myanmar-machine.hh\"\n+#line 444 \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -424,1 +459,1 @@\n-#line 122 \"hb-ot-shape-complex-myanmar-machine.rl\"\n+#line 129 \"hb-ot-shape-complex-myanmar-machine.rl\"\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-myanmar-machine.hh","additions":62,"deletions":27,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"hb-ot-shape-complex-myanmar-machine.hh\"\n@@ -100,17 +101,0 @@\n-static void\n-override_features_myanmar (hb_ot_shape_planner_t *plan)\n-{\n-  plan->map.disable_feature (HB_TAG('l','i','g','a'));\n-}\n-\n-\n-enum myanmar_syllable_type_t {\n-  myanmar_consonant_syllable,\n-  myanmar_punctuation_cluster,\n-  myanmar_broken_cluster,\n-  myanmar_non_myanmar_cluster,\n-};\n-\n-#include \"hb-ot-shape-complex-myanmar-machine.hh\"\n-\n-\n@@ -274,57 +258,0 @@\n-static inline void\n-insert_dotted_circles_myanmar (const hb_ot_shape_plan_t *plan HB_UNUSED,\n-                               hb_font_t *font,\n-                               hb_buffer_t *buffer)\n-{\n-  if (unlikely (buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE))\n-    return;\n-\n-  \/* Note: This loop is extra overhead, but should not be measurable.\n-   * TODO Use a buffer scratch flag to remove the loop. *\/\n-  bool has_broken_syllables = false;\n-  unsigned int count = buffer->len;\n-  hb_glyph_info_t *info = buffer->info;\n-  for (unsigned int i = 0; i < count; i++)\n-    if ((info[i].syllable() & 0x0F) == myanmar_broken_cluster)\n-    {\n-      has_broken_syllables = true;\n-      break;\n-    }\n-  if (likely (!has_broken_syllables))\n-    return;\n-\n-\n-  hb_codepoint_t dottedcircle_glyph;\n-  if (!font->get_nominal_glyph (0x25CCu, &dottedcircle_glyph))\n-    return;\n-\n-  hb_glyph_info_t dottedcircle = {0};\n-  dottedcircle.codepoint = 0x25CCu;\n-  set_myanmar_properties (dottedcircle);\n-  dottedcircle.codepoint = dottedcircle_glyph;\n-\n-  buffer->clear_output ();\n-\n-  buffer->idx = 0;\n-  unsigned int last_syllable = 0;\n-  while (buffer->idx < buffer->len && buffer->successful)\n-  {\n-    unsigned int syllable = buffer->cur().syllable();\n-    myanmar_syllable_type_t syllable_type = (myanmar_syllable_type_t) (syllable & 0x0F);\n-    if (unlikely (last_syllable != syllable && syllable_type == myanmar_broken_cluster))\n-    {\n-      last_syllable = syllable;\n-\n-      hb_glyph_info_t ginfo = dottedcircle;\n-      ginfo.cluster = buffer->cur().cluster;\n-      ginfo.mask = buffer->cur().mask;\n-      ginfo.syllable() = buffer->cur().syllable();\n-\n-      buffer->output_info (ginfo);\n-    }\n-    else\n-      buffer->next_glyph ();\n-  }\n-  buffer->swap_buffers ();\n-}\n-\n@@ -336,1 +263,5 @@\n-  insert_dotted_circles_myanmar (plan, font, buffer);\n+  if (buffer->message (font, \"start reordering myanmar\"))\n+  {\n+    hb_syllabic_insert_dotted_circles (font, buffer,\n+                                       myanmar_broken_cluster,\n+                                       OT_GB);\n@@ -338,2 +269,4 @@\n-  foreach_syllable (buffer, start, end)\n-    reorder_syllable_myanmar (plan, font->face, buffer, start, end);\n+    foreach_syllable (buffer, start, end)\n+      reorder_syllable_myanmar (plan, font->face, buffer, start, end);\n+    (void) buffer->message (font, \"end reordering myanmar\");\n+  }\n@@ -349,1 +282,1 @@\n-  override_features_myanmar,\n+  nullptr, \/* override_features *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-myanmar.cc","additions":11,"deletions":78,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  unsigned int cat = type & 0x7Fu;\n+  unsigned int cat = type & 0xFFu;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-myanmar.hh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright © 2021  Behdad Esfahbod.\n+ *\n+ *  This is part of HarfBuzz, a text shaping library.\n+ *\n+ * Permission is hereby granted, without written agreement and without\n+ * license or royalty fees, to use, copy, modify, and distribute this\n+ * software and its documentation for any purpose, provided that the\n+ * above copyright notice and the following two paragraphs appear in\n+ * all copies of this software.\n+ *\n+ * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+ * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+ * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+ * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+ * DAMAGE.\n+ *\n+ * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+ * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+ * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+ * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+ *\/\n+\n+#include \"hb.hh\"\n+\n+#ifndef HB_NO_OT_SHAPE\n+\n+#include \"hb-ot-shape-complex-syllabic.hh\"\n+\n+\n+void\n+hb_syllabic_insert_dotted_circles (hb_font_t *font,\n+                                   hb_buffer_t *buffer,\n+                                   unsigned int broken_syllable_type,\n+                                   unsigned int dottedcircle_category,\n+                                   int repha_category)\n+{\n+  if (unlikely (buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE))\n+    return;\n+\n+  \/* Note: This loop is extra overhead, but should not be measurable.\n+   * TODO Use a buffer scratch flag to remove the loop. *\/\n+  bool has_broken_syllables = false;\n+  unsigned int count = buffer->len;\n+  hb_glyph_info_t *info = buffer->info;\n+  for (unsigned int i = 0; i < count; i++)\n+    if ((info[i].syllable() & 0x0F) == broken_syllable_type)\n+    {\n+      has_broken_syllables = true;\n+      break;\n+    }\n+  if (likely (!has_broken_syllables))\n+    return;\n+\n+\n+  hb_codepoint_t dottedcircle_glyph;\n+  if (!font->get_nominal_glyph (0x25CCu, &dottedcircle_glyph))\n+    return;\n+\n+  hb_glyph_info_t dottedcircle = {0};\n+  dottedcircle.codepoint = 0x25CCu;\n+  dottedcircle.complex_var_u8_category() = dottedcircle_category;\n+  dottedcircle.codepoint = dottedcircle_glyph;\n+\n+  buffer->clear_output ();\n+\n+  buffer->idx = 0;\n+  unsigned int last_syllable = 0;\n+  while (buffer->idx < buffer->len && buffer->successful)\n+  {\n+    unsigned int syllable = buffer->cur().syllable();\n+    if (unlikely (last_syllable != syllable && (syllable & 0x0F) == broken_syllable_type))\n+    {\n+      last_syllable = syllable;\n+\n+      hb_glyph_info_t ginfo = dottedcircle;\n+      ginfo.cluster = buffer->cur().cluster;\n+      ginfo.mask = buffer->cur().mask;\n+      ginfo.syllable() = buffer->cur().syllable();\n+\n+      \/* Insert dottedcircle after possible Repha. *\/\n+      if (repha_category != -1)\n+      {\n+        while (buffer->idx < buffer->len && buffer->successful &&\n+               last_syllable == buffer->cur().syllable() &&\n+               buffer->cur().complex_var_u8_category() == (unsigned) repha_category)\n+          (void) buffer->next_glyph ();\n+      }\n+\n+      (void) buffer->output_info (ginfo);\n+    }\n+    else\n+      (void) buffer->next_glyph ();\n+  }\n+  buffer->swap_buffers ();\n+}\n+\n+\n+#endif\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-syllabic.cc","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright © 2021  Behdad Esfahbod.\n+ *\n+ *  This is part of HarfBuzz, a text shaping library.\n+ *\n+ * Permission is hereby granted, without written agreement and without\n+ * license or royalty fees, to use, copy, modify, and distribute this\n+ * software and its documentation for any purpose, provided that the\n+ * above copyright notice and the following two paragraphs appear in\n+ * all copies of this software.\n+ *\n+ * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+ * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+ * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+ * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+ * DAMAGE.\n+ *\n+ * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+ * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+ * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+ * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+ * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+ *\/\n+\n+#ifndef HB_OT_SHAPE_COMPLEX_SYLLABIC_HH\n+#define HB_OT_SHAPE_COMPLEX_SYLLABIC_HH\n+\n+#include \"hb.hh\"\n+\n+#include \"hb-ot-shape-complex.hh\"\n+\n+\n+HB_INTERNAL void\n+hb_syllabic_insert_dotted_circles (hb_font_t *font,\n+                                   hb_buffer_t *buffer,\n+                                   unsigned int broken_syllable_type,\n+                                   unsigned int dottedcircle_category,\n+                                   int repha_category = -1);\n+\n+\n+#endif \/* HB_OT_SHAPE_COMPLEX_SYLLABIC_HH *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-syllabic.hh","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -326,1 +326,1 @@\n-  for (buffer->idx = 0; buffer->idx < count && buffer->successful;)\n+  for (buffer->idx = 0; buffer->idx < count \/* No need for: && buffer->successful *\/;)\n@@ -329,2 +329,3 @@\n-    if (likely (!IS_SARA_AM (u))) {\n-      buffer->next_glyph ();\n+    if (likely (!IS_SARA_AM (u)))\n+    {\n+      if (unlikely (!buffer->next_glyph ())) break;\n@@ -335,5 +336,3 @@\n-    hb_glyph_info_t &nikhahit = buffer->output_glyph (NIKHAHIT_FROM_SARA_AM (u));\n-    _hb_glyph_info_set_continuation (&nikhahit);\n-    buffer->replace_glyph (SARA_AA_FROM_SARA_AM (u));\n-    if (unlikely (!buffer->successful))\n-      return;\n+    (void) buffer->output_glyph (NIKHAHIT_FROM_SARA_AM (u));\n+    _hb_glyph_info_set_continuation (&buffer->prev());\n+    if (unlikely (!buffer->replace_glyph (SARA_AA_FROM_SARA_AM (u)))) break;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-thai.cc","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -4,26 +3,26 @@\n- * Copyright © 2015  Mozilla Foundation.\n- * Copyright © 2015  Google, Inc.\n- *\n- *  This is part of HarfBuzz, a text shaping library.\n- *\n- * Permission is hereby granted, without written agreement and without\n- * license or royalty fees, to use, copy, modify, and distribute this\n- * software and its documentation for any purpose, provided that the\n- * above copyright notice and the following two paragraphs appear in\n- * all copies of this software.\n- *\n- * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n- * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n- * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n- * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n- * DAMAGE.\n- *\n- * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n- * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n- * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n- * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n- *\n- * Mozilla Author(s): Jonathan Kew\n- * Google Author(s): Behdad Esfahbod\n- *\/\n+* Copyright © 2015  Mozilla Foundation.\n+* Copyright © 2015  Google, Inc.\n+*\n+*  This is part of HarfBuzz, a text shaping library.\n+*\n+* Permission is hereby granted, without written agreement and without\n+* license or royalty fees, to use, copy, modify, and distribute this\n+* software and its documentation for any purpose, provided that the\n+* above copyright notice and the following two paragraphs appear in\n+* all copies of this software.\n+*\n+* IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n+* DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n+* ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n+* IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n+* DAMAGE.\n+*\n+* THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n+* BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n+* FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n+* ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n+* PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n+*\n+* Mozilla Author(s): Jonathan Kew\n+* Google Author(s): Behdad Esfahbod\n+*\/\n@@ -36,0 +35,20 @@\n+#include \"hb-ot-shape-complex-syllabic.hh\"\n+\n+\/* buffer var allocations *\/\n+#define use_category() complex_var_u8_category()\n+\n+#define USE(Cat) use_syllable_machine_ex_##Cat\n+\n+enum use_syllable_type_t {\n+        use_independent_cluster,\n+        use_virama_terminated_cluster,\n+        use_sakot_terminated_cluster,\n+        use_standard_cluster,\n+        use_number_joiner_terminated_cluster,\n+        use_numeral_cluster,\n+        use_symbol_cluster,\n+        use_hieroglyph_cluster,\n+        use_broken_cluster,\n+        use_non_cluster,\n+};\n+\n@@ -37,1 +56,43 @@\n-#line 38 \"hb-ot-shape-complex-use-machine.hh\"\n+#line 57 \"hb-ot-shape-complex-use-machine.hh\"\n+#define use_syllable_machine_ex_B 1u\n+#define use_syllable_machine_ex_CMAbv 31u\n+#define use_syllable_machine_ex_CMBlw 32u\n+#define use_syllable_machine_ex_CS 43u\n+#define use_syllable_machine_ex_FAbv 24u\n+#define use_syllable_machine_ex_FBlw 25u\n+#define use_syllable_machine_ex_FMAbv 45u\n+#define use_syllable_machine_ex_FMBlw 46u\n+#define use_syllable_machine_ex_FMPst 47u\n+#define use_syllable_machine_ex_FPst 26u\n+#define use_syllable_machine_ex_G 49u\n+#define use_syllable_machine_ex_GB 5u\n+#define use_syllable_machine_ex_H 12u\n+#define use_syllable_machine_ex_HN 13u\n+#define use_syllable_machine_ex_HVM 44u\n+#define use_syllable_machine_ex_J 50u\n+#define use_syllable_machine_ex_MAbv 27u\n+#define use_syllable_machine_ex_MBlw 28u\n+#define use_syllable_machine_ex_MPre 30u\n+#define use_syllable_machine_ex_MPst 29u\n+#define use_syllable_machine_ex_N 4u\n+#define use_syllable_machine_ex_O 0u\n+#define use_syllable_machine_ex_R 18u\n+#define use_syllable_machine_ex_S 19u\n+#define use_syllable_machine_ex_SB 51u\n+#define use_syllable_machine_ex_SE 52u\n+#define use_syllable_machine_ex_SMAbv 41u\n+#define use_syllable_machine_ex_SMBlw 42u\n+#define use_syllable_machine_ex_SUB 11u\n+#define use_syllable_machine_ex_Sk 48u\n+#define use_syllable_machine_ex_VAbv 33u\n+#define use_syllable_machine_ex_VBlw 34u\n+#define use_syllable_machine_ex_VMAbv 37u\n+#define use_syllable_machine_ex_VMBlw 38u\n+#define use_syllable_machine_ex_VMPre 23u\n+#define use_syllable_machine_ex_VMPst 39u\n+#define use_syllable_machine_ex_VPre 22u\n+#define use_syllable_machine_ex_VPst 35u\n+#define use_syllable_machine_ex_ZWNJ 14u\n+\n+\n+#line 99 \"hb-ot-shape-complex-use-machine.hh\"\n@@ -39,10 +100,16 @@\n-        12u, 48u, 1u, 15u, 1u, 1u, 12u, 48u, 1u, 1u, 0u, 48u, 21u, 21u, 11u, 48u,\n-        11u, 48u, 1u, 15u, 1u, 1u, 11u, 48u, 22u, 48u, 23u, 48u, 24u, 47u, 25u, 47u,\n-        26u, 47u, 45u, 46u, 46u, 46u, 24u, 48u, 24u, 48u, 24u, 48u, 1u, 1u, 24u, 48u,\n-        23u, 48u, 23u, 48u, 23u, 48u, 22u, 48u, 22u, 48u, 22u, 48u, 22u, 48u, 11u, 48u,\n-        1u, 48u, 11u, 48u, 13u, 21u, 4u, 4u, 13u, 13u, 11u, 48u, 11u, 48u, 41u, 42u,\n-        42u, 42u, 11u, 48u, 11u, 48u, 22u, 48u, 23u, 48u, 24u, 47u, 25u, 47u, 26u, 47u,\n-        45u, 46u, 46u, 46u, 24u, 48u, 24u, 48u, 24u, 48u, 24u, 48u, 23u, 48u, 23u, 48u,\n-        23u, 48u, 22u, 48u, 22u, 48u, 22u, 48u, 22u, 48u, 11u, 48u, 1u, 48u, 1u, 15u,\n-        4u, 4u, 13u, 21u, 13u, 13u, 12u, 48u, 1u, 48u, 11u, 48u, 41u, 42u, 42u, 42u,\n-        21u, 42u, 1u, 5u, 0\n+        1u, 1u, 1u, 1u, 0u, 37u, 5u, 34u,\n+        5u, 34u, 1u, 1u, 10u, 34u, 11u, 34u,\n+        12u, 33u, 13u, 33u, 14u, 33u, 31u, 32u,\n+        32u, 32u, 12u, 34u, 12u, 34u, 12u, 34u,\n+        1u, 1u, 12u, 34u, 11u, 34u, 11u, 34u,\n+        11u, 34u, 10u, 34u, 10u, 34u, 10u, 34u,\n+        5u, 34u, 1u, 34u, 7u, 7u, 3u, 3u,\n+        5u, 34u, 27u, 28u, 28u, 28u, 5u, 34u,\n+        10u, 34u, 11u, 34u, 12u, 33u, 13u, 33u,\n+        14u, 33u, 31u, 32u, 32u, 32u, 12u, 34u,\n+        12u, 34u, 12u, 34u, 12u, 34u, 11u, 34u,\n+        11u, 34u, 11u, 34u, 10u, 34u, 10u, 34u,\n+        10u, 34u, 5u, 34u, 1u, 34u, 1u, 1u,\n+        3u, 3u, 7u, 7u, 1u, 34u, 5u, 34u,\n+        27u, 28u, 28u, 28u, 1u, 4u, 36u, 38u,\n+        35u, 38u, 35u, 37u, 0u\n@@ -51,11 +118,8 @@\n-static const char _use_syllable_machine_key_spans[] = {\n-        37, 15, 1, 37, 1, 49, 1, 38,\n-        38, 15, 1, 38, 27, 26, 24, 23,\n-        22, 2, 1, 25, 25, 25, 1, 25,\n-        26, 26, 26, 27, 27, 27, 27, 38,\n-        48, 38, 9, 1, 1, 38, 38, 2,\n-        1, 38, 38, 27, 26, 24, 23, 22,\n-        2, 1, 25, 25, 25, 25, 26, 26,\n-        26, 27, 27, 27, 27, 38, 48, 15,\n-        1, 9, 1, 37, 48, 38, 2, 1,\n-        22, 5\n+static const signed char _use_syllable_machine_char_class[] = {\n+        0, 1, 2, 2, 3, 4, 2, 2,\n+        2, 2, 2, 5, 6, 7, 2, 2,\n+        2, 2, 8, 9, 2, 2, 10, 11,\n+        12, 13, 14, 15, 16, 17, 18, 19,\n+        20, 21, 22, 23, 2, 24, 25, 26,\n+        2, 27, 28, 29, 30, 31, 32, 33,\n+        34, 35, 36, 37, 38, 0\n@@ -65,10 +129,8 @@\n-        0, 38, 54, 56, 94, 96, 146, 148,\n-        187, 226, 242, 244, 283, 311, 338, 363,\n-        387, 410, 413, 415, 441, 467, 493, 495,\n-        521, 548, 575, 602, 630, 658, 686, 714,\n-        753, 802, 841, 851, 853, 855, 894, 933,\n-        936, 938, 977, 1016, 1044, 1071, 1096, 1120,\n-        1143, 1146, 1148, 1174, 1200, 1226, 1252, 1279,\n-        1306, 1333, 1361, 1389, 1417, 1445, 1484, 1533,\n-        1549, 1551, 1561, 1563, 1601, 1650, 1689, 1692,\n-        1694, 1717\n+        0, 1, 2, 40, 70, 100, 101, 126,\n+        150, 172, 193, 213, 215, 216, 239, 262,\n+        285, 286, 309, 333, 357, 381, 406, 431,\n+        456, 486, 520, 521, 522, 552, 554, 555,\n+        585, 610, 634, 656, 677, 697, 699, 700,\n+        723, 746, 769, 792, 816, 840, 864, 889,\n+        914, 939, 969, 1003, 1004, 1005, 1006, 1040,\n+        1070, 1072, 1073, 1077, 1080, 1084, 0\n@@ -77,217 +139,137 @@\n-static const char _use_syllable_machine_indicies[] = {\n-        1, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        1, 0, 0, 0, 1, 0, 3, 2,\n-        2, 2, 2, 2, 2, 2, 2, 2,\n-        2, 2, 2, 2, 4, 2, 3, 2,\n-        6, 5, 5, 5, 5, 5, 5, 5,\n-        5, 5, 5, 5, 5, 5, 5, 5,\n-        5, 5, 5, 5, 5, 5, 5, 5,\n-        5, 5, 5, 5, 5, 5, 5, 5,\n-        6, 5, 5, 5, 6, 5, 7, 5,\n-        8, 9, 10, 8, 11, 12, 10, 10,\n-        10, 10, 10, 3, 13, 14, 10, 15,\n-        8, 8, 16, 17, 10, 10, 18, 19,\n-        20, 21, 22, 23, 24, 18, 25, 26,\n-        27, 28, 29, 30, 10, 31, 32, 33,\n-        10, 34, 35, 36, 37, 38, 39, 40,\n-        13, 10, 42, 41, 44, 1, 43, 43,\n-        45, 43, 43, 43, 43, 43, 46, 47,\n-        48, 49, 50, 51, 52, 53, 47, 54,\n-        46, 55, 56, 57, 58, 43, 59, 60,\n-        61, 43, 43, 43, 43, 62, 63, 64,\n-        65, 1, 43, 44, 1, 43, 43, 45,\n-        43, 43, 43, 43, 43, 66, 47, 48,\n-        49, 50, 51, 52, 53, 47, 54, 55,\n-        55, 56, 57, 58, 43, 59, 60, 61,\n-        43, 43, 43, 43, 62, 63, 64, 65,\n-        1, 43, 44, 67, 67, 67, 67, 67,\n-        67, 67, 67, 67, 67, 67, 67, 67,\n-        68, 67, 44, 67, 44, 1, 43, 43,\n-        45, 43, 43, 43, 43, 43, 43, 47,\n-        48, 49, 50, 51, 52, 53, 47, 54,\n-        55, 55, 56, 57, 58, 43, 59, 60,\n-        61, 43, 43, 43, 43, 62, 63, 64,\n-        65, 1, 43, 47, 48, 49, 50, 51,\n-        43, 43, 43, 43, 43, 43, 56, 57,\n-        58, 43, 59, 60, 61, 43, 43, 43,\n-        43, 48, 63, 64, 65, 69, 43, 48,\n-        49, 50, 51, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 59, 60, 61,\n-        43, 43, 43, 43, 43, 63, 64, 65,\n-        69, 43, 49, 50, 51, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 63,\n-        64, 65, 43, 50, 51, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 63,\n-        64, 65, 43, 51, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 63, 64,\n-        65, 43, 63, 64, 43, 64, 43, 49,\n-        50, 51, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 59, 60, 61, 43,\n-        43, 43, 43, 43, 63, 64, 65, 69,\n-        43, 49, 50, 51, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 60,\n-        61, 43, 43, 43, 43, 43, 63, 64,\n-        65, 69, 43, 49, 50, 51, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 43,\n-        43, 43, 61, 43, 43, 43, 43, 43,\n-        63, 64, 65, 69, 43, 71, 70, 49,\n-        50, 51, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 43, 43, 43, 43,\n-        43, 43, 43, 43, 63, 64, 65, 69,\n-        43, 48, 49, 50, 51, 43, 43, 43,\n-        43, 43, 43, 56, 57, 58, 43, 59,\n-        60, 61, 43, 43, 43, 43, 48, 63,\n-        64, 65, 69, 43, 48, 49, 50, 51,\n-        43, 43, 43, 43, 43, 43, 43, 57,\n-        58, 43, 59, 60, 61, 43, 43, 43,\n-        43, 48, 63, 64, 65, 69, 43, 48,\n-        49, 50, 51, 43, 43, 43, 43, 43,\n-        43, 43, 43, 58, 43, 59, 60, 61,\n-        43, 43, 43, 43, 48, 63, 64, 65,\n-        69, 43, 47, 48, 49, 50, 51, 43,\n-        53, 47, 43, 43, 43, 56, 57, 58,\n-        43, 59, 60, 61, 43, 43, 43, 43,\n-        48, 63, 64, 65, 69, 43, 47, 48,\n-        49, 50, 51, 43, 72, 47, 43, 43,\n-        43, 56, 57, 58, 43, 59, 60, 61,\n-        43, 43, 43, 43, 48, 63, 64, 65,\n-        69, 43, 47, 48, 49, 50, 51, 43,\n-        43, 47, 43, 43, 43, 56, 57, 58,\n-        43, 59, 60, 61, 43, 43, 43, 43,\n-        48, 63, 64, 65, 69, 43, 47, 48,\n-        49, 50, 51, 52, 53, 47, 43, 43,\n-        43, 56, 57, 58, 43, 59, 60, 61,\n-        43, 43, 43, 43, 48, 63, 64, 65,\n-        69, 43, 44, 1, 43, 43, 45, 43,\n-        43, 43, 43, 43, 43, 47, 48, 49,\n-        50, 51, 52, 53, 47, 54, 43, 55,\n-        56, 57, 58, 43, 59, 60, 61, 43,\n-        43, 43, 43, 62, 63, 64, 65, 1,\n-        43, 44, 67, 67, 67, 67, 67, 67,\n-        67, 67, 67, 67, 67, 67, 67, 68,\n-        67, 67, 67, 67, 67, 67, 67, 48,\n-        49, 50, 51, 67, 67, 67, 67, 67,\n-        67, 67, 67, 67, 67, 59, 60, 61,\n-        67, 67, 67, 67, 67, 63, 64, 65,\n-        69, 67, 44, 1, 43, 43, 45, 43,\n-        43, 43, 43, 43, 43, 47, 48, 49,\n-        50, 51, 52, 53, 47, 54, 46, 55,\n-        56, 57, 58, 43, 59, 60, 61, 43,\n-        43, 43, 43, 62, 63, 64, 65, 1,\n-        43, 74, 73, 73, 73, 73, 73, 73,\n-        73, 75, 73, 11, 76, 74, 73, 44,\n-        1, 43, 43, 45, 43, 43, 43, 43,\n-        43, 77, 47, 48, 49, 50, 51, 52,\n-        53, 47, 54, 46, 55, 56, 57, 58,\n-        43, 59, 60, 61, 43, 78, 79, 43,\n-        62, 63, 64, 65, 1, 43, 44, 1,\n-        43, 43, 45, 43, 43, 43, 43, 43,\n-        43, 47, 48, 49, 50, 51, 52, 53,\n-        47, 54, 46, 55, 56, 57, 58, 43,\n-        59, 60, 61, 43, 78, 79, 43, 62,\n-        63, 64, 65, 1, 43, 78, 79, 80,\n-        79, 80, 3, 6, 81, 81, 82, 81,\n-        81, 81, 81, 81, 83, 18, 19, 20,\n-        21, 22, 23, 24, 18, 25, 27, 27,\n-        28, 29, 30, 81, 31, 32, 33, 81,\n-        81, 81, 81, 37, 38, 39, 40, 6,\n-        81, 3, 6, 81, 81, 82, 81, 81,\n-        81, 81, 81, 81, 18, 19, 20, 21,\n-        22, 23, 24, 18, 25, 27, 27, 28,\n-        29, 30, 81, 31, 32, 33, 81, 81,\n-        81, 81, 37, 38, 39, 40, 6, 81,\n-        18, 19, 20, 21, 22, 81, 81, 81,\n-        81, 81, 81, 28, 29, 30, 81, 31,\n-        32, 33, 81, 81, 81, 81, 19, 38,\n-        39, 40, 84, 81, 19, 20, 21, 22,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 31, 32, 33, 81, 81, 81,\n-        81, 81, 38, 39, 40, 84, 81, 20,\n-        21, 22, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 38, 39, 40, 81,\n-        21, 22, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 38, 39, 40, 81,\n-        22, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 38, 39, 40, 81, 38,\n-        39, 81, 39, 81, 20, 21, 22, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 31, 32, 33, 81, 81, 81, 81,\n-        81, 38, 39, 40, 84, 81, 20, 21,\n-        22, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 32, 33, 81, 81,\n-        81, 81, 81, 38, 39, 40, 84, 81,\n-        20, 21, 22, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 33,\n-        81, 81, 81, 81, 81, 38, 39, 40,\n-        84, 81, 20, 21, 22, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 38,\n-        39, 40, 84, 81, 19, 20, 21, 22,\n-        81, 81, 81, 81, 81, 81, 28, 29,\n-        30, 81, 31, 32, 33, 81, 81, 81,\n-        81, 19, 38, 39, 40, 84, 81, 19,\n-        20, 21, 22, 81, 81, 81, 81, 81,\n-        81, 81, 29, 30, 81, 31, 32, 33,\n-        81, 81, 81, 81, 19, 38, 39, 40,\n-        84, 81, 19, 20, 21, 22, 81, 81,\n-        81, 81, 81, 81, 81, 81, 30, 81,\n-        31, 32, 33, 81, 81, 81, 81, 19,\n-        38, 39, 40, 84, 81, 18, 19, 20,\n-        21, 22, 81, 24, 18, 81, 81, 81,\n-        28, 29, 30, 81, 31, 32, 33, 81,\n-        81, 81, 81, 19, 38, 39, 40, 84,\n-        81, 18, 19, 20, 21, 22, 81, 85,\n-        18, 81, 81, 81, 28, 29, 30, 81,\n-        31, 32, 33, 81, 81, 81, 81, 19,\n-        38, 39, 40, 84, 81, 18, 19, 20,\n-        21, 22, 81, 81, 18, 81, 81, 81,\n-        28, 29, 30, 81, 31, 32, 33, 81,\n-        81, 81, 81, 19, 38, 39, 40, 84,\n-        81, 18, 19, 20, 21, 22, 23, 24,\n-        18, 81, 81, 81, 28, 29, 30, 81,\n-        31, 32, 33, 81, 81, 81, 81, 19,\n-        38, 39, 40, 84, 81, 3, 6, 81,\n-        81, 82, 81, 81, 81, 81, 81, 81,\n-        18, 19, 20, 21, 22, 23, 24, 18,\n-        25, 81, 27, 28, 29, 30, 81, 31,\n-        32, 33, 81, 81, 81, 81, 37, 38,\n-        39, 40, 6, 81, 3, 81, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        81, 81, 4, 81, 81, 81, 81, 81,\n-        81, 81, 19, 20, 21, 22, 81, 81,\n-        81, 81, 81, 81, 81, 81, 81, 81,\n-        31, 32, 33, 81, 81, 81, 81, 81,\n-        38, 39, 40, 84, 81, 3, 86, 86,\n-        86, 86, 86, 86, 86, 86, 86, 86,\n-        86, 86, 86, 4, 86, 87, 81, 14,\n-        81, 81, 81, 81, 81, 81, 81, 88,\n-        81, 14, 81, 6, 86, 86, 86, 86,\n-        86, 86, 86, 86, 86, 86, 86, 86,\n-        86, 86, 86, 86, 86, 86, 86, 86,\n-        86, 86, 86, 86, 86, 86, 86, 86,\n-        86, 86, 86, 6, 86, 86, 86, 6,\n-        86, 9, 81, 81, 81, 9, 81, 81,\n-        81, 81, 81, 3, 6, 14, 81, 82,\n-        81, 81, 81, 81, 81, 81, 18, 19,\n-        20, 21, 22, 23, 24, 18, 25, 26,\n-        27, 28, 29, 30, 81, 31, 32, 33,\n-        81, 34, 35, 81, 37, 38, 39, 40,\n-        6, 81, 3, 6, 81, 81, 82, 81,\n-        81, 81, 81, 81, 81, 18, 19, 20,\n-        21, 22, 23, 24, 18, 25, 26, 27,\n-        28, 29, 30, 81, 31, 32, 33, 81,\n-        81, 81, 81, 37, 38, 39, 40, 6,\n-        81, 34, 35, 81, 35, 81, 78, 80,\n-        80, 80, 80, 80, 80, 80, 80, 80,\n-        80, 80, 80, 80, 80, 80, 80, 80,\n-        80, 80, 78, 79, 80, 9, 86, 86,\n-        86, 9, 86, 0\n+static const signed char _use_syllable_machine_indicies[] = {\n+        1, 2, 4, 5, 6, 7, 8, 1,\n+        9, 10, 11, 12, 13, 14, 15, 16,\n+        17, 18, 19, 13, 20, 21, 22, 23,\n+        24, 25, 26, 27, 28, 29, 30, 31,\n+        32, 33, 34, 35, 9, 36, 6, 37,\n+        39, 40, 38, 38, 38, 41, 42, 43,\n+        44, 45, 46, 47, 41, 48, 5, 49,\n+        50, 51, 52, 53, 54, 55, 38, 38,\n+        38, 56, 57, 58, 59, 40, 39, 40,\n+        38, 38, 38, 41, 42, 43, 44, 45,\n+        46, 47, 41, 48, 49, 49, 50, 51,\n+        52, 53, 54, 55, 38, 38, 38, 56,\n+        57, 58, 59, 40, 39, 41, 42, 43,\n+        44, 45, 38, 38, 38, 38, 38, 38,\n+        50, 51, 52, 53, 54, 55, 38, 38,\n+        38, 42, 57, 58, 59, 61, 42, 43,\n+        44, 45, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 53, 54, 55, 38, 38,\n+        38, 38, 57, 58, 59, 61, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 38, 38, 38, 38,\n+        38, 57, 58, 59, 44, 45, 38, 38,\n+        38, 38, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 38, 38, 57, 58,\n+        59, 45, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 38, 38, 38, 38,\n+        38, 38, 57, 58, 59, 57, 58, 58,\n+        43, 44, 45, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 53, 54, 55, 38,\n+        38, 38, 38, 57, 58, 59, 61, 43,\n+        44, 45, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 54, 55, 38, 38,\n+        38, 38, 57, 58, 59, 61, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 55, 38, 38, 38,\n+        38, 57, 58, 59, 61, 63, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 38,\n+        38, 38, 38, 38, 38, 38, 38, 38,\n+        38, 57, 58, 59, 61, 42, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 50,\n+        51, 52, 53, 54, 55, 38, 38, 38,\n+        42, 57, 58, 59, 61, 42, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 38,\n+        51, 52, 53, 54, 55, 38, 38, 38,\n+        42, 57, 58, 59, 61, 42, 43, 44,\n+        45, 38, 38, 38, 38, 38, 38, 38,\n+        38, 52, 53, 54, 55, 38, 38, 38,\n+        42, 57, 58, 59, 61, 41, 42, 43,\n+        44, 45, 38, 47, 41, 38, 38, 38,\n+        50, 51, 52, 53, 54, 55, 38, 38,\n+        38, 42, 57, 58, 59, 61, 41, 42,\n+        43, 44, 45, 38, 38, 41, 38, 38,\n+        38, 50, 51, 52, 53, 54, 55, 38,\n+        38, 38, 42, 57, 58, 59, 61, 41,\n+        42, 43, 44, 45, 46, 47, 41, 38,\n+        38, 38, 50, 51, 52, 53, 54, 55,\n+        38, 38, 38, 42, 57, 58, 59, 61,\n+        39, 40, 38, 38, 38, 41, 42, 43,\n+        44, 45, 46, 47, 41, 48, 38, 49,\n+        50, 51, 52, 53, 54, 55, 38, 38,\n+        38, 56, 57, 58, 59, 40, 39, 60,\n+        60, 60, 60, 60, 60, 60, 60, 60,\n+        42, 43, 44, 45, 60, 60, 60, 60,\n+        60, 60, 60, 60, 60, 53, 54, 55,\n+        60, 60, 60, 60, 57, 58, 59, 61,\n+        65, 7, 39, 40, 38, 38, 38, 41,\n+        42, 43, 44, 45, 46, 47, 41, 48,\n+        5, 49, 50, 51, 52, 53, 54, 55,\n+        12, 67, 38, 56, 57, 58, 59, 40,\n+        12, 67, 67, 1, 70, 69, 69, 69,\n+        13, 14, 15, 16, 17, 18, 19, 13,\n+        20, 22, 22, 23, 24, 25, 26, 27,\n+        28, 69, 69, 69, 32, 33, 34, 35,\n+        70, 13, 14, 15, 16, 17, 69, 69,\n+        69, 69, 69, 69, 23, 24, 25, 26,\n+        27, 28, 69, 69, 69, 14, 33, 34,\n+        35, 71, 14, 15, 16, 17, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 26,\n+        27, 28, 69, 69, 69, 69, 33, 34,\n+        35, 71, 15, 16, 17, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 69, 69, 33, 34, 35,\n+        16, 17, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 33, 34, 35, 17, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 33, 34,\n+        35, 33, 34, 34, 15, 16, 17, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        26, 27, 28, 69, 69, 69, 69, 33,\n+        34, 35, 71, 15, 16, 17, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        27, 28, 69, 69, 69, 69, 33, 34,\n+        35, 71, 15, 16, 17, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        28, 69, 69, 69, 69, 33, 34, 35,\n+        71, 15, 16, 17, 69, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 69, 33, 34, 35, 71,\n+        14, 15, 16, 17, 69, 69, 69, 69,\n+        69, 69, 23, 24, 25, 26, 27, 28,\n+        69, 69, 69, 14, 33, 34, 35, 71,\n+        14, 15, 16, 17, 69, 69, 69, 69,\n+        69, 69, 69, 24, 25, 26, 27, 28,\n+        69, 69, 69, 14, 33, 34, 35, 71,\n+        14, 15, 16, 17, 69, 69, 69, 69,\n+        69, 69, 69, 69, 25, 26, 27, 28,\n+        69, 69, 69, 14, 33, 34, 35, 71,\n+        13, 14, 15, 16, 17, 69, 19, 13,\n+        69, 69, 69, 23, 24, 25, 26, 27,\n+        28, 69, 69, 69, 14, 33, 34, 35,\n+        71, 13, 14, 15, 16, 17, 69, 69,\n+        13, 69, 69, 69, 23, 24, 25, 26,\n+        27, 28, 69, 69, 69, 14, 33, 34,\n+        35, 71, 13, 14, 15, 16, 17, 18,\n+        19, 13, 69, 69, 69, 23, 24, 25,\n+        26, 27, 28, 69, 69, 69, 14, 33,\n+        34, 35, 71, 1, 70, 69, 69, 69,\n+        13, 14, 15, 16, 17, 18, 19, 13,\n+        20, 69, 22, 23, 24, 25, 26, 27,\n+        28, 69, 69, 69, 32, 33, 34, 35,\n+        70, 1, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 14, 15, 16, 17, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        26, 27, 28, 69, 69, 69, 69, 33,\n+        34, 35, 71, 1, 73, 10, 5, 69,\n+        69, 5, 1, 70, 10, 69, 69, 13,\n+        14, 15, 16, 17, 18, 19, 13, 20,\n+        21, 22, 23, 24, 25, 26, 27, 28,\n+        29, 30, 69, 32, 33, 34, 35, 70,\n+        1, 70, 69, 69, 69, 13, 14, 15,\n+        16, 17, 18, 19, 13, 20, 21, 22,\n+        23, 24, 25, 26, 27, 28, 69, 69,\n+        69, 32, 33, 34, 35, 70, 29, 30,\n+        30, 5, 72, 72, 5, 75, 74, 36,\n+        36, 75, 74, 75, 36, 74, 37, 0\n@@ -296,13 +278,9 @@\n-static const char _use_syllable_machine_trans_targs[] = {\n-        5, 9, 5, 41, 2, 5, 1, 53,\n-        6, 7, 5, 34, 37, 63, 64, 67,\n-        68, 72, 43, 44, 45, 46, 47, 57,\n-        58, 60, 69, 61, 54, 55, 56, 50,\n-        51, 52, 70, 71, 73, 62, 48, 49,\n-        5, 5, 5, 5, 8, 0, 33, 12,\n-        13, 14, 15, 16, 27, 28, 30, 31,\n-        24, 25, 26, 19, 20, 21, 32, 17,\n-        18, 5, 11, 5, 10, 22, 5, 23,\n-        29, 5, 35, 36, 5, 38, 39, 40,\n-        5, 5, 3, 42, 4, 59, 5, 65,\n-        66\n+static const signed char _use_syllable_machine_index_defaults[] = {\n+        0, 0, 6, 38, 38, 60, 38, 38,\n+        38, 38, 38, 38, 38, 38, 38, 38,\n+        62, 38, 38, 38, 38, 38, 38, 38,\n+        38, 60, 64, 66, 38, 68, 68, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 69, 69, 69, 69, 69,\n+        69, 69, 69, 72, 69, 69, 69, 69,\n+        69, 69, 72, 74, 74, 74, 0\n@@ -311,13 +289,11 @@\n-static const char _use_syllable_machine_trans_actions[] = {\n-        1, 0, 2, 3, 0, 4, 0, 5,\n-        0, 5, 8, 0, 5, 9, 0, 9,\n-        3, 0, 5, 5, 0, 0, 0, 5,\n-        5, 5, 3, 3, 5, 5, 5, 5,\n-        5, 5, 0, 0, 0, 3, 0, 0,\n-        10, 11, 12, 13, 5, 0, 5, 0,\n-        0, 0, 0, 0, 0, 0, 0, 5,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 14, 5, 15, 0, 0, 16, 0,\n-        0, 17, 0, 0, 18, 5, 0, 0,\n-        19, 20, 0, 3, 0, 5, 21, 0,\n-        0\n+static const signed char _use_syllable_machine_cond_targs[] = {\n+        2, 31, 42, 2, 2, 3, 2, 26,\n+        28, 51, 52, 54, 29, 32, 33, 34,\n+        35, 36, 46, 47, 48, 55, 49, 43,\n+        44, 45, 39, 40, 41, 56, 57, 58,\n+        50, 37, 38, 2, 59, 61, 2, 4,\n+        5, 6, 7, 8, 9, 10, 21, 22,\n+        23, 24, 18, 19, 20, 13, 14, 15,\n+        25, 11, 12, 2, 2, 16, 2, 17,\n+        2, 27, 2, 30, 2, 2, 0, 1,\n+        2, 53, 2, 60, 0\n@@ -326,2 +302,6 @@\n-static const char _use_syllable_machine_to_state_actions[] = {\n-        0, 0, 0, 0, 0, 6, 0, 0,\n+static const signed char _use_syllable_machine_cond_actions[] = {\n+        1, 2, 2, 0, 5, 0, 6, 0,\n+        0, 0, 0, 2, 0, 2, 2, 0,\n+        0, 0, 2, 2, 2, 2, 2, 2,\n+        2, 2, 2, 2, 2, 0, 0, 0,\n+        2, 0, 0, 7, 0, 0, 8, 0,\n@@ -330,0 +310,7 @@\n+        0, 0, 0, 9, 10, 0, 11, 0,\n+        12, 0, 13, 0, 14, 15, 0, 0,\n+        16, 0, 17, 0, 0\n+};\n+\n+static const signed char _use_syllable_machine_to_state_actions[] = {\n+        0, 0, 3, 0, 0, 0, 0, 0,\n@@ -336,1 +323,1 @@\n-        0, 0\n+        0, 0, 0, 0, 0, 0, 0\n@@ -339,3 +326,2 @@\n-static const char _use_syllable_machine_from_state_actions[] = {\n-        0, 0, 0, 0, 0, 7, 0, 0,\n-        0, 0, 0, 0, 0, 0, 0, 0,\n+static const signed char _use_syllable_machine_from_state_actions[] = {\n+        0, 0, 4, 0, 0, 0, 0, 0,\n@@ -348,2 +334,1 @@\n-        0, 0, 0, 0, 0, 0, 0, 0,\n-        0, 0\n+        0, 0, 0, 0, 0, 0, 0\n@@ -352,11 +337,9 @@\n-static const short _use_syllable_machine_eof_trans[] = {\n-        1, 3, 3, 6, 6, 0, 42, 44,\n-        44, 68, 68, 44, 44, 44, 44, 44,\n-        44, 44, 44, 44, 44, 44, 71, 44,\n-        44, 44, 44, 44, 44, 44, 44, 44,\n-        68, 44, 74, 77, 74, 44, 44, 81,\n-        81, 82, 82, 82, 82, 82, 82, 82,\n-        82, 82, 82, 82, 82, 82, 82, 82,\n-        82, 82, 82, 82, 82, 82, 82, 87,\n-        82, 82, 82, 87, 82, 82, 82, 82,\n-        81, 87\n+static const signed char _use_syllable_machine_eof_trans[] = {\n+        1, 1, 4, 39, 39, 61, 39, 39,\n+        39, 39, 39, 39, 39, 39, 39, 39,\n+        63, 39, 39, 39, 39, 39, 39, 39,\n+        39, 61, 65, 67, 39, 69, 69, 70,\n+        70, 70, 70, 70, 70, 70, 70, 70,\n+        70, 70, 70, 70, 70, 70, 70, 70,\n+        70, 70, 70, 73, 70, 70, 70, 70,\n+        70, 70, 73, 75, 75, 75, 0\n@@ -365,2 +348,2 @@\n-static const int use_syllable_machine_start = 5;\n-static const int use_syllable_machine_first_final = 5;\n+static const int use_syllable_machine_start = 2;\n+static const int use_syllable_machine_first_final = 2;\n@@ -369,1 +352,1 @@\n-static const int use_syllable_machine_en_main = 5;\n+static const int use_syllable_machine_en_main = 2;\n@@ -372,1 +355,1 @@\n-#line 38 \"hb-ot-shape-complex-use-machine.rl\"\n+#line 59 \"hb-ot-shape-complex-use-machine.rl\"\n@@ -376,1 +359,1 @@\n-#line 162 \"hb-ot-shape-complex-use-machine.rl\"\n+#line 176 \"hb-ot-shape-complex-use-machine.rl\"\n@@ -380,10 +363,13 @@\n-  HB_STMT_START { \\\n-    if (0) fprintf (stderr, \"syllable %d..%d %s\\n\", ts, te, #syllable_type); \\\n-    for (unsigned int i = ts; i < te; i++) \\\n-      info[i].syllable() = (syllable_serial << 4) | use_##syllable_type; \\\n-    syllable_serial++; \\\n-    if (unlikely (syllable_serial == 16)) syllable_serial = 1; \\\n-  } HB_STMT_END\n-\n-static void\n-find_syllables_use (hb_buffer_t *buffer)\n+HB_STMT_START { \\\n+        if (0) fprintf (stderr, \"syllable %d..%d %s\\n\", (*ts).second.first, (*te).second.first, #syllable_type); \\\n+                for (unsigned i = (*ts).second.first; i < (*te).second.first; ++i) \\\n+        info[i].syllable() = (syllable_serial << 4) | syllable_type; \\\n+        syllable_serial++; \\\n+        if (unlikely (syllable_serial == 16)) syllable_serial = 1; \\\n+        } HB_STMT_END\n+\n+\n+template <typename Iter>\n+struct machine_index_t :\n+hb_iter_with_fallback_t<machine_index_t<Iter>,\n+typename Iter::item_t>\n@@ -391,13 +377,31 @@\n-  unsigned int p, pe, eof, ts, te, act;\n-  int cs;\n-  hb_glyph_info_t *info = buffer->info;\n-\n-#line 396 \"hb-ot-shape-complex-use-machine.hh\"\n-        {\n-        cs = use_syllable_machine_start;\n-        ts = 0;\n-        te = 0;\n-        act = 0;\n-        }\n-\n-#line 182 \"hb-ot-shape-complex-use-machine.rl\"\n+        machine_index_t (const Iter& it) : it (it) {}\n+        machine_index_t (const machine_index_t& o) : it (o.it) {}\n+\n+        static constexpr bool is_random_access_iterator = Iter::is_random_access_iterator;\n+        static constexpr bool is_sorted_iterator = Iter::is_sorted_iterator;\n+\n+        typename Iter::item_t __item__ () const { return *it; }\n+        typename Iter::item_t __item_at__ (unsigned i) const { return it[i]; }\n+        unsigned __len__ () const { return it.len (); }\n+        void __next__ () { ++it; }\n+        void __forward__ (unsigned n) { it += n; }\n+        void __prev__ () { --it; }\n+        void __rewind__ (unsigned n) { it -= n; }\n+        void operator = (unsigned n)\n+        { unsigned index = (*it).first; if (index < n) it += n - index; else if (index > n) it -= index - n; }\n+        void operator = (const machine_index_t& o) { *this = (*o.it).first; }\n+        bool operator == (const machine_index_t& o) const { return (*it).first == (*o.it).first; }\n+        bool operator != (const machine_index_t& o) const { return !(*this == o); }\n+\n+        private:\n+        Iter it;\n+};\n+struct\n+{\n+        template <typename Iter,\n+        hb_requires (hb_is_iterable (Iter))>\n+        machine_index_t<hb_iter_type<Iter>>\n+        operator () (Iter&& it) const\n+        { return machine_index_t<hb_iter_type<Iter>> (hb_iter (it)); }\n+}\n+HB_FUNCOBJ (machine_index);\n@@ -406,2 +410,0 @@\n-  p = 0;\n-  pe = eof = buffer->len;\n@@ -409,1 +411,3 @@\n-  unsigned int syllable_serial = 1;\n+static bool\n+not_standard_default_ignorable (const hb_glyph_info_t &i)\n+{ return !(i.use_category() == USE(O) && _hb_glyph_info_is_default_ignorable (&i)); }\n@@ -411,1 +415,10 @@\n-#line 412 \"hb-ot-shape-complex-use-machine.hh\"\n+static inline void\n+find_syllables_use (hb_buffer_t *buffer)\n+{\n+        hb_glyph_info_t *info = buffer->info;\n+        auto p =\n+        + hb_iter (info, buffer->len)\n+        | hb_enumerate\n+        | hb_filter ([] (const hb_glyph_info_t &i) { return not_standard_default_ignorable (i); },\n+        hb_second)\n+        | hb_filter ([&] (const hb_pair_t<unsigned, const hb_glyph_info_t &> p)\n@@ -413,13 +426,21 @@\n-        int _slen;\n-        int _trans;\n-        const unsigned char *_keys;\n-        const char *_inds;\n-        if ( p == pe )\n-                goto _test_eof;\n-_resume:\n-        switch ( _use_syllable_machine_from_state_actions[cs] ) {\n-        case 7:\n-#line 1 \"NONE\"\n-        {ts = p;}\n-        break;\n-#line 426 \"hb-ot-shape-complex-use-machine.hh\"\n+                if (p.second.use_category() == USE(ZWNJ))\n+                        for (unsigned i = p.first + 1; i < buffer->len; ++i)\n+                if (not_standard_default_ignorable (info[i]))\n+                        return !_hb_glyph_info_is_unicode_mark (&info[i]);\n+                return true;\n+        })\n+        | hb_enumerate\n+        | machine_index\n+        ;\n+        auto pe = p + p.len ();\n+        auto eof = +pe;\n+        auto ts = +p;\n+        auto te = +p;\n+        unsigned int act HB_UNUSED;\n+        int cs;\n+\n+#line 443 \"hb-ot-shape-complex-use-machine.hh\"\n+        {\n+                cs = (int)use_syllable_machine_start;\n+                ts = 0;\n+                te = 0;\n@@ -428,7 +449,1 @@\n-        _keys = _use_syllable_machine_trans_keys + (cs<<1);\n-        _inds = _use_syllable_machine_indicies + _use_syllable_machine_index_offsets[cs];\n-\n-        _slen = _use_syllable_machine_key_spans[cs];\n-        _trans = _inds[ _slen > 0 && _keys[0] <=( info[p].use_category()) &&\n-                ( info[p].use_category()) <= _keys[1] ?\n-                ( info[p].use_category()) - _keys[0] : _slen ];\n+#line 260 \"hb-ot-shape-complex-use-machine.rl\"\n@@ -436,2 +451,0 @@\n-_eof_trans:\n-        cs = _use_syllable_machine_trans_targs[_trans];\n@@ -439,2 +452,1 @@\n-        if ( _use_syllable_machine_trans_actions[_trans] == 0 )\n-                goto _again;\n+        unsigned int syllable_serial = 1;\n@@ -442,2 +454,12 @@\n-        switch ( _use_syllable_machine_trans_actions[_trans] ) {\n-        case 5:\n+#line 455 \"hb-ot-shape-complex-use-machine.hh\"\n+        {\n+                unsigned int _trans = 0;\n+                const unsigned char * _keys;\n+                const signed char * _inds;\n+                int _ic;\n+                _resume: {}\n+                if ( p == pe && p != eof )\n+                        goto _out;\n+                switch ( _use_syllable_machine_from_state_actions[cs] ) {\n+                        case 4:  {\n+                                {\n@@ -445,63 +467,37 @@\n-        {te = p+1;}\n-        break;\n-        case 12:\n-#line 150 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p+1;{ found_syllable (independent_cluster); }}\n-        break;\n-        case 14:\n-#line 153 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p+1;{ found_syllable (standard_cluster); }}\n-        break;\n-        case 10:\n-#line 157 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p+1;{ found_syllable (broken_cluster); }}\n-        break;\n-        case 8:\n-#line 158 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p+1;{ found_syllable (non_cluster); }}\n-        break;\n-        case 11:\n-#line 150 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (independent_cluster); }}\n-        break;\n-        case 15:\n-#line 151 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (virama_terminated_cluster); }}\n-        break;\n-        case 16:\n-#line 152 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (sakot_terminated_cluster); }}\n-        break;\n-        case 13:\n-#line 153 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (standard_cluster); }}\n-        break;\n-        case 18:\n-#line 154 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (number_joiner_terminated_cluster); }}\n-        break;\n-        case 17:\n-#line 155 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (numeral_cluster); }}\n-        break;\n-        case 19:\n-#line 156 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (symbol_cluster); }}\n-        break;\n-        case 20:\n-#line 157 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (broken_cluster); }}\n-        break;\n-        case 21:\n-#line 158 \"hb-ot-shape-complex-use-machine.rl\"\n-        {te = p;p--;{ found_syllable (non_cluster); }}\n-        break;\n-        case 1:\n-#line 153 \"hb-ot-shape-complex-use-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (standard_cluster); }}\n-        break;\n-        case 4:\n-#line 157 \"hb-ot-shape-complex-use-machine.rl\"\n-        {{p = ((te))-1;}{ found_syllable (broken_cluster); }}\n-        break;\n-        case 2:\n+                                        {ts = p;}}\n+\n+#line 470 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                break;\n+                        }\n+                }\n+\n+                if ( p == eof ) {\n+                        if ( _use_syllable_machine_eof_trans[cs] > 0 ) {\n+                                _trans = (unsigned int)_use_syllable_machine_eof_trans[cs] - 1;\n+                        }\n+                }\n+                else {\n+                        _keys = ( _use_syllable_machine_trans_keys + ((cs<<1)));\n+                        _inds = ( _use_syllable_machine_indicies + (_use_syllable_machine_index_offsets[cs]));\n+\n+                        if ( ((*p).second.second.use_category()) <= 52 ) {\n+                                _ic = (int)_use_syllable_machine_char_class[(int)((*p).second.second.use_category()) - 0];\n+                                if ( _ic <= (int)(*( _keys+1)) && _ic >= (int)(*( _keys)) )\n+                                        _trans = (unsigned int)(*( _inds + (int)( _ic - (int)(*( _keys)) ) ));\n+                                else\n+                                        _trans = (unsigned int)_use_syllable_machine_index_defaults[cs];\n+                        }\n+                        else {\n+                                _trans = (unsigned int)_use_syllable_machine_index_defaults[cs];\n+                        }\n+\n+                }\n+                cs = (int)_use_syllable_machine_cond_targs[_trans];\n+\n+                if ( _use_syllable_machine_cond_actions[_trans] != 0 ) {\n+\n+                        switch ( _use_syllable_machine_cond_actions[_trans] ) {\n+                                case 2:  {\n+                                        {\n@@ -509,17 +505,202 @@\n-        {       switch( act ) {\n-        case 8:\n-        {{p = ((te))-1;} found_syllable (broken_cluster); }\n-        break;\n-        case 9:\n-        {{p = ((te))-1;} found_syllable (non_cluster); }\n-        break;\n-        }\n-        }\n-        break;\n-        case 3:\n-#line 1 \"NONE\"\n-        {te = p+1;}\n-#line 157 \"hb-ot-shape-complex-use-machine.rl\"\n-        {act = 8;}\n-        break;\n-        case 9:\n+                                                {te = p+1;}}\n+\n+#line 508 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 5:  {\n+                                        {\n+#line 163 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p+1;{\n+#line 163 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_independent_cluster); }\n+                                                }}\n+\n+#line 521 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 9:  {\n+                                        {\n+#line 166 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p+1;{\n+#line 166 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_standard_cluster); }\n+                                                }}\n+\n+#line 534 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 7:  {\n+                                        {\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p+1;{\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_broken_cluster); }\n+                                                }}\n+\n+#line 547 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 6:  {\n+                                        {\n+#line 172 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p+1;{\n+#line 172 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_non_cluster); }\n+                                                }}\n+\n+#line 560 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 10:  {\n+                                        {\n+#line 164 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 164 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_virama_terminated_cluster); }\n+                                                }}\n+\n+#line 573 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 11:  {\n+                                        {\n+#line 165 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 165 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_sakot_terminated_cluster); }\n+                                                }}\n+\n+#line 586 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 8:  {\n+                                        {\n+#line 166 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 166 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_standard_cluster); }\n+                                                }}\n+\n+#line 599 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 13:  {\n+                                        {\n+#line 167 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 167 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_number_joiner_terminated_cluster); }\n+                                                }}\n+\n+#line 612 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 12:  {\n+                                        {\n+#line 168 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 168 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_numeral_cluster); }\n+                                                }}\n+\n+#line 625 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 14:  {\n+                                        {\n+#line 169 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 169 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_symbol_cluster); }\n+                                                }}\n+\n+#line 638 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 17:  {\n+                                        {\n+#line 170 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 170 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_hieroglyph_cluster); }\n+                                                }}\n+\n+#line 651 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 15:  {\n+                                        {\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_broken_cluster); }\n+                                                }}\n+\n+#line 664 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 16:  {\n+                                        {\n+#line 172 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {te = p;p = p - 1;{\n+#line 172 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_non_cluster); }\n+                                                }}\n+\n+#line 677 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                                case 1:  {\n+                                        {\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                {p = ((te))-1;\n+                                                        {\n+#line 171 \"hb-ot-shape-complex-use-machine.rl\"\n+                                                                found_syllable (use_broken_cluster); }\n+                                                }}\n+\n+#line 691 \"hb-ot-shape-complex-use-machine.hh\"\n+\n+\n+                                        break;\n+                                }\n+                        }\n+\n+                }\n+\n+                if ( p == eof ) {\n+                        if ( cs >= 2 )\n+                                goto _out;\n+                }\n+                else {\n+                        switch ( _use_syllable_machine_to_state_actions[cs] ) {\n+                                case 3:  {\n+                                        {\n@@ -527,6 +708,1 @@\n-        {te = p+1;}\n-#line 158 \"hb-ot-shape-complex-use-machine.rl\"\n-        {act = 9;}\n-        break;\n-#line 532 \"hb-ot-shape-complex-use-machine.hh\"\n-        }\n+                                                {ts = 0;}}\n@@ -534,8 +710,1 @@\n-_again:\n-        switch ( _use_syllable_machine_to_state_actions[cs] ) {\n-        case 6:\n-#line 1 \"NONE\"\n-        {ts = 0;}\n-        break;\n-#line 541 \"hb-ot-shape-complex-use-machine.hh\"\n-        }\n+#line 711 \"hb-ot-shape-complex-use-machine.hh\"\n@@ -543,10 +712,0 @@\n-        if ( ++p != pe )\n-                goto _resume;\n-        _test_eof: {}\n-        if ( p == eof )\n-        {\n-        if ( _use_syllable_machine_eof_trans[cs] > 0 ) {\n-                _trans = _use_syllable_machine_eof_trans[cs] - 1;\n-                goto _eof_trans;\n-        }\n-        }\n@@ -554,0 +713,8 @@\n+                                        break;\n+                                }\n+                        }\n+\n+                        p += 1;\n+                        goto _resume;\n+                }\n+                _out: {}\n@@ -556,1 +723,1 @@\n-#line 190 \"hb-ot-shape-complex-use-machine.rl\"\n+#line 265 \"hb-ot-shape-complex-use-machine.rl\"\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use-machine.hh","additions":651,"deletions":484,"binary":false,"changes":1135,"status":"modified"},{"patch":"@@ -1,873 +0,0 @@\n-\/* == Start of generated table == *\/\n-\/*\n- * The following table is generated by running:\n- *\n- *   .\/gen-use-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt UnicodeData.txt Blocks.txt\n- *\n- * on files with these headers:\n- *\n- * # IndicSyllabicCategory-13.0.0.txt\n- * # Date: 2019-07-22, 19:55:00 GMT [KW, RP]\n- * # IndicPositionalCategory-13.0.0.txt\n- * # Date: 2019-07-23, 00:01:00 GMT [KW, RP]\n- * # Blocks-13.0.0.txt\n- * # Date: 2019-07-10, 19:06:00 GMT [KW]\n- * UnicodeData.txt does not have a header.\n- *\/\n-\n-#include \"hb.hh\"\n-\n-#ifndef HB_NO_OT_SHAPE\n-\n-#include \"hb-ot-shape-complex-use.hh\"\n-\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wunused-macros\"\n-#define B       USE_B   \/* BASE *\/\n-#define CGJ     USE_CGJ \/* CGJ *\/\n-#define CS      USE_CS  \/* CONS_WITH_STACKER *\/\n-#define GB      USE_GB  \/* BASE_OTHER *\/\n-#define H       USE_H   \/* HALANT *\/\n-#define HN      USE_HN  \/* HALANT_NUM *\/\n-#define HVM     USE_HVM \/* HALANT_OR_VOWEL_MODIFIER *\/\n-#define IND     USE_IND \/* BASE_IND *\/\n-#define N       USE_N   \/* BASE_NUM *\/\n-#define O       USE_O   \/* OTHER *\/\n-#define R       USE_R   \/* REPHA *\/\n-#define Rsv     USE_Rsv \/* Reserved *\/\n-#define S       USE_S   \/* SYM *\/\n-#define SUB     USE_SUB \/* CONS_SUB *\/\n-#define Sk      USE_Sk  \/* SAKOT *\/\n-#define VS      USE_VS  \/* VARIATION_SELECTOR *\/\n-#define WJ      USE_WJ  \/* Word_Joiner *\/\n-#define ZWJ     USE_ZWJ \/* ZWJ *\/\n-#define ZWNJ    USE_ZWNJ        \/* ZWNJ *\/\n-#define CMAbv   USE_CMAbv\n-#define CMBlw   USE_CMBlw\n-#define FAbv    USE_FAbv\n-#define FBlw    USE_FBlw\n-#define FPst    USE_FPst\n-#define FMAbv   USE_FMAbv\n-#define FMBlw   USE_FMBlw\n-#define FMPst   USE_FMPst\n-#define MAbv    USE_MAbv\n-#define MBlw    USE_MBlw\n-#define MPst    USE_MPst\n-#define MPre    USE_MPre\n-#define SMAbv   USE_SMAbv\n-#define SMBlw   USE_SMBlw\n-#define VAbv    USE_VAbv\n-#define VBlw    USE_VBlw\n-#define VPst    USE_VPst\n-#define VPre    USE_VPre\n-#define VMAbv   USE_VMAbv\n-#define VMBlw   USE_VMBlw\n-#define VMPst   USE_VMPst\n-#define VMPre   USE_VMPre\n-#pragma GCC diagnostic pop\n-\n-static const USE_TABLE_ELEMENT_TYPE use_table[] = {\n-\n-\n-#define use_offset_0x0028u 0\n-\n-\n-  \/* Basic Latin *\/\n-                                                                         O,     O,     O,     O,     O,    GB,     O,     O,\n-  \/* 0030 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x00a0u 24\n-\n-\n-  \/* Latin-1 Supplement *\/\n-\n-  \/* 00A0 *\/    GB,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 00B0 *\/     O,     O, FMPst, FMPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 00C0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 00D0 *\/     O,     O,     O,     O,     O,     O,     O,    GB,\n-\n-#define use_offset_0x0348u 80\n-\n-\n-  \/* Combining Diacritical Marks *\/\n-                                                                         O,     O,     O,     O,     O,     O,     O,   CGJ,\n-\n-#define use_offset_0x0900u 88\n-\n-\n-  \/* Devanagari *\/\n-\n-  \/* 0900 *\/ VMAbv, VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0920 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0930 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VPst, CMBlw,     B,  VPst,  VPre,\n-  \/* 0940 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VPst,  VPst,  VPst,  VPst,     H,  VPre,  VPst,\n-  \/* 0950 *\/     O, VMAbv, VMBlw,     O,     O,  VAbv,  VBlw,  VBlw,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0960 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0970 *\/     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-\n-  \/* Bengali *\/\n-\n-  \/* 0980 *\/    GB, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n-  \/* 0990 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 09A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 09B0 *\/     B,     O,     B,     O,     O,     O,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VPre,\n-  \/* 09C0 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPre,     O,     O,  VPst,  VPst,     H,   IND,     O,\n-  \/* 09D0 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     B,     B,     O,     B,\n-  \/* 09E0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 09F0 *\/     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     B,     O, FMAbv,     O,\n-\n-  \/* Gurmukhi *\/\n-\n-  \/* 0A00 *\/     O, VMAbv, VMAbv, VMPst,     O,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     B,\n-  \/* 0A10 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0A30 *\/     B,     O,     B,     B,     O,     B,     B,     O,     B,     B,     O,     O, CMBlw,     O,  VPst,  VPre,\n-  \/* 0A40 *\/  VPst,  VBlw,  VBlw,     O,     O,     O,     O,  VAbv,  VAbv,     O,     O,  VAbv,  VAbv,     H,     O,     O,\n-  \/* 0A50 *\/     O, VMBlw,     O,     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     O,     B,     O,\n-  \/* 0A60 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0A70 *\/ VMAbv, CMAbv,    GB,    GB,     O,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Gujarati *\/\n-\n-  \/* 0A80 *\/     O, VMAbv, VMAbv, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,\n-  \/* 0A90 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0AA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0AB0 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VPre,\n-  \/* 0AC0 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,     O,  VAbv,  VAbv,  VAbv,     O,  VPst,  VPst,     H,     O,     O,\n-  \/* 0AD0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 0AE0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0AF0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     B, VMAbv, VMAbv, VMAbv, CMAbv, CMAbv, CMAbv,\n-\n-  \/* Oriya *\/\n-\n-  \/* 0B00 *\/     O, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n-  \/* 0B10 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0B30 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VAbv,\n-  \/* 0B40 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPst,     O,     O,  VPst,  VPst,     H,     O,     O,\n-  \/* 0B50 *\/     O,     O,     O,     O,     O,  VAbv,  VAbv,  VAbv,     O,     O,     O,     O,     B,     B,     O,     B,\n-  \/* 0B60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0B70 *\/     O,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Tamil *\/\n-\n-  \/* 0B80 *\/     O,     O, VMAbv,   IND,     O,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,\n-  \/* 0B90 *\/     B,     O,     B,     B,     B,     B,     O,     O,     O,     B,     B,     O,     B,     O,     B,     B,\n-  \/* 0BA0 *\/     O,     O,     O,     B,     B,     O,     O,     O,     B,     B,     B,     O,     O,     O,     B,     B,\n-  \/* 0BB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,  VPst,  VPst,\n-  \/* 0BC0 *\/  VAbv,  VPst,  VPst,     O,     O,     O,  VPre,  VPre,  VPre,     O,  VPst,  VPst,  VPst,     H,     O,     O,\n-  \/* 0BD0 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 0BE0 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0BF0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Telugu *\/\n-\n-  \/* 0C00 *\/ VMAbv, VMPst, VMPst, VMPst, VMAbv,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n-  \/* 0C10 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0C20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0C30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,  VAbv,  VAbv,\n-  \/* 0C40 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,  VAbv,  VAbv,  VAbv,     O,  VAbv,  VAbv,  VAbv,     H,     O,     O,\n-  \/* 0C50 *\/     O,     O,     O,     O,     O,  VAbv,  VBlw,     O,     B,     B,     B,     O,     O,     O,     O,     O,\n-  \/* 0C60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0C70 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Kannada *\/\n-\n-  \/* 0C80 *\/     B, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n-  \/* 0C90 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0CA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0CB0 *\/     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VAbv,\n-  \/* 0CC0 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,  VAbv,  VAbv,  VAbv,     O,  VAbv,  VAbv,  VAbv,     H,     O,     O,\n-  \/* 0CD0 *\/     O,     O,     O,     O,     O,  VPst,  VPst,     O,     O,     O,     O,     O,     O,     O,     B,     O,\n-  \/* 0CE0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0CF0 *\/     O,    CS,    CS,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Malayalam *\/\n-\n-  \/* 0D00 *\/ VMAbv, VMAbv, VMPst, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n-  \/* 0D10 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0D20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0D30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,     B,  VPst,  VPst,\n-  \/* 0D40 *\/  VPst,  VPst,  VPst,  VBlw,  VBlw,     O,  VPre,  VPre,  VPre,     O,  VPst,  VPst,  VPst,     H,     R,     O,\n-  \/* 0D50 *\/     O,     O,     O,     O,   IND,   IND,   IND,  VPst,     O,     O,     O,     O,     O,     O,     O,     B,\n-  \/* 0D60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0D70 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,   IND,   IND,   IND,   IND,   IND,   IND,\n-\n-  \/* Sinhala *\/\n-\n-  \/* 0D80 *\/     O, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0D90 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 0DA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0DB0 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     O,     O,\n-  \/* 0DC0 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     H,     O,     O,     O,     O,  VPst,\n-  \/* 0DD0 *\/  VPst,  VPst,  VAbv,  VAbv,  VBlw,     O,  VBlw,     O,  VPst,  VPre,  VPst,  VPre,  VPst,  VPst,  VPst,  VPst,\n-  \/* 0DE0 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0DF0 *\/     O,     O,  VPst,  VPst,     O,     O,     O,     O,\n-\n-#define use_offset_0x0f18u 1360\n-\n-\n-  \/* Tibetan *\/\n-                                                                      VBlw,  VBlw,     O,     O,     O,     O,     O,     O,\n-  \/* 0F20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0F30 *\/     B,     B,     B,     B,     O, FMBlw,     O, FMBlw,     O, CMAbv,     O,     O,     O,     O,  VPst,  VPre,\n-  \/* 0F40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0F50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 0F60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n-  \/* 0F70 *\/     O,  VBlw,  VBlw,  VAbv,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw, VMAbv, VMPst,\n-  \/* 0F80 *\/  VBlw,  VAbv, VMAbv, VMAbv,  VBlw,   IND, VMAbv, VMAbv,     B,     B,     B,     B,     B,   SUB,   SUB,   SUB,\n-  \/* 0F90 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n-  \/* 0FA0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n-  \/* 0FB0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,     O,     O,\n-  \/* 0FC0 *\/     O,     O,     O,     O,     O,     O, FMBlw,     O,\n-\n-#define use_offset_0x1000u 1536\n-\n-\n-  \/* Myanmar *\/\n-\n-  \/* 1000 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1010 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1020 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VAbv,  VAbv,  VBlw,\n-  \/* 1030 *\/  VBlw,  VPre,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMBlw, VMPst,     H,  VAbv,  MPst,  MPre,  MBlw,  MBlw,     B,\n-  \/* 1040 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,    GB,     O,     O,    GB,     O,\n-  \/* 1050 *\/     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VBlw,  VBlw,     B,     B,     B,     B,  MBlw,  MBlw,\n-  \/* 1060 *\/  MBlw,     B,  VPst, VMPst, VMPst,     B,     B,  VPst,  VPst, VMPst, VMPst, VMPst, VMPst, VMPst,     B,     B,\n-  \/* 1070 *\/     B,  VAbv,  VAbv,  VAbv,  VAbv,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1080 *\/     B,     B,  MBlw,  VPst,  VPre,  VAbv,  VAbv, VMPst, VMPst, VMPst, VMPst, VMPst, VMPst, VMBlw,     B, VMPst,\n-  \/* 1090 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMPst, VMPst,  VPst,  VAbv,     O,     O,\n-\n-#define use_offset_0x1700u 1696\n-\n-\n-  \/* Tagalog *\/\n-\n-  \/* 1700 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n-  \/* 1710 *\/     B,     B,  VAbv,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Hanunoo *\/\n-\n-  \/* 1720 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1730 *\/     B,     B,  VAbv,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Buhid *\/\n-\n-  \/* 1740 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1750 *\/     B,     B,  VAbv,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Tagbanwa *\/\n-\n-  \/* 1760 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n-  \/* 1770 *\/     B,     O,  VAbv,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Khmer *\/\n-\n-  \/* 1780 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1790 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 17A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 17B0 *\/     B,     B,     B,     B,     O,     O,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VPst,  VPst,\n-  \/* 17C0 *\/  VPst,  VPre,  VPre,  VPre,  VPst,  VPst, VMAbv, VMPst,  VPst, VMAbv, VMAbv, FMAbv,  FAbv, CMAbv, FMAbv, FMAbv,\n-  \/* 17D0 *\/ FMAbv,  VAbv,     H, FMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     B, FMAbv,     O,     O,\n-  \/* 17E0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x1900u 1936\n-\n-\n-  \/* Limbu *\/\n-\n-  \/* 1900 *\/    GB,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,\n-  \/* 1920 *\/  VAbv,  VAbv,  VBlw,  VPst,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,   SUB,   SUB,   SUB,     O,     O,     O,     O,\n-  \/* 1930 *\/  FPst,  FPst, VMBlw,  FPst,  FPst,  FPst,  FPst,  FPst,  FPst,  FBlw,  VAbv, FMBlw,     O,     O,     O,     O,\n-  \/* 1940 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-\n-  \/* Tai Le *\/\n-\n-  \/* 1950 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1960 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,\n-  \/* 1970 *\/     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* New Tai Lue *\/\n-\n-  \/* 1980 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1990 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 19A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n-  \/* 19B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 19C0 *\/     B,     B,     B,     B,     B,     B,     B,     B, VMPst, VMPst,     O,     O,     O,     O,     O,     O,\n-  \/* 19D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,\n-  \/* 19E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 19F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Buginese *\/\n-\n-  \/* 1A00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1A10 *\/     B,     B,     B,     B,     B,     B,     B,  VAbv,  VBlw,  VPre,  VPst,  VAbv,     O,     O,     O,     O,\n-\n-  \/* Tai Tham *\/\n-\n-  \/* 1A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1A30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1A40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1A50 *\/     B,     B,     B,     B,     B,  MPre,  MBlw,   SUB,  FAbv,  FAbv,  MAbv,   SUB,   SUB,   SUB,   SUB,     O,\n-  \/* 1A60 *\/    Sk,  VPst,  VAbv,  VPst,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VAbv,  VBlw,  VPst,  VPre,  VPre,\n-  \/* 1A70 *\/  VPre,  VPre,  VPre,  VAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,  VAbv, FMAbv, FMAbv,     O,     O, FMBlw,\n-  \/* 1A80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-  \/* 1A90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x1b00u 2352\n-\n-\n-  \/* Balinese *\/\n-\n-  \/* 1B00 *\/ VMAbv, VMAbv, VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1B10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1B30 *\/     B,     B,     B,     B, CMAbv,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPre,  VPre,\n-  \/* 1B40 *\/  VPst,  VPst,  VAbv,  VAbv,     H,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n-  \/* 1B50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,    GB,    GB,     O,     O,    GB,\n-  \/* 1B60 *\/     O,     S,    GB,     S,     S,     S,     S,     S,    GB,     S,     S, SMAbv, SMBlw, SMAbv, SMAbv, SMAbv,\n-  \/* 1B70 *\/ SMAbv, SMAbv, SMAbv, SMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Sundanese *\/\n-\n-  \/* 1B80 *\/ VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1B90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1BA0 *\/     B,   SUB,   SUB,   SUB,  VAbv,  VBlw,  VPre,  VPst,  VAbv,  VAbv,  VPst,     H,   SUB,   SUB,     B,     B,\n-  \/* 1BB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-\n-  \/* Batak *\/\n-\n-  \/* 1BC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1BD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1BE0 *\/     B,     B,     B,     B,     B,     B, CMAbv,  VPst,  VAbv,  VAbv,  VPst,  VPst,  VPst,  VAbv,  VPst,  VAbv,\n-  \/* 1BF0 *\/  FAbv,  FAbv, CMBlw, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Lepcha *\/\n-\n-  \/* 1C00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1C10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 1C20 *\/     B,     B,     B,     B,   SUB,   SUB,  VPst,  VPre,  VPre,  VPre,  VPst,  VPst,  VBlw,  FAbv,  FAbv,  FAbv,\n-  \/* 1C30 *\/  FAbv,  FAbv,  FAbv,  FAbv, VMPre, VMPre, FMAbv, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 1C40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,     B,\n-\n-#define use_offset_0x1cd0u 2688\n-\n-\n-  \/* Vedic Extensions *\/\n-\n-  \/* 1CD0 *\/ VMAbv, VMAbv, VMAbv,     O, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMAbv, VMAbv, VMBlw, VMBlw, VMBlw, VMBlw,\n-  \/* 1CE0 *\/ VMAbv, VMPst, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw,     O,     O,     O,     O, VMBlw,     O,     O,\n-  \/* 1CF0 *\/     O,     O,   IND,   IND, VMAbv,    CS,    CS, VMPst, VMAbv, VMAbv,    GB,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x1df8u 2736\n-\n-\n-  \/* Combining Diacritical Marks Supplement *\/\n-                                                                         O,     O,     O, FMAbv,     O,     O,     O,     O,\n-\n-#define use_offset_0x2008u 2744\n-\n-\n-  \/* General Punctuation *\/\n-                                                                         O,     O,     O,     O,  ZWNJ,   ZWJ,     O,     O,\n-  \/* 2010 *\/    GB,    GB,    GB,    GB,    GB,     O,     O,     O,\n-\n-#define use_offset_0x2060u 2760\n-\n-  \/* 2060 *\/    WJ,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Superscripts and Subscripts *\/\n-\n-  \/* 2070 *\/     O,     O,     O,     O, FMPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 2080 *\/     O,     O, FMPst, FMPst, FMPst,     O,     O,     O,\n-\n-#define use_offset_0x20f0u 2800\n-\n-\n-  \/* Combining Diacritical Marks for Symbols *\/\n-\n-  \/* 20F0 *\/ VMAbv,     O,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x25c8u 2808\n-\n-\n-  \/* Geometric Shapes *\/\n-                                                                         O,     O,     O,     O,    GB,     O,     O,     O,\n-\n-#define use_offset_0xa800u 2816\n-\n-\n-  \/* Syloti Nagri *\/\n-\n-  \/* A800 *\/     B,     B,  VAbv,     B,     B,     B,     H,     B,     B,     B,     B, VMAbv,     B,     B,     B,     B,\n-  \/* A810 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A820 *\/     B,     B,     B,  VPst,  VPst,  VBlw,  VAbv,  VPst,     O,     O,     O,     O,  VBlw,     O,     O,     O,\n-  \/* A830 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Phags-pa *\/\n-\n-  \/* A840 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A850 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A860 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A870 *\/     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Saurashtra *\/\n-\n-  \/* A880 *\/ VMPst, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A890 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A8A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A8B0 *\/     B,     B,     B,     B,  MPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,\n-  \/* A8C0 *\/  VPst,  VPst,  VPst,  VPst,     H, VMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* A8D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Devanagari Extended *\/\n-\n-  \/* A8E0 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,\n-  \/* A8F0 *\/ VMAbv, VMAbv,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     B,  VAbv,\n-\n-  \/* Kayah Li *\/\n-\n-  \/* A900 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A920 *\/     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv, VMBlw, VMBlw, VMBlw,     O,     O,\n-\n-  \/* Rejang *\/\n-\n-  \/* A930 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A940 *\/     B,     B,     B,     B,     B,     B,     B,  VBlw,  VBlw,  VBlw,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  FAbv,\n-  \/* A950 *\/  FAbv,  FAbv,  FPst,  VPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* A960 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* A970 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Javanese *\/\n-\n-  \/* A980 *\/ VMAbv, VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A990 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A9A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A9B0 *\/     B,     B,     B, CMAbv,  VPst,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VPre,  VPre,  VAbv,  MBlw,  MBlw,  MBlw,\n-  \/* A9C0 *\/     H,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* A9D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Myanmar Extended-B *\/\n-\n-  \/* A9E0 *\/     B,     B,     B,     B,     B,  VAbv,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* A9F0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,\n-\n-  \/* Cham *\/\n-\n-  \/* AA00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AA10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AA20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VAbv,  VPre,\n-  \/* AA30 *\/  VPre,  VAbv,  VBlw,  MPst,  MPre,  MBlw,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* AA40 *\/     B,     B,     B,  FAbv,     B,     B,     B,     B,     B,     B,     B,     B,  FAbv,  FPst,     O,     O,\n-  \/* AA50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Myanmar Extended-A *\/\n-\n-  \/* AA60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AA70 *\/     O,     B,     B,     B,    GB,    GB,    GB,     O,     O,     O,     B, VMPst, VMAbv, VMPst,     B,     B,\n-\n-  \/* Tai Viet *\/\n-\n-  \/* AA80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AA90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AAA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* AAB0 *\/  VAbv,     B,  VAbv,  VAbv,  VBlw,     B,     B,  VAbv,  VAbv,     B,     B,     B,     B,     B,  VAbv, VMAbv,\n-  \/* AAC0 *\/     B, VMAbv,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* AAD0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Meetei Mayek Extensions *\/\n-\n-  \/* AAE0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPre,  VBlw,  VAbv,  VPre,  VPst,\n-  \/* AAF0 *\/     O,     O,     O,     O,     O, VMPst,     H,     O,\n-\n-#define use_offset_0xabc0u 3576\n-\n-\n-  \/* Meetei Mayek *\/\n-\n-  \/* ABC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* ABD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* ABE0 *\/     B,     B,     B,  VPst,  VPst,  VAbv,  VPst,  VPst,  VBlw,  VPst,  VPst,     O, VMPst,  VBlw,     O,     O,\n-  \/* ABF0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0xfe00u 3640\n-\n-\n-  \/* Variation Selectors *\/\n-\n-  \/* FE00 *\/    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,    VS,\n-\n-#define use_offset_0x10a00u 3656\n-\n-\n-  \/* Kharoshthi *\/\n-\n-  \/* 10A00 *\/     B,  VBlw,  VBlw,  VBlw,     O,  VAbv,  VBlw,     O,     O,     O,     O,     O,  VBlw,  VBlw, VMBlw, VMAbv,\n-  \/* 10A10 *\/     B,     B,     B,     B,     O,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 10A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 10A30 *\/     B,     B,     B,     B,     B,     B,     O,     O, CMAbv, CMBlw, CMBlw,     O,     O,     O,     O,     H,\n-  \/* 10A40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x11000u 3736\n-\n-\n-  \/* Brahmi *\/\n-\n-  \/* 11000 *\/ VMPst, VMAbv, VMPst,    CS,    CS,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11010 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11020 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11030 *\/     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,\n-  \/* 11040 *\/  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,   HVM,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11050 *\/     O,     O,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,\n-  \/* 11060 *\/     N,     N,     N,     N,     N,     N,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11070 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,    HN,\n-\n-  \/* Kaithi *\/\n-\n-  \/* 11080 *\/ VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11090 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 110A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 110B0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VAbv,  VAbv,  VPst,  VPst,     H, CMBlw,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x11100u 3928\n-\n-\n-  \/* Chakma *\/\n-\n-  \/* 11100 *\/ VMAbv, VMAbv, VMAbv,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11110 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11120 *\/     B,     B,     B,     B,     B,     B,     B,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPre,  VBlw,  VAbv,  VAbv,\n-  \/* 11130 *\/  VBlw,  VAbv,  VAbv,     H, CMBlw,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11140 *\/     O,     O,     O,     O,     B,  VPst,  VPst,     B,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Mahajani *\/\n-\n-  \/* 11150 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11160 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11170 *\/     B,     B,     B, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Sharada *\/\n-\n-  \/* 11180 *\/ VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11190 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 111A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 111B0 *\/     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,\n-  \/* 111C0 *\/     H,     B,     R,     R,     O,     O,     O,     O,    GB, FMBlw, CMBlw,  VAbv,  VBlw,     O,  VPre, VMAbv,\n-  \/* 111D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Sinhala Archaic Numbers *\/\n-\n-  \/* 111E0 *\/     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 111F0 *\/     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Khojki *\/\n-\n-  \/* 11200 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11210 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11220 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VPst,  VBlw,\n-  \/* 11230 *\/  VAbv,  VAbv,  VAbv,  VAbv, VMAbv,     H, CMAbv, CMAbv,     O,     O,     O,     O,     O,     O, VMAbv,     O,\n-\n-#define use_offset_0x11280u 4248\n-\n-\n-  \/* Multani *\/\n-\n-  \/* 11280 *\/     B,     B,     B,     B,     B,     B,     B,     O,     B,     O,     B,     B,     B,     B,     O,     B,\n-  \/* 11290 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,\n-  \/* 112A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Khudawadi *\/\n-\n-  \/* 112B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 112C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 112D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv,\n-  \/* 112E0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv, CMBlw,  VBlw,     O,     O,     O,     O,     O,\n-  \/* 112F0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Grantha *\/\n-\n-  \/* 11300 *\/ VMAbv, VMAbv, VMAbv, VMAbv,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n-  \/* 11310 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11320 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 11330 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O, CMBlw, CMBlw,     B,  VPst,  VPst,\n-  \/* 11340 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,     O,  VPre,  VPre,     O,     O,  VPst,  VPst,   HVM,     O,     O,\n-  \/* 11350 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     O,     O,     B,     B,\n-  \/* 11360 *\/     B,     B,  VPst,  VPst,     O,     O, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     O,     O,     O,\n-  \/* 11370 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     O,     O,     O,\n-\n-#define use_offset_0x11400u 4496\n-\n-\n-  \/* Newa *\/\n-\n-  \/* 11400 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11410 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11420 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11430 *\/     B,     B,     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,\n-  \/* 11440 *\/  VPst,  VPst,     H, VMAbv, VMAbv, VMPst, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11450 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O, FMAbv,     B,\n-  \/* 11460 *\/    CS,    CS,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11470 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Tirhuta *\/\n-\n-  \/* 11480 *\/     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11490 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 114A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 114B0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VPre,  VAbv,  VPst,  VPst,  VPst,  VPst, VMAbv,\n-  \/* 114C0 *\/ VMAbv, VMAbv,     H, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 114D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x11580u 4720\n-\n-\n-  \/* Siddham *\/\n-\n-  \/* 11580 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11590 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 115A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,\n-  \/* 115B0 *\/  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPst,  VPst,  VPst, VMAbv, VMAbv, VMPst,     H,\n-  \/* 115C0 *\/ CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 115D0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,  VBlw,  VBlw,     O,     O,\n-  \/* 115E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 115F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Modi *\/\n-\n-  \/* 11600 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11610 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11620 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11630 *\/  VPst,  VPst,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPst,  VPst, VMAbv, VMPst,     H,\n-  \/* 11640 *\/  VAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11650 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-  \/* 11660 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11670 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Takri *\/\n-\n-  \/* 11680 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11690 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 116A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv, VMPst,  VAbv,  VPre,  VPst,\n-  \/* 116B0 *\/  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,     H, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 116C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-  \/* 116D0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 116E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 116F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Ahom *\/\n-\n-  \/* 11700 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11710 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,  MBlw,  MPre,  MAbv,\n-  \/* 11720 *\/  VPst,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VPre,  VAbv,  VBlw,  VAbv,  VAbv,  VAbv,     O,     O,     O,     O,\n-  \/* 11730 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n-\n-#define use_offset_0x11800u 5168\n-\n-\n-  \/* Dogra *\/\n-\n-  \/* 11800 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11810 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11820 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,\n-  \/* 11830 *\/  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMPst,     H, CMBlw,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x11900u 5232\n-\n-\n-  \/* Dives Akuru *\/\n-\n-  \/* 11900 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,     O,     O,     B,     B,     B,     B,\n-  \/* 11910 *\/     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11920 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11930 *\/  VPst,  VPst,  VPst,  VPst,  VPst,  VPre,     O,  VPre,  VPst,     O,     O, VMAbv, VMAbv,  VPst,     H,     R,\n-  \/* 11940 *\/  MPst,     R,  MBlw, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11950 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x119a0u 5328\n-\n-\n-  \/* Nandinagari *\/\n-\n-  \/* 119A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 119B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 119C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 119D0 *\/     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VAbv,  VAbv,  VPst,  VPst, VMPst, VMPst,\n-  \/* 119E0 *\/     H,     B,     O,     O,  VPre,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 119F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Zanabazar Square *\/\n-\n-  \/* 11A00 *\/     B,  VAbv,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,     B,     B,     B,     B,     B,\n-  \/* 11A10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11A30 *\/     B,     B,     B, FMBlw,  VBlw, VMAbv, VMAbv, VMAbv, VMAbv, VMPst,     R,  MBlw,  MBlw,  MBlw,  MBlw,    GB,\n-  \/* 11A40 *\/     O,     O,     O,     O,     O,    GB,     O,     H,     O,     O,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Soyombo *\/\n-\n-  \/* 11A50 *\/     B,  VAbv,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VPst,  VPst,  VBlw,  VBlw,  VBlw,     B,     B,     B,     B,\n-  \/* 11A60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11A70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11A80 *\/     B,     B,     B,     B,     R,     R,     R,     R,     R,     R,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,\n-  \/* 11A90 *\/  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw, VMAbv, VMPst, CMAbv,     H,     O,     O,     O,     B,     O,     O,\n-\n-#define use_offset_0x11c00u 5584\n-\n-\n-  \/* Bhaiksuki *\/\n-\n-  \/* 11C00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 11C10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11C20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,\n-  \/* 11C30 *\/  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,     O,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMAbv, VMPst,     H,\n-  \/* 11C40 *\/     B,     O,     O,     O,    GB,    GB,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11C50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11C60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n-\n-  \/* Marchen *\/\n-\n-  \/* 11C70 *\/     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11C80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11C90 *\/     O,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n-  \/* 11CA0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n-  \/* 11CB0 *\/  VBlw,  VPre,  VBlw,  VAbv,  VPst, VMAbv, VMAbv,     O,\n-\n-#define use_offset_0x11d00u 5768\n-\n-\n-  \/* Masaram Gondi *\/\n-\n-  \/* 11D00 *\/     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,\n-  \/* 11D10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11D20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11D30 *\/     B,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,     O,     O,     O,  VAbv,     O,  VAbv,  VAbv,     O,  VAbv,\n-  \/* 11D40 *\/ VMAbv, VMAbv, CMBlw,  VAbv,  VBlw,     H,     R,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11D50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-  \/* Gunjala Gondi *\/\n-\n-  \/* 11D60 *\/     B,     B,     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n-  \/* 11D70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11D80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VPst,  VPst,  VPst,     O,\n-  \/* 11D90 *\/  VAbv,  VAbv,     O,  VPst,  VPst, VMAbv, VMPst,     H,     O,     O,     O,     O,     O,     O,     O,     O,\n-  \/* 11DA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n-\n-#define use_offset_0x11ee0u 5944\n-\n-\n-  \/* Makasar *\/\n-\n-  \/* 11EE0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n-  \/* 11EF0 *\/     B,     B,    GB,  VAbv,  VBlw,  VPre,  VPst,     O,\n-\n-}; \/* Table items: 5968; occupancy: 74% *\/\n-\n-USE_TABLE_ELEMENT_TYPE\n-hb_use_get_category (hb_codepoint_t u)\n-{\n-  switch (u >> 12)\n-  {\n-    case 0x0u:\n-      if (hb_in_range<hb_codepoint_t> (u, 0x0028u, 0x003Fu)) return use_table[u - 0x0028u + use_offset_0x0028u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x00A0u, 0x00D7u)) return use_table[u - 0x00A0u + use_offset_0x00a0u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x0348u, 0x034Fu)) return use_table[u - 0x0348u + use_offset_0x0348u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x0900u, 0x0DF7u)) return use_table[u - 0x0900u + use_offset_0x0900u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x0F18u, 0x0FC7u)) return use_table[u - 0x0F18u + use_offset_0x0f18u];\n-      break;\n-\n-    case 0x1u:\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1000u, 0x109Fu)) return use_table[u - 0x1000u + use_offset_0x1000u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1700u, 0x17EFu)) return use_table[u - 0x1700u + use_offset_0x1700u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1900u, 0x1A9Fu)) return use_table[u - 0x1900u + use_offset_0x1900u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1B00u, 0x1C4Fu)) return use_table[u - 0x1B00u + use_offset_0x1b00u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1CD0u, 0x1CFFu)) return use_table[u - 0x1CD0u + use_offset_0x1cd0u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x1DF8u, 0x1DFFu)) return use_table[u - 0x1DF8u + use_offset_0x1df8u];\n-      break;\n-\n-    case 0x2u:\n-      if (hb_in_range<hb_codepoint_t> (u, 0x2008u, 0x2017u)) return use_table[u - 0x2008u + use_offset_0x2008u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x2060u, 0x2087u)) return use_table[u - 0x2060u + use_offset_0x2060u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x20F0u, 0x20F7u)) return use_table[u - 0x20F0u + use_offset_0x20f0u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x25C8u, 0x25CFu)) return use_table[u - 0x25C8u + use_offset_0x25c8u];\n-      break;\n-\n-    case 0xAu:\n-      if (hb_in_range<hb_codepoint_t> (u, 0xA800u, 0xAAF7u)) return use_table[u - 0xA800u + use_offset_0xa800u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0xABC0u, 0xABFFu)) return use_table[u - 0xABC0u + use_offset_0xabc0u];\n-      break;\n-\n-    case 0xFu:\n-      if (hb_in_range<hb_codepoint_t> (u, 0xFE00u, 0xFE0Fu)) return use_table[u - 0xFE00u + use_offset_0xfe00u];\n-      break;\n-\n-    case 0x10u:\n-      if (hb_in_range<hb_codepoint_t> (u, 0x10A00u, 0x10A4Fu)) return use_table[u - 0x10A00u + use_offset_0x10a00u];\n-      break;\n-\n-    case 0x11u:\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11000u, 0x110BFu)) return use_table[u - 0x11000u + use_offset_0x11000u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11100u, 0x1123Fu)) return use_table[u - 0x11100u + use_offset_0x11100u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11280u, 0x11377u)) return use_table[u - 0x11280u + use_offset_0x11280u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11400u, 0x114DFu)) return use_table[u - 0x11400u + use_offset_0x11400u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11580u, 0x1173Fu)) return use_table[u - 0x11580u + use_offset_0x11580u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11800u, 0x1183Fu)) return use_table[u - 0x11800u + use_offset_0x11800u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11900u, 0x1195Fu)) return use_table[u - 0x11900u + use_offset_0x11900u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x119A0u, 0x11A9Fu)) return use_table[u - 0x119A0u + use_offset_0x119a0u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11C00u, 0x11CB7u)) return use_table[u - 0x11C00u + use_offset_0x11c00u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11D00u, 0x11DAFu)) return use_table[u - 0x11D00u + use_offset_0x11d00u];\n-      if (hb_in_range<hb_codepoint_t> (u, 0x11EE0u, 0x11EF7u)) return use_table[u - 0x11EE0u + use_offset_0x11ee0u];\n-      break;\n-\n-    default:\n-      break;\n-  }\n-  return USE_O;\n-}\n-\n-#undef B\n-#undef CGJ\n-#undef CS\n-#undef GB\n-#undef H\n-#undef HN\n-#undef HVM\n-#undef IND\n-#undef N\n-#undef O\n-#undef R\n-#undef Rsv\n-#undef S\n-#undef SUB\n-#undef Sk\n-#undef VS\n-#undef WJ\n-#undef ZWJ\n-#undef ZWNJ\n-#undef CMAbv\n-#undef CMBlw\n-#undef FAbv\n-#undef FBlw\n-#undef FPst\n-#undef FMAbv\n-#undef FMBlw\n-#undef FMPst\n-#undef MAbv\n-#undef MBlw\n-#undef MPst\n-#undef MPre\n-#undef SMAbv\n-#undef SMBlw\n-#undef VAbv\n-#undef VBlw\n-#undef VPst\n-#undef VPre\n-#undef VMAbv\n-#undef VMBlw\n-#undef VMPst\n-#undef VMPre\n-\n-\n-#endif\n-\/* == End of generated table == *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use-table.cc","additions":0,"deletions":873,"binary":false,"changes":873,"status":"deleted"},{"patch":"@@ -0,0 +1,1203 @@\n+\/* == Start of generated table == *\/\n+\/*\n+ * The following table is generated by running:\n+ *\n+ *   .\/gen-use-table.py IndicSyllabicCategory.txt IndicPositionalCategory.txt UnicodeData.txt ArabicShaping.txt Blocks.txt IndicSyllabicCategory-Additional.txt IndicPositionalCategory-Additional.txt\n+ *\n+ * on files with these headers:\n+ *\n+ * # IndicSyllabicCategory-13.0.0.txt\n+ * # Date: 2019-07-22, 19:55:00 GMT [KW, RP]\n+ * # IndicPositionalCategory-13.0.0.txt\n+ * # Date: 2019-07-23, 00:01:00 GMT [KW, RP]\n+ * # ArabicShaping-13.0.0.txt\n+ * # Date: 2020-01-31, 23:55:00 GMT [KW, RP]\n+ * # Blocks-13.0.0.txt\n+ * # Date: 2019-07-10, 19:06:00 GMT [KW]\n+ * # Override values For Indic_Syllabic_Category\n+ * # Not derivable\n+ * # Initial version based on Unicode 7.0 by Andrew Glass 2014-03-17\n+ * # Updated  for Unicode 10.0 by Andrew Glass 2017-07-25\n+ * # Updated  for Unicode 12.1 by Andrew Glass 2019-05-24\n+ * # Updated  for Unicode 13.0 by Andrew Glass 2020-07-28\n+ * # Override values For Indic_Positional_Category\n+ * # Not derivable\n+ * # Initial version based on Unicode 7.0 by Andrew Glass 2014-03-17\n+ * # Updated  for Unicode 10.0 by Andrew Glass 2017-07-25\n+ * # Ammended for Unicode 10.0 by Andrew Glass 2018-09-21\n+ * # Updated  for L2\/19-083    by Andrew Glass 2019-05-06\n+ * # Updated  for Unicode 12.1 by Andrew Glass 2019-05-30\n+ * # Updated  for Unicode 13.0 by Andrew Glass 2020-07-28\n+ * UnicodeData.txt does not have a header.\n+ *\/\n+\n+#ifndef HB_OT_SHAPE_COMPLEX_USE_TABLE_HH\n+#define HB_OT_SHAPE_COMPLEX_USE_TABLE_HH\n+\n+#include \"hb.hh\"\n+\n+#include \"hb-ot-shape-complex-use-machine.hh\"\n+\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wunused-macros\"\n+#define B       USE(B)  \/* BASE *\/\n+#define CS      USE(CS) \/* CONS_WITH_STACKER *\/\n+#define G       USE(G)  \/* HIEROGLYPH *\/\n+#define GB      USE(GB) \/* BASE_OTHER *\/\n+#define H       USE(H)  \/* HALANT *\/\n+#define HN      USE(HN) \/* HALANT_NUM *\/\n+#define HVM     USE(HVM)        \/* HALANT_OR_VOWEL_MODIFIER *\/\n+#define J       USE(J)  \/* HIEROGLYPH_JOINER *\/\n+#define N       USE(N)  \/* BASE_NUM *\/\n+#define O       USE(O)  \/* OTHER *\/\n+#define R       USE(R)  \/* REPHA *\/\n+#define S       USE(S)  \/* SYM *\/\n+#define SB      USE(SB) \/* HIEROGLYPH_SEGMENT_BEGIN *\/\n+#define SE      USE(SE) \/* HIEROGLYPH_SEGMENT_END *\/\n+#define SUB     USE(SUB)        \/* CONS_SUB *\/\n+#define Sk      USE(Sk) \/* SAKOT *\/\n+#define ZWNJ    USE(ZWNJ)       \/* ZWNJ *\/\n+#define CMAbv   USE(CMAbv)\n+#define CMBlw   USE(CMBlw)\n+#define FAbv    USE(FAbv)\n+#define FBlw    USE(FBlw)\n+#define FPst    USE(FPst)\n+#define FMAbv   USE(FMAbv)\n+#define FMBlw   USE(FMBlw)\n+#define FMPst   USE(FMPst)\n+#define MAbv    USE(MAbv)\n+#define MBlw    USE(MBlw)\n+#define MPst    USE(MPst)\n+#define MPre    USE(MPre)\n+#define SMAbv   USE(SMAbv)\n+#define SMBlw   USE(SMBlw)\n+#define VAbv    USE(VAbv)\n+#define VBlw    USE(VBlw)\n+#define VPst    USE(VPst)\n+#define VPre    USE(VPre)\n+#define VMAbv   USE(VMAbv)\n+#define VMBlw   USE(VMBlw)\n+#define VMPst   USE(VMPst)\n+#define VMPre   USE(VMPre)\n+#pragma GCC diagnostic pop\n+\n+static const uint8_t use_table[] = {\n+\n+\n+#define use_offset_0x0028u 0\n+\n+\n+  \/* Basic Latin *\/\n+                                                                         O,     O,     O,     O,     O,    GB,     O,     O,\n+  \/* 0030 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x00a0u 24\n+\n+\n+  \/* Latin-1 Supplement *\/\n+\n+  \/* 00A0 *\/    GB,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 00B0 *\/     O,     O, FMPst, FMPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 00C0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 00D0 *\/     O,     O,     O,     O,     O,     O,     O,    GB,\n+\n+#define use_offset_0x0640u 80\n+\n+\n+  \/* Arabic *\/\n+\n+  \/* 0640 *\/     B,     O,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x07c8u 88\n+\n+\n+  \/* NKo *\/\n+                                                                         O,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 07D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 07E0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,\n+  \/* 07F0 *\/ VMAbv, VMAbv, VMAbv, VMAbv,     O,     O,     O,     O,     O,     O,     B,     O,     O, VMAbv,     O,     O,\n+\n+#define use_offset_0x0840u 144\n+\n+\n+  \/* Mandaic *\/\n+\n+  \/* 0840 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0850 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B, CMBlw, CMBlw, CMBlw,     O,     O,     O,     O,\n+\n+#define use_offset_0x0900u 176\n+\n+\n+  \/* Devanagari *\/\n+\n+  \/* 0900 *\/ VMAbv, VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0920 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0930 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VPst, CMBlw,     B,  VPst,  VPre,\n+  \/* 0940 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VPst,  VPst,  VPst,  VPst,     H,  VPre,  VPst,\n+  \/* 0950 *\/     O, VMAbv, VMBlw,     O,     O,  VAbv,  VBlw,  VBlw,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0960 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0970 *\/     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+\n+  \/* Bengali *\/\n+\n+  \/* 0980 *\/    GB, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n+  \/* 0990 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 09A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 09B0 *\/     B,     O,     B,     O,     O,     O,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VPre,\n+  \/* 09C0 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPre,     O,     O,  VPre,  VPre,     H,     O,     O,\n+  \/* 09D0 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     B,     B,     O,     B,\n+  \/* 09E0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 09F0 *\/     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     B,     O, FMAbv,     O,\n+\n+  \/* Gurmukhi *\/\n+\n+  \/* 0A00 *\/     O, VMAbv, VMAbv, VMPst,     O,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     B,\n+  \/* 0A10 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0A30 *\/     B,     O,     B,     B,     O,     B,     B,     O,     B,     B,     O,     O, CMBlw,     O,  VPst,  VPre,\n+  \/* 0A40 *\/  VPst,  VBlw,  VBlw,     O,     O,     O,     O,  VAbv,  VAbv,     O,     O,  VAbv,  VAbv,     H,     O,     O,\n+  \/* 0A50 *\/     O, VMBlw,     O,     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     O,     B,     O,\n+  \/* 0A60 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0A70 *\/ VMAbv, CMAbv,    GB,    GB,     O,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Gujarati *\/\n+\n+  \/* 0A80 *\/     O, VMAbv, VMAbv, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,\n+  \/* 0A90 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0AA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0AB0 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VPre,\n+  \/* 0AC0 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,     O,  VAbv,  VAbv,  VAbv,     O,  VPst,  VPst,     H,     O,     O,\n+  \/* 0AD0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 0AE0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0AF0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     B, VMAbv, VMAbv, VMAbv, CMAbv, CMAbv, CMAbv,\n+\n+  \/* Oriya *\/\n+\n+  \/* 0B00 *\/     O, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n+  \/* 0B10 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0B30 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VAbv,\n+  \/* 0B40 *\/  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPre,     O,     O,  VPre,  VPre,     H,     O,     O,\n+  \/* 0B50 *\/     O,     O,     O,     O,     O,  VAbv,  VAbv,  VAbv,     O,     O,     O,     O,     B,     B,     O,     B,\n+  \/* 0B60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0B70 *\/     O,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Tamil *\/\n+\n+  \/* 0B80 *\/     O,     O, VMAbv,     O,     O,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,\n+  \/* 0B90 *\/     B,     O,     B,     B,     B,     B,     O,     O,     O,     B,     B,     O,     B,     O,     B,     B,\n+  \/* 0BA0 *\/     O,     O,     O,     B,     B,     O,     O,     O,     B,     B,     B,     O,     O,     O,     B,     B,\n+  \/* 0BB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,  VPst,  VPst,\n+  \/* 0BC0 *\/  VAbv,  VPst,  VPst,     O,     O,     O,  VPre,  VPre,  VPre,     O,  VPre,  VPre,  VPre,     H,     O,     O,\n+  \/* 0BD0 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 0BE0 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0BF0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Telugu *\/\n+\n+  \/* 0C00 *\/ VMAbv, VMPst, VMPst, VMPst, VMAbv,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n+  \/* 0C10 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0C20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0C30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,  VAbv,  VAbv,\n+  \/* 0C40 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,  VAbv,  VAbv,  VAbv,     O,  VAbv,  VAbv,  VAbv,     H,     O,     O,\n+  \/* 0C50 *\/     O,     O,     O,     O,     O,  VAbv,  VBlw,     O,     B,     B,     B,     O,     O,     O,     O,     O,\n+  \/* 0C60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0C70 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Kannada *\/\n+\n+  \/* 0C80 *\/     B, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n+  \/* 0C90 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0CA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0CB0 *\/     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     O,     O, CMBlw,     B,  VPst,  VAbv,\n+  \/* 0CC0 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,  VAbv,  VAbv,  VAbv,     O,  VAbv,  VAbv,  VAbv,     H,     O,     O,\n+  \/* 0CD0 *\/     O,     O,     O,     O,     O,  VPst,  VPst,     O,     O,     O,     O,     O,     O,     O,     B,     O,\n+  \/* 0CE0 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0CF0 *\/     O,    CS,    CS,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Malayalam *\/\n+\n+  \/* 0D00 *\/ VMAbv, VMAbv, VMPst, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n+  \/* 0D10 *\/     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0D20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0D30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,     B,  VPst,  VPst,\n+  \/* 0D40 *\/  VPst,  VPst,  VPst,  VBlw,  VBlw,     O,  VPre,  VPre,  VPre,     O,  VPre,  VPre,  VPre,     H,     R,     O,\n+  \/* 0D50 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     O,     O,     O,     B,\n+  \/* 0D60 *\/     B,     B,  VBlw,  VBlw,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0D70 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Sinhala *\/\n+\n+  \/* 0D80 *\/     O, VMAbv, VMPst, VMPst,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0D90 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 0DA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0DB0 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     O,     O,\n+  \/* 0DC0 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     H,     O,     O,     O,     O,  VPst,\n+  \/* 0DD0 *\/  VPst,  VPst,  VAbv,  VAbv,  VBlw,     O,  VBlw,     O,  VPst,  VPre,  VPre,  VPre,  VPre,  VPre,  VPre,  VPst,\n+  \/* 0DE0 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0DF0 *\/     O,     O,  VPst,  VPst,     O,     O,     O,     O,\n+\n+#define use_offset_0x0f00u 1448\n+\n+\n+  \/* Tibetan *\/\n+\n+  \/* 0F00 *\/     B,     B,     O,     O,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 0F10 *\/     O,     O,     O,     O,     O,     O,     O,     O,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,\n+  \/* 0F20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0F30 *\/     B,     B,     B,     B,     O,  FBlw,     O,  FBlw,     O, CMAbv,     O,     O,     O,     O,  VPst,  VPre,\n+  \/* 0F40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0F50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 0F60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n+  \/* 0F70 *\/     O, CMBlw,  VBlw,  VAbv,  VAbv,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw, VMAbv,     O,\n+  \/* 0F80 *\/  VBlw,  VAbv, VMAbv, VMAbv,  VBlw,     O, VMAbv, VMAbv,     B,     B,     B,     B,     B,   SUB,   SUB,   SUB,\n+  \/* 0F90 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n+  \/* 0FA0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n+  \/* 0FB0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,     O,     O,\n+  \/* 0FC0 *\/     O,     O,     O,     O,     O,     O,  FBlw,     O,\n+\n+#define use_offset_0x1000u 1648\n+\n+\n+  \/* Myanmar *\/\n+\n+  \/* 1000 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1010 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1020 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VAbv,  VAbv,  VBlw,\n+  \/* 1030 *\/  VBlw,  VPre,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMBlw, VMPst,     H,  VAbv,  MPst,  MPre,  MBlw,  MBlw,     B,\n+  \/* 1040 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,    GB,     O,     O,    GB,     O,\n+  \/* 1050 *\/     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VBlw,  VBlw,     B,     B,     B,     B,  MBlw,  MBlw,\n+  \/* 1060 *\/  MBlw,     B,  VPst, VMPst, VMPst,     B,     B,  VPst,  VPst, VMPst, VMPst, VMPst, VMPst, VMPst,     B,     B,\n+  \/* 1070 *\/     B,  VAbv,  VAbv,  VAbv,  VAbv,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1080 *\/     B,     B,  MBlw,  VPst,  VPre,  VAbv,  VAbv, VMPst, VMPst, VMPst, VMPst, VMPst, VMPst, VMBlw,     B, VMPst,\n+  \/* 1090 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMPst, VMPst,  VPst,  VAbv,     O,     O,\n+\n+#define use_offset_0x1700u 1808\n+\n+\n+  \/* Tagalog *\/\n+\n+  \/* 1700 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n+  \/* 1710 *\/     B,     B,  VAbv,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Hanunoo *\/\n+\n+  \/* 1720 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1730 *\/     B,     B,  VAbv,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Buhid *\/\n+\n+  \/* 1740 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1750 *\/     B,     B,  VAbv,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Tagbanwa *\/\n+\n+  \/* 1760 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,\n+  \/* 1770 *\/     B,     O,  VAbv,  VBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Khmer *\/\n+\n+  \/* 1780 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1790 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 17A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 17B0 *\/     B,     B,     B,     B,     O,     O,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VPre,  VPre,\n+  \/* 17C0 *\/  VPre,  VPre,  VPre,  VPre,  VPre,  VPre, VMAbv, VMPst,  VPst, VMAbv, VMAbv, FMAbv,  FAbv, CMAbv, FMAbv, VMAbv,\n+  \/* 17D0 *\/ FMAbv,  VAbv,     H, FMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     B, FMAbv,     O,     O,\n+  \/* 17E0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+  \/* 17F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Mongolian *\/\n+\n+  \/* 1800 *\/     B,     O,     O,     O,     O,     O,     O,     B,     O,     O,     B,     O,     O,     O,     O,     O,\n+  \/* 1810 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 1820 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1830 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1840 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1850 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1860 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1870 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 1880 *\/    GB,    GB,    GB,    GB,    GB, CMAbv, CMAbv,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1890 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B, CMBlw,     B,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x1900u 2240\n+\n+\n+  \/* Limbu *\/\n+\n+  \/* 1900 *\/    GB,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,\n+  \/* 1920 *\/  VAbv,  VAbv,  VBlw,  VPst,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,   SUB,   SUB,   SUB,     O,     O,     O,     O,\n+  \/* 1930 *\/  FPst,  FPst, VMBlw,  FPst,  FPst,  FPst,  FPst,  FPst,  FPst,  FBlw, VMAbv, FMBlw,     O,     O,     O,     O,\n+  \/* 1940 *\/     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+\n+  \/* Tai Le *\/\n+\n+  \/* 1950 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1960 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,\n+  \/* 1970 *\/     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* New Tai Lue *\/\n+\n+  \/* 1980 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1990 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 19A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n+  \/* 19B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 19C0 *\/     B,     B,     B,     B,     B,     B,     B,     B, VMPst, VMPst,     O,     O,     O,     O,     O,     O,\n+  \/* 19D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,\n+  \/* 19E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 19F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Buginese *\/\n+\n+  \/* 1A00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1A10 *\/     B,     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,  VPre,  VPst,  VAbv,     O,     O,     O,     O,\n+\n+  \/* Tai Tham *\/\n+\n+  \/* 1A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1A30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1A40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1A50 *\/     B,     B,     B,     B,     B,  MPre,  MBlw,   SUB,  FAbv,  FAbv,  MAbv,   SUB,   SUB,   SUB,   SUB,     O,\n+  \/* 1A60 *\/    Sk,  VPst,  VAbv,  VPst,  VPst,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VAbv,  VBlw,  VPst,  VPre,  VPre,\n+  \/* 1A70 *\/  VPre,  VPre,  VPre,  VAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,  VAbv, VMAbv, VMAbv,     O,     O, VMBlw,\n+  \/* 1A80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+  \/* 1A90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x1b00u 2656\n+\n+\n+  \/* Balinese *\/\n+\n+  \/* 1B00 *\/ VMAbv, VMAbv, VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1B10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1B30 *\/     B,     B,     B,     B, CMAbv,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPre,  VPre,\n+  \/* 1B40 *\/  VPre,  VPre,  VAbv,  VAbv,     H,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n+  \/* 1B50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,    GB,    GB,     O,     O,    GB,\n+  \/* 1B60 *\/     O,     S,    GB,     S,     S,     S,     S,     S,    GB,     S,     S, SMAbv, SMBlw, SMAbv, SMAbv, SMAbv,\n+  \/* 1B70 *\/ SMAbv, SMAbv, SMAbv, SMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Sundanese *\/\n+\n+  \/* 1B80 *\/ VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1B90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BA0 *\/     B,   SUB,   SUB,   SUB,  VAbv,  VBlw,  VPre,  VPst,  VAbv,  VAbv,  VPst,     H,   SUB,   SUB,     B,     B,\n+  \/* 1BB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+\n+  \/* Batak *\/\n+\n+  \/* 1BC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BE0 *\/     B,     B,     B,     B,     B,     B, CMAbv,  VPst,  VAbv,  VAbv,  VPst,  VPst,  VPst,  VAbv,  VPst,  VAbv,\n+  \/* 1BF0 *\/  FAbv,  FAbv, CMBlw, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Lepcha *\/\n+\n+  \/* 1C00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1C10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1C20 *\/     B,     B,     B,     B,   SUB,   SUB,  VPst,  VPre,  VPre,  VPre,  VPst,  VPst,  VBlw,  FAbv,  FAbv,  FAbv,\n+  \/* 1C30 *\/  FAbv,  FAbv,  FAbv,  FAbv, VMPre, VMPre, FMAbv, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 1C40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     B,     B,     B,\n+\n+#define use_offset_0x1cd0u 2992\n+\n+\n+  \/* Vedic Extensions *\/\n+\n+  \/* 1CD0 *\/ VMAbv, VMAbv, VMAbv,     O, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMAbv, VMAbv, VMBlw, VMBlw, VMBlw, VMBlw,\n+  \/* 1CE0 *\/ VMAbv, VMPst, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw,     O,     O,     O,     O, VMBlw,     O,     O,\n+  \/* 1CF0 *\/     O,     O,     O,     O, VMAbv,    CS,    CS, VMPst, VMAbv, VMAbv,    GB,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x1df8u 3040\n+\n+\n+  \/* Combining Diacritical Marks Supplement *\/\n+                                                                         O,     O,     O, FMAbv,     O,     O,     O,     O,\n+\n+#define use_offset_0x2008u 3048\n+\n+\n+  \/* General Punctuation *\/\n+                                                                         O,     O,     O,     O,  ZWNJ,     O,     O,     O,\n+  \/* 2010 *\/    GB,    GB,    GB,    GB,    GB,     O,     O,     O,\n+\n+#define use_offset_0x2070u 3064\n+\n+\n+  \/* Superscripts and Subscripts *\/\n+\n+  \/* 2070 *\/     O,     O,     O,     O, FMPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 2080 *\/     O,     O, FMPst, FMPst, FMPst,     O,     O,     O,\n+\n+#define use_offset_0x20f0u 3088\n+\n+\n+  \/* Combining Diacritical Marks for Symbols *\/\n+\n+  \/* 20F0 *\/ VMAbv,     O,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x25c8u 3096\n+\n+\n+  \/* Geometric Shapes *\/\n+                                                                         O,     O,     O,     O,     B,     O,     O,     O,\n+\n+#define use_offset_0x2d30u 3104\n+\n+\n+  \/* Tifinagh *\/\n+\n+  \/* 2D30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 2D40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 2D50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 2D60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     B,\n+  \/* 2D70 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     H,\n+\n+#define use_offset_0xa800u 3184\n+\n+\n+  \/* Syloti Nagri *\/\n+\n+  \/* A800 *\/     B,     B,  VAbv,     B,     B,     B,     H,     B,     B,     B,     B, VMAbv,     B,     B,     B,     B,\n+  \/* A810 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A820 *\/     B,     B,     B,  VPst,  VPst,  VBlw,  VAbv,  VPst,     O,     O,     O,     O,  VBlw,     O,     O,     O,\n+  \/* A830 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Phags-pa *\/\n+\n+  \/* A840 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A850 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A860 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A870 *\/     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Saurashtra *\/\n+\n+  \/* A880 *\/ VMPst, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A890 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A8A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A8B0 *\/     B,     B,     B,     B,  MPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,  VPst,\n+  \/* A8C0 *\/  VPst,  VPst,  VPst,  VPst,     H, VMAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* A8D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Devanagari Extended *\/\n+\n+  \/* A8E0 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,\n+  \/* A8F0 *\/ VMAbv, VMAbv,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     B,  VAbv,\n+\n+  \/* Kayah Li *\/\n+\n+  \/* A900 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A920 *\/     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv, VMBlw, VMBlw, VMBlw,     O,     O,\n+\n+  \/* Rejang *\/\n+\n+  \/* A930 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A940 *\/     B,     B,     B,     B,     B,     B,     B,  VBlw,  VBlw,  VBlw,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  FAbv,\n+  \/* A950 *\/  FAbv,  FAbv,  FPst,  VPst,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* A960 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* A970 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Javanese *\/\n+\n+  \/* A980 *\/ VMAbv, VMAbv,  FAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A990 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A9A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A9B0 *\/     B,     B,     B, CMAbv,  VPst,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VPre,  VPre,  VAbv,  MBlw,  MPst,  MBlw,\n+  \/* A9C0 *\/     H,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* A9D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Myanmar Extended-B *\/\n+\n+  \/* A9E0 *\/     B,     B,     B,     B,     B,  VAbv,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* A9F0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,\n+\n+  \/* Cham *\/\n+\n+  \/* AA00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AA10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AA20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VAbv,  VPre,\n+  \/* AA30 *\/  VPre,  VAbv,  VBlw,  MPst,  MPre,  MAbv,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* AA40 *\/     B,     B,     B,  FAbv,     B,     B,     B,     B,     B,     B,     B,     B,  FAbv,  FPst,     O,     O,\n+  \/* AA50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Myanmar Extended-A *\/\n+\n+  \/* AA60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AA70 *\/     O,     B,     B,     B,    GB,    GB,    GB,     O,     O,     O,     B, VMPst, VMAbv, VMPst,     B,     B,\n+\n+  \/* Tai Viet *\/\n+\n+  \/* AA80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AA90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AAA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* AAB0 *\/  VAbv,     B,  VAbv,  VAbv,  VBlw,     B,     B,  VAbv,  VAbv,     B,     B,     B,     B,     B,  VAbv, VMAbv,\n+  \/* AAC0 *\/     B, VMAbv,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* AAD0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Meetei Mayek Extensions *\/\n+\n+  \/* AAE0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPre,  VBlw,  VAbv,  VPre,  VPst,\n+  \/* AAF0 *\/     O,     O,     O,     O,     O, VMPst,     H,     O,\n+\n+#define use_offset_0xabc0u 3944\n+\n+\n+  \/* Meetei Mayek *\/\n+\n+  \/* ABC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* ABD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* ABE0 *\/     B,     B,     B,  VPst,  VPst,  VAbv,  VPst,  VPst,  VBlw,  VPst,  VPst,     O, VMPst,  VBlw,     O,     O,\n+  \/* ABF0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x10a00u 4008\n+\n+\n+  \/* Kharoshthi *\/\n+\n+  \/* 10A00 *\/     B,  VBlw,  VBlw,  VBlw,     O,  VAbv,  VBlw,     O,     O,     O,     O,     O,  VPst, VMBlw, VMBlw, VMAbv,\n+  \/* 10A10 *\/     B,     B,     B,     B,     O,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10A30 *\/     B,     B,     B,     B,     B,     B,     O,     O, CMAbv, CMBlw, CMBlw,     O,     O,     O,     O,     H,\n+  \/* 10A40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x10ac0u 4088\n+\n+\n+  \/* Manichaean *\/\n+\n+  \/* 10AC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10AD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10AE0 *\/     B,     B,     B,     B,     B, CMBlw, CMBlw,     O,\n+\n+#define use_offset_0x10b80u 4128\n+\n+\n+  \/* Psalter Pahlavi *\/\n+\n+  \/* 10B80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10B90 *\/     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 10BA0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,     B,     B,     O,\n+\n+#define use_offset_0x10d00u 4176\n+\n+\n+  \/* Hanifi Rohingya *\/\n+\n+  \/* 10D00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10D10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10D20 *\/     B,     B,     B,     B, VMAbv, VMAbv, VMAbv, CMAbv,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 10D30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x10e80u 4240\n+\n+\n+  \/* Yezidi *\/\n+\n+  \/* 10E80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10E90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10EA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,  VAbv,  VAbv,     O,     O,     O,\n+  \/* 10EB0 *\/     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x10f30u 4296\n+\n+\n+  \/* Sogdian *\/\n+\n+  \/* 10F30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10F40 *\/     B,     B,     B,     B,     B,     B, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw, VMBlw,\n+  \/* 10F50 *\/ VMBlw,     B,     B,     B,     B,     O,     O,     O,\n+\n+#define use_offset_0x10fb0u 4336\n+\n+\n+  \/* Chorasmian *\/\n+\n+  \/* 10FB0 *\/     B,     O,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 10FC0 *\/     O,     B,     B,     B,     B,     O,     O,     O,     O,     B,     B,     B,     O,     O,     O,     O,\n+  \/* 10FD0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 10FE0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 10FF0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Brahmi *\/\n+\n+  \/* 11000 *\/ VMPst, VMAbv, VMPst,    CS,    CS,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11010 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11020 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11030 *\/     B,     B,     B,     B,     B,     B,     B,     B,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,\n+  \/* 11040 *\/  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,   HVM,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11050 *\/     O,     O,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,     N,\n+  \/* 11060 *\/     N,     N,     N,     N,     N,     N,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11070 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,    HN,\n+\n+  \/* Kaithi *\/\n+\n+  \/* 11080 *\/ VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11090 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 110A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 110B0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VAbv,  VAbv,  VPst,  VPst,     H, CMBlw,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x11100u 4608\n+\n+\n+  \/* Chakma *\/\n+\n+  \/* 11100 *\/ VMAbv, VMAbv, VMAbv,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11110 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11120 *\/     B,     B,     B,     B,     B,     B,     B,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPre,  VBlw,  VAbv,  VAbv,\n+  \/* 11130 *\/  VBlw,  VAbv,  VAbv,     H, CMAbv,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11140 *\/     O,     O,     O,     O,     B,  VPst,  VPst,     B,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Mahajani *\/\n+\n+  \/* 11150 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11160 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11170 *\/     B,     B,     B, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Sharada *\/\n+\n+  \/* 11180 *\/ VMAbv, VMAbv, VMPst,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11190 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 111A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 111B0 *\/     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,\n+  \/* 111C0 *\/     H,     B,     R,     R,     O,     O,     O,     O,    GB, FMBlw, CMBlw,  VAbv,  VBlw,     O,  VPre, VMAbv,\n+  \/* 111D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,\n+\n+  \/* Sinhala Archaic Numbers *\/\n+\n+  \/* 111E0 *\/     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 111F0 *\/     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Khojki *\/\n+\n+  \/* 11200 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11210 *\/     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11220 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VPst,  VBlw,\n+  \/* 11230 *\/  VAbv,  VAbv,  VAbv,  VAbv, VMAbv,     H, CMAbv, CMAbv,     O,     O,     O,     O,     O,     O, VMAbv,     O,\n+\n+#define use_offset_0x11280u 4928\n+\n+\n+  \/* Multani *\/\n+\n+  \/* 11280 *\/     B,     B,     B,     B,     B,     B,     B,     O,     B,     O,     B,     B,     B,     B,     O,     B,\n+  \/* 11290 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,\n+  \/* 112A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Khudawadi *\/\n+\n+  \/* 112B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 112C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 112D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv,\n+  \/* 112E0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv, CMBlw,  VBlw,     O,     O,     O,     O,     O,\n+  \/* 112F0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Grantha *\/\n+\n+  \/* 11300 *\/ VMAbv, VMAbv, VMAbv, VMAbv,     O,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,\n+  \/* 11310 *\/     B,     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11320 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 11330 *\/     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     O, CMBlw, CMBlw,     B,  VPst,  VPst,\n+  \/* 11340 *\/  VAbv,  VPst,  VPst,  VPst,  VPst,     O,     O,  VPre,  VPre,     O,     O,  VPre,  VPre,   HVM,     O,     O,\n+  \/* 11350 *\/     O,     O,     O,     O,     O,     O,     O,  VPst,     O,     O,     O,     O,     O,     O,     B,     B,\n+  \/* 11360 *\/     B,     B,  VPst,  VPst,     O,     O, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     O,     O,     O,\n+  \/* 11370 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     O,     O,     O,\n+\n+#define use_offset_0x11400u 5176\n+\n+\n+  \/* Newa *\/\n+\n+  \/* 11400 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11410 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11420 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11430 *\/     B,     B,     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,\n+  \/* 11440 *\/  VPst,  VPst,     H, VMAbv, VMAbv, VMPst, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11450 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O, FMAbv,     B,\n+  \/* 11460 *\/    CS,    CS,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11470 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Tirhuta *\/\n+\n+  \/* 11480 *\/     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11490 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 114A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 114B0 *\/  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VPre,  VAbv,  VPre,  VPre,  VPst,  VPre, VMAbv,\n+  \/* 114C0 *\/ VMAbv, VMAbv,     H, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 114D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x11580u 5400\n+\n+\n+  \/* Siddham *\/\n+\n+  \/* 11580 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11590 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 115A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,\n+  \/* 115B0 *\/  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VPre,  VPre,  VPre,  VPre, VMAbv, VMAbv, VMPst,     H,\n+  \/* 115C0 *\/ CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 115D0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     B,     B,     B,     B,  VBlw,  VBlw,     O,     O,\n+  \/* 115E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 115F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Modi *\/\n+\n+  \/* 11600 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11610 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11620 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11630 *\/  VPst,  VPst,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VPst,  VPst, VMAbv, VMPst,     H,\n+  \/* 11640 *\/  VAbv,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11650 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+  \/* 11660 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11670 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Takri *\/\n+\n+  \/* 11680 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11690 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 116A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv, VMPst,  VAbv,  VPre,  VPst,\n+  \/* 116B0 *\/  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,     H, CMBlw,     B,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 116C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+  \/* 116D0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 116E0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 116F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Ahom *\/\n+\n+  \/* 11700 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11710 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,  MBlw,  MPre,  MAbv,\n+  \/* 11720 *\/  VPst,  VPst,  VAbv,  VAbv,  VBlw,  VBlw,  VPre,  VAbv,  VBlw,  VAbv,  VAbv,  VAbv,     O,     O,     O,     O,\n+  \/* 11730 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,\n+\n+#define use_offset_0x11800u 5848\n+\n+\n+  \/* Dogra *\/\n+\n+  \/* 11800 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11810 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11820 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPre,  VPst,  VBlw,\n+  \/* 11830 *\/  VBlw,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMPst,     H, CMBlw,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x11900u 5912\n+\n+\n+  \/* Dives Akuru *\/\n+\n+  \/* 11900 *\/     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,     O,     O,     B,     B,     B,     B,\n+  \/* 11910 *\/     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11920 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11930 *\/  VPst,  VPst,  VPst,  VPst,  VPst,  VPre,     O,  VPre,  VPre,     O,     O, VMAbv, VMAbv,  VPst,     H,     R,\n+  \/* 11940 *\/  MPst,     R,  MPst, CMBlw,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11950 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x119a0u 6008\n+\n+\n+  \/* Nandinagari *\/\n+\n+  \/* 119A0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 119B0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 119C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 119D0 *\/     B,  VPst,  VPre,  VPst,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,  VAbv,  VAbv,  VPst,  VPst, VMPst, VMPst,\n+  \/* 119E0 *\/     H,     B,     O,     O,  VPre,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 119F0 *\/     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Zanabazar Square *\/\n+\n+  \/* 11A00 *\/     B,  VAbv,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,     B,     B,     B,     B,     B,\n+  \/* 11A10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11A20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11A30 *\/     B,     B,     B, FMBlw,  VBlw, VMAbv, VMAbv, VMAbv, VMAbv, VMPst,     R,  MBlw,  MBlw,  MBlw,  MBlw,    GB,\n+  \/* 11A40 *\/     O,     O,     O,     O,     O,    GB,     O,     H,     O,     O,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Soyombo *\/\n+\n+  \/* 11A50 *\/     B,  VAbv,  VBlw,  VBlw,  VAbv,  VAbv,  VAbv,  VPst,  VPst,  VBlw,  VBlw,  VBlw,     B,     B,     B,     B,\n+  \/* 11A60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11A70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11A80 *\/     B,     B,     B,     B,     R,     R,     R,     R,     R,     R,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,\n+  \/* 11A90 *\/  FBlw,  FBlw,  FBlw,  FBlw,  FBlw,  FBlw, VMAbv, VMPst, CMAbv,     H,     O,     O,     O,     B,     O,     O,\n+\n+#define use_offset_0x11c00u 6264\n+\n+\n+  \/* Bhaiksuki *\/\n+\n+  \/* 11C00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 11C10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11C20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,\n+  \/* 11C30 *\/  VAbv,  VAbv,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,     O,  VAbv,  VAbv,  VAbv,  VAbv, VMAbv, VMAbv, VMPst,     H,\n+  \/* 11C40 *\/     B,     O,     O,     O,    GB,    GB,     O,     O,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11C50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11C60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n+\n+  \/* Marchen *\/\n+\n+  \/* 11C70 *\/     O,     O,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11C80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11C90 *\/     O,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n+  \/* 11CA0 *\/   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,     O,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,   SUB,\n+  \/* 11CB0 *\/  VBlw,  VPre,  VBlw,  VAbv,  VPst, VMAbv, VMAbv,     O,\n+\n+#define use_offset_0x11d00u 6448\n+\n+\n+  \/* Masaram Gondi *\/\n+\n+  \/* 11D00 *\/     B,     B,     B,     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,\n+  \/* 11D10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11D20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11D30 *\/     B,  VAbv,  VAbv,  VAbv,  VAbv,  VAbv,  VBlw,     O,     O,     O,  VAbv,     O,  VAbv,  VAbv,     O,  VAbv,\n+  \/* 11D40 *\/ VMAbv, VMAbv, CMBlw,  VAbv,  VBlw,     H,     R,  MBlw,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11D50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+  \/* Gunjala Gondi *\/\n+\n+  \/* 11D60 *\/     B,     B,     B,     B,     B,     B,     O,     B,     B,     O,     B,     B,     B,     B,     B,     B,\n+  \/* 11D70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11D80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,  VPst,  VPst,  VPst,  VPst,  VPst,     O,\n+  \/* 11D90 *\/  VAbv,  VAbv,     O,  VPst,  VPst, VMAbv, VMPst,     H,     O,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 11DA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x11ee0u 6624\n+\n+\n+  \/* Makasar *\/\n+\n+  \/* 11EE0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 11EF0 *\/     B,     B,    GB,  VAbv,  VBlw,  VPre,  VPst,     O,\n+\n+#define use_offset_0x13000u 6648\n+\n+\n+  \/* Egyptian Hieroglyphs *\/\n+\n+  \/* 13000 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13010 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13020 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13030 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13040 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13050 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13060 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13070 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13080 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13090 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130A0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130B0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130C0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130D0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130E0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 130F0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13100 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13110 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13120 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13130 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13140 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13150 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13160 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13170 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13180 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13190 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131A0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131B0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131C0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131D0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131E0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 131F0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13200 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13210 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13220 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13230 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13240 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13250 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13260 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13270 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13280 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13290 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132A0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132B0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132C0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132D0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132E0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 132F0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13300 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13310 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13320 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13330 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13340 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13350 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13360 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13370 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13380 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13390 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133A0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133B0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133C0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133D0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133E0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 133F0 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13400 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13410 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,\n+  \/* 13420 *\/     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     G,     O,\n+\n+  \/* Egyptian Hieroglyph Format Controls *\/\n+\n+  \/* 13430 *\/     J,     J,     J,     J,     J,     J,     J,    SB,    SE,     O,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x16b00u 7736\n+\n+\n+  \/* Pahawh Hmong *\/\n+\n+  \/* 16B00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16B10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16B30 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     O,\n+\n+#define use_offset_0x16f00u 7792\n+\n+\n+  \/* Miao *\/\n+\n+  \/* 16F00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16F10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16F20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16F30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 16F40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O, CMBlw,\n+  \/* 16F50 *\/     O,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,\n+  \/* 16F60 *\/  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,\n+  \/* 16F70 *\/  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,\n+  \/* 16F80 *\/  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,  VBlw,     O,     O,     O,     O,     O,     O,     O, VMBlw,\n+  \/* 16F90 *\/ VMBlw, VMBlw, VMBlw,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x16fe0u 7944\n+\n+\n+  \/* Ideographic Symbols and Punctuation *\/\n+\n+  \/* 16FE0 *\/     O,     O,     O,     O,     B,     O,     O,     O,\n+\n+#define use_offset_0x18b00u 7952\n+\n+\n+  \/* Khitan Small Script *\/\n+\n+  \/* 18B00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18B90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BD0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BE0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18BF0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18C90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18CA0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18CB0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18CC0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 18CD0 *\/     B,     B,     B,     B,     B,     B,     O,     O,\n+\n+#define use_offset_0x1bc00u 8424\n+\n+\n+  \/* Duployan *\/\n+\n+  \/* 1BC00 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC10 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC20 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC30 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC40 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC50 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1BC60 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,\n+  \/* 1BC70 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n+  \/* 1BC80 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,     O,\n+  \/* 1BC90 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O, CMBlw, CMBlw,     O,\n+\n+#define use_offset_0x1e100u 8584\n+\n+\n+  \/* Nyiakeng Puachue Hmong *\/\n+\n+  \/* 1E100 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E110 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E120 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,\n+  \/* 1E130 *\/ VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv, VMAbv,     B,     B,     B,     B,     B,     B,     B,     O,     O,\n+  \/* 1E140 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     B,     B,\n+\n+#define use_offset_0x1e2c0u 8664\n+\n+\n+  \/* Wancho *\/\n+\n+  \/* 1E2C0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E2D0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E2E0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B, VMAbv, VMAbv, VMAbv, VMAbv,\n+  \/* 1E2F0 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+#define use_offset_0x1e900u 8728\n+\n+\n+  \/* Adlam *\/\n+\n+  \/* 1E900 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E910 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E920 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E930 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,\n+  \/* 1E940 *\/     B,     B,     B,     B, CMAbv, CMAbv, CMAbv, CMAbv, CMAbv, CMAbv, CMAbv,     B,     O,     O,     O,     O,\n+  \/* 1E950 *\/     B,     B,     B,     B,     B,     B,     B,     B,     B,     B,     O,     O,     O,     O,     O,     O,\n+\n+}; \/* Table items: 8824; occupancy: 79% *\/\n+\n+static inline uint8_t\n+hb_use_get_category (hb_codepoint_t u)\n+{\n+  switch (u >> 12)\n+  {\n+    case 0x0u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x0028u, 0x003Fu)) return use_table[u - 0x0028u + use_offset_0x0028u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x00A0u, 0x00D7u)) return use_table[u - 0x00A0u + use_offset_0x00a0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x0640u, 0x0647u)) return use_table[u - 0x0640u + use_offset_0x0640u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x07C8u, 0x07FFu)) return use_table[u - 0x07C8u + use_offset_0x07c8u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x0840u, 0x085Fu)) return use_table[u - 0x0840u + use_offset_0x0840u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x0900u, 0x0DF7u)) return use_table[u - 0x0900u + use_offset_0x0900u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x0F00u, 0x0FC7u)) return use_table[u - 0x0F00u + use_offset_0x0f00u];\n+      break;\n+\n+    case 0x1u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1000u, 0x109Fu)) return use_table[u - 0x1000u + use_offset_0x1000u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1700u, 0x18AFu)) return use_table[u - 0x1700u + use_offset_0x1700u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1900u, 0x1A9Fu)) return use_table[u - 0x1900u + use_offset_0x1900u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1B00u, 0x1C4Fu)) return use_table[u - 0x1B00u + use_offset_0x1b00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1CD0u, 0x1CFFu)) return use_table[u - 0x1CD0u + use_offset_0x1cd0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1DF8u, 0x1DFFu)) return use_table[u - 0x1DF8u + use_offset_0x1df8u];\n+      break;\n+\n+    case 0x2u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x2008u, 0x2017u)) return use_table[u - 0x2008u + use_offset_0x2008u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x2070u, 0x2087u)) return use_table[u - 0x2070u + use_offset_0x2070u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x20F0u, 0x20F7u)) return use_table[u - 0x20F0u + use_offset_0x20f0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x25C8u, 0x25CFu)) return use_table[u - 0x25C8u + use_offset_0x25c8u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x2D30u, 0x2D7Fu)) return use_table[u - 0x2D30u + use_offset_0x2d30u];\n+      break;\n+\n+    case 0xAu:\n+      if (hb_in_range<hb_codepoint_t> (u, 0xA800u, 0xAAF7u)) return use_table[u - 0xA800u + use_offset_0xa800u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0xABC0u, 0xABFFu)) return use_table[u - 0xABC0u + use_offset_0xabc0u];\n+      break;\n+\n+    case 0x10u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10A00u, 0x10A4Fu)) return use_table[u - 0x10A00u + use_offset_0x10a00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10AC0u, 0x10AE7u)) return use_table[u - 0x10AC0u + use_offset_0x10ac0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10B80u, 0x10BAFu)) return use_table[u - 0x10B80u + use_offset_0x10b80u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10D00u, 0x10D3Fu)) return use_table[u - 0x10D00u + use_offset_0x10d00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10E80u, 0x10EB7u)) return use_table[u - 0x10E80u + use_offset_0x10e80u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10F30u, 0x10F57u)) return use_table[u - 0x10F30u + use_offset_0x10f30u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10FB0u, 0x110BFu)) return use_table[u - 0x10FB0u + use_offset_0x10fb0u];\n+      break;\n+\n+    case 0x11u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x10FB0u, 0x110BFu)) return use_table[u - 0x10FB0u + use_offset_0x10fb0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11100u, 0x1123Fu)) return use_table[u - 0x11100u + use_offset_0x11100u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11280u, 0x11377u)) return use_table[u - 0x11280u + use_offset_0x11280u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11400u, 0x114DFu)) return use_table[u - 0x11400u + use_offset_0x11400u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11580u, 0x1173Fu)) return use_table[u - 0x11580u + use_offset_0x11580u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11800u, 0x1183Fu)) return use_table[u - 0x11800u + use_offset_0x11800u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11900u, 0x1195Fu)) return use_table[u - 0x11900u + use_offset_0x11900u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x119A0u, 0x11A9Fu)) return use_table[u - 0x119A0u + use_offset_0x119a0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11C00u, 0x11CB7u)) return use_table[u - 0x11C00u + use_offset_0x11c00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11D00u, 0x11DAFu)) return use_table[u - 0x11D00u + use_offset_0x11d00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x11EE0u, 0x11EF7u)) return use_table[u - 0x11EE0u + use_offset_0x11ee0u];\n+      break;\n+\n+    case 0x13u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x13000u, 0x1343Fu)) return use_table[u - 0x13000u + use_offset_0x13000u];\n+      break;\n+\n+    case 0x16u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x16B00u, 0x16B37u)) return use_table[u - 0x16B00u + use_offset_0x16b00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x16F00u, 0x16F97u)) return use_table[u - 0x16F00u + use_offset_0x16f00u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x16FE0u, 0x16FE7u)) return use_table[u - 0x16FE0u + use_offset_0x16fe0u];\n+      break;\n+\n+    case 0x18u:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x18B00u, 0x18CD7u)) return use_table[u - 0x18B00u + use_offset_0x18b00u];\n+      break;\n+\n+    case 0x1Bu:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1BC00u, 0x1BC9Fu)) return use_table[u - 0x1BC00u + use_offset_0x1bc00u];\n+      break;\n+\n+    case 0x1Eu:\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1E100u, 0x1E14Fu)) return use_table[u - 0x1E100u + use_offset_0x1e100u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1E2C0u, 0x1E2FFu)) return use_table[u - 0x1E2C0u + use_offset_0x1e2c0u];\n+      if (hb_in_range<hb_codepoint_t> (u, 0x1E900u, 0x1E95Fu)) return use_table[u - 0x1E900u + use_offset_0x1e900u];\n+      break;\n+\n+    default:\n+      break;\n+  }\n+  return USE(O);\n+}\n+\n+#undef B\n+#undef CS\n+#undef G\n+#undef GB\n+#undef H\n+#undef HN\n+#undef HVM\n+#undef J\n+#undef N\n+#undef O\n+#undef R\n+#undef S\n+#undef SB\n+#undef SE\n+#undef SUB\n+#undef Sk\n+#undef ZWNJ\n+#undef CMAbv\n+#undef CMBlw\n+#undef FAbv\n+#undef FBlw\n+#undef FPst\n+#undef FMAbv\n+#undef FMBlw\n+#undef FMPst\n+#undef MAbv\n+#undef MBlw\n+#undef MPst\n+#undef MPre\n+#undef SMAbv\n+#undef SMBlw\n+#undef VAbv\n+#undef VBlw\n+#undef VPst\n+#undef VPre\n+#undef VMAbv\n+#undef VMBlw\n+#undef VMPst\n+#undef VMPre\n+\n+\n+#endif \/* HB_OT_SHAPE_COMPLEX_USE_TABLE_HH *\/\n+\/* == End of generated table == *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use-table.hh","additions":1203,"deletions":0,"binary":false,"changes":1203,"status":"added"},{"patch":"@@ -33,1 +33,2 @@\n-#include \"hb-ot-shape-complex-use.hh\"\n+#include \"hb-ot-shape-complex-use-machine.hh\"\n+#include \"hb-ot-shape-complex-use-table.hh\"\n@@ -38,3 +39,0 @@\n-\/* buffer var allocations *\/\n-#define use_category() complex_var_u8_1()\n-\n@@ -72,5 +70,5 @@\n-  USE_ISOL,\n-  USE_INIT,\n-  USE_MEDI,\n-  USE_FINA,\n-  _USE_NONE\n+  JOINING_FORM_ISOL,\n+  JOINING_FORM_INIT,\n+  JOINING_FORM_MEDI,\n+  JOINING_FORM_FINA,\n+  _JOINING_FORM_NONE\n@@ -189,15 +187,0 @@\n-enum use_syllable_type_t {\n-  use_independent_cluster,\n-  use_virama_terminated_cluster,\n-  use_sakot_terminated_cluster,\n-  use_standard_cluster,\n-  use_number_joiner_terminated_cluster,\n-  use_numeral_cluster,\n-  use_symbol_cluster,\n-  use_broken_cluster,\n-  use_non_cluster,\n-};\n-\n-#include \"hb-ot-shape-complex-use-machine.hh\"\n-\n-\n@@ -241,1 +224,1 @@\n-    unsigned int limit = info[start].use_category() == USE_R ? 1 : hb_min (3u, end - start);\n+    unsigned int limit = info[start].use_category() == USE(R) ? 1 : hb_min (3u, end - start);\n@@ -255,1 +238,1 @@\n-  static_assert ((USE_INIT < 4 && USE_ISOL < 4 && USE_MEDI < 4 && USE_FINA < 4), \"\");\n+  static_assert ((JOINING_FORM_INIT < 4 && JOINING_FORM_ISOL < 4 && JOINING_FORM_MEDI < 4 && JOINING_FORM_FINA < 4), \"\");\n@@ -269,1 +252,1 @@\n-  joining_form_t last_form = _USE_NONE;\n+  joining_form_t last_form = _JOINING_FORM_NONE;\n@@ -278,0 +261,1 @@\n+      case use_hieroglyph_cluster:\n@@ -280,1 +264,1 @@\n-        last_form = _USE_NONE;\n+        last_form = _JOINING_FORM_NONE;\n@@ -290,1 +274,1 @@\n-        bool join = last_form == USE_FINA || last_form == USE_ISOL;\n+        bool join = last_form == JOINING_FORM_FINA || last_form == JOINING_FORM_ISOL;\n@@ -295,1 +279,1 @@\n-          last_form = last_form == USE_FINA ? USE_MEDI : USE_INIT;\n+          last_form = last_form == JOINING_FORM_FINA ? JOINING_FORM_MEDI : JOINING_FORM_INIT;\n@@ -301,1 +285,1 @@\n-        last_form = join ? USE_FINA : USE_ISOL;\n+        last_form = join ? JOINING_FORM_FINA : JOINING_FORM_ISOL;\n@@ -337,1 +321,1 @@\n-    \/* Mark a substituted repha as USE_R. *\/\n+    \/* Mark a substituted repha as USE(R). *\/\n@@ -341,1 +325,1 @@\n-        info[i].use_category() = USE_R;\n+        info[i].use_category() = USE(R);\n@@ -360,1 +344,1 @@\n-        info[i].use_category() = USE_VPre;\n+        info[i].use_category() = USE(VPre);\n@@ -369,1 +353,1 @@\n-  return (info.use_category() == USE_H || info.use_category() == USE_HVM) &&\n+  return (info.use_category() == USE(H) || info.use_category() == USE(HVM)) &&\n@@ -388,16 +372,15 @@\n-#define POST_BASE_FLAGS64 (FLAG64 (USE_FM) | \\\n-                           FLAG64 (USE_FAbv) | \\\n-                           FLAG64 (USE_FBlw) | \\\n-                           FLAG64 (USE_FPst) | \\\n-                           FLAG64 (USE_MAbv) | \\\n-                           FLAG64 (USE_MBlw) | \\\n-                           FLAG64 (USE_MPst) | \\\n-                           FLAG64 (USE_MPre) | \\\n-                           FLAG64 (USE_VAbv) | \\\n-                           FLAG64 (USE_VBlw) | \\\n-                           FLAG64 (USE_VPst) | \\\n-                           FLAG64 (USE_VPre) | \\\n-                           FLAG64 (USE_VMAbv) | \\\n-                           FLAG64 (USE_VMBlw) | \\\n-                           FLAG64 (USE_VMPst) | \\\n-                           FLAG64 (USE_VMPre))\n+#define POST_BASE_FLAGS64 (FLAG64 (USE(FAbv)) | \\\n+                           FLAG64 (USE(FBlw)) | \\\n+                           FLAG64 (USE(FPst)) | \\\n+                           FLAG64 (USE(MAbv)) | \\\n+                           FLAG64 (USE(MBlw)) | \\\n+                           FLAG64 (USE(MPst)) | \\\n+                           FLAG64 (USE(MPre)) | \\\n+                           FLAG64 (USE(VAbv)) | \\\n+                           FLAG64 (USE(VBlw)) | \\\n+                           FLAG64 (USE(VPst)) | \\\n+                           FLAG64 (USE(VPre)) | \\\n+                           FLAG64 (USE(VMAbv)) | \\\n+                           FLAG64 (USE(VMBlw)) | \\\n+                           FLAG64 (USE(VMPst)) | \\\n+                           FLAG64 (USE(VMPre)))\n@@ -406,1 +389,1 @@\n-  if (info[start].use_category() == USE_R && end - start > 1)\n+  if (info[start].use_category() == USE(R) && end - start > 1)\n@@ -443,1 +426,1 @@\n-    else if (((flag) & (FLAG (USE_VPre) | FLAG (USE_VMPre))) &&\n+    else if (((flag) & (FLAG (USE(VPre)) | FLAG (USE(VMPre)))) &&\n@@ -456,58 +439,0 @@\n-static inline void\n-insert_dotted_circles_use (const hb_ot_shape_plan_t *plan HB_UNUSED,\n-                           hb_font_t *font,\n-                           hb_buffer_t *buffer)\n-{\n-  if (unlikely (buffer->flags & HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE))\n-    return;\n-\n-  \/* Note: This loop is extra overhead, but should not be measurable.\n-   * TODO Use a buffer scratch flag to remove the loop. *\/\n-  bool has_broken_syllables = false;\n-  unsigned int count = buffer->len;\n-  hb_glyph_info_t *info = buffer->info;\n-  for (unsigned int i = 0; i < count; i++)\n-    if ((info[i].syllable() & 0x0F) == use_broken_cluster)\n-    {\n-      has_broken_syllables = true;\n-      break;\n-    }\n-  if (likely (!has_broken_syllables))\n-    return;\n-\n-  hb_glyph_info_t dottedcircle = {0};\n-  if (!font->get_nominal_glyph (0x25CCu, &dottedcircle.codepoint))\n-    return;\n-  dottedcircle.use_category() = hb_use_get_category (0x25CC);\n-\n-  buffer->clear_output ();\n-\n-  buffer->idx = 0;\n-  unsigned int last_syllable = 0;\n-  while (buffer->idx < buffer->len && buffer->successful)\n-  {\n-    unsigned int syllable = buffer->cur().syllable();\n-    use_syllable_type_t syllable_type = (use_syllable_type_t) (syllable & 0x0F);\n-    if (unlikely (last_syllable != syllable && syllable_type == use_broken_cluster))\n-    {\n-      last_syllable = syllable;\n-\n-      hb_glyph_info_t ginfo = dottedcircle;\n-      ginfo.cluster = buffer->cur().cluster;\n-      ginfo.mask = buffer->cur().mask;\n-      ginfo.syllable() = buffer->cur().syllable();\n-\n-      \/* Insert dottedcircle after possible Repha. *\/\n-      while (buffer->idx < buffer->len && buffer->successful &&\n-             last_syllable == buffer->cur().syllable() &&\n-             buffer->cur().use_category() == USE_R)\n-        buffer->next_glyph ();\n-\n-      buffer->output_info (ginfo);\n-    }\n-    else\n-      buffer->next_glyph ();\n-  }\n-  buffer->swap_buffers ();\n-}\n-\n@@ -519,1 +444,6 @@\n-  insert_dotted_circles_use (plan, font, buffer);\n+  if (buffer->message (font, \"start reordering USE\"))\n+  {\n+    hb_syllabic_insert_dotted_circles (font, buffer,\n+                                       use_broken_cluster,\n+                                       USE(B),\n+                                       USE(R));\n@@ -521,2 +451,5 @@\n-  foreach_syllable (buffer, start, end)\n-    reorder_syllable_use (buffer, start, end);\n+    foreach_syllable (buffer, start, end)\n+      reorder_syllable_use (buffer, start, end);\n+\n+    (void) buffer->message (font, \"end reordering USE\");\n+  }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use.cc","additions":47,"deletions":114,"binary":false,"changes":161,"status":"modified"},{"patch":"@@ -1,105 +0,0 @@\n-\/*\n- * Copyright © 2015  Mozilla Foundation.\n- * Copyright © 2015  Google, Inc.\n- *\n- *  This is part of HarfBuzz, a text shaping library.\n- *\n- * Permission is hereby granted, without written agreement and without\n- * license or royalty fees, to use, copy, modify, and distribute this\n- * software and its documentation for any purpose, provided that the\n- * above copyright notice and the following two paragraphs appear in\n- * all copies of this software.\n- *\n- * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR\n- * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES\n- * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN\n- * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\n- * DAMAGE.\n- *\n- * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,\n- * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n- * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\n- * ON AN \"AS IS\" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO\n- * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n- *\n- * Mozilla Author(s): Jonathan Kew\n- * Google Author(s): Behdad Esfahbod\n- *\/\n-\n-#ifndef HB_OT_SHAPE_COMPLEX_USE_HH\n-#define HB_OT_SHAPE_COMPLEX_USE_HH\n-\n-#include \"hb.hh\"\n-\n-\n-#include \"hb-ot-shape-complex.hh\"\n-\n-\n-#define USE_TABLE_ELEMENT_TYPE uint8_t\n-\n-\/* Cateories used in the Universal Shaping Engine spec:\n- * https:\/\/docs.microsoft.com\/en-us\/typography\/script-development\/use\n- *\/\n-\/* Note: This enum is duplicated in the -machine.rl source file.\n- * Not sure how to avoid duplication. *\/\n-enum use_category_t {\n-  USE_O         = 0,    \/* OTHER *\/\n-\n-  USE_B         = 1,    \/* BASE *\/\n-  USE_IND       = 3,    \/* BASE_IND *\/\n-  USE_N         = 4,    \/* BASE_NUM *\/\n-  USE_GB        = 5,    \/* BASE_OTHER *\/\n-  USE_CGJ       = 6,    \/* CGJ *\/\n-\/\/  USE_F               = 7,    \/* CONS_FINAL *\/\n-  USE_FM        = 8,    \/* CONS_FINAL_MOD *\/\n-\/\/  USE_M               = 9,    \/* CONS_MED *\/\n-\/\/  USE_CM      = 10,   \/* CONS_MOD *\/\n-  USE_SUB       = 11,   \/* CONS_SUB *\/\n-  USE_H         = 12,   \/* HALANT *\/\n-\n-  USE_HN        = 13,   \/* HALANT_NUM *\/\n-  USE_ZWNJ      = 14,   \/* Zero width non-joiner *\/\n-  USE_ZWJ       = 15,   \/* Zero width joiner *\/\n-  USE_WJ        = 16,   \/* Word joiner *\/\n-  USE_Rsv       = 17,   \/* Reserved characters *\/\n-  USE_R         = 18,   \/* REPHA *\/\n-  USE_S         = 19,   \/* SYM *\/\n-\/\/  USE_SM      = 20,   \/* SYM_MOD *\/\n-  USE_VS        = 21,   \/* VARIATION_SELECTOR *\/\n-\/\/  USE_V       = 36,   \/* VOWEL *\/\n-\/\/  USE_VM      = 40,   \/* VOWEL_MOD *\/\n-  USE_CS        = 43,   \/* CONS_WITH_STACKER *\/\n-\n-  \/* https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/1102 *\/\n-  USE_HVM       = 44,   \/* HALANT_OR_VOWEL_MODIFIER *\/\n-\n-  USE_Sk        = 48,   \/* SAKOT *\/\n-\n-  USE_FAbv      = 24,   \/* CONS_FINAL_ABOVE *\/\n-  USE_FBlw      = 25,   \/* CONS_FINAL_BELOW *\/\n-  USE_FPst      = 26,   \/* CONS_FINAL_POST *\/\n-  USE_MAbv      = 27,   \/* CONS_MED_ABOVE *\/\n-  USE_MBlw      = 28,   \/* CONS_MED_BELOW *\/\n-  USE_MPst      = 29,   \/* CONS_MED_POST *\/\n-  USE_MPre      = 30,   \/* CONS_MED_PRE *\/\n-  USE_CMAbv     = 31,   \/* CONS_MOD_ABOVE *\/\n-  USE_CMBlw     = 32,   \/* CONS_MOD_BELOW *\/\n-  USE_VAbv      = 33,   \/* VOWEL_ABOVE \/ VOWEL_ABOVE_BELOW \/ VOWEL_ABOVE_BELOW_POST \/ VOWEL_ABOVE_POST *\/\n-  USE_VBlw      = 34,   \/* VOWEL_BELOW \/ VOWEL_BELOW_POST *\/\n-  USE_VPst      = 35,   \/* VOWEL_POST   UIPC = Right *\/\n-  USE_VPre      = 22,   \/* VOWEL_PRE \/ VOWEL_PRE_ABOVE \/ VOWEL_PRE_ABOVE_POST \/ VOWEL_PRE_POST *\/\n-  USE_VMAbv     = 37,   \/* VOWEL_MOD_ABOVE *\/\n-  USE_VMBlw     = 38,   \/* VOWEL_MOD_BELOW *\/\n-  USE_VMPst     = 39,   \/* VOWEL_MOD_POST *\/\n-  USE_VMPre     = 23,   \/* VOWEL_MOD_PRE *\/\n-  USE_SMAbv     = 41,   \/* SYM_MOD_ABOVE *\/\n-  USE_SMBlw     = 42,   \/* SYM_MOD_BELOW *\/\n-  USE_FMAbv     = 45,   \/* CONS_FINAL_MOD       UIPC = Top *\/\n-  USE_FMBlw     = 46,   \/* CONS_FINAL_MOD       UIPC = Bottom *\/\n-  USE_FMPst     = 47,   \/* CONS_FINAL_MOD       UIPC = Not_Applicable *\/\n-};\n-\n-HB_INTERNAL USE_TABLE_ELEMENT_TYPE\n-hb_use_get_category (hb_codepoint_t u);\n-\n-#endif \/* HB_OT_SHAPE_COMPLEX_USE_HH *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-use.hh","additions":0,"deletions":105,"binary":false,"changes":105,"status":"deleted"},{"patch":"@@ -26,2 +26,2 @@\n-  hb_glyph_info_t &dottedcircle = buffer->output_glyph (0x25CCu);\n-  _hb_glyph_info_reset_continuation (&dottedcircle);\n+  (void) buffer->output_glyph (0x25CCu);\n+  _hb_glyph_info_reset_continuation (&buffer->prev());\n@@ -34,1 +34,1 @@\n-  buffer->next_glyph ();\n+  (void) buffer->next_glyph ();\n@@ -54,1 +54,0 @@\n-  bool processed = false;\n@@ -100,1 +99,1 @@\n-              buffer->next_glyph ();\n+              (void) buffer->next_glyph ();\n@@ -105,1 +104,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -108,1 +107,0 @@\n-      processed = true;\n@@ -127,1 +125,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -130,1 +128,0 @@\n-      processed = true;\n@@ -164,1 +161,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -167,1 +164,0 @@\n-      processed = true;\n@@ -189,1 +185,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -192,1 +188,0 @@\n-      processed = true;\n@@ -208,1 +203,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -211,1 +206,0 @@\n-      processed = true;\n@@ -223,1 +217,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -226,1 +220,0 @@\n-      processed = true;\n@@ -247,1 +240,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -250,1 +243,0 @@\n-      processed = true;\n@@ -266,1 +258,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -269,1 +261,0 @@\n-      processed = true;\n@@ -293,1 +284,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -296,1 +287,0 @@\n-      processed = true;\n@@ -323,1 +313,1 @@\n-              case 0x0DDDu:\n+              case 0x0DDDu: case 0x0DDEu:\n@@ -329,1 +319,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -332,1 +322,0 @@\n-      processed = true;\n@@ -351,1 +340,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -354,1 +343,0 @@\n-      processed = true;\n@@ -373,1 +361,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -376,1 +364,0 @@\n-      processed = true;\n@@ -400,1 +387,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -403,1 +390,0 @@\n-      processed = true;\n@@ -421,1 +407,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -424,1 +410,0 @@\n-      processed = true;\n@@ -445,1 +430,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -448,1 +433,0 @@\n-      processed = true;\n@@ -454,6 +438,1 @@\n-  if (processed)\n-  {\n-    if (buffer->idx < count)\n-      buffer->next_glyph ();\n-    buffer->swap_buffers ();\n-  }\n+  buffer->swap_buffers ();\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex-vowel-constraints.cc","additions":21,"deletions":42,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -38,2 +38,2 @@\n-#define complex_var_u8_0()      var2.u8[2]\n-#define complex_var_u8_1()      var2.u8[3]\n+#define complex_var_u8_category()       var2.u8[2]\n+#define complex_var_u8_auxiliary()      var2.u8[3]\n@@ -189,1 +189,0 @@\n-    case HB_SCRIPT_MONGOLIAN:\n@@ -192,18 +191,0 @@\n-    \/* Unicode-5.0 additions *\/\n-    case HB_SCRIPT_NKO:\n-    case HB_SCRIPT_PHAGS_PA:\n-\n-    \/* Unicode-6.0 additions *\/\n-    case HB_SCRIPT_MANDAIC:\n-\n-    \/* Unicode-7.0 additions *\/\n-    case HB_SCRIPT_MANICHAEAN:\n-    case HB_SCRIPT_PSALTER_PAHLAVI:\n-\n-    \/* Unicode-9.0 additions *\/\n-    case HB_SCRIPT_ADLAM:\n-\n-    \/* Unicode-11.0 additions *\/\n-    case HB_SCRIPT_HANIFI_ROHINGYA:\n-    case HB_SCRIPT_SOGDIAN:\n-\n@@ -287,1 +268,1 @@\n-    \/* https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/1162 *\/\n+#define HB_SCRIPT_MYANMAR_ZAWGYI        ((hb_script_t) HB_TAG ('Q','a','a','g'))\n@@ -289,0 +270,1 @@\n+    \/* https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/1162 *\/\n@@ -297,1 +279,1 @@\n-    \/\/case HB_SCRIPT_MONGOLIAN:\n+    case HB_SCRIPT_MONGOLIAN:\n@@ -318,2 +300,2 @@\n-    \/\/case HB_SCRIPT_NKO:\n-    \/\/case HB_SCRIPT_PHAGS_PA:\n+    case HB_SCRIPT_NKO:\n+    case HB_SCRIPT_PHAGS_PA:\n@@ -340,1 +322,1 @@\n-    \/\/case HB_SCRIPT_MANDAIC:\n+    case HB_SCRIPT_MANDAIC:\n@@ -344,0 +326,1 @@\n+    case HB_SCRIPT_MIAO:\n@@ -353,1 +336,1 @@\n-    \/\/case HB_SCRIPT_MANICHAEAN:\n+    case HB_SCRIPT_MANICHAEAN:\n@@ -356,1 +339,1 @@\n-    \/\/case HB_SCRIPT_PSALTER_PAHLAVI:\n+    case HB_SCRIPT_PSALTER_PAHLAVI:\n@@ -362,0 +345,1 @@\n+    case HB_SCRIPT_MULTANI:\n@@ -364,1 +348,1 @@\n-    \/\/case HB_SCRIPT_ADLAM:\n+    case HB_SCRIPT_ADLAM:\n@@ -377,1 +361,1 @@\n-    \/\/case HB_SCRIPT_HANIFI_ROHINGYA:\n+    case HB_SCRIPT_HANIFI_ROHINGYA:\n@@ -379,1 +363,3 @@\n-    \/\/case HB_SCRIPT_SOGDIAN:\n+    case HB_SCRIPT_MEDEFAIDRIN:\n+    case HB_SCRIPT_OLD_SOGDIAN:\n+    case HB_SCRIPT_SOGDIAN:\n@@ -382,0 +368,1 @@\n+    case HB_SCRIPT_ELYMAIC:\n@@ -383,0 +370,2 @@\n+    case HB_SCRIPT_NYIAKENG_PUACHUE_HMONG:\n+    case HB_SCRIPT_WANCHO:\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-complex.hh","additions":20,"deletions":31,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -304,1 +304,1 @@\n-        unsigned int correction = -pos.y_offset \/ 2;\n+        int correction = -pos.y_offset \/ 2;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-fallback.cc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,0 +104,1 @@\n+  \/* This is very confusing indeed. *\/\n@@ -105,1 +106,1 @@\n-  buffer->output_glyph (unichar); \/* This is very confusing indeed. *\/\n+  (void) buffer->output_glyph (unichar);\n@@ -113,1 +114,1 @@\n-  buffer->next_glyph ();\n+  (void) buffer->next_glyph ();\n@@ -232,1 +233,1 @@\n-        buffer->replace_glyphs (2, 1, &unicode);\n+        (void) buffer->replace_glyphs (2, 1, &unicode);\n@@ -238,1 +239,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -240,1 +241,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -243,1 +244,3 @@\n-      while (buffer->idx < end && unlikely (buffer->unicode->is_variation_selector (buffer->cur().codepoint)))\n+      while (buffer->idx < end &&\n+             buffer->successful &&\n+             unlikely (buffer->unicode->is_variation_selector (buffer->cur().codepoint)))\n@@ -246,1 +249,1 @@\n-        buffer->next_glyph ();\n+        (void) buffer->next_glyph ();\n@@ -248,1 +251,3 @@\n-    } else {\n+    }\n+    else\n+    {\n@@ -250,1 +255,1 @@\n-      buffer->next_glyph ();\n+      (void) buffer->next_glyph ();\n@@ -253,1 +258,2 @@\n-  if (likely (buffer->idx < end)) {\n+  if (likely (buffer->idx < end))\n+  {\n@@ -255,1 +261,1 @@\n-    buffer->next_glyph ();\n+    (void) buffer->next_glyph ();\n@@ -351,1 +357,1 @@\n-        buffer->next_glyphs (done);\n+        if (unlikely (!buffer->next_glyphs (done))) break;\n@@ -376,1 +382,1 @@\n-  if (!all_simple)\n+  if (!all_simple && buffer->message(font, \"start reorder\"))\n@@ -402,0 +408,1 @@\n+    (void) buffer->message(font, \"end reorder\");\n@@ -411,1 +418,1 @@\n-          info_cc(buffer->info[i-1]) <= info_cc(buffer->info[i+1]))\n+          (info_cc(buffer->info[i+1]) == 0 || info_cc(buffer->info[i-1]) <= info_cc(buffer->info[i+1])))\n@@ -421,0 +428,1 @@\n+      buffer->successful &&\n@@ -430,2 +438,2 @@\n-    buffer->next_glyph ();\n-    while (buffer->idx < count && buffer->successful)\n+    (void) buffer->next_glyph ();\n+    while (buffer->idx < count \/* No need for: && buffer->successful *\/)\n@@ -453,3 +461,1 @@\n-          buffer->next_glyph (); \/* Copy to out-buffer. *\/\n-          if (unlikely (!buffer->successful))\n-            return;\n+          if (unlikely (!buffer->next_glyph ())) break; \/* Copy to out-buffer. *\/\n@@ -468,1 +474,1 @@\n-      buffer->next_glyph ();\n+      if (unlikely (!buffer->next_glyph ())) break;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape-normalize.cc","additions":26,"deletions":20,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -537,3 +537,1 @@\n-  buffer->output_info (info);\n-  while (buffer->idx < buffer->len && buffer->successful)\n-    buffer->next_glyph ();\n+  (void) buffer->output_info (info);\n@@ -899,1 +897,2 @@\n-  if (c->plan->shaper->postprocess_glyphs)\n+  if (c->plan->shaper->postprocess_glyphs &&\n+    c->buffer->message(c->font, \"start postprocess-glyphs\")) {\n@@ -901,0 +900,2 @@\n+    (void) c->buffer->message(c->font, \"end postprocess-glyphs\");\n+  }\n@@ -1123,1 +1124,2 @@\n-  if (c->plan->shaper->preprocess_text)\n+  if (c->plan->shaper->preprocess_text &&\n+    c->buffer->message(c->font, \"start preprocess-text\")) {\n@@ -1125,0 +1127,2 @@\n+    (void) c->buffer->message(c->font, \"end preprocess-text\");\n+  }\n@@ -1158,0 +1162,6 @@\n+ * @shape_plan: #hb_shape_plan_t to query\n+ * @table_tag: GSUB or GPOS\n+ * @lookup_indexes: (out): The #hb_set_t set of lookups returned\n+ *\n+ * Computes the complete set of GSUB or GPOS lookups that are applicable\n+ * under a given @shape_plan.\n@@ -1192,0 +1202,9 @@\n+ * @font: #hb_font_t to work upon\n+ * @buffer: The input buffer to compute from\n+ * @features: (array length=num_features): The features enabled on the buffer\n+ * @num_features: The number of features enabled on the buffer\n+ * @glyphs: (out): The #hb_set_t set of glyphs comprising the transitive closure of the query\n+ *\n+ * Computes the transitive closure of glyphs needed for a specified\n+ * input buffer under the given font and feature list. The closure is\n+ * computed as a set, not as a list.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape.cc","additions":24,"deletions":5,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-shape.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -9,2 +9,2 @@\n- * <meta name=\"updated_at\" content=\"2019-05-22 06:05 PM\" \/>\n- * File-Date: 2020-05-12\n+ * <meta name=\"updated_at\" content=\"2021-02-12 04:08 PM\" \/>\n+ * File-Date: 2021-03-05\n@@ -22,0 +22,1 @@\n+  {\"aba\",       HB_TAG_NONE            },       \/* Abé != Abaza *\/\n@@ -24,0 +25,1 @@\n+  {\"abs\",       HB_TAG('C','P','P',' ')},       \/* Ambonese Malay -> Creoles *\/\n@@ -26,0 +28,1 @@\n+  {\"acf\",       HB_TAG('C','P','P',' ')},       \/* Saint Lucian Creole French -> Creoles *\/\n@@ -29,1 +32,2 @@\n-\/*{\"acr\",       HB_TAG('A','C','R',' ')},*\/     \/* Achi *\/\n+  {\"acr\",       HB_TAG('A','C','R',' ')},       \/* Achi *\/\n+  {\"acr\",       HB_TAG('M','Y','N',' ')},       \/* Achi -> Mayan *\/\n@@ -41,0 +45,4 @@\n+  {\"afk\",       HB_TAG_NONE            },       \/* Nanubae != Afrikaans *\/\n+  {\"afs\",       HB_TAG('C','P','P',' ')},       \/* Afro-Seminole Creole -> Creoles *\/\n+  {\"agu\",       HB_TAG('M','Y','N',' ')},       \/* Aguacateco -> Mayan *\/\n+  {\"agw\",       HB_TAG_NONE            },       \/* Kahua != Agaw *\/\n@@ -43,0 +51,1 @@\n+  {\"aig\",       HB_TAG('C','P','P',' ')},       \/* Antigua and Barbuda Creole English -> Creoles *\/\n@@ -49,1 +58,2 @@\n-  {\"ak\",        HB_TAG('T','W','I',' ')},       \/* Akan [macrolanguage] -> Twi *\/\n+  {\"akb\",       HB_TAG('A','K','B',' ')},       \/* Batak Angkola *\/\n+  {\"akb\",       HB_TAG('B','T','K',' ')},       \/* Batak Angkola -> Batak *\/\n@@ -58,0 +68,2 @@\n+  {\"aoa\",       HB_TAG('C','P','P',' ')},       \/* Angolar -> Creoles *\/\n+  {\"apa\",       HB_TAG('A','T','H',' ')},       \/* Apache [family] -> Athapaskan *\/\n@@ -67,0 +79,2 @@\n+  {\"ari\",       HB_TAG_NONE            },       \/* Arikara != Aari *\/\n+  {\"ark\",       HB_TAG_NONE            },       \/* Arikapú != Rakhine *\/\n@@ -71,0 +85,1 @@\n+  {\"ary\",       HB_TAG('A','R','A',' ')},       \/* Moroccan Arabic -> Arabic *\/\n@@ -77,0 +92,1 @@\n+  {\"auj\",       HB_TAG('B','B','R',' ')},       \/* Awjilah -> Berber *\/\n@@ -89,1 +105,3 @@\n-\/*{\"azb\",       HB_TAG('A','Z','B',' ')},*\/     \/* South Azerbaijani -> Torki *\/\n+  {\"azb\",       HB_TAG('A','Z','B',' ')},       \/* South Azerbaijani -> Torki *\/\n+  {\"azb\",       HB_TAG('A','Z','E',' ')},       \/* South Azerbaijani -> Azerbaijani *\/\n+  {\"azd\",       HB_TAG('N','A','H',' ')},       \/* Eastern Durango Nahuatl -> Nahuatl *\/\n@@ -91,0 +109,2 @@\n+  {\"azn\",       HB_TAG('N','A','H',' ')},       \/* Western Durango Nahuatl -> Nahuatl *\/\n+  {\"azz\",       HB_TAG('N','A','H',' ')},       \/* Highland Puebla Nahuatl -> Nahuatl *\/\n@@ -93,0 +113,2 @@\n+  {\"bag\",       HB_TAG_NONE            },       \/* Tuki != Baghelkhandi *\/\n+  {\"bah\",       HB_TAG('C','P','P',' ')},       \/* Bahamas Creole English -> Creoles *\/\n@@ -97,1 +119,6 @@\n-\/*{\"bbc\",       HB_TAG('B','B','C',' ')},*\/     \/* Batak Toba *\/\n+  {\"bau\",       HB_TAG_NONE            },       \/* Bada (Nigeria) != Baulé *\/\n+  {\"bbc\",       HB_TAG('B','B','C',' ')},       \/* Batak Toba *\/\n+  {\"bbc\",       HB_TAG('B','T','K',' ')},       \/* Batak Toba -> Batak *\/\n+  {\"bbj\",       HB_TAG('B','M','L',' ')},       \/* Ghomálá' -> Bamileke *\/\n+  {\"bbp\",       HB_TAG('B','A','D','0')},       \/* West Central Banda -> Banda *\/\n+  {\"bbr\",       HB_TAG_NONE            },       \/* Girawa != Berber *\/\n@@ -100,0 +127,1 @@\n+  {\"bch\",       HB_TAG_NONE            },       \/* Bariai != Bench *\/\n@@ -110,0 +138,2 @@\n+  {\"bew\",       HB_TAG('C','P','P',' ')},       \/* Betawi -> Creoles *\/\n+  {\"bfl\",       HB_TAG('B','A','D','0')},       \/* Banda-Ndélé -> Banda *\/\n@@ -118,1 +148,2 @@\n-\/*{\"bgq\",       HB_TAG('B','G','Q',' ')},*\/     \/* Bagri *\/\n+  {\"bgq\",       HB_TAG('B','G','Q',' ')},       \/* Bagri *\/\n+  {\"bgq\",       HB_TAG('R','A','J',' ')},       \/* Bagri -> Rajasthani *\/\n@@ -126,0 +157,1 @@\n+  {\"bi\",        HB_TAG('C','P','P',' ')},       \/* Bislama -> Creoles *\/\n@@ -127,0 +159,1 @@\n+  {\"bil\",       HB_TAG_NONE            },       \/* Bile != Bilen *\/\n@@ -128,0 +161,1 @@\n+  {\"biu\",       HB_TAG('Q','I','N',' ')},       \/* Biete -> Chin *\/\n@@ -130,0 +164,1 @@\n+  {\"bjo\",       HB_TAG('B','A','D','0')},       \/* Mid-Southern Banda -> Banda *\/\n@@ -131,0 +166,1 @@\n+  {\"bjs\",       HB_TAG('C','P','P',' ')},       \/* Bajan -> Creoles *\/\n@@ -132,0 +168,2 @@\n+  {\"bkf\",       HB_TAG_NONE            },       \/* Beeke != Blackfoot *\/\n+  {\"bko\",       HB_TAG('B','M','L',' ')},       \/* Kwa' -> Bamileke *\/\n@@ -134,1 +172,4 @@\n-\/*{\"blk\",       HB_TAG('B','L','K',' ')},*\/     \/* Pa’o Karen *\/\n+  {\"blg\",       HB_TAG('I','B','A',' ')},       \/* Balau (retired code) -> Iban *\/\n+  {\"bli\",       HB_TAG_NONE            },       \/* Bolia != Baluchi *\/\n+  {\"blk\",       HB_TAG('B','L','K',' ')},       \/* Pa’o Karen *\/\n+  {\"blk\",       HB_TAG('K','R','N',' ')},       \/* Pa'o Karen -> Karen *\/\n@@ -136,0 +177,1 @@\n+  {\"blt\",       HB_TAG_NONE            },       \/* Tai Dam != Balti *\/\n@@ -137,0 +179,2 @@\n+  {\"bmb\",       HB_TAG_NONE            },       \/* Bembe != Bambara (Bamanankan) *\/\n+  {\"bml\",       HB_TAG_NONE            },       \/* Bomboli != Bamileke *\/\n@@ -140,0 +184,3 @@\n+  {\"bpd\",       HB_TAG('B','A','D','0')},       \/* Banda-Banda -> Banda *\/\n+  {\"bpl\",       HB_TAG('C','P','P',' ')},       \/* Broome Pearling Lugger Pidgin -> Creoles *\/\n+  {\"bpq\",       HB_TAG('C','P','P',' ')},       \/* Banda Malay -> Creoles *\/\n@@ -142,0 +189,1 @@\n+  {\"bqk\",       HB_TAG('B','A','D','0')},       \/* Banda-Mbrès -> Banda *\/\n@@ -144,0 +192,1 @@\n+  {\"brc\",       HB_TAG('C','P','P',' ')},       \/* Berbice Creole Dutch -> Creoles *\/\n@@ -145,0 +194,2 @@\n+  {\"bri\",       HB_TAG_NONE            },       \/* Mokpwe != Braj Bhasha *\/\n+  {\"brm\",       HB_TAG_NONE            },       \/* Barambu != Burmese *\/\n@@ -147,0 +198,1 @@\n+  {\"bsh\",       HB_TAG_NONE            },       \/* Kati != Bashkir *\/\n@@ -149,0 +201,3 @@\n+  {\"btd\",       HB_TAG('B','T','D',' ')},       \/* Batak Dairi (Pakpak) *\/\n+  {\"btd\",       HB_TAG('B','T','K',' ')},       \/* Batak Dairi -> Batak *\/\n+  {\"bti\",       HB_TAG_NONE            },       \/* Burate != Beti *\/\n@@ -150,0 +205,3 @@\n+\/*{\"btk\",       HB_TAG('B','T','K',' ')},*\/     \/* Batak [family] *\/\n+  {\"btm\",       HB_TAG('B','T','M',' ')},       \/* Batak Mandailing *\/\n+  {\"btm\",       HB_TAG('B','T','K',' ')},       \/* Batak Mandailing -> Batak *\/\n@@ -151,1 +209,6 @@\n-\/*{\"bts\",       HB_TAG('B','T','S',' ')},*\/     \/* Batak Simalungun *\/\n+  {\"bts\",       HB_TAG('B','T','S',' ')},       \/* Batak Simalungun *\/\n+  {\"bts\",       HB_TAG('B','T','K',' ')},       \/* Batak Simalungun -> Batak *\/\n+  {\"btx\",       HB_TAG('B','T','X',' ')},       \/* Batak Karo *\/\n+  {\"btx\",       HB_TAG('B','T','K',' ')},       \/* Batak Karo -> Batak *\/\n+  {\"btz\",       HB_TAG('B','T','Z',' ')},       \/* Batak Alas-Kluet *\/\n+  {\"btz\",       HB_TAG('B','T','K',' ')},       \/* Batak Alas-Kluet -> Batak *\/\n@@ -156,0 +219,1 @@\n+  {\"bwe\",       HB_TAG('K','R','N',' ')},       \/* Bwe Karen -> Karen *\/\n@@ -157,0 +221,1 @@\n+  {\"bxo\",       HB_TAG('C','P','P',' ')},       \/* Barikanchi -> Creoles *\/\n@@ -160,1 +225,2 @@\n-\/*{\"byv\",       HB_TAG('B','Y','V',' ')},*\/     \/* Medumba *\/\n+  {\"byv\",       HB_TAG('B','Y','V',' ')},       \/* Medumba *\/\n+  {\"byv\",       HB_TAG('B','M','L',' ')},       \/* Medumba -> Bamileke *\/\n@@ -162,0 +228,2 @@\n+  {\"bzj\",       HB_TAG('C','P','P',' ')},       \/* Belize Kriol English -> Creoles *\/\n+  {\"bzk\",       HB_TAG('C','P','P',' ')},       \/* Nicaragua Creole English -> Creoles *\/\n@@ -163,0 +231,2 @@\n+  {\"caa\",       HB_TAG('M','Y','N',' ')},       \/* Chortí -> Mayan *\/\n+  {\"cac\",       HB_TAG('M','Y','N',' ')},       \/* Chuj -> Mayan *\/\n@@ -165,2 +235,4 @@\n-\/*{\"cak\",       HB_TAG('C','A','K',' ')},*\/     \/* Kaqchikel *\/\n-\/*{\"cbk\",       HB_TAG('C','B','K',' ')},*\/     \/* Chavacano -> Zamboanga Chavacano *\/\n+  {\"cak\",       HB_TAG('C','A','K',' ')},       \/* Kaqchikel *\/\n+  {\"cak\",       HB_TAG('M','Y','N',' ')},       \/* Kaqchikel -> Mayan *\/\n+  {\"cbk\",       HB_TAG('C','B','K',' ')},       \/* Chavacano -> Zamboanga Chavacano *\/\n+  {\"cbk\",       HB_TAG('C','P','P',' ')},       \/* Chavacano -> Creoles *\/\n@@ -168,0 +240,2 @@\n+  {\"ccl\",       HB_TAG('C','P','P',' ')},       \/* Cutchi-Swahili -> Creoles *\/\n+  {\"ccm\",       HB_TAG('C','P','P',' ')},       \/* Malaccan Creole Malay -> Creoles *\/\n@@ -170,1 +244,1 @@\n-  {\"cdo\",       HB_TAG('Z','H','S',' ')},       \/* Min Dong Chinese -> Chinese Simplified *\/\n+  {\"cdo\",       HB_TAG('Z','H','S',' ')},       \/* Min Dong Chinese -> Chinese, Simplified *\/\n@@ -173,0 +247,2 @@\n+  {\"cek\",       HB_TAG('Q','I','N',' ')},       \/* Eastern Khumi Chin -> Chin *\/\n+  {\"cey\",       HB_TAG('Q','I','N',' ')},       \/* Ekai Chin -> Chin *\/\n@@ -174,0 +250,1 @@\n+  {\"cfm\",       HB_TAG('Q','I','N',' ')},       \/* Falam Chin -> Chin *\/\n@@ -176,0 +253,3 @@\n+  {\"chf\",       HB_TAG('M','Y','N',' ')},       \/* Tabasco Chontal -> Mayan *\/\n+  {\"chg\",       HB_TAG_NONE            },       \/* Chagatai != Chaha Gurage *\/\n+  {\"chh\",       HB_TAG_NONE            },       \/* Chinook != Chattisgarhi *\/\n@@ -178,0 +258,1 @@\n+  {\"chn\",       HB_TAG('C','P','P',' ')},       \/* Chinook jargon -> Creoles *\/\n@@ -189,1 +270,1 @@\n-  {\"cjy\",       HB_TAG('Z','H','S',' ')},       \/* Jinyu Chinese -> Chinese Simplified *\/\n+  {\"cjy\",       HB_TAG('Z','H','S',' ')},       \/* Jinyu Chinese -> Chinese, Simplified *\/\n@@ -192,0 +273,2 @@\n+  {\"ckn\",       HB_TAG('Q','I','N',' ')},       \/* Kaang Chin -> Chin *\/\n+  {\"cks\",       HB_TAG('C','P','P',' ')},       \/* Tayo -> Creoles *\/\n@@ -193,0 +276,1 @@\n+  {\"ckz\",       HB_TAG('M','Y','N',' ')},       \/* Cakchiquel-Quiché Mixed Language -> Mayan *\/\n@@ -196,1 +280,3 @@\n-  {\"cmn\",       HB_TAG('Z','H','S',' ')},       \/* Mandarin Chinese -> Chinese Simplified *\/\n+  {\"clj\",       HB_TAG('Q','I','N',' ')},       \/* Laitu Chin -> Chin *\/\n+  {\"clt\",       HB_TAG('Q','I','N',' ')},       \/* Lautu Chin -> Chin *\/\n+  {\"cmn\",       HB_TAG('Z','H','S',' ')},       \/* Mandarin Chinese -> Chinese, Simplified *\/\n@@ -202,1 +288,2 @@\n-  {\"cnp\",       HB_TAG('Z','H','S',' ')},       \/* Northern Ping Chinese -> Chinese Simplified *\/\n+  {\"cnp\",       HB_TAG('Z','H','S',' ')},       \/* Northern Ping Chinese -> Chinese, Simplified *\/\n+  {\"cnr\",       HB_TAG('S','R','B',' ')},       \/* Montenegrin -> Serbian *\/\n@@ -204,0 +291,1 @@\n+  {\"cnu\",       HB_TAG('B','B','R',' ')},       \/* Chenoua -> Berber *\/\n@@ -207,0 +295,1 @@\n+  {\"cob\",       HB_TAG('M','Y','N',' ')},       \/* Chicomuceltec -> Mayan *\/\n@@ -212,0 +301,1 @@\n+  {\"cpi\",       HB_TAG('C','P','P',' ')},       \/* Chinese Pidgin English -> Creoles *\/\n@@ -213,1 +303,1 @@\n-  {\"cpx\",       HB_TAG('Z','H','S',' ')},       \/* Pu-Xian Chinese -> Chinese Simplified *\/\n+  {\"cpx\",       HB_TAG('Z','H','S',' ')},       \/* Pu-Xian Chinese -> Chinese, Simplified *\/\n@@ -216,0 +306,1 @@\n+  {\"cqu\",       HB_TAG('Q','U','Z',' ')},       \/* Chilean Quechua (retired code) -> Quechua *\/\n@@ -217,1 +308,0 @@\n-  {\"cr\",        HB_TAG('Y','C','R',' ')},       \/* Cree [macrolanguage] -> Y-Cree *\/\n@@ -219,0 +309,1 @@\n+  {\"cri\",       HB_TAG('C','P','P',' ')},       \/* Sãotomense -> Creoles *\/\n@@ -220,0 +311,2 @@\n+  {\"crj\",       HB_TAG('Y','C','R',' ')},       \/* Southern East Cree -> Y-Cree *\/\n+  {\"crj\",       HB_TAG('C','R','E',' ')},       \/* Southern East Cree -> Cree *\/\n@@ -221,0 +314,2 @@\n+  {\"crk\",       HB_TAG('Y','C','R',' ')},       \/* Plains Cree -> Y-Cree *\/\n+  {\"crk\",       HB_TAG('C','R','E',' ')},       \/* Plains Cree -> Cree *\/\n@@ -222,0 +317,2 @@\n+  {\"crl\",       HB_TAG('Y','C','R',' ')},       \/* Northern East Cree -> Y-Cree *\/\n+  {\"crl\",       HB_TAG('C','R','E',' ')},       \/* Northern East Cree -> Cree *\/\n@@ -224,0 +321,1 @@\n+  {\"crm\",       HB_TAG('C','R','E',' ')},       \/* Moose Cree -> Cree *\/\n@@ -225,0 +323,3 @@\n+  {\"crr\",       HB_TAG_NONE            },       \/* Carolina Algonquian != Carrier *\/\n+  {\"crs\",       HB_TAG('C','P','P',' ')},       \/* Seselwa Creole French -> Creoles *\/\n+  {\"crt\",       HB_TAG_NONE            },       \/* Iyojwa'ja Chorote != Crimean Tatar *\/\n@@ -231,0 +332,2 @@\n+  {\"csj\",       HB_TAG('Q','I','N',' ')},       \/* Songlai Chin -> Chin *\/\n+  {\"csl\",       HB_TAG_NONE            },       \/* Chinese Sign Language != Church Slavonic *\/\n@@ -232,1 +335,2 @@\n-  {\"csp\",       HB_TAG('Z','H','S',' ')},       \/* Southern Ping Chinese -> Chinese Simplified *\/\n+  {\"csp\",       HB_TAG('Z','H','S',' ')},       \/* Southern Ping Chinese -> Chinese, Simplified *\/\n+  {\"csv\",       HB_TAG('Q','I','N',' ')},       \/* Sumtu Chin -> Chin *\/\n@@ -235,0 +339,1 @@\n+  {\"csw\",       HB_TAG('C','R','E',' ')},       \/* Swampy Cree -> Cree *\/\n@@ -240,0 +345,1 @@\n+  {\"cth\",       HB_TAG('Q','I','N',' ')},       \/* Thaiphum Chin -> Chin *\/\n@@ -242,0 +348,1 @@\n+  {\"ctu\",       HB_TAG('M','Y','N',' ')},       \/* Chol -> Mayan *\/\n@@ -249,0 +356,1 @@\n+  {\"cwd\",       HB_TAG('C','R','E',' ')},       \/* Woods Cree -> Cree *\/\n@@ -250,2 +358,2 @@\n-  {\"czh\",       HB_TAG('Z','H','S',' ')},       \/* Huizhou Chinese -> Chinese Simplified *\/\n-  {\"czo\",       HB_TAG('Z','H','S',' ')},       \/* Min Zhong Chinese -> Chinese Simplified *\/\n+  {\"czh\",       HB_TAG('Z','H','S',' ')},       \/* Huizhou Chinese -> Chinese, Simplified *\/\n+  {\"czo\",       HB_TAG('Z','H','S',' ')},       \/* Min Zhong Chinese -> Chinese, Simplified *\/\n@@ -254,0 +362,1 @@\n+\/*{\"dag\",       HB_TAG('D','A','G',' ')},*\/     \/* Dagbani *\/\n@@ -258,0 +367,1 @@\n+  {\"dcr\",       HB_TAG('C','P','P',' ')},       \/* Negerhollands -> Creoles *\/\n@@ -261,1 +371,3 @@\n-\/*{\"dgo\",       HB_TAG('D','G','O',' ')},*\/     \/* Dogri *\/\n+  {\"dep\",       HB_TAG('C','P','P',' ')},       \/* Pidgin Delaware -> Creoles *\/\n+  {\"dgo\",       HB_TAG('D','G','O',' ')},       \/* Dogri (individual language) *\/\n+  {\"dgo\",       HB_TAG('D','G','R',' ')},       \/* Dogri (macrolanguage) *\/\n@@ -265,0 +377,1 @@\n+  {\"dhv\",       HB_TAG_NONE            },       \/* Dehu != Divehi (Dhivehi, Maldivian) (deprecated) *\/\n@@ -269,1 +382,2 @@\n-\/*{\"diq\",       HB_TAG('D','I','Q',' ')},*\/     \/* Dimli *\/\n+  {\"diq\",       HB_TAG('D','I','Q',' ')},       \/* Dimli *\/\n+  {\"diq\",       HB_TAG('Z','Z','A',' ')},       \/* Dimli -> Zazaki *\/\n@@ -272,0 +386,1 @@\n+  {\"djk\",       HB_TAG('C','P','P',' ')},       \/* Eastern Maroon Creole -> Creoles *\/\n@@ -276,1 +391,2 @@\n-  {\"doi\",       HB_TAG('D','G','R',' ')},       \/* Dogri [macrolanguage] *\/\n+  {\"dnk\",       HB_TAG_NONE            },       \/* Dengka != Dinka *\/\n+  {\"doi\",       HB_TAG('D','G','R',' ')},       \/* Dogri (macrolanguage) [macrolanguage] *\/\n@@ -278,0 +394,1 @@\n+  {\"dri\",       HB_TAG_NONE            },       \/* C'Lela != Dari *\/\n@@ -279,0 +396,1 @@\n+  {\"drw\",       HB_TAG('F','A','R',' ')},       \/* Darwazi (retired code) -> Persian *\/\n@@ -282,0 +400,1 @@\n+  {\"dun\",       HB_TAG_NONE            },       \/* Dusun Deyah != Dungan *\/\n@@ -290,0 +409,2 @@\n+  {\"dzn\",       HB_TAG_NONE            },       \/* Dzando != Dzongkha *\/\n+  {\"ecr\",       HB_TAG_NONE            },       \/* Eteocretan != Eastern Cree *\/\n@@ -293,0 +414,1 @@\n+  {\"eky\",       HB_TAG('K','R','N',' ')},       \/* Eastern Kayah -> Karen *\/\n@@ -296,0 +418,1 @@\n+  {\"emy\",       HB_TAG('M','Y','N',' ')},       \/* Epigraphic Mayan -> Mayan *\/\n@@ -298,2 +421,2 @@\n-  {\"enf\",       HB_TAG('F','N','E',' ')},       \/* Forest Enets -> Forest Nenets *\/\n-  {\"enh\",       HB_TAG('T','N','E',' ')},       \/* Tundra Enets -> Tundra Nenets *\/\n+  {\"enf\",       HB_TAG('F','N','E',' ')},       \/* Forest Enets *\/\n+  {\"enh\",       HB_TAG('T','N','E',' ')},       \/* Tundra Enets *\/\n@@ -309,0 +432,1 @@\n+  {\"euq\",       HB_TAG_NONE            },       \/* Basque [family] != Basque *\/\n@@ -314,0 +438,1 @@\n+  {\"fab\",       HB_TAG('C','P','P',' ')},       \/* Fa d'Ambu -> Creoles *\/\n@@ -315,1 +440,4 @@\n-\/*{\"fat\",       HB_TAG('F','A','T',' ')},*\/     \/* Fanti *\/\n+  {\"fan\",       HB_TAG('B','T','I',' ')},       \/* Fang (Equatorial Guinea) -> Beti *\/\n+  {\"far\",       HB_TAG_NONE            },       \/* Fataleka != Persian *\/\n+  {\"fat\",       HB_TAG('F','A','T',' ')},       \/* Fanti *\/\n+  {\"fat\",       HB_TAG('A','K','A',' ')},       \/* Fanti -> Akan *\/\n@@ -324,1 +452,3 @@\n-\/*{\"fmp\",       HB_TAG('F','M','P',' ')},*\/     \/* Fe’fe’ *\/\n+  {\"fmp\",       HB_TAG('F','M','P',' ')},       \/* Fe’fe’ *\/\n+  {\"fmp\",       HB_TAG('B','M','L',' ')},       \/* Fe'fe' -> Bamileke *\/\n+  {\"fng\",       HB_TAG('C','P','P',' ')},       \/* Fanagalo -> Creoles *\/\n@@ -327,0 +457,2 @@\n+  {\"fos\",       HB_TAG_NONE            },       \/* Siraya != Faroese *\/\n+  {\"fpe\",       HB_TAG('C','P','P',' ')},       \/* Fernando Po Creole English -> Creoles *\/\n@@ -334,0 +466,1 @@\n+  {\"fuf\",       HB_TAG('F','U','L',' ')},       \/* Pular -> Fulah *\/\n@@ -338,1 +471,2 @@\n-\/*{\"fuv\",       HB_TAG('F','U','V',' ')},*\/     \/* Nigerian Fulfulde *\/\n+  {\"fuv\",       HB_TAG('F','U','V',' ')},       \/* Nigerian Fulfulde *\/\n+  {\"fuv\",       HB_TAG('F','U','L',' ')},       \/* Nigerian Fulfulde -> Fulah *\/\n@@ -342,0 +476,3 @@\n+  {\"gac\",       HB_TAG('C','P','P',' ')},       \/* Mixed Great Andamanese -> Creoles *\/\n+  {\"gad\",       HB_TAG_NONE            },       \/* Gaddang != Ga *\/\n+  {\"gae\",       HB_TAG_NONE            },       \/* Guarequena != Scottish Gaelic (Gaelic) *\/\n@@ -343,1 +480,4 @@\n-  {\"gan\",       HB_TAG('Z','H','S',' ')},       \/* Gan Chinese -> Chinese Simplified *\/\n+  {\"gal\",       HB_TAG_NONE            },       \/* Galolen != Galician *\/\n+  {\"gan\",       HB_TAG('Z','H','S',' ')},       \/* Gan Chinese -> Chinese, Simplified *\/\n+  {\"gar\",       HB_TAG_NONE            },       \/* Galeya != Garshuni *\/\n+  {\"gaw\",       HB_TAG_NONE            },       \/* Nobonob != Garhwali *\/\n@@ -348,0 +488,3 @@\n+  {\"gcf\",       HB_TAG('C','P','P',' ')},       \/* Guadeloupean Creole French -> Creoles *\/\n+  {\"gcl\",       HB_TAG('C','P','P',' ')},       \/* Grenadian Creole English -> Creoles *\/\n+  {\"gcr\",       HB_TAG('C','P','P',' ')},       \/* Guianese Creole French -> Creoles *\/\n@@ -352,0 +495,4 @@\n+  {\"gha\",       HB_TAG('B','B','R',' ')},       \/* Ghadamès -> Berber *\/\n+  {\"ghk\",       HB_TAG('K','R','N',' ')},       \/* Geko Karen -> Karen *\/\n+  {\"gho\",       HB_TAG('B','B','R',' ')},       \/* Ghomara -> Berber *\/\n+  {\"gib\",       HB_TAG('C','P','P',' ')},       \/* Gibanawa -> Creoles *\/\n@@ -355,1 +502,2 @@\n-\/*{\"gkp\",       HB_TAG('G','K','P',' ')},*\/     \/* Guinea Kpelle -> Kpelle (Guinea) *\/\n+  {\"gkp\",       HB_TAG('G','K','P',' ')},       \/* Guinea Kpelle -> Kpelle (Guinea) *\/\n+  {\"gkp\",       HB_TAG('K','P','L',' ')},       \/* Guinea Kpelle -> Kpelle *\/\n@@ -359,0 +507,1 @@\n+  {\"gmz\",       HB_TAG_NONE            },       \/* Mgbolizhia != Gumuz *\/\n@@ -360,0 +509,1 @@\n+  {\"gnb\",       HB_TAG('Q','I','N',' ')},       \/* Gangte -> Chin *\/\n@@ -366,0 +516,5 @@\n+  {\"goq\",       HB_TAG('C','P','P',' ')},       \/* Gorap -> Creoles *\/\n+  {\"gox\",       HB_TAG('B','A','D','0')},       \/* Gobu -> Banda *\/\n+  {\"gpe\",       HB_TAG('C','P','P',' ')},       \/* Ghanaian Pidgin English -> Creoles *\/\n+  {\"gro\",       HB_TAG_NONE            },       \/* Groma != Garo *\/\n+  {\"grr\",       HB_TAG('B','B','R',' ')},       \/* Taznatit -> Berber *\/\n@@ -370,0 +525,1 @@\n+  {\"gua\",       HB_TAG_NONE            },       \/* Shiki != Guarani *\/\n@@ -375,1 +531,1 @@\n-  {\"guk\",       HB_TAG('G','U','K',' ')},       \/* Gumuz (SIL fonts) *\/\n+  {\"gul\",       HB_TAG('C','P','P',' ')},       \/* Sea Island Creole English -> Creoles *\/\n@@ -380,0 +536,1 @@\n+  {\"gyn\",       HB_TAG('C','P','P',' ')},       \/* Guyanese Creole English -> Creoles *\/\n@@ -383,1 +540,3 @@\n-  {\"hak\",       HB_TAG('Z','H','S',' ')},       \/* Hakka Chinese -> Chinese Simplified *\/\n+  {\"hai\",       HB_TAG_NONE            },       \/* Haida [macrolanguage] != Haitian (Haitian Creole) *\/\n+  {\"hak\",       HB_TAG('Z','H','S',' ')},       \/* Hakka Chinese -> Chinese, Simplified *\/\n+  {\"hal\",       HB_TAG_NONE            },       \/* Halang != Halam (Falam Chin) *\/\n@@ -388,0 +547,2 @@\n+  {\"hbn\",       HB_TAG_NONE            },       \/* Heiban != Hammer-Banna *\/\n+  {\"hca\",       HB_TAG('C','P','P',' ')},       \/* Andaman Creole Hindi -> Creoles *\/\n@@ -407,0 +568,1 @@\n+  {\"hmr\",       HB_TAG('Q','I','N',' ')},       \/* Hmar -> Chin *\/\n@@ -416,0 +578,1 @@\n+  {\"ho\",        HB_TAG('C','P','P',' ')},       \/* Hiri Motu -> Creoles *\/\n@@ -419,0 +582,1 @@\n+  {\"hoj\",       HB_TAG('R','A','J',' ')},       \/* Hadothi -> Rajasthani *\/\n@@ -420,0 +584,1 @@\n+  {\"hra\",       HB_TAG('Q','I','N',' ')},       \/* Hrangkhol -> Chin *\/\n@@ -422,1 +587,1 @@\n-  {\"hsn\",       HB_TAG('Z','H','S',' ')},       \/* Xiang Chinese -> Chinese Simplified *\/\n+  {\"hsn\",       HB_TAG('Z','H','S',' ')},       \/* Xiang Chinese -> Chinese, Simplified *\/\n@@ -424,0 +589,1 @@\n+  {\"ht\",        HB_TAG('C','P','P',' ')},       \/* Haitian -> Creoles *\/\n@@ -427,0 +593,2 @@\n+  {\"hus\",       HB_TAG('M','Y','N',' ')},       \/* Huastec -> Mayan *\/\n+  {\"hwc\",       HB_TAG('C','P','P',' ')},       \/* Hawai'i Creole English -> Creoles *\/\n@@ -434,0 +602,2 @@\n+  {\"iby\",       HB_TAG('I','J','O',' ')},       \/* Ibani -> Ijo *\/\n+  {\"icr\",       HB_TAG('C','P','P',' ')},       \/* Islander Creole English -> Creoles *\/\n@@ -435,0 +605,1 @@\n+  {\"id\",        HB_TAG('M','L','Y',' ')},       \/* Indonesian -> Malay *\/\n@@ -436,0 +607,1 @@\n+  {\"idb\",       HB_TAG('C','P','P',' ')},       \/* Indo-Portuguese -> Creoles *\/\n@@ -439,0 +611,1 @@\n+  {\"ihb\",       HB_TAG('C','P','P',' ')},       \/* Iha Based Pidgin -> Creoles *\/\n@@ -441,0 +614,2 @@\n+  {\"ije\",       HB_TAG('I','J','O',' ')},       \/* Biseni -> Ijo *\/\n+  {\"ijn\",       HB_TAG('I','J','O',' ')},       \/* Kalabari -> Ijo *\/\n@@ -442,0 +617,1 @@\n+  {\"ijs\",       HB_TAG('I','J','O',' ')},       \/* Southeast Ijo -> Ijo *\/\n@@ -447,0 +623,1 @@\n+  {\"in\",        HB_TAG('M','L','Y',' ')},       \/* Indonesian (retired code) -> Malay *\/\n@@ -450,0 +627,1 @@\n+  {\"iri\",       HB_TAG_NONE            },       \/* Rigwe != Irish *\/\n@@ -451,0 +629,1 @@\n+  {\"ism\",       HB_TAG_NONE            },       \/* Masimasi != Inari Sami *\/\n@@ -452,0 +631,1 @@\n+  {\"itz\",       HB_TAG('M','Y','N',' ')},       \/* Itzá -> Mayan *\/\n@@ -454,0 +634,1 @@\n+  {\"ixl\",       HB_TAG('M','Y','N',' ')},       \/* Ixil -> Mayan *\/\n@@ -455,0 +636,1 @@\n+  {\"jac\",       HB_TAG('M','Y','N',' ')},       \/* Popti' -> Mayan *\/\n@@ -456,1 +638,3 @@\n-\/*{\"jam\",       HB_TAG('J','A','M',' ')},*\/     \/* Jamaican Creole English -> Jamaican Creole *\/\n+  {\"jam\",       HB_TAG('J','A','M',' ')},       \/* Jamaican Creole English -> Jamaican Creole *\/\n+  {\"jam\",       HB_TAG('C','P','P',' ')},       \/* Jamaican Creole English -> Creoles *\/\n+  {\"jan\",       HB_TAG_NONE            },       \/* Jandai != Japanese *\/\n@@ -458,0 +642,2 @@\n+  {\"jbe\",       HB_TAG('B','B','R',' ')},       \/* Judeo-Berber -> Berber *\/\n+  {\"jbn\",       HB_TAG('B','B','R',' ')},       \/* Nafusi -> Berber *\/\n@@ -460,0 +646,1 @@\n+  {\"jgo\",       HB_TAG('B','M','L',' ')},       \/* Ngomba -> Bamileke *\/\n@@ -461,0 +648,5 @@\n+  {\"jii\",       HB_TAG_NONE            },       \/* Jiiddu != Yiddish *\/\n+  {\"jkm\",       HB_TAG('K','R','N',' ')},       \/* Mobwa Karen -> Karen *\/\n+  {\"jkp\",       HB_TAG('K','R','N',' ')},       \/* Paku Karen -> Karen *\/\n+  {\"jud\",       HB_TAG_NONE            },       \/* Worodougou != Ladino *\/\n+  {\"jul\",       HB_TAG_NONE            },       \/* Jirel != Jula *\/\n@@ -462,0 +654,1 @@\n+  {\"jvd\",       HB_TAG('C','P','P',' ')},       \/* Javindo -> Creoles *\/\n@@ -466,0 +659,2 @@\n+  {\"kab\",       HB_TAG('B','B','R',' ')},       \/* Kabyle -> Berber *\/\n+  {\"kac\",       HB_TAG_NONE            },       \/* Kachin != Kachchi *\/\n@@ -473,0 +668,1 @@\n+  {\"kcn\",       HB_TAG('C','P','P',' ')},       \/* Nubi -> Creoles *\/\n@@ -476,2 +672,5 @@\n-\/*{\"kea\",       HB_TAG('K','E','A',' ')},*\/     \/* Kabuverdianu (Crioulo) *\/\n-\/*{\"kek\",       HB_TAG('K','E','K',' ')},*\/     \/* Kekchi *\/\n+  {\"kea\",       HB_TAG('K','E','A',' ')},       \/* Kabuverdianu (Crioulo) *\/\n+  {\"kea\",       HB_TAG('C','P','P',' ')},       \/* Kabuverdianu -> Creoles *\/\n+  {\"keb\",       HB_TAG_NONE            },       \/* Kélé != Kebena *\/\n+  {\"kek\",       HB_TAG('K','E','K',' ')},       \/* Kekchi *\/\n+  {\"kek\",       HB_TAG('M','Y','N',' ')},       \/* Kekchí -> Mayan *\/\n@@ -484,0 +683,1 @@\n+  {\"kge\",       HB_TAG_NONE            },       \/* Komering != Khutsuri Georgian *\/\n@@ -487,0 +687,3 @@\n+  {\"khn\",       HB_TAG_NONE            },       \/* Khandesi != Khamti Shan (Microsoft fonts) *\/\n+  {\"khs\",       HB_TAG_NONE            },       \/* Kasua != Khanty-Shurishkar *\/\n+  {\"kht\",       HB_TAG('K','H','T',' ')},       \/* Khamti -> Khamti Shan *\/\n@@ -488,1 +691,1 @@\n-  {\"kht\",       HB_TAG('K','H','T',' ')},       \/* Khamti -> Khamti Shan (OpenType spec and SIL fonts) *\/\n+  {\"khv\",       HB_TAG_NONE            },       \/* Khvarshi != Khanty-Vakhi *\/\n@@ -491,1 +694,3 @@\n-\/*{\"kiu\",       HB_TAG('K','I','U',' ')},*\/     \/* Kirmanjki *\/\n+  {\"kis\",       HB_TAG_NONE            },       \/* Kis != Kisii *\/\n+  {\"kiu\",       HB_TAG('K','I','U',' ')},       \/* Kirmanjki *\/\n+  {\"kiu\",       HB_TAG('Z','Z','A',' ')},       \/* Kirmanjki -> Zazaki *\/\n@@ -493,0 +698,1 @@\n+  {\"kjb\",       HB_TAG('M','Y','N',' ')},       \/* Q'anjob'al -> Mayan *\/\n@@ -495,1 +701,3 @@\n-\/*{\"kjp\",       HB_TAG('K','J','P',' ')},*\/     \/* Pwo Eastern Karen -> Eastern Pwo Karen *\/\n+  {\"kjp\",       HB_TAG('K','J','P',' ')},       \/* Pwo Eastern Karen -> Eastern Pwo Karen *\/\n+  {\"kjp\",       HB_TAG('K','R','N',' ')},       \/* Pwo Eastern Karen -> Karen *\/\n+  {\"kjt\",       HB_TAG('K','R','N',' ')},       \/* Phrae Pwo Karen -> Karen *\/\n@@ -498,0 +706,1 @@\n+  {\"kkn\",       HB_TAG_NONE            },       \/* Kon Keu != Kokni *\/\n@@ -500,0 +709,1 @@\n+  {\"klm\",       HB_TAG_NONE            },       \/* Migum != Kalmyk *\/\n@@ -503,0 +713,2 @@\n+  {\"kmn\",       HB_TAG_NONE            },       \/* Awtuw != Kumaoni *\/\n+  {\"kmo\",       HB_TAG_NONE            },       \/* Kwoma != Komo *\/\n@@ -504,0 +716,2 @@\n+  {\"kms\",       HB_TAG_NONE            },       \/* Kamasau != Komso *\/\n+  {\"kmv\",       HB_TAG('C','P','P',' ')},       \/* Karipúna Creole French -> Creoles *\/\n@@ -509,0 +723,1 @@\n+  {\"knj\",       HB_TAG('M','Y','N',' ')},       \/* Western Kanjobal -> Mayan *\/\n@@ -510,0 +725,1 @@\n+  {\"knr\",       HB_TAG_NONE            },       \/* Kaningra != Kanuri *\/\n@@ -511,0 +727,3 @@\n+  {\"ko\",        HB_TAG('K','O','H',' ')},       \/* Korean -> Korean Old Hangul *\/\n+  {\"kod\",       HB_TAG_NONE            },       \/* Kodi != Kodagu *\/\n+  {\"koh\",       HB_TAG_NONE            },       \/* Koyo != Korean Old Hangul *\/\n@@ -512,0 +731,1 @@\n+  {\"koi\",       HB_TAG('K','O','M',' ')},       \/* Komi-Permyak -> Komi *\/\n@@ -513,0 +733,1 @@\n+  {\"kop\",       HB_TAG_NONE            },       \/* Waube != Komi-Permyak *\/\n@@ -515,0 +736,1 @@\n+  {\"koz\",       HB_TAG_NONE            },       \/* Korak != Komi-Zyrian *\/\n@@ -516,0 +738,2 @@\n+  {\"kpl\",       HB_TAG_NONE            },       \/* Kpala != Kpelle *\/\n+  {\"kpp\",       HB_TAG('K','R','N',' ')},       \/* Paku Karen (retired code) -> Karen *\/\n@@ -517,0 +741,1 @@\n+  {\"kpv\",       HB_TAG('K','O','M',' ')},       \/* Komi-Zyrian -> Komi *\/\n@@ -523,1 +748,3 @@\n-\/*{\"kri\",       HB_TAG('K','R','I',' ')},*\/     \/* Krio *\/\n+  {\"kri\",       HB_TAG('K','R','I',' ')},       \/* Krio *\/\n+  {\"kri\",       HB_TAG('C','P','P',' ')},       \/* Krio -> Creoles *\/\n+  {\"krk\",       HB_TAG_NONE            },       \/* Kerek != Karakalpak *\/\n@@ -525,0 +752,2 @@\n+  {\"krm\",       HB_TAG_NONE            },       \/* Krim (retired code) != Karaim *\/\n+  {\"krn\",       HB_TAG_NONE            },       \/* Sapo != Karen *\/\n@@ -529,0 +758,2 @@\n+  {\"ksi\",       HB_TAG_NONE            },       \/* Krisa != Khasi *\/\n+  {\"ksm\",       HB_TAG_NONE            },       \/* Kumba != Kildin Sami *\/\n@@ -530,1 +761,2 @@\n-\/*{\"ksw\",       HB_TAG('K','S','W',' ')},*\/     \/* S’gaw Karen *\/\n+  {\"ksw\",       HB_TAG('K','S','W',' ')},       \/* S’gaw Karen *\/\n+  {\"ksw\",       HB_TAG('K','R','N',' ')},       \/* S'gaw Karen -> Karen *\/\n@@ -535,0 +767,2 @@\n+  {\"kui\",       HB_TAG_NONE            },       \/* Kuikúro-Kalapálo != Kui *\/\n+  {\"kul\",       HB_TAG_NONE            },       \/* Kulere != Kulvi *\/\n@@ -537,0 +771,2 @@\n+  {\"kuw\",       HB_TAG('B','A','D','0')},       \/* Kpagua -> Banda *\/\n+  {\"kuy\",       HB_TAG_NONE            },       \/* Kuuku-Ya'u != Kuy *\/\n@@ -539,0 +775,2 @@\n+  {\"kvl\",       HB_TAG('K','R','N',' ')},       \/* Kayaw -> Karen *\/\n+  {\"kvq\",       HB_TAG('K','R','N',' ')},       \/* Geba Karen -> Karen *\/\n@@ -540,0 +778,3 @@\n+  {\"kvt\",       HB_TAG('K','R','N',' ')},       \/* Lahta Karen -> Karen *\/\n+  {\"kvu\",       HB_TAG('K','R','N',' ')},       \/* Yinbaw Karen -> Karen *\/\n+  {\"kvy\",       HB_TAG('K','R','N',' ')},       \/* Yintale Karen -> Karen *\/\n@@ -541,0 +782,1 @@\n+  {\"kww\",       HB_TAG('C','P','P',' ')},       \/* Kwinti -> Creoles *\/\n@@ -544,0 +786,2 @@\n+  {\"kxf\",       HB_TAG('K','R','N',' ')},       \/* Manumanaw Karen -> Karen *\/\n+  {\"kxk\",       HB_TAG('K','R','N',' ')},       \/* Zayein Karen -> Karen *\/\n@@ -547,1 +791,3 @@\n-\/*{\"kyu\",       HB_TAG('K','Y','U',' ')},*\/     \/* Western Kayah *\/\n+  {\"kyk\",       HB_TAG_NONE            },       \/* Kamayo != Koryak *\/\n+  {\"kyu\",       HB_TAG('K','Y','U',' ')},       \/* Western Kayah *\/\n+  {\"kyu\",       HB_TAG('K','R','N',' ')},       \/* Western Kayah -> Karen *\/\n@@ -549,0 +795,1 @@\n+  {\"lac\",       HB_TAG('M','Y','N',' ')},       \/* Lacandon -> Mayan *\/\n@@ -550,0 +797,4 @@\n+  {\"lah\",       HB_TAG_NONE            },       \/* Lahnda [macrolanguage] != Lahuli *\/\n+  {\"lak\",       HB_TAG_NONE            },       \/* Laka (Nigeria) != Lak *\/\n+  {\"lam\",       HB_TAG_NONE            },       \/* Lamba != Lambani *\/\n+  {\"laz\",       HB_TAG_NONE            },       \/* Aribwatsa != Laz *\/\n@@ -557,0 +808,1 @@\n+  {\"ldk\",       HB_TAG_NONE            },       \/* Leelau != Ladakhi *\/\n@@ -562,0 +814,1 @@\n+  {\"lir\",       HB_TAG('C','P','P',' ')},       \/* Liberian English -> Creoles *\/\n@@ -564,0 +817,1 @@\n+  {\"liy\",       HB_TAG('B','A','D','0')},       \/* Banda-Bambari -> Banda *\/\n@@ -570,0 +824,2 @@\n+  {\"lma\",       HB_TAG_NONE            },       \/* East Limba != Low Mari *\/\n+  {\"lmb\",       HB_TAG_NONE            },       \/* Merei != Limbu *\/\n@@ -572,0 +828,1 @@\n+  {\"lmw\",       HB_TAG_NONE            },       \/* Lake Miwok != Lomwe *\/\n@@ -573,0 +830,2 @@\n+  {\"lna\",       HB_TAG('B','A','D','0')},       \/* Langbashe -> Banda *\/\n+  {\"lnl\",       HB_TAG('B','A','D','0')},       \/* South Central Banda -> Banda *\/\n@@ -575,0 +834,1 @@\n+  {\"lou\",       HB_TAG('C','P','P',' ')},       \/* Louisiana Creole -> Creoles *\/\n@@ -578,0 +838,2 @@\n+  {\"lrt\",       HB_TAG('C','P','P',' ')},       \/* Larantuka Malay -> Creoles *\/\n+  {\"lsb\",       HB_TAG_NONE            },       \/* Burundian Sign Language != Lower Sorbian *\/\n@@ -581,0 +843,1 @@\n+  {\"lth\",       HB_TAG_NONE            },       \/* Thur != Lithuanian *\/\n@@ -587,0 +850,1 @@\n+  {\"lus\",       HB_TAG('Q','I','N',' ')},       \/* Lushai -> Chin *\/\n@@ -590,0 +854,1 @@\n+  {\"lvi\",       HB_TAG_NONE            },       \/* Lavi != Latvian *\/\n@@ -592,1 +857,1 @@\n-  {\"lzh\",       HB_TAG('Z','H','T',' ')},       \/* Literary Chinese -> Chinese Traditional *\/\n+  {\"lzh\",       HB_TAG('Z','H','T',' ')},       \/* Literary Chinese -> Chinese, Traditional *\/\n@@ -597,0 +862,1 @@\n+  {\"maj\",       HB_TAG_NONE            },       \/* Jalapa De Díaz Mazatec != Majang *\/\n@@ -598,1 +864,2 @@\n-\/*{\"mam\",       HB_TAG('M','A','M',' ')},*\/     \/* Mam *\/\n+  {\"mam\",       HB_TAG('M','A','M',' ')},       \/* Mam *\/\n+  {\"mam\",       HB_TAG('M','Y','N',' ')},       \/* Mam -> Mayan *\/\n@@ -600,0 +867,2 @@\n+  {\"map\",       HB_TAG_NONE            },       \/* Austronesian [family] != Mapudungun *\/\n+  {\"maw\",       HB_TAG_NONE            },       \/* Mampruli != Marwari *\/\n@@ -601,0 +870,3 @@\n+  {\"max\",       HB_TAG('C','P','P',' ')},       \/* North Moluccan Malay -> Creoles *\/\n+  {\"mbf\",       HB_TAG('C','P','P',' ')},       \/* Baba Malay -> Creoles *\/\n+  {\"mbn\",       HB_TAG_NONE            },       \/* Macaguán != Mbundu *\/\n@@ -602,0 +874,3 @@\n+  {\"mch\",       HB_TAG_NONE            },       \/* Maquiritari != Manchu *\/\n+  {\"mcm\",       HB_TAG('C','P','P',' ')},       \/* Malaccan Creole Portuguese -> Creoles *\/\n+  {\"mcr\",       HB_TAG_NONE            },       \/* Menya != Moose Cree *\/\n@@ -603,0 +878,1 @@\n+  {\"mde\",       HB_TAG_NONE            },       \/* Maba (Chad) != Mende *\/\n@@ -609,1 +885,2 @@\n-\/*{\"mfa\",       HB_TAG('M','F','A',' ')},*\/     \/* Pattani Malay *\/\n+  {\"mfa\",       HB_TAG('M','F','A',' ')},       \/* Pattani Malay *\/\n+  {\"mfa\",       HB_TAG('M','L','Y',' ')},       \/* Pattani Malay -> Malay *\/\n@@ -611,1 +888,3 @@\n-\/*{\"mfe\",       HB_TAG('M','F','E',' ')},*\/     \/* Morisyen *\/\n+  {\"mfe\",       HB_TAG('M','F','E',' ')},       \/* Morisyen *\/\n+  {\"mfe\",       HB_TAG('C','P','P',' ')},       \/* Morisyen -> Creoles *\/\n+  {\"mfp\",       HB_TAG('C','P','P',' ')},       \/* Makassar Malay -> Creoles *\/\n@@ -614,0 +893,1 @@\n+  {\"mhc\",       HB_TAG('M','Y','N',' ')},       \/* Mocho -> Mayan *\/\n@@ -617,1 +897,3 @@\n-\/*{\"min\",       HB_TAG('M','I','N',' ')},*\/     \/* Minangkabau *\/\n+  {\"min\",       HB_TAG('M','I','N',' ')},       \/* Minangkabau *\/\n+  {\"min\",       HB_TAG('M','L','Y',' ')},       \/* Minangkabau -> Malay *\/\n+  {\"miz\",       HB_TAG_NONE            },       \/* Coatzospan Mixtec != Mizo *\/\n@@ -619,0 +901,2 @@\n+  {\"mkn\",       HB_TAG('C','P','P',' ')},       \/* Kupang Malay -> Creoles *\/\n+  {\"mkr\",       HB_TAG_NONE            },       \/* Malas != Makasar *\/\n@@ -623,0 +907,2 @@\n+  {\"mle\",       HB_TAG_NONE            },       \/* Manambu != Male *\/\n+  {\"mln\",       HB_TAG_NONE            },       \/* Malango != Malinke *\/\n@@ -625,0 +911,1 @@\n+  {\"mlr\",       HB_TAG_NONE            },       \/* Vame != Malayalam Reformed *\/\n@@ -628,0 +915,3 @@\n+  {\"mnd\",       HB_TAG_NONE            },       \/* Mondé != Mandinka *\/\n+  {\"mng\",       HB_TAG_NONE            },       \/* Eastern Mnong != Mongolian *\/\n+  {\"mnh\",       HB_TAG('B','A','D','0')},       \/* Mono (Democratic Republic of Congo) -> Banda *\/\n@@ -631,1 +921,1 @@\n-  {\"mnp\",       HB_TAG('Z','H','S',' ')},       \/* Min Bei Chinese -> Chinese Simplified *\/\n+  {\"mnp\",       HB_TAG('Z','H','S',' ')},       \/* Min Bei Chinese -> Chinese, Simplified *\/\n@@ -634,0 +924,1 @@\n+  {\"mnx\",       HB_TAG_NONE            },       \/* Manikion != Manx *\/\n@@ -635,0 +926,1 @@\n+  {\"mod\",       HB_TAG('C','P','P',' ')},       \/* Mobilian -> Creoles *\/\n@@ -636,0 +928,3 @@\n+  {\"mok\",       HB_TAG_NONE            },       \/* Morori != Moksha *\/\n+  {\"mop\",       HB_TAG('M','Y','N',' ')},       \/* Mopán Maya -> Mayan *\/\n+  {\"mor\",       HB_TAG_NONE            },       \/* Moro != Moroccan *\/\n@@ -646,0 +941,1 @@\n+  {\"msi\",       HB_TAG('C','P','P',' ')},       \/* Sabah Malay -> Creoles *\/\n@@ -647,0 +943,1 @@\n+  {\"mth\",       HB_TAG_NONE            },       \/* Munggui != Maithili *\/\n@@ -648,0 +945,2 @@\n+  {\"mts\",       HB_TAG_NONE            },       \/* Yora != Maltese *\/\n+  {\"mud\",       HB_TAG('C','P','P',' ')},       \/* Mednyj Aleut -> Creoles *\/\n@@ -649,0 +948,1 @@\n+  {\"mun\",       HB_TAG_NONE            },       \/* Munda [family] != Mundari *\/\n@@ -657,0 +957,1 @@\n+  {\"mwq\",       HB_TAG('Q','I','N',' ')},       \/* Mün Chin -> Chin *\/\n@@ -658,1 +959,2 @@\n-\/*{\"mww\",       HB_TAG('M','W','W',' ')},*\/     \/* Hmong Daw *\/\n+  {\"mww\",       HB_TAG('M','W','W',' ')},       \/* Hmong Daw *\/\n+  {\"mww\",       HB_TAG('H','M','N',' ')},       \/* Hmong Daw -> Hmong *\/\n@@ -664,0 +966,1 @@\n+  {\"mzb\",       HB_TAG('B','B','R',' ')},       \/* Tumzabt -> Berber *\/\n@@ -665,0 +968,1 @@\n+  {\"mzs\",       HB_TAG('C','P','P',' ')},       \/* Macanese -> Creoles *\/\n@@ -666,1 +970,2 @@\n-\/*{\"nag\",       HB_TAG('N','A','G',' ')},*\/     \/* Naga Pidgin -> Naga-Assamese *\/\n+  {\"nag\",       HB_TAG('N','A','G',' ')},       \/* Naga Pidgin -> Naga-Assamese *\/\n+  {\"nag\",       HB_TAG('C','P','P',' ')},       \/* Naga Pidgin -> Creoles *\/\n@@ -668,1 +973,1 @@\n-  {\"nan\",       HB_TAG('Z','H','S',' ')},       \/* Min Nan Chinese -> Chinese Simplified *\/\n+  {\"nan\",       HB_TAG('Z','H','S',' ')},       \/* Min Nan Chinese -> Chinese, Simplified *\/\n@@ -670,0 +975,2 @@\n+  {\"nas\",       HB_TAG_NONE            },       \/* Naasioi != Naskapi *\/\n+  {\"naz\",       HB_TAG('N','A','H',' ')},       \/* Coatepec Nahuatl -> Nahuatl *\/\n@@ -671,0 +978,6 @@\n+  {\"nch\",       HB_TAG('N','A','H',' ')},       \/* Central Huasteca Nahuatl -> Nahuatl *\/\n+  {\"nci\",       HB_TAG('N','A','H',' ')},       \/* Classical Nahuatl -> Nahuatl *\/\n+  {\"ncj\",       HB_TAG('N','A','H',' ')},       \/* Northern Puebla Nahuatl -> Nahuatl *\/\n+  {\"ncl\",       HB_TAG('N','A','H',' ')},       \/* Michoacán Nahuatl -> Nahuatl *\/\n+  {\"ncr\",       HB_TAG_NONE            },       \/* Ncane != N-Cree *\/\n+  {\"ncx\",       HB_TAG('N','A','H',' ')},       \/* Central Puebla Nahuatl -> Nahuatl *\/\n@@ -672,0 +985,1 @@\n+  {\"ndb\",       HB_TAG_NONE            },       \/* Kenswei Nsei != Ndebele *\/\n@@ -673,0 +987,1 @@\n+  {\"ndg\",       HB_TAG_NONE            },       \/* Ndengereko != Ndonga *\/\n@@ -675,0 +990,1 @@\n+  {\"nef\",       HB_TAG('C','P','P',' ')},       \/* Nefamese -> Creoles *\/\n@@ -679,1 +995,5 @@\n-  {\"ngo\",       HB_TAG('S','X','T',' ')},       \/* Ngoni -> Sutu *\/\n+  {\"ngm\",       HB_TAG('C','P','P',' ')},       \/* Ngatik Men's Creole -> Creoles *\/\n+  {\"ngo\",       HB_TAG('S','X','T',' ')},       \/* Ngoni (retired code) -> Sutu *\/\n+  {\"ngr\",       HB_TAG_NONE            },       \/* Engdewu != Nagari *\/\n+  {\"ngu\",       HB_TAG('N','A','H',' ')},       \/* Guerrero Nahuatl -> Nahuatl *\/\n+  {\"nhc\",       HB_TAG('N','A','H',' ')},       \/* Tabasco Nahuatl -> Nahuatl *\/\n@@ -681,0 +1001,14 @@\n+  {\"nhe\",       HB_TAG('N','A','H',' ')},       \/* Eastern Huasteca Nahuatl -> Nahuatl *\/\n+  {\"nhg\",       HB_TAG('N','A','H',' ')},       \/* Tetelcingo Nahuatl -> Nahuatl *\/\n+  {\"nhi\",       HB_TAG('N','A','H',' ')},       \/* Zacatlán-Ahuacatlán-Tepetzintla Nahuatl -> Nahuatl *\/\n+  {\"nhk\",       HB_TAG('N','A','H',' ')},       \/* Isthmus-Cosoleacaque Nahuatl -> Nahuatl *\/\n+  {\"nhm\",       HB_TAG('N','A','H',' ')},       \/* Morelos Nahuatl -> Nahuatl *\/\n+  {\"nhn\",       HB_TAG('N','A','H',' ')},       \/* Central Nahuatl -> Nahuatl *\/\n+  {\"nhp\",       HB_TAG('N','A','H',' ')},       \/* Isthmus-Pajapan Nahuatl -> Nahuatl *\/\n+  {\"nhq\",       HB_TAG('N','A','H',' ')},       \/* Huaxcaleca Nahuatl -> Nahuatl *\/\n+  {\"nht\",       HB_TAG('N','A','H',' ')},       \/* Ometepec Nahuatl -> Nahuatl *\/\n+  {\"nhv\",       HB_TAG('N','A','H',' ')},       \/* Temascaltepec Nahuatl -> Nahuatl *\/\n+  {\"nhw\",       HB_TAG('N','A','H',' ')},       \/* Western Huasteca Nahuatl -> Nahuatl *\/\n+  {\"nhx\",       HB_TAG('N','A','H',' ')},       \/* Isthmus-Mecayapan Nahuatl -> Nahuatl *\/\n+  {\"nhy\",       HB_TAG('N','A','H',' ')},       \/* Northern Oaxaca Nahuatl -> Nahuatl *\/\n+  {\"nhz\",       HB_TAG('N','A','H',' ')},       \/* Santa María La Alta Nahuatl -> Nahuatl *\/\n@@ -682,0 +1016,1 @@\n+  {\"nis\",       HB_TAG_NONE            },       \/* Nimi != Nisi *\/\n@@ -684,0 +1019,1 @@\n+  {\"njt\",       HB_TAG('C','P','P',' ')},       \/* Ndyuka-Trio Pidgin -> Creoles *\/\n@@ -685,0 +1021,2 @@\n+  {\"nko\",       HB_TAG_NONE            },       \/* Nkonya != N’Ko *\/\n+  {\"nkx\",       HB_TAG('I','J','O',' ')},       \/* Nkoroo -> Ijo *\/\n@@ -686,0 +1024,1 @@\n+  {\"nla\",       HB_TAG('B','M','L',' ')},       \/* Ngombale -> Bamileke *\/\n@@ -687,0 +1026,2 @@\n+  {\"nln\",       HB_TAG('N','A','H',' ')},       \/* Durango Nahuatl (retired code) -> Nahuatl *\/\n+  {\"nlv\",       HB_TAG('N','A','H',' ')},       \/* Orizaba Nahuatl -> Nahuatl *\/\n@@ -688,0 +1029,3 @@\n+  {\"nn\",        HB_TAG('N','O','R',' ')},       \/* Norwegian Nynorsk -> Norwegian *\/\n+  {\"nnh\",       HB_TAG('B','M','L',' ')},       \/* Ngiemboon -> Bamileke *\/\n+  {\"nnz\",       HB_TAG('B','M','L',' ')},       \/* Nda'nda' -> Bamileke *\/\n@@ -694,0 +1038,1 @@\n+  {\"npl\",       HB_TAG('N','A','H',' ')},       \/* Southeastern Puebla Nahuatl -> Nahuatl *\/\n@@ -697,1 +1042,7 @@\n-\/*{\"nso\",       HB_TAG('N','S','O',' ')},*\/     \/* Pedi -> Sotho, Northern *\/\n+  {\"nsm\",       HB_TAG_NONE            },       \/* Sumi Naga != Northern Sami *\/\n+\/*{\"nso\",       HB_TAG('N','S','O',' ')},*\/     \/* Northern Sotho *\/\n+  {\"nsu\",       HB_TAG('N','A','H',' ')},       \/* Sierra Negra Nahuatl -> Nahuatl *\/\n+  {\"nto\",       HB_TAG_NONE            },       \/* Ntomba != Esperanto *\/\n+  {\"nue\",       HB_TAG('B','A','D','0')},       \/* Ngundu -> Banda *\/\n+  {\"nuu\",       HB_TAG('B','A','D','0')},       \/* Ngbundu -> Banda *\/\n+  {\"nuz\",       HB_TAG('N','A','H',' ')},       \/* Tlamacazapa Nahuatl -> Nahuatl *\/\n@@ -700,0 +1051,1 @@\n+  {\"nwe\",       HB_TAG('B','M','L',' ')},       \/* Ngwe -> Bamileke *\/\n@@ -711,0 +1063,1 @@\n+  {\"ojs\",       HB_TAG('O','J','B',' ')},       \/* Severn Ojibwa -> Ojibway *\/\n@@ -712,0 +1065,1 @@\n+  {\"okd\",       HB_TAG('I','J','O',' ')},       \/* Okodia -> Ijo *\/\n@@ -714,0 +1068,1 @@\n+  {\"okr\",       HB_TAG('I','J','O',' ')},       \/* Kirike -> Ijo *\/\n@@ -715,0 +1070,2 @@\n+  {\"onx\",       HB_TAG('C','P','P',' ')},       \/* Onin Based Pidgin -> Creoles *\/\n+  {\"oor\",       HB_TAG('C','P','P',' ')},       \/* Oorlams -> Creoles *\/\n@@ -718,0 +1075,2 @@\n+  {\"oro\",       HB_TAG_NONE            },       \/* Orokolo != Oromo *\/\n+  {\"orr\",       HB_TAG('I','J','O',' ')},       \/* Oruma -> Ijo *\/\n@@ -722,0 +1081,1 @@\n+  {\"oua\",       HB_TAG('B','B','R',' ')},       \/* Tagargrent -> Berber *\/\n@@ -723,0 +1083,1 @@\n+  {\"paa\",       HB_TAG_NONE            },       \/* Papuan [family] != Palestinian Aramaic *\/\n@@ -724,0 +1085,1 @@\n+  {\"pal\",       HB_TAG_NONE            },       \/* Pahlavi != Pali *\/\n@@ -726,0 +1088,2 @@\n+  {\"pap\",       HB_TAG('C','P','P',' ')},       \/* Papiamento -> Creoles *\/\n+  {\"pas\",       HB_TAG_NONE            },       \/* Papasena != Pashto *\/\n@@ -733,0 +1097,1 @@\n+  {\"pcm\",       HB_TAG('C','P','P',' ')},       \/* Nigerian Pidgin -> Creoles *\/\n@@ -734,0 +1099,2 @@\n+  {\"pdu\",       HB_TAG('K','R','N',' ')},       \/* Kayan -> Karen *\/\n+  {\"pea\",       HB_TAG('C','P','P',' ')},       \/* Peranakan Indonesian -> Creoles *\/\n@@ -736,0 +1103,1 @@\n+  {\"pey\",       HB_TAG('C','P','P',' ')},       \/* Petjo -> Creoles *\/\n@@ -737,0 +1105,1 @@\n+  {\"pga\",       HB_TAG('C','P','P',' ')},       \/* Sudanese Creole Arabic -> Creoles *\/\n@@ -739,1 +1108,5 @@\n-\/*{\"pih\",       HB_TAG('P','I','H',' ')},*\/     \/* Pitcairn-Norfolk -> Norfolk *\/\n+  {\"pih\",       HB_TAG('P','I','H',' ')},       \/* Pitcairn-Norfolk -> Norfolk *\/\n+  {\"pih\",       HB_TAG('C','P','P',' ')},       \/* Pitcairn-Norfolk -> Creoles *\/\n+  {\"pil\",       HB_TAG_NONE            },       \/* Yom != Filipino *\/\n+  {\"pis\",       HB_TAG('C','P','P',' ')},       \/* Pijin -> Creoles *\/\n+  {\"pkh\",       HB_TAG('Q','I','N',' ')},       \/* Pankhu -> Chin *\/\n@@ -742,0 +1115,2 @@\n+  {\"plg\",       HB_TAG_NONE            },       \/* Pilagá != Palaung *\/\n+  {\"plk\",       HB_TAG_NONE            },       \/* Kohistani Shina != Polish *\/\n@@ -743,0 +1118,1 @@\n+  {\"pln\",       HB_TAG('C','P','P',' ')},       \/* Palenquero -> Creoles *\/\n@@ -745,0 +1121,1 @@\n+  {\"pml\",       HB_TAG('C','P','P',' ')},       \/* Lingua Franca -> Creoles *\/\n@@ -746,0 +1123,1 @@\n+  {\"pmy\",       HB_TAG('C','P','P',' ')},       \/* Papuan Malay -> Creoles *\/\n@@ -747,1 +1125,3 @@\n-\/*{\"poh\",       HB_TAG('P','O','H',' ')},*\/     \/* Poqomchi' -> Pocomchi *\/\n+  {\"poc\",       HB_TAG('M','Y','N',' ')},       \/* Poqomam -> Mayan *\/\n+  {\"poh\",       HB_TAG('P','O','H',' ')},       \/* Poqomchi' -> Pocomchi *\/\n+  {\"poh\",       HB_TAG('M','Y','N',' ')},       \/* Poqomchi' -> Mayan *\/\n@@ -749,0 +1129,1 @@\n+  {\"pov\",       HB_TAG('C','P','P',' ')},       \/* Upper Guinea Crioulo -> Creoles *\/\n@@ -750,0 +1131,1 @@\n+  {\"pre\",       HB_TAG('C','P','P',' ')},       \/* Principense -> Creoles *\/\n@@ -752,0 +1134,1 @@\n+  {\"prs\",       HB_TAG('F','A','R',' ')},       \/* Dari -> Persian *\/\n@@ -756,1 +1139,5 @@\n-\/*{\"pwo\",       HB_TAG('P','W','O',' ')},*\/     \/* Pwo Western Karen -> Western Pwo Karen *\/\n+  {\"pub\",       HB_TAG('Q','I','N',' ')},       \/* Purum -> Chin *\/\n+  {\"puz\",       HB_TAG('Q','I','N',' ')},       \/* Purum Naga (retired code) -> Chin *\/\n+  {\"pwo\",       HB_TAG('P','W','O',' ')},       \/* Pwo Western Karen -> Western Pwo Karen *\/\n+  {\"pwo\",       HB_TAG('K','R','N',' ')},       \/* Pwo Western Karen -> Karen *\/\n+  {\"pww\",       HB_TAG('K','R','N',' ')},       \/* Pwo Northern Karen -> Karen *\/\n@@ -759,1 +1146,3 @@\n-\/*{\"quc\",       HB_TAG('Q','U','C',' ')},*\/     \/* K’iche’ *\/\n+  {\"qub\",       HB_TAG('Q','U','Z',' ')},       \/* Huallaga Huánuco Quechua -> Quechua *\/\n+  {\"quc\",       HB_TAG('Q','U','C',' ')},       \/* K’iche’ *\/\n+  {\"quc\",       HB_TAG('M','Y','N',' ')},       \/* K'iche' -> Mayan *\/\n@@ -761,0 +1150,1 @@\n+  {\"qud\",       HB_TAG('Q','U','Z',' ')},       \/* Calderón Highland Quichua -> Quechua *\/\n@@ -763,1 +1153,3 @@\n-\/*{\"quh\",       HB_TAG('Q','U','H',' ')},*\/     \/* South Bolivian Quechua -> Quechua (Bolivia) *\/\n+  {\"qug\",       HB_TAG('Q','U','Z',' ')},       \/* Chimborazo Highland Quichua -> Quechua *\/\n+  {\"quh\",       HB_TAG('Q','U','H',' ')},       \/* South Bolivian Quechua -> Quechua (Bolivia) *\/\n+  {\"quh\",       HB_TAG('Q','U','Z',' ')},       \/* South Bolivian Quechua -> Quechua *\/\n@@ -765,0 +1157,1 @@\n+  {\"qul\",       HB_TAG('Q','U','H',' ')},       \/* North Bolivian Quechua -> Quechua (Bolivia) *\/\n@@ -766,0 +1159,1 @@\n+  {\"qum\",       HB_TAG('M','Y','N',' ')},       \/* Sipacapense -> Mayan *\/\n@@ -767,0 +1161,1 @@\n+  {\"qup\",       HB_TAG('Q','U','Z',' ')},       \/* Southern Pastaza Quechua -> Quechua *\/\n@@ -768,0 +1163,1 @@\n+  {\"qur\",       HB_TAG('Q','U','Z',' ')},       \/* Yanahuanca Pasco Quechua -> Quechua *\/\n@@ -769,0 +1165,2 @@\n+  {\"qus\",       HB_TAG('Q','U','Z',' ')},       \/* Santiago del Estero Quichua -> Quechua *\/\n+  {\"quv\",       HB_TAG('M','Y','N',' ')},       \/* Sacapulteco -> Mayan *\/\n@@ -770,0 +1168,1 @@\n+  {\"quw\",       HB_TAG('Q','U','Z',' ')},       \/* Tena Lowland Quichua -> Quechua *\/\n@@ -771,0 +1170,1 @@\n+  {\"qux\",       HB_TAG('Q','U','Z',' ')},       \/* Yauyos Quechua -> Quechua *\/\n@@ -774,0 +1174,1 @@\n+  {\"qva\",       HB_TAG('Q','U','Z',' ')},       \/* Ambo-Pasco Quechua -> Quechua *\/\n@@ -777,1 +1178,3 @@\n-\/*{\"qvi\",       HB_TAG('Q','V','I',' ')},*\/     \/* Imbabura Highland Quichua -> Quechua (Ecuador) *\/\n+  {\"qvh\",       HB_TAG('Q','U','Z',' ')},       \/* Huamalíes-Dos de Mayo Huánuco Quechua -> Quechua *\/\n+  {\"qvi\",       HB_TAG('Q','V','I',' ')},       \/* Imbabura Highland Quichua -> Quechua (Ecuador) *\/\n+  {\"qvi\",       HB_TAG('Q','U','Z',' ')},       \/* Imbabura Highland Quichua -> Quechua *\/\n@@ -779,0 +1182,1 @@\n+  {\"qvj\",       HB_TAG('Q','U','Z',' ')},       \/* Loja Highland Quichua -> Quechua *\/\n@@ -780,0 +1184,1 @@\n+  {\"qvl\",       HB_TAG('Q','U','Z',' ')},       \/* Cajatambo North Lima Quechua -> Quechua *\/\n@@ -781,0 +1186,1 @@\n+  {\"qvm\",       HB_TAG('Q','U','Z',' ')},       \/* Margos-Yarowilca-Lauricocha Quechua -> Quechua *\/\n@@ -782,0 +1188,1 @@\n+  {\"qvn\",       HB_TAG('Q','U','Z',' ')},       \/* North Junín Quechua -> Quechua *\/\n@@ -783,0 +1190,1 @@\n+  {\"qvo\",       HB_TAG('Q','U','Z',' ')},       \/* Napo Lowland Quechua -> Quechua *\/\n@@ -784,0 +1192,1 @@\n+  {\"qvp\",       HB_TAG('Q','U','Z',' ')},       \/* Pacaraos Quechua -> Quechua *\/\n@@ -786,0 +1195,1 @@\n+  {\"qvw\",       HB_TAG('Q','U','Z',' ')},       \/* Huaylla Wanca Quechua -> Quechua *\/\n@@ -787,0 +1197,1 @@\n+  {\"qvz\",       HB_TAG('Q','U','Z',' ')},       \/* Northern Pastaza Quichua -> Quechua *\/\n@@ -788,0 +1199,1 @@\n+  {\"qwa\",       HB_TAG('Q','U','Z',' ')},       \/* Corongo Ancash Quechua -> Quechua *\/\n@@ -789,1 +1201,2 @@\n-\/*{\"qwh\",       HB_TAG('Q','W','H',' ')},*\/     \/* Huaylas Ancash Quechua -> Quechua (Peru) *\/\n+  {\"qwh\",       HB_TAG('Q','W','H',' ')},       \/* Huaylas Ancash Quechua -> Quechua (Peru) *\/\n+  {\"qwh\",       HB_TAG('Q','U','Z',' ')},       \/* Huaylas Ancash Quechua -> Quechua *\/\n@@ -791,0 +1204,2 @@\n+  {\"qws\",       HB_TAG('Q','U','Z',' ')},       \/* Sihuas Ancash Quechua -> Quechua *\/\n+  {\"qwt\",       HB_TAG('A','T','H',' ')},       \/* Kwalhioqua-Tlatskanai -> Athapaskan *\/\n@@ -792,0 +1207,1 @@\n+  {\"qxa\",       HB_TAG('Q','U','Z',' ')},       \/* Chiquián Ancash Quechua -> Quechua *\/\n@@ -793,0 +1209,1 @@\n+  {\"qxc\",       HB_TAG('Q','U','Z',' ')},       \/* Chincha Quechua -> Quechua *\/\n@@ -794,0 +1211,1 @@\n+  {\"qxh\",       HB_TAG('Q','U','Z',' ')},       \/* Panao Huánuco Quechua -> Quechua *\/\n@@ -795,0 +1213,1 @@\n+  {\"qxl\",       HB_TAG('Q','U','Z',' ')},       \/* Salasaca Highland Quichua -> Quechua *\/\n@@ -796,0 +1215,1 @@\n+  {\"qxn\",       HB_TAG('Q','U','Z',' ')},       \/* Northern Conchucos Ancash Quechua -> Quechua *\/\n@@ -797,0 +1217,1 @@\n+  {\"qxo\",       HB_TAG('Q','U','Z',' ')},       \/* Southern Conchucos Ancash Quechua -> Quechua *\/\n@@ -799,0 +1220,1 @@\n+  {\"qxr\",       HB_TAG('Q','U','Z',' ')},       \/* Cañar Highland Quichua -> Quechua *\/\n@@ -800,0 +1222,1 @@\n+  {\"qxt\",       HB_TAG('Q','U','Z',' ')},       \/* Santa Ana de Tusi Pasco Quechua -> Quechua *\/\n@@ -802,0 +1225,1 @@\n+  {\"qxw\",       HB_TAG('Q','U','Z',' ')},       \/* Jauja Wanca Quechua -> Quechua *\/\n@@ -804,0 +1228,1 @@\n+  {\"ral\",       HB_TAG('Q','I','N',' ')},       \/* Ralte -> Chin *\/\n@@ -807,0 +1232,1 @@\n+  {\"rcf\",       HB_TAG('C','P','P',' ')},       \/* Réunion Creole French -> Creoles *\/\n@@ -809,1 +1235,2 @@\n-\/*{\"rif\",       HB_TAG('R','I','F',' ')},*\/     \/* Tarifit *\/\n+  {\"rif\",       HB_TAG('R','I','F',' ')},       \/* Tarifit *\/\n+  {\"rif\",       HB_TAG('B','B','R',' ')},       \/* Tarifit -> Berber *\/\n@@ -819,0 +1246,1 @@\n+  {\"rms\",       HB_TAG_NONE            },       \/* Romanian Sign Language != Romansh *\/\n@@ -820,1 +1248,2 @@\n-\/*{\"rmy\",       HB_TAG('R','M','Y',' ')},*\/     \/* Vlax Romani *\/\n+  {\"rmy\",       HB_TAG('R','M','Y',' ')},       \/* Vlax Romani *\/\n+  {\"rmy\",       HB_TAG('R','O','Y',' ')},       \/* Vlax Romani -> Romany *\/\n@@ -823,1 +1252,0 @@\n-  {\"rnl\",       HB_TAG('H','A','L',' ')},       \/* Ranglong -> Halam (Falam Chin) *\/\n@@ -826,0 +1254,2 @@\n+  {\"rop\",       HB_TAG('C','P','P',' ')},       \/* Kriol -> Creoles *\/\n+  {\"rtc\",       HB_TAG('Q','I','N',' ')},       \/* Rungtu Chin -> Chin *\/\n@@ -833,0 +1263,1 @@\n+  {\"sad\",       HB_TAG_NONE            },       \/* Sandawe != Sadri *\/\n@@ -837,0 +1268,1 @@\n+  {\"say\",       HB_TAG_NONE            },       \/* Saya != Sayisi *\/\n@@ -838,0 +1270,3 @@\n+  {\"scf\",       HB_TAG('C','P','P',' ')},       \/* San Miguel Creole French -> Creoles *\/\n+  {\"sch\",       HB_TAG('Q','I','N',' ')},       \/* Sakachep -> Chin *\/\n+  {\"sci\",       HB_TAG('C','P','P',' ')},       \/* Sri Lankan Creole Malay -> Creoles *\/\n@@ -848,0 +1283,1 @@\n+  {\"sds\",       HB_TAG('B','B','R',' ')},       \/* Sened -> Berber *\/\n@@ -857,0 +1293,1 @@\n+  {\"sgo\",       HB_TAG_NONE            },       \/* Songa (retired code) != Sango *\/\n@@ -859,2 +1296,3 @@\n-  {\"sgw\",       HB_TAG('S','G','W',' ')},       \/* Sebat Bet Gurage -> Chaha Gurage (SIL fonts) *\/\n-\/*{\"shi\",       HB_TAG('S','H','I',' ')},*\/     \/* Tachelhit *\/\n+  {\"shi\",       HB_TAG('S','H','I',' ')},       \/* Tachelhit *\/\n+  {\"shi\",       HB_TAG('B','B','R',' ')},       \/* Tachelhit -> Berber *\/\n+  {\"shl\",       HB_TAG('Q','I','N',' ')},       \/* Shendu -> Chin *\/\n@@ -863,0 +1301,1 @@\n+  {\"shy\",       HB_TAG('B','B','R',' ')},       \/* Tachawit -> Berber *\/\n@@ -864,0 +1303,1 @@\n+  {\"sib\",       HB_TAG_NONE            },       \/* Sebop != Sibe *\/\n@@ -865,0 +1305,2 @@\n+  {\"sig\",       HB_TAG_NONE            },       \/* Paasaal != Silte Gurage *\/\n+  {\"siz\",       HB_TAG('B','B','R',' ')},       \/* Siwi -> Berber *\/\n@@ -867,0 +1309,1 @@\n+  {\"sjs\",       HB_TAG('B','B','R',' ')},       \/* Senhaja De Srair -> Berber *\/\n@@ -870,0 +1313,3 @@\n+  {\"sks\",       HB_TAG_NONE            },       \/* Maia != Skolt Sami *\/\n+  {\"skw\",       HB_TAG('C','P','P',' ')},       \/* Skepi Creole Dutch -> Creoles *\/\n+  {\"sky\",       HB_TAG_NONE            },       \/* Sikaiana != Slovak *\/\n@@ -871,0 +1317,1 @@\n+  {\"sla\",       HB_TAG_NONE            },       \/* Slavic [family] != Slavey *\/\n@@ -874,0 +1321,1 @@\n+  {\"sml\",       HB_TAG_NONE            },       \/* Central Sama != Somali *\/\n@@ -876,0 +1324,1 @@\n+  {\"smt\",       HB_TAG('Q','I','N',' ')},       \/* Simte -> Chin *\/\n@@ -877,0 +1326,1 @@\n+  {\"snh\",       HB_TAG_NONE            },       \/* Shinabo (retired code) != Sinhala (Sinhalese) *\/\n@@ -879,0 +1329,1 @@\n+  {\"sog\",       HB_TAG_NONE            },       \/* Sogdian != Sodo Gurage *\/\n@@ -884,0 +1335,1 @@\n+  {\"srb\",       HB_TAG_NONE            },       \/* Sora != Serbian *\/\n@@ -885,0 +1337,3 @@\n+  {\"srk\",       HB_TAG_NONE            },       \/* Serudung Murut != Saraiki *\/\n+  {\"srm\",       HB_TAG('C','P','P',' ')},       \/* Saramaccan -> Creoles *\/\n+  {\"srn\",       HB_TAG('C','P','P',' ')},       \/* Sranan Tongo -> Creoles *\/\n@@ -890,1 +1345,4 @@\n-  {\"st\",        HB_TAG('S','O','T',' ')},       \/* Southern Sotho -> Sotho, Southern *\/\n+  {\"ssl\",       HB_TAG_NONE            },       \/* Western Sisaala != South Slavey *\/\n+  {\"ssm\",       HB_TAG_NONE            },       \/* Semnam != Southern Sami *\/\n+  {\"st\",        HB_TAG('S','O','T',' ')},       \/* Southern Sotho *\/\n+  {\"sta\",       HB_TAG('C','P','P',' ')},       \/* Settla -> Creoles *\/\n@@ -896,0 +1354,1 @@\n+  {\"sur\",       HB_TAG_NONE            },       \/* Mwaghavul != Suri *\/\n@@ -898,0 +1357,2 @@\n+  {\"svc\",       HB_TAG('C','P','P',' ')},       \/* Vincentian Creole English -> Creoles *\/\n+  {\"sve\",       HB_TAG_NONE            },       \/* Serili != Swedish *\/\n@@ -902,0 +1363,2 @@\n+  {\"swk\",       HB_TAG_NONE            },       \/* Malawi Sena != Swahili *\/\n+  {\"swn\",       HB_TAG('B','B','R',' ')},       \/* Sawknah -> Berber *\/\n@@ -911,0 +1374,1 @@\n+  {\"taj\",       HB_TAG_NONE            },       \/* Eastern Tamang != Tajiki *\/\n@@ -912,0 +1376,2 @@\n+  {\"taq\",       HB_TAG('B','B','R',' ')},       \/* Tamasheq -> Berber *\/\n+  {\"tas\",       HB_TAG('C','P','P',' ')},       \/* Tay Boi -> Creoles *\/\n@@ -915,0 +1381,1 @@\n+  {\"tch\",       HB_TAG('C','P','P',' ')},       \/* Turks And Caicos Creole English -> Creoles *\/\n@@ -916,0 +1383,1 @@\n+  {\"tcs\",       HB_TAG('C','P','P',' ')},       \/* Torres Strait Creole -> Creoles *\/\n@@ -924,0 +1392,1 @@\n+  {\"tez\",       HB_TAG('B','B','R',' ')},       \/* Tetserret -> Berber *\/\n@@ -926,0 +1395,1 @@\n+  {\"tgh\",       HB_TAG('C','P','P',' ')},       \/* Tobagonian Creole English -> Creoles *\/\n@@ -927,0 +1397,2 @@\n+  {\"tgn\",       HB_TAG_NONE            },       \/* Tandaganon != Tongan *\/\n+  {\"tgr\",       HB_TAG_NONE            },       \/* Tareng != Tigre *\/\n@@ -928,0 +1400,1 @@\n+  {\"tgy\",       HB_TAG_NONE            },       \/* Togoyo != Tigrinya *\/\n@@ -931,0 +1404,1 @@\n+  {\"thv\",       HB_TAG('B','B','R',' ')},       \/* Tahaggart Tamahaq -> Berber *\/\n@@ -932,0 +1406,1 @@\n+  {\"thz\",       HB_TAG('B','B','R',' ')},       \/* Tayart Tamajeq -> Berber *\/\n@@ -933,0 +1408,1 @@\n+  {\"tia\",       HB_TAG('B','B','R',' ')},       \/* Tidikelt Tamazight -> Berber *\/\n@@ -935,0 +1411,1 @@\n+  {\"tjo\",       HB_TAG('B','B','R',' ')},       \/* Temacine Tamazight -> Berber *\/\n@@ -937,0 +1414,1 @@\n+  {\"tkm\",       HB_TAG_NONE            },       \/* Takelma != Turkmen *\/\n@@ -938,1 +1416,4 @@\n-\/*{\"tmh\",       HB_TAG('T','M','H',' ')},*\/     \/* Tamashek [macrolanguage] *\/\n+  {\"tmg\",       HB_TAG('C','P','P',' ')},       \/* Ternateño -> Creoles *\/\n+  {\"tmh\",       HB_TAG('T','M','H',' ')},       \/* Tamashek [macrolanguage] *\/\n+  {\"tmh\",       HB_TAG('B','B','R',' ')},       \/* Tamashek [macrolanguage] -> Berber *\/\n+  {\"tmn\",       HB_TAG_NONE            },       \/* Taman (Indonesia) != Temne *\/\n@@ -941,0 +1422,2 @@\n+  {\"tna\",       HB_TAG_NONE            },       \/* Tacana != Tswana *\/\n+  {\"tne\",       HB_TAG_NONE            },       \/* Tinoc Kallahan (retired code) != Tundra Enets *\/\n@@ -942,0 +1425,2 @@\n+  {\"tnf\",       HB_TAG('F','A','R',' ')},       \/* Tangshewi (retired code) -> Persian *\/\n+  {\"tng\",       HB_TAG_NONE            },       \/* Tobanga != Tonga *\/\n@@ -945,0 +1430,1 @@\n+  {\"toj\",       HB_TAG('M','Y','N',' ')},       \/* Tojolabal -> Mayan *\/\n@@ -946,1 +1432,3 @@\n-\/*{\"tpi\",       HB_TAG('T','P','I',' ')},*\/     \/* Tok Pisin *\/\n+  {\"tor\",       HB_TAG('B','A','D','0')},       \/* Togbo-Vara Banda -> Banda *\/\n+  {\"tpi\",       HB_TAG('T','P','I',' ')},       \/* Tok Pisin *\/\n+  {\"tpi\",       HB_TAG('C','P','P',' ')},       \/* Tok Pisin -> Creoles *\/\n@@ -948,0 +1436,2 @@\n+  {\"trf\",       HB_TAG('C','P','P',' ')},       \/* Trinidadian Creole English -> Creoles *\/\n+  {\"trk\",       HB_TAG_NONE            },       \/* Turkic [family] != Turkish *\/\n@@ -951,0 +1441,1 @@\n+  {\"tsg\",       HB_TAG_NONE            },       \/* Tausug != Tsonga *\/\n@@ -953,0 +1444,1 @@\n+  {\"ttc\",       HB_TAG('M','Y','N',' ')},       \/* Tektiteko -> Mayan *\/\n@@ -955,0 +1447,3 @@\n+  {\"ttq\",       HB_TAG('B','B','R',' ')},       \/* Tawallammat Tamajaq -> Berber *\/\n+  {\"tua\",       HB_TAG_NONE            },       \/* Wiarumus != Turoyo Aramaic *\/\n+  {\"tul\",       HB_TAG_NONE            },       \/* Tula != Tumbuka *\/\n@@ -957,0 +1452,1 @@\n+  {\"tuv\",       HB_TAG_NONE            },       \/* Turkana != Tuvin *\/\n@@ -959,0 +1455,1 @@\n+  {\"tvy\",       HB_TAG('C','P','P',' ')},       \/* Timor Pidgin -> Creoles *\/\n@@ -966,2 +1463,6 @@\n-\/*{\"tzm\",       HB_TAG('T','Z','M',' ')},*\/     \/* Central Atlas Tamazight -> Tamazight *\/\n-\/*{\"tzo\",       HB_TAG('T','Z','O',' ')},*\/     \/* Tzotzil *\/\n+  {\"tzh\",       HB_TAG('M','Y','N',' ')},       \/* Tzeltal -> Mayan *\/\n+  {\"tzj\",       HB_TAG('M','Y','N',' ')},       \/* Tz'utujil -> Mayan *\/\n+  {\"tzm\",       HB_TAG('T','Z','M',' ')},       \/* Central Atlas Tamazight -> Tamazight *\/\n+  {\"tzm\",       HB_TAG('B','B','R',' ')},       \/* Central Atlas Tamazight -> Berber *\/\n+  {\"tzo\",       HB_TAG('T','Z','O',' ')},       \/* Tzotzil *\/\n+  {\"tzo\",       HB_TAG('M','Y','N',' ')},       \/* Tzotzil -> Mayan *\/\n@@ -973,0 +1474,1 @@\n+  {\"uln\",       HB_TAG('C','P','P',' ')},       \/* Unserdeutsch -> Creoles *\/\n@@ -977,0 +1479,1 @@\n+  {\"usp\",       HB_TAG('M','Y','N',' ')},       \/* Uspanteco -> Mayan *\/\n@@ -980,0 +1483,1 @@\n+  {\"vap\",       HB_TAG('Q','I','N',' ')},       \/* Vaiphei -> Chin *\/\n@@ -983,0 +1487,2 @@\n+  {\"vic\",       HB_TAG('C','P','P',' ')},       \/* Virgin Islands Creole English -> Creoles *\/\n+  {\"vit\",       HB_TAG_NONE            },       \/* Viti != Vietnamese *\/\n@@ -984,0 +1490,1 @@\n+  {\"vkp\",       HB_TAG('C','P','P',' ')},       \/* Korlai Creole Portuguese -> Creoles *\/\n@@ -990,0 +1497,1 @@\n+  {\"wag\",       HB_TAG_NONE            },       \/* Wa'ema != Wagdi *\/\n@@ -993,0 +1501,4 @@\n+  {\"wbr\",       HB_TAG('R','A','J',' ')},       \/* Wagdi -> Rajasthani *\/\n+  {\"wea\",       HB_TAG('K','R','N',' ')},       \/* Wewaw -> Karen *\/\n+  {\"wes\",       HB_TAG('C','P','P',' ')},       \/* Cameroon Pidgin -> Creoles *\/\n+  {\"weu\",       HB_TAG('Q','I','N',' ')},       \/* Rawngtu Chin -> Chin *\/\n@@ -1001,1 +1513,1 @@\n-  {\"wuu\",       HB_TAG('Z','H','S',' ')},       \/* Wu Chinese -> Chinese Simplified *\/\n+  {\"wuu\",       HB_TAG('Z','H','S',' ')},       \/* Wu Chinese -> Chinese, Simplified *\/\n@@ -1005,0 +1517,1 @@\n+  {\"xbd\",       HB_TAG_NONE            },       \/* Bindal != Lü *\/\n@@ -1008,0 +1521,1 @@\n+  {\"xmg\",       HB_TAG('B','M','L',' ')},       \/* Mengaka -> Bamileke *\/\n@@ -1009,0 +1523,1 @@\n+  {\"xmm\",       HB_TAG('C','P','P',' ')},       \/* Manado Malay -> Creoles *\/\n@@ -1011,1 +1526,3 @@\n-  {\"xnr\",       HB_TAG('D','G','R',' ')},       \/* Kangri -> Dogri *\/\n+  {\"xnj\",       HB_TAG('S','X','T',' ')},       \/* Ngoni (Tanzania) -> Sutu *\/\n+  {\"xnq\",       HB_TAG('S','X','T',' ')},       \/* Ngoni (Mozambique) -> Sutu *\/\n+  {\"xnr\",       HB_TAG('D','G','R',' ')},       \/* Kangri -> Dogri (macrolanguage) *\/\n@@ -1013,1 +1530,2 @@\n-\/*{\"xpe\",       HB_TAG('X','P','E',' ')},*\/     \/* Liberia Kpelle -> Kpelle (Liberia) *\/\n+  {\"xpe\",       HB_TAG('X','P','E',' ')},       \/* Liberia Kpelle -> Kpelle (Liberia) *\/\n+  {\"xpe\",       HB_TAG('K','P','L',' ')},       \/* Liberia Kpelle -> Kpelle *\/\n@@ -1018,0 +1536,1 @@\n+  {\"xup\",       HB_TAG('A','T','H',' ')},       \/* Upper Umpqua -> Athapaskan *\/\n@@ -1019,0 +1538,2 @@\n+  {\"yaj\",       HB_TAG('B','A','D','0')},       \/* Banda-Yangere -> Banda *\/\n+  {\"yak\",       HB_TAG_NONE            },       \/* Yakama != Sakha *\/\n@@ -1021,0 +1542,2 @@\n+  {\"yba\",       HB_TAG_NONE            },       \/* Yala != Yoruba *\/\n+  {\"ybb\",       HB_TAG('B','M','L',' ')},       \/* Yemba -> Bamileke *\/\n@@ -1025,0 +1548,1 @@\n+  {\"yim\",       HB_TAG_NONE            },       \/* Yimchungru Naga != Yi Modern *\/\n@@ -1027,3 +1551,2 @@\n-  {\"yrk\",       HB_TAG('T','N','E',' ')},       \/* Nenets -> Tundra Nenets *\/\n-  {\"yrk\",       HB_TAG('F','N','E',' ')},       \/* Nenets -> Forest Nenets *\/\n-  {\"yue\",       HB_TAG('Z','H','H',' ')},       \/* Yue Chinese -> Chinese, Hong Kong SAR *\/\n+  {\"yua\",       HB_TAG('M','Y','N',' ')},       \/* Yucateco -> Mayan *\/\n+  {\"yue\",       HB_TAG('Z','H','H',' ')},       \/* Yue Chinese -> Chinese, Traditional, Hong Kong SAR *\/\n@@ -1035,0 +1558,1 @@\n+  {\"zen\",       HB_TAG('B','B','R',' ')},       \/* Zenaga -> Berber *\/\n@@ -1036,1 +1560,2 @@\n-\/*{\"zgh\",       HB_TAG('Z','G','H',' ')},*\/     \/* Standard Moroccan Tamazight *\/\n+  {\"zgh\",       HB_TAG('Z','G','H',' ')},       \/* Standard Moroccan Tamazight *\/\n+  {\"zgh\",       HB_TAG('B','B','R',' ')},       \/* Standard Moroccan Tamazight -> Berber *\/\n@@ -1039,1 +1564,1 @@\n-  {\"zh\",        HB_TAG('Z','H','S',' ')},       \/* Chinese [macrolanguage] -> Chinese Simplified *\/\n+  {\"zh\",        HB_TAG('Z','H','S',' ')},       \/* Chinese, Simplified [macrolanguage] *\/\n@@ -1047,0 +1572,2 @@\n+  {\"zmz\",       HB_TAG('B','A','D','0')},       \/* Mbandja -> Banda *\/\n+  {\"znd\",       HB_TAG_NONE            },       \/* Zande [family] != Zande *\/\n@@ -1057,0 +1584,1 @@\n+  {\"zyp\",       HB_TAG('Q','I','N',' ')},       \/* Zyphe Chin -> Chin *\/\n@@ -1095,0 +1623,7 @@\n+  if (subtag_matches (lang_str, limit, \"-arevmda\"))\n+  {\n+    \/* Armenian; Western Armenian (retired code) *\/\n+    tags[0] = HB_TAG('H','Y','E',' ');  \/* Armenian *\/\n+    *count = 1;\n+    return true;\n+  }\n@@ -1142,1 +1677,1 @@\n-      \/* Lojban *\/\n+      \/* Lojban (retired code) *\/\n@@ -1151,2 +1686,2 @@\n-      \/* Min Dong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Min Dong Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1158,3 +1693,9 @@\n-      \/* Min Dong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Min Dong Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1165,2 +1706,2 @@\n-      \/* Jinyu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Jinyu Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1172,3 +1713,9 @@\n-      \/* Jinyu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Jinyu Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1179,2 +1726,2 @@\n-      \/* Mandarin Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Mandarin Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1186,3 +1733,9 @@\n-      \/* Mandarin Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Mandarin Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1193,2 +1746,2 @@\n-      \/* Northern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Northern Ping Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1200,3 +1753,9 @@\n-      \/* Northern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Northern Ping Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1207,2 +1766,2 @@\n-      \/* Pu-Xian Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Pu-Xian Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1214,3 +1773,9 @@\n-      \/* Pu-Xian Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Pu-Xian Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1221,2 +1786,2 @@\n-      \/* Southern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Southern Ping Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1228,3 +1793,9 @@\n-      \/* Southern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Southern Ping Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1235,2 +1806,2 @@\n-      \/* Huizhou Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Huizhou Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1242,3 +1813,9 @@\n-      \/* Huizhou Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Huizhou Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1249,2 +1826,2 @@\n-      \/* Min Zhong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Min Zhong Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1256,3 +1833,9 @@\n-      \/* Min Zhong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Min Zhong Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1263,2 +1846,2 @@\n-      \/* Min Dong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Min Dong Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1270,2 +1853,2 @@\n-      \/* Min Dong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Min Dong Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1277,2 +1860,2 @@\n-      \/* Jinyu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Jinyu Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1284,2 +1867,2 @@\n-      \/* Jinyu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Jinyu Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1291,2 +1874,2 @@\n-      \/* Mandarin Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Mandarin Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1298,2 +1881,2 @@\n-      \/* Mandarin Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Mandarin Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1305,2 +1888,2 @@\n-      \/* Northern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Northern Ping Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1312,2 +1895,2 @@\n-      \/* Northern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Northern Ping Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1319,2 +1902,2 @@\n-      \/* Pu-Xian Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Pu-Xian Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1326,2 +1909,2 @@\n-      \/* Pu-Xian Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Pu-Xian Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1333,2 +1916,2 @@\n-      \/* Southern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Southern Ping Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1340,2 +1923,2 @@\n-      \/* Southern Ping Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Southern Ping Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1347,2 +1930,2 @@\n-      \/* Huizhou Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Huizhou Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1354,2 +1937,2 @@\n-      \/* Huizhou Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Huizhou Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1361,2 +1944,2 @@\n-      \/* Min Zhong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Min Zhong Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1368,2 +1951,2 @@\n-      \/* Min Zhong Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Min Zhong Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1377,1 +1960,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1385,2 +1968,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1393,1 +1982,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1401,1 +1990,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1409,2 +1998,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1417,1 +2012,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1425,1 +2020,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1433,2 +2028,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1441,1 +2042,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1449,1 +2050,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1457,2 +2058,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1465,1 +2072,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1473,1 +2080,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1481,2 +2088,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1489,1 +2102,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1497,1 +2110,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1505,2 +2118,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1513,1 +2132,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1521,1 +2140,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1529,2 +2148,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1537,1 +2162,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1545,1 +2170,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1553,2 +2178,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1561,1 +2192,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1569,2 +2200,2 @@\n-      \/* Gan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Gan Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1576,3 +2207,9 @@\n-      \/* Gan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Gan Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1583,2 +2220,2 @@\n-      \/* Gan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Gan Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1590,2 +2227,2 @@\n-      \/* Gan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Gan Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1597,1 +2234,1 @@\n-      \/* Irish *\/\n+      \/* Irish; Latin (Gaelic variant) *\/\n@@ -1606,1 +2243,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1614,2 +2251,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1622,1 +2265,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1630,2 +2273,2 @@\n-      \/* Hakka Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Hakka Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1637,3 +2280,9 @@\n-      \/* Hakka Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Hakka Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1644,2 +2293,2 @@\n-      \/* Xiang Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Xiang Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1651,3 +2300,9 @@\n-      \/* Xiang Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Xiang Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1658,2 +2313,2 @@\n-      \/* Hakka Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Hakka Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1665,2 +2320,2 @@\n-      \/* Hakka Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Hakka Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1672,2 +2327,2 @@\n-      \/* Xiang Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Xiang Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1679,2 +2334,2 @@\n-      \/* Xiang Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Xiang Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1688,1 +2343,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1696,2 +2351,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1704,1 +2365,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1712,1 +2373,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1720,2 +2381,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1728,1 +2395,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1736,1 +2403,1 @@\n-      \/* Navajo *\/\n+      \/* Navajo (retired code) *\/\n@@ -1749,2 +2416,2 @@\n-      \/* Hakka *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Hakka (retired code) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1756,1 +2423,1 @@\n-      \/* Luxembourgish *\/\n+      \/* Luxembourgish (retired code) *\/\n@@ -1765,2 +2432,2 @@\n-      \/* Literary Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Literary Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1774,2 +2441,2 @@\n-      \/* Min Bei Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Min Bei Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1781,3 +2448,9 @@\n-      \/* Min Bei Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Min Bei Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1788,2 +2461,2 @@\n-      \/* Min Bei Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Min Bei Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1795,2 +2468,2 @@\n-      \/* Min Bei Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Min Bei Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1804,1 +2477,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1812,2 +2485,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1820,1 +2499,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1828,2 +2507,2 @@\n-      \/* Min Nan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Min Nan Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1835,3 +2514,9 @@\n-      \/* Min Nan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Min Nan Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1842,2 +2527,2 @@\n-      \/* Min Nan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Min Nan Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1849,2 +2534,2 @@\n-      \/* Min Nan Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Min Nan Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1858,1 +2543,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1866,2 +2551,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1874,1 +2565,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1880,1 +2571,1 @@\n-      \/* Norwegian Bokmal *\/\n+      \/* Norwegian Bokmal (retired code) *\/\n@@ -1887,3 +2578,9 @@\n-      \/* Norwegian Nynorsk *\/\n-      tags[0] = HB_TAG('N','Y','N',' ');  \/* Norwegian Nynorsk (Nynorsk, Norwegian) *\/\n-      *count = 1;\n+      \/* Norwegian Nynorsk (retired code) *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('N','Y','N',' '),  \/* Norwegian Nynorsk (Nynorsk, Norwegian) *\/\n+        HB_TAG('N','O','R',' '),  \/* Norwegian *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1906,2 +2603,2 @@\n-      \/* Wu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Wu Chinese; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1913,3 +2610,9 @@\n-      \/* Wu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Wu Chinese; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1920,2 +2623,2 @@\n-      \/* Wu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Wu Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1927,2 +2630,2 @@\n-      \/* Wu Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Wu Chinese; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1936,1 +2639,1 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1944,2 +2647,8 @@\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1952,1 +2661,1 @@\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -1960,2 +2669,2 @@\n-      \/* Yue Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Yue Chinese; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1969,2 +2678,2 @@\n-      \/* Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Chinese [macrolanguage]; Han (Traditional variant); Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -1976,3 +2685,9 @@\n-      \/* Chinese *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Chinese [macrolanguage]; Han (Traditional variant); Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -1983,2 +2698,2 @@\n-      \/* Minnan, Hokkien, Amoy, Taiwanese, Southern Min, Southern Fujian, Hoklo, Southern Fukien, Ho-lo *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Minnan, Hokkien, Amoy, Taiwanese, Southern Min, Southern Fujian, Hoklo, Southern Fukien, Ho-lo (retired code) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1990,2 +2705,2 @@\n-      \/* Chinese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Chinese [macrolanguage]; Han (Simplified variant) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -1997,2 +2712,2 @@\n-      \/* Chinese *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Chinese [macrolanguage]; Han (Traditional variant) *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -2004,2 +2719,2 @@\n-      \/* Min, Fuzhou, Hokkien, Amoy, or Taiwanese *\/\n-      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese Simplified *\/\n+      \/* Min, Fuzhou, Hokkien, Amoy, or Taiwanese (retired code) *\/\n+      tags[0] = HB_TAG('Z','H','S',' ');  \/* Chinese, Simplified *\/\n@@ -2012,2 +2727,2 @@\n-      \/* Chinese; Hong Kong *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n+      \/* Chinese [macrolanguage]; Hong Kong *\/\n+      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Traditional, Hong Kong SAR *\/\n@@ -2020,3 +2735,9 @@\n-      \/* Chinese; Macao *\/\n-      tags[0] = HB_TAG('Z','H','H',' ');  \/* Chinese, Hong Kong SAR *\/\n-      *count = 1;\n+      \/* Chinese [macrolanguage]; Macao *\/\n+      unsigned int i;\n+      hb_tag_t possible_tags[] = {\n+        HB_TAG('Z','H','T','M'),  \/* Chinese, Traditional, Macao SAR *\/\n+        HB_TAG('Z','H','H',' '),  \/* Chinese, Traditional, Hong Kong SAR *\/\n+      };\n+      for (i = 0; i < 2 && i < *count; i++)\n+        tags[i] = possible_tags[i];\n+      *count = i;\n@@ -2028,2 +2749,2 @@\n-      \/* Chinese; Taiwan, Province of China *\/\n-      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese Traditional *\/\n+      \/* Chinese [macrolanguage]; Taiwan, Province of China *\/\n+      tags[0] = HB_TAG('Z','H','T',' ');  \/* Chinese, Traditional *\/\n@@ -2060,1 +2781,1 @@\n-    return hb_language_from_string (\"ar\", -1);  \/* Arabic *\/\n+    return hb_language_from_string (\"ar\", -1);  \/* Arabic [macrolanguage] *\/\n@@ -2064,1 +2785,3 @@\n-    return hb_language_from_string (\"ath\", -1);  \/* Athapascan *\/\n+    return hb_language_from_string (\"ath\", -1);  \/* Athapascan [family] *\/\n+  case HB_TAG('B','B','R',' '):  \/* Berber *\/\n+    return hb_language_from_string (\"ber\", -1);  \/* Berber [family] *\/\n@@ -2066,1 +2789,3 @@\n-    return hb_language_from_string (\"bik\", -1);  \/* Bikol *\/\n+    return hb_language_from_string (\"bik\", -1);  \/* Bikol [macrolanguage] *\/\n+  case HB_TAG('B','T','K',' '):  \/* Batak *\/\n+    return hb_language_from_string (\"btk\", -1);  \/* Batak [family] *\/\n@@ -2068,1 +2793,1 @@\n-    return hb_language_from_string (\"crp\", -1);  \/* Creoles and pidgins *\/\n+    return hb_language_from_string (\"crp\", -1);  \/* Creoles and pidgins [family] *\/\n@@ -2071,0 +2796,2 @@\n+  case HB_TAG('D','G','R',' '):  \/* Dogri (macrolanguage) *\/\n+    return hb_language_from_string (\"doi\", -1);  \/* Dogri [macrolanguage] *\/\n@@ -2072,1 +2799,1 @@\n-    return hb_language_from_string (\"din\", -1);  \/* Dinka *\/\n+    return hb_language_from_string (\"din\", -1);  \/* Dinka [macrolanguage] *\/\n@@ -2078,1 +2805,3 @@\n-    return hb_language_from_string (\"et\", -1);  \/* Estonian *\/\n+    return hb_language_from_string (\"et\", -1);  \/* Estonian [macrolanguage] *\/\n+  case HB_TAG('F','A','R',' '):  \/* Persian *\/\n+    return hb_language_from_string (\"fa\", -1);  \/* Persian [macrolanguage] *\/\n@@ -2080,1 +2809,1 @@\n-    return hb_language_from_string (\"gon\", -1);  \/* Gondi *\/\n+    return hb_language_from_string (\"gon\", -1);  \/* Gondi [macrolanguage] *\/\n@@ -2082,1 +2811,1 @@\n-    return hb_language_from_string (\"hmn\", -1);  \/* Hmong *\/\n+    return hb_language_from_string (\"hmn\", -1);  \/* Hmong [macrolanguage] *\/\n@@ -2085,0 +2814,4 @@\n+  case HB_TAG('H','Y','E',' '):  \/* Armenian *\/\n+    return hb_language_from_string (\"hyw\", -1);  \/* Western Armenian *\/\n+  case HB_TAG('I','B','A',' '):  \/* Iban *\/\n+    return hb_language_from_string (\"iba\", -1);  \/* Iban *\/\n@@ -2086,1 +2819,1 @@\n-    return hb_language_from_string (\"ijo\", -1);  \/* Ijo *\/\n+    return hb_language_from_string (\"ijo\", -1);  \/* Ijo [family] *\/\n@@ -2088,1 +2821,1 @@\n-    return hb_language_from_string (\"iu\", -1);  \/* Inuktitut *\/\n+    return hb_language_from_string (\"iu\", -1);  \/* Inuktitut [macrolanguage] *\/\n@@ -2090,1 +2823,1 @@\n-    return hb_language_from_string (\"ik\", -1);  \/* Inupiaq *\/\n+    return hb_language_from_string (\"ik\", -1);  \/* Inupiaq [macrolanguage] *\/\n@@ -2096,1 +2829,1 @@\n-    return hb_language_from_string (\"yi\", -1);  \/* Yiddish *\/\n+    return hb_language_from_string (\"yi\", -1);  \/* Yiddish [macrolanguage] *\/\n@@ -2098,1 +2831,1 @@\n-    return hb_language_from_string (\"kln\", -1);  \/* Kalenjin *\/\n+    return hb_language_from_string (\"kln\", -1);  \/* Kalenjin [macrolanguage] *\/\n@@ -2102,1 +2835,3 @@\n-    return hb_language_from_string (\"kr\", -1);  \/* Kanuri *\/\n+    return hb_language_from_string (\"kr\", -1);  \/* Kanuri [macrolanguage] *\/\n+  case HB_TAG('K','O','H',' '):  \/* Korean Old Hangul *\/\n+    return hb_language_from_string (\"okm\", -1);  \/* Middle Korean (10th-16th cent.) *\/\n@@ -2104,1 +2839,7 @@\n-    return hb_language_from_string (\"kok\", -1);  \/* Konkani *\/\n+    return hb_language_from_string (\"kok\", -1);  \/* Konkani [macrolanguage] *\/\n+  case HB_TAG('K','O','M',' '):  \/* Komi *\/\n+    return hb_language_from_string (\"kv\", -1);  \/* Komi [macrolanguage] *\/\n+  case HB_TAG('K','P','L',' '):  \/* Kpelle *\/\n+    return hb_language_from_string (\"kpe\", -1);  \/* Kpelle [macrolanguage] *\/\n+  case HB_TAG('K','R','N',' '):  \/* Karen *\/\n+    return hb_language_from_string (\"kar\", -1);  \/* Karen [family] *\/\n@@ -2108,1 +2849,1 @@\n-    return hb_language_from_string (\"ku\", -1);  \/* Kurdish *\/\n+    return hb_language_from_string (\"ku\", -1);  \/* Kurdish [macrolanguage] *\/\n@@ -2110,1 +2851,1 @@\n-    return hb_language_from_string (\"luy\", -1);  \/* Luyia *\/\n+    return hb_language_from_string (\"luy\", -1);  \/* Luyia [macrolanguage] *\/\n@@ -2112,1 +2853,1 @@\n-    return hb_language_from_string (\"lv\", -1);  \/* Latvian *\/\n+    return hb_language_from_string (\"lv\", -1);  \/* Latvian [macrolanguage] *\/\n@@ -2114,1 +2855,1 @@\n-    return hb_language_from_string (\"mwr\", -1);  \/* Marwari *\/\n+    return hb_language_from_string (\"mwr\", -1);  \/* Marwari [macrolanguage] *\/\n@@ -2116,1 +2857,1 @@\n-    return hb_language_from_string (\"mg\", -1);  \/* Malagasy *\/\n+    return hb_language_from_string (\"mg\", -1);  \/* Malagasy [macrolanguage] *\/\n@@ -2118,1 +2859,1 @@\n-    return hb_language_from_string (\"ms\", -1);  \/* Malay *\/\n+    return hb_language_from_string (\"ms\", -1);  \/* Malay [macrolanguage] *\/\n@@ -2120,1 +2861,3 @@\n-    return hb_language_from_string (\"mn\", -1);  \/* Mongolian *\/\n+    return hb_language_from_string (\"mn\", -1);  \/* Mongolian [macrolanguage] *\/\n+  case HB_TAG('M','N','K',' '):  \/* Maninka *\/\n+    return hb_language_from_string (\"man\", -1);  \/* Mandingo [macrolanguage] *\/\n@@ -2123,0 +2866,4 @@\n+  case HB_TAG('M','Y','N',' '):  \/* Mayan *\/\n+    return hb_language_from_string (\"myn\", -1);  \/* Mayan [family] *\/\n+  case HB_TAG('N','A','H',' '):  \/* Nahuatl *\/\n+    return hb_language_from_string (\"nah\", -1);  \/* Nahuatl [family] *\/\n@@ -2124,1 +2871,1 @@\n-    return hb_language_from_string (\"ne\", -1);  \/* Nepali *\/\n+    return hb_language_from_string (\"ne\", -1);  \/* Nepali [macrolanguage] *\/\n@@ -2128,1 +2875,1 @@\n-    return hb_language_from_string (\"no\", -1);  \/* Norwegian *\/\n+    return hb_language_from_string (\"no\", -1);  \/* Norwegian [macrolanguage] *\/\n@@ -2130,1 +2877,1 @@\n-    return hb_language_from_string (\"oj\", -1);  \/* Ojibwa *\/\n+    return hb_language_from_string (\"oj\", -1);  \/* Ojibwa [macrolanguage] *\/\n@@ -2132,1 +2879,1 @@\n-    return hb_language_from_string (\"om\", -1);  \/* Oromo *\/\n+    return hb_language_from_string (\"om\", -1);  \/* Oromo [macrolanguage] *\/\n@@ -2134,1 +2881,1 @@\n-    return hb_language_from_string (\"ps\", -1);  \/* Pashto *\/\n+    return hb_language_from_string (\"ps\", -1);  \/* Pashto [macrolanguage] *\/\n@@ -2141,0 +2888,2 @@\n+  case HB_TAG('Q','U','Z',' '):  \/* Quechua *\/\n+    return hb_language_from_string (\"qu\", -1);  \/* Quechua [macrolanguage] *\/\n@@ -2146,1 +2895,1 @@\n-    return hb_language_from_string (\"raj\", -1);  \/* Rajasthani *\/\n+    return hb_language_from_string (\"raj\", -1);  \/* Rajasthani [macrolanguage] *\/\n@@ -2148,1 +2897,1 @@\n-    return hb_language_from_string (\"rom\", -1);  \/* Romany *\/\n+    return hb_language_from_string (\"rom\", -1);  \/* Romany [macrolanguage] *\/\n@@ -2150,1 +2899,5 @@\n-    return hb_language_from_string (\"sq\", -1);  \/* Albanian *\/\n+    return hb_language_from_string (\"sq\", -1);  \/* Albanian [macrolanguage] *\/\n+  case HB_TAG('S','R','B',' '):  \/* Serbian *\/\n+    return hb_language_from_string (\"sr\", -1);  \/* Serbian *\/\n+  case HB_TAG('S','X','T',' '):  \/* Sutu *\/\n+    return hb_language_from_string (\"xnj\", -1);  \/* Ngoni (Tanzania) *\/\n@@ -2152,1 +2905,1 @@\n-    return hb_language_from_string (\"syr\", -1);  \/* Syriac *\/\n+    return hb_language_from_string (\"syr\", -1);  \/* Syriac [macrolanguage] *\/\n@@ -2160,9 +2913,13 @@\n-    return hb_language_from_string (\"tmh\", -1);  \/* Tamashek *\/\n-  case HB_TAG('T','N','E',' '):  \/* Tundra Nenets *\/\n-    return hb_language_from_string (\"yrk\", -1);  \/* Nenets *\/\n-  case HB_TAG('Z','H','H',' '):  \/* Chinese, Hong Kong SAR *\/\n-    return hb_language_from_string (\"zh-HK\", -1);  \/* Chinese; Hong Kong *\/\n-  case HB_TAG('Z','H','S',' '):  \/* Chinese Simplified *\/\n-    return hb_language_from_string (\"zh-Hans\", -1);  \/* Chinese; Han (Simplified variant) *\/\n-  case HB_TAG('Z','H','T',' '):  \/* Chinese Traditional *\/\n-    return hb_language_from_string (\"zh-Hant\", -1);  \/* Chinese; Han (Traditional variant) *\/\n+    return hb_language_from_string (\"tmh\", -1);  \/* Tamashek [macrolanguage] *\/\n+  case HB_TAG('T','O','D',' '):  \/* Todo *\/\n+    return hb_language_from_string (\"xwo\", -1);  \/* Written Oirat *\/\n+  case HB_TAG('Z','H','H',' '):  \/* Chinese, Traditional, Hong Kong SAR *\/\n+    return hb_language_from_string (\"zh-HK\", -1);  \/* Chinese [macrolanguage]; Hong Kong *\/\n+  case HB_TAG('Z','H','S',' '):  \/* Chinese, Simplified *\/\n+    return hb_language_from_string (\"zh-Hans\", -1);  \/* Chinese [macrolanguage]; Han (Simplified variant) *\/\n+  case HB_TAG('Z','H','T',' '):  \/* Chinese, Traditional *\/\n+    return hb_language_from_string (\"zh-Hant\", -1);  \/* Chinese [macrolanguage]; Han (Traditional variant) *\/\n+  case HB_TAG('Z','H','T','M'):  \/* Chinese, Traditional, Macao SAR *\/\n+    return hb_language_from_string (\"zh-MO\", -1);  \/* Chinese [macrolanguage]; Macao *\/\n+  case HB_TAG('Z','Z','A',' '):  \/* Zazaki *\/\n+    return hb_language_from_string (\"zza\", -1);  \/* Zazaki [macrolanguage] *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-tag-table.hh","additions":1092,"deletions":335,"binary":false,"changes":1427,"status":"modified"},{"patch":"@@ -167,0 +167,9 @@\n+\/**\n+ * hb_ot_tag_to_script:\n+ * @tag: a script tag\n+ *\n+ * Converts a script tag to an #hb_script_t.\n+ *\n+ * Return value: The #hb_script_t corresponding to @tag.\n+ *\n+ **\/\n@@ -283,0 +292,1 @@\n+           ot_languages[tag_idx + i].tag != HB_TAG_NONE &&\n@@ -353,1 +363,1 @@\n- * @script_count: (allow-none): maximum number of script tags to retrieve (IN)\n+ * @script_count: (inout) (optional): maximum number of script tags to retrieve (IN)\n@@ -355,1 +365,1 @@\n- * @script_tags: (out) (allow-none): array of size at least @script_count to store the\n+ * @script_tags: (out) (optional): array of size at least @script_count to store the\n@@ -357,1 +367,1 @@\n- * @language_count: (allow-none): maximum number of language tags to retrieve\n+ * @language_count: (inout) (optional): maximum number of language tags to retrieve\n@@ -359,1 +369,1 @@\n- * @language_tags: (out) (allow-none): array of size at least @language_count to store\n+ * @language_tags: (out) (optional): array of size at least @language_count to store\n@@ -426,0 +436,1 @@\n+ * @tag: an language tag\n@@ -427,0 +438,1 @@\n+ * Converts a language tag to an #hb_language_t.\n@@ -428,2 +440,2 @@\n- *\n- * Return value: (transfer none):\n+ * Return value: (transfer none) (nullable):\n+ * The #hb_language_t corresponding to @tag.\n@@ -480,3 +492,3 @@\n- * @script: (allow-none): the #hb_script_t corresponding to @script_tag (OUT).\n- * @language: (allow-none): the #hb_language_t corresponding to @script_tag and\n- * @language_tag (OUT).\n+ * @script: (out) (optional): the #hb_script_t corresponding to @script_tag.\n+ * @language: (out) (optional): the #hb_language_t corresponding to @script_tag and\n+ * @language_tag.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-tag.cc","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -655,2 +655,2 @@\n-          points[i].x += roundf (deltas[i].x);\n-          points[i].y += roundf (deltas[i].y);\n+          points[i].x += deltas[i].x;\n+          points[i].y += deltas[i].y;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-var-gvar-table.hh","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * @face: #hb_face_t to test\n+ * @face: The #hb_face_t to work on\n@@ -57,1 +57,1 @@\n- * This function allows to verify the presence of OpenType variation data on the face.\n+ * Tests whether a face includes any OpenType variation data in the `fvar` table.\n@@ -59,1 +59,1 @@\n- * Return value: true if face has a `fvar' table and false otherwise\n+ * Return value: %true if data found, %false otherwise\n@@ -71,0 +71,5 @@\n+ * @face: The #hb_face_t to work on\n+ *\n+ * Fetches the number of OpenType variation axes included in the face.\n+ *\n+ * Return value: the number of variation axes defined\n@@ -83,0 +88,8 @@\n+ * @face: #hb_face_t to work upon\n+ * @start_offset: offset of the first lookup to retrieve\n+ * @axes_count: (inout) (optional): Input = the maximum number of variation axes to return;\n+ *                Output = the actual number of variation axes returned (may be zero)\n+ * @axes_array: (out caller-allocates) (array length=axes_count): The array of variation axes found\n+ *\n+ * Fetches a list of all variation axes in the specified face. The list returned will begin\n+ * at the offset provided.\n@@ -85,1 +98,1 @@\n- * Deprecated: 2.2.0\n+ * Deprecated: 2.2.0: use hb_ot_var_get_axis_infos() instead\n@@ -98,0 +111,7 @@\n+ * @face: #hb_face_t to work upon\n+ * @axis_tag: The #hb_tag_t of the variation axis to query\n+ * @axis_index: The index of the variation axis\n+ * @axis_info: (out): The #hb_ot_var_axis_info_t of the axis tag queried\n+ *\n+ * Fetches the variation-axis information corresponding to the specified axis tag\n+ * in the specified face.\n@@ -100,1 +120,1 @@\n- * Deprecated: 2.2.0\n+ * Deprecated: 2.2.0 - use hb_ot_var_find_axis_info() instead\n@@ -114,0 +134,10 @@\n+ * @face: #hb_face_t to work upon\n+ * @start_offset: offset of the first lookup to retrieve\n+ * @axes_count: (inout) (optional): Input = the maximum number of variation axes to return;\n+ *                Output = the actual number of variation axes returned (may be zero)\n+ * @axes_array: (out caller-allocates) (array length=axes_count): The array of variation axes found\n+ *\n+ * Fetches a list of all variation axes in the specified face. The list returned will begin\n+ * at the offset provided.\n+ *\n+ * Return value: the number of variation axes in the face\n@@ -128,0 +158,8 @@\n+ * @face: #hb_face_t to work upon\n+ * @axis_tag: The #hb_tag_t of the variation axis to query\n+ * @axis_info: (out): The #hb_ot_var_axis_info_t of the axis tag queried\n+ *\n+ * Fetches the variation-axis information corresponding to the specified axis tag\n+ * in the specified face.\n+ *\n+ * Return value: %true if data found, %false otherwise\n@@ -144,0 +182,10 @@\n+\/**\n+ * hb_ot_var_get_named_instance_count:\n+ * @face: The #hb_face_t to work on\n+ *\n+ * Fetches the number of named instances included in the face.\n+ *\n+ * Return value: the number of named instances defined\n+ *\n+ * Since: 2.2.0\n+ **\/\n@@ -150,0 +198,12 @@\n+\/**\n+ * hb_ot_var_named_instance_get_subfamily_name_id:\n+ * @face: The #hb_face_t to work on\n+ * @instance_index: The index of the named instance to query\n+ *\n+ * Fetches the `name` table Name ID that provides display names for\n+ * the \"Subfamily name\" defined for the given named instance in the face.\n+ *\n+ * Return value: the Name ID found for the Subfamily name\n+ *\n+ * Since: 2.2.0\n+ **\/\n@@ -157,0 +217,12 @@\n+\/**\n+ * hb_ot_var_named_instance_get_postscript_name_id:\n+ * @face: The #hb_face_t to work on\n+ * @instance_index: The index of the named instance to query\n+ *\n+ * Fetches the `name` table Name ID that provides display names for\n+ * the \"PostScript name\" defined for the given named instance in the face.\n+ *\n+ * Return value: the Name ID found for the PostScript name\n+ *\n+ * Since: 2.2.0\n+ **\/\n@@ -164,0 +236,15 @@\n+\/**\n+ * hb_ot_var_named_instance_get_design_coords:\n+ * @face: The #hb_face_t to work on\n+ * @instance_index: The index of the named instance to query\n+ * @coords_length: (inout) (optional): Input = the maximum number of coordinates to return;\n+ *                 Output = the actual number of coordinates returned (may be zero)\n+ * @coords: (out) (array length=coords_length): The array of coordinates found for the query\n+ *\n+ * Fetches the design-space coordinates corresponding to the given\n+ * named instance in the face.\n+ *\n+ * Return value: the number of variation axes in the face\n+ *\n+ * Since: 2.2.0\n+ **\/\n@@ -176,0 +263,7 @@\n+ * @face: The #hb_face_t to work on\n+ * @variations: The array of variations to normalize\n+ * @variations_length: The number of variations to normalize\n+ * @coords: (out) (array length=coords_length): The array of normalized coordinates\n+ * @coords_length: The length of the coordinate array\n+ *\n+ * Normalizes all of the coordinates in the given list of variation axes.\n@@ -203,0 +297,11 @@\n+ * @face: The #hb_face_t to work on\n+ * @coords_length: The length of the coordinate array\n+ * @design_coords: The design-space coordinates to normalize\n+ * @normalized_coords: (out): The normalized coordinates\n+ *\n+ * Normalizes the given design-space coordinates. The minimum and maximum\n+ * values for the axis are mapped to the interval [-1,1], with the default\n+ * axis value mapped to 0.\n+ *\n+ * Any additional scaling defined in the face's `avar` table is also\n+ * applied, as described at https:\/\/docs.microsoft.com\/en-us\/typography\/opentype\/spec\/avar\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-var.cc","additions":110,"deletions":5,"binary":false,"changes":115,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_OT_H_IN\n+#if !defined(HB_OT_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -38,1 +38,5 @@\n-\n+\/**\n+ * HB_OT_TAG_VAR_AXIS_ITALIC:\n+ *\n+ * Registered tag for the roman\/italic axis.\n+ *\/\n@@ -40,0 +44,7 @@\n+\n+\/**\n+ * HB_OT_TAG_VAR_AXIS_OPTICAL_SIZE:\n+ *\n+ * Registered tag for the optical-size axis.\n+ * <note>Note: The optical-size axis supersedes the OpenType `size` feature.<\/note>\n+ *\/\n@@ -41,0 +52,6 @@\n+\n+\/**\n+ * HB_OT_TAG_VAR_AXIS_SLANT:\n+ *\n+ * Registered tag for the slant axis\n+ *\/\n@@ -42,0 +59,6 @@\n+\n+\/**\n+ * HB_OT_TAG_VAR_AXIS_WIDTH:\n+ *\n+ * Registered tag for the width axis.\n+ *\/\n@@ -43,0 +66,6 @@\n+\n+\/**\n+ * HB_OT_TAG_VAR_AXIS_WEIGHT:\n+ *\n+ * Registered tag for the weight axis.\n+ *\/\n@@ -66,0 +95,2 @@\n+ * Flags for #hb_ot_var_axis_info_t.\n+ *\n@@ -71,0 +102,1 @@\n+  \/*< private >*\/\n@@ -76,0 +108,14 @@\n+ * @axis_index: Index of the axis in the variation-axis array\n+ * @tag: The #hb_tag_t tag identifying the design variation of the axis\n+ * @name_id: The `name` table Name ID that provides display names for the axis\n+ * @flags: The #hb_ot_var_axis_flags_t flags for the axis\n+ * @min_value: The mininum value on the variation axis that the font covers\n+ * @default_value: The position on the variation axis corresponding to the font's defaults\n+ * @max_value: The maximum value on the variation axis that the font covers\n+ *\n+ * Data type for holding variation-axis values.\n+ *\n+ * The minimum, default, and maximum values are in un-normalized, user scales.\n+ *\n+ * <note>Note: at present, the only flag defined for @flags is\n+ * #HB_OT_VAR_AXIS_FLAG_HIDDEN.<\/note>\n@@ -79,2 +125,1 @@\n-typedef struct hb_ot_var_axis_info_t\n-{\n+typedef struct hb_ot_var_axis_info_t {\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-ot-var.h","additions":49,"deletions":4,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n- * call other methods of the object, and false otherwise.\n+ * call other methods of the object, and %false otherwise.\n@@ -116,2 +116,2 @@\n-#ifndef HB_SANITIZE_MAX_SUTABLES\n-#define HB_SANITIZE_MAX_SUTABLES 0x4000\n+#ifndef HB_SANITIZE_MAX_SUBTABLES\n+#define HB_SANITIZE_MAX_SUBTABLES 0x4000\n@@ -142,1 +142,1 @@\n-    return max_subtables < HB_SANITIZE_MAX_SUTABLES;\n+    return max_subtables < HB_SANITIZE_MAX_SUBTABLES;\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-sanitize.hh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -259,4 +259,5 @@\n-    if (unlikely (packed.in_error ())) {\n-      \/\/ obj wasn't successfully added to packed, so clean it up otherwise it's\n-      \/\/ links will be leaked.\n-      propagate_error (packed);\n+    if (unlikely (!propagate_error (packed)))\n+    {\n+      \/* Obj wasn't successfully added to packed, so clean it up otherwise its\n+       * links will be leaked. When we use constructor\/destructors properly, we\n+       * can remove these. *\/\n@@ -526,1 +527,1 @@\n-    auto &off = * ((BEInt<T, sizeof (T)> *) (parent->head + link.position));\n+    auto &off = * ((BEInt<T> *) (parent->head + link.position));\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-serialize.hh","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @short_description: Object representing a set of integers\n+ * @short_description: Objects representing a set of integers\n@@ -37,1 +37,1 @@\n- * used in non-shaping API to query certain set of characters or glyphs,\n+ * used in non-shaping APIs to query certain sets of characters or glyphs,\n@@ -45,1 +45,3 @@\n- * Return value: (transfer full):\n+ * Creates a new, initially empty set.\n+ *\n+ * Return value: (transfer full): The new #hb_set_t\n@@ -65,1 +67,3 @@\n- * Return value: (transfer full):\n+ * Fetches the singleton empty #hb_set_t.\n+ *\n+ * Return value: (transfer full): The empty #hb_set_t\n@@ -77,1 +81,3 @@\n- * @set: a set.\n+ * @set: A set\n+ *\n+ * Increases the reference count on a set.\n@@ -79,1 +85,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The set\n@@ -91,1 +97,5 @@\n- * @set: a set.\n+ * @set: A set\n+ *\n+ * Decreases the reference count on a set. When\n+ * the reference count reaches zero, the set is\n+ * destroyed, freeing all memory.\n@@ -107,5 +117,5 @@\n- * @set: a set.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @set: A set\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data to set\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -113,1 +123,3 @@\n- * Return value:\n+ * Attaches a user-data key\/data pair to the specified set.\n+ *\n+ * Return value: %true if success, %false otherwise\n@@ -129,2 +141,5 @@\n- * @set: a set.\n- * @key:\n+ * @set: A set\n+ * @key: The user-data key to query\n+ *\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified set.\n@@ -132,1 +147,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -146,2 +161,1 @@\n- * @set: a set.\n- *\n+ * @set: A set\n@@ -149,0 +163,1 @@\n+ * Tests whether memory allocation for a set was successful.\n@@ -150,1 +165,1 @@\n- * Return value:\n+ * Return value: %true if allocation succeeded, %false otherwise\n@@ -162,2 +177,1 @@\n- * @set: a set.\n- *\n+ * @set: A set\n@@ -165,0 +179,1 @@\n+ * Clears out the contents of a set.\n@@ -171,0 +186,3 @@\n+  if (unlikely (hb_object_is_immutable (set)))\n+    return;\n+\n@@ -178,0 +196,1 @@\n+ * Tests whether a set is empty (contains no elements).\n@@ -179,2 +198,1 @@\n- *\n- * Return value:\n+ * Return value: %true if @set is empty\n@@ -192,3 +210,2 @@\n- * @set: a set.\n- * @codepoint:\n- *\n+ * @set: A set\n+ * @codepoint: The element to query\n@@ -196,0 +213,1 @@\n+ * Tests whether @codepoint belongs to @set.\n@@ -197,1 +215,1 @@\n- * Return value:\n+ * Return value: %true if @codepoint is in @set, %false otherwise\n@@ -210,3 +228,2 @@\n- * @set: a set.\n- * @codepoint:\n- *\n+ * @set: A set\n+ * @codepoint: The element to add to @set\n@@ -214,0 +231,1 @@\n+ * Adds @codepoint to @set.\n@@ -226,4 +244,3 @@\n- * @set: a set.\n- * @first:\n- * @last:\n- *\n+ * @set: A set\n+ * @first: The first element to add to @set\n+ * @last: The final element to add to @set\n@@ -231,0 +248,2 @@\n+ * Adds all of the elements from @first to @last\n+ * (inclusive) to @set.\n@@ -244,3 +263,2 @@\n- * @set: a set.\n- * @codepoint:\n- *\n+ * @set: A set\n+ * @codepoint: Removes @codepoint from @set\n@@ -248,0 +266,1 @@\n+ * Removes @codepoint from @set.\n@@ -260,4 +279,3 @@\n- * @set: a set.\n- * @first:\n- * @last:\n- *\n+ * @set: A set\n+ * @first: The first element to remove from @set\n+ * @last: The final element to remove from @set\n@@ -265,0 +283,2 @@\n+ * Removes all of the elements from @first to @last\n+ * (inclusive) from @set.\n@@ -278,2 +298,2 @@\n- * @set: a set.\n- * @other: other set.\n+ * @set: A set\n+ * @other: Another set\n@@ -281,0 +301,2 @@\n+ * Tests whether @set and @other are equal (contain the same\n+ * elements).\n@@ -282,2 +304,1 @@\n- *\n- * Return value: %TRUE if the two sets are equal, %FALSE otherwise.\n+ * Return value: %true if the two sets are equal, %false otherwise.\n@@ -296,2 +317,2 @@\n- * @set: a set.\n- * @larger_set: other set.\n+ * @set: A set\n+ * @larger_set: Another set\n@@ -299,0 +320,1 @@\n+ * Tests whether @set is a subset of @larger_set.\n@@ -300,2 +322,1 @@\n- *\n- * Return value: %TRUE if the @set is a subset of (or equal to) @larger_set, %FALSE otherwise.\n+ * Return value: %true if the @set is a subset of (or equal to) @larger_set, %false otherwise.\n@@ -314,3 +335,2 @@\n- * @set: a set.\n- * @other:\n- *\n+ * @set: A set\n+ * @other: Another set\n@@ -318,0 +338,1 @@\n+ * Makes the contents of @set equal to the contents of @other.\n@@ -330,3 +351,2 @@\n- * @set: a set.\n- * @other:\n- *\n+ * @set: A set\n+ * @other: Another set\n@@ -334,0 +354,1 @@\n+ * Makes @set the union of @set and @other.\n@@ -346,3 +367,2 @@\n- * @set: a set.\n- * @other:\n- *\n+ * @set: A set\n+ * @other: Another set\n@@ -350,0 +370,1 @@\n+ * Makes @set the intersection of @set and @other.\n@@ -362,3 +383,2 @@\n- * @set: a set.\n- * @other:\n- *\n+ * @set: A set\n+ * @other: Another set\n@@ -366,0 +386,1 @@\n+ * Subtracts the contents of @other from @set.\n@@ -378,3 +399,2 @@\n- * @set: a set.\n- * @other:\n- *\n+ * @set: A set\n+ * @other: Another set\n@@ -382,0 +402,2 @@\n+ * Makes @set the symmetric difference of @set\n+ * and @other.\n@@ -395,2 +417,1 @@\n- * @set: a set.\n- *\n+ * @set: A set\n@@ -398,0 +419,1 @@\n+ * Inverts the contents of @set.\n@@ -411,1 +433,1 @@\n- * @set: a set.\n+ * @set: A set\n@@ -413,1 +435,1 @@\n- * Returns the number of numbers in the set.\n+ * Returns the number of elements in the set.\n@@ -415,1 +437,1 @@\n- * Return value: set population.\n+ * Return value: The population of @set\n@@ -427,1 +449,1 @@\n- * @set: a set.\n+ * @set: A set\n@@ -429,1 +451,1 @@\n- * Finds the minimum number in the set.\n+ * Finds the smallest element in the set.\n@@ -431,1 +453,1 @@\n- * Return value: minimum of the set, or %HB_SET_VALUE_INVALID if set is empty.\n+ * Return value: minimum of @set, or #HB_SET_VALUE_INVALID if @set is empty.\n@@ -443,1 +465,1 @@\n- * @set: a set.\n+ * @set: A set\n@@ -445,1 +467,1 @@\n- * Finds the maximum number in the set.\n+ * Finds the largest element in the set.\n@@ -447,1 +469,1 @@\n- * Return value: minimum of the set, or %HB_SET_VALUE_INVALID if set is empty.\n+ * Return value: maximum of @set, or #HB_SET_VALUE_INVALID if @set is empty.\n@@ -459,2 +481,3 @@\n- * @set: a set.\n- * @codepoint: (inout):\n+ * @set: A set\n+ * @codepoint: (inout): Input = Code point to query\n+ *             Output = Code point retrieved\n@@ -462,1 +485,1 @@\n- * Gets the next number in @set that is greater than current value of @codepoint.\n+ * Fetches the next element in @set that is greater than current value of @codepoint.\n@@ -464,1 +487,1 @@\n- * Set @codepoint to %HB_SET_VALUE_INVALID to get started.\n+ * Set @codepoint to #HB_SET_VALUE_INVALID to get started.\n@@ -466,1 +489,1 @@\n- * Return value: whether there was a next value.\n+ * Return value: %true if there was a next value, %false otherwise\n@@ -479,2 +502,3 @@\n- * @set: a set.\n- * @codepoint: (inout):\n+ * @set: A set\n+ * @codepoint: (inout): Input = Code point to query\n+ *             Output = Code point retrieved\n@@ -482,1 +506,1 @@\n- * Gets the previous number in @set that is lower than current value of @codepoint.\n+ * Fetches the previous element in @set that is lower than current value of @codepoint.\n@@ -484,1 +508,1 @@\n- * Set @codepoint to %HB_SET_VALUE_INVALID to get started.\n+ * Set @codepoint to #HB_SET_VALUE_INVALID to get started.\n@@ -486,1 +510,1 @@\n- * Return value: whether there was a previous value.\n+ * Return value: %true if there was a previous value, %false otherwise\n@@ -499,3 +523,4 @@\n- * @set: a set.\n- * @first: (out): output first codepoint in the range.\n- * @last: (inout): input current last and output last codepoint in the range.\n+ * @set: A set\n+ * @first: (out): The first code point in the range\n+ * @last: (inout): Input = The current last code point in the range\n+ *         Output = The last code point in the range\n@@ -503,1 +528,1 @@\n- * Gets the next consecutive range of numbers in @set that\n+ * Fetches the next consecutive range of elements in @set that\n@@ -506,1 +531,1 @@\n- * Set @last to %HB_SET_VALUE_INVALID to get started.\n+ * Set @last to #HB_SET_VALUE_INVALID to get started.\n@@ -508,1 +533,1 @@\n- * Return value: whether there was a next range.\n+ * Return value: %true if there was a next range, %false otherwise\n@@ -522,3 +547,4 @@\n- * @set: a set.\n- * @first: (inout): input current first and output first codepoint in the range.\n- * @last: (out): output last codepoint in the range.\n+ * @set: A set\n+ * @first: (inout): Input = The current first code point in the range\n+ *         Output = The first code point in the range\n+ * @last: (out): The last code point in the range\n@@ -526,2 +552,2 @@\n- * Gets the previous consecutive range of numbers in @set that\n- * are less than current value of @first.\n+ * Fetches the previous consecutive range of elements in @set that\n+ * are greater than current value of @last.\n@@ -529,1 +555,1 @@\n- * Set @first to %HB_SET_VALUE_INVALID to get started.\n+ * Set @first to #HB_SET_VALUE_INVALID to get started.\n@@ -531,1 +557,1 @@\n- * Return value: whether there was a previous range.\n+ * Return value: %true if there was a previous range, %false otherwise\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-set.cc","additions":124,"deletions":98,"binary":false,"changes":222,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -39,1 +39,5 @@\n-\/*\n+\/**\n+ * HB_SET_VALUE_INVALID:\n+ *\n+ * Unset #hb_set_t value.\n+ *\n@@ -44,0 +48,9 @@\n+\/**\n+ * hb_set_t:\n+ *\n+ * Data type for holding a set of integers. #hb_set_t's are\n+ * used to gather and contain glyph IDs, Unicode code\n+ * points, and various other collections of discrete\n+ * values.\n+ *\n+ **\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-set.h","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-    if (unlikely (!successful)) return false;\n+    if (unlikely (count > pages.length && !successful)) return false;\n@@ -259,3 +259,0 @@\n-    if (unlikely (hb_object_is_immutable (this)))\n-      return;\n-    clear ();\n@@ -263,0 +260,1 @@\n+    clear ();\n@@ -267,5 +265,2 @@\n-    if (unlikely (hb_object_is_immutable (this)))\n-      return;\n-    population = 0;\n-    page_map.resize (0);\n-    pages.resize (0);\n+    if (resize (0))\n+      population = 0;\n@@ -281,0 +276,1 @@\n+  explicit operator bool () const { return !is_empty (); }\n@@ -392,0 +388,5 @@\n+      \/\/ Pre-allocate the workspace that compact() will need so we can bail on allocation failure\n+      \/\/ before attempting to rewrite the page map.\n+      hb_vector_t<unsigned> compact_workspace;\n+      if (unlikely (!allocate_compact_workspace (compact_workspace))) return;\n+\n@@ -399,1 +400,1 @@\n-      compact (write_index);\n+      compact (compact_workspace, write_index);\n@@ -404,0 +405,1 @@\n+\n@@ -515,1 +517,18 @@\n-  void compact (unsigned int length)\n+  bool allocate_compact_workspace(hb_vector_t<unsigned>& workspace)\n+  {\n+    if (unlikely(!workspace.resize (pages.length)))\n+    {\n+      successful = false;\n+      return false;\n+    }\n+\n+    return true;\n+  }\n+\n+\n+  \/*\n+   * workspace should be a pre-sized vector allocated to hold at exactly pages.length\n+   * elements.\n+   *\/\n+  void compact (hb_vector_t<unsigned>& workspace,\n+                unsigned int length)\n@@ -517,4 +536,2 @@\n-    hb_vector_t<uint32_t> old_index_to_page_map_index;\n-    old_index_to_page_map_index.resize(pages.length);\n-    for (uint32_t i = 0; i < old_index_to_page_map_index.length; i++)\n-      old_index_to_page_map_index[i] = 0xFFFFFFFF;\n+    assert(workspace.length == pages.length);\n+    hb_vector_t<unsigned>& old_index_to_page_map_index = workspace;\n@@ -522,1 +539,3 @@\n-    for (uint32_t i = 0; i < length; i++)\n+    hb_fill (old_index_to_page_map_index.writer(), 0xFFFFFFFF);\n+    \/* TODO(iter) Rewrite as dagger? *\/\n+    for (unsigned i = 0; i < length; i++)\n@@ -528,1 +547,1 @@\n-  void compact_pages (const hb_vector_t<uint32_t>& old_index_to_page_map_index)\n+  void compact_pages (const hb_vector_t<unsigned>& old_index_to_page_map_index)\n@@ -546,0 +565,3 @@\n+    const bool passthru_left = op (1, 0);\n+    const bool passthru_right = op (0, 1);\n+\n@@ -557,0 +579,6 @@\n+\n+    \/\/ Pre-allocate the workspace that compact() will need so we can bail on allocation failure\n+    \/\/ before attempting to rewrite the page map.\n+    hb_vector_t<unsigned> compact_workspace;\n+    if (!passthru_left && unlikely (!allocate_compact_workspace (compact_workspace))) return;\n+\n@@ -561,1 +589,1 @@\n-        if (!Op::passthru_left)\n+        if (!passthru_left)\n@@ -578,1 +606,1 @@\n-        if (Op::passthru_left)\n+        if (passthru_left)\n@@ -584,1 +612,1 @@\n-        if (Op::passthru_right)\n+        if (passthru_right)\n@@ -589,1 +617,1 @@\n-    if (Op::passthru_left)\n+    if (passthru_left)\n@@ -591,1 +619,1 @@\n-    if (Op::passthru_right)\n+    if (passthru_right)\n@@ -594,1 +622,1 @@\n-    if (!Op::passthru_left)\n+    if (!passthru_left)\n@@ -598,1 +626,1 @@\n-      compact (write_index);\n+      compact (compact_workspace, write_index);\n@@ -622,1 +650,1 @@\n-        if (Op::passthru_left)\n+        if (passthru_left)\n@@ -631,1 +659,1 @@\n-        if (Op::passthru_right)\n+        if (passthru_right)\n@@ -640,1 +668,1 @@\n-    if (Op::passthru_left)\n+    if (passthru_left)\n@@ -647,1 +675,1 @@\n-    if (Op::passthru_right)\n+    if (passthru_right)\n@@ -658,0 +686,3 @@\n+      \/\/ This resize() doesn't need to be checked because we can't get here\n+      \/\/ if the set is currently in_error() and this only resizes downwards\n+      \/\/ which will always succeed if the set is not in_error().\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-set.hh","additions":59,"deletions":28,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -40,4 +40,11 @@\n- * Shape plans are not used for shaping directly, but can be access to query\n- * certain information about how shaping will perform given a set of input\n- * parameters (script, language, direction, features, etc.)\n- * Most client would not need to deal with shape plans directly.\n+ * Shape plans are an internal mechanism. Each plan contains state\n+ * describing how HarfBuzz will shape a particular text segment, based on\n+ * the combination of segment properties and the capabilities in the\n+ * font face in use.\n+ *\n+ * Shape plans are not used for shaping directly, but can be queried to\n+ * access certain information about how shaping will perform, given a set\n+ * of specific input parameters (script, language, direction, features,\n+ * etc.).\n+ *\n+ * Most client programs will not need to deal with shape plans directly.\n@@ -167,6 +174,5 @@\n- * @face:\n- * @props:\n- * @user_features: (array length=num_user_features):\n- * @num_user_features:\n- * @shaper_list: (array zero-terminated=1):\n- *\n+ * @face: #hb_face_t to use\n+ * @props: The #hb_segment_properties_t of the segment\n+ * @user_features: (array length=num_user_features): The list of user-selected features\n+ * @num_user_features: The number of user-selected features\n+ * @shaper_list: (array zero-terminated=1): List of shapers to try\n@@ -174,0 +180,2 @@\n+ * Constructs a shaping plan for a combination of @face, @user_features, @props,\n+ * and @shaper_list.\n@@ -175,1 +183,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The shaping plan\n@@ -192,0 +200,18 @@\n+\/**\n+ * hb_shape_plan_create2: (Xconstructor)\n+ * @face: #hb_face_t to use\n+ * @props: The #hb_segment_properties_t of the segment\n+ * @user_features: (array length=num_user_features): The list of user-selected features\n+ * @num_user_features: The number of user-selected features\n+ * @coords: (array length=num_coords): The list of variation-space coordinates\n+ * @num_coords: The number of variation-space coordinates\n+ * @shaper_list: (array zero-terminated=1): List of shapers to try\n+ *\n+ * The variable-font version of #hb_shape_plan_create.\n+ * Constructs a shaping plan for a combination of @face, @user_features, @props,\n+ * and @shaper_list, plus the variation-space coordinates @coords.\n+ *\n+ * Return value: (transfer full): The shaping plan\n+ *\n+ * Since: 1.4.0\n+ **\/\n@@ -251,0 +277,1 @@\n+ * Fetches the singleton empty shaping plan.\n@@ -252,2 +279,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The empty shaping plan\n@@ -265,1 +291,1 @@\n- * @shape_plan: a shape plan.\n+ * @shape_plan: A shaping plan\n@@ -267,0 +293,1 @@\n+ * Increases the reference count on the given shaping plan.\n@@ -268,2 +295,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): @shape_plan\n@@ -281,2 +307,1 @@\n- * @shape_plan: a shape plan.\n- *\n+ * @shape_plan: A shaping plan\n@@ -284,0 +309,3 @@\n+ * Decreases the reference count on the given shaping plan. When the\n+ * reference count reaches zero, the shaping plan is destroyed,\n+ * freeing all memory.\n@@ -301,6 +329,5 @@\n- * @shape_plan: a shape plan.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n- *\n+ * @shape_plan: A shaping plan\n+ * @key: The user-data key to set\n+ * @data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -308,0 +335,1 @@\n+ * Attaches a user-data key\/data pair to the given shaping plan.\n@@ -309,1 +337,1 @@\n- * Return value:\n+ * Return value: %true if success, %false otherwise.\n@@ -325,2 +353,2 @@\n- * @shape_plan: a shape plan.\n- * @key:\n+ * @shape_plan: A shaping plan\n+ * @key: The user-data key to query\n@@ -328,0 +356,2 @@\n+ * Fetches the user data associated with the specified key,\n+ * attached to the specified shaping plan.\n@@ -329,2 +359,1 @@\n- *\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -343,2 +372,1 @@\n- * @shape_plan: a shape plan.\n- *\n+ * @shape_plan: A shaping plan\n@@ -346,0 +374,1 @@\n+ * Fetches the shaper from a given shaping plan.\n@@ -347,1 +376,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): The shaper\n@@ -358,20 +387,6 @@\n-\/**\n- * hb_shape_plan_execute:\n- * @shape_plan: a shape plan.\n- * @font: a font.\n- * @buffer: a buffer.\n- * @features: (array length=num_features):\n- * @num_features:\n- *\n- *\n- *\n- * Return value:\n- *\n- * Since: 0.9.7\n- **\/\n-hb_bool_t\n-hb_shape_plan_execute (hb_shape_plan_t    *shape_plan,\n-                       hb_font_t          *font,\n-                       hb_buffer_t        *buffer,\n-                       const hb_feature_t *features,\n-                       unsigned int        num_features)\n+static bool\n+_hb_shape_plan_execute_internal (hb_shape_plan_t    *shape_plan,\n+                                 hb_font_t          *font,\n+                                 hb_buffer_t        *buffer,\n+                                 const hb_feature_t *features,\n+                                 unsigned int        num_features)\n@@ -389,1 +404,2 @@\n-  assert (buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE);\n+\n+  buffer->assert_unicode ();\n@@ -415,0 +431,30 @@\n+\/**\n+ * hb_shape_plan_execute:\n+ * @shape_plan: A shaping plan\n+ * @font: The #hb_font_t to use\n+ * @buffer: The #hb_buffer_t to work upon\n+ * @features: (array length=num_features): Features to enable\n+ * @num_features: The number of features to enable\n+ *\n+ * Executes the given shaping plan on the specified buffer, using\n+ * the given @font and @features.\n+ *\n+ * Return value: %true if success, %false otherwise.\n+ *\n+ * Since: 0.9.7\n+ **\/\n+hb_bool_t\n+hb_shape_plan_execute (hb_shape_plan_t    *shape_plan,\n+                       hb_font_t          *font,\n+                       hb_buffer_t        *buffer,\n+                       const hb_feature_t *features,\n+                       unsigned int        num_features)\n+{\n+  bool ret = _hb_shape_plan_execute_internal (shape_plan, font, buffer,\n+                                              features, num_features);\n+\n+  if (ret && buffer->content_type == HB_BUFFER_CONTENT_TYPE_UNICODE)\n+    buffer->content_type = HB_BUFFER_CONTENT_TYPE_GLYPHS;\n+\n+  return ret;\n+}\n@@ -423,6 +469,5 @@\n- * @face:\n- * @props:\n- * @user_features: (array length=num_user_features):\n- * @num_user_features:\n- * @shaper_list: (array zero-terminated=1):\n- *\n+ * @face: #hb_face_t to use\n+ * @props: The #hb_segment_properties_t of the segment\n+ * @user_features: (array length=num_user_features): The list of user-selected features\n+ * @num_user_features: The number of user-selected features\n+ * @shaper_list: (array zero-terminated=1): List of shapers to try\n@@ -430,0 +475,2 @@\n+ * Creates a cached shaping plan suitable for reuse, for a combination\n+ * of @face, @user_features, @props, and @shaper_list.\n@@ -431,1 +478,1 @@\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The shaping plan\n@@ -448,0 +495,19 @@\n+\/**\n+ * hb_shape_plan_create_cached2:\n+ * @face: #hb_face_t to use\n+ * @props: The #hb_segment_properties_t of the segment\n+ * @user_features: (array length=num_user_features): The list of user-selected features\n+ * @num_user_features: The number of user-selected features\n+ * @coords: (array length=num_coords): The list of variation-space coordinates\n+ * @num_coords: The number of variation-space coordinates\n+ * @shaper_list: (array zero-terminated=1): List of shapers to try\n+ *\n+ * The variable-font version of #hb_shape_plan_create_cached.\n+ * Creates a cached shaping plan suitable for reuse, for a combination\n+ * of @face, @user_features, @props, and @shaper_list, plus the\n+ * variation-space coordinates @coords.\n+ *\n+ * Return value: (transfer full): The shaping plan\n+ *\n+ * Since: 1.4.0\n+ **\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-shape-plan.cc","additions":126,"deletions":60,"binary":false,"changes":186,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -39,0 +39,14 @@\n+\/**\n+ * hb_shape_plan_t:\n+ *\n+ * Data type for holding a shaping plan.\n+ *\n+ * Shape plans contain information about how HarfBuzz will shape a\n+ * particular text segment, based on the segment's properties and the\n+ * capabilities in the font face in use.\n+ *\n+ * Shape plans can be queried about how shaping will perform, given a set\n+ * of specific input parameters (script, language, direction, features,\n+ * etc.).\n+ *\n+ **\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-shape-plan.h","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n- * @features: (array length=num_features) (allow-none): an array of user\n+ * @features: (array length=num_features) (nullable): an array of user\n@@ -117,1 +117,1 @@\n- * @shaper_list: (array zero-terminated=1) (allow-none): a %NULL-terminated\n+ * @shaper_list: (array zero-terminated=1) (nullable): a %NULL-terminated\n@@ -135,2 +135,0 @@\n-  if (unlikely (hb_object_is_immutable (buffer))) return false;\n-\n@@ -144,2 +142,0 @@\n-  if (res)\n-    buffer->content_type = HB_BUFFER_CONTENT_TYPE_GLYPHS;\n@@ -153,1 +149,1 @@\n- * @features: (array length=num_features) (allow-none): an array of user\n+ * @features: (array length=num_features) (nullable): an array of user\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-shape.cc","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-shape.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+  \/*< private >*\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-style.cc","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-style.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  \/\/closure features\n+  \/\/ Collect and prune features\n@@ -93,1 +93,7 @@\n-  gsub->closure_features (gsub_lookups, &feature_indices);\n+  hb_ot_layout_collect_features (face,\n+                                 HB_OT_TAG_GSUB,\n+                                 nullptr,\n+                                 nullptr,\n+                                 nullptr,\n+                                 &feature_indices);\n+  gsub->prune_features (gsub_lookups, &feature_indices);\n@@ -95,0 +101,1 @@\n+\n@@ -117,1 +124,1 @@\n-  \/\/closure features\n+  \/\/ Collect and prune features\n@@ -119,1 +126,7 @@\n-  gpos->closure_features (gpos_lookups, &feature_indices);\n+  hb_ot_layout_collect_features (face,\n+                                 HB_OT_TAG_GPOS,\n+                                 nullptr,\n+                                 nullptr,\n+                                 nullptr,\n+                                 &feature_indices);\n+  gpos->prune_features (gpos_lookups, &feature_indices);\n@@ -246,1 +259,5 @@\n-    _collect_layout_variation_indices (plan->source, plan->_glyphset, plan->gpos_lookups, plan->layout_variation_indices, plan->layout_variation_idx_map);\n+    _collect_layout_variation_indices (plan->source,\n+                                       plan->_glyphset_gsub,\n+                                       plan->gpos_lookups,\n+                                       plan->layout_variation_indices,\n+                                       plan->layout_variation_idx_map);\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-subset-plan.cc","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -175,6 +175,9 @@\n-    hb_blob_t *source_blob = source->reference_table (tag);\n-    DEBUG_MSG(SUBSET, nullptr, \"add table %c%c%c%c, dest %d bytes, source %d bytes\",\n-              HB_UNTAG(tag),\n-              hb_blob_get_length (contents),\n-              hb_blob_get_length (source_blob));\n-    hb_blob_destroy (source_blob);\n+    if (HB_DEBUG_SUBSET)\n+    {\n+      hb_blob_t *source_blob = source->reference_table (tag);\n+      DEBUG_MSG(SUBSET, nullptr, \"add table %c%c%c%c, dest %d bytes, source %d bytes\",\n+                HB_UNTAG(tag),\n+                hb_blob_get_length (contents),\n+                hb_blob_get_length (source_blob));\n+      hb_blob_destroy (source_blob);\n+    }\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-subset-plan.hh","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -43,2 +43,3 @@\n- * Client can pass its own Unicode functions to HarfBuzz, or access\n- * the built-in Unicode functions that come with HarfBuzz.\n+ * With these functions, client programs can query various properties from\n+ * the Unicode Character Database for any code point, such as General\n+ * Category (gc), Script (sc), Canonical Combining Class (ccc), etc.\n@@ -46,2 +47,6 @@\n- * With the Unicode functions, one can query variour Unicode character\n- * properties, such as General Category, Script, Combining Class, etc.\n+ * Client programs can optionally pass in their own Unicode functions\n+ * that implement the same queries. The set of functions available is\n+ * defined by the virtual methods in #hb_unicode_funcs_t.\n+ *\n+ * HarfBuzz provides built-in default functions for each method in\n+ * #hb_unicode_funcs_t.\n@@ -136,0 +141,10 @@\n+\/**\n+ * hb_unicode_funcs_get_default:\n+ *\n+ * Fetches a pointer to the default Unicode-functions structure that is used\n+ * when no functions are explicitly set on #hb_buffer_t.\n+ *\n+ * Return value: (transfer none): a pointer to the #hb_unicode_funcs_t Unicode-functions structure\n+ *\n+ * Since: 0.9.2\n+ **\/\n@@ -158,1 +173,1 @@\n- * @parent: (nullable):\n+ * @parent: (nullable): Parent Unicode-functions structure\n@@ -160,0 +175,1 @@\n+ * Creates a new #hb_unicode_funcs_t structure of Unicode functions.\n@@ -161,2 +177,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The Unicode-functions structure\n@@ -206,0 +221,1 @@\n+ * Fetches the singleton empty Unicode-functions structure.\n@@ -207,2 +223,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The empty Unicode-functions structure\n@@ -220,1 +235,1 @@\n- * @ufuncs: Unicode functions.\n+ * @ufuncs: The Unicode-functions structure\n@@ -222,0 +237,1 @@\n+ * Increases the reference count on a Unicode-functions structure.\n@@ -223,2 +239,1 @@\n- *\n- * Return value: (transfer full):\n+ * Return value: (transfer full): The Unicode-functions structure\n@@ -236,2 +251,1 @@\n- * @ufuncs: Unicode functions.\n- *\n+ * @ufuncs: The Unicode-functions structure\n@@ -239,0 +253,3 @@\n+ * Decreases the reference count on a Unicode-functions structure. When\n+ * the reference count reaches zero, the Unicode-functions structure is\n+ * destroyed, freeing all memory.\n@@ -259,5 +276,5 @@\n- * @ufuncs: Unicode functions.\n- * @key:\n- * @data:\n- * @destroy:\n- * @replace:\n+ * @ufuncs: The Unicode-functions structure\n+ * @key: The user-data key\n+ * @data: A pointer to the user data\n+ * @destroy: (nullable): A callback to call when @data is not needed anymore\n+ * @replace: Whether to replace an existing data with the same key\n@@ -265,0 +282,1 @@\n+ * Attaches a user-data key\/data pair to the specified Unicode-functions structure.\n@@ -266,2 +284,1 @@\n- *\n- * Return value:\n+ * Return value: %true if success, %false otherwise\n@@ -283,3 +300,2 @@\n- * @ufuncs: Unicode functions.\n- * @key:\n- *\n+ * @ufuncs: The Unicode-functions structure\n+ * @key: The user-data key to query\n@@ -287,0 +303,2 @@\n+ * Fetches the user-data associated with the specified key,\n+ * attached to the specified Unicode-functions structure.\n@@ -288,1 +306,1 @@\n- * Return value: (transfer none):\n+ * Return value: (transfer none): A pointer to the user data\n@@ -302,2 +320,1 @@\n- * @ufuncs: Unicode functions.\n- *\n+ * @ufuncs: The Unicode-functions structure\n@@ -305,0 +322,2 @@\n+ * Makes the specified Unicode-functions structure\n+ * immutable.\n@@ -319,2 +338,1 @@\n- * @ufuncs: Unicode functions.\n- *\n+ * @ufuncs: The Unicode-functions structure\n@@ -322,0 +340,2 @@\n+ * Tests whether the specified Unicode-functions structure\n+ * is immutable.\n@@ -323,1 +343,1 @@\n- * Return value:\n+ * Return value: %true if @ufuncs is immutable, %false otherwise\n@@ -335,1 +355,1 @@\n- * @ufuncs: Unicode functions.\n+ * @ufuncs: The Unicode-functions structure\n@@ -337,0 +357,2 @@\n+ * Fetches the parent of the Unicode-functions structure\n+ * @ufuncs.\n@@ -338,2 +360,1 @@\n- *\n- * Return value:\n+ * Return value: The parent Unicode-functions structure\n@@ -392,4 +413,4 @@\n- * @ufuncs: Unicode functions.\n- * @a:\n- * @b:\n- * @ab: (out):\n+ * @ufuncs: The Unicode-functions structure\n+ * @a: The first Unicode code point to compose\n+ * @b: The second Unicode code point to compose\n+ * @ab: (out): The composition of @a, @b\n@@ -397,0 +418,2 @@\n+ * Fetches the composition of a sequence of two Unicode\n+ * code points.\n@@ -398,0 +421,2 @@\n+ * Calls the composition function of the specified\n+ * Unicode-functions structure @ufuncs.\n@@ -399,1 +424,1 @@\n- * Return value:\n+ * Return value: %true if @a and @b composed, %false otherwise\n@@ -414,4 +439,4 @@\n- * @ufuncs: Unicode functions.\n- * @ab:\n- * @a: (out):\n- * @b: (out):\n+ * @ufuncs: The Unicode-functions structure\n+ * @ab: Unicode code point to decompose\n+ * @a: (out): The first code point of the decomposition of @ab\n+ * @b: (out): The second code point of the decomposition of @ab\n@@ -419,0 +444,1 @@\n+ * Fetches the decomposition of a Unicode code point.\n@@ -420,0 +446,2 @@\n+ * Calls the decomposition function of the specified\n+ * Unicode-functions structure @ufuncs.\n@@ -421,1 +449,1 @@\n- * Return value:\n+ * Return value: %true if @ab was decomposed, %false otherwise\n@@ -437,4 +465,3 @@\n- * @ufuncs: Unicode functions.\n- * @u:\n- * @decomposed: (out):\n- *\n+ * @ufuncs: The Unicode-functions structure\n+ * @u: Code point to decompose\n+ * @decomposed: (out): Compatibility decomposition of @u\n@@ -442,0 +469,2 @@\n+ * Fetches the compatibility decomposition of a Unicode\n+ * code point. Deprecated.\n@@ -443,1 +472,1 @@\n- * Return value:\n+ * Return value: length of @decomposed.\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-unicode.cc","additions":77,"deletions":48,"binary":false,"changes":125,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -44,1 +44,3 @@\n- * HB_UNICODE_MAX\n+ * HB_UNICODE_MAX:\n+ *\n+ * Maximum valid Unicode code point.\n@@ -51,1 +53,36 @@\n-\/* hb_unicode_general_category_t *\/\n+\/**\n+ * hb_unicode_general_category_t:\n+ * @HB_UNICODE_GENERAL_CATEGORY_CONTROL:              [Cc]\n+ * @HB_UNICODE_GENERAL_CATEGORY_FORMAT:               [Cf]\n+ * @HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED:           [Cn]\n+ * @HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE:          [Co]\n+ * @HB_UNICODE_GENERAL_CATEGORY_SURROGATE:            [Cs]\n+ * @HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER:     [Ll]\n+ * @HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER:      [Lm]\n+ * @HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER:         [Lo]\n+ * @HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER:     [Lt]\n+ * @HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER:     [Lu]\n+ * @HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK:         [Mc]\n+ * @HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK:       [Me]\n+ * @HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK:     [Mn]\n+ * @HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER:       [Nd]\n+ * @HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER:        [Nl]\n+ * @HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER:         [No]\n+ * @HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION:  [Pc]\n+ * @HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION:     [Pd]\n+ * @HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION:    [Pe]\n+ * @HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION:    [Pf]\n+ * @HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION:  [Pi]\n+ * @HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION:    [Po]\n+ * @HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION:     [Ps]\n+ * @HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL:      [Sc]\n+ * @HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL:      [Sk]\n+ * @HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL:          [Sm]\n+ * @HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL:         [So]\n+ * @HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR:       [Zl]\n+ * @HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR:  [Zp]\n+ * @HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR:      [Zs]\n+ *\n+ * Data type for the \"General_Category\" (gc) property from\n+ * the Unicode Character Database.\n+ **\/\n@@ -88,7 +125,68 @@\n-\/* hb_unicode_combining_class_t *\/\n-\n-\/* Note: newer versions of Unicode may add new values.  Clients should be ready to handle\n- * any value in the 0..254 range being returned from hb_unicode_combining_class().\n- *\/\n-\n-\/* Unicode Character Database property: Canonical_Combining_Class (ccc) *\/\n+\/**\n+ * hb_unicode_combining_class_t:\n+ * @HB_UNICODE_COMBINING_CLASS_NOT_REORDERED: Spacing and enclosing marks; also many vowel and consonant signs, even if nonspacing\n+ * @HB_UNICODE_COMBINING_CLASS_OVERLAY: Marks which overlay a base letter or symbol\n+ * @HB_UNICODE_COMBINING_CLASS_NUKTA: Diacritic nukta marks in Brahmi-derived scripts\n+ * @HB_UNICODE_COMBINING_CLASS_KANA_VOICING: Hiragana\/Katakana voicing marks\n+ * @HB_UNICODE_COMBINING_CLASS_VIRAMA: Viramas\n+ * @HB_UNICODE_COMBINING_CLASS_CCC10: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC11: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC12: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC13: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC14: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC15: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC16: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC17: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC18: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC19: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC20: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC21: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC22: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC23: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC24: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC25: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC26: [Hebrew]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC27: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC28: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC29: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC30: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC31: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC32: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC33: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC34: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC35: [Arabic]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC36: [Syriac]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC84: [Telugu]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC91: [Telugu]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC103: [Thai]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC107: [Thai]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC118: [Lao]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC122: [Lao]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC129: [Tibetan]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC130: [Tibetan]\n+ * @HB_UNICODE_COMBINING_CLASS_CCC133: [Tibetan]\n+ * @HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT: Marks attached at the bottom left\n+ * @HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW: Marks attached directly below\n+ * @HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE: Marks attached directly above\n+ * @HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT: Marks attached at the top right\n+ * @HB_UNICODE_COMBINING_CLASS_BELOW_LEFT: Distinct marks at the bottom left\n+ * @HB_UNICODE_COMBINING_CLASS_BELOW: Distinct marks directly below\n+ * @HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT: Distinct marks at the bottom right\n+ * @HB_UNICODE_COMBINING_CLASS_LEFT: Distinct marks to the left\n+ * @HB_UNICODE_COMBINING_CLASS_RIGHT: Distinct marks to the right\n+ * @HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT: Distinct marks at the top left\n+ * @HB_UNICODE_COMBINING_CLASS_ABOVE: Distinct marks directly above\n+ * @HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT: Distinct marks at the top right\n+ * @HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW: Distinct marks subtending two bases\n+ * @HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE: Distinct marks extending above two bases\n+ * @HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT: Greek iota subscript only\n+ * @HB_UNICODE_COMBINING_CLASS_INVALID: Invalid combining class\n+ *\n+ * Data type for the Canonical_Combining_Class (ccc) property\n+ * from the Unicode Character Database.\n+ *\n+ * <note>Note: newer versions of Unicode may add new values.\n+ * Client programs should be ready to handle any value in the 0..254 range\n+ * being returned from hb_unicode_combining_class().<\/note>\n+ *\n+ **\/\n@@ -179,0 +277,12 @@\n+\/**\n+ * hb_unicode_funcs_t:\n+ *\n+ * Data type containing a set of virtual methods used for\n+ * accessing various Unicode character properties.\n+ *\n+ * HarfBuzz provides a default function for each of the\n+ * methods in #hb_unicode_funcs_t. Client programs can implement\n+ * their own replacements for the individual Unicode functions, as\n+ * needed, and replace the default by calling the setter for a\n+ * method.\n+ **\/\n@@ -230,0 +340,14 @@\n+\/**\n+ * hb_unicode_combining_class_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @unicode: The code point to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should retrieve the Canonical Combining Class (ccc)\n+ * property for a specified Unicode code point.\n+ *\n+ * Return value: The #hb_unicode_combining_class_t of @unicode\n+ *\n+ **\/\n@@ -233,0 +357,15 @@\n+\n+\/**\n+ * hb_unicode_general_category_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @unicode: The code point to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should retrieve the General Category property for\n+ * a specified Unicode code point.\n+ *\n+ * Return value: The #hb_unicode_general_category_t of @unicode\n+ *\n+ **\/\n@@ -236,0 +375,19 @@\n+\n+\/**\n+ * hb_unicode_mirroring_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @unicode: The code point to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should retrieve the Bi-Directional Mirroring Glyph\n+ * code point for a specified Unicode code point.\n+ *\n+ * <note>Note: If a code point does not have a specified\n+ * Bi-Directional Mirroring Glyph defined, the method should\n+ * return the original code point.<\/note>\n+ *\n+ * Return value: The #hb_codepoint_t of the Mirroring Glyph for @unicode\n+ *\n+ **\/\n@@ -239,0 +397,15 @@\n+\n+\/**\n+ * hb_unicode_script_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @unicode: The code point to query\n+ * @user_data: User data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should retrieve the Script property for a\n+ * specified Unicode code point.\n+ *\n+ * Return value: The #hb_script_t of @unicode\n+ *\n+ **\/\n@@ -243,0 +416,19 @@\n+\/**\n+ * hb_unicode_compose_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @a: The first code point to compose\n+ * @b: The second code point to compose\n+ * @ab: (out): The composed code point\n+ * @user_data: user data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should compose a sequence of two input Unicode code\n+ * points by canonical equivalence, returning the composed code\n+ * point in a #hb_codepoint_t output parameter (if successful).\n+ * The method must return an #hb_bool_t indicating the success\n+ * of the composition.\n+ *\n+ * Return value: %true is @a,@b composed, %false otherwise\n+ *\n+ **\/\n@@ -248,0 +440,19 @@\n+\n+\/**\n+ * hb_unicode_decompose_func_t:\n+ * @ufuncs: A Unicode-functions structure\n+ * @ab: The code point to decompose\n+ * @a: (out): The first decomposed code point\n+ * @b: (out): The second decomposed code point\n+ * @user_data: user data pointer passed by the caller\n+ *\n+ * A virtual method for the #hb_unicode_funcs_t structure.\n+ *\n+ * This method should decompose an input Unicode code point,\n+ * returning the two decomposed code points in #hb_codepoint_t\n+ * output parameters (if successful). The method must return an\n+ * #hb_bool_t indicating the success of the composition.\n+ *\n+ * Return value: %true if @ab decomposed, %false otherwise\n+ *\n+ **\/\n@@ -254,1 +465,1 @@\n-\/* setters *\/\n+\/* func setters *\/\n@@ -258,5 +469,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -264,0 +474,1 @@\n+ * Sets the implementation function for #hb_unicode_combining_class_func_t.\n@@ -274,5 +485,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -280,0 +490,1 @@\n+ * Sets the implementation function for #hb_unicode_general_category_func_t.\n@@ -290,5 +501,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -296,0 +506,1 @@\n+ * Sets the implementation function for #hb_unicode_mirroring_func_t.\n@@ -306,5 +517,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -312,0 +522,1 @@\n+ * Sets the implementation function for #hb_unicode_script_func_t.\n@@ -322,5 +533,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -328,0 +538,1 @@\n+ * Sets the implementation function for #hb_unicode_compose_func_t.\n@@ -338,5 +549,4 @@\n- * @ufuncs: a Unicode function structure\n- * @func: (closure user_data) (destroy destroy) (scope notified):\n- * @user_data:\n- * @destroy:\n- *\n+ * @ufuncs: A Unicode-functions structure\n+ * @func: (closure user_data) (destroy destroy) (scope notified): The callback function to assign\n+ * @user_data: Data to pass to @func\n+ * @destroy: (nullable): The function to call when @user_data is not needed anymore\n@@ -344,0 +554,1 @@\n+ * Sets the implementation function for #hb_unicode_decompose_func_t.\n@@ -356,0 +567,7 @@\n+ * @ufuncs: The Unicode-functions structure\n+ * @unicode: The code point to query\n+ *\n+ * Retrieves the Canonical Combining Class (ccc) property\n+ * of code point @unicode.\n+ *\n+ * Return value: The #hb_unicode_combining_class_t of @unicode\n@@ -365,0 +583,7 @@\n+ * @ufuncs: The Unicode-functions structure\n+ * @unicode: The code point to query\n+ *\n+ * Retrieves the General Category (gc) property\n+ * of code point @unicode.\n+ *\n+ * Return value: The #hb_unicode_general_category_t of @unicode\n@@ -374,0 +599,7 @@\n+ * @ufuncs: The Unicode-functions structure\n+ * @unicode: The code point to query\n+ *\n+ * Retrieves the Bi-directional Mirroring Glyph code\n+ * point defined for code point @unicode.\n+ *\n+ * Return value: The #hb_codepoint_t of the Mirroring Glyph for @unicode\n@@ -383,0 +615,7 @@\n+ * @ufuncs: The Unicode-functions structure\n+ * @unicode: The code point to query\n+ *\n+ * Retrieves the #hb_script_t script to which code\n+ * point @unicode belongs.\n+ *\n+ * Return value: The #hb_script_t of @unicode\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-unicode.h","additions":280,"deletions":41,"binary":false,"changes":321,"status":"modified"},{"patch":"@@ -83,1 +83,6 @@\n-  void reset () { resize (0); }\n+  void reset ()\n+  {\n+    if (unlikely (in_error ()))\n+      allocated = length; \/\/ Big hack!\n+    resize (0);\n+  }\n@@ -184,1 +189,1 @@\n-    if (unlikely (allocated < 0))\n+    if (unlikely (in_error ()))\n@@ -198,1 +203,1 @@\n-      (int) new_allocated < 0 ||\n+      (int) in_error () ||\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-vector.hh","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#ifndef HB_H_IN\n+#if !defined(HB_H_IN) && !defined(HB_NO_SINGLE_HEADER_ERROR)\n@@ -39,0 +39,5 @@\n+\/**\n+ * HB_VERSION_MAJOR:\n+ *\n+ * The major component of the library version available at compile-time.\n+ *\/\n@@ -40,2 +45,12 @@\n-#define HB_VERSION_MINOR 7\n-#define HB_VERSION_MICRO 2\n+\/**\n+ * HB_VERSION_MINOR:\n+ *\n+ * The minor component of the library version available at compile-time.\n+ *\/\n+#define HB_VERSION_MINOR 8\n+\/**\n+ * HB_VERSION_MICRO:\n+ *\n+ * The micro component of the library version available at compile-time.\n+ *\/\n+#define HB_VERSION_MICRO 0\n@@ -43,1 +58,6 @@\n-#define HB_VERSION_STRING \"2.7.2\"\n+\/**\n+ * HB_VERSION_STRING:\n+ *\n+ * A string literal containing the library version available at compile-time.\n+ *\/\n+#define HB_VERSION_STRING \"2.8.0\"\n@@ -45,0 +65,9 @@\n+\/**\n+ * HB_VERSION_ATLEAST:\n+ * @major: the major component of the version number\n+ * @minor: the minor component of the version number\n+ * @micro: the micro component of the version number\n+ *\n+ * Tests the library version at compile-time against a minimum value,\n+ * as three integer components.\n+ *\/\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb-version.h","additions":33,"deletions":4,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-#pragma GCC diagnostic error   \"-Wc++11-narrowing\"\n@@ -78,0 +77,1 @@\n+#pragma GCC diagnostic error   \"-Wnarrowing\"\n@@ -129,0 +129,1 @@\n+#pragma GCC diagnostic ignored \"-Wrange-loop-analysis\" \/\/ https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/2834\n@@ -178,9 +179,9 @@\n-#include <limits.h>\n-#include <math.h>\n-#include <float.h>\n-#include <stdlib.h>\n-#include <stddef.h>\n-#include <string.h>\n-#include <assert.h>\n-#include <stdio.h>\n-#include <stdarg.h>\n+#include <cassert>\n+#include <cfloat>\n+#include <climits>\n+#include <cmath>\n+#include <cstdarg>\n+#include <cstddef>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n@@ -247,2 +248,0 @@\n-#define HB_PURE_FUNC    __attribute__((pure))\n-#define HB_CONST_FUNC   __attribute__((const))\n@@ -251,2 +250,0 @@\n-#define HB_PURE_FUNC\n-#define HB_CONST_FUNC\n@@ -397,1 +394,1 @@\n-#  include <errno.h>\n+#  include <cerrno>\n@@ -443,5 +440,0 @@\n-\/* Static-assert as expression. *\/\n-template <unsigned int cond> class hb_assert_constant_t;\n-template <> class hb_assert_constant_t<1> {};\n-#define ASSERT_STATIC_EXPR_ZERO(_cond) (0 * (unsigned int) sizeof (hb_assert_constant_t<_cond>))\n-\n@@ -449,8 +441,0 @@\n-static_assert ((sizeof (int8_t) == 1), \"\");\n-static_assert ((sizeof (uint8_t) == 1), \"\");\n-static_assert ((sizeof (int16_t) == 2), \"\");\n-static_assert ((sizeof (uint16_t) == 2), \"\");\n-static_assert ((sizeof (int32_t) == 4), \"\");\n-static_assert ((sizeof (uint32_t) == 4), \"\");\n-static_assert ((sizeof (int64_t) == 8), \"\");\n-static_assert ((sizeof (uint64_t) == 8), \"\");\n@@ -462,156 +446,0 @@\n-#define HB_DELETE_COPY_ASSIGN(TypeName) \\\n-  TypeName(const TypeName&) = delete; \\\n-  void operator=(const TypeName&) = delete\n-#define HB_DELETE_CREATE_COPY_ASSIGN(TypeName) \\\n-  TypeName() = delete; \\\n-  TypeName(const TypeName&) = delete; \\\n-  void operator=(const TypeName&) = delete\n-\n-\n-\/* Flags *\/\n-\n-\/* Enable bitwise ops on enums marked as flags_t *\/\n-\/* To my surprise, looks like the function resolver is happy to silently cast\n- * one enum to another...  So this doesn't provide the type-checking that I\n- * originally had in mind... :(.\n- *\n- * For MSVC warnings, see: https:\/\/github.com\/harfbuzz\/harfbuzz\/pull\/163\n- *\/\n-#ifdef _MSC_VER\n-# pragma warning(disable:4200)\n-# pragma warning(disable:4800)\n-#endif\n-#define HB_MARK_AS_FLAG_T(T) \\\n-        extern \"C++\" { \\\n-          static inline T operator | (T l, T r) { return T ((unsigned) l | (unsigned) r); } \\\n-          static inline T operator & (T l, T r) { return T ((unsigned) l & (unsigned) r); } \\\n-          static inline T operator ^ (T l, T r) { return T ((unsigned) l ^ (unsigned) r); } \\\n-          static inline T operator ~ (T r) { return T (~(unsigned int) r); } \\\n-          static inline T& operator |= (T &l, T r) { l = l | r; return l; } \\\n-          static inline T& operator &= (T& l, T r) { l = l & r; return l; } \\\n-          static inline T& operator ^= (T& l, T r) { l = l ^ r; return l; } \\\n-        } \\\n-        static_assert (true, \"\")\n-\n-\/* Useful for set-operations on small enums.\n- * For example, for testing \"x ∈ {x1, x2, x3}\" use:\n- * (FLAG_UNSAFE(x) & (FLAG(x1) | FLAG(x2) | FLAG(x3)))\n- *\/\n-#define FLAG(x) (ASSERT_STATIC_EXPR_ZERO ((unsigned)(x) < 32) + (((uint32_t) 1U) << (unsigned)(x)))\n-#define FLAG_UNSAFE(x) ((unsigned)(x) < 32 ? (((uint32_t) 1U) << (unsigned)(x)) : 0)\n-#define FLAG_RANGE(x,y) (ASSERT_STATIC_EXPR_ZERO ((x) < (y)) + FLAG(y+1) - FLAG(x))\n-#define FLAG64(x) (ASSERT_STATIC_EXPR_ZERO ((unsigned)(x) < 64) + (((uint64_t) 1ULL) << (unsigned)(x)))\n-#define FLAG64_UNSAFE(x) ((unsigned)(x) < 64 ? (((uint64_t) 1ULL) << (unsigned)(x)) : 0)\n-\n-\n-\/* Size signifying variable-sized array *\/\n-#ifndef HB_VAR_ARRAY\n-#define HB_VAR_ARRAY 1\n-#endif\n-\n-static inline float\n-_hb_roundf (float x) { return floorf (x + .5f); }\n-#define roundf(x) _hb_roundf(x)\n-\n-\/* Endian swap, used in Windows related backends *\/\n-static inline uint16_t hb_uint16_swap (const uint16_t v)\n-{ return (v >> 8) | (v << 8); }\n-static inline uint32_t hb_uint32_swap (const uint32_t v)\n-{ return (hb_uint16_swap (v) << 16) | hb_uint16_swap (v >> 16); }\n-\n-\/*\n- * Big-endian integers.  Here because fundamental.\n- *\/\n-\n-template <typename Type, int Bytes> struct BEInt;\n-\n-template <typename Type>\n-struct BEInt<Type, 1>\n-{\n-  public:\n-  BEInt<Type, 1>& operator = (Type V)\n-  {\n-    v = V;\n-    return *this;\n-  }\n-  operator Type () const { return v; }\n-  private: uint8_t v;\n-};\n-template <typename Type>\n-struct BEInt<Type, 2>\n-{\n-  public:\n-  BEInt<Type, 2>& operator = (Type V)\n-  {\n-    v[0] = (V >>  8) & 0xFF;\n-    v[1] = (V      ) & 0xFF;\n-    return *this;\n-  }\n-  operator Type () const\n-  {\n-#if ((defined(__GNUC__) && __GNUC__ >= 5) || defined(__clang__)) && \\\n-    defined(__BYTE_ORDER) && \\\n-    (__BYTE_ORDER == __LITTLE_ENDIAN || __BYTE_ORDER == __BIG_ENDIAN)\n-    \/* Spoon-feed the compiler a big-endian integer with alignment 1.\n-     * https:\/\/github.com\/harfbuzz\/harfbuzz\/pull\/1398 *\/\n-    struct __attribute__((packed)) packed_uint16_t { uint16_t v; };\n-#if __BYTE_ORDER == __LITTLE_ENDIAN\n-    return __builtin_bswap16 (((packed_uint16_t *) this)->v);\n-#else \/* __BYTE_ORDER == __BIG_ENDIAN *\/\n-    return ((packed_uint16_t *) this)->v;\n-#endif\n-#endif\n-    return (v[0] <<  8)\n-         + (v[1]      );\n-  }\n-  private: uint8_t v[2];\n-};\n-template <typename Type>\n-struct BEInt<Type, 3>\n-{\n-  public:\n-  BEInt<Type, 3>& operator = (Type V)\n-  {\n-    v[0] = (V >> 16) & 0xFF;\n-    v[1] = (V >>  8) & 0xFF;\n-    v[2] = (V      ) & 0xFF;\n-    return *this;\n-  }\n-  operator Type () const\n-  {\n-    return (v[0] << 16)\n-         + (v[1] <<  8)\n-         + (v[2]      );\n-  }\n-  private: uint8_t v[3];\n-};\n-template <typename Type>\n-struct BEInt<Type, 4>\n-{\n-  public:\n-  BEInt<Type, 4>& operator = (Type V)\n-  {\n-    v[0] = (V >> 24) & 0xFF;\n-    v[1] = (V >> 16) & 0xFF;\n-    v[2] = (V >>  8) & 0xFF;\n-    v[3] = (V      ) & 0xFF;\n-    return *this;\n-  }\n-  operator Type () const\n-  {\n-    return (v[0] << 24)\n-         + (v[1] << 16)\n-         + (v[2] <<  8)\n-         + (v[3]      );\n-  }\n-  private: uint8_t v[4];\n-};\n-\n-\n-\/*\n- * For lack of a better place, put Zawgyi script hack here.\n- * https:\/\/github.com\/harfbuzz\/harfbuzz\/issues\/1162\n- *\/\n-\n-#define HB_SCRIPT_MYANMAR_ZAWGYI        ((hb_script_t) HB_TAG ('Q','a','a','g'))\n-\n","filename":"src\/java.desktop\/share\/native\/libharfbuzz\/hb.hh","additions":12,"deletions":184,"binary":false,"changes":196,"status":"modified"}]}