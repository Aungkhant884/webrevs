{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -550,1 +550,0 @@\n-\n@@ -552,1 +551,4 @@\n-  const char* const error_msg = c_str(errorMsg, t);\n+  abort(c_str(errorMsg, t));\n+}\n+\n+void JfrJavaSupport::abort(const char* error_msg, bool dump_core \/* true *\/) {\n@@ -554,1 +556,1 @@\n-    log_error(jfr, system)(\"%s\",error_msg);\n+    log_error(jfr, system)(\"%s\", error_msg);\n@@ -557,1 +559,1 @@\n-  vm_abort();\n+  vm_abort(dump_core);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,0 +103,1 @@\n+  static void abort(const char* error_msg, bool dump_core = true);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJavaSupport.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"jfr\/jni\/jfrJavaSupport.hpp\"\n@@ -79,0 +80,3 @@\n+    if (errno == ENOSPC) {\n+      JfrJavaSupport::abort(\"Failed to write to jfr stream because no space left on device\", false);\n+    }\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}