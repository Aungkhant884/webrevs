{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,1 +126,5 @@\n-  set_end(mr.end());\n+  \/\/ When expanding concurrently with callers of cas_allocate, setting end\n+  \/\/ makes the new space available for allocation by other threads.  So this\n+  \/\/ assignment must follow all other configuration and initialization that\n+  \/\/ might be done for expansion.\n+  Atomic::release_store(end_addr(), mr.end());\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-#include \"runtime\/orderAccess.hpp\"\n@@ -355,3 +354,3 @@\n-  \/\/ Ensure the space bounds are updated and made visible to other\n-  \/\/ threads after the other data structures have been resized.\n-  OrderAccess::storestore();\n+  \/\/ The update of the space's end is done by this call.  As that\n+  \/\/ makes the new space available for concurrent allocation, this\n+  \/\/ must be the last step when expanding.\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}