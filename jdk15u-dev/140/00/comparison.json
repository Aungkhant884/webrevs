{"files":[{"patch":"@@ -104,0 +104,2 @@\n+    harfbuzz)\n+      PKGHANDLER_COMMAND=\"sudo apt-get install libharfbuzz-dev\" ;;\n@@ -127,0 +129,2 @@\n+    harfbuzz)\n+      PKGHANDLER_COMMAND=\"sudo zypper install harfbuzz-devel\" ;;\n@@ -146,0 +150,2 @@\n+    harfbuzz)\n+      PKGHANDLER_COMMAND=\"sudo yum install harfbuzz-devel\" ;;\n","filename":"make\/autoconf\/help.m4","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  LIB_SETUP_HARFBUZZ\n@@ -266,0 +267,40 @@\n+\n+################################################################################\n+# Setup harfbuzz\n+################################################################################\n+AC_DEFUN_ONCE([LIB_SETUP_HARFBUZZ],\n+[\n+  AC_ARG_WITH(harfbuzz, [AS_HELP_STRING([--with-harfbuzz],\n+      [use harfbuzz from build system or OpenJDK source (system, bundled) @<:@bundled@:>@])])\n+\n+  AC_MSG_CHECKING([for which harfbuzz to use])\n+\n+  DEFAULT_HARFBUZZ=bundled\n+  # If user didn't specify, use DEFAULT_HARFBUZZ\n+  if test \"x${with_harfbuzz}\" = \"x\"; then\n+    with_harfbuzz=${DEFAULT_HARFBUZZ}\n+  fi\n+\n+  if test \"x${with_harfbuzz}\" = \"xbundled\"; then\n+    USE_EXTERNAL_HARFBUZZ=false\n+    HARFBUZZ_CFLAGS=\"\"\n+    HARFBUZZ_LIBS=\"\"\n+    AC_MSG_RESULT([bundled])\n+  elif test \"x${with_harfbuzz}\" = \"xsystem\"; then\n+    AC_MSG_RESULT([system])\n+    PKG_CHECK_MODULES([HARFBUZZ], [harfbuzz], [HARFBUZZ_FOUND=yes], [HARFBUZZ_FOUND=no])\n+    if test \"x${HARFBUZZ_FOUND}\" = \"xyes\"; then\n+      # PKG_CHECK_MODULES will set HARFBUZZ_CFLAGS and HARFBUZZ_LIBS\n+      USE_EXTERNAL_HARFBUZZ=true\n+    else\n+      HELP_MSG_MISSING_DEPENDENCY([harfbuzz])\n+      AC_MSG_ERROR([--with-harfbuzz=system specified, but no harfbuzz found! $HELP_MSG])\n+    fi\n+  else\n+    AC_MSG_ERROR([Invalid value for --with-harfbuzz: ${with_harfbuzz}, use 'system' or 'bundled'])\n+  fi\n+\n+  AC_SUBST(USE_EXTERNAL_HARFBUZZ)\n+  AC_SUBST(HARFBUZZ_CFLAGS)\n+  AC_SUBST(HARFBUZZ_LIBS)\n+])\n","filename":"make\/autoconf\/lib-bundled.m4","additions":41,"deletions":0,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -835,0 +835,4 @@\n+USE_EXTERNAL_HARFBUZZ:=@USE_EXTERNAL_HARFBUZZ@\n+HARFBUZZ_CFLAGS:=@HARFBUZZ_CFLAGS@\n+HARFBUZZ_LIBS:=@HARFBUZZ_LIBS@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,0 +74,4 @@\n+ifeq ($(USE_EXTERNAL_HARFBUZZ), true)\n+  LEGAL_EXCLUDES += harfbuzz.md\n+endif\n+\n","filename":"make\/modules\/java.desktop\/Copy.gmk","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -437,1 +437,4 @@\n-HARFBUZZ_CFLAGS := -DHAVE_OT -DHAVE_FALLBACK -DHAVE_UCDN -DHAVE_ROUND\n+ifeq ($(USE_EXTERNAL_HARFBUZZ), true)\n+  LIBHARFBUZZ_LIBS := $(HARFBUZZ_LIBS)\n+else\n+  HARFBUZZ_CFLAGS := -DHAVE_OT -DHAVE_FALLBACK -DHAVE_UCDN -DHAVE_ROUND\n@@ -439,6 +442,6 @@\n-# This is better than adding EXPORT_ALL_SYMBOLS\n-ifneq ($(filter $(TOOLCHAIN_TYPE), gcc clang), )\n-  HARFBUZZ_CFLAGS += -DHB_EXTERN=__attribute__\\(\\(visibility\\(\\\"default\\\"\\)\\)\\)\n-else ifeq ($(TOOLCHAIN_TYPE), microsoft)\n-  HARFBUZZ_CFLAGS += -DHB_EXTERN=__declspec\\(dllexport\\)\n-endif\n+  # This is better than adding EXPORT_ALL_SYMBOLS\n+  ifneq ($(filter $(TOOLCHAIN_TYPE), gcc clang), )\n+    HARFBUZZ_CFLAGS += -DHB_EXTERN=__attribute__\\(\\(visibility\\(\\\"default\\\"\\)\\)\\)\n+  else ifeq ($(TOOLCHAIN_TYPE), microsoft)\n+    HARFBUZZ_CFLAGS += -DHB_EXTERN=__declspec\\(dllexport\\)\n+  endif\n@@ -446,2 +449,2 @@\n-ifeq ($(call isTargetOs, windows), false)\n-  HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n+  ifeq ($(call isTargetOs, windows), false)\n+    HARFBUZZ_CFLAGS += -DGETPAGESIZE -DHAVE_MPROTECT -DHAVE_PTHREAD \\\n@@ -450,12 +453,12 @@\n-endif\n-ifeq ($(call isTargetOs, linux macosx), true)\n-  HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES\n-endif\n-ifeq ($(call isTargetOs, macosx), true)\n-  HARFBUZZ_CFLAGS += -DHAVE_CORETEXT\n-endif\n-ifeq ($(call isTargetOs, macosx), false)\n-  LIBHARFBUZZ_EXCLUDE_FILES += harfbuzz\/hb-coretext.cc\n-endif\n-# hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n-LIBHARFBUZZ_EXCLUDE_FILES += harfbuzz\/hb-ft.cc\n+  endif\n+  ifeq ($(call isTargetOs, linux macosx), true)\n+    HARFBUZZ_CFLAGS += -DHAVE_INTEL_ATOMIC_PRIMITIVES\n+  endif\n+  ifeq ($(call isTargetOs, macosx), true)\n+    HARFBUZZ_CFLAGS += -DHAVE_CORETEXT\n+  endif\n+  ifeq ($(call isTargetOs, macosx), false)\n+    LIBHARFBUZZ_EXCLUDE_FILES += harfbuzz\/hb-coretext.cc\n+  endif\n+  # hb-ft.cc is not presently needed, and requires freetype 2.4.2 or later.\n+  LIBHARFBUZZ_EXCLUDE_FILES += harfbuzz\/hb-ft.cc\n@@ -463,1 +466,1 @@\n-LIBHARFBUZZ_CFLAGS += $(HARFBUZZ_CFLAGS)\n+  LIBHARFBUZZ_CFLAGS += $(HARFBUZZ_CFLAGS)\n@@ -465,6 +468,6 @@\n-# For use by libfontmanager:\n-ifeq ($(call isTargetOs, windows), true)\n-  LIBHARFBUZZ_LIBS := $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libharfbuzz\/harfbuzz.lib\n-else\n-  LIBHARFBUZZ_LIBS := -lharfbuzz\n-endif\n+  # For use by libfontmanager:\n+  ifeq ($(call isTargetOs, windows), true)\n+    LIBHARFBUZZ_LIBS := $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libharfbuzz\/harfbuzz.lib\n+  else\n+    LIBHARFBUZZ_LIBS := -lharfbuzz\n+  endif\n@@ -472,1 +475,1 @@\n-LIBHARFBUZZ_EXTRA_HEADER_DIRS := \\\n+  LIBHARFBUZZ_EXTRA_HEADER_DIRS := \\\n@@ -476,16 +479,16 @@\n-LIBHARFBUZZ_OPTIMIZATION := HIGH\n-\n-LIBHARFBUZZ_CFLAGS += $(X_CFLAGS) -DLE_STANDALONE -DHEADLESS\n-\n-$(eval $(call SetupJdkLibrary, BUILD_LIBHARFBUZZ, \\\n-    NAME := harfbuzz, \\\n-    EXCLUDE_FILES := $(LIBHARFBUZZ_EXCLUDE_FILES), \\\n-    TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n-    CFLAGS := $(CFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n-    CXXFLAGS := $(CXXFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n-    OPTIMIZATION := $(LIBHARFBUZZ_OPTIMIZATION), \\\n-    CFLAGS_windows = -DCC_NOEX, \\\n-    EXTRA_HEADER_DIRS := $(LIBHARFBUZZ_EXTRA_HEADER_DIRS), \\\n-    WARNINGS_AS_ERRORS_xlc := false, \\\n-    DISABLED_WARNINGS_gcc := type-limits missing-field-initializers strict-aliasing, \\\n-    DISABLED_WARNINGS_CXX_gcc := reorder delete-non-virtual-dtor strict-overflow \\\n+  LIBHARFBUZZ_OPTIMIZATION := HIGH\n+\n+  LIBHARFBUZZ_CFLAGS += $(X_CFLAGS) -DLE_STANDALONE -DHEADLESS\n+\n+  $(eval $(call SetupJdkLibrary, BUILD_LIBHARFBUZZ, \\\n+      NAME := harfbuzz, \\\n+      EXCLUDE_FILES := $(LIBHARFBUZZ_EXCLUDE_FILES), \\\n+      TOOLCHAIN := TOOLCHAIN_LINK_CXX, \\\n+      CFLAGS := $(CFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n+      CXXFLAGS := $(CXXFLAGS_JDKLIB) $(LIBHARFBUZZ_CFLAGS), \\\n+      OPTIMIZATION := $(LIBHARFBUZZ_OPTIMIZATION), \\\n+      CFLAGS_windows = -DCC_NOEX, \\\n+      EXTRA_HEADER_DIRS := $(LIBHARFBUZZ_EXTRA_HEADER_DIRS), \\\n+      WARNINGS_AS_ERRORS_xlc := false, \\\n+      DISABLED_WARNINGS_gcc := type-limits missing-field-initializers strict-aliasing, \\\n+      DISABLED_WARNINGS_CXX_gcc := reorder delete-non-virtual-dtor strict-overflow \\\n@@ -493,1 +496,1 @@\n-    DISABLED_WARNINGS_clang := unused-value incompatible-pointer-types \\\n+      DISABLED_WARNINGS_clang := unused-value incompatible-pointer-types \\\n@@ -496,2 +499,2 @@\n-    DISABLED_WARNINGS_microsoft := 4267 4244 4090 4146 4334 4819 4101 4068 4805 4138, \\\n-    LDFLAGS := $(LDFLAGS_JDKLIB) \\\n+      DISABLED_WARNINGS_microsoft := 4267 4244 4090 4146 4334 4819 4101 4068 4805 4138, \\\n+      LDFLAGS := $(LDFLAGS_JDKLIB) \\\n@@ -499,7 +502,7 @@\n-    LDFLAGS_unix := -L$(INSTALL_LIBRARIES_HERE), \\\n-    LDFLAGS_aix := -Wl$(COMMA)-berok, \\\n-    LIBS := $(BUILD_LIBHARFBUZZ), \\\n-    LIBS_unix := $(LIBM) $(LIBCXX), \\\n-    LIBS_macosx := -framework CoreText -framework CoreFoundation -framework CoreGraphics, \\\n-    LIBS_windows := user32.lib, \\\n-))\n+      LDFLAGS_unix := -L$(INSTALL_LIBRARIES_HERE), \\\n+      LDFLAGS_aix := -Wl$(COMMA)-berok, \\\n+      LIBS := $(BUILD_LIBHARFBUZZ), \\\n+      LIBS_unix := $(LIBM) $(LIBCXX), \\\n+      LIBS_macosx := -framework CoreText -framework CoreFoundation -framework CoreGraphics, \\\n+      LIBS_windows := user32.lib, \\\n+  ))\n@@ -507,3 +510,3 @@\n-ifeq ($(FREETYPE_TO_USE), bundled)\n-  $(BUILD_LIBHARFBUZZ): $(BUILD_LIBFREETYPE)\n-endif\n+  ifeq ($(FREETYPE_TO_USE), bundled)\n+    $(BUILD_LIBHARFBUZZ): $(BUILD_LIBFREETYPE)\n+  endif\n@@ -511,1 +514,3 @@\n-TARGETS += $(BUILD_LIBHARFBUZZ)\n+  TARGETS += $(BUILD_LIBHARFBUZZ)\n+\n+endif\n@@ -581,1 +586,5 @@\n-$(BUILD_LIBFONTMANAGER): $(BUILD_LIBAWT) $(BUILD_LIBHARFBUZZ)\n+$(BUILD_LIBFONTMANAGER): $(BUILD_LIBAWT)\n+\n+ifeq ($(USE_EXTERNAL_HARFBUZZ), false)\n+  $(BUILD_LIBFONTMANAGER): $(BUILD_LIBHARFBUZZ)\n+endif\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":69,"deletions":60,"binary":false,"changes":129,"status":"modified"}]}