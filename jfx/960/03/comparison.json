{"files":[{"patch":"@@ -69,1 +69,1 @@\n-    private final static Map <String, Clipboard> clipboards  = new HashMap <String, Clipboard> ();\n+    private final static Map<String, Clipboard> clipboards = new HashMap<>();\n@@ -72,1 +72,1 @@\n-    private final HashSet <ClipboardAssistance> assistants  =  new HashSet <ClipboardAssistance> ();\n+    private final HashSet<ClipboardAssistance> assistants = new HashSet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Clipboard.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    private final HashMap <String, Object> cacheData  =  new HashMap <String, Object> ();\n+    private final HashMap<String, Object> cacheData = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ClipboardAssistance.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-        List<File> list = new ArrayList<File>();\n+        List<File> list = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/CommonDialogs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private static final Deque<EventLoop> stack = new ArrayDeque<EventLoop>();\n+    private static final Deque<EventLoop> stack = new ArrayDeque<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/EventLoop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import java.util.*;\n@@ -46,1 +45,1 @@\n-    private final BlockingDeque<Runnable> deque = new LinkedBlockingDeque<Runnable>();\n+    private final BlockingDeque<Runnable> deque = new LinkedBlockingDeque<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/InvokeLaterDispatcher.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.glass.ui.Pixels;\n@@ -61,1 +60,1 @@\n-    private final List<Object> items = new ArrayList<Object>();\n+    private final List<Object> items = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Menu.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    private final List<Menu> menus = new ArrayList<Menu>();\n+    private final List<Menu> menus = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/MenuBar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,3 +27,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Size.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-            this.period = (double)period;\n+            this.period = period;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Timer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -928,1 +928,1 @@\n-                View.lastClickedView = new WeakReference<View>(this);\n+                View.lastClickedView = new WeakReference<>(this);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/View.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import java.util.Map;\n@@ -87,1 +86,1 @@\n-    static private final LinkedList<Window> visibleWindows = new LinkedList<Window>();\n+    static private final LinkedList<Window> visibleWindows = new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Window.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/android\/Activity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,3 +27,0 @@\n-import javafx.application.Platform;\n-import javafx.scene.Node;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/android\/DalvikInput.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkClipboardDelegate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkDnDClipboard.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+    @Override\n@@ -39,0 +40,1 @@\n+    @Override\n@@ -43,0 +45,1 @@\n+    @Override\n@@ -47,0 +50,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkMenuBarDelegate.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+    @Override\n@@ -40,0 +41,1 @@\n+    @Override\n@@ -44,0 +46,1 @@\n+    @Override\n@@ -48,1 +51,2 @@\n-   public boolean setPixels(Pixels pixels) {\n+    @Override\n+    public boolean setPixels(Pixels pixels) {\n@@ -52,0 +56,1 @@\n+    @Override\n@@ -56,0 +61,1 @@\n+    @Override\n@@ -60,0 +66,1 @@\n+    @Override\n@@ -64,0 +71,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkMenuDelegate.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+    @Override\n@@ -40,0 +41,1 @@\n+    @Override\n@@ -44,0 +46,1 @@\n+    @Override\n@@ -48,0 +51,1 @@\n+    @Override\n@@ -52,0 +56,1 @@\n+    @Override\n@@ -56,0 +61,1 @@\n+    @Override\n@@ -60,0 +66,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkMenuItemDelegate.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import com.sun.glass.ui.Window;\n@@ -56,0 +55,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkPlatformFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-@SuppressWarnings({\"UnusedDeclaration\"})\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosPlatformFactory.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-                java.util.ArrayList<String> list = new java.util.ArrayList<String>();\n+                java.util.ArrayList<String> list = new java.util.ArrayList<>();\n@@ -211,1 +211,1 @@\n-                java.util.ArrayList<Pixels> list = new java.util.ArrayList<Pixels>();\n+                java.util.ArrayList<Pixels> list = new java.util.ArrayList<>();\n@@ -228,1 +228,1 @@\n-                java.util.ArrayList<String> list = new java.util.ArrayList<String>();\n+                java.util.ArrayList<String> list = new java.util.ArrayList<>();\n@@ -243,1 +243,1 @@\n-                java.util.ArrayList<String> list = new java.util.ArrayList<String>();\n+                java.util.ArrayList<String> list = new java.util.ArrayList<>();\n@@ -258,1 +258,1 @@\n-                java.util.ArrayList<ByteBuffer> list = new java.util.ArrayList<ByteBuffer>();\n+                java.util.ArrayList<ByteBuffer> list = new java.util.ArrayList<>();\n@@ -287,1 +287,1 @@\n-        java.util.ArrayList<String> mimes = new java.util.ArrayList<String>();\n+        java.util.ArrayList<String> mimes = new java.util.ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosSystemClipboard.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1122,1 +1122,1 @@\n-            if (i == maxCount) return NSAccessibilityUnignoredChildren(result);;\n+            if (i == maxCount) return NSAccessibilityUnignoredChildren(result);\n@@ -1459,1 +1459,0 @@\n-                        @SuppressWarnings(\"deprecation\")\n@@ -1509,1 +1508,1 @@\n-                result = (Integer)text.length();\n+                result = text.length();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacAccessible.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -376,0 +376,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacApplication.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacClipboardDelegate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.glass.ui.Application;\n@@ -31,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacGestureSupport.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,3 +27,0 @@\n-import java.nio.ByteBuffer;\n-\n-import com.sun.glass.ui.Application;\n@@ -33,1 +30,0 @@\n-import com.sun.glass.ui.delegate.MenuBarDelegate;\n@@ -36,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacMenuDelegate.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.glass.ui.Application;\n@@ -33,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacPixels.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.glass.ui.Application;\n@@ -29,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacTimer.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-            new HashMap<Long, WeakReference<View>>();\n+            new HashMap<>();\n@@ -63,1 +63,1 @@\n-    };\n+    }\n@@ -75,1 +75,1 @@\n-        curTouchPoints = new ArrayList<TouchPoint>(touchEventCount);\n+        curTouchPoints = new ArrayList<>(touchEventCount);\n@@ -107,1 +107,1 @@\n-            touchIdToView.put(id, new WeakReference<View>(view));\n+            touchIdToView.put(id, new WeakReference<>(view));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacTouchInputSupport.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import com.sun.glass.ui.Window.State;\n@@ -36,2 +35,0 @@\n-import java.util.Map;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacWindow.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -42,0 +39,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AndroidAcceleratedScreen.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.io.IOException;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AndroidInputDevice.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-            MonocleWindow window = (MonocleWindow) MonocleWindowManager.getInstance().getFocusedWindow();\n+            MonocleWindow window = MonocleWindowManager.getInstance().getFocusedWindow();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AndroidInputProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+    @Override\n@@ -44,0 +45,1 @@\n+    @Override\n@@ -51,0 +53,1 @@\n+    @Override\n@@ -59,0 +62,1 @@\n+    @Override\n@@ -66,0 +70,1 @@\n+    @Override\n@@ -81,0 +86,1 @@\n+    @Override\n@@ -89,0 +95,1 @@\n+    @Override\n@@ -104,0 +111,1 @@\n+    @Override\n@@ -113,0 +121,1 @@\n+    @Override\n@@ -121,0 +130,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/AndroidScreen.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    EGLAcceleratedScreen(int[] attributes) throws GLException {\n+    EGLAcceleratedScreen(int[] attributes) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/EGLAcceleratedScreen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,0 +147,1 @@\n+    @Override\n@@ -164,0 +165,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/IntSet.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,2 +80,1 @@\n-            window = (MonocleWindow)\n-                    MonocleWindowManager.getInstance().getFocusedWindow();\n+            window = MonocleWindowManager.getInstance().getFocusedWindow();\n@@ -114,0 +113,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/KeyState.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-                                           long fd, int axis) throws IOException {\n+                                           long fd, int axis) {\n@@ -84,2 +84,1 @@\n-        Map<Integer, LinuxAbsoluteInputCapabilities> caps =\n-                new HashMap<Integer, LinuxAbsoluteInputCapabilities>();\n+        Map<Integer, LinuxAbsoluteInputCapabilities> caps = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxAbsoluteInputCapabilities.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    });;\n+    });\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxArch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+        @Override\n@@ -45,0 +46,1 @@\n+        @Override\n@@ -46,0 +48,1 @@\n+        @Override\n@@ -47,0 +50,1 @@\n+        @Override\n@@ -51,0 +55,1 @@\n+        @Override\n@@ -52,0 +57,1 @@\n+        @Override\n@@ -53,0 +59,1 @@\n+        @Override\n@@ -54,0 +61,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxEventBuffer.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -176,0 +176,1 @@\n+        @Override\n@@ -214,0 +215,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxInputDevice.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,2 +41,1 @@\n-    private final Map<Integer, Integer> slotToIDMap =\n-            new HashMap<Integer, Integer>();\n+    private final Map<Integer, Integer> slotToIDMap = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxStatefulMultiTouchProcessor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-            scalars[index] = ((double) (range)) \/ (maximum - minimum);\n+            scalars[index] = range \/ (maximum - minimum);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/LinuxTouchTransform.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -262,0 +262,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleApplication.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    @Override\n@@ -46,0 +47,1 @@\n+    @Override\n@@ -50,0 +52,1 @@\n+    @Override\n@@ -52,0 +55,1 @@\n+    @Override\n@@ -56,0 +60,1 @@\n+    @Override\n@@ -60,0 +65,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleSystemClipboard.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        List<MonocleWindow> windowsToNotify = new ArrayList<MonocleWindow>();\n+        List<MonocleWindow> windowsToNotify = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleWindowManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,2 +95,1 @@\n-            window = (MonocleWindow)\n-                    MonocleWindowManager.getInstance().getWindowForLocation(x, y);\n+            window = MonocleWindowManager.getInstance().getWindowForLocation(x, y);\n@@ -152,0 +151,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MouseState.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    private LinkedList<RunLoopControl> activeRunLoops = new LinkedList<RunLoopControl>();\n+    private LinkedList<RunLoopControl> activeRunLoops = new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/RunnableProcessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import java.nio.IntBuffer;\n-import java.nio.LongBuffer;\n@@ -48,1 +46,1 @@\n-        Map<String, BitSet> capsMap = new HashMap<String, BitSet>();\n+        Map<String, BitSet> capsMap = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/SysFS.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private ArrayList<TouchFilter> filters = new ArrayList<TouchFilter>();\n+    private ArrayList<TouchFilter> filters = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/TouchPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -89,3 +89,1 @@\n-                    window = (MonocleWindow)\n-                            MonocleWindowManager.getInstance()\n-                                    .getWindowForLocation(p.x, p.y);\n+                    window = MonocleWindowManager.getInstance().getWindowForLocation(p.x, p.y);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/TouchState.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,0 +97,1 @@\n+                    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/Udev.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private Set<ClientConnection> clients = new HashSet<ClientConnection>();\n+    private Set<ClientConnection> clients = new HashSet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/VNCScreen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,0 +179,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.io.IOException;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/X11Cursor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -779,1 +779,1 @@\n-                variant.bstrVal = (String)name;\n+                variant.bstrVal = name;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinAccessible.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,2 +39,0 @@\n-import java.util.Iterator;\n-import java.util.Locale;\n@@ -89,0 +87,1 @@\n+            @Override\n@@ -366,0 +365,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinApplication.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinClipboardDelegate.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.glass.ui.Application;\n@@ -33,1 +32,0 @@\n-import java.util.List;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinCommonDialogs.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.glass.ui.Application;\n@@ -31,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinGestureSupport.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,4 +35,0 @@\n-import java.io.File;\n-\n-import java.net.URL;\n-\n@@ -40,5 +36,0 @@\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.SortedMap;\n-import java.util.ArrayList;\n@@ -169,2 +160,2 @@\n-                };\n-            };\n+                }\n+            }\n@@ -281,1 +272,1 @@\n-        EHTMLReadMode _readMode) throws IOException\n+        EHTMLReadMode _readMode)\n@@ -384,1 +375,1 @@\n-                        };\n+                        }\n@@ -440,0 +431,1 @@\n+    @Override\n@@ -460,0 +452,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinHTMLCodec.java","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import com.sun.glass.ui.Application;\n-import com.sun.glass.ui.Menu;\n@@ -32,2 +30,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinMenuImpl.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        private static List<Integer> freeList = new ArrayList<Integer>();\n+        private static List<Integer> freeList = new ArrayList<>();\n@@ -140,2 +140,1 @@\n-        final private static Map<Integer, WinMenuItemDelegate> map =\n-                new HashMap<Integer, WinMenuItemDelegate>();\n+        final private static Map<Integer, WinMenuItemDelegate> map = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinMenuItemDelegate.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.glass.ui.Application;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinPixels.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -56,0 +54,1 @@\n+    @Override\n@@ -221,0 +220,1 @@\n+    @Override\n@@ -223,1 +223,1 @@\n-        Set<String> mimesForSystem = new HashSet<String>();\n+        Set<String> mimesForSystem = new HashSet<>();\n@@ -238,0 +238,1 @@\n+    @Override\n@@ -325,0 +326,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinSystemClipboard.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.glass.ui.Application;\n@@ -29,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinTimer.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-import com.sun.glass.ui.Application;\n@@ -30,4 +29,0 @@\n-import com.sun.glass.ui.Window;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinView.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private static final HashSet<String> loaded = new HashSet<String>();\n+    private static final HashSet<String> loaded = new HashSet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/utils\/NativeLibLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.net.MalformedURLException;\n@@ -536,1 +535,1 @@\n-                ArrayList<URL> urlList = new ArrayList<URL>();\n+                ArrayList<URL> urlList = new ArrayList<>();\n@@ -559,1 +558,1 @@\n-                URL[] urls = (URL[])urlList.toArray(new URL[0]);\n+                URL[] urls = urlList.toArray(new URL[0]);\n@@ -578,1 +577,1 @@\n-    private static String decodeBase64(String inp) throws IOException {\n+    private static String decodeBase64(String inp) {\n@@ -585,7 +584,6 @@\n-        try {\n-            int idx = 1;\n-            String argNamePrefix = MF_JAVAFX_ARGUMENT_PREFIX;\n-            while (attrs.getValue(argNamePrefix + idx) != null) {\n-                args.add(decodeBase64(attrs.getValue(argNamePrefix + idx)));\n-                idx++;\n-            }\n+        int idx = 1;\n+        String argNamePrefix = MF_JAVAFX_ARGUMENT_PREFIX;\n+        while (attrs.getValue(argNamePrefix + idx) != null) {\n+            args.add(decodeBase64(attrs.getValue(argNamePrefix + idx)));\n+            idx++;\n+        }\n@@ -593,15 +591,8 @@\n-            String paramNamePrefix = MF_JAVAFX_PARAMETER_NAME_PREFIX;\n-            String paramValuePrefix = MF_JAVAFX_PARAMETER_VALUE_PREFIX;\n-            idx = 1;\n-            while (attrs.getValue(paramNamePrefix + idx) != null) {\n-                String k = decodeBase64(attrs.getValue(paramNamePrefix + idx));\n-                String v = null;\n-                if (attrs.getValue(paramValuePrefix + idx) != null) {\n-                    v = decodeBase64(attrs.getValue(paramValuePrefix + idx));\n-                }\n-                args.add(\"--\" + k + \"=\" + (v != null ? v : \"\"));\n-                idx++;\n-            }\n-        } catch (IOException ioe) {\n-            if (verbose) {\n-                System.err.println(\"Failed to extract application parameters\");\n+        String paramNamePrefix = MF_JAVAFX_PARAMETER_NAME_PREFIX;\n+        String paramValuePrefix = MF_JAVAFX_PARAMETER_VALUE_PREFIX;\n+        idx = 1;\n+        while (attrs.getValue(paramNamePrefix + idx) != null) {\n+            String k = decodeBase64(attrs.getValue(paramNamePrefix + idx));\n+            String v = null;\n+            if (attrs.getValue(paramValuePrefix + idx) != null) {\n+                v = decodeBase64(attrs.getValue(paramValuePrefix + idx));\n@@ -609,1 +600,2 @@\n-            ioe.printStackTrace();\n+            args.add(\"--\" + k + \"=\" + (v != null ? v : \"\"));\n+            idx++;\n@@ -791,1 +783,1 @@\n-                            notifyProgress(currentPreloader, (double)i \/ 100.0);\n+                            notifyProgress(currentPreloader, i \/ 100.0);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/LauncherImpl.java","additions":20,"deletions":28,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n-    private List<String> rawArgs = new ArrayList<String>();\n-    private Map<String, String> namedParams = new HashMap<String, String>();\n-    private List<String> unnamedParams = new ArrayList<String>();\n+    private List<String> rawArgs = new ArrayList<>();\n+    private Map<String, String> namedParams = new HashMap<>();\n+    private List<String> unnamedParams = new ArrayList<>();\n@@ -54,2 +54,1 @@\n-    private static Map<Application, Parameters> params =\n-        new HashMap<Application, Parameters>();\n+    private static Map<Application, Parameters> params = new HashMap<>();\n@@ -224,1 +223,1 @@\n-        ArrayList<String> keys = new ArrayList<String>();\n+        ArrayList<String> keys = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/ParametersImpl.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -79,2 +79,1 @@\n-    private static Set<FinishListener> finishListeners =\n-            new CopyOnWriteArraySet<FinishListener>();\n+    private static Set<FinishListener> finishListeners = new CopyOnWriteArraySet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        return new Iterator<T>() {\n+        return new Iterator<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -184,1 +184,1 @@\n-        };\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/CascadingStyle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+        @Override\n@@ -34,0 +35,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/Combinator.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,0 +192,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ParsedValueImpl.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-        List<String> strings = new ArrayList<String>();\n+        List<String> strings = new ArrayList<>();\n@@ -169,1 +169,1 @@\n-            new HashMap<String,Integer>(64);\n+            new HashMap<>(64);\n@@ -172,1 +172,1 @@\n-            new ArrayList<PseudoClass>();\n+            new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/PseudoClassState.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            slots = new HashMap<PartitionKey,Slot>();\n+            slots = new HashMap<>();\n@@ -117,1 +117,1 @@\n-                selectors = new ArrayList<Selector>();\n+                selectors = new ArrayList<>();\n@@ -156,1 +156,1 @@\n-            this.referents = new HashMap<PartitionKey, Slot>();\n+            this.referents = new HashMap<>();\n@@ -161,1 +161,1 @@\n-                selectors = new ArrayList<Selector>();\n+                selectors = new ArrayList<>();\n@@ -185,1 +185,1 @@\n-    private final Map<PartitionKey, Partition> idMap = new HashMap<PartitionKey,Partition>();\n+    private final Map<PartitionKey, Partition> idMap = new HashMap<>();\n@@ -188,1 +188,1 @@\n-    private final Map<PartitionKey, Partition> typeMap = new HashMap<PartitionKey,Partition>();\n+    private final Map<PartitionKey, Partition> typeMap = new HashMap<>();\n@@ -191,1 +191,1 @@\n-    private final Map<PartitionKey, Partition> styleClassMap = new HashMap<PartitionKey,Partition>();\n+    private final Map<PartitionKey, Partition> styleClassMap = new HashMap<>();\n@@ -229,1 +229,1 @@\n-    private static final PartitionKey WILDCARD = new PartitionKey<String>(\"*\");\n+    private static final PartitionKey WILDCARD = new PartitionKey<>(\"*\");\n@@ -261,1 +261,1 @@\n-                ? new PartitionKey<Set<StyleClass>>(selectorStyleClass)\n+                ? new PartitionKey<>(selectorStyleClass)\n@@ -324,1 +324,1 @@\n-                ? new PartitionKey<Set<StyleClass>>(selectorStyleClass)\n+                ? new PartitionKey<>(selectorStyleClass)\n@@ -332,1 +332,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SelectorPartitioning.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -161,2 +161,1 @@\n-    static final Map<String,Integer> styleClassMap =\n-            new HashMap<String,Integer>(64);\n+    static final Map<String,Integer> styleClassMap = new HashMap<>(64);\n@@ -164,2 +163,1 @@\n-    static final List<StyleClass> styleClasses =\n-            new ArrayList<StyleClass>();\n+    static final List<StyleClass> styleClasses = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleClassSet.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -331,1 +331,1 @@\n-            this.parentUsers = new RefList<Parent>();\n+            this.parentUsers = new RefList<>();\n@@ -372,1 +372,1 @@\n-        final List<Reference<K>> list = new ArrayList<Reference<K>>();\n+        final List<Reference<K>> list = new ArrayList<>();\n@@ -390,1 +390,1 @@\n-            list.add(new WeakReference<K>(key));\n+            list.add(new WeakReference<>(key));\n@@ -1583,1 +1583,1 @@\n-            final List<StylesheetContainer> list = new ArrayList<StylesheetContainer>();\n+            final List<StylesheetContainer> list = new ArrayList<>();\n@@ -1967,1 +1967,1 @@\n-            if (styleCache == null) styleCache = new HashMap<StyleCache.Key, StyleCache>();\n+            if (styleCache == null) styleCache = new HashMap<>();\n@@ -1974,1 +1974,1 @@\n-                cacheMap = new HashMap<List<String>,Map<Key,Cache>>();\n+                cacheMap = new HashMap<>();\n@@ -1983,1 +1983,1 @@\n-                        cmap = new HashMap<Key,Cache>();\n+                        cmap = new HashMap<>();\n@@ -1992,1 +1992,1 @@\n-                        cacheMapKey = new ArrayList<String>(nMax);\n+                        cacheMapKey = new ArrayList<>(nMax);\n@@ -2004,1 +2004,1 @@\n-                        cmap = new HashMap<Key,Cache>();\n+                        cmap = new HashMap<>();\n@@ -2020,1 +2020,1 @@\n-            if (styleMapList == null) styleMapList = new ArrayList<StyleMap>();\n+            if (styleMapList == null) styleMapList = new ArrayList<>();\n@@ -2194,1 +2194,1 @@\n-            this.cache = new HashMap<Key, Integer>();\n+            this.cache = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/StyleManager.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            otherPlatformCursors = new HashMap<Class<?>, Object>();\n+            otherPlatformCursors = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/cursor\/CursorFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,0 +147,1 @@\n+                @Override\n@@ -159,0 +160,1 @@\n+                @Override\n@@ -178,1 +180,1 @@\n-                                    list = new ArrayList<String>();\n+                                    list = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/AndroidFontFinder.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -222,0 +222,1 @@\n+        @Override\n@@ -292,0 +293,1 @@\n+        @Override\n@@ -361,0 +363,1 @@\n+        @Override\n@@ -432,1 +435,2 @@\n-         char getGlyph(int charCode) {\n+         @Override\n+        char getGlyph(int charCode) {\n@@ -456,0 +460,1 @@\n+        @Override\n@@ -488,1 +493,2 @@\n-         char getGlyph(int charCode) {\n+         @Override\n+        char getGlyph(int charCode) {\n@@ -563,0 +569,1 @@\n+        @Override\n@@ -597,0 +604,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/CMap.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        glyphMap = new HashMap<Integer, Integer>();\n+        glyphMap = new HashMap<>();\n@@ -80,0 +80,1 @@\n+    @Override\n@@ -142,0 +143,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/CompositeGlyphMapper.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    @Override\n@@ -85,0 +86,1 @@\n+    @Override\n@@ -98,0 +100,1 @@\n+    @Override\n@@ -129,0 +132,1 @@\n+    @Override\n@@ -137,0 +141,1 @@\n+    @Override\n@@ -141,0 +146,1 @@\n+    @Override\n@@ -147,0 +153,1 @@\n+    @Override\n@@ -155,0 +162,1 @@\n+    @Override\n@@ -160,0 +168,1 @@\n+    @Override\n@@ -173,0 +182,1 @@\n+    @Override\n@@ -183,0 +193,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/CompositeStrike.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,4 +29,0 @@\n-import com.sun.javafx.font.DisposerRecord;\n-import com.sun.javafx.font.FontResource;\n-import com.sun.javafx.font.FontStrikeDesc;\n-\n@@ -44,0 +40,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/CompositeStrikeDisposer.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+                @Override\n@@ -91,0 +92,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/Disposer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,2 +53,1 @@\n-    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap =\n-       new ConcurrentHashMap<FontStrikeDesc, WeakReference<FontStrike>>();\n+    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap = new ConcurrentHashMap<>();\n@@ -57,0 +56,1 @@\n+    @Override\n@@ -87,0 +87,1 @@\n+    @Override\n@@ -100,0 +101,1 @@\n+    @Override\n@@ -104,0 +106,1 @@\n+    @Override\n@@ -108,0 +111,1 @@\n+    @Override\n@@ -112,0 +116,1 @@\n+    @Override\n@@ -116,0 +121,1 @@\n+    @Override\n@@ -120,0 +126,1 @@\n+    @Override\n@@ -124,0 +131,1 @@\n+    @Override\n@@ -129,0 +137,1 @@\n+    @Override\n@@ -133,0 +142,1 @@\n+    @Override\n@@ -138,0 +148,1 @@\n+    @Override\n@@ -142,0 +153,1 @@\n+    @Override\n@@ -146,0 +158,1 @@\n+    @Override\n@@ -150,0 +163,1 @@\n+    @Override\n@@ -154,0 +168,1 @@\n+    @Override\n@@ -158,0 +173,1 @@\n+    @Override\n@@ -165,0 +181,1 @@\n+    @Override\n@@ -244,0 +261,1 @@\n+    @Override\n@@ -253,0 +271,1 @@\n+    @Override\n@@ -261,0 +280,1 @@\n+    @Override\n@@ -268,0 +288,1 @@\n+    @Override\n@@ -287,0 +308,1 @@\n+    @Override\n@@ -291,0 +313,1 @@\n+    @Override\n@@ -306,1 +329,1 @@\n-                ref = new WeakReference<FontStrike>(strike);\n+                ref = new WeakReference<>(strike);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FallbackResource.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -481,2 +481,1 @@\n-                ArrayList<FontConfigFont> allFonts =\n-                      new ArrayList<FontConfigFont>();\n+                ArrayList<FontConfigFont> allFonts = new ArrayList<>();\n@@ -597,1 +596,1 @@\n-                        familyArr = new ArrayList<String>(4);\n+                        familyArr = new ArrayList<>(4);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontConfigManager.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -218,3 +218,1 @@\n-    public void writeDirectoryEntry(int index, int tag,\n-            int checksum, int offset, int length) throws IOException\n-    {\n+    public void writeDirectoryEntry(int index, int tag, int checksum, int offset, int length) {\n@@ -228,1 +226,1 @@\n-    private void writeInt(int value) throws IOException {\n+    private void writeInt(int value) {\n@@ -235,1 +233,1 @@\n-    private void writeShort(short value) throws IOException {\n+    private void writeShort(short value) {\n@@ -344,2 +342,1 @@\n-            private static HashMap<File, RandomAccessFile> files =\n-                new HashMap<File, RandomAccessFile>();\n+            private static HashMap<File, RandomAccessFile> files = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontFileWriter.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -58,6 +58,6 @@\n-                aaMode+\n-                Float.floatToIntBits(size)+\n-                Float.floatToIntBits((float)matrix[0])+\n-                Float.floatToIntBits((float)matrix[1])+\n-                Float.floatToIntBits((float)matrix[2])+\n-                Float.floatToIntBits((float)matrix[3]);\n+                aaMode +\n+                Float.floatToIntBits(size) +\n+                Float.floatToIntBits(matrix[0]) +\n+                Float.floatToIntBits(matrix[1]) +\n+                Float.floatToIntBits(matrix[2]) +\n+                Float.floatToIntBits(matrix[3]);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontStrikeDesc.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -229,0 +229,1 @@\n+    @Override\n@@ -238,0 +239,1 @@\n+    @Override\n@@ -290,0 +292,1 @@\n+    @Override\n@@ -317,0 +320,1 @@\n+    @Override\n@@ -321,0 +325,1 @@\n+    @Override\n@@ -325,0 +330,1 @@\n+    @Override\n@@ -329,0 +335,1 @@\n+    @Override\n@@ -333,0 +340,1 @@\n+    @Override\n@@ -337,0 +345,1 @@\n+    @Override\n@@ -341,0 +350,1 @@\n+    @Override\n@@ -345,0 +355,1 @@\n+    @Override\n@@ -349,0 +360,1 @@\n+    @Override\n@@ -353,0 +365,1 @@\n+    @Override\n@@ -357,0 +370,1 @@\n+    @Override\n@@ -361,0 +375,1 @@\n+    @Override\n@@ -365,0 +380,1 @@\n+    @Override\n@@ -369,0 +385,1 @@\n+    @Override\n@@ -373,0 +390,1 @@\n+    @Override\n@@ -381,0 +399,1 @@\n+    @Override\n@@ -389,0 +408,1 @@\n+    @Override\n@@ -397,2 +417,1 @@\n-    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap =\n-        new ConcurrentHashMap<FontStrikeDesc, WeakReference<FontStrike>>();\n+    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap = new ConcurrentHashMap<>();\n@@ -400,0 +419,1 @@\n+    @Override\n@@ -404,0 +424,1 @@\n+    @Override\n@@ -408,0 +429,1 @@\n+    @Override\n@@ -412,0 +434,1 @@\n+    @Override\n@@ -426,1 +449,1 @@\n-                ref = new WeakReference<FontStrike>(strike);\n+                ref = new WeakReference<>(strike);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/LogicalFont.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-                list = new ArrayList<String>();\n+                list = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/MacFontFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/OpenTypeGlyphMapper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    @Override\n@@ -67,0 +68,1 @@\n+    @Override\n@@ -74,0 +76,1 @@\n+    @Override\n@@ -87,0 +90,1 @@\n+    @Override\n@@ -91,0 +95,1 @@\n+    @Override\n@@ -95,0 +100,1 @@\n+    @Override\n@@ -99,0 +105,1 @@\n+    @Override\n@@ -103,0 +110,1 @@\n+    @Override\n@@ -107,0 +115,1 @@\n+    @Override\n@@ -111,0 +120,1 @@\n+    @Override\n@@ -115,0 +125,1 @@\n+    @Override\n@@ -119,0 +130,1 @@\n+    @Override\n@@ -123,0 +135,1 @@\n+    @Override\n@@ -127,0 +140,1 @@\n+    @Override\n@@ -131,0 +145,1 @@\n+    @Override\n@@ -135,0 +150,1 @@\n+    @Override\n@@ -139,0 +155,1 @@\n+    @Override\n@@ -144,0 +161,1 @@\n+    @Override\n@@ -151,0 +169,1 @@\n+    @Override\n@@ -159,0 +178,1 @@\n+    @Override\n@@ -166,2 +186,1 @@\n-    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap =\n-        new ConcurrentHashMap<FontStrikeDesc, WeakReference<FontStrike>>();\n+    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap = new ConcurrentHashMap<>();\n@@ -169,0 +188,1 @@\n+    @Override\n@@ -173,0 +193,1 @@\n+    @Override\n@@ -177,0 +198,1 @@\n+    @Override\n@@ -181,0 +203,1 @@\n+    @Override\n@@ -194,1 +217,1 @@\n-                ref = new WeakReference<FontStrike>(strike);\n+                ref = new WeakReference<>(strike);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismCompositeFontResource.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    @Override\n@@ -48,0 +49,1 @@\n+    @Override\n@@ -52,0 +54,1 @@\n+    @Override\n@@ -64,0 +67,1 @@\n+    @Override\n@@ -68,0 +72,1 @@\n+    @Override\n@@ -72,0 +77,1 @@\n+    @Override\n@@ -76,0 +82,1 @@\n+    @Override\n@@ -81,0 +88,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFont.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,2 +81,1 @@\n-    HashMap<String, FontResource> fontResourceMap =\n-        new HashMap<String, FontResource>();\n+    HashMap<String, FontResource> fontResourceMap = new HashMap<>();\n@@ -84,2 +83,1 @@\n-    HashMap<String, CompositeFontResource> compResourceMap =\n-        new HashMap<String, CompositeFontResource>();\n+    HashMap<String, CompositeFontResource> compResourceMap = new HashMap<>();\n@@ -219,2 +217,1 @@\n-    private HashMap<String, PrismFontFile>\n-        fileNameToFontResourceMap = new HashMap<String, PrismFontFile>();\n+    private HashMap<String, PrismFontFile> fileNameToFontResourceMap = new HashMap<>();\n@@ -377,1 +374,1 @@\n-            tmpFonts = new ArrayList<WeakReference<PrismFontFile>>();\n+            tmpFonts = new ArrayList<>();\n@@ -387,1 +384,1 @@\n-            ref = new WeakReference<PrismFontFile>(fr);\n+            ref = new WeakReference<>(fr);\n@@ -557,0 +554,1 @@\n+    @Override\n@@ -576,0 +574,1 @@\n+    @Override\n@@ -635,0 +634,1 @@\n+    @Override\n@@ -939,2 +939,2 @@\n-        fontRegInfo[0] = new ArrayList<String>();\n-        fontRegInfo[1] = new ArrayList<String>();\n+        fontRegInfo[0] = new ArrayList<>();\n+        fontRegInfo[1] = new ArrayList<>();\n@@ -1074,1 +1074,1 @@\n-                        unmappedFontNames = new ArrayList<String>();\n+                        unmappedFontNames = new ArrayList<>();\n@@ -1082,1 +1082,1 @@\n-            HashSet<String> unmappedFontFiles = new HashSet<String>();\n+            HashSet<String> unmappedFontFiles = new HashSet<>();\n@@ -1085,1 +1085,1 @@\n-            HashMap<String,String> ffmapCopy = new HashMap<String,String>();\n+            HashMap<String,String> ffmapCopy = new HashMap<>();\n@@ -1175,1 +1175,1 @@\n-                                familylist = new ArrayList<String>();\n+                                familylist = new ArrayList<>();\n@@ -1216,0 +1216,1 @@\n+                @Override\n@@ -1234,0 +1235,1 @@\n+    @Override\n@@ -1241,1 +1243,1 @@\n-            ArrayList<String> familyNames = new ArrayList<String>();\n+            ArrayList<String> familyNames = new ArrayList<>();\n@@ -1261,1 +1263,1 @@\n-            allFamilyNames = new ArrayList<String>(familyNames);\n+            allFamilyNames = new ArrayList<>(familyNames);\n@@ -1267,0 +1269,1 @@\n+    @Override\n@@ -1274,1 +1277,1 @@\n-            ArrayList<String> fontNames = new ArrayList<String>();\n+            ArrayList<String> fontNames = new ArrayList<>();\n@@ -1295,0 +1298,1 @@\n+    @Override\n@@ -1309,1 +1313,1 @@\n-                        embeddedFamily = new ArrayList<String>();\n+                        embeddedFamily = new ArrayList<>();\n@@ -1413,0 +1417,1 @@\n+    @Override\n@@ -1521,0 +1526,1 @@\n+    @Override\n@@ -1608,1 +1614,1 @@\n-            embeddedFonts = new HashMap<String, PrismFontFile>();\n+            embeddedFonts = new HashMap<>();\n@@ -1708,5 +1714,4 @@\n-            HashMap<String, String>\n-                tmpFontToFileMap = new HashMap<String,String>(100);\n-            fontToFamilyNameMap = new HashMap<String,String>(100);\n-            familyToFontListMap = new HashMap<String,ArrayList<String>>(50);\n-            fileToFontMap = new HashMap<String,String>(100);\n+            HashMap<String, String> tmpFontToFileMap = new HashMap<>(100);\n+            fontToFamilyNameMap = new HashMap<>(100);\n+            familyToFontListMap = new HashMap<>(50);\n+            fileToFontMap = new HashMap<>(100);\n@@ -1793,0 +1798,1 @@\n+    @Override\n@@ -1807,0 +1813,1 @@\n+        @Override\n@@ -1854,1 +1861,1 @@\n-            familyList = new ArrayList<String>();\n+            familyList = new ArrayList<>();\n@@ -1923,1 +1930,1 @@\n-                    systemFontSize = ((float) screenDPI) \/ 6f; \/\/ 12 points\n+                    systemFontSize = screenDPI \/ 6f; \/\/ 12 points\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontFactory.java","additions":33,"deletions":26,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -90,2 +90,1 @@\n-    Map<FontStrikeDesc, WeakReference<PrismFontStrike>> strikeMap =\n-        new ConcurrentHashMap<FontStrikeDesc, WeakReference<PrismFontStrike>>();\n+    Map<FontStrikeDesc, WeakReference<PrismFontStrike>> strikeMap = new ConcurrentHashMap<>();\n@@ -153,0 +152,1 @@\n+    @Override\n@@ -222,0 +222,1 @@\n+        @Override\n@@ -266,0 +267,1 @@\n+    @Override\n@@ -278,0 +280,1 @@\n+    @Override\n@@ -282,0 +285,1 @@\n+    @Override\n@@ -289,0 +293,1 @@\n+    @Override\n@@ -293,0 +298,1 @@\n+    @Override\n@@ -297,0 +303,1 @@\n+    @Override\n@@ -301,0 +308,1 @@\n+    @Override\n@@ -305,0 +313,1 @@\n+    @Override\n@@ -312,0 +321,1 @@\n+    @Override\n@@ -317,0 +327,1 @@\n+    @Override\n@@ -326,0 +337,1 @@\n+    @Override\n@@ -340,1 +352,1 @@\n-                ref = new WeakReference<PrismFontStrike>(strike);\n+                ref = new WeakReference<>(strike);\n@@ -362,1 +374,1 @@\n-            bbCache = new HashMap<Integer, int[]>();\n+            bbCache = new HashMap<>();\n@@ -391,0 +403,1 @@\n+    @Override\n@@ -395,0 +408,1 @@\n+    @Override\n@@ -551,1 +565,1 @@\n-            upem = (float)(headTable.getShort(18) & 0xffff);\n+            upem = headTable.getShort(18) & 0xffff;\n@@ -572,1 +586,1 @@\n-                linegap = (float)hhea.getShort(8);\n+                linegap = hhea.getShort(8);\n@@ -711,0 +725,1 @@\n+    @Override\n@@ -715,0 +730,1 @@\n+    @Override\n@@ -727,0 +743,1 @@\n+    @Override\n@@ -803,3 +820,3 @@\n-            short nameID     = buffer.getShort();\n-            int nameLen    = ((int)buffer.getShort()) & 0xffff;\n-            int namePtr    = (((int)buffer.getShort()) & 0xffff) + stringPtr;\n+            short nameID   = buffer.getShort();\n+            int nameLen    = buffer.getShort() & 0xffff;\n+            int namePtr    = (buffer.getShort() & 0xffff) + stringPtr;\n@@ -952,1 +969,1 @@\n-        Map<String, Short> map = new HashMap<String, Short>(200);\n+        Map<String, Short> map = new HashMap<>(200);\n@@ -1120,1 +1137,1 @@\n-            Short lcidObject = (Short) lcidMap.get(key);\n+            Short lcidObject = lcidMap.get(key);\n@@ -1151,0 +1168,1 @@\n+    @Override\n@@ -1158,0 +1176,1 @@\n+    @Override\n@@ -1192,0 +1211,1 @@\n+    @Override\n@@ -1220,1 +1240,1 @@\n-            return ((float)(cadv & 0xffff)*ptSize)\/upem;\n+            return ((cadv & 0xffff)*ptSize)\/upem;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontFile.java","additions":32,"deletions":12,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -123,1 +123,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontLoader.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    private Map<Integer,Glyph> glyphMap = new HashMap<Integer,Glyph>();\n+    private Map<Integer,Glyph> glyphMap = new HashMap<>();\n@@ -84,0 +84,1 @@\n+    @Override\n@@ -99,0 +100,1 @@\n+    @Override\n@@ -103,0 +105,1 @@\n+    @Override\n@@ -119,0 +122,1 @@\n+    @Override\n@@ -123,0 +127,1 @@\n+    @Override\n@@ -127,0 +132,1 @@\n+    @Override\n@@ -131,0 +137,1 @@\n+    @Override\n@@ -139,1 +146,1 @@\n-            point.x = (float)Math.round(point.x);\n+            point.x = Math.round(point.x);\n@@ -142,1 +149,1 @@\n-            point.x = (float)Math.round(3.0 * point.x)\/ 3.0f;\n+            point.x = Math.round(3.0 * point.x) \/ 3.0f;\n@@ -144,1 +151,1 @@\n-        point.y = (float)Math.round(point.y);\n+        point.y = Math.round(point.y);\n@@ -155,0 +162,1 @@\n+    @Override\n@@ -161,0 +169,1 @@\n+    @Override\n@@ -168,0 +177,1 @@\n+    @Override\n@@ -179,0 +189,1 @@\n+    @Override\n@@ -243,0 +254,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontStrike.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -64,0 +66,1 @@\n+    @Override\n@@ -68,0 +71,1 @@\n+    @Override\n@@ -78,0 +82,1 @@\n+    @Override\n@@ -83,0 +88,1 @@\n+    @Override\n@@ -88,0 +94,1 @@\n+    @Override\n@@ -93,0 +100,1 @@\n+    @Override\n@@ -98,0 +106,1 @@\n+    @Override\n@@ -103,0 +112,1 @@\n+    @Override\n@@ -108,0 +118,1 @@\n+    @Override\n@@ -113,0 +124,1 @@\n+    @Override\n@@ -118,0 +130,1 @@\n+    @Override\n@@ -123,0 +136,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismMetrics.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Comparator;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/WoffDecoder.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-                point.y = (float) Math.round(point.y);\n+                point.y = Math.round(point.y);\n@@ -135,1 +135,1 @@\n-                    point.y = (float) Math.round(point.y);\n+                    point.y = Math.round(point.y);\n@@ -144,1 +144,1 @@\n-                    point.y = (float) Math.round(point.y);\n+                    point.y = Math.round(point.y);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTFontStrike.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        CTFontFile fr = (CTFontFile)strike.getFontResource();\n+        CTFontFile fr = strike.getFontResource();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTGlyph.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTGlyphLayout.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/coretext\/CTStrikeDisposer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWDisposer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-                    point.y = (float)Math.round(point.y);\n+                    point.y = Math.round(point.y);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWFontStrike.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/directwrite\/DWGlyphLayout.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/freetype\/FTDisposer.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/freetype\/PangoGlyphLayout.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -196,0 +196,1 @@\n+    @Override\n@@ -352,1 +353,1 @@\n-        setArcByCenter((float)x, (float)y, (float)radius, (float)ang1, (float)diff, type);\n+        setArcByCenter((float)x, (float)y, radius, (float)ang1, (float)diff, type);\n@@ -388,1 +389,1 @@\n-        double h = this.height;;\n+        double h = this.height;\n@@ -445,0 +446,1 @@\n+    @Override\n@@ -464,0 +466,1 @@\n+    @Override\n@@ -575,0 +578,1 @@\n+    @Override\n@@ -638,0 +642,1 @@\n+    @Override\n@@ -745,0 +750,1 @@\n+    @Override\n@@ -795,0 +801,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Arc2D.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+    @Override\n@@ -100,0 +101,1 @@\n+    @Override\n@@ -109,0 +111,1 @@\n+    @Override\n@@ -213,0 +216,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/ArcIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -453,0 +453,1 @@\n+    @Override\n@@ -517,0 +518,1 @@\n+    @Override\n@@ -541,0 +543,1 @@\n+    @Override\n@@ -555,0 +558,1 @@\n+    @Override\n@@ -576,0 +580,1 @@\n+    @Override\n@@ -597,0 +602,1 @@\n+    @Override\n@@ -622,0 +628,1 @@\n+    @Override\n@@ -629,0 +636,1 @@\n+    @Override\n@@ -633,0 +641,1 @@\n+    @Override\n@@ -653,0 +662,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Area.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+        @Override\n@@ -45,0 +46,1 @@\n+        @Override\n@@ -59,0 +61,1 @@\n+        @Override\n@@ -68,0 +71,1 @@\n+        @Override\n@@ -74,0 +78,1 @@\n+        @Override\n@@ -80,0 +85,1 @@\n+        @Override\n@@ -86,0 +92,1 @@\n+        @Override\n@@ -94,0 +101,1 @@\n+        @Override\n@@ -98,0 +106,1 @@\n+        @Override\n@@ -108,0 +117,1 @@\n+        @Override\n@@ -116,0 +126,1 @@\n+        @Override\n@@ -120,0 +131,1 @@\n+        @Override\n@@ -128,0 +140,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/AreaOp.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+    @Override\n@@ -76,0 +77,1 @@\n+    @Override\n@@ -80,0 +82,1 @@\n+    @Override\n@@ -88,0 +91,1 @@\n+    @Override\n@@ -96,0 +100,1 @@\n+    @Override\n@@ -104,0 +109,1 @@\n+    @Override\n@@ -108,0 +114,1 @@\n+    @Override\n@@ -116,0 +123,1 @@\n+    @Override\n@@ -124,0 +132,1 @@\n+    @Override\n@@ -132,0 +141,1 @@\n+    @Override\n@@ -140,0 +150,1 @@\n+    @Override\n@@ -148,0 +159,1 @@\n+    @Override\n@@ -156,0 +168,1 @@\n+    @Override\n@@ -165,0 +178,1 @@\n+    @Override\n@@ -174,0 +188,1 @@\n+    @Override\n@@ -185,0 +200,1 @@\n+    @Override\n@@ -196,0 +212,1 @@\n+    @Override\n@@ -206,0 +223,1 @@\n+    @Override\n@@ -213,0 +231,1 @@\n+    @Override\n@@ -229,0 +248,1 @@\n+    @Override\n@@ -241,0 +261,1 @@\n+    @Override\n@@ -283,0 +304,1 @@\n+    @Override\n@@ -289,0 +311,1 @@\n+    @Override\n@@ -327,0 +350,1 @@\n+    @Override\n@@ -331,0 +355,1 @@\n+    @Override\n@@ -335,0 +360,1 @@\n+    @Override\n@@ -342,0 +368,1 @@\n+    @Override\n@@ -358,0 +385,1 @@\n+    @Override\n@@ -375,0 +403,1 @@\n+    @Override\n@@ -380,0 +409,1 @@\n+    @Override\n@@ -397,0 +427,1 @@\n+    @Override\n@@ -424,0 +455,1 @@\n+    @Override\n@@ -439,0 +471,1 @@\n+    @Override\n@@ -448,0 +481,1 @@\n+    @Override\n@@ -466,0 +500,1 @@\n+    @Override\n@@ -474,0 +509,1 @@\n+    @Override\n@@ -480,0 +516,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/BoxBounds.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -111,0 +111,1 @@\n+        @Override\n@@ -115,0 +116,1 @@\n+        @Override\n@@ -123,0 +125,1 @@\n+        @Override\n@@ -127,0 +130,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/ConcentricShapePair.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -102,0 +102,1 @@\n+        @Override\n@@ -106,0 +107,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Crossings.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        List<CubicCurve2D> tmp = new ArrayList<CubicCurve2D>();\n+        List<CubicCurve2D> tmp = new ArrayList<>();\n@@ -316,1 +316,1 @@\n-                        (float)(param\/(1f - params[i - 1])));\n+                        param \/ (1f - params[i - 1]));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/CubicApproximator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,0 +166,1 @@\n+    @Override\n@@ -814,0 +815,1 @@\n+    @Override\n@@ -838,0 +840,1 @@\n+    @Override\n@@ -948,0 +951,1 @@\n+    @Override\n@@ -1156,0 +1160,1 @@\n+    @Override\n@@ -1190,0 +1195,1 @@\n+    @Override\n@@ -1212,0 +1218,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/CubicCurve2D.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -71,0 +73,1 @@\n+    @Override\n@@ -93,0 +96,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/CubicIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,3 +54,3 @@\n-        fixed = new LinkedList<DirtyRegionContainer>();\n-        unlocked = new LinkedList<PoolItem>();\n-        locked = new LinkedList<PoolItem>();\n+        fixed = new LinkedList<>();\n+        unlocked = new LinkedList<>();\n+        locked = new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/DirtyRegionPool.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -132,0 +132,1 @@\n+    @Override\n@@ -142,0 +143,1 @@\n+    @Override\n@@ -149,0 +151,1 @@\n+    @Override\n@@ -168,0 +171,1 @@\n+    @Override\n@@ -214,0 +218,1 @@\n+    @Override\n@@ -236,0 +241,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Ellipse2D.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+    @Override\n@@ -68,0 +69,1 @@\n+    @Override\n@@ -77,0 +79,1 @@\n+    @Override\n@@ -116,0 +119,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/EllipseIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -158,0 +158,1 @@\n+    @Override\n@@ -167,0 +168,1 @@\n+    @Override\n@@ -194,0 +196,1 @@\n+    @Override\n@@ -347,0 +350,1 @@\n+    @Override\n@@ -353,2 +357,2 @@\n-            coords[0] = (float) hold[holdIndex + 0];\n-            coords[1] = (float) hold[holdIndex + 1];\n+            coords[0] = hold[holdIndex + 0];\n+            coords[1] = hold[holdIndex + 1];\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/FlatteningPathIterator.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -125,0 +125,1 @@\n+    @Override\n@@ -689,0 +690,1 @@\n+    @Override\n@@ -710,0 +712,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Line2D.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -71,0 +73,1 @@\n+    @Override\n@@ -93,0 +96,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/LineIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+    @Override\n@@ -42,0 +43,1 @@\n+    @Override\n@@ -46,0 +48,1 @@\n+    @Override\n@@ -50,0 +53,1 @@\n+    @Override\n@@ -54,0 +58,1 @@\n+    @Override\n@@ -58,0 +63,1 @@\n+    @Override\n@@ -62,0 +68,1 @@\n+    @Override\n@@ -66,0 +73,1 @@\n+    @Override\n@@ -70,0 +78,1 @@\n+    @Override\n@@ -74,0 +83,1 @@\n+    @Override\n@@ -78,0 +88,1 @@\n+    @Override\n@@ -82,0 +93,1 @@\n+    @Override\n@@ -86,0 +98,1 @@\n+    @Override\n@@ -90,0 +103,1 @@\n+    @Override\n@@ -94,0 +108,1 @@\n+    @Override\n@@ -98,0 +113,1 @@\n+    @Override\n@@ -102,0 +118,1 @@\n+    @Override\n@@ -106,0 +123,1 @@\n+    @Override\n@@ -123,0 +141,1 @@\n+    @Override\n@@ -127,0 +146,1 @@\n+    @Override\n@@ -131,0 +151,1 @@\n+    @Override\n@@ -135,0 +156,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order0.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -58,0 +59,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n@@ -66,0 +69,1 @@\n+    @Override\n@@ -70,0 +74,1 @@\n+    @Override\n@@ -74,0 +79,1 @@\n+    @Override\n@@ -78,0 +84,1 @@\n+    @Override\n@@ -82,0 +89,1 @@\n+    @Override\n@@ -86,0 +94,1 @@\n+    @Override\n@@ -90,0 +99,1 @@\n+    @Override\n@@ -94,0 +104,1 @@\n+    @Override\n@@ -98,0 +109,1 @@\n+    @Override\n@@ -109,0 +121,1 @@\n+    @Override\n@@ -119,0 +132,1 @@\n+    @Override\n@@ -123,0 +137,1 @@\n+    @Override\n@@ -127,0 +142,1 @@\n+    @Override\n@@ -138,0 +154,1 @@\n+    @Override\n@@ -149,0 +166,1 @@\n+    @Override\n@@ -193,0 +211,1 @@\n+    @Override\n@@ -198,0 +217,1 @@\n+    @Override\n@@ -212,0 +232,1 @@\n+    @Override\n@@ -300,0 +321,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order1.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -187,0 +187,1 @@\n+    @Override\n@@ -191,0 +192,1 @@\n+    @Override\n@@ -195,0 +197,1 @@\n+    @Override\n@@ -199,0 +202,1 @@\n+    @Override\n@@ -203,0 +207,1 @@\n+    @Override\n@@ -207,0 +212,1 @@\n+    @Override\n@@ -211,0 +217,1 @@\n+    @Override\n@@ -215,0 +222,1 @@\n+    @Override\n@@ -219,0 +227,1 @@\n+    @Override\n@@ -231,0 +240,1 @@\n+    @Override\n@@ -235,0 +245,1 @@\n+    @Override\n@@ -239,0 +250,1 @@\n+    @Override\n@@ -249,0 +261,1 @@\n+    @Override\n@@ -341,0 +354,1 @@\n+    @Override\n@@ -345,0 +359,1 @@\n+    @Override\n@@ -349,0 +364,1 @@\n+    @Override\n@@ -362,0 +378,1 @@\n+    @Override\n@@ -375,0 +392,1 @@\n+    @Override\n@@ -383,0 +401,1 @@\n+    @Override\n@@ -392,0 +411,1 @@\n+    @Override\n@@ -430,0 +450,1 @@\n+    @Override\n@@ -434,0 +455,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order2.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -314,0 +314,1 @@\n+    @Override\n@@ -318,0 +319,1 @@\n+    @Override\n@@ -322,0 +324,1 @@\n+    @Override\n@@ -326,0 +329,1 @@\n+    @Override\n@@ -330,0 +334,1 @@\n+    @Override\n@@ -334,0 +339,1 @@\n+    @Override\n@@ -338,0 +344,1 @@\n+    @Override\n@@ -342,0 +349,1 @@\n+    @Override\n@@ -346,0 +354,1 @@\n+    @Override\n@@ -366,0 +375,1 @@\n+    @Override\n@@ -370,0 +380,1 @@\n+    @Override\n@@ -388,0 +399,1 @@\n+    @Override\n@@ -538,0 +550,1 @@\n+    @Override\n@@ -548,0 +561,1 @@\n+    @Override\n@@ -552,0 +566,1 @@\n+    @Override\n@@ -556,0 +571,1 @@\n+    @Override\n@@ -571,0 +587,1 @@\n+    @Override\n@@ -586,0 +603,1 @@\n+    @Override\n@@ -597,0 +615,1 @@\n+    @Override\n@@ -610,0 +629,1 @@\n+    @Override\n@@ -662,0 +682,1 @@\n+    @Override\n@@ -666,0 +687,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order3.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -434,0 +434,1 @@\n+    @Override\n@@ -473,0 +474,1 @@\n+    @Override\n@@ -508,0 +510,1 @@\n+    @Override\n@@ -623,0 +626,1 @@\n+    @Override\n@@ -1492,0 +1496,1 @@\n+    @Override\n@@ -1533,0 +1538,1 @@\n+    @Override\n@@ -1549,0 +1555,1 @@\n+        @Override\n@@ -1581,0 +1588,1 @@\n+        @Override\n@@ -1607,0 +1615,1 @@\n+    @Override\n@@ -1616,0 +1625,1 @@\n+    @Override\n@@ -2104,0 +2114,1 @@\n+    @Override\n@@ -2202,0 +2213,1 @@\n+    @Override\n@@ -2293,0 +2305,1 @@\n+    @Override\n@@ -2323,0 +2336,1 @@\n+    @Override\n@@ -2338,0 +2352,1 @@\n+        @Override\n@@ -2342,0 +2357,1 @@\n+        @Override\n@@ -2346,0 +2362,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Path2D.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -186,0 +186,1 @@\n+    @Override\n@@ -202,0 +203,1 @@\n+    @Override\n@@ -216,0 +218,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Point2D.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+    @Override\n@@ -493,0 +494,1 @@\n+    @Override\n@@ -593,0 +595,1 @@\n+    @Override\n@@ -693,0 +696,1 @@\n+    @Override\n@@ -876,0 +880,1 @@\n+    @Override\n@@ -901,0 +906,1 @@\n+    @Override\n@@ -922,0 +928,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/QuadCurve2D.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -71,0 +73,1 @@\n+    @Override\n@@ -93,0 +96,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/QuadIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-                this.w = (float) Math.sqrt((double) ww);\n+                this.w = (float) Math.sqrt(ww);\n@@ -157,1 +157,1 @@\n-                this.x = (float) Math.sqrt((double) ww);\n+                this.x = (float) Math.sqrt(ww);\n@@ -173,1 +173,1 @@\n-            this.y = (float) Math.sqrt((double) ww);\n+            this.y = (float) Math.sqrt(ww);\n@@ -192,1 +192,1 @@\n-                this.w = (float) Math.sqrt((double) ww);\n+                this.w = (float) Math.sqrt(ww);\n@@ -211,1 +211,1 @@\n-                this.x = (float) Math.sqrt((double) ww);\n+                this.x = (float) Math.sqrt(ww);\n@@ -227,1 +227,1 @@\n-            this.y = (float) Math.sqrt((double) ww);\n+            this.y = (float) Math.sqrt(ww);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Quat4f.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -259,0 +259,1 @@\n+    @Override\n@@ -266,0 +267,1 @@\n+    @Override\n@@ -306,0 +308,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/RectangularShape.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    @Override\n@@ -71,0 +72,1 @@\n+    @Override\n@@ -80,0 +82,1 @@\n+    @Override\n@@ -150,0 +153,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/RoundRectIterator.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -190,0 +190,1 @@\n+        @Override\n@@ -194,0 +195,1 @@\n+        @Override\n@@ -221,0 +223,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/TransformedShape.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -760,0 +760,1 @@\n+    @Override\n@@ -1057,0 +1058,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Affine2D.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -155,0 +155,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Affine3D.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -273,0 +273,1 @@\n+    @Override\n@@ -480,0 +481,1 @@\n+    @Override\n@@ -534,0 +536,1 @@\n+    @Override\n@@ -566,0 +569,1 @@\n+    @Override\n@@ -649,0 +653,1 @@\n+    @Override\n@@ -697,0 +702,1 @@\n+    @Override\n@@ -773,0 +779,1 @@\n+    @Override\n@@ -907,1 +914,1 @@\n-                        (float) dst.getMinZ(),\n+                        dst.getMinZ(),\n@@ -910,1 +917,1 @@\n-                        (float) dst.getMaxZ());\n+                        dst.getMaxZ());\n@@ -915,1 +922,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -918,1 +925,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -923,1 +930,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -926,1 +933,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -931,1 +938,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -934,1 +941,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -939,1 +946,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -942,1 +949,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -947,1 +954,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -950,1 +957,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -961,0 +968,1 @@\n+    @Override\n@@ -970,0 +978,1 @@\n+    @Override\n@@ -1018,0 +1027,1 @@\n+    @Override\n@@ -1056,0 +1066,1 @@\n+    @Override\n@@ -1182,0 +1193,1 @@\n+    @Override\n@@ -1220,0 +1232,1 @@\n+    @Override\n@@ -1342,0 +1355,1 @@\n+    @Override\n@@ -1440,0 +1454,1 @@\n+    @Override\n@@ -1540,0 +1555,1 @@\n+    @Override\n@@ -1815,1 +1831,1 @@\n-                ((RectBounds) dst).setBounds((RectBounds) src);\n+                dst.setBounds(src);\n@@ -1866,1 +1882,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -1869,1 +1885,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -1877,1 +1893,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -1879,2 +1895,2 @@\n-                                (float) (src.getMaxY() \/ myy),\n-                                (float) src.getMaxZ());\n+                        (float) (src.getMaxY() \/ myy),\n+                        src.getMaxZ());\n@@ -1885,1 +1901,1 @@\n-                        (float) src.getMinZ(),\n+                        src.getMinZ(),\n@@ -1888,1 +1904,1 @@\n-                        (float) src.getMaxZ());\n+                        src.getMaxZ());\n@@ -1899,0 +1915,1 @@\n+    @Override\n@@ -1910,0 +1927,1 @@\n+    @Override\n@@ -1963,0 +1981,1 @@\n+    @Override\n@@ -1994,0 +2013,1 @@\n+    @Override\n@@ -2149,0 +2169,1 @@\n+    @Override\n@@ -2277,0 +2298,1 @@\n+    @Override\n@@ -2885,0 +2907,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/AffineBase.java","additions":43,"deletions":20,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -357,0 +357,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/BaseTransform.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -167,0 +167,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/GeneralTransform3D.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -111,0 +111,1 @@\n+    @Override\n@@ -120,0 +121,1 @@\n+    @Override\n@@ -129,0 +131,1 @@\n+    @Override\n@@ -139,0 +142,1 @@\n+    @Override\n@@ -169,0 +173,1 @@\n+    @Override\n@@ -178,0 +183,1 @@\n+    @Override\n@@ -187,0 +193,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/transform\/Identity.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    };\n+    }\n@@ -434,1 +434,1 @@\n-        ArrayList<ImageFrame> list = new ArrayList<ImageFrame>();\n+        ArrayList<ImageFrame> list = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ImageStorage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -469,0 +469,1 @@\n+    @Override\n@@ -552,0 +553,1 @@\n+    @Override\n@@ -556,0 +558,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/bmp\/BMPImageLoaderFactory.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    @Override\n@@ -53,0 +54,1 @@\n+    @Override\n@@ -57,0 +59,1 @@\n+    @Override\n@@ -61,0 +64,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/ImageDescriptor.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+    @Override\n@@ -53,0 +54,1 @@\n+    @Override\n@@ -55,1 +57,1 @@\n-            listeners = new HashSet<ImageLoadListener>();\n+            listeners = new HashSet<>();\n@@ -60,0 +62,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/ImageLoaderImpl.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -89,0 +89,1 @@\n+    @Override\n@@ -102,0 +103,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/RoughScaler.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -158,0 +158,1 @@\n+    @Override\n@@ -171,0 +172,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/common\/SmoothMinifier.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -201,0 +201,1 @@\n+    @Override\n@@ -280,0 +281,1 @@\n+    @Override\n@@ -458,1 +460,1 @@\n-            return (int)block[blockPos++] & 0xFF;\n+            return block[blockPos++] & 0xFF;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/gif\/GIFImageLoader2.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -47,0 +45,1 @@\n+    @Override\n@@ -51,0 +50,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/gif\/GIFImageLoaderFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -208,0 +208,1 @@\n+    @Override\n@@ -219,0 +220,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ios\/IosImageLoader.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private IosImageLoaderFactory() {};\n+    private IosImageLoaderFactory() {}\n@@ -59,0 +59,1 @@\n+    @Override\n@@ -66,0 +67,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/ios\/IosImageLoaderFactory.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -197,0 +197,1 @@\n+    @Override\n@@ -205,0 +206,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/jpeg\/JPEGImageLoader.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    @Override\n@@ -48,0 +49,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/jpeg\/JPEGImageLoaderFactory.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,0 +295,1 @@\n+    @Override\n@@ -629,0 +630,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/png\/PNGImageLoader2.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.security.*;\n@@ -45,0 +44,1 @@\n+    @Override\n@@ -49,0 +49,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/png\/PNGImageLoaderFactory.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import javafx.print.Printer;\n-import javafx.print.PrinterJob;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/print\/PrinterJobImpl.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+            @Override\n@@ -77,1 +78,1 @@\n-        future = new FutureTask<V>(callable) {\n+        future = new FutureTask<>(callable) {\n@@ -90,0 +91,1 @@\n+    @Override\n@@ -94,0 +96,1 @@\n+    @Override\n@@ -98,0 +101,1 @@\n+    @Override\n@@ -102,0 +106,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/runtime\/async\/AbstractAsyncOperation.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-    private Map<String, String> headers = new HashMap<String, String>();\n-    private Map<String, List<String>> responseHeaders = new HashMap<String, List<String>>();\n+    private Map<String, String> headers = new HashMap<>();\n+    private Map<String, List<String>> responseHeaders = new HashMap<>();\n@@ -73,0 +73,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/runtime\/async\/AbstractRemoteResource.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.concurrent.ThreadFactory;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/runtime\/async\/BackgroundExecutor.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.event.EventType;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/EnteredExitedHandler.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-            onMenuContextRequested = new EventHandlerProperty<ContextMenuEvent>(\n+            onMenuContextRequested = new EventHandlerProperty<>(\n@@ -84,1 +84,1 @@\n-            onMouseClicked = new EventHandlerProperty<MouseEvent>(\n+            onMouseClicked = new EventHandlerProperty<>(\n@@ -101,1 +101,1 @@\n-            onMouseDragged = new EventHandlerProperty<MouseEvent>(\n+            onMouseDragged = new EventHandlerProperty<>(\n@@ -118,1 +118,1 @@\n-            onMouseEntered = new EventHandlerProperty<MouseEvent>(\n+            onMouseEntered = new EventHandlerProperty<>(\n@@ -135,1 +135,1 @@\n-            onMouseExited = new EventHandlerProperty<MouseEvent>(\n+            onMouseExited = new EventHandlerProperty<>(\n@@ -152,1 +152,1 @@\n-            onMouseMoved = new EventHandlerProperty<MouseEvent>(\n+            onMouseMoved = new EventHandlerProperty<>(\n@@ -169,1 +169,1 @@\n-            onMousePressed = new EventHandlerProperty<MouseEvent>(\n+            onMousePressed = new EventHandlerProperty<>(\n@@ -186,1 +186,1 @@\n-            onMouseReleased = new EventHandlerProperty<MouseEvent>(\n+            onMouseReleased = new EventHandlerProperty<>(\n@@ -203,1 +203,1 @@\n-            onDragDetected = new EventHandlerProperty<MouseEvent>(\n+            onDragDetected = new EventHandlerProperty<>(\n@@ -220,1 +220,1 @@\n-            onScroll = new EventHandlerProperty<ScrollEvent>(\n+            onScroll = new EventHandlerProperty<>(\n@@ -237,1 +237,1 @@\n-            onScrollStarted = new EventHandlerProperty<ScrollEvent>(\n+            onScrollStarted = new EventHandlerProperty<>(\n@@ -254,1 +254,1 @@\n-            onScrollFinished = new EventHandlerProperty<ScrollEvent>(\n+            onScrollFinished = new EventHandlerProperty<>(\n@@ -271,1 +271,1 @@\n-            onRotationStarted = new EventHandlerProperty<RotateEvent>(\n+            onRotationStarted = new EventHandlerProperty<>(\n@@ -288,1 +288,1 @@\n-            onRotate = new EventHandlerProperty<RotateEvent>(\n+            onRotate = new EventHandlerProperty<>(\n@@ -305,1 +305,1 @@\n-            onRotationFinished = new EventHandlerProperty<RotateEvent>(\n+            onRotationFinished = new EventHandlerProperty<>(\n@@ -322,1 +322,1 @@\n-            onZoomStarted = new EventHandlerProperty<ZoomEvent>(\n+            onZoomStarted = new EventHandlerProperty<>(\n@@ -339,1 +339,1 @@\n-            onZoom = new EventHandlerProperty<ZoomEvent>(\n+            onZoom = new EventHandlerProperty<>(\n@@ -356,1 +356,1 @@\n-            onZoomFinished = new EventHandlerProperty<ZoomEvent>(\n+            onZoomFinished = new EventHandlerProperty<>(\n@@ -373,1 +373,1 @@\n-            onSwipeUp = new EventHandlerProperty<SwipeEvent>(\n+            onSwipeUp = new EventHandlerProperty<>(\n@@ -390,1 +390,1 @@\n-            onSwipeDown = new EventHandlerProperty<SwipeEvent>(\n+            onSwipeDown = new EventHandlerProperty<>(\n@@ -407,1 +407,1 @@\n-            onSwipeLeft = new EventHandlerProperty<SwipeEvent>(\n+            onSwipeLeft = new EventHandlerProperty<>(\n@@ -424,1 +424,1 @@\n-            onSwipeRight = new EventHandlerProperty<SwipeEvent>(\n+            onSwipeRight = new EventHandlerProperty<>(\n@@ -441,1 +441,1 @@\n-            onMouseDragOver = new EventHandlerProperty<MouseDragEvent>(\n+            onMouseDragOver = new EventHandlerProperty<>(\n@@ -458,1 +458,1 @@\n-            onMouseDragReleased = new EventHandlerProperty<MouseDragEvent>(\n+            onMouseDragReleased = new EventHandlerProperty<>(\n@@ -475,1 +475,1 @@\n-            onMouseDragEntered = new EventHandlerProperty<MouseDragEvent>(\n+            onMouseDragEntered = new EventHandlerProperty<>(\n@@ -492,1 +492,1 @@\n-            onMouseDragExited = new EventHandlerProperty<MouseDragEvent>(\n+            onMouseDragExited = new EventHandlerProperty<>(\n@@ -509,1 +509,1 @@\n-            onKeyPressed = new EventHandlerProperty<KeyEvent>(\n+            onKeyPressed = new EventHandlerProperty<>(\n@@ -526,1 +526,1 @@\n-            onKeyReleased = new EventHandlerProperty<KeyEvent>(\n+            onKeyReleased = new EventHandlerProperty<>(\n@@ -543,1 +543,1 @@\n-            onKeyTyped = new EventHandlerProperty<KeyEvent>(\n+            onKeyTyped = new EventHandlerProperty<>(\n@@ -563,1 +563,1 @@\n-                    new EventHandlerProperty<InputMethodEvent>(\n+                    new EventHandlerProperty<>(\n@@ -580,1 +580,1 @@\n-            onDragEntered = new EventHandlerProperty<DragEvent>(\n+            onDragEntered = new EventHandlerProperty<>(\n@@ -597,1 +597,1 @@\n-            onDragExited = new EventHandlerProperty<DragEvent>(\n+            onDragExited = new EventHandlerProperty<>(\n@@ -614,1 +614,1 @@\n-            onDragOver = new EventHandlerProperty<DragEvent>(\n+            onDragOver = new EventHandlerProperty<>(\n@@ -648,1 +648,1 @@\n-            onDragDropped = new EventHandlerProperty<DragEvent>(\n+            onDragDropped = new EventHandlerProperty<>(\n@@ -665,1 +665,1 @@\n-            onDragDone = new EventHandlerProperty<DragEvent>(\n+            onDragDone = new EventHandlerProperty<>(\n@@ -699,1 +699,1 @@\n-            onTouchPressed = new EventHandlerProperty<TouchEvent>(\n+            onTouchPressed = new EventHandlerProperty<>(\n@@ -716,1 +716,1 @@\n-            onTouchMoved = new EventHandlerProperty<TouchEvent>(\n+            onTouchMoved = new EventHandlerProperty<>(\n@@ -733,1 +733,1 @@\n-            onTouchReleased = new EventHandlerProperty<TouchEvent>(\n+            onTouchReleased = new EventHandlerProperty<>(\n@@ -750,1 +750,1 @@\n-            onTouchStationary = new EventHandlerProperty<TouchEvent>(\n+            onTouchStationary = new EventHandlerProperty<>(\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/EventHandlerProperties.java","additions":39,"deletions":39,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import static com.sun.javafx.scene.NodeHelper.setHelper;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/ImageViewHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -398,1 +398,1 @@\n-                mnemonicsList = (ObservableList) mnemonic.getValue();\n+                mnemonicsList = mnemonic.getValue();\n@@ -402,1 +402,1 @@\n-                        Node currentNode = (Node)mnemonicsList.get(i).getNode();\n+                        Node currentNode = mnemonicsList.get(i).getNode();\n@@ -462,1 +462,1 @@\n-            return new AbstractSet<Entry<K, V>>() {\n+            return new AbstractSet<>() {\n@@ -465,1 +465,1 @@\n-                    return new Iterator<Entry<K, V>>() {\n+                    return new Iterator<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/KeyboardShortcutsHandler.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.javafx.tk.TKPulseListener;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/SceneHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -89,0 +89,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/SubSceneHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-        charMap = new HashMap<Integer, KeyCode>(KeyCode.values().length);\n+        charMap = new HashMap<>(KeyCode.values().length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/input\/KeyCodeMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import javafx.css.Size;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageWidthsSequenceConverter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,5 +65,5 @@\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> NONE = new ParsedValueImpl<ParsedValue[],Number[]>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> HIDDEN = new ParsedValueImpl<ParsedValue[],Number[]>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> DOTTED = new ParsedValueImpl<ParsedValue[],Number[]>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> DASHED = new ParsedValueImpl<ParsedValue[],Number[]>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> SOLID = new ParsedValueImpl<ParsedValue[],Number[]>(null, null);\n+    public static final ParsedValueImpl<ParsedValue[],Number[]> NONE = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue[],Number[]> HIDDEN = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue[],Number[]> DOTTED = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue[],Number[]> DASHED = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue[],Number[]> SOLID = new ParsedValueImpl<>(null, null);\n@@ -126,1 +126,1 @@\n-            dashes = new ArrayList<Double>(dash_vals.length);\n+            dashes = new ArrayList<>(dash_vals.length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderStyleConverter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        repeatConverter = new EnumConverter<BackgroundRepeat>(BackgroundRepeat.class);\n+        repeatConverter = new EnumConverter<>(BackgroundRepeat.class);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/RepeatStructConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-            List<String> tokenList = new LinkedList<String>();\n+            List<String> tokenList = new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/paint\/GradientUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/BoxHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/CylinderHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/MeshViewHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import com.sun.javafx.sg.prism.NGNode;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/ShapeHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/SphereHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import com.sun.javafx.sg.prism.NGTriangleMesh;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/shape\/TriangleMeshHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/ContainerTabOrder.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/SceneTraversalEngine.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/SubSceneTraversalEngine.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -163,0 +163,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/WeightedClosestCorner.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -373,1 +373,1 @@\n-        clipStack = new LinkedList<Path2D>();\n+        clipStack = new LinkedList<>();\n@@ -559,1 +559,1 @@\n-            FutureTask<Void> f = new FutureTask<Void>(r, null);\n+            FutureTask<Void> f = new FutureTask<>(r, null);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGCanvas.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    private final AtomicReference<RenderData> renderData = new AtomicReference<RenderData>(null);\n+    private final AtomicReference<RenderData> renderData = new AtomicReference<>(null);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGExternalNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.javafx.geom.Vec3f;\n@@ -39,1 +38,0 @@\n-import javafx.geometry.Point3D;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGShape3D.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NodeEffectInput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-            Vector<Point2D> savedpathendpoints = new Vector<Point2D>();\n+            Vector<Point2D> savedpathendpoints = new Vector<>();\n@@ -565,0 +565,1 @@\n+        @Override\n@@ -589,0 +590,1 @@\n+        @Override\n@@ -593,0 +595,1 @@\n+        @Override\n@@ -597,0 +600,1 @@\n+        @Override\n@@ -601,0 +605,1 @@\n+        @Override\n@@ -605,0 +610,1 @@\n+        @Override\n@@ -609,0 +615,1 @@\n+        @Override\n@@ -633,0 +640,1 @@\n+        @Override\n@@ -640,0 +648,1 @@\n+        @Override\n@@ -647,0 +656,1 @@\n+        @Override\n@@ -658,0 +668,1 @@\n+        @Override\n@@ -673,3 +684,1 @@\n-                    coords[i] = (float) interp(g0.getCoord(cindex + i),\n-                                               g1.getCoord(cindex + i),\n-                                               t);\n+                    coords[i] = interp(g0.getCoord(cindex + i), g1.getCoord(cindex + i), t);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/ShapeEvaluator.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import static com.sun.javafx.stage.WindowHelper.setHelper;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/EmbeddedWindowHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-            new EventType<FocusUngrabEvent>(Event.ANY, \"FOCUS_UNGRAB\");\n+            new EventType<>(Event.ANY, \"FOCUS_UNGRAB\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/FocusUngrabEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    @Override\n@@ -51,0 +52,1 @@\n+    @Override\n@@ -54,0 +56,1 @@\n+    @Override\n@@ -57,0 +60,1 @@\n+    @Override\n@@ -61,0 +65,1 @@\n+    @Override\n@@ -65,0 +70,1 @@\n+    @Override\n@@ -69,0 +75,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/PopupWindowPeerListener.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/StagePeerListener.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+    @Override\n@@ -67,0 +68,1 @@\n+    @Override\n@@ -71,0 +73,1 @@\n+    @Override\n@@ -75,0 +78,1 @@\n+    @Override\n@@ -79,0 +83,1 @@\n+    @Override\n@@ -83,0 +88,1 @@\n+    @Override\n@@ -87,0 +93,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/stage\/WindowPeerListener.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+    @Override\n@@ -64,0 +65,1 @@\n+    @Override\n@@ -81,0 +83,1 @@\n+    @Override\n@@ -99,0 +102,1 @@\n+    @Override\n@@ -118,0 +122,1 @@\n+    @Override\n@@ -138,0 +143,1 @@\n+    @Override\n@@ -152,0 +158,1 @@\n+    @Override\n@@ -161,0 +168,1 @@\n+    @Override\n@@ -169,0 +177,1 @@\n+    @Override\n@@ -177,0 +186,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/CharArrayIterator.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -112,0 +112,1 @@\n+    @Override\n@@ -134,0 +135,1 @@\n+    @Override\n@@ -149,0 +151,1 @@\n+    @Override\n@@ -157,0 +160,1 @@\n+    @Override\n@@ -165,0 +169,1 @@\n+    @Override\n@@ -183,0 +188,1 @@\n+    @Override\n@@ -214,0 +220,1 @@\n+    @Override\n@@ -227,0 +234,1 @@\n+    @Override\n@@ -232,0 +240,1 @@\n+    @Override\n@@ -245,0 +254,1 @@\n+    @Override\n@@ -250,0 +260,1 @@\n+    @Override\n@@ -302,0 +313,1 @@\n+    @Override\n@@ -410,0 +422,1 @@\n+    @Override\n@@ -449,0 +462,1 @@\n+    @Override\n@@ -453,1 +467,1 @@\n-        ArrayList<PathElement> result = new ArrayList<PathElement>();\n+        ArrayList<PathElement> result = new ArrayList<>();\n@@ -578,0 +592,1 @@\n+    @Override\n@@ -983,1 +998,1 @@\n-        int index = 0;;\n+        int index = 0;\n@@ -1076,1 +1091,1 @@\n-        ArrayList<TextLine> linesList = new ArrayList<TextLine>();\n+        ArrayList<TextLine> linesList = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayout.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+    @Override\n@@ -43,0 +44,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/PrismTextLayoutFactory.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+    @Override\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -58,0 +60,1 @@\n+    @Override\n@@ -62,0 +65,1 @@\n+    @Override\n@@ -71,0 +75,1 @@\n+    @Override\n@@ -75,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/text\/TextLine.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import javafx.stage.Stage;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/DummyToolkit.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        values = new HashMap<DataFormat, Object>();\n+        values = new HashMap<>();\n@@ -53,2 +53,1 @@\n-        return Collections.unmodifiableSet(\n-                   new HashSet<DataFormat>(values.keySet()));\n+        return Collections.unmodifiableSet(new HashSet<>(values.keySet()));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/LocalClipboard.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.print.Printer;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/PrintPipeline.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.scene.Scene;\n@@ -54,1 +53,0 @@\n-import javafx.stage.Stage;\n@@ -58,1 +56,0 @@\n-import java.io.IOException;\n@@ -66,1 +63,0 @@\n-import java.util.Iterator;\n@@ -85,1 +81,0 @@\n-import com.sun.javafx.scene.SceneHelper;\n@@ -383,2 +378,1 @@\n-    private final Map<TKPulseListener,AccessControlContext> stagePulseListeners =\n-            new WeakHashMap<TKPulseListener,AccessControlContext>();\n+    private final Map<TKPulseListener,AccessControlContext> stagePulseListeners = new WeakHashMap<>();\n@@ -386,2 +380,1 @@\n-    private final Map<TKPulseListener,AccessControlContext> scenePulseListeners =\n-            new WeakHashMap<TKPulseListener,AccessControlContext>();\n+    private final Map<TKPulseListener,AccessControlContext> scenePulseListeners = new WeakHashMap<>();\n@@ -389,2 +382,1 @@\n-    private final Map<TKPulseListener,AccessControlContext> postScenePulseListeners =\n-            new WeakHashMap<TKPulseListener,AccessControlContext>();\n+    private final Map<TKPulseListener,AccessControlContext> postScenePulseListeners = new WeakHashMap<>();\n@@ -392,2 +384,1 @@\n-    private final Map<TKListener,AccessControlContext> toolkitListeners =\n-            new WeakHashMap<TKListener,AccessControlContext>();\n+    private final Map<TKListener,AccessControlContext> toolkitListeners = new WeakHashMap<>();\n@@ -396,1 +387,1 @@\n-    private final Set<Runnable> shutdownHooks = new HashSet<Runnable>();\n+    private final Set<Runnable> shutdownHooks = new HashSet<>();\n@@ -419,1 +410,1 @@\n-                new WeakHashMap<TKPulseListener,AccessControlContext>();\n+                new WeakHashMap<>();\n@@ -422,1 +413,1 @@\n-                new WeakHashMap<TKPulseListener,AccessControlContext>();\n+                new WeakHashMap<>();\n@@ -425,1 +416,1 @@\n-                new WeakHashMap<TKPulseListener,AccessControlContext>();\n+                new WeakHashMap<>();\n@@ -532,1 +523,1 @@\n-            hooks = new ArrayList<Runnable>(shutdownHooks);\n+            hooks = new ArrayList<>(shutdownHooks);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/Toolkit.java","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n-        float xscale = bestWidth \/ (float)iwidth;\n-        float yscale = bestHeight \/ (float)iheight;\n+        float xscale = bestWidth \/ iwidth;\n+        float yscale = bestHeight \/ iheight;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/CursorUtils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javafx.scene.input.ScrollEvent;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/EmbeddedScene.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.concurrent.Callable;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/EmbeddedSceneDS.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.util.concurrent.Callable;\n-import javafx.application.Platform;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/EmbeddedSceneDT.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    private Collection<GestureRecognizer> recognizers = new Vector<GestureRecognizer>();\n+    private Collection<GestureRecognizer> recognizers = new Vector<>();\n@@ -61,0 +61,1 @@\n+    @Override\n@@ -68,0 +69,1 @@\n+    @Override\n@@ -77,0 +79,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GestureRecognizers.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+    @Override\n@@ -197,0 +198,1 @@\n+    @Override\n@@ -199,0 +201,1 @@\n+    @Override\n@@ -223,0 +226,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassScene.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,2 +35,0 @@\n-import com.sun.glass.ui.Application;\n-import com.sun.glass.ui.EventLoop;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassStage.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -586,1 +586,1 @@\n-        ObservableList<InputMethodTextRun> composed = new TrackableObservableList<InputMethodTextRun>() {\n+        ObservableList<InputMethodTextRun> composed = new TrackableObservableList<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassViewEventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-                return (Void)null;\n+                return null;\n@@ -198,1 +198,1 @@\n-                return (Void)null;\n+                return null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/GlassWindowEventHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,2 +34,0 @@\n-import javafx.event.ActionEvent;\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/OverlayWarning.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import com.sun.javafx.scene.shape.TextHelper;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/OverlayWarningHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+                        @Override\n@@ -104,0 +105,1 @@\n+                        @Override\n@@ -121,0 +123,1 @@\n+                        @Override\n@@ -140,1 +143,1 @@\n-        times = new Vector<TimeData>(10);\n+        times = new Vector<>(10);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PerformanceLogger.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -79,0 +79,1 @@\n+    @Override\n@@ -104,0 +105,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PrimaryTimer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n@@ -84,0 +85,1 @@\n+    @Override\n@@ -88,0 +90,1 @@\n+    @Override\n@@ -95,0 +98,1 @@\n+    @Override\n@@ -102,0 +106,1 @@\n+    @Override\n@@ -109,0 +114,1 @@\n+    @Override\n@@ -116,0 +122,1 @@\n+    @Override\n@@ -205,0 +212,1 @@\n+        @Override\n@@ -209,0 +217,1 @@\n+        @Override\n@@ -220,0 +229,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PrismImageLoader2.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import java.security.Permission;\n@@ -300,1 +299,1 @@\n-            List<File> list = new ArrayList<File>(paths.length);\n+            List<File> list = new ArrayList<>(paths.length);\n@@ -458,1 +457,1 @@\n-        Set<DataFormat> set = new HashSet<DataFormat>();\n+        Set<DataFormat> set = new HashSet<>();\n@@ -685,1 +684,1 @@\n-                dataCache = new ArrayList<Pair<DataFormat, Object>>(content.length);\n+                dataCache = new ArrayList<>(content.length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumClipboard.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.util.Set;\n@@ -37,1 +36,0 @@\n-import javafx.event.EventType;\n@@ -39,1 +37,0 @@\n-import javafx.animation.Animation;\n@@ -78,2 +75,1 @@\n-    Map<Long, TouchPointTracker> trackers =\n-            new HashMap<Long, TouchPointTracker>();\n+    Map<Long, TouchPointTracker> trackers = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/RotateGestureRecognizer.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -95,0 +95,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/SceneState.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javafx.event.EventType;\n@@ -38,1 +37,0 @@\n-import javafx.animation.Animation;\n@@ -76,2 +74,1 @@\n-    private Map<Long, TouchPointTracker> trackers =\n-            new HashMap<Long, TouchPointTracker>();\n+    private Map<Long, TouchPointTracker> trackers = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/ScrollGestureRecognizer.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -218,2 +218,1 @@\n-        Map<Long, TouchPointTracker> trackers =\n-                new HashMap<Long, TouchPointTracker>();\n+        Map<Long, TouchPointTracker> trackers = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/SwipeGestureRecognizer.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-final class UploadingPainter extends ViewPainter implements Runnable {\n+final class UploadingPainter extends ViewPainter {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/UploadingPainter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import javafx.scene.Parent;\n@@ -62,0 +61,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/ViewScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -417,2 +417,2 @@\n-                    adjw = (int)Math.round((double)iw \/ scaleDivider);\n-                    adjh = (int)Math.round((double)ih \/ scaleDivider);\n+                    adjw = (int)Math.round(iw \/ scaleDivider);\n+                    adjh = (int)Math.round(ih \/ scaleDivider);\n@@ -421,2 +421,2 @@\n-                double similarity = ((double)width - (double)adjw) \/ (double)width +\n-                    ((double)height - (double)adjh) \/ (double)height + \/\/Large padding is bad\n+                double similarity = ((double)width - (double)adjw) \/ width +\n+                    ((double)height - (double)adjh) \/ height + \/\/Large padding is bad\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStage.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javafx.event.EventType;\n@@ -38,1 +37,0 @@\n-import javafx.animation.Animation;\n@@ -80,2 +78,1 @@\n-    private Map<Long, TouchPointTracker> trackers =\n-            new HashMap<Long, TouchPointTracker>();\n+    private Map<Long, TouchPointTracker> trackers = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/ZoomGestureRecognizer.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-            new ThreadLocal<TempState>() {\n+            new ThreadLocal<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/TempState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        java.util.List<String> result = new java.util.ArrayList<String>();\n+        java.util.List<String> result = new java.util.ArrayList<>();\n@@ -390,1 +390,1 @@\n-            saturation = (double) (cmax - cmin) \/ cmax;\n+            saturation = (cmax - cmin) \/ cmax;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/Utils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -96,0 +95,1 @@\n+            @Override\n@@ -113,0 +113,1 @@\n+            @Override\n@@ -120,0 +121,1 @@\n+            @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/WeakReferenceQueue.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-            RDR_CTX_PROVIDER = new ReentrantContextProviderTL<RendererContext>(REF_TYPE)\n+            RDR_CTX_PROVIDER = new ReentrantContextProviderTL<>(REF_TYPE)\n@@ -105,1 +105,1 @@\n-            RDR_CTX_PROVIDER = new ReentrantContextProviderCLQ<RendererContext>(REF_TYPE)\n+            RDR_CTX_PROVIDER = new ReentrantContextProviderCLQ<>(REF_TYPE)\n@@ -260,1 +260,0 @@\n-    @SuppressWarnings({\"unchecked\"})\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/DMarlinRenderingEngine.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -539,0 +539,1 @@\n+    @Override\n@@ -594,0 +595,1 @@\n+    @Override\n@@ -1534,0 +1536,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/Renderer.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import com.sun.marlin.ArrayCacheIntClean;\n@@ -200,1 +199,1 @@\n-            refPath2D = new WeakReference<Path2D>(p2d);\n+            refPath2D = new WeakReference<>(p2d);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/RendererContext.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -530,0 +530,1 @@\n+    @Override\n@@ -583,0 +584,1 @@\n+    @Override\n@@ -1446,0 +1448,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/RendererNoAA.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -357,1 +357,1 @@\n-            = new ConcurrentLinkedQueue<RendererStats>();\n+            = new ConcurrentLinkedQueue<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/marlin\/RendererStats.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -124,0 +126,1 @@\n+    @Override\n@@ -128,0 +131,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/pisces\/AbstractSurface.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -125,0 +125,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/pisces\/Transform6.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private final Set<Runnable> disposeHooks = new HashSet<Runnable>();\n+    private final Set<Runnable> disposeHooks = new HashSet<>();\n@@ -87,1 +87,1 @@\n-            hooks = new ArrayList<Runnable>(disposeHooks);\n+            hooks = new ArrayList<>(disposeHooks);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/GraphicsPipeline.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-                };\n+                }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/Image.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        textures = new ArrayList<Texture>(4);\n+        textures = new ArrayList<>(4);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/MultiTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    public enum MapType {DIFFUSE, SPECULAR, BUMP, SELF_ILLUM};\n+    public enum MapType {DIFFUSE, SPECULAR, BUMP, SELF_ILLUM}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/PhongMaterial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -506,1 +506,1 @@\n-            case (int)D3DERR_DEVICENOTRESET:\n+            case D3DERR_DEVICENOTRESET:\n@@ -508,1 +508,1 @@\n-            case (int)D3DERR_DEVICELOST:\n+            case D3DERR_DEVICELOST:\n@@ -510,1 +510,1 @@\n-            case (int)D3DERR_OUTOFVIDEOMEMORY:\n+            case D3DERR_OUTOFVIDEOMEMORY:\n@@ -512,1 +512,1 @@\n-            case (int)D3DERR_DEVICEREMOVED:\n+            case D3DERR_DEVICEREMOVED:\n@@ -514,1 +514,1 @@\n-            case (int)D3D_OK:\n+            case D3D_OK:\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DContext.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-};\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DFrameStats.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-class D3DPhongMaterial extends BasePhongMaterial implements PhongMaterial {\n+class D3DPhongMaterial extends BasePhongMaterial {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DPhongMaterial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-        new LinkedList<D3DResource.D3DRecord>();\n+        new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,2 +39,1 @@\n-        return ((long) physicalWidth) * ((long) physicalHeight) *\n-               ((long) format.getBytesPerPixelUnit());\n+        return (long) physicalWidth * physicalHeight * format.getBytesPerPixelUnit();\n@@ -46,1 +45,1 @@\n-        return ((long) physicalWidth) * ((long) physicalHeight) * 4L;\n+        return 4L * physicalWidth * physicalHeight;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DTextureData.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -51,2 +51,1 @@\n-        return ((long) width) * ((long) height) *\n-               ((long) format.getBytesPerPixelUnit());\n+        return (long) width * height * format.getBytesPerPixelUnit();\n@@ -60,1 +59,1 @@\n-        return ((long) width) * ((long) height) * 4L;\n+        return 4L * width * height;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DVramPool.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -474,1 +474,1 @@\n-        ES2Shader shader = (ES2Shader) getPhongShader(meshView);\n+        ES2Shader shader = getPhongShader(meshView);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Context.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-class ES2PhongMaterial extends BasePhongMaterial implements PhongMaterial {\n+class ES2PhongMaterial extends BasePhongMaterial {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2PhongMaterial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-            Map<String, Integer> attributes = new HashMap<String, Integer>();\n+            Map<String, Integer> attributes = new HashMap<>();\n@@ -171,1 +171,1 @@\n-            Map<String, Integer> samplers = new HashMap<String, Integer>();\n+            Map<String, Integer> samplers = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2PhongShader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -290,1 +290,1 @@\n-        ES2TextureResource<ES2RTTextureData> texRes = new ES2TextureResource<ES2RTTextureData>(texData);\n+        ES2TextureResource<ES2RTTextureData> texRes = new ES2TextureResource<>(texData);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2RTTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -288,1 +288,1 @@\n-        Map<String, Integer> attributes = new HashMap<String, Integer>();\n+        Map<String, Integer> attributes = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2ResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    private final Map<String, Uniform> uniforms = new HashMap<String, Uniform>();\n+    private final Map<String, Uniform> uniforms = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Shader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,1 @@\n-        return ((long) width) * ((long) height) *\n-               ((long) format.getBytesPerPixelUnit());\n+        return (long) width * height * format.getBytesPerPixelUnit();\n@@ -55,1 +54,1 @@\n-        return ((long) width) * ((long) height) * 4L;\n+        return 4L * width * height;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2VramPool.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        greyGlyphCaches = new HashMap<FontStrike, GlyphCache>();\n+        greyGlyphCaches = new HashMap<>();\n@@ -81,1 +81,1 @@\n-        lcdGlyphCaches = new HashMap<FontStrike, GlyphCache>();\n+        lcdGlyphCaches = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseContext.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -115,0 +115,1 @@\n+    @Override\n@@ -129,0 +130,1 @@\n+    @Override\n@@ -133,0 +135,1 @@\n+    @Override\n@@ -137,0 +140,1 @@\n+    @Override\n@@ -146,0 +150,1 @@\n+    @Override\n@@ -155,0 +160,1 @@\n+    @Override\n@@ -163,0 +169,1 @@\n+    @Override\n@@ -173,0 +180,1 @@\n+    @Override\n@@ -178,0 +186,1 @@\n+    @Override\n@@ -185,0 +194,1 @@\n+    @Override\n@@ -192,0 +202,1 @@\n+    @Override\n@@ -199,0 +210,1 @@\n+    @Override\n@@ -206,0 +218,1 @@\n+    @Override\n@@ -209,0 +222,1 @@\n+    @Override\n@@ -213,0 +227,1 @@\n+    @Override\n@@ -217,0 +232,1 @@\n+    @Override\n@@ -249,0 +265,1 @@\n+    @Override\n@@ -253,0 +270,1 @@\n+    @Override\n@@ -257,0 +275,1 @@\n+    @Override\n@@ -261,0 +280,1 @@\n+    @Override\n@@ -265,0 +285,1 @@\n+    @Override\n@@ -271,0 +292,1 @@\n+    @Override\n@@ -275,0 +297,1 @@\n+    @Override\n@@ -279,0 +302,1 @@\n+    @Override\n@@ -299,0 +323,1 @@\n+    @Override\n@@ -303,0 +328,1 @@\n+    @Override\n@@ -307,0 +333,1 @@\n+    @Override\n@@ -311,0 +338,1 @@\n+    @Override\n@@ -315,0 +343,1 @@\n+    @Override\n@@ -325,0 +354,1 @@\n+    @Override\n@@ -329,0 +359,1 @@\n+    @Override\n@@ -333,0 +364,1 @@\n+    @Override\n@@ -337,0 +369,1 @@\n+    @Override\n@@ -341,0 +374,1 @@\n+    @Override\n@@ -345,0 +379,1 @@\n+    @Override\n@@ -350,0 +385,1 @@\n+    @Override\n@@ -354,0 +390,1 @@\n+    @Override\n@@ -358,0 +395,1 @@\n+    @Override\n@@ -365,0 +403,1 @@\n+    @Override\n@@ -388,0 +427,1 @@\n+    @Override\n@@ -646,0 +686,1 @@\n+    @Override\n@@ -694,0 +735,1 @@\n+    @Override\n@@ -735,0 +777,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseGraphics.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    };\n+    }\n@@ -348,1 +348,1 @@\n-                MeshGeomComp2VB mp2vb = (MeshGeomComp2VB) point2vbMap.get(pointOffset);\n+                MeshGeomComp2VB mp2vb = point2vbMap.get(pointOffset);\n@@ -384,1 +384,1 @@\n-                MeshGeomComp2VB mt2vb = (MeshGeomComp2VB) texCoord2vbMap.get(texCoordOffset);\n+                MeshGeomComp2VB mt2vb = texCoord2vbMap.get(texCoordOffset);\n@@ -419,1 +419,1 @@\n-                MeshGeomComp2VB mn2vb = (MeshGeomComp2VB) normal2vbMap.get(normalOffset);\n+                MeshGeomComp2VB mn2vb = normal2vbMap.get(normalOffset);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseMesh.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            new WeakHashMap<ResourceFactoryListener,Boolean>();\n+            new WeakHashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    private final LinkedList<Record> disposalQueue = new LinkedList<Record>();\n+    private final LinkedList<Record> disposalQueue = new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/Disposer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-        glyphDataMap = new HashMap<Integer, GlyphData[]>();\n+        glyphDataMap = new HashMap<>();\n@@ -88,1 +88,1 @@\n-        new WeakHashMap<BaseContext, RectanglePacker>();\n+        new WeakHashMap<>();\n@@ -91,1 +91,1 @@\n-        new WeakHashMap<BaseContext, RectanglePacker>();\n+        new WeakHashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/GlyphCache.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            this.lockedFrom = new ArrayList<Throwable>();\n+            this.lockedFrom = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ManagedResource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-            new ThreadLocal<MeshTempState>() {\n+            new ThreadLocal<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/MeshTempState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -96,0 +96,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismSettings.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,2 +42,2 @@\n-            texData = new HashMap<Long, Long>();\n-            rttData = new HashMap<Long, Long>();\n+            texData = new HashMap<>();\n+            rttData = new HashMap<>();\n@@ -56,1 +56,1 @@\n-    private static enum SummaryType { TYPE_TEX, TYPE_RTT, TYPE_ALL };\n+    private static enum SummaryType { TYPE_TEX, TYPE_RTT, TYPE_ALL }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismTrace.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-         new ArrayList<WeakReference<Pixels>>(3);\n+         new ArrayList<>(3);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/QueuedPixelSource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    private List<Level> levels = new ArrayList<Level>(150);\n+    private List<Level> levels = new ArrayList<>(150);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/packrect\/RectanglePacker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/paint\/LinearGradientContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        Gradient mgrad = (Gradient)grad;\n+        Gradient mgrad = grad;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/paint\/PaintUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/paint\/RadialGradientContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+    @Override\n@@ -58,0 +59,1 @@\n+    @Override\n@@ -63,0 +65,1 @@\n+    @Override\n@@ -68,0 +71,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderFactory.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,0 +98,1 @@\n+    @Override\n@@ -106,0 +107,1 @@\n+    @Override\n@@ -124,0 +126,1 @@\n+    @Override\n@@ -126,0 +129,1 @@\n+    @Override\n@@ -250,1 +254,1 @@\n-        Texture textures[] = ((MultiTexture)tex).getTextures();\n+        Texture textures[] = tex.getTextures();\n@@ -264,2 +268,2 @@\n-            float imgWidth = (float)tex.getContentWidth();\n-            float imgHeight = (float)tex.getContentHeight();\n+            float imgWidth = tex.getContentWidth();\n+            float imgHeight = tex.getContentHeight();\n@@ -271,2 +275,2 @@\n-            lumaScaleX = calculateScaleFactor(imgWidth, (float)lumaTex.getPhysicalWidth());\n-            lumaScaleY = calculateScaleFactor(imgHeight, (float)lumaTex.getPhysicalHeight());\n+            lumaScaleX = calculateScaleFactor(imgWidth, lumaTex.getPhysicalWidth());\n+            lumaScaleY = calculateScaleFactor(imgHeight, lumaTex.getPhysicalHeight());\n@@ -276,2 +280,2 @@\n-                alphaScaleX = calculateScaleFactor(imgWidth, (float)alphaTex.getPhysicalWidth());\n-                alphaScaleY = calculateScaleFactor(imgHeight, (float)alphaTex.getPhysicalHeight());\n+                alphaScaleX = calculateScaleFactor(imgWidth, alphaTex.getPhysicalWidth());\n+                alphaScaleY = calculateScaleFactor(imgHeight, alphaTex.getPhysicalHeight());\n@@ -282,2 +286,2 @@\n-            float chromaWidth = (float)Math.floor((double)imgWidth\/2.0);\n-            float chromaHeight = (float)Math.floor((double)imgHeight\/2.0);\n+            float chromaWidth = (float)Math.floor(imgWidth\/2.0);\n+            float chromaHeight = (float)Math.floor(imgHeight\/2.0);\n@@ -285,4 +289,4 @@\n-            cbScaleX = calculateScaleFactor(chromaWidth, (float)cbTex.getPhysicalWidth());\n-            cbScaleY = calculateScaleFactor(chromaHeight, (float)cbTex.getPhysicalHeight());\n-            crScaleX = calculateScaleFactor(chromaWidth, (float)crTex.getPhysicalWidth());\n-            crScaleY = calculateScaleFactor(chromaHeight, (float)crTex.getPhysicalHeight());\n+            cbScaleX = calculateScaleFactor(chromaWidth, cbTex.getPhysicalWidth());\n+            cbScaleY = calculateScaleFactor(chromaHeight, cbTex.getPhysicalHeight());\n+            crScaleX = calculateScaleFactor(chromaWidth, crTex.getPhysicalWidth());\n+            crScaleY = calculateScaleFactor(chromaHeight, crTex.getPhysicalHeight());\n@@ -306,0 +310,1 @@\n+    @Override\n@@ -329,0 +334,1 @@\n+    @Override\n@@ -356,0 +362,1 @@\n+    @Override\n@@ -385,0 +392,1 @@\n+    @Override\n@@ -1505,0 +1513,1 @@\n+    @Override\n@@ -1530,0 +1539,1 @@\n+    @Override\n@@ -1557,0 +1567,1 @@\n+    @Override\n@@ -1580,0 +1591,1 @@\n+    @Override\n@@ -1649,0 +1661,1 @@\n+    @Override\n@@ -1661,0 +1674,1 @@\n+    @Override\n@@ -1713,0 +1727,1 @@\n+    @Override\n@@ -1728,0 +1743,1 @@\n+    @Override\n@@ -1748,0 +1764,1 @@\n+    @Override\n@@ -1923,0 +1940,1 @@\n+    @Override\n@@ -1966,0 +1984,1 @@\n+    @Override\n@@ -2104,1 +2123,1 @@\n-            float unitXCoord = 1.0f\/((float)cacheTex.getPhysicalWidth());\n+            float unitXCoord = 1.0f \/ cacheTex.getPhysicalWidth();\n@@ -2135,0 +2154,1 @@\n+    @Override\n@@ -2141,0 +2161,1 @@\n+    @Override\n@@ -2168,0 +2189,1 @@\n+    @Override\n@@ -2174,0 +2196,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderGraphics.java","additions":37,"deletions":14,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -87,0 +87,1 @@\n+    @Override\n@@ -91,0 +92,1 @@\n+    @Override\n@@ -102,0 +104,1 @@\n+    @Override\n@@ -109,0 +112,1 @@\n+    @Override\n@@ -116,0 +120,1 @@\n+    @Override\n@@ -234,1 +239,1 @@\n-                while (entries[pos] != entry && pos < toPos) { ++pos; };\n+                while (entries[pos] != entry && pos < toPos) { ++pos; }\n@@ -604,0 +609,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/CachingShapeRep.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -310,1 +310,1 @@\n-        shader.setConstant(\"offset\", index_y \/ (float)MULTI_CACHE_SIZE + HALF_TEXEL_Y);\n+        shader.setConstant(\"offset\", index_y \/ MULTI_CACHE_SIZE + HALF_TEXEL_Y);\n@@ -633,1 +633,1 @@\n-        fd = (float) Math.min(fd, 0.99f);\n+        fd = Math.min(fd, 0.99f);\n@@ -702,1 +702,1 @@\n-        fd = (float) Math.min(fd, 0.99f);\n+        fd = Math.min(fd, 0.99f);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/PaintHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+    @Override\n@@ -42,0 +43,1 @@\n+    @Override\n@@ -45,0 +47,1 @@\n+    @Override\n@@ -49,0 +52,1 @@\n+    @Override\n@@ -53,0 +57,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/shape\/BasicShapeRep.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.prism.PixelFormat;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/shape\/MaskData.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import com.sun.javafx.geom.Path2D;\n-import com.sun.javafx.geom.PathConsumer2D;\n@@ -35,1 +33,0 @@\n-import com.sun.prism.impl.PrismSettings.RasterizerType;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/shape\/ShapeUtil.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+    @Override\n@@ -62,0 +63,1 @@\n+    @Override\n@@ -67,0 +69,1 @@\n+    @Override\n@@ -72,0 +75,1 @@\n+    @Override\n@@ -76,0 +80,1 @@\n+    @Override\n@@ -80,0 +85,1 @@\n+    @Override\n@@ -84,0 +90,1 @@\n+    @Override\n@@ -88,0 +95,1 @@\n+    @Override\n@@ -98,0 +106,1 @@\n+    @Override\n@@ -150,0 +159,1 @@\n+    @Override\n@@ -171,0 +181,1 @@\n+            @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DFontFactory.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            new HashMap<Integer, J2DResourceFactory>(1);\n+            new HashMap<>(1);\n@@ -111,0 +111,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPipeline.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,0 +108,1 @@\n+        @Override\n@@ -127,0 +128,1 @@\n+        @Override\n@@ -133,0 +135,1 @@\n+        @Override\n@@ -137,0 +140,1 @@\n+        @Override\n@@ -141,0 +145,1 @@\n+        @Override\n@@ -145,0 +150,1 @@\n+        @Override\n@@ -167,0 +173,1 @@\n+        @Override\n@@ -171,0 +178,1 @@\n+        @Override\n@@ -175,0 +183,1 @@\n+        @Override\n@@ -179,0 +188,1 @@\n+        @Override\n@@ -183,1 +193,2 @@\n-       public void setOpaque(boolean opaque) {\n+        @Override\n+        public void setOpaque(boolean opaque) {\n@@ -187,0 +198,1 @@\n+        @Override\n@@ -211,0 +223,1 @@\n+    @Override\n@@ -246,0 +259,1 @@\n+    @Override\n@@ -250,0 +264,1 @@\n+    @Override\n@@ -254,0 +269,1 @@\n+    @Override\n@@ -268,0 +284,1 @@\n+    @Override\n@@ -275,0 +292,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPresentable.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -338,2 +338,1 @@\n-        fontMap = new ConcurrentHashMap<java.awt.Font,\n-                                        WeakReference<java.awt.Font>>();\n+        fontMap = new ConcurrentHashMap<>();\n@@ -551,0 +550,1 @@\n+    @Override\n@@ -555,0 +555,1 @@\n+    @Override\n@@ -559,0 +560,1 @@\n+    @Override\n@@ -566,0 +568,1 @@\n+    @Override\n@@ -570,0 +573,1 @@\n+    @Override\n@@ -574,0 +578,1 @@\n+    @Override\n@@ -578,0 +583,1 @@\n+    @Override\n@@ -596,0 +602,1 @@\n+    @Override\n@@ -600,0 +607,1 @@\n+    @Override\n@@ -604,0 +612,1 @@\n+    @Override\n@@ -618,0 +627,1 @@\n+    @Override\n@@ -636,0 +646,1 @@\n+    @Override\n@@ -640,0 +651,1 @@\n+    @Override\n@@ -651,0 +663,1 @@\n+    @Override\n@@ -655,0 +668,1 @@\n+    @Override\n@@ -660,0 +674,1 @@\n+    @Override\n@@ -664,0 +679,1 @@\n+    @Override\n@@ -669,0 +685,1 @@\n+    @Override\n@@ -674,0 +691,1 @@\n+    @Override\n@@ -683,0 +701,1 @@\n+    @Override\n@@ -690,0 +709,1 @@\n+    @Override\n@@ -698,0 +718,1 @@\n+    @Override\n@@ -702,0 +723,1 @@\n+    @Override\n@@ -716,0 +738,1 @@\n+    @Override\n@@ -750,0 +773,1 @@\n+    @Override\n@@ -754,0 +778,1 @@\n+    @Override\n@@ -758,0 +783,1 @@\n+    @Override\n@@ -764,0 +790,1 @@\n+    @Override\n@@ -768,0 +795,1 @@\n+    @Override\n@@ -790,0 +818,1 @@\n+    @Override\n@@ -794,0 +823,1 @@\n+    @Override\n@@ -798,0 +828,1 @@\n+    @Override\n@@ -802,0 +833,1 @@\n+    @Override\n@@ -806,0 +838,1 @@\n+    @Override\n@@ -812,0 +845,1 @@\n+    @Override\n@@ -837,0 +871,1 @@\n+    @Override\n@@ -948,0 +983,1 @@\n+    @Override\n@@ -975,0 +1011,1 @@\n+    @Override\n@@ -980,0 +1017,1 @@\n+    @Override\n@@ -1045,0 +1083,1 @@\n+    @Override\n@@ -1058,0 +1097,1 @@\n+    @Override\n@@ -1098,0 +1138,1 @@\n+    @Override\n@@ -1108,0 +1149,1 @@\n+    @Override\n@@ -1263,0 +1305,1 @@\n+    @Override\n@@ -1267,0 +1310,1 @@\n+    @Override\n@@ -1284,0 +1328,1 @@\n+    @Override\n@@ -1290,0 +1335,1 @@\n+    @Override\n@@ -1294,0 +1340,1 @@\n+    @Override\n@@ -1298,0 +1345,1 @@\n+    @Override\n@@ -1302,0 +1350,1 @@\n+    @Override\n@@ -1306,0 +1355,1 @@\n+    @Override\n@@ -1313,0 +1363,1 @@\n+    @Override\n@@ -1320,0 +1371,1 @@\n+    @Override\n@@ -1324,0 +1376,1 @@\n+    @Override\n@@ -1328,0 +1381,1 @@\n+    @Override\n@@ -1340,0 +1394,1 @@\n+    @Override\n@@ -1350,0 +1405,1 @@\n+    @Override\n@@ -1354,0 +1410,1 @@\n+    @Override\n@@ -1358,0 +1415,1 @@\n+    @Override\n@@ -1361,0 +1419,1 @@\n+    @Override\n@@ -1373,1 +1432,2 @@\n- public void setClipRectIndex(int index) {\n+    @Override\n+    public void setClipRectIndex(int index) {\n@@ -1376,0 +1436,2 @@\n+\n+    @Override\n@@ -1380,0 +1442,1 @@\n+    @Override\n@@ -1384,0 +1447,1 @@\n+    @Override\n@@ -1399,0 +1463,1 @@\n+    @Override\n@@ -1402,0 +1467,1 @@\n+    @Override\n@@ -1406,0 +1472,1 @@\n+    @Override\n@@ -1439,0 +1506,1 @@\n+        @Override\n@@ -1443,0 +1511,1 @@\n+        @Override\n@@ -1447,0 +1516,1 @@\n+        @Override\n@@ -1451,0 +1521,1 @@\n+        @Override\n@@ -1455,0 +1526,1 @@\n+        @Override\n@@ -1459,0 +1531,1 @@\n+        @Override\n@@ -1463,0 +1536,1 @@\n+        @Override\n@@ -1467,0 +1541,1 @@\n+        @Override\n@@ -1482,0 +1557,1 @@\n+        @Override\n@@ -1489,0 +1565,1 @@\n+        @Override\n@@ -1509,0 +1586,1 @@\n+        @Override\n@@ -1513,0 +1591,1 @@\n+        @Override\n@@ -1519,1 +1598,1 @@\n-                coords[i] = (double) tmpcoords[i];\n+                coords[i] = tmpcoords[i];\n@@ -1524,0 +1603,1 @@\n+        @Override\n@@ -1528,0 +1608,1 @@\n+        @Override\n@@ -1532,0 +1613,1 @@\n+        @Override\n@@ -1547,0 +1629,1 @@\n+        @Override\n@@ -1598,0 +1681,1 @@\n+        @Override\n@@ -1689,0 +1773,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPrismGraphics.java","additions":89,"deletions":4,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+    @Override\n@@ -61,0 +62,1 @@\n+    @Override\n@@ -70,0 +72,1 @@\n+    @Override\n@@ -89,4 +92,4 @@\n-                ((ByteBuffer)pixels).put((byte)b);\n-                ((ByteBuffer)pixels).put((byte)g);\n-                ((ByteBuffer)pixels).put((byte)r);\n-                ((ByteBuffer)pixels).put((byte)a);\n+                ((ByteBuffer)pixels).put(b);\n+                ((ByteBuffer)pixels).put(g);\n+                ((ByteBuffer)pixels).put(r);\n+                ((ByteBuffer)pixels).put(a);\n@@ -99,0 +102,1 @@\n+    @Override\n@@ -110,0 +114,1 @@\n+    @Override\n@@ -145,0 +150,1 @@\n+    @Override\n@@ -149,0 +155,1 @@\n+    @Override\n@@ -153,0 +160,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DRTTexture.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+    @Override\n@@ -76,0 +77,1 @@\n+    @Override\n@@ -80,0 +82,1 @@\n+    @Override\n@@ -84,0 +87,1 @@\n+    @Override\n@@ -88,0 +92,1 @@\n+    @Override\n@@ -92,0 +97,1 @@\n+    @Override\n@@ -96,0 +102,1 @@\n+    @Override\n@@ -100,0 +107,1 @@\n+    @Override\n@@ -109,0 +117,1 @@\n+    @Override\n@@ -118,0 +127,1 @@\n+    @Override\n@@ -125,0 +135,1 @@\n+    @Override\n@@ -130,0 +141,1 @@\n+    @Override\n@@ -161,0 +173,1 @@\n+    @Override\n@@ -165,0 +178,1 @@\n+    @Override\n@@ -181,0 +195,1 @@\n+    @Override\n@@ -184,0 +199,1 @@\n+    @Override\n@@ -188,0 +204,1 @@\n+    @Override\n@@ -192,0 +209,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DResourceFactory.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import com.sun.prism.Texture.WrapMode;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DTexture.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+        @Override\n@@ -78,0 +79,1 @@\n+        @Override\n@@ -82,0 +84,1 @@\n+        @Override\n@@ -86,0 +89,1 @@\n+        @Override\n@@ -91,0 +95,1 @@\n+        @Override\n@@ -95,0 +100,1 @@\n+        @Override\n@@ -103,0 +109,1 @@\n+    @Override\n@@ -114,0 +121,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/PrismPrintGraphics.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+    @Override\n@@ -65,0 +66,1 @@\n+    @Override\n@@ -91,0 +93,1 @@\n+        @Override\n@@ -105,0 +108,1 @@\n+    @Override\n@@ -107,1 +111,1 @@\n-            TreeSet<Printer> printers = new TreeSet<Printer>(nameComparator);\n+            TreeSet<Printer> printers = new TreeSet<>(nameComparator);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/PrismPrintPipeline.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -302,0 +302,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/paint\/MultipleGradientPaint.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-                mgp.gradient = new SoftReference<int[]>(this.gradient);\n+                mgp.gradient = new SoftReference<>(this.gradient);\n@@ -222,1 +222,1 @@\n-                mgp.gradients = new SoftReference<int[][]>(this.gradients);\n+                mgp.gradients = new SoftReference<>(this.gradients);\n@@ -615,0 +615,1 @@\n+    @Override\n@@ -659,1 +660,1 @@\n-                Raster ras = (Raster) cached.get();\n+                Raster ras = cached.get();\n@@ -681,1 +682,1 @@\n-            Raster cras = (Raster) cached.get();\n+            Raster cras = cached.get();\n@@ -696,1 +697,1 @@\n-        cached = new WeakReference<Raster>(ras);\n+        cached = new WeakReference<>(ras);\n@@ -702,0 +703,1 @@\n+    @Override\n@@ -712,0 +714,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/paint\/MultipleGradientPaintContext.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -549,0 +549,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/paint\/RadialGradientPaint.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -174,0 +174,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/paint\/RadialGradientPaintContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -90,0 +90,1 @@\n+    @Override\n@@ -98,0 +99,1 @@\n+    @Override\n@@ -106,0 +108,1 @@\n+    @Override\n@@ -113,0 +116,1 @@\n+    @Override\n@@ -128,0 +132,1 @@\n+    @Override\n@@ -157,0 +162,1 @@\n+    @Override\n@@ -176,0 +182,1 @@\n+    @Override\n@@ -194,0 +201,1 @@\n+    @Override\n@@ -206,0 +214,1 @@\n+    @Override\n@@ -208,1 +217,1 @@\n-            Set<Collation> cSet = new TreeSet<Collation>();\n+            Set<Collation> cSet = new TreeSet<>();\n@@ -246,0 +255,1 @@\n+    @Override\n@@ -258,0 +268,1 @@\n+    @Override\n@@ -260,1 +271,1 @@\n-            Set<PrintColor> cSet = new TreeSet<PrintColor>();\n+            Set<PrintColor> cSet = new TreeSet<>();\n@@ -288,0 +299,1 @@\n+    @Override\n@@ -304,0 +316,1 @@\n+    @Override\n@@ -306,1 +319,1 @@\n-            Set<PrintSides> sSet = new TreeSet<PrintSides>();\n+            Set<PrintSides> sSet = new TreeSet<>();\n@@ -370,0 +383,1 @@\n+    @Override\n@@ -380,0 +394,1 @@\n+    @Override\n@@ -385,1 +400,1 @@\n-        Set<PageOrientation> oset = new TreeSet<PageOrientation>();\n+        Set<PageOrientation> oset = new TreeSet<>();\n@@ -429,0 +444,1 @@\n+    @Override\n@@ -456,0 +472,1 @@\n+        @Override\n@@ -472,0 +489,1 @@\n+    @Override\n@@ -477,1 +495,1 @@\n-            TreeSet<PrintResolution>(PrintResolutionComparator.theComparator);\n+            TreeSet<>(PrintResolutionComparator.theComparator);\n@@ -515,0 +533,1 @@\n+    @Override\n@@ -535,0 +554,1 @@\n+    @Override\n@@ -537,1 +557,1 @@\n-            Set<PrintQuality> set = new TreeSet<PrintQuality>();\n+            Set<PrintQuality> set = new TreeSet<>();\n@@ -582,0 +602,1 @@\n+        @Override\n@@ -596,0 +617,1 @@\n+        @Override\n@@ -611,0 +633,1 @@\n+    @Override\n@@ -625,0 +648,1 @@\n+    @Override\n@@ -687,1 +711,1 @@\n-        Set<Paper> pSet = new TreeSet<Paper>(PaperComparator.theComparator);\n+        Set<Paper> pSet = new TreeSet<>(PaperComparator.theComparator);\n@@ -689,1 +713,1 @@\n-            new TreeSet<PaperSource>(PaperSourceComparator.theComparator);\n+            new TreeSet<>(PaperSourceComparator.theComparator);\n@@ -715,0 +739,1 @@\n+    @Override\n@@ -724,0 +749,1 @@\n+    @Override\n@@ -767,1 +793,1 @@\n-            trayToSourceMap = new HashMap<MediaTray, PaperSource>();\n+            trayToSourceMap = new HashMap<>();\n@@ -772,1 +798,1 @@\n-            sourceToTrayMap = new HashMap<PaperSource, MediaTray>();\n+            sourceToTrayMap = new HashMap<>();\n@@ -784,1 +810,1 @@\n-         = new HashMap<MediaSizeName, Paper>();\n+         = new HashMap<>();\n@@ -786,1 +812,1 @@\n-         = new HashMap<Paper, MediaSizeName>();\n+         = new HashMap<>();\n@@ -843,0 +869,1 @@\n+    @Override\n@@ -865,1 +892,1 @@\n-            double pw = (paper.getWidth() \/ 72.0);                    ;\n+            double pw = (paper.getWidth() \/ 72.0);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/print\/J2DPrinter.java","additions":40,"deletions":13,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -178,0 +178,1 @@\n+    @Override\n@@ -228,0 +229,1 @@\n+        @Override\n@@ -254,0 +256,1 @@\n+    @Override\n@@ -303,0 +306,1 @@\n+        @Override\n@@ -373,1 +377,1 @@\n-                    ArrayList<PageRange> prList = new ArrayList<PageRange>();\n+                    ArrayList<PageRange> prList = new ArrayList<>();\n@@ -547,0 +551,1 @@\n+    @Override\n@@ -556,0 +561,1 @@\n+    @Override\n@@ -776,1 +782,1 @@\n-        };\n+        }\n@@ -793,0 +799,1 @@\n+    @Override\n@@ -841,0 +848,1 @@\n+    @Override\n@@ -877,0 +885,1 @@\n+        @Override\n@@ -907,0 +916,1 @@\n+        @Override\n@@ -922,0 +932,1 @@\n+        @Override\n@@ -1033,0 +1044,1 @@\n+        @Override\n@@ -1136,0 +1148,1 @@\n+        @Override\n@@ -1169,0 +1182,1 @@\n+        @Override\n@@ -1174,0 +1188,1 @@\n+        @Override\n@@ -1185,0 +1200,1 @@\n+        @Override\n@@ -1231,0 +1247,1 @@\n+    @Override\n@@ -1250,0 +1267,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/print\/J2DPrinterJob.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyContext.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    @Override\n@@ -46,0 +47,1 @@\n+    @Override\n@@ -49,0 +51,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyGraphics.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    @Override\n@@ -51,0 +52,1 @@\n+    @Override\n@@ -55,0 +57,1 @@\n+    @Override\n@@ -59,0 +62,1 @@\n+    @Override\n@@ -63,0 +67,1 @@\n+    @Override\n@@ -91,0 +96,1 @@\n+    @Override\n@@ -94,0 +100,1 @@\n+    @Override\n@@ -98,0 +105,1 @@\n+    @Override\n@@ -102,0 +110,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyRTTexture.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyResource.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    @Override\n@@ -77,0 +78,1 @@\n+    @Override\n@@ -81,0 +83,1 @@\n+    @Override\n@@ -101,0 +104,1 @@\n+    @Override\n@@ -106,0 +110,1 @@\n+    @Override\n@@ -116,0 +121,1 @@\n+    @Override\n@@ -129,0 +135,1 @@\n+    @Override\n@@ -133,0 +140,1 @@\n+    @Override\n@@ -138,0 +146,1 @@\n+    @Override\n@@ -142,0 +151,1 @@\n+    @Override\n@@ -146,0 +156,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyResourceFactory.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -57,0 +58,1 @@\n+    @Override\n@@ -61,0 +63,1 @@\n+    @Override\n@@ -64,0 +67,1 @@\n+    @Override\n@@ -67,0 +71,1 @@\n+    @Override\n@@ -70,0 +75,1 @@\n+    @Override\n@@ -73,0 +79,1 @@\n+    @Override\n@@ -76,0 +83,1 @@\n+    @Override\n@@ -79,0 +87,1 @@\n+    @Override\n@@ -82,0 +91,1 @@\n+    @Override\n@@ -85,0 +95,1 @@\n+    @Override\n@@ -88,0 +99,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyShader.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+    @Override\n@@ -60,0 +61,1 @@\n+    @Override\n@@ -65,0 +67,1 @@\n+    @Override\n@@ -69,0 +72,1 @@\n+    @Override\n@@ -73,0 +77,1 @@\n+    @Override\n@@ -77,0 +82,1 @@\n+    @Override\n@@ -81,0 +87,1 @@\n+    @Override\n@@ -85,0 +92,1 @@\n+    @Override\n@@ -89,0 +97,1 @@\n+    @Override\n@@ -103,0 +112,1 @@\n+    @Override\n@@ -107,0 +117,1 @@\n+    @Override\n@@ -111,0 +122,1 @@\n+    @Override\n@@ -115,0 +127,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummySwapChain.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    };\n+    }\n@@ -72,0 +72,1 @@\n+    @Override\n@@ -76,0 +77,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyTexture.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -59,0 +60,1 @@\n+    @Override\n@@ -63,1 +65,1 @@\n-            new HashMap<Integer, DummyResourceFactory>(1);\n+            new HashMap<>(1);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/NULL3DPipeline.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.prism.paint.Paint.Type;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/paint\/Color.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/paint\/ImagePattern.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    @Override\n@@ -181,0 +182,1 @@\n+    @Override\n@@ -185,0 +187,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWArgbPreTexture.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import com.sun.javafx.util.Logging;\n@@ -39,1 +38,0 @@\n-import com.sun.marlin.RendererContext;\n@@ -47,3 +45,0 @@\n-import com.sun.prism.impl.shape.MaskData;\n-import com.sun.prism.impl.shape.ShapeUtil;\n-\n@@ -171,1 +166,1 @@\n-                    renderer = DMarlinPrismUtils.setupRenderer(rdrCtx, (Path2D) shape, stroke, tr, clip,\n+                    renderer = DMarlinPrismUtils.setupRenderer(rdrCtx, shape, stroke, tr, clip,\n@@ -218,1 +213,1 @@\n-        readBackBufferRef = new SoftReference<SWRTTexture>(tex);\n+        readBackBufferRef = new SoftReference<>(tex);\n@@ -251,1 +246,1 @@\n-        imagePaintTextureRef = new SoftReference<SWArgbPreTexture>(tex);\n+        imagePaintTextureRef = new SoftReference<>(tex);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWContext.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -120,0 +120,1 @@\n+    @Override\n@@ -124,0 +125,1 @@\n+    @Override\n@@ -128,0 +130,1 @@\n+    @Override\n@@ -132,0 +135,1 @@\n+    @Override\n@@ -135,0 +139,1 @@\n+    @Override\n@@ -142,0 +147,1 @@\n+    @Override\n@@ -152,0 +158,1 @@\n+    @Override\n@@ -161,0 +168,1 @@\n+    @Override\n@@ -172,0 +180,1 @@\n+    @Override\n@@ -179,0 +188,1 @@\n+    @Override\n@@ -186,0 +196,1 @@\n+    @Override\n@@ -190,0 +201,1 @@\n+    @Override\n@@ -197,0 +209,1 @@\n+    @Override\n@@ -201,0 +214,1 @@\n+    @Override\n@@ -204,0 +218,1 @@\n+    @Override\n@@ -207,0 +222,1 @@\n+    @Override\n@@ -211,0 +227,1 @@\n+    @Override\n@@ -213,0 +230,1 @@\n+    @Override\n@@ -217,0 +235,1 @@\n+    @Override\n@@ -219,0 +238,1 @@\n+    @Override\n@@ -223,0 +243,1 @@\n+    @Override\n@@ -230,0 +251,1 @@\n+    @Override\n@@ -234,0 +256,1 @@\n+    @Override\n@@ -238,0 +261,1 @@\n+    @Override\n@@ -242,0 +266,1 @@\n+    @Override\n@@ -246,0 +271,1 @@\n+    @Override\n@@ -250,0 +276,1 @@\n+    @Override\n@@ -267,0 +294,1 @@\n+    @Override\n@@ -271,0 +299,1 @@\n+    @Override\n@@ -275,0 +304,1 @@\n+    @Override\n@@ -279,0 +309,1 @@\n+    @Override\n@@ -286,0 +317,1 @@\n+    @Override\n@@ -290,0 +322,1 @@\n+    @Override\n@@ -297,0 +330,1 @@\n+    @Override\n@@ -301,0 +335,1 @@\n+    @Override\n@@ -307,0 +342,1 @@\n+    @Override\n@@ -311,0 +347,1 @@\n+    @Override\n@@ -315,0 +352,1 @@\n+    @Override\n@@ -319,0 +357,1 @@\n+    @Override\n@@ -348,0 +387,1 @@\n+    @Override\n@@ -355,0 +395,1 @@\n+    @Override\n@@ -365,0 +406,1 @@\n+    @Override\n@@ -381,0 +423,1 @@\n+    @Override\n@@ -391,0 +434,1 @@\n+    @Override\n@@ -398,0 +442,1 @@\n+    @Override\n@@ -405,0 +450,1 @@\n+    @Override\n@@ -466,0 +512,1 @@\n+    @Override\n@@ -474,0 +521,1 @@\n+    @Override\n@@ -481,0 +529,1 @@\n+    @Override\n@@ -538,0 +587,1 @@\n+    @Override\n@@ -550,0 +600,1 @@\n+    @Override\n@@ -557,0 +608,1 @@\n+    @Override\n@@ -565,0 +617,1 @@\n+    @Override\n@@ -572,0 +625,1 @@\n+    @Override\n@@ -668,0 +722,1 @@\n+    @Override\n@@ -675,0 +730,1 @@\n+    @Override\n@@ -830,0 +886,1 @@\n+    @Override\n@@ -850,0 +907,1 @@\n+    @Override\n@@ -867,0 +925,1 @@\n+    @Override\n@@ -903,0 +962,1 @@\n+    @Override\n@@ -907,0 +967,1 @@\n+    @Override\n@@ -925,0 +986,1 @@\n+    @Override\n@@ -928,0 +990,1 @@\n+    @Override\n@@ -931,0 +994,1 @@\n+    @Override\n@@ -935,0 +999,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWGraphics.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -96,0 +96,1 @@\n+    @Override\n@@ -100,0 +101,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWMaskTexture.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            new HashMap<Integer, SWResourceFactory>(1);\n+            new HashMap<>(1);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+    @Override\n@@ -72,0 +73,1 @@\n+    @Override\n@@ -88,0 +90,1 @@\n+    @Override\n@@ -92,0 +95,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWPresentable.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,0 +111,1 @@\n+    @Override\n@@ -115,0 +116,1 @@\n+    @Override\n@@ -122,0 +124,1 @@\n+    @Override\n@@ -126,0 +129,1 @@\n+    @Override\n@@ -132,0 +136,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWRTTexture.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import com.sun.prism.ResourceFactory;\n@@ -52,2 +51,1 @@\n-    extends BaseResourceFactory\n-        implements ResourceFactory {\n+    extends BaseResourceFactory {\n@@ -71,0 +69,1 @@\n+    @Override\n@@ -110,0 +109,1 @@\n+    @Override\n@@ -114,0 +114,1 @@\n+    @Override\n@@ -185,0 +186,1 @@\n+    @Override\n@@ -189,0 +191,1 @@\n+    @Override\n@@ -193,0 +196,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWResourceFactory.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -84,0 +84,1 @@\n+    @Override\n@@ -88,0 +89,1 @@\n+    @Override\n@@ -93,0 +95,1 @@\n+    @Override\n@@ -97,0 +100,1 @@\n+    @Override\n@@ -101,0 +105,1 @@\n+    @Override\n@@ -108,0 +113,1 @@\n+    @Override\n@@ -113,0 +119,1 @@\n+    @Override\n@@ -118,0 +125,1 @@\n+    @Override\n@@ -125,0 +133,1 @@\n+    @Override\n@@ -188,0 +197,1 @@\n+    @Override\n@@ -192,0 +202,1 @@\n+    @Override\n@@ -232,0 +243,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWTexture.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/animation\/shared\/MultiLoopClipEnvelope.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Bloom.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -134,0 +134,1 @@\n+    @Override\n@@ -146,0 +147,1 @@\n+    @Override\n@@ -237,0 +239,1 @@\n+    @Override\n@@ -253,0 +256,1 @@\n+    @Override\n@@ -262,0 +266,1 @@\n+    @Override\n@@ -288,0 +293,1 @@\n+    @Override\n@@ -292,0 +298,1 @@\n+    @Override\n@@ -298,0 +305,1 @@\n+    @Override\n@@ -302,0 +310,1 @@\n+    @Override\n@@ -306,0 +315,1 @@\n+    @Override\n@@ -312,0 +322,1 @@\n+    @Override\n@@ -317,0 +328,1 @@\n+    @Override\n@@ -322,0 +334,1 @@\n+    @Override\n@@ -333,0 +346,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/BoxShadow.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -295,4 +295,4 @@\n-        float rw = (float) r.getWidth();\n-        float rh = (float) r.getHeight();\n-        float x = (float) ((p.x - r.getMinX()) \/ rw);\n-        float y = (float) ((p.y - r.getMinY()) \/ rh);\n+        float rw = r.getWidth();\n+        float rh = r.getHeight();\n+        float x = (p.x - r.getMinX()) \/ rw;\n+        float y = (p.y - r.getMinY()) \/ rh;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/DisplacementMap.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -111,0 +111,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/DropShadow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        this.inputs = new ArrayList<Effect>(1);\n+        this.inputs = new ArrayList<>(1);\n@@ -91,1 +91,1 @@\n-        this.inputs = new ArrayList<Effect>(2);\n+        this.inputs = new ArrayList<>(2);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Effect.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.scene.effect.Blend;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/EffectHelper.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-            cache = new HashMap<FilterContext, Entry>();\n+            cache = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/FloatMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+    @Override\n@@ -138,0 +139,1 @@\n+    @Override\n@@ -228,0 +230,1 @@\n+    @Override\n@@ -254,0 +257,1 @@\n+    @Override\n@@ -264,0 +268,1 @@\n+    @Override\n@@ -280,0 +285,1 @@\n+    @Override\n@@ -285,0 +291,1 @@\n+    @Override\n@@ -289,0 +296,1 @@\n+    @Override\n@@ -293,0 +301,1 @@\n+    @Override\n@@ -297,0 +306,1 @@\n+    @Override\n@@ -301,0 +311,1 @@\n+    @Override\n@@ -305,0 +316,1 @@\n+    @Override\n@@ -309,0 +321,1 @@\n+    @Override\n@@ -313,0 +326,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/GaussianShadow.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/GeneralShadow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Glow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        new HashMap<FilterContext, ImageData>();\n+        new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Identity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                alldatas = new HashSet<ImageData>();\n+                alldatas = new HashSet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/ImageData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,0 +115,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/InnerShadow.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -166,2 +166,2 @@\n-        float x = (float) (p.x + xoff);\n-        float y = (float) (p.y + yoff);\n+        float x = p.x + xoff;\n+        float y = p.y + yoff;\n@@ -174,2 +174,2 @@\n-        float x = (float) (p.x - xoff);\n-        float y = (float) (p.y - yoff);\n+        float x = p.x - xoff;\n+        float y = p.y - yoff;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Offset.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -226,2 +226,2 @@\n-        float sx = (float) ((p.x - b.getMinX()) \/ b.getWidth());\n-        float sy = (float) ((p.y - b.getMinY()) \/ b.getHeight());\n+        float sx = (p.x - b.getMinX()) \/ b.getWidth();\n+        float sy = (p.y - b.getMinY()) \/ b.getHeight();\n@@ -239,2 +239,2 @@\n-        float dx = (float) p.x;\n-        float dy = (float) p.y;\n+        float dx = p.x;\n+        float dy = p.y;\n@@ -285,1 +285,1 @@\n-        drc.deriveWithNewRegion((RectBounds) getBounds(BaseTransform.IDENTITY_TRANSFORM, defaultInput));\n+        drc.deriveWithNewRegion(getBounds(BaseTransform.IDENTITY_TRANSFORM, defaultInput));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/PerspectiveTransform.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -225,4 +225,4 @@\n-        float x1 = (float) r.getMinX();\n-        float y1 = (float) (r.getMaxY() + topOffset);\n-        float x2 = (float) r.getMaxX();\n-        float y2 = (float) (y1 + (fraction * r.getHeight()));\n+        float x1 = r.getMinX();\n+        float y1 = r.getMaxY() + topOffset;\n+        float x2 = r.getMaxX();\n+        float y2 = y1 + (fraction * r.getHeight());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/Reflection.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-        new ArrayList<SoftReference<PoolFilterable>>();\n+        new ArrayList<>();\n@@ -83,1 +83,1 @@\n-        new ArrayList<SoftReference<PoolFilterable>>();\n+        new ArrayList<>();\n@@ -100,1 +100,1 @@\n-    private final List<Filterable> hardPurgatory = new ArrayList<Filterable>();\n+    private final List<Filterable> hardPurgatory = new ArrayList<>();\n@@ -102,1 +102,1 @@\n-        new ArrayList<SoftReference<PoolFilterable>>();\n+        new ArrayList<>();\n@@ -196,1 +196,1 @@\n-            locked.add(new SoftReference<PoolFilterable>(img));\n+            locked.add(new SoftReference<>(img));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/ImagePool.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        new HashMap<FilterContext, Renderer>(1);\n+        new HashMap<>(1);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/Renderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+    @Override\n@@ -42,0 +43,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/es2\/ES2ShaderSource.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+    @Override\n@@ -42,0 +43,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/hw\/d3d\/D3DShaderSource.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-        new WeakHashMap<Screen, PrFilterContext>();\n+        new WeakHashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrFilterContext.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -58,0 +59,1 @@\n+    @Override\n@@ -62,0 +64,1 @@\n+    @Override\n@@ -66,0 +69,1 @@\n+    @Override\n@@ -70,0 +74,1 @@\n+    @Override\n@@ -74,0 +79,1 @@\n+    @Override\n@@ -78,0 +84,1 @@\n+    @Override\n@@ -82,0 +89,1 @@\n+    @Override\n@@ -86,0 +94,1 @@\n+    @Override\n@@ -90,0 +99,1 @@\n+    @Override\n@@ -94,0 +104,1 @@\n+    @Override\n@@ -97,0 +108,1 @@\n+    @Override\n@@ -100,0 +112,1 @@\n+    @Override\n@@ -104,0 +117,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrImage.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrRenderInfo.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+    @Override\n@@ -48,0 +49,1 @@\n+    @Override\n@@ -52,0 +54,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrTexture.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+    @Override\n@@ -67,0 +68,1 @@\n+    @Override\n@@ -74,0 +76,1 @@\n+    @Override\n@@ -78,0 +81,1 @@\n+    @Override\n@@ -82,0 +86,1 @@\n+    @Override\n@@ -86,0 +91,1 @@\n+    @Override\n@@ -90,0 +96,1 @@\n+    @Override\n@@ -94,0 +101,1 @@\n+    @Override\n@@ -98,0 +106,1 @@\n+    @Override\n@@ -102,0 +111,1 @@\n+    @Override\n@@ -106,0 +116,1 @@\n+    @Override\n@@ -110,0 +121,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSDrawable.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,0 +78,1 @@\n+        @Override\n@@ -82,0 +83,1 @@\n+        @Override\n@@ -412,2 +414,1 @@\n-        PPSDrawable dst = (PPSDrawable)\n-            getCompatibleImage(xformBounds.width, xformBounds.height);\n+        PPSDrawable dst = getCompatibleImage(xformBounds.width, xformBounds.height);\n@@ -434,2 +435,1 @@\n-        PPSDrawable dst = (PPSDrawable)\n-            getCompatibleImage(xformBounds.width, xformBounds.height);\n+        PPSDrawable dst = getCompatibleImage(xformBounds.width, xformBounds.height);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSRenderer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+    @Override\n@@ -85,0 +86,1 @@\n+    @Override\n@@ -93,0 +95,1 @@\n+    @Override\n@@ -97,0 +100,1 @@\n+    @Override\n@@ -101,0 +105,1 @@\n+    @Override\n@@ -105,0 +110,1 @@\n+    @Override\n@@ -109,0 +115,1 @@\n+    @Override\n@@ -113,0 +120,1 @@\n+    @Override\n@@ -117,0 +125,1 @@\n+    @Override\n@@ -121,0 +130,1 @@\n+    @Override\n@@ -127,0 +137,1 @@\n+    @Override\n@@ -133,0 +144,1 @@\n+    @Override\n@@ -137,0 +149,1 @@\n+    @Override\n@@ -180,0 +193,1 @@\n+    @Override\n@@ -182,1 +196,1 @@\n-        return (Graphics)rtt.createGraphics();\n+        return rtt.createGraphics();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/sw\/PSWDrawable.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -346,2 +346,1 @@\n-        PSWDrawable dst = (PSWDrawable)\n-            getCompatibleImage(xformBounds.width, xformBounds.height);\n+        PSWDrawable dst = getCompatibleImage(xformBounds.width, xformBounds.height);\n@@ -365,2 +364,1 @@\n-        PSWDrawable dst = (PSWDrawable)\n-            getCompatibleImage(xformBounds.width, xformBounds.height);\n+        PSWDrawable dst = getCompatibleImage(xformBounds.width, xformBounds.height);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/sw\/PSWRenderer.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/state\/LinearConvolveRenderState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import com.sun.scenario.effect.BoxShadow;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/java\/JSWBoxShadowPeer.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+    @Override\n@@ -41,0 +42,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/java\/JSWRendererDelegate.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+    @Override\n@@ -58,0 +59,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/sse\/SSERendererDelegate.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-                    ctx.reference = new HardReference<K>(ctx);\n+                    ctx.reference = new HardReference<>(ctx);\n@@ -143,1 +143,1 @@\n-                    ctx.reference = new SoftReference<K>(ctx);\n+                    ctx.reference = new SoftReference<>(ctx);\n@@ -147,1 +147,1 @@\n-                    ctx.reference = new WeakReference<K>(ctx);\n+                    ctx.reference = new WeakReference<>(ctx);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/util\/reentrant\/ReentrantContextProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        = new ConcurrentLinkedQueue<Reference<K>>();\n+        = new ConcurrentLinkedQueue<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/util\/reentrant\/ReentrantContextProviderCLQ.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        = new ThreadLocal<Reference<K>>();\n+        = new ThreadLocal<>();\n@@ -75,1 +75,1 @@\n-        this.ctxProviderCLQ = new ReentrantContextProviderCLQ<K>(refTypeCLQ) {\n+        this.ctxProviderCLQ = new ReentrantContextProviderCLQ<>(refTypeCLQ) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/util\/reentrant\/ReentrantContextProviderTL.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/FadeTransition.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-            shape = new SimpleObjectProperty<Shape>(this, \"shape\", DEFAULT_SHAPE);\n+            shape = new SimpleObjectProperty<>(this, \"shape\", DEFAULT_SHAPE);\n@@ -200,1 +200,1 @@\n-            fromValue = new SimpleObjectProperty<Color>(this, \"fromValue\", DEFAULT_FROM_VALUE);\n+            fromValue = new SimpleObjectProperty<>(this, \"fromValue\", DEFAULT_FROM_VALUE);\n@@ -230,1 +230,1 @@\n-            toValue = new SimpleObjectProperty<Color>(this, \"toValue\", DEFAULT_TO_VALUE);\n+            toValue = new SimpleObjectProperty<>(this, \"toValue\", DEFAULT_TO_VALUE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/FillTransition.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-            final Set<KeyValue> set = new CopyOnWriteArraySet<KeyValue>(values);\n+            final Set<KeyValue> set = new CopyOnWriteArraySet<>(values);\n@@ -198,1 +198,1 @@\n-            final Set<KeyValue> set = new CopyOnWriteArraySet<KeyValue>();\n+            final Set<KeyValue> set = new CopyOnWriteArraySet<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/KeyFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.beans.Observable;\n@@ -124,1 +123,1 @@\n-    private final ChangeListener<Number> rateListener = new ChangeListener<Number>() {\n+    private final ChangeListener<Number> rateListener = new ChangeListener<>() {\n@@ -164,1 +163,1 @@\n-            node = new javafx.beans.property.SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new javafx.beans.property.SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n@@ -169,1 +168,1 @@\n-    private final Set<Animation> childrenSet = new HashSet<Animation>();\n+    private final Set<Animation> childrenSet = new HashSet<>();\n@@ -171,1 +170,1 @@\n-    private final ObservableList<Animation> children = new VetoableListDecorator<Animation>(new TrackableObservableList<Animation>() {\n+    private final ObservableList<Animation> children = new VetoableListDecorator<>(new TrackableObservableList<Animation>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/ParallelTransition.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import com.sun.javafx.geom.Path2D;\n@@ -37,1 +36,0 @@\n-import com.sun.javafx.geom.transform.BaseTransform;\n@@ -120,1 +118,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n@@ -214,1 +212,1 @@\n-            path = new SimpleObjectProperty<Shape>(this, \"path\", DEFAULT_PATH);\n+            path = new SimpleObjectProperty<>(this, \"path\", DEFAULT_PATH);\n@@ -264,1 +262,1 @@\n-            orientation = new SimpleObjectProperty<OrientationType>(this, \"orientation\", DEFAULT_ORIENTATION);\n+            orientation = new SimpleObjectProperty<>(this, \"orientation\", DEFAULT_ORIENTATION);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/PathTransition.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n@@ -210,1 +210,1 @@\n-            axis = new SimpleObjectProperty<Point3D>(this, \"axis\", DEFAULT_AXIS);\n+            axis = new SimpleObjectProperty<>(this, \"axis\", DEFAULT_AXIS);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/RotateTransition.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/ScaleTransition.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.beans.Observable;\n@@ -131,1 +130,1 @@\n-    private final ChangeListener<Number> rateListener = new ChangeListener<Number>() {\n+    private final ChangeListener<Number> rateListener = new ChangeListener<>() {\n@@ -172,1 +171,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n@@ -177,1 +176,1 @@\n-    private final Set<Animation> childrenSet = new HashSet<Animation>();\n+    private final Set<Animation> childrenSet = new HashSet<>();\n@@ -179,1 +178,1 @@\n-    private final ObservableList<Animation> children = new VetoableListDecorator<Animation>(new TrackableObservableList<Animation>() {\n+    private final ObservableList<Animation> children = new VetoableListDecorator<>(new TrackableObservableList<Animation>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/SequentialTransition.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-            shape = new SimpleObjectProperty<Shape>(this, \"shape\", DEFAULT_SHAPE);\n+            shape = new SimpleObjectProperty<>(this, \"shape\", DEFAULT_SHAPE);\n@@ -201,1 +201,1 @@\n-            fromValue = new SimpleObjectProperty<Color>(this, \"fromValue\", DEFAULT_FROM_VALUE);\n+            fromValue = new SimpleObjectProperty<>(this, \"fromValue\", DEFAULT_FROM_VALUE);\n@@ -231,1 +231,1 @@\n-            toValue = new SimpleObjectProperty<Color>(this, \"toValue\", DEFAULT_TO_VALUE);\n+            toValue = new SimpleObjectProperty<>(this, \"toValue\", DEFAULT_TO_VALUE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/StrokeTransition.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    private final ObservableList<KeyFrame> keyFrames = new TrackableObservableList<KeyFrame>() {\n+    private final ObservableList<KeyFrame> keyFrames = new TrackableObservableList<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/Timeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-            interpolator = new SimpleObjectProperty<Interpolator>(\n+            interpolator = new SimpleObjectProperty<>(\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/Transition.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-            node = new SimpleObjectProperty<Node>(this, \"node\", DEFAULT_NODE);\n+            node = new SimpleObjectProperty<>(this, \"node\", DEFAULT_NODE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/animation\/TranslateTransition.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -42,1 +40,0 @@\n-import com.sun.javafx.css.StyleManager;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Application.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        onReady = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onReady\") {\n+        onReady = new SimpleObjectProperty<>(bean, \"onReady\") {\n@@ -84,1 +84,1 @@\n-        onScheduled = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onScheduled\") {\n+        onScheduled = new SimpleObjectProperty<>(bean, \"onScheduled\") {\n@@ -90,1 +90,1 @@\n-        onRunning = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onRunning\") {\n+        onRunning = new SimpleObjectProperty<>(bean, \"onRunning\") {\n@@ -96,1 +96,1 @@\n-        onSucceeded = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onSucceeded\") {\n+        onSucceeded = new SimpleObjectProperty<>(bean, \"onSucceeded\") {\n@@ -102,1 +102,1 @@\n-        onCancelled = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onCancelled\") {\n+        onCancelled = new SimpleObjectProperty<>(bean, \"onCancelled\") {\n@@ -108,1 +108,1 @@\n-        onFailed = new SimpleObjectProperty<EventHandler<WorkerStateEvent>>(bean, \"onFailed\") {\n+        onFailed = new SimpleObjectProperty<>(bean, \"onFailed\") {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/EventHelper.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-            = new Callback<ScheduledService<?>, Duration>() {\n+            = new Callback<>() {\n@@ -185,1 +185,1 @@\n-            = new Callback<ScheduledService<?>, Duration>() {\n+            = new Callback<>() {\n@@ -205,1 +205,1 @@\n-            = new Callback<ScheduledService<?>, Duration>() {\n+            = new Callback<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/ScheduledService.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n@@ -160,1 +158,1 @@\n-    private static final BlockingQueue<Runnable> IO_QUEUE = new LinkedBlockingQueue<Runnable>() {\n+    private static final BlockingQueue<Runnable> IO_QUEUE = new LinkedBlockingQueue<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/Service.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-            new EventType<WorkerStateEvent>(Event.ANY, \"WORKER_STATE\");\n+            new EventType<>(Event.ANY, \"WORKER_STATE\");\n@@ -50,1 +50,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_READY\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_READY\");\n@@ -57,1 +57,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_SCHEDULED\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_SCHEDULED\");\n@@ -64,1 +64,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_RUNNING\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_RUNNING\");\n@@ -71,1 +71,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_SUCCEEDED\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_SUCCEEDED\");\n@@ -78,1 +78,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_CANCELLED\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_CANCELLED\");\n@@ -85,1 +85,1 @@\n-            new EventType<WorkerStateEvent>(WorkerStateEvent.ANY, \"WORKER_STATE_FAILED\");\n+            new EventType<>(WorkerStateEvent.ANY, \"WORKER_STATE_FAILED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/WorkerStateEvent.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-        final List<SimpleSelector> selectors = new ArrayList<SimpleSelector>();\n+        final List<SimpleSelector> selectors = new ArrayList<>();\n@@ -321,1 +321,1 @@\n-        final List<Combinator> relationships = new ArrayList<Combinator>();\n+        final List<Combinator> relationships = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CompoundSelector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-                new HashMap<LexerState, LexerState[]>();\n+                new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssLexer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,0 @@\n-import javafx.scene.effect.Effect;\n@@ -86,1 +85,0 @@\n-import javafx.util.Duration;\n@@ -120,1 +118,1 @@\n-        properties = new HashMap<String,String>();\n+        properties = new HashMap<>();\n@@ -276,1 +274,1 @@\n-            final List<Rule> rules = new ArrayList<Rule>();\n+            final List<Rule> rules = new ArrayList<>();\n@@ -518,1 +516,1 @@\n-            return new ParsedValueImpl<Color,Color>(Color.web(c,a), null);\n+            return new ParsedValueImpl<>(Color.web(c,a), null);\n@@ -522,1 +520,1 @@\n-            return new ParsedValueImpl<Color,Color>(Color.web(str), null);\n+            return new ParsedValueImpl<>(Color.web(str), null);\n@@ -766,1 +764,1 @@\n-            return new ParsedValueImpl<ParsedValue[],Insets>(sides, InsetsConverter.getInstance());\n+            return new ParsedValueImpl<>(sides, InsetsConverter.getInstance());\n@@ -769,1 +767,1 @@\n-            return new ParsedValueImpl<ParsedValue[],Insets>(sides, InsetsConverter.getInstance());\n+            return new ParsedValueImpl<>(sides, InsetsConverter.getInstance());\n@@ -798,1 +796,1 @@\n-            return new ParsedValueImpl<ParsedValue[],Number[]>(segments,SequenceConverter.getInstance());\n+            return new ParsedValueImpl<>(segments,SequenceConverter.getInstance());\n@@ -863,1 +861,1 @@\n-                value = new ParsedValueImpl<ParsedValue[],Number[]>(sizeValue, SizeConverter.SequenceConverter.getInstance());\n+                value = new ParsedValueImpl<>(sizeValue, SizeConverter.SequenceConverter.getInstance());\n@@ -868,2 +866,2 @@\n-            ParsedValue<Size, Size> sizeValue = new ParsedValueImpl<Size, Size>(size(token), null);\n-            value = new ParsedValueImpl<ParsedValue<?, Size>, Duration>(sizeValue, DurationConverter.getInstance());\n+            ParsedValue<Size, Size> sizeValue = new ParsedValueImpl<>(size(token), null);\n+            value = new ParsedValueImpl<>(sizeValue, DurationConverter.getInstance());\n@@ -892,1 +890,1 @@\n-                value = new ParsedValueImpl<ParsedValue<?,Size>,Duration>(sizeValue, DurationConverter.getInstance());\n+                value = new ParsedValueImpl<>(sizeValue, DurationConverter.getInstance());\n@@ -895,1 +893,1 @@\n-                value = new ParsedValueImpl<String,Boolean>(\"true\",BooleanConverter.getInstance());\n+                value = new ParsedValueImpl<>(\"true\",BooleanConverter.getInstance());\n@@ -898,1 +896,1 @@\n-                value = new ParsedValueImpl<String,Boolean>(\"false\",BooleanConverter.getInstance());\n+                value = new ParsedValueImpl<>(\"false\",BooleanConverter.getInstance());\n@@ -944,1 +942,1 @@\n-            value = new ParsedValueImpl<Size,Size>(size, null);\n+            value = new ParsedValueImpl<>(size, null);\n@@ -949,1 +947,1 @@\n-            value = new ParsedValueImpl<String,Size>(key, null, true);\n+            value = new ParsedValueImpl<>(key, null, true);\n@@ -1117,1 +1115,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Color>(values, DeriveColorConverter.getInstance());\n+        return new ParsedValueImpl<>(values, DeriveColorConverter.getInstance());\n@@ -1184,1 +1182,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Color>(values, LadderConverter.getInstance());\n+        return new ParsedValueImpl<>(values, LadderConverter.getInstance());\n@@ -1212,1 +1210,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Color>(values, LadderConverter.getInstance());\n+        return new ParsedValueImpl<>(values, LadderConverter.getInstance());\n@@ -1240,1 +1238,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Stop>(values, StopConverter.getInstance());\n+        return new ParsedValueImpl<>(values, StopConverter.getInstance());\n@@ -1360,1 +1358,1 @@\n-            stops[n] = new ParsedValueImpl<ParsedValue[],Stop>(\n+            stops[n] = new ParsedValueImpl<>(\n@@ -1459,1 +1457,1 @@\n-        return new ParsedValueImpl<String,BlurType>(blurType.name(), new EnumConverter<BlurType>(BlurType.class));\n+        return new ParsedValueImpl<>(blurType.name(), new EnumConverter<>(BlurType.class));\n@@ -1510,1 +1508,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Effect>(values, EffectConverter.InnerShadowConverter.getInstance());\n+        return new ParsedValueImpl<>(values, EffectConverter.InnerShadowConverter.getInstance());\n@@ -1561,1 +1559,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Effect>(values, EffectConverter.DropShadowConverter.getInstance());\n+        return new ParsedValueImpl<>(values, EffectConverter.DropShadowConverter.getInstance());\n@@ -1579,1 +1577,1 @@\n-            return new ParsedValueImpl<String,CycleMethod>(cycleMethod.name(), new EnumConverter<CycleMethod>(CycleMethod.class));\n+            return new ParsedValueImpl<>(cycleMethod.name(), new EnumConverter<>(CycleMethod.class));\n@@ -1645,1 +1643,1 @@\n-            cycleMethod = new ParsedValueImpl<String,CycleMethod>(CycleMethod.NO_CYCLE.name(), new EnumConverter<CycleMethod>(CycleMethod.class));\n+            cycleMethod = new ParsedValueImpl<>(CycleMethod.NO_CYCLE.name(), new EnumConverter<>(CycleMethod.class));\n@@ -1680,1 +1678,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.LinearGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.LinearGradientConverter.getInstance());\n@@ -1902,1 +1900,1 @@\n-        values[index++] = new ParsedValueImpl<String,CycleMethod>(cycleMethod.name(), new EnumConverter<CycleMethod>(CycleMethod.class));\n+        values[index++] = new ParsedValueImpl<>(cycleMethod.name(), new EnumConverter<>(CycleMethod.class));\n@@ -1904,1 +1902,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.LinearGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.LinearGradientConverter.getInstance());\n@@ -2016,1 +2014,1 @@\n-            cycleMethod = new ParsedValueImpl<String,CycleMethod>(CycleMethod.NO_CYCLE.name(), new EnumConverter<CycleMethod>(CycleMethod.class));\n+            cycleMethod = new ParsedValueImpl<>(CycleMethod.NO_CYCLE.name(), new EnumConverter<>(CycleMethod.class));\n@@ -2052,1 +2050,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.RadialGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.RadialGradientConverter.getInstance());\n@@ -2110,1 +2108,1 @@\n-            focusAngle = new ParsedValueImpl<Size,Size>(angle, null);\n+            focusAngle = new ParsedValueImpl<>(angle, null);\n@@ -2136,1 +2134,1 @@\n-            focusDistance = new ParsedValueImpl<Size,Size>(distance, null);\n+            focusDistance = new ParsedValueImpl<>(distance, null);\n@@ -2203,1 +2201,1 @@\n-        values[index++] = new ParsedValueImpl<String,CycleMethod>(cycleMethod.name(), new EnumConverter<CycleMethod>(CycleMethod.class));\n+        values[index++] = new ParsedValueImpl<>(cycleMethod.name(), new EnumConverter<>(CycleMethod.class));\n@@ -2205,1 +2203,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.RadialGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.RadialGradientConverter.getInstance());\n@@ -2234,1 +2232,1 @@\n-            new ParsedValueImpl<String,String>(uri, StringConverter.getInstance()),\n+            new ParsedValueImpl<>(uri, StringConverter.getInstance()),\n@@ -2237,1 +2235,1 @@\n-        ParsedValueImpl parsedURI = new ParsedValueImpl<ParsedValue[],String>(uriValues, URLConverter.getInstance());\n+        ParsedValueImpl parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -2243,1 +2241,1 @@\n-            return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.ImagePatternConverter.getInstance());\n+            return new ParsedValueImpl<>(values, PaintConverter.ImagePatternConverter.getInstance());\n@@ -2271,1 +2269,1 @@\n-            return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.ImagePatternConverter.getInstance());\n+            return new ParsedValueImpl<>(values, PaintConverter.ImagePatternConverter.getInstance());\n@@ -2285,1 +2283,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.ImagePatternConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.ImagePatternConverter.getInstance());\n@@ -2310,1 +2308,1 @@\n-            new ParsedValueImpl<String,String>(uri, StringConverter.getInstance()),\n+            new ParsedValueImpl<>(uri, StringConverter.getInstance()),\n@@ -2313,1 +2311,1 @@\n-        ParsedValueImpl parsedURI = new ParsedValueImpl<ParsedValue[],String>(uriValues, URLConverter.getInstance());\n+        ParsedValueImpl parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -2316,1 +2314,1 @@\n-        return new ParsedValueImpl<ParsedValue[], Paint>(values, PaintConverter.RepeatingImagePatternConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.RepeatingImagePatternConverter.getInstance());\n@@ -2337,1 +2335,1 @@\n-            paints[paint++] = (ParsedValueImpl<?,Paint>)parse(temp);\n+            paints[paint++] = parse(temp);\n@@ -2342,1 +2340,1 @@\n-        return new ParsedValueImpl<ParsedValue<?,Paint>[],Paint[]>(paints, PaintConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(paints, PaintConverter.SequenceConverter.getInstance());\n@@ -2380,1 +2378,1 @@\n-            layers[layer++] = new ParsedValueImpl<ParsedValue[],Insets>(sides, InsetsConverter.getInstance());\n+            layers[layer++] = new ParsedValueImpl<>(sides, InsetsConverter.getInstance());\n@@ -2387,1 +2385,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],Insets>[], Insets[]>(layers, InsetsConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, InsetsConverter.SequenceConverter.getInstance());\n@@ -2400,1 +2398,1 @@\n-            layer = new ParsedValueImpl<ParsedValue[],Insets>(sides, InsetsConverter.getInstance());\n+            layer = new ParsedValueImpl<>(sides, InsetsConverter.getInstance());\n@@ -2421,1 +2419,1 @@\n-            layers[layer++] = new ParsedValueImpl<ParsedValue[],Margins>(sides, Margins.Converter.getInstance());\n+            layers[layer++] = new ParsedValueImpl<>(sides, Margins.Converter.getInstance());\n@@ -2428,1 +2426,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],Margins>[], Margins[]>(layers, Margins.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, Margins.SequenceConverter.getInstance());\n@@ -2493,1 +2491,1 @@\n-            };\n+            }\n@@ -2515,1 +2513,1 @@\n-            ParsedValueImpl<?,Size> zero = new ParsedValueImpl<Size,Size>(new Size(0,SizeUnits.PX), null);\n+            ParsedValueImpl<?,Size> zero = new ParsedValueImpl<>(new Size(0,SizeUnits.PX), null);\n@@ -2577,1 +2575,1 @@\n-            layers[layer++] = new ParsedValueImpl<ParsedValue<?,Size>[][],CornerRadii>(radii, null);\n+            layers[layer++] = new ParsedValueImpl<>(radii, null);\n@@ -2581,1 +2579,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue<?,Size>[][],CornerRadii>[], CornerRadii[]>(layers, CornerRadiiConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, CornerRadiiConverter.getInstance());\n@@ -2586,1 +2584,1 @@\n-            new ParsedValueImpl<Size,Size>(new Size(0f, SizeUnits.PERCENT), null);\n+            new ParsedValueImpl<>(new Size(0f, SizeUnits.PERCENT), null);\n@@ -2589,1 +2587,1 @@\n-            new ParsedValueImpl<Size,Size>(new Size(50f, SizeUnits.PERCENT), null);\n+            new ParsedValueImpl<>(new Size(50f, SizeUnits.PERCENT), null);\n@@ -2592,1 +2590,1 @@\n-            new ParsedValueImpl<Size,Size>(new Size(100f, SizeUnits.PERCENT), null);\n+            new ParsedValueImpl<>(new Size(100f, SizeUnits.PERCENT), null);\n@@ -2915,1 +2913,1 @@\n-        return new ParsedValueImpl<ParsedValue[], BackgroundPosition>(values, BackgroundPositionConverter.getInstance());\n+        return new ParsedValueImpl<>(values, BackgroundPositionConverter.getInstance());\n@@ -2929,1 +2927,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]>(layers, LayeredBackgroundPositionConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, LayeredBackgroundPositionConverter.getInstance());\n@@ -3002,2 +3000,2 @@\n-            new ParsedValueImpl<String,BackgroundRepeat>(xAxis.name(), new EnumConverter<BackgroundRepeat>(BackgroundRepeat.class)),\n-            new ParsedValueImpl<String,BackgroundRepeat>(yAxis.name(), new EnumConverter<BackgroundRepeat>(BackgroundRepeat.class))\n+            new ParsedValueImpl<>(xAxis.name(), new EnumConverter<>(BackgroundRepeat.class)),\n+            new ParsedValueImpl<>(yAxis.name(), new EnumConverter<>(BackgroundRepeat.class))\n@@ -3018,1 +3016,1 @@\n-        return new ParsedValueImpl<ParsedValue<String, BackgroundRepeat>[][],RepeatStruct[]>(layers, RepeatStructConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, RepeatStructConverter.getInstance());\n@@ -3033,1 +3031,1 @@\n-        return new ParsedValueImpl<ParsedValue<String, BackgroundRepeat>[][], RepeatStruct[]>(layers, RepeatStructConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, RepeatStructConverter.getInstance());\n@@ -3102,2 +3100,2 @@\n-            new ParsedValueImpl<String,Boolean>((cover ? \"true\" : \"false\"), BooleanConverter.getInstance()),\n-            new ParsedValueImpl<String,Boolean>((contain ? \"true\" : \"false\"), BooleanConverter.getInstance())\n+            new ParsedValueImpl<>((cover ? \"true\" : \"false\"), BooleanConverter.getInstance()),\n+            new ParsedValueImpl<>((contain ? \"true\" : \"false\"), BooleanConverter.getInstance())\n@@ -3105,1 +3103,1 @@\n-        return new ParsedValueImpl<ParsedValue[], BackgroundSize>(values, BackgroundSizeConverter.getInstance());\n+        return new ParsedValueImpl<>(values, BackgroundSizeConverter.getInstance());\n@@ -3119,1 +3117,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundSize>[], BackgroundSize[]>(layers, LayeredBackgroundSizeConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, LayeredBackgroundSizeConverter.getInstance());\n@@ -3139,1 +3137,1 @@\n-        return new ParsedValueImpl<ParsedValue<?,Paint>[], Paint[]>(paints, StrokeBorderPaintConverter.getInstance());\n+        return new ParsedValueImpl<>(paints, StrokeBorderPaintConverter.getInstance());\n@@ -3153,1 +3151,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue<?,Paint>[],Paint[]>[], Paint[][]>(layers, LayeredBorderPaintConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, LayeredBorderPaintConverter.getInstance());\n@@ -3172,1 +3170,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>(borders, BorderStrokeStyleSequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(borders, BorderStrokeStyleSequenceConverter.getInstance());\n@@ -3187,1 +3185,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]>(layers, LayeredBorderStyleConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, LayeredBorderStyleConverter.getInstance());\n@@ -3236,1 +3234,1 @@\n-            dashPhase = new ParsedValueImpl<ParsedValue<?,Size>,Number>(sizeVal,SizeConverter.getInstance());\n+            dashPhase = new ParsedValueImpl<>(sizeVal,SizeConverter.getInstance());\n@@ -3390,1 +3388,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Number[]>(segments,SizeConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(segments,SizeConverter.SequenceConverter.getInstance());\n@@ -3394,2 +3392,1 @@\n-    private ParsedValueImpl<String,StrokeType> parseStrokeType(final Term root)\n-        throws ParseException {\n+    private ParsedValueImpl<String,StrokeType> parseStrokeType(final Term root) {\n@@ -3437,1 +3434,1 @@\n-                    strokeMiterLimit = new ParsedValueImpl<ParsedValue<?,Size>,Number>(sizeVal,SizeConverter.getInstance());\n+                    strokeMiterLimit = new ParsedValueImpl<>(sizeVal,SizeConverter.getInstance());\n@@ -3449,2 +3446,1 @@\n-    private ParsedValueImpl<String,StrokeLineCap> parseStrokeLineCap(final Term root)\n-        throws ParseException {\n+    private ParsedValueImpl<String,StrokeLineCap> parseStrokeLineCap(final Term root) {\n@@ -3497,1 +3493,1 @@\n-                new ParsedValueImpl<ParsedValue[],Insets>(insets, InsetsConverter.getInstance()),\n+                new ParsedValueImpl<>(insets, InsetsConverter.getInstance()),\n@@ -3500,1 +3496,1 @@\n-        return new ParsedValueImpl<ParsedValue[], BorderImageSlices>(values, BorderImageSliceConverter.getInstance());\n+        return new ParsedValueImpl<>(values, BorderImageSliceConverter.getInstance());\n@@ -3514,1 +3510,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],BorderImageSlices>[],BorderImageSlices[]> (layers, SliceSequenceConverter.getInstance());\n+        return new ParsedValueImpl<> (layers, SliceSequenceConverter.getInstance());\n@@ -3544,1 +3540,1 @@\n-        return new ParsedValueImpl<ParsedValue[], BorderWidths>(insets, BorderImageWidthConverter.getInstance());\n+        return new ParsedValueImpl<>(insets, BorderImageWidthConverter.getInstance());\n@@ -3558,1 +3554,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],BorderWidths>[],BorderWidths[]> (layers, BorderImageWidthsSequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, BorderImageWidthsSequenceConverter.getInstance());\n@@ -3581,1 +3577,1 @@\n-        return new ParsedValueImpl<String,String>(styleClassOrId, StringConverter.getInstance());\n+        return new ParsedValueImpl<>(styleClassOrId, StringConverter.getInstance());\n@@ -3597,1 +3593,1 @@\n-            new ParsedValueImpl<String,String>(uri, StringConverter.getInstance()),\n+            new ParsedValueImpl<>(uri, StringConverter.getInstance()),\n@@ -3600,1 +3596,1 @@\n-        return new ParsedValueImpl<ParsedValue[],String>(uriValues, URLConverter.getInstance());\n+        return new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -3619,1 +3615,1 @@\n-        return new ParsedValueImpl<ParsedValue<ParsedValue[],String>[],String[]>(layers, URLConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, URLConverter.SequenceConverter.getInstance());\n@@ -3671,2 +3667,2 @@\n-        ParsedValueImpl<?,Size> svalue = new ParsedValueImpl<Size,Size>(size, null);\n-        return new ParsedValueImpl<ParsedValue<?,Size>,Number>(svalue, FontConverter.FontSizeConverter.getInstance());\n+        ParsedValueImpl<?,Size> svalue = new ParsedValueImpl<>(size, null);\n+        return new ParsedValueImpl<>(svalue, FontConverter.FontSizeConverter.getInstance());\n@@ -3700,1 +3696,1 @@\n-        return new ParsedValueImpl<String,FontPosture>(posture, FontConverter.FontStyleConverter.getInstance());\n+        return new ParsedValueImpl<>(posture, FontConverter.FontStyleConverter.getInstance());\n@@ -3746,1 +3742,1 @@\n-        return new ParsedValueImpl<String,FontWeight>(weight, FontConverter.FontWeightConverter.getInstance());\n+        return new ParsedValueImpl<>(weight, FontConverter.FontWeightConverter.getInstance());\n@@ -3762,1 +3758,1 @@\n-            return new ParsedValueImpl<String,String>(\"inherit\", StringConverter.getInstance());\n+            return new ParsedValueImpl<>(\"inherit\", StringConverter.getInstance());\n@@ -3768,1 +3764,1 @@\n-            return new ParsedValueImpl<String,String>(fam, StringConverter.getInstance());\n+            return new ParsedValueImpl<>(fam, StringConverter.getInstance());\n@@ -3770,1 +3766,1 @@\n-            return new ParsedValueImpl<String,String>(token.getText(), StringConverter.getInstance());\n+            return new ParsedValueImpl<>(token.getText(), StringConverter.getInstance());\n@@ -3830,1 +3826,1 @@\n-                ;\n+\n@@ -3834,1 +3830,1 @@\n-                ;\n+\n@@ -3839,1 +3835,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Font>(values, FontConverter.getInstance());\n+        return new ParsedValueImpl<>(values, FontConverter.getInstance());\n@@ -4009,2 +4005,2 @@\n-        final Map<String,String> descriptors = new HashMap<String,String>();\n-        final List<FontFaceImpl.FontFaceSrc> sources = new ArrayList<FontFaceImpl.FontFaceSrc>();\n+        final Map<String,String> descriptors = new HashMap<>();\n+        final List<FontFaceImpl.FontFaceSrc> sources = new ArrayList<>();\n@@ -4035,1 +4031,1 @@\n-                                        new ParsedValueImpl<String,String>(currentToken.getText(), StringConverter.getInstance()),\n+                                        new ParsedValueImpl<>(currentToken.getText(), StringConverter.getInstance()),\n@@ -4039,1 +4035,1 @@\n-                                        new ParsedValueImpl<ParsedValue[], String>(uriValues, URLConverter.getInstance());\n+                                        new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -4186,1 +4182,1 @@\n-                    new ParsedValueImpl<String,String>(fname, StringConverter.getInstance()),\n+                    new ParsedValueImpl<>(fname, StringConverter.getInstance()),\n@@ -4190,1 +4186,1 @@\n-                    new ParsedValueImpl<ParsedValue[], String>(uriValues, URLConverter.getInstance());\n+                    new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -4215,1 +4211,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -4268,1 +4264,1 @@\n-                    combinators = new ArrayList<Combinator>();\n+                    combinators = new ArrayList<>();\n@@ -4274,1 +4270,1 @@\n-                    sels = new ArrayList<SimpleSelector>();\n+                    sels = new ArrayList<>();\n@@ -4324,1 +4320,1 @@\n-                            csels = new ArrayList<String>();\n+                            csels = new ArrayList<>();\n@@ -4341,1 +4337,1 @@\n-                        pclasses = new ArrayList<String>();\n+                        pclasses = new ArrayList<>();\n@@ -4468,1 +4464,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":106,"deletions":110,"binary":false,"changes":216,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-                new CssMetaData<S, String>(property.concat(\"-family\"),\n+                new CssMetaData<>(property.concat(\"-family\"),\n@@ -84,1 +84,1 @@\n-                new CssMetaData<S, Number>(property.concat(\"-size\"),\n+                new CssMetaData<>(property.concat(\"-size\"),\n@@ -99,1 +99,1 @@\n-                new CssMetaData<S, FontPosture>(property.concat(\"-style\"),\n+                new CssMetaData<>(property.concat(\"-style\"),\n@@ -114,1 +114,1 @@\n-                new CssMetaData<S, FontWeight>(property.concat(\"-weight\"),\n+                new CssMetaData<>(property.concat(\"-weight\"),\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/FontCssMetaData.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-            selectors = new ArrayList<Selector>();\n+            selectors = new ArrayList<>();\n@@ -77,1 +77,1 @@\n-                declarations = new ArrayList<Declaration>(nDeclarations);\n+                declarations = new ArrayList<>(nDeclarations);\n@@ -257,1 +257,1 @@\n-            selectorObservableList = new TrackableObservableList<Selector>(rule.getUnobservedSelectorList()) {\n+            selectorObservableList = new TrackableObservableList<>(rule.getUnobservedSelectorList()) {\n@@ -281,1 +281,1 @@\n-            declarationObservableList = new TrackableObservableList<Declaration>(rule.getUnobservedDeclarationList()) {\n+            declarationObservableList = new TrackableObservableList<>(rule.getUnobservedDeclarationList()) {\n@@ -364,1 +364,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>(nSelectors);\n+        List<Selector> selectors = new ArrayList<>(nSelectors);\n@@ -372,1 +372,1 @@\n-            List<Declaration> declarations = new ArrayList<Declaration>(nDeclarations);\n+            List<Declaration> declarations = new ArrayList<>(nDeclarations);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Rule.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -174,3 +174,3 @@\n-        List<SimpleSelector> selectors = new ArrayList<SimpleSelector>();\n-        List<Combinator> combinators = new ArrayList<Combinator>();\n-        List<String> parts = new ArrayList<String>();\n+        List<SimpleSelector> selectors = new ArrayList<>();\n+        List<Combinator> combinators = new ArrayList<>();\n+        List<String> parts = new ArrayList<>();\n@@ -204,1 +204,1 @@\n-                List<String> pseudoClasses = new ArrayList<String>();\n+                List<String> pseudoClasses = new ArrayList<>();\n@@ -216,1 +216,1 @@\n-                List<String> styleClasses = new ArrayList<String>();\n+                List<String> styleClasses = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Selector.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        final List<String> names = new ArrayList<String>();\n+        final List<String> names = new ArrayList<>();\n@@ -124,1 +124,1 @@\n-        final List<String> names = new ArrayList<String>();\n+        final List<String> names = new ArrayList<>();\n@@ -406,1 +406,1 @@\n-        final List<String> styleClasses = new ArrayList<String>();\n+        final List<String> styleClasses = new ArrayList<>();\n@@ -412,1 +412,1 @@\n-        final List<String> pseudoclasses = new ArrayList<String>();\n+        final List<String> pseudoclasses = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -318,1 +318,0 @@\n-    @SuppressWarnings(\"rawtypes\")\n@@ -334,1 +333,1 @@\n-            return (StyleConverter)javafx.css.converter.EnumConverter.readBinary(is, strings);\n+            return javafx.css.converter.EnumConverter.readBinary(is, strings);\n@@ -349,1 +348,1 @@\n-            if (tmap == null) tmap = new HashMap<String,StyleConverter<?,?>>();\n+            if (tmap == null) tmap = new HashMap<>();\n@@ -538,1 +537,1 @@\n-        private final Map<String,Integer> stringMap = new HashMap<String,Integer>();\n+        private final Map<String,Integer> stringMap = new HashMap<>();\n@@ -543,1 +542,1 @@\n-        public final List<String> strings = new ArrayList<String>();\n+        public final List<String> strings = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-        return new SimpleStyleableObjectProperty<Color>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -363,1 +363,1 @@\n-        return new SimpleStyleableObjectProperty<Color>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -391,1 +391,1 @@\n-        return new SimpleStyleableObjectProperty<Duration>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -449,1 +449,1 @@\n-        return new SimpleStyleableObjectProperty<Duration>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -478,1 +478,1 @@\n-        return new SimpleStyleableObjectProperty<E>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -537,1 +537,1 @@\n-        return new SimpleStyleableObjectProperty<Effect>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -583,1 +583,1 @@\n-        return new SimpleStyleableObjectProperty<E>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -676,1 +676,1 @@\n-        return new SimpleStyleableObjectProperty<E>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -704,1 +704,1 @@\n-        return new SimpleStyleableObjectProperty<Font>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -762,1 +762,1 @@\n-        return new SimpleStyleableObjectProperty<Font>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -790,1 +790,1 @@\n-        return new SimpleStyleableObjectProperty<Insets>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -847,1 +847,1 @@\n-        return new SimpleStyleableObjectProperty<Insets>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -875,1 +875,1 @@\n-        return new SimpleStyleableObjectProperty<Paint>(cssMetaData, styleable, propertyName, initialValue);\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, initialValue);\n@@ -932,1 +932,1 @@\n-        return new SimpleStyleableObjectProperty<Paint>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -1017,1 +1017,1 @@\n-        return new SimpleStyleableObjectProperty<Number>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n+        return new SimpleStyleableObjectProperty<>(cssMetaData, styleable, propertyName, cssMetaData.getInitialValue(styleable));\n@@ -1225,1 +1225,1 @@\n-                    return new SimpleCssMetaData<S, Boolean>(key, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(key, function, converter, initialValue, inherits);\n@@ -1287,1 +1287,1 @@\n-                    return new SimpleCssMetaData<S, Color>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1349,1 +1349,1 @@\n-                    return new SimpleCssMetaData<S, Duration>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1476,1 +1476,1 @@\n-                    return new SimpleCssMetaData<S, E>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1540,1 +1540,1 @@\n-                    return new SimpleCssMetaData<S, Font>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1600,1 +1600,1 @@\n-                    return new SimpleCssMetaData<S, Insets>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1662,1 +1662,1 @@\n-                    return new SimpleCssMetaData<S, Paint>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1722,1 +1722,1 @@\n-                    return new SimpleCssMetaData<S, Number>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1782,1 +1782,1 @@\n-                    return new SimpleCssMetaData<S, String>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1844,1 +1844,1 @@\n-                    return new SimpleCssMetaData<S, String>(property, function, converter, initialValue, inherits);\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1900,0 +1900,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleablePropertyFactory.java","additions":26,"deletions":25,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    private final ObservableList<Rule> rules = new TrackableObservableList<Rule>() {\n+    private final ObservableList<Rule> rules = new TrackableObservableList<>() {\n@@ -125,1 +125,1 @@\n-    private final List<FontFace> fontFaces = new ArrayList<FontFace>();\n+    private final List<FontFace> fontFaces = new ArrayList<>();\n@@ -254,1 +254,1 @@\n-        List<Rule> persistedRules = new ArrayList<Rule>(nRules);\n+        List<Rule> persistedRules = new ArrayList<>(nRules);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Stylesheet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-            if (converters == null) converters = new HashMap<String,StyleConverter<?,?>>();\n+            if (converters == null) converters = new HashMap<>();\n@@ -132,1 +132,1 @@\n-            converter = new EnumConverter<com.sun.javafx.cursor.CursorType>(com.sun.javafx.cursor.CursorType.class);\n+            converter = new EnumConverter<>(com.sun.javafx.cursor.CursorType.class);\n@@ -136,1 +136,1 @@\n-            converter = new EnumConverter<javafx.scene.layout.BackgroundRepeat>(javafx.scene.layout.BackgroundRepeat.class);\n+            converter = new EnumConverter<>(javafx.scene.layout.BackgroundRepeat.class);\n@@ -139,1 +139,1 @@\n-            converter = new EnumConverter<javafx.geometry.HPos>(javafx.geometry.HPos.class);\n+            converter = new EnumConverter<>(javafx.geometry.HPos.class);\n@@ -142,1 +142,1 @@\n-            converter = new EnumConverter<javafx.geometry.Orientation>(javafx.geometry.Orientation.class);\n+            converter = new EnumConverter<>(javafx.geometry.Orientation.class);\n@@ -145,1 +145,1 @@\n-            converter = new EnumConverter<javafx.geometry.Pos>(javafx.geometry.Pos.class);\n+            converter = new EnumConverter<>(javafx.geometry.Pos.class);\n@@ -148,1 +148,1 @@\n-            converter = new EnumConverter<javafx.geometry.Side>(javafx.geometry.Side.class);\n+            converter = new EnumConverter<>(javafx.geometry.Side.class);\n@@ -151,1 +151,1 @@\n-            converter = new EnumConverter<javafx.geometry.VPos>(javafx.geometry.VPos.class);\n+            converter = new EnumConverter<>(javafx.geometry.VPos.class);\n@@ -154,1 +154,1 @@\n-            converter = new EnumConverter<javafx.scene.effect.BlendMode>(javafx.scene.effect.BlendMode.class);\n+            converter = new EnumConverter<>(javafx.scene.effect.BlendMode.class);\n@@ -157,1 +157,1 @@\n-            converter = new EnumConverter<javafx.scene.effect.BlurType>(javafx.scene.effect.BlurType.class);\n+            converter = new EnumConverter<>(javafx.scene.effect.BlurType.class);\n@@ -160,1 +160,1 @@\n-            converter = new EnumConverter<javafx.scene.paint.CycleMethod>(javafx.scene.paint.CycleMethod.class);\n+            converter = new EnumConverter<>(javafx.scene.paint.CycleMethod.class);\n@@ -163,1 +163,1 @@\n-            converter = new EnumConverter<javafx.scene.shape.ArcType>(javafx.scene.shape.ArcType.class);\n+            converter = new EnumConverter<>(javafx.scene.shape.ArcType.class);\n@@ -166,1 +166,1 @@\n-            converter = new EnumConverter<javafx.scene.shape.StrokeLineCap>(javafx.scene.shape.StrokeLineCap.class);\n+            converter = new EnumConverter<>(javafx.scene.shape.StrokeLineCap.class);\n@@ -169,1 +169,1 @@\n-            converter = new EnumConverter<javafx.scene.shape.StrokeLineJoin>(javafx.scene.shape.StrokeLineJoin.class);\n+            converter = new EnumConverter<>(javafx.scene.shape.StrokeLineJoin.class);\n@@ -172,1 +172,1 @@\n-            converter = new EnumConverter<javafx.scene.shape.StrokeType>(javafx.scene.shape.StrokeType.class);\n+            converter = new EnumConverter<>(javafx.scene.shape.StrokeType.class);\n@@ -175,1 +175,1 @@\n-            converter = new EnumConverter<javafx.scene.text.FontPosture>(javafx.scene.text.FontPosture.class);\n+            converter = new EnumConverter<>(javafx.scene.text.FontPosture.class);\n@@ -178,1 +178,1 @@\n-            converter = new EnumConverter<javafx.scene.text.FontSmoothingType>(javafx.scene.text.FontSmoothingType.class);\n+            converter = new EnumConverter<>(javafx.scene.text.FontSmoothingType.class);\n@@ -181,1 +181,1 @@\n-            converter = new EnumConverter<javafx.scene.text.FontWeight>(javafx.scene.text.FontWeight.class);\n+            converter = new EnumConverter<>(javafx.scene.text.FontWeight.class);\n@@ -184,1 +184,1 @@\n-            converter = new EnumConverter<javafx.scene.text.TextAlignment>(javafx.scene.text.TextAlignment.class);\n+            converter = new EnumConverter<>(javafx.scene.text.TextAlignment.class);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EnumConverter.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import javafx.beans.property.BooleanProperty;\n-import javafx.beans.property.BooleanPropertyBase;\n@@ -727,1 +725,1 @@\n-        pageRangesProperty().set((PageRange[])pages);\n+        pageRangesProperty().set(pages);\n@@ -743,1 +741,1 @@\n-             sides = new SimpleObjectProperty<PrintSides>\n+             sides = new SimpleObjectProperty<>\n@@ -825,1 +823,1 @@\n-             collation = new SimpleObjectProperty<Collation>\n+             collation = new SimpleObjectProperty<>\n@@ -894,1 +892,1 @@\n-            color = new SimpleObjectProperty<PrintColor>\n+            color = new SimpleObjectProperty<>\n@@ -972,1 +970,1 @@\n-            quality = new SimpleObjectProperty<PrintQuality>\n+            quality = new SimpleObjectProperty<>\n@@ -1052,1 +1050,1 @@\n-            resolution = new SimpleObjectProperty<PrintResolution>\n+            resolution = new SimpleObjectProperty<>\n@@ -1125,1 +1123,1 @@\n-            paperSource = new SimpleObjectProperty<PaperSource>\n+            paperSource = new SimpleObjectProperty<>\n@@ -1203,1 +1201,1 @@\n-             layout = new SimpleObjectProperty<PageLayout>\n+             layout = new SimpleObjectProperty<>\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/JobSettings.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.util.Arrays;\n-\n@@ -31,1 +29,0 @@\n-import javafx.beans.property.IntegerProperty;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/PageRange.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-                new ReadOnlyObjectWrapper<Printer>(null, \"defaultPrinter\", p);\n+                new ReadOnlyObjectWrapper<>(null, \"defaultPrinter\", p);\n@@ -215,1 +215,1 @@\n-    };\n+    }\n@@ -275,3 +275,3 @@\n-            double maxH = (double)Math.max(plm, prm);\n-            double maxV = (double)Math.max(ptm, pbm);\n-            double maxM = (double)Math.max(maxH, maxV);\n+            double maxH = Math.max(plm, prm);\n+            double maxV = Math.max(ptm, pbm);\n+            double maxM = Math.max(maxH, maxV);\n@@ -282,2 +282,2 @@\n-            double maxH = (double)Math.max(plm, prm);\n-            double maxV = (double)Math.max(ptm, pbm);\n+            double maxH = Math.max(plm, prm);\n+            double maxV = Math.max(ptm, pbm);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/Printer.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -31,4 +30,0 @@\n-import java.util.TreeSet;\n-\n-import static javafx.print.PageOrientation.*;\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/PrinterAttributes.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -174,1 +174,1 @@\n-        return new SimpleObjectProperty<Printer>(printer) {\n+        return new SimpleObjectProperty<>(printer) {\n@@ -473,1 +473,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/PrinterJob.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import javafx.beans.Observable;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Camera.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-            image = new ObjectPropertyImpl<Image>(\"image\");\n+            image = new ObjectPropertyImpl<>(\"image\");\n@@ -317,1 +317,1 @@\n-                otherCursorFrames = new HashMap<Object, ImageCursorFrame>();\n+                otherCursorFrames = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/ImageCursor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-            color = new SimpleObjectProperty<Color>(LightBase.this, \"color\") {\n+            color = new SimpleObjectProperty<>(LightBase.this, \"color\") {\n@@ -402,1 +402,1 @@\n-            NodeHelper.markDirty(((Shape3D) node), DirtyBits.NODE_DRAWMODE);\n+            NodeHelper.markDirty(node, DirtyBits.NODE_DRAWMODE);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/LightBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -889,1 +889,1 @@\n-            properties = FXCollections.observableMap(new HashMap<Object, Object>());\n+            properties = FXCollections.observableMap(new HashMap<>());\n@@ -954,1 +954,1 @@\n-            parent = new ReadOnlyObjectWrapper<Parent>() {\n+            parent = new ReadOnlyObjectWrapper<>() {\n@@ -1024,1 +1024,1 @@\n-    private ReadOnlyObjectWrapperManualFire<Scene> scene = new ReadOnlyObjectWrapperManualFire<Scene>();\n+    private ReadOnlyObjectWrapperManualFire<Scene> scene = new ReadOnlyObjectWrapperManualFire<>();\n@@ -1203,0 +1203,1 @@\n+    @Override\n@@ -1243,1 +1244,1 @@\n-    private ObservableList<String> styleClass = new TrackableObservableList<String>() {\n+    private ObservableList<String> styleClass = new TrackableObservableList<>() {\n@@ -1312,0 +1313,1 @@\n+    @Override\n@@ -1982,1 +1984,1 @@\n-        return results == null ? empty : new UnmodifiableListSet<Node>(results);\n+        return results == null ? empty : new UnmodifiableListSet<>(results);\n@@ -1996,1 +1998,1 @@\n-                results = new LinkedList<Node>();\n+                results = new LinkedList<>();\n@@ -2564,1 +2566,0 @@\n-    @SuppressWarnings(\"CallToPrintStackTrace\")\n@@ -6020,1 +6021,1 @@\n-                    localToSceneListeners = new LinkedList<Object>();\n+                    localToSceneListeners = new LinkedList<>();\n@@ -6030,1 +6031,1 @@\n-                    localToSceneListeners = new LinkedList<Object>();\n+                    localToSceneListeners = new LinkedList<>();\n@@ -6317,1 +6318,1 @@\n-                transforms = new TrackableObservableList<Transform>() {\n+                transforms = new TrackableObservableList<>() {\n@@ -7168,1 +7169,1 @@\n-                        new SimpleObjectProperty<InputMethodRequests>(\n+                        new SimpleObjectProperty<>(\n@@ -8825,1 +8826,1 @@\n-            eventDispatcher = new SimpleObjectProperty<EventDispatcher>(\n+            eventDispatcher = new SimpleObjectProperty<>(\n@@ -9001,1 +9002,1 @@\n-            new CssMetaData<Node,Cursor>(\"-fx-cursor\", CursorConverter.getInstance()) {\n+            new CssMetaData<>(\"-fx-cursor\", CursorConverter.getInstance()) {\n@@ -9022,1 +9023,1 @@\n-            new CssMetaData<Node,Effect>(\"-fx-effect\", EffectConverter.getInstance()) {\n+            new CssMetaData<>(\"-fx-effect\", EffectConverter.getInstance()) {\n@@ -9035,1 +9036,1 @@\n-            new CssMetaData<Node,Boolean>(\"-fx-focus-traversable\",\n+            new CssMetaData<>(\"-fx-focus-traversable\",\n@@ -9057,1 +9058,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-opacity\",\n+            new CssMetaData<>(\"-fx-opacity\",\n@@ -9071,1 +9072,1 @@\n-            new CssMetaData<Node,BlendMode>(\"-fx-blend-mode\", new EnumConverter<BlendMode>(BlendMode.class)) {\n+            new CssMetaData<>(\"-fx-blend-mode\", new EnumConverter<>(BlendMode.class)) {\n@@ -9084,1 +9085,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-rotate\",\n+            new CssMetaData<>(\"-fx-rotate\",\n@@ -9100,1 +9101,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-scale-x\",\n+            new CssMetaData<>(\"-fx-scale-x\",\n@@ -9116,1 +9117,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-scale-y\",\n+            new CssMetaData<>(\"-fx-scale-y\",\n@@ -9132,1 +9133,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-scale-z\",\n+            new CssMetaData<>(\"-fx-scale-z\",\n@@ -9148,1 +9149,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-translate-x\",\n+            new CssMetaData<>(\"-fx-translate-x\",\n@@ -9164,1 +9165,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-translate-y\",\n+            new CssMetaData<>(\"-fx-translate-y\",\n@@ -9180,1 +9181,1 @@\n-            new CssMetaData<Node,Number>(\"-fx-translate-z\",\n+            new CssMetaData<>(\"-fx-translate-z\",\n@@ -9196,1 +9197,1 @@\n-                 = new CssMetaData<Node, Number>(\"-fx-view-order\",\n+                 = new CssMetaData<>(\"-fx-view-order\",\n@@ -9212,1 +9213,1 @@\n-            new CssMetaData<Node,Boolean>(\"visibility\",\n+            new CssMetaData<>(\"visibility\",\n@@ -9236,1 +9237,1 @@\n-            new CssMetaData<Node,Boolean>(\"-fx-managed\",\n+            new CssMetaData<>(\"-fx-managed\",\n@@ -9255,1 +9256,1 @@\n-                     new ArrayList<CssMetaData<? extends Styleable, ?>>();\n+                     new ArrayList<>();\n@@ -9884,1 +9885,1 @@\n-            accessibleRole = new SimpleObjectProperty<AccessibleRole>(this, \"accessibleRole\", AccessibleRole.NODE);\n+            accessibleRole = new SimpleObjectProperty<>(this, \"accessibleRole\", AccessibleRole.NODE);\n@@ -9984,1 +9985,1 @@\n-                accessibleRoleDescription = new SimpleObjectProperty<String>(Node.this, \"accessibleRoleDescription\", null);\n+                accessibleRoleDescription = new SimpleObjectProperty<>(Node.this, \"accessibleRoleDescription\", null);\n@@ -9991,1 +9992,1 @@\n-                accessibleText = new SimpleObjectProperty<String>(Node.this, \"accessibleText\", null);\n+                accessibleText = new SimpleObjectProperty<>(Node.this, \"accessibleText\", null);\n@@ -9998,1 +9999,1 @@\n-                accessibleHelp = new SimpleObjectProperty<String>(Node.this, \"accessibleHelp\", null);\n+                accessibleHelp = new SimpleObjectProperty<>(Node.this, \"accessibleHelp\", null);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":33,"deletions":32,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-    private final Set<Node> childSet = new HashSet<Node>();\n+    private final Set<Node> childSet = new HashSet<>();\n@@ -321,0 +321,1 @@\n+        @Override\n@@ -387,1 +388,1 @@\n-                            = new ArrayList<Node>(2 * DIRTY_CHILDREN_THRESHOLD);\n+                            = new ArrayList<>(2 * DIRTY_CHILDREN_THRESHOLD);\n@@ -583,1 +584,1 @@\n-                removed = new ArrayList<Node>();\n+                removed = new ArrayList<>();\n@@ -696,1 +697,1 @@\n-            unmodifiableManagedChildren = new ArrayList<Node>();\n+            unmodifiableManagedChildren = new ArrayList<>();\n@@ -1277,1 +1278,1 @@\n-    private final ObservableList<String> stylesheets = new TrackableObservableList<String>() {\n+    private final ObservableList<String> stylesheets = new TrackableObservableList<>() {\n@@ -1342,1 +1343,1 @@\n-                list = new ArrayList<String>(stylesheets.size());\n+                list = new ArrayList<>(stylesheets.size());\n@@ -1919,0 +1920,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Parent.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -379,0 +379,1 @@\n+                @Override\n@@ -384,0 +385,1 @@\n+                @Override\n@@ -773,1 +775,1 @@\n-            window = new ReadOnlyObjectWrapper<Window>() {\n+            window = new ReadOnlyObjectWrapper<>() {\n@@ -1058,1 +1060,1 @@\n-            camera = new ObjectPropertyBase<Camera>() {\n+            camera = new ObjectPropertyBase<>() {\n@@ -1204,1 +1206,1 @@\n-            root = new ObjectPropertyBase<Parent>() {\n+            root = new ObjectPropertyBase<>() {\n@@ -1411,2 +1413,2 @@\n-            snapshotRunnableListA = new ArrayList<Runnable>();\n-            snapshotRunnableListB = new ArrayList<Runnable>();\n+            snapshotRunnableListA = new ArrayList<>();\n+            snapshotRunnableListB = new ArrayList<>();\n@@ -1575,1 +1577,1 @@\n-            cursor = new ObjectPropertyBase<Cursor>() {\n+            cursor = new ObjectPropertyBase<>() {\n@@ -1614,1 +1616,1 @@\n-    private final ObservableList<String> stylesheets  = new TrackableObservableList<String>() {\n+    private final ObservableList<String> stylesheets  = new TrackableObservableList<>() {\n@@ -1687,1 +1689,1 @@\n-            userAgentStylesheet = new SimpleObjectProperty<String>(Scene.this, \"userAgentStylesheet\", null) {\n+            userAgentStylesheet = new SimpleObjectProperty<>(Scene.this, \"userAgentStylesheet\", null) {\n@@ -1885,1 +1887,1 @@\n-            new HashMap<Integer, EventTarget>();\n+            new HashMap<>();\n@@ -2018,1 +2020,1 @@\n-            };\n+            }\n@@ -2175,1 +2177,1 @@\n-    private ReadOnlyObjectWrapper<Node> focusOwner = new ReadOnlyObjectWrapper<Node>(this, \"focusOwner\") {\n+    private ReadOnlyObjectWrapper<Node> focusOwner = new ReadOnlyObjectWrapper<>(this, \"focusOwner\") {\n@@ -2641,0 +2643,1 @@\n+        @Override\n@@ -3051,2 +3054,2 @@\n-        private List<EventTarget> currentTargets = new ArrayList<EventTarget>();\n-        private List<EventTarget> newTargets = new ArrayList<EventTarget>();\n+        private List<EventTarget> currentTargets = new ArrayList<>();\n+        private List<EventTarget> newTargets = new ArrayList<>();\n@@ -3529,3 +3532,3 @@\n-                new EnumMap<MouseButton, ClickCounter>(MouseButton.class);\n-        private List<EventTarget> pressedTargets = new ArrayList<EventTarget>();\n-        private List<EventTarget> releasedTargets = new ArrayList<EventTarget>();\n+                new EnumMap<>(MouseButton.class);\n+        private List<EventTarget> pressedTargets = new ArrayList<>();\n+        private List<EventTarget> releasedTargets = new ArrayList<>();\n@@ -3634,3 +3637,3 @@\n-        private final List<EventTarget> pdrEventTargets = new ArrayList<EventTarget>();\n-        private final List<EventTarget> currentEventTargets = new ArrayList<EventTarget>();\n-        private final List<EventTarget> newEventTargets = new ArrayList<EventTarget>();\n+        private final List<EventTarget> pdrEventTargets = new ArrayList<>();\n+        private final List<EventTarget> currentEventTargets = new ArrayList<>();\n+        private final List<EventTarget> newEventTargets = new ArrayList<>();\n@@ -3638,2 +3641,2 @@\n-        private final List<EventTarget> fullPDRCurrentEventTargets = new ArrayList<EventTarget>();\n-        private final List<EventTarget> fullPDRNewEventTargets = new ArrayList<EventTarget>();\n+        private final List<EventTarget> fullPDRCurrentEventTargets = new ArrayList<>();\n+        private final List<EventTarget> fullPDRNewEventTargets = new ArrayList<>();\n@@ -4337,1 +4340,1 @@\n-            eventDispatcher = new SimpleObjectProperty<EventDispatcher>(\n+            eventDispatcher = new SimpleObjectProperty<>(\n@@ -4444,1 +4447,1 @@\n-            onContextMenuRequested = new ObjectPropertyBase<EventHandler<? super ContextMenuEvent>>() {\n+            onContextMenuRequested = new ObjectPropertyBase<>() {\n@@ -4487,1 +4490,1 @@\n-            onMouseClicked = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseClicked = new ObjectPropertyBase<>() {\n@@ -4524,1 +4527,1 @@\n-            onMouseDragged = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseDragged = new ObjectPropertyBase<>() {\n@@ -4560,1 +4563,1 @@\n-            onMouseEntered = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseEntered = new ObjectPropertyBase<>() {\n@@ -4596,1 +4599,1 @@\n-            onMouseExited = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseExited = new ObjectPropertyBase<>() {\n@@ -4633,1 +4636,1 @@\n-            onMouseMoved = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseMoved = new ObjectPropertyBase<>() {\n@@ -4670,1 +4673,1 @@\n-            onMousePressed = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMousePressed = new ObjectPropertyBase<>() {\n@@ -4707,1 +4710,1 @@\n-            onMouseReleased = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onMouseReleased = new ObjectPropertyBase<>() {\n@@ -4744,1 +4747,1 @@\n-            onDragDetected = new ObjectPropertyBase<EventHandler<? super MouseEvent>>() {\n+            onDragDetected = new ObjectPropertyBase<>() {\n@@ -4782,1 +4785,1 @@\n-            onMouseDragOver = new ObjectPropertyBase<EventHandler<? super MouseDragEvent>>() {\n+            onMouseDragOver = new ObjectPropertyBase<>() {\n@@ -4820,1 +4823,1 @@\n-            onMouseDragReleased = new ObjectPropertyBase<EventHandler<? super MouseDragEvent>>() {\n+            onMouseDragReleased = new ObjectPropertyBase<>() {\n@@ -4858,1 +4861,1 @@\n-            onMouseDragEntered = new ObjectPropertyBase<EventHandler<? super MouseDragEvent>>() {\n+            onMouseDragEntered = new ObjectPropertyBase<>() {\n@@ -4896,1 +4899,1 @@\n-            onMouseDragExited = new ObjectPropertyBase<EventHandler<? super MouseDragEvent>>() {\n+            onMouseDragExited = new ObjectPropertyBase<>() {\n@@ -4940,1 +4943,1 @@\n-            onScrollStarted = new ObjectPropertyBase<EventHandler<? super ScrollEvent>>() {\n+            onScrollStarted = new ObjectPropertyBase<>() {\n@@ -4976,1 +4979,1 @@\n-            onScroll = new ObjectPropertyBase<EventHandler<? super ScrollEvent>>() {\n+            onScroll = new ObjectPropertyBase<>() {\n@@ -5013,1 +5016,1 @@\n-            onScrollFinished = new ObjectPropertyBase<EventHandler<? super ScrollEvent>>() {\n+            onScrollFinished = new ObjectPropertyBase<>() {\n@@ -5050,1 +5053,1 @@\n-            onRotationStarted = new ObjectPropertyBase<EventHandler<? super RotateEvent>>() {\n+            onRotationStarted = new ObjectPropertyBase<>() {\n@@ -5087,1 +5090,1 @@\n-            onRotate = new ObjectPropertyBase<EventHandler<? super RotateEvent>>() {\n+            onRotate = new ObjectPropertyBase<>() {\n@@ -5124,1 +5127,1 @@\n-            onRotationFinished = new ObjectPropertyBase<EventHandler<? super RotateEvent>>() {\n+            onRotationFinished = new ObjectPropertyBase<>() {\n@@ -5161,1 +5164,1 @@\n-            onZoomStarted = new ObjectPropertyBase<EventHandler<? super ZoomEvent>>() {\n+            onZoomStarted = new ObjectPropertyBase<>() {\n@@ -5198,1 +5201,1 @@\n-            onZoom = new ObjectPropertyBase<EventHandler<? super ZoomEvent>>() {\n+            onZoom = new ObjectPropertyBase<>() {\n@@ -5235,1 +5238,1 @@\n-            onZoomFinished = new ObjectPropertyBase<EventHandler<? super ZoomEvent>>() {\n+            onZoomFinished = new ObjectPropertyBase<>() {\n@@ -5273,1 +5276,1 @@\n-            onSwipeUp = new ObjectPropertyBase<EventHandler<? super SwipeEvent>>() {\n+            onSwipeUp = new ObjectPropertyBase<>() {\n@@ -5311,1 +5314,1 @@\n-            onSwipeDown = new ObjectPropertyBase<EventHandler<? super SwipeEvent>>() {\n+            onSwipeDown = new ObjectPropertyBase<>() {\n@@ -5349,1 +5352,1 @@\n-            onSwipeLeft = new ObjectPropertyBase<EventHandler<? super SwipeEvent>>() {\n+            onSwipeLeft = new ObjectPropertyBase<>() {\n@@ -5387,1 +5390,1 @@\n-            onSwipeRight = new ObjectPropertyBase<EventHandler<? super SwipeEvent>>() {\n+            onSwipeRight = new ObjectPropertyBase<>() {\n@@ -5430,1 +5433,1 @@\n-            onTouchPressed = new ObjectPropertyBase<EventHandler<? super TouchEvent>>() {\n+            onTouchPressed = new ObjectPropertyBase<>() {\n@@ -5467,1 +5470,1 @@\n-            onTouchMoved = new ObjectPropertyBase<EventHandler<? super TouchEvent>>() {\n+            onTouchMoved = new ObjectPropertyBase<>() {\n@@ -5504,1 +5507,1 @@\n-            onTouchReleased = new ObjectPropertyBase<EventHandler<? super TouchEvent>>() {\n+            onTouchReleased = new ObjectPropertyBase<>() {\n@@ -5542,1 +5545,1 @@\n-            onTouchStationary = new ObjectPropertyBase<EventHandler<? super TouchEvent>>() {\n+            onTouchStationary = new ObjectPropertyBase<>() {\n@@ -5579,3 +5582,3 @@\n-        Map<Long, Integer> slowMap = new HashMap<Long, Integer>();\n-        List<Integer> order = new LinkedList<Integer>();\n-        List<Long> removed = new ArrayList<Long>(10);\n+        Map<Long, Integer> slowMap = new HashMap<>();\n+        List<Integer> order = new LinkedList<>();\n+        List<Long> removed = new ArrayList<>(10);\n@@ -5669,1 +5672,1 @@\n-            onDragEntered = new ObjectPropertyBase<EventHandler<? super DragEvent>>() {\n+            onDragEntered = new ObjectPropertyBase<>() {\n@@ -5707,1 +5710,1 @@\n-            onDragExited = new ObjectPropertyBase<EventHandler<? super DragEvent>>() {\n+            onDragExited = new ObjectPropertyBase<>() {\n@@ -5746,1 +5749,1 @@\n-            onDragOver = new ObjectPropertyBase<EventHandler<? super DragEvent>>() {\n+            onDragOver = new ObjectPropertyBase<>() {\n@@ -5818,1 +5821,1 @@\n-            onDragDropped = new ObjectPropertyBase<EventHandler<? super DragEvent>>() {\n+            onDragDropped = new ObjectPropertyBase<>() {\n@@ -5867,1 +5870,1 @@\n-            onDragDone = new ObjectPropertyBase<EventHandler<? super DragEvent>>() {\n+            onDragDone = new ObjectPropertyBase<>() {\n@@ -5983,1 +5986,1 @@\n-            onKeyPressed = new ObjectPropertyBase<EventHandler<? super KeyEvent>>() {\n+            onKeyPressed = new ObjectPropertyBase<>() {\n@@ -6022,1 +6025,1 @@\n-            onKeyReleased = new ObjectPropertyBase<EventHandler<? super KeyEvent>>() {\n+            onKeyReleased = new ObjectPropertyBase<>() {\n@@ -6065,1 +6068,1 @@\n-            onKeyTyped = new ObjectPropertyBase<EventHandler<? super KeyEvent>>() {\n+            onKeyTyped = new ObjectPropertyBase<>() {\n@@ -6115,1 +6118,1 @@\n-            onInputMethodTextChanged = new ObjectPropertyBase<EventHandler<? super InputMethodEvent>>() {\n+            onInputMethodTextChanged = new ObjectPropertyBase<>() {\n@@ -6240,1 +6243,1 @@\n-            properties = FXCollections.observableMap(new HashMap<Object, Object>());\n+            properties = FXCollections.observableMap(new HashMap<>());\n@@ -6444,1 +6447,1 @@\n-            accMap = new HashMap<Node, Accessible>();\n+            accMap = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":69,"deletions":66,"binary":false,"changes":135,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-            };\n+            }\n@@ -275,1 +275,1 @@\n-            root = new ObjectPropertyBase<Parent>() {\n+            root = new ObjectPropertyBase<>() {\n@@ -367,1 +367,1 @@\n-            camera = new ObjectPropertyBase<Camera>() {\n+            camera = new ObjectPropertyBase<>() {\n@@ -659,1 +659,1 @@\n-            userAgentStylesheet = new SimpleObjectProperty<String>(SubScene.this, \"userAgentStylesheet\", null) {\n+            userAgentStylesheet = new SimpleObjectProperty<>(SubScene.this, \"userAgentStylesheet\", null) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/SubScene.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import javafx.scene.effect.Blend;\n@@ -498,2 +497,2 @@\n-        this.stateStack = new LinkedList<State>();\n-        this.clipStack = new LinkedList<Path2D>();\n+        this.stateStack = new LinkedList<>();\n+        this.clipStack = new LinkedList<>();\n@@ -2169,2 +2168,2 @@\n-        coords[3] = (float) 0;\n-        coords[4] = (float) 0;\n+        coords[3] = 0;\n+        coords[4] = 0;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/canvas\/GraphicsContext.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/Bloom.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/BoxBlur.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/ColorAdjust.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/ColorInput.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -108,1 +108,1 @@\n-    };\n+    }\n@@ -204,1 +204,1 @@\n-            mapData = new ObjectPropertyBase<FloatMap>() {\n+            mapData = new ObjectPropertyBase<>() {\n@@ -243,1 +243,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/DisplacementMap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/DropShadow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/GaussianBlur.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/Glow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    };\n+    }\n@@ -107,1 +107,1 @@\n-            source = new ObjectPropertyBase<Image>() {\n+            source = new ObjectPropertyBase<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/ImageInput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/InnerShadow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    };\n+    }\n@@ -164,1 +164,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/Lighting.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/MotionBlur.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/PerspectiveTransform.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/Reflection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/SepiaTone.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/Shadow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -537,1 +537,1 @@\n-            exception = new ReadOnlyObjectWrapper<Exception>(this, \"exception\");\n+            exception = new ReadOnlyObjectWrapper<>(this, \"exception\");\n@@ -559,1 +559,1 @@\n-            platformImage = new ObjectPropertyImpl<PlatformImage>(\"platformImage\");\n+            platformImage = new ObjectPropertyImpl<>(\"platformImage\");\n@@ -895,1 +895,1 @@\n-            imageRef = new WeakReference<Image>(image);\n+            imageRef = new WeakReference<>(image);\n@@ -1019,1 +1019,1 @@\n-            new LinkedList<ImageTask>();\n+            new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/Image.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -226,1 +226,1 @@\n-            image = new ObjectPropertyBase<Image>() {\n+            image = new ObjectPropertyBase<>() {\n@@ -641,1 +641,1 @@\n-            viewport = new ObjectPropertyBase<Rectangle2D>() {\n+            viewport = new ObjectPropertyBase<>() {\n@@ -814,1 +814,1 @@\n-            new CssMetaData<ImageView,String>(\"-fx-image\",\n+            new CssMetaData<>(\"-fx-image\",\n@@ -832,1 +832,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Node.getClassCssMetaData());\n+                new ArrayList<>(Node.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/ImageView.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-                data[index++] = new Pair<DataFormat, Object>(entry.getKey(), entry.getValue());\n+                data[index++] = new Pair<>(entry.getKey(), entry.getValue());\n@@ -389,1 +389,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/Clipboard.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-    };\n+    }\n@@ -283,1 +283,1 @@\n-        final List<File> files = new ArrayList<File>(filePaths.size());\n+        final List<File> files = new ArrayList<>(filePaths.size());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/ClipboardContent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.scene.Node;\n@@ -58,1 +57,1 @@\n-            new EventType<ContextMenuEvent>(InputEvent.ANY, \"CONTEXTMENUREQUESTED\");\n+            new EventType<>(InputEvent.ANY, \"CONTEXTMENUREQUESTED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/ContextMenuEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<DataFormat>();\n+    private static final WeakReferenceQueue<DataFormat> DATA_FORMAT_LIST = new WeakReferenceQueue<>();\n@@ -141,1 +141,1 @@\n-            this.identifier = Collections.unmodifiableSet(new HashSet<String>(Arrays.asList(ids)));\n+            this.identifier = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ids)));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/DataFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.event.Event;\n@@ -212,1 +211,1 @@\n-            new EventType<DragEvent>(InputEvent.ANY, \"DRAG\");\n+            new EventType<>(InputEvent.ANY, \"DRAG\");\n@@ -225,1 +224,1 @@\n-            new EventType<DragEvent>(DragEvent.ANY, \"DRAG_ENTERED_TARGET\");\n+            new EventType<>(DragEvent.ANY, \"DRAG_ENTERED_TARGET\");\n@@ -237,1 +236,1 @@\n-            new EventType<DragEvent>(DragEvent.DRAG_ENTERED_TARGET, \"DRAG_ENTERED\");\n+            new EventType<>(DragEvent.DRAG_ENTERED_TARGET, \"DRAG_ENTERED\");\n@@ -250,1 +249,1 @@\n-            new EventType<DragEvent>(DragEvent.ANY, \"DRAG_EXITED_TARGET\");\n+            new EventType<>(DragEvent.ANY, \"DRAG_EXITED_TARGET\");\n@@ -262,1 +261,1 @@\n-            new EventType<DragEvent>(DragEvent.DRAG_EXITED_TARGET, \"DRAG_EXITED\");\n+            new EventType<>(DragEvent.DRAG_EXITED_TARGET, \"DRAG_EXITED\");\n@@ -268,1 +267,1 @@\n-            new EventType<DragEvent>(DragEvent.ANY, \"DRAG_OVER\");\n+            new EventType<>(DragEvent.ANY, \"DRAG_OVER\");\n@@ -287,1 +286,1 @@\n-            new EventType<DragEvent>(DragEvent.ANY, \"DRAG_DROPPED\");\n+            new EventType<>(DragEvent.ANY, \"DRAG_DROPPED\");\n@@ -300,1 +299,1 @@\n-            new EventType<DragEvent>(DragEvent.ANY, \"DRAG_DONE\");\n+            new EventType<>(DragEvent.ANY, \"DRAG_DONE\");\n@@ -436,1 +435,1 @@\n-        DragEvent e = (DragEvent) copyFor(source, target);\n+        DragEvent e = copyFor(source, target);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/DragEvent.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.security.Permission;\n@@ -34,1 +33,0 @@\n-import com.sun.javafx.tk.TKScene;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/Dragboard.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.event.Event;\n@@ -55,1 +54,1 @@\n-            new EventType<GestureEvent>(InputEvent.ANY, \"GESTURE\");\n+            new EventType<>(InputEvent.ANY, \"GESTURE\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/GestureEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            new EventType<InputEvent> (Event.ANY, \"INPUT\");\n+            new EventType<> (Event.ANY, \"INPUT\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/InputEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-            new EventType<InputMethodEvent>(InputEvent.ANY, \"INPUT_METHOD_TEXT_CHANGED\");\n+            new EventType<>(InputEvent.ANY, \"INPUT_METHOD_TEXT_CHANGED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/InputMethodEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1177,1 +1177,1 @@\n-        private KeyCodeClass() {};\n+        private KeyCodeClass() {}\n@@ -1317,1 +1317,1 @@\n-        nameMap = new HashMap<String, KeyCode>(KeyCode.values().length);\n+        nameMap = new HashMap<>(KeyCode.values().length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/KeyCode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-        final List<Modifier> modifiers = new ArrayList<Modifier>(4);\n+        final List<Modifier> modifiers = new ArrayList<>(4);\n@@ -638,1 +638,1 @@\n-        List<String> tokens = new ArrayList<String>();\n+        List<String> tokens = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/KeyCombination.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,5 +33,0 @@\n-import com.sun.javafx.scene.input.KeyCodeMap;\n-import javafx.event.Event;\n-import javafx.scene.input.ScrollEvent.HorizontalTextScrollUnits;\n-import javafx.scene.input.ScrollEvent.VerticalTextScrollUnits;\n-\n@@ -92,1 +87,1 @@\n-            new EventType<KeyEvent>(InputEvent.ANY, \"KEY\");\n+            new EventType<>(InputEvent.ANY, \"KEY\");\n@@ -98,1 +93,1 @@\n-            new EventType<KeyEvent>(KeyEvent.ANY, \"KEY_PRESSED\");\n+            new EventType<>(KeyEvent.ANY, \"KEY_PRESSED\");\n@@ -104,1 +99,1 @@\n-            new EventType<KeyEvent>(KeyEvent.ANY, \"KEY_RELEASED\");\n+            new EventType<>(KeyEvent.ANY, \"KEY_RELEASED\");\n@@ -113,1 +108,1 @@\n-            new EventType<KeyEvent>(KeyEvent.ANY, \"KEY_TYPED\");\n+            new EventType<>(KeyEvent.ANY, \"KEY_TYPED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/KeyEvent.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            new EventType<MouseDragEvent>(MouseEvent.ANY, \"MOUSE-DRAG\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE-DRAG\");\n@@ -72,1 +72,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.ANY, \"MOUSE-DRAG_OVER\");\n+            new EventType<>(MouseDragEvent.ANY, \"MOUSE-DRAG_OVER\");\n@@ -79,1 +79,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.ANY, \"MOUSE-DRAG_RELEASED\");\n+            new EventType<>(MouseDragEvent.ANY, \"MOUSE-DRAG_RELEASED\");\n@@ -92,1 +92,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.ANY, \"MOUSE-DRAG_ENTERED_TARGET\");\n+            new EventType<>(MouseDragEvent.ANY, \"MOUSE-DRAG_ENTERED_TARGET\");\n@@ -103,1 +103,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.MOUSE_DRAG_ENTERED_TARGET,\n+            new EventType<>(MouseDragEvent.MOUSE_DRAG_ENTERED_TARGET,\n@@ -117,1 +117,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.ANY, \"MOUSE-DRAG_EXITED_TARGET\");\n+            new EventType<>(MouseDragEvent.ANY, \"MOUSE-DRAG_EXITED_TARGET\");\n@@ -128,1 +128,1 @@\n-            new EventType<MouseDragEvent>(MouseDragEvent.MOUSE_DRAG_EXITED_TARGET,\n+            new EventType<>(MouseDragEvent.MOUSE_DRAG_EXITED_TARGET,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/MouseDragEvent.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import javafx.event.Event;\n@@ -34,2 +33,0 @@\n-import javafx.scene.Node;\n-\n@@ -139,1 +136,1 @@\n-            new EventType<MouseEvent>(InputEvent.ANY, \"MOUSE\");\n+            new EventType<>(InputEvent.ANY, \"MOUSE\");\n@@ -147,1 +144,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_PRESSED\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_PRESSED\");\n@@ -155,1 +152,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_RELEASED\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_RELEASED\");\n@@ -165,1 +162,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_CLICKED\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_CLICKED\");\n@@ -177,1 +174,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_ENTERED_TARGET\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_ENTERED_TARGET\");\n@@ -187,1 +184,1 @@\n-            new EventType<MouseEvent>(MouseEvent.MOUSE_ENTERED_TARGET, \"MOUSE_ENTERED\");\n+            new EventType<>(MouseEvent.MOUSE_ENTERED_TARGET, \"MOUSE_ENTERED\");\n@@ -199,1 +196,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_EXITED_TARGET\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_EXITED_TARGET\");\n@@ -209,1 +206,1 @@\n-            new EventType<MouseEvent>(MouseEvent.MOUSE_EXITED_TARGET, \"MOUSE_EXITED\");\n+            new EventType<>(MouseEvent.MOUSE_EXITED_TARGET, \"MOUSE_EXITED\");\n@@ -217,1 +214,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_MOVED\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_MOVED\");\n@@ -226,1 +223,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"MOUSE_DRAGGED\");\n+            new EventType<>(MouseEvent.ANY, \"MOUSE_DRAGGED\");\n@@ -246,1 +243,1 @@\n-            new EventType<MouseEvent>(MouseEvent.ANY, \"DRAG_DETECTED\");\n+            new EventType<>(MouseEvent.ANY, \"DRAG_DETECTED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/MouseEvent.java","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            new EventType<RotateEvent>(GestureEvent.ANY, \"ANY_ROTATE\");\n+            new EventType<>(GestureEvent.ANY, \"ANY_ROTATE\");\n@@ -75,1 +75,1 @@\n-            new EventType<RotateEvent>(RotateEvent.ANY, \"ROTATE\");\n+            new EventType<>(RotateEvent.ANY, \"ROTATE\");\n@@ -81,1 +81,1 @@\n-            new EventType<RotateEvent>(RotateEvent.ANY, \"ROTATION_STARTED\");\n+            new EventType<>(RotateEvent.ANY, \"ROTATION_STARTED\");\n@@ -87,1 +87,1 @@\n-            new EventType<RotateEvent>(RotateEvent.ANY, \"ROTATION_FINISHED\");\n+            new EventType<>(RotateEvent.ANY, \"ROTATION_FINISHED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/RotateEvent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-            new EventType<ScrollEvent> (GestureEvent.ANY, \"ANY_SCROLL\");\n+            new EventType<> (GestureEvent.ANY, \"ANY_SCROLL\");\n@@ -116,1 +116,1 @@\n-            new EventType<ScrollEvent> (ScrollEvent.ANY, \"SCROLL\");\n+            new EventType<> (ScrollEvent.ANY, \"SCROLL\");\n@@ -124,1 +124,1 @@\n-            new EventType<ScrollEvent> (ScrollEvent.ANY, \"SCROLL_STARTED\");\n+            new EventType<> (ScrollEvent.ANY, \"SCROLL_STARTED\");\n@@ -132,1 +132,1 @@\n-            new EventType<ScrollEvent> (ScrollEvent.ANY, \"SCROLL_FINISHED\");\n+            new EventType<> (ScrollEvent.ANY, \"SCROLL_FINISHED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/ScrollEvent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            new EventType<SwipeEvent>(GestureEvent.ANY, \"ANY_SWIPE\");\n+            new EventType<>(GestureEvent.ANY, \"ANY_SWIPE\");\n@@ -74,1 +74,1 @@\n-            new EventType<SwipeEvent>(SwipeEvent.ANY, \"SWIPE_LEFT\");\n+            new EventType<>(SwipeEvent.ANY, \"SWIPE_LEFT\");\n@@ -80,1 +80,1 @@\n-            new EventType<SwipeEvent>(SwipeEvent.ANY, \"SWIPE_RIGHT\");\n+            new EventType<>(SwipeEvent.ANY, \"SWIPE_RIGHT\");\n@@ -86,1 +86,1 @@\n-            new EventType<SwipeEvent>(SwipeEvent.ANY, \"SWIPE_UP\");\n+            new EventType<>(SwipeEvent.ANY, \"SWIPE_UP\");\n@@ -92,1 +92,1 @@\n-            new EventType<SwipeEvent>(SwipeEvent.ANY, \"SWIPE_DOWN\");\n+            new EventType<>(SwipeEvent.ANY, \"SWIPE_DOWN\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/SwipeEvent.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-            new EventType<TouchEvent>(InputEvent.ANY, \"TOUCH\");\n+            new EventType<>(InputEvent.ANY, \"TOUCH\");\n@@ -73,1 +73,1 @@\n-            new EventType<TouchEvent>(ANY, \"TOUCH_PRESSED\");\n+            new EventType<>(ANY, \"TOUCH_PRESSED\");\n@@ -79,1 +79,1 @@\n-            new EventType<TouchEvent>(ANY, \"TOUCH_MOVED\");\n+            new EventType<>(ANY, \"TOUCH_MOVED\");\n@@ -85,1 +85,1 @@\n-            new EventType<TouchEvent>(ANY, \"TOUCH_RELEASED\");\n+            new EventType<>(ANY, \"TOUCH_RELEASED\");\n@@ -92,1 +92,1 @@\n-            new EventType<TouchEvent>(ANY, \"TOUCH_STATIONARY\");\n+            new EventType<>(ANY, \"TOUCH_STATIONARY\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/TouchEvent.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-            new EventType<ZoomEvent>(GestureEvent.ANY, \"ANY_ZOOM\");\n+            new EventType<>(GestureEvent.ANY, \"ANY_ZOOM\");\n@@ -75,1 +75,1 @@\n-            new EventType<ZoomEvent>(ZoomEvent.ANY, \"ZOOM\");\n+            new EventType<>(ZoomEvent.ANY, \"ZOOM\");\n@@ -81,1 +81,1 @@\n-            new EventType<ZoomEvent>(ZoomEvent.ANY, \"ZOOM_STARTED\");\n+            new EventType<>(ZoomEvent.ANY, \"ZOOM_STARTED\");\n@@ -87,1 +87,1 @@\n-            new EventType<ZoomEvent>(ZoomEvent.ANY, \"ZOOM_FINISHED\");\n+            new EventType<>(ZoomEvent.ANY, \"ZOOM_FINISHED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/ZoomEvent.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -110,9 +110,10 @@\n-            (List<CssMetaData<? extends Styleable, ?>>) (List) Collections.unmodifiableList(\n-                    \/\/ Unchecked!\n-                    Arrays.asList(BACKGROUND_COLOR,\n-                            BACKGROUND_INSETS,\n-                            BACKGROUND_RADIUS,\n-                            BACKGROUND_IMAGE,\n-                            BACKGROUND_REPEAT,\n-                            BACKGROUND_POSITION,\n-                            BACKGROUND_SIZE));\n+            \/\/ Unchecked!\n+            (List) Collections.unmodifiableList(Arrays.asList(\n+                BACKGROUND_COLOR,\n+                BACKGROUND_INSETS,\n+                BACKGROUND_RADIUS,\n+                BACKGROUND_IMAGE,\n+                BACKGROUND_REPEAT,\n+                BACKGROUND_POSITION,\n+                BACKGROUND_SIZE\n+            ));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Background.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import javafx.css.StyleConverter;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BackgroundConverter.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-            new SubCssMetaData<Paint[]>(\"-fx-border-color\",\n+            new SubCssMetaData<>(\"-fx-border-color\",\n@@ -96,1 +96,1 @@\n-            new SubCssMetaData<BorderStrokeStyle[][]>(\"-fx-border-style\",\n+            new SubCssMetaData<>(\"-fx-border-style\",\n@@ -100,1 +100,1 @@\n-            new SubCssMetaData<Margins[]> (\"-fx-border-width\",\n+            new SubCssMetaData<> (\"-fx-border-width\",\n@@ -104,1 +104,1 @@\n-            new SubCssMetaData<CornerRadii[]>(\"-fx-border-radius\",\n+            new SubCssMetaData<>(\"-fx-border-radius\",\n@@ -108,1 +108,1 @@\n-            new SubCssMetaData<Insets[]>(\"-fx-border-insets\",\n+            new SubCssMetaData<>(\"-fx-border-insets\",\n@@ -112,1 +112,1 @@\n-            new SubCssMetaData<String[]>(\"-fx-border-image-source\",\n+            new SubCssMetaData<>(\"-fx-border-image-source\",\n@@ -116,1 +116,1 @@\n-            new SubCssMetaData<RepeatStruct[]>(\"-fx-border-image-repeat\",\n+            new SubCssMetaData<>(\"-fx-border-image-repeat\",\n@@ -121,1 +121,1 @@\n-            new SubCssMetaData<BorderImageSlices[]> (\"-fx-border-image-slice\",\n+            new SubCssMetaData<> (\"-fx-border-image-slice\",\n@@ -126,1 +126,1 @@\n-            new SubCssMetaData<BorderWidths[]>(\"-fx-border-image-width\",\n+            new SubCssMetaData<>(\"-fx-border-image-width\",\n@@ -131,1 +131,1 @@\n-            new SubCssMetaData<Insets[]>(\"-fx-border-image-insets\",\n+            new SubCssMetaData<>(\"-fx-border-image-insets\",\n@@ -136,12 +136,13 @@\n-            (List<CssMetaData<? extends Styleable, ?>>) (List) Collections.unmodifiableList(\n-                    \/\/ Unchecked!\n-                    Arrays.asList(BORDER_COLOR,\n-                            BORDER_STYLE,\n-                            BORDER_WIDTH,\n-                            BORDER_RADIUS,\n-                            BORDER_INSETS,\n-                            BORDER_IMAGE_SOURCE,\n-                            BORDER_IMAGE_REPEAT,\n-                            BORDER_IMAGE_SLICE,\n-                            BORDER_IMAGE_WIDTH,\n-                            BORDER_IMAGE_INSETS));\n+            \/\/ Unchecked!\n+            (List) Collections.unmodifiableList(Arrays.asList(\n+                BORDER_COLOR,\n+                BORDER_STYLE,\n+                BORDER_WIDTH,\n+                BORDER_RADIUS,\n+                BORDER_INSETS,\n+                BORDER_IMAGE_SOURCE,\n+                BORDER_IMAGE_REPEAT,\n+                BORDER_IMAGE_SLICE,\n+                BORDER_IMAGE_WIDTH,\n+                BORDER_IMAGE_INSETS\n+            ));\n@@ -340,1 +341,1 @@\n-            this.strokes = new UnmodifiableArrayList<BorderStroke>(noNulls, size);\n+            this.strokes = new UnmodifiableArrayList<>(noNulls, size);\n@@ -376,1 +377,1 @@\n-            this.images = new UnmodifiableArrayList<BorderImage>(noNulls, size);\n+            this.images = new UnmodifiableArrayList<>(noNulls, size);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Border.java","additions":25,"deletions":24,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import static javafx.scene.layout.Region.positionInArea;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BorderPane.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -182,1 +182,1 @@\n-                List<Double> list = new ArrayList<Double>(dashArray);\n+                List<Double> list = new ArrayList<>(dashArray);\n@@ -264,1 +264,1 @@\n-        List<Double> list = new ArrayList<Double>(items.length);\n+        List<Double> list = new ArrayList<>(items.length);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BorderStrokeStyle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-            hgrow = new ObjectPropertyBase<Priority>() {\n+            hgrow = new ObjectPropertyBase<>() {\n@@ -351,1 +351,1 @@\n-            halignment = new ObjectPropertyBase<HPos>() {\n+            halignment = new ObjectPropertyBase<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/ColumnConstraints.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -822,2 +822,2 @@\n-             new CssMetaData<FlowPane,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class), Pos.TOP_LEFT) {\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class), Pos.TOP_LEFT) {\n@@ -838,2 +838,2 @@\n-             new CssMetaData<FlowPane,HPos>(\"-fx-column-halignment\",\n-                 new EnumConverter<HPos>(HPos.class), HPos.LEFT) {\n+             new CssMetaData<>(\"-fx-column-halignment\",\n+                 new EnumConverter<>(HPos.class), HPos.LEFT) {\n@@ -854,1 +854,1 @@\n-             new CssMetaData<FlowPane,Number>(\"-fx-hgap\",\n+             new CssMetaData<>(\"-fx-hgap\",\n@@ -870,2 +870,2 @@\n-             new CssMetaData<FlowPane,VPos>(\"-fx-row-valignment\",\n-                 new EnumConverter<VPos>(VPos.class), VPos.CENTER) {\n+             new CssMetaData<>(\"-fx-row-valignment\",\n+                 new EnumConverter<>(VPos.class), VPos.CENTER) {\n@@ -886,2 +886,2 @@\n-             new CssMetaData<FlowPane,Orientation>(\"-fx-orientation\",\n-                 new EnumConverter<Orientation>(Orientation.class),\n+             new CssMetaData<>(\"-fx-orientation\",\n+                 new EnumConverter<>(Orientation.class),\n@@ -909,1 +909,1 @@\n-             new CssMetaData<FlowPane,Number>(\"-fx-vgap\",\n+             new CssMetaData<>(\"-fx-vgap\",\n@@ -928,1 +928,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Region.getClassCssMetaData());\n+                new ArrayList<>(Region.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/FlowPane.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -900,1 +900,1 @@\n-    private final ObservableList<RowConstraints> rowConstraints = new TrackableObservableList<RowConstraints>() {\n+    private final ObservableList<RowConstraints> rowConstraints = new TrackableObservableList<>() {\n@@ -934,1 +934,1 @@\n-    private final ObservableList<ColumnConstraints> columnConstraints = new TrackableObservableList<ColumnConstraints>() {\n+    private final ObservableList<ColumnConstraints> columnConstraints = new TrackableObservableList<>() {\n@@ -2408,1 +2408,1 @@\n-             new CssMetaData<GridPane,Boolean>(\"-fx-grid-lines-visible\",\n+             new CssMetaData<>(\"-fx-grid-lines-visible\",\n@@ -2424,1 +2424,1 @@\n-             new CssMetaData<GridPane,Number>(\"-fx-hgap\",\n+             new CssMetaData<>(\"-fx-hgap\",\n@@ -2440,2 +2440,2 @@\n-             new CssMetaData<GridPane,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class), Pos.TOP_LEFT) {\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class), Pos.TOP_LEFT) {\n@@ -2456,1 +2456,1 @@\n-             new CssMetaData<GridPane,Number>(\"-fx-vgap\",\n+             new CssMetaData<>(\"-fx-vgap\",\n@@ -2475,1 +2475,1 @@\n-                    new ArrayList<CssMetaData<? extends Styleable, ?>>(Region.getClassCssMetaData());\n+                    new ArrayList<>(Region.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/GridPane.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -675,2 +675,2 @@\n-             new CssMetaData<HBox,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class),\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class),\n@@ -692,1 +692,1 @@\n-             new CssMetaData<HBox,Boolean>(\"-fx-fill-height\",\n+             new CssMetaData<>(\"-fx-fill-height\",\n@@ -709,1 +709,1 @@\n-             new CssMetaData<HBox,Number>(\"-fx-spacing\",\n+             new CssMetaData<>(\"-fx-spacing\",\n@@ -727,1 +727,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Pane.getClassCssMetaData());\n+                new ArrayList<>(Pane.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HBox.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import javafx.collections.ObservableList;\n@@ -886,1 +885,1 @@\n-            opaqueInsets = new StyleableObjectProperty<Insets>() {\n+            opaqueInsets = new StyleableObjectProperty<>() {\n@@ -978,1 +977,1 @@\n-    };\n+    }\n@@ -1426,1 +1425,1 @@\n-    };\n+    }\n@@ -3445,1 +3444,1 @@\n-             new CssMetaData<Region,Insets>(\"-fx-padding\",\n+             new CssMetaData<>(\"-fx-padding\",\n@@ -3458,1 +3457,1 @@\n-                 new CssMetaData<Region,Insets>(\"-fx-opaque-insets\",\n+                 new CssMetaData<>(\"-fx-opaque-insets\",\n@@ -3474,1 +3473,1 @@\n-             new CssMetaData<Region,Background>(\"-fx-region-background\",\n+             new CssMetaData<>(\"-fx-region-background\",\n@@ -3490,1 +3489,1 @@\n-             new CssMetaData<Region,Border>(\"-fx-region-border\",\n+             new CssMetaData<>(\"-fx-region-border\",\n@@ -3506,1 +3505,1 @@\n-             new CssMetaData<Region,Shape>(\"-fx-shape\",\n+             new CssMetaData<>(\"-fx-shape\",\n@@ -3520,1 +3519,1 @@\n-             new CssMetaData<Region,Boolean>(\"-fx-scale-shape\",\n+             new CssMetaData<>(\"-fx-scale-shape\",\n@@ -3533,1 +3532,1 @@\n-             new CssMetaData<Region,Boolean>(\"-fx-position-shape\",\n+             new CssMetaData<>(\"-fx-position-shape\",\n@@ -3546,1 +3545,1 @@\n-             new CssMetaData<Region,Boolean>(\"-fx-cache-shape\",\n+             new CssMetaData<>(\"-fx-cache-shape\",\n@@ -3559,1 +3558,1 @@\n-             new CssMetaData<Region,Boolean>(\"-fx-snap-to-pixel\",\n+             new CssMetaData<>(\"-fx-snap-to-pixel\",\n@@ -3573,1 +3572,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-min-height\",\n+             new CssMetaData<>(\"-fx-min-height\",\n@@ -3587,1 +3586,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-pref-height\",\n+             new CssMetaData<>(\"-fx-pref-height\",\n@@ -3601,1 +3600,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-max-height\",\n+             new CssMetaData<>(\"-fx-max-height\",\n@@ -3615,1 +3614,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-min-width\",\n+             new CssMetaData<>(\"-fx-min-width\",\n@@ -3629,1 +3628,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-pref-width\",\n+             new CssMetaData<>(\"-fx-pref-width\",\n@@ -3643,1 +3642,1 @@\n-             new CssMetaData<Region,Number>(\"-fx-max-width\",\n+             new CssMetaData<>(\"-fx-max-width\",\n@@ -3660,1 +3659,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Parent.getClassCssMetaData());\n+                new ArrayList<>(Parent.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Region.java","additions":19,"deletions":20,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -310,1 +310,1 @@\n-            vgrow = new ObjectPropertyBase<Priority>() {\n+            vgrow = new ObjectPropertyBase<>() {\n@@ -349,1 +349,1 @@\n-            valignment = new ObjectPropertyBase<VPos>() {\n+            valignment = new ObjectPropertyBase<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/RowConstraints.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -363,2 +363,2 @@\n-             new CssMetaData<StackPane,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class),\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class),\n@@ -382,1 +382,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Region.getClassCssMetaData());\n+                new ArrayList<>(Region.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/StackPane.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1014,2 +1014,2 @@\n-             new CssMetaData<TilePane,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class),\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class),\n@@ -1030,1 +1030,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-pref-columns\",\n+             new CssMetaData<>(\"-fx-pref-columns\",\n@@ -1046,1 +1046,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-hgap\",\n+             new CssMetaData<>(\"-fx-hgap\",\n@@ -1062,1 +1062,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-pref-rows\",\n+             new CssMetaData<>(\"-fx-pref-rows\",\n@@ -1078,2 +1078,2 @@\n-             new CssMetaData<TilePane,Pos>(\"-fx-tile-alignment\",\n-                 new EnumConverter<Pos>(Pos.class),\n+             new CssMetaData<>(\"-fx-tile-alignment\",\n+                 new EnumConverter<>(Pos.class),\n@@ -1095,1 +1095,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-pref-tile-width\",\n+             new CssMetaData<>(\"-fx-pref-tile-width\",\n@@ -1111,1 +1111,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-pref-tile-height\",\n+             new CssMetaData<>(\"-fx-pref-tile-height\",\n@@ -1127,2 +1127,2 @@\n-             new CssMetaData<TilePane,Orientation>(\"-fx-orientation\",\n-                 new EnumConverter<Orientation>(Orientation.class),\n+             new CssMetaData<>(\"-fx-orientation\",\n+                 new EnumConverter<>(Orientation.class),\n@@ -1150,1 +1150,1 @@\n-             new CssMetaData<TilePane,Number>(\"-fx-vgap\",\n+             new CssMetaData<>(\"-fx-vgap\",\n@@ -1168,1 +1168,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Region.getClassCssMetaData());\n+                new ArrayList<>(Region.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/TilePane.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -600,2 +600,2 @@\n-             new CssMetaData<VBox,Pos>(\"-fx-alignment\",\n-                 new EnumConverter<Pos>(Pos.class), Pos.TOP_LEFT){\n+             new CssMetaData<>(\"-fx-alignment\",\n+                 new EnumConverter<>(Pos.class), Pos.TOP_LEFT){\n@@ -615,1 +615,1 @@\n-             new CssMetaData<VBox,Boolean>(\"-fx-fill-width\",\n+             new CssMetaData<>(\"-fx-fill-width\",\n@@ -630,1 +630,1 @@\n-             new CssMetaData<VBox,Number>(\"-fx-spacing\",\n+             new CssMetaData<>(\"-fx-spacing\",\n@@ -647,1 +647,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Region.getClassCssMetaData());\n+                new ArrayList<>(Region.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/VBox.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-            diffuseColor = new SimpleObjectProperty<Color>(PhongMaterial.this,\n+            diffuseColor = new SimpleObjectProperty<>(PhongMaterial.this,\n@@ -170,1 +170,1 @@\n-            specularColor = new SimpleObjectProperty<Color>(PhongMaterial.this,\n+            specularColor = new SimpleObjectProperty<>(PhongMaterial.this,\n@@ -250,1 +250,1 @@\n-            diffuseMap = new SimpleObjectProperty<Image>(PhongMaterial.this,\n+            diffuseMap = new SimpleObjectProperty<>(PhongMaterial.this,\n@@ -299,1 +299,1 @@\n-            specularMap = new SimpleObjectProperty<Image>(PhongMaterial.this,\n+            specularMap = new SimpleObjectProperty<>(PhongMaterial.this,\n@@ -350,1 +350,1 @@\n-            bumpMap = new SimpleObjectProperty<Image>(PhongMaterial.this,\n+            bumpMap = new SimpleObjectProperty<>(PhongMaterial.this,\n@@ -400,1 +400,1 @@\n-            selfIlluminationMap = new SimpleObjectProperty<Image>(PhongMaterial.this,\n+            selfIlluminationMap = new SimpleObjectProperty<>(PhongMaterial.this,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/PhongMaterial.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        List<Stop> newlist = new ArrayList<Stop>(stops.size());\n+        List<Stop> newlist = new ArrayList<>(stops.size());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/paint\/Stop.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.javafx.scene.shape.CubicCurveToHelper;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/LineTo.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import javafx.beans.value.ObservableValue;\n@@ -122,1 +121,1 @@\n-            mesh = new SimpleObjectProperty<Mesh>(MeshView.this, \"mesh\") {\n+            mesh = new SimpleObjectProperty<>(MeshView.this, \"mesh\") {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/MeshView.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-    private final ObservableList<PathElement> elements = new TrackableObservableList<PathElement>() {\n+    private final ObservableList<PathElement> elements = new TrackableObservableList<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Path.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.javafx.geom.Path2D;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/PathElement.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    private final ObservableList<Double> points = new TrackableObservableList<Double>() {\n+    private final ObservableList<Double> points = new TrackableObservableList<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Polygon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    private final ObservableList<Double> points = new TrackableObservableList<Double>() {\n+    private final ObservableList<Double> points = new TrackableObservableList<>() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Polyline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-                cache.put(key, new SoftReference<TriangleMesh>(mesh));\n+                cache.put(key, new SoftReference<>(mesh));\n@@ -234,1 +234,1 @@\n-};\n+}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/PredefinedMeshManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -428,1 +428,1 @@\n-            new CssMetaData<Rectangle,Number>(\"-fx-arc-height\",\n+            new CssMetaData<>(\"-fx-arc-height\",\n@@ -443,1 +443,1 @@\n-            new CssMetaData<Rectangle,Number>(\"-fx-arc-width\",\n+            new CssMetaData<>(\"-fx-arc-width\",\n@@ -461,1 +461,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Shape.getClassCssMetaData());\n+                new ArrayList<>(Shape.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Rectangle.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -509,1 +509,1 @@\n-            stroke = new StyleableObjectProperty<Paint>() {\n+            stroke = new StyleableObjectProperty<>() {\n@@ -637,1 +637,1 @@\n-            new CssMetaData<Shape,Paint>(\"-fx-fill\",\n+            new CssMetaData<>(\"-fx-fill\",\n@@ -664,1 +664,1 @@\n-            new CssMetaData<Shape,Boolean>(\"-fx-smooth\",\n+            new CssMetaData<>(\"-fx-smooth\",\n@@ -684,1 +684,1 @@\n-            new CssMetaData<Shape,Paint>(\"-fx-stroke\",\n+            new CssMetaData<>(\"-fx-stroke\",\n@@ -722,1 +722,1 @@\n-            new CssMetaData<Shape,Number[]>(\"-fx-stroke-dash-array\",\n+            new CssMetaData<>(\"-fx-stroke-dash-array\",\n@@ -743,1 +743,1 @@\n-            new CssMetaData<Shape,Number>(\"-fx-stroke-dash-offset\",\n+            new CssMetaData<>(\"-fx-stroke-dash-offset\",\n@@ -764,2 +764,2 @@\n-            new CssMetaData<Shape,StrokeLineCap>(\"-fx-stroke-line-cap\",\n-                new EnumConverter<StrokeLineCap>(StrokeLineCap.class),\n+            new CssMetaData<>(\"-fx-stroke-line-cap\",\n+                new EnumConverter<>(StrokeLineCap.class),\n@@ -786,2 +786,2 @@\n-            new CssMetaData<Shape,StrokeLineJoin>(\"-fx-stroke-line-join\",\n-                new EnumConverter<StrokeLineJoin>(StrokeLineJoin.class),\n+            new CssMetaData<>(\"-fx-stroke-line-join\",\n+                new EnumConverter<>(StrokeLineJoin.class),\n@@ -808,2 +808,2 @@\n-            new CssMetaData<Shape,StrokeType>(\"-fx-stroke-type\",\n-                new EnumConverter<StrokeType>(StrokeType.class),\n+            new CssMetaData<>(\"-fx-stroke-type\",\n+                new EnumConverter<>(StrokeType.class),\n@@ -831,1 +831,1 @@\n-            new CssMetaData<Shape,Number>(\"-fx-stroke-miter-limit\",\n+            new CssMetaData<>(\"-fx-stroke-miter-limit\",\n@@ -852,1 +852,1 @@\n-            new CssMetaData<Shape,Number>(\"-fx-stroke-width\",\n+            new CssMetaData<>(\"-fx-stroke-width\",\n@@ -871,1 +871,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Node.getClassCssMetaData());\n+                new ArrayList<>(Node.getClassCssMetaData());\n@@ -1436,1 +1436,1 @@\n-                dashArray = new TrackableObservableList<Double>() {\n+                dashArray = new TrackableObservableList<>() {\n@@ -1450,1 +1450,1 @@\n-                cssDashArray = new StyleableObjectProperty<Number[]>()\n+                cssDashArray = new StyleableObjectProperty<>()\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Shape.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-            material = new SimpleObjectProperty<Material>(Shape3D.this,\n+            material = new SimpleObjectProperty<>(Shape3D.this,\n@@ -196,1 +196,1 @@\n-            drawMode = new SimpleObjectProperty<DrawMode>(Shape3D.this,\n+            drawMode = new SimpleObjectProperty<>(Shape3D.this,\n@@ -225,1 +225,1 @@\n-            cullFace = new SimpleObjectProperty<CullFace>(Shape3D.this,\n+            cullFace = new SimpleObjectProperty<>(Shape3D.this,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Shape3D.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-            vertexFormat = new SimpleObjectProperty<VertexFormat>(TriangleMesh.this, \"vertexFormat\") {\n+            vertexFormat = new SimpleObjectProperty<>(TriangleMesh.this, \"vertexFormat\") {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/TriangleMesh.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1308,1 +1308,1 @@\n-            new FontCssMetaData<Text>(\"-fx-font\", Font.getDefault()) {\n+            new FontCssMetaData<>(\"-fx-font\", Font.getDefault()) {\n@@ -1322,1 +1322,1 @@\n-            new CssMetaData<Text,Boolean>(\"-fx-underline\",\n+            new CssMetaData<>(\"-fx-underline\",\n@@ -1339,1 +1339,1 @@\n-            new CssMetaData<Text,Boolean>(\"-fx-strikethrough\",\n+            new CssMetaData<>(\"-fx-strikethrough\",\n@@ -1357,2 +1357,2 @@\n-                new CssMetaData<Text,TextAlignment>(\"-fx-text-alignment\",\n-                new EnumConverter<TextAlignment>(TextAlignment.class),\n+                new CssMetaData<>(\"-fx-text-alignment\",\n+                new EnumConverter<>(TextAlignment.class),\n@@ -1375,2 +1375,2 @@\n-                new CssMetaData<Text,VPos>(\"-fx-text-origin\",\n-                new EnumConverter<VPos>(VPos.class),\n+                new CssMetaData<>(\"-fx-text-origin\",\n+                new EnumConverter<>(VPos.class),\n@@ -1394,1 +1394,1 @@\n-            new CssMetaData<Text,FontSmoothingType>(\n+            new CssMetaData<>(\n@@ -1396,1 +1396,1 @@\n-                new EnumConverter<FontSmoothingType>(FontSmoothingType.class),\n+                new EnumConverter<>(FontSmoothingType.class),\n@@ -1415,1 +1415,1 @@\n-                new CssMetaData<Text,Number>(\"-fx-line-spacing\",\n+                new CssMetaData<>(\"-fx-line-spacing\",\n@@ -1433,1 +1433,1 @@\n-            new CssMetaData<Text,TextBoundsType>(\n+            new CssMetaData<>(\n@@ -1435,1 +1435,1 @@\n-                new EnumConverter<TextBoundsType>(TextBoundsType.class),\n+                new EnumConverter<>(TextBoundsType.class),\n@@ -1450,1 +1450,1 @@\n-                new CssMetaData<Text,Number>(\"-fx-tab-size\",\n+                new CssMetaData<>(\"-fx-tab-size\",\n@@ -1469,1 +1469,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Shape.getClassCssMetaData());\n+                new ArrayList<>(Shape.getClassCssMetaData());\n@@ -1505,1 +1505,0 @@\n-    @SuppressWarnings(\"deprecation\")\n@@ -1738,1 +1737,1 @@\n-                selectionBinding = new ObjectBinding<PathElement[]>() {\n+                selectionBinding = new ObjectBinding<>() {\n@@ -1746,1 +1745,1 @@\n-              selectionShape = new SimpleObjectProperty<PathElement[]>(Text.this, \"selectionShape\");\n+              selectionShape = new SimpleObjectProperty<>(Text.this, \"selectionShape\");\n@@ -1815,1 +1814,1 @@\n-                caretBinding = new ObjectBinding<PathElement[]>() {\n+                caretBinding = new ObjectBinding<>() {\n@@ -1830,1 +1829,1 @@\n-                caretShape = new SimpleObjectProperty<PathElement[]>(Text.this, \"caretShape\");\n+                caretShape = new SimpleObjectProperty<>(Text.this, \"caretShape\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -57,1 +57,0 @@\n-import javafx.beans.property.IntegerPropertyBase;\n@@ -548,2 +547,2 @@\n-                new CssMetaData<TextFlow,TextAlignment>(\"-fx-text-alignment\",\n-                new EnumConverter<TextAlignment>(TextAlignment.class),\n+                new CssMetaData<>(\"-fx-text-alignment\",\n+                new EnumConverter<>(TextAlignment.class),\n@@ -563,1 +562,1 @@\n-                new CssMetaData<TextFlow,Number>(\"-fx-line-spacing\",\n+                new CssMetaData<>(\"-fx-line-spacing\",\n@@ -576,1 +575,1 @@\n-                new CssMetaData<TextFlow,Number>(\"-fx-tab-size\",\n+                new CssMetaData<>(\"-fx-tab-size\",\n@@ -593,1 +592,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Pane.getClassCssMetaData());\n+                new ArrayList<>(Pane.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/TextFlow.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2033,2 +2033,1 @@\n-            onTransformChanged = new SimpleObjectProperty<EventHandler\n-                    <? super TransformChangedEvent>>(this, \"onTransformChanged\") {\n+            onTransformChanged = new SimpleObjectProperty<>(this, \"onTransformChanged\") {\n@@ -2177,1 +2176,1 @@\n-            inverseCache = new SoftReference<Transform>(inv);\n+            inverseCache = new SoftReference<>(inv);\n@@ -2924,0 +2923,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/transform\/Transform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-                    new SimpleObjectProperty<File>(this, \"initialDirectory\");\n+                    new SimpleObjectProperty<>(this, \"initialDirectory\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/DirectoryChooser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-                    new SimpleObjectProperty<File>(this, \"initialDirectory\");\n+                    new SimpleObjectProperty<>(this, \"initialDirectory\");\n@@ -276,1 +276,1 @@\n-                    new SimpleObjectProperty<String>(this, \"initialFileName\");\n+                    new SimpleObjectProperty<>(this, \"initialFileName\");\n@@ -325,1 +325,1 @@\n-                    new SimpleObjectProperty<ExtensionFilter>(this,\n+                    new SimpleObjectProperty<>(this,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/FileChooser.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-    private final List<PopupWindow> children = new ArrayList<PopupWindow>();\n+    private final List<PopupWindow> children = new ArrayList<>();\n@@ -229,1 +229,1 @@\n-            new ReadOnlyObjectWrapper<Window>(this, \"ownerWindow\");\n+            new ReadOnlyObjectWrapper<>(this, \"ownerWindow\");\n@@ -244,1 +244,1 @@\n-            new ReadOnlyObjectWrapper<Node>(this, \"ownerNode\");\n+            new ReadOnlyObjectWrapper<>(this, \"ownerNode\");\n@@ -324,1 +324,1 @@\n-            new SimpleObjectProperty<EventHandler<Event>>(this, \"onAutoHide\");\n+            new SimpleObjectProperty<>(this, \"onAutoHide\");\n@@ -692,1 +692,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/PopupWindow.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -688,1 +688,1 @@\n-    private ObservableList<Image> icons = new VetoableListDecorator<Image>(new TrackableObservableList<Image>() {\n+    private ObservableList<Image> icons = new VetoableListDecorator<>(new TrackableObservableList<Image>() {\n@@ -690,1 +690,1 @@\n-            List<Object> platformImages = new ArrayList<Object>();\n+            List<Object> platformImages = new ArrayList<>();\n@@ -1190,1 +1190,1 @@\n-            List<Object> platformImages = new ArrayList<Object>();\n+            List<Object> platformImages = new ArrayList<>();\n@@ -1268,1 +1268,1 @@\n-            new SimpleObjectProperty<KeyCombination>(this, \"fullScreenExitCombination\", null);\n+            new SimpleObjectProperty<>(this, \"fullScreenExitCombination\", null);\n@@ -1326,1 +1326,1 @@\n-            new SimpleObjectProperty<String>(this, \"fullScreenExitHint\", null);\n+            new SimpleObjectProperty<>(this, \"fullScreenExitHint\", null);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Stage.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -736,1 +736,1 @@\n-            properties = FXCollections.observableMap(new HashMap<Object, Object>());\n+            properties = FXCollections.observableMap(new HashMap<>());\n@@ -955,1 +955,1 @@\n-            onCloseRequest = new ObjectPropertyBase<EventHandler<WindowEvent>>() {\n+            onCloseRequest = new ObjectPropertyBase<>() {\n@@ -984,1 +984,1 @@\n-            onShowing = new ObjectPropertyBase<EventHandler<WindowEvent>>() {\n+            onShowing = new ObjectPropertyBase<>() {\n@@ -1013,1 +1013,1 @@\n-            onShown = new ObjectPropertyBase<EventHandler<WindowEvent>>() {\n+            onShown = new ObjectPropertyBase<>() {\n@@ -1042,1 +1042,1 @@\n-            onHiding = new ObjectPropertyBase<EventHandler<WindowEvent>>() {\n+            onHiding = new ObjectPropertyBase<>() {\n@@ -1074,1 +1074,1 @@\n-            onHidden = new ObjectPropertyBase<EventHandler<WindowEvent>>() {\n+            onHidden = new ObjectPropertyBase<>() {\n@@ -1414,1 +1414,1 @@\n-            eventDispatcher = new SimpleObjectProperty<EventDispatcher>(\n+            eventDispatcher = new SimpleObjectProperty<>(\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/Window.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            new EventType<WindowEvent>(Event.ANY, \"WINDOW\");\n+            new EventType<>(Event.ANY, \"WINDOW\");\n@@ -51,1 +51,1 @@\n-            new EventType<WindowEvent>(WindowEvent.ANY, \"WINDOW_SHOWING\");\n+            new EventType<>(WindowEvent.ANY, \"WINDOW_SHOWING\");\n@@ -57,1 +57,1 @@\n-            new EventType<WindowEvent>(WindowEvent.ANY, \"WINDOW_SHOWN\");\n+            new EventType<>(WindowEvent.ANY, \"WINDOW_SHOWN\");\n@@ -63,1 +63,1 @@\n-            new EventType<WindowEvent>(WindowEvent.ANY, \"WINDOW_HIDING\");\n+            new EventType<>(WindowEvent.ANY, \"WINDOW_HIDING\");\n@@ -69,1 +69,1 @@\n-            new EventType<WindowEvent>(WindowEvent.ANY, \"WINDOW_HIDDEN\");\n+            new EventType<>(WindowEvent.ANY, \"WINDOW_HIDDEN\");\n@@ -78,1 +78,1 @@\n-            new EventType<WindowEvent>(WindowEvent.ANY, \"WINDOW_CLOSE_REQUEST\");\n+            new EventType<>(WindowEvent.ANY, \"WINDOW_CLOSE_REQUEST\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/WindowEvent.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-                = new HashMap<Integer, LinuxAbsoluteInputCapabilities>();\n+                = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/monocle\/LinuxInputDeviceRegistryShim.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,3 +27,0 @@\n-import java.util.HashMap;\n-import java.util.Map;\n-\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/monocle\/LinuxInputShim.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+    @Override\n@@ -34,0 +35,1 @@\n+    @Override\n@@ -38,0 +40,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/glass\/ui\/monocle\/TouchFilterShim.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4,1 +4,0 @@\n-import java.util.Map;\n@@ -197,2 +196,2 @@\n-        public StyleManagerShim.RefList<Parent> get_parentUsers() {\n-            return new RefList<Parent>(sc.parentUsers);\n+        public RefList get_parentUsers() {\n+            return new RefList(sc.parentUsers);\n@@ -202,1 +201,1 @@\n-    static class RefList<T> {\n+    static class RefList {\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/javafx\/css\/StyleManagerShim.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import static com.sun.javafx.css.parser.Token.EOF;\n-\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/javafx\/css\/parser\/TokenShim.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.geom.DirtyRegionPool;\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/javafx\/sg\/prism\/NGNodeShim.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.javafx.stage.WindowHelper;\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStageShim.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/javafx\/scene\/ParentShim.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-        return (NGTriangleMesh) mesh.getPGMesh();\n+        return mesh.getPGMesh();\n","filename":"modules\/javafx.graphics\/src\/shims\/java\/javafx\/scene\/shape\/TriangleMeshShim.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        ParsedValue< String,Boolean> value = new ParsedValueImpl<String,Boolean>(\"true\", BooleanConverter.getInstance());\n+        ParsedValue< String,Boolean> value = new ParsedValueImpl<>(\"true\", BooleanConverter.getInstance());\n@@ -56,1 +56,1 @@\n-        value = new ParsedValueImpl<String,Boolean>(\"false\", BooleanConverter.getInstance());\n+        value = new ParsedValueImpl<>(\"false\", BooleanConverter.getInstance());\n@@ -61,1 +61,1 @@\n-        value = new ParsedValueImpl<String,Boolean>(null, BooleanConverter.getInstance());\n+        value = new ParsedValueImpl<>(null, BooleanConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/BooleanTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"hand\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"hand\", CursorConverter.getInstance());\n@@ -58,1 +58,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"open-hand\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"open-hand\", CursorConverter.getInstance());\n@@ -67,1 +67,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"Cursor.open-hand\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"Cursor.open-hand\", CursorConverter.getInstance());\n@@ -76,1 +76,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"javafx.scene.Cursor.open-hand\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"javafx.scene.Cursor.open-hand\", CursorConverter.getInstance());\n@@ -85,1 +85,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"javafx.scene.Cursor.\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"javafx.scene.Cursor.\", CursorConverter.getInstance());\n@@ -94,1 +94,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"\", CursorConverter.getInstance());\n@@ -103,1 +103,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(null, CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(null, CursorConverter.getInstance());\n@@ -112,1 +112,1 @@\n-        ParsedValue<String,Cursor> value = new ParsedValueImpl<String,Cursor>(\"bogus\", CursorConverter.getInstance());\n+        ParsedValue<String,Cursor> value = new ParsedValueImpl<>(\"bogus\", CursorConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/CursorTypeTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-            colorVal = new ParsedValueImpl<ParsedValue[],Color>(values, DeriveColorConverter.getInstance());\n+            colorVal = new ParsedValueImpl<>(values, DeriveColorConverter.getInstance());\n@@ -74,1 +74,1 @@\n-            colorVal = new ParsedValueImpl<Color,Color>(is.getColor(),null);\n+            colorVal = new ParsedValueImpl<>(is.getColor(),null);\n@@ -88,1 +88,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Effect>(vals, EffectConverter.InnerShadowConverter.getInstance());\n+        return new ParsedValueImpl<>(vals, EffectConverter.InnerShadowConverter.getInstance());\n@@ -108,1 +108,1 @@\n-            colorVal = new ParsedValueImpl<ParsedValue[],Color>(values, DeriveColorConverter.getInstance());\n+            colorVal = new ParsedValueImpl<>(values, DeriveColorConverter.getInstance());\n@@ -110,1 +110,1 @@\n-            colorVal = new ParsedValueImpl<Color,Color>(ds.getColor(),null);\n+            colorVal = new ParsedValueImpl<>(ds.getColor(),null);\n@@ -124,1 +124,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Effect>(vals, EffectConverter.DropShadowConverter.getInstance());\n+        return new ParsedValueImpl<>(vals, EffectConverter.DropShadowConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/EffectTypeTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-        ParsedValue<Size,Size> size = new ParsedValueImpl<Size,Size>(new Size(2.0f, SizeUnits.EM), null);\n-        ParsedValue<ParsedValue<?,Size>,Number> value = new ParsedValueImpl<ParsedValue<?,Size>,Number>(size, SizeConverter.getInstance());\n+        ParsedValue<Size,Size> size = new ParsedValueImpl<>(new Size(2.0f, SizeUnits.EM), null);\n+        ParsedValue<ParsedValue<?,Size>,Number> value = new ParsedValueImpl<>(size, SizeConverter.getInstance());\n@@ -56,2 +56,2 @@\n-        size = new ParsedValueImpl<Size,Size>(new Size(120.0f, SizeUnits.PERCENT), null);\n-        value = new ParsedValueImpl<ParsedValue<?,Size>,Number>(size, SizeConverter.getInstance());\n+        size = new ParsedValueImpl<>(new Size(120.0f, SizeUnits.PERCENT), null);\n+        value = new ParsedValueImpl<>(size, SizeConverter.getInstance());\n@@ -62,2 +62,2 @@\n-        size = new ParsedValueImpl<Size,Size>(new Size(12.0f, SizeUnits.PT), null);\n-        value = new ParsedValueImpl<ParsedValue<?,Size>,Number>(size, SizeConverter.getInstance());\n+        size = new ParsedValueImpl<>(new Size(12.0f, SizeUnits.PT), null);\n+        value = new ParsedValueImpl<>(size, SizeConverter.getInstance());\n@@ -68,2 +68,2 @@\n-        size = new ParsedValueImpl<Size,Size>(new Size(12.0f, SizeUnits.PX), null);\n-        value = new ParsedValueImpl<ParsedValue<?,Size>,Number>(size, SizeConverter.getInstance());\n+        size = new ParsedValueImpl<>(new Size(12.0f, SizeUnits.PX), null);\n+        value = new ParsedValueImpl<>(size, SizeConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/FontSizeTypeTest.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-        List<PseudoClass> stateList = new ArrayList<PseudoClass>();\n+        List<PseudoClass> stateList = new ArrayList<>();\n@@ -168,1 +168,1 @@\n-        List<PseudoClass> stateList = new ArrayList<PseudoClass>();\n+        List<PseudoClass> stateList = new ArrayList<>();\n@@ -579,1 +579,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -599,1 +599,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -613,1 +613,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -645,1 +645,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -685,1 +685,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -705,1 +705,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -719,1 +719,1 @@\n-        List<PseudoClass> states = new ArrayList<PseudoClass>();\n+        List<PseudoClass> states = new ArrayList<>();\n@@ -734,1 +734,1 @@\n-        List<PseudoClass> expected = new ArrayList<PseudoClass>();\n+        List<PseudoClass> expected = new ArrayList<>();\n@@ -742,1 +742,1 @@\n-        List<PseudoClass> stateList = new ArrayList<PseudoClass>();\n+        List<PseudoClass> stateList = new ArrayList<>();\n@@ -763,1 +763,1 @@\n-        List<PseudoClass> stateList = new ArrayList<PseudoClass>();\n+        List<PseudoClass> stateList = new ArrayList<>();\n@@ -783,1 +783,1 @@\n-        };\n+        }\n@@ -808,1 +808,1 @@\n-        };\n+        }\n@@ -833,1 +833,1 @@\n-        };\n+        }\n@@ -861,1 +861,1 @@\n-        };\n+        }\n@@ -909,1 +909,1 @@\n-        };\n+        }\n@@ -930,1 +930,1 @@\n-        };\n+        }\n@@ -945,1 +945,1 @@\n-        };\n+        }\n@@ -966,1 +966,1 @@\n-        };\n+        }\n@@ -981,1 +981,1 @@\n-        };\n+        }\n@@ -1002,1 +1002,1 @@\n-        };\n+        }\n@@ -1045,1 +1045,1 @@\n-        };\n+        }\n@@ -1050,1 +1050,1 @@\n-        };\n+        }\n@@ -1099,1 +1099,1 @@\n-        };\n+        }\n@@ -1104,1 +1104,1 @@\n-        };\n+        }\n@@ -1141,1 +1141,1 @@\n-        };\n+        }\n@@ -1199,1 +1199,1 @@\n-        };\n+        }\n@@ -1221,1 +1221,1 @@\n-        };\n+        }\n@@ -1242,1 +1242,1 @@\n-        };\n+        }\n@@ -1246,1 +1246,1 @@\n-        };\n+        }\n@@ -1265,1 +1265,1 @@\n-        };\n+        }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/PseudoClassTest.java","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-        ParsedValue<Size, Size> value = new ParsedValueImpl<Size,Size>(size,null);\n+        ParsedValue<Size, Size> value = new ParsedValueImpl<>(size,null);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/SizeTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        ParsedValue<String,String> value = new ParsedValueImpl<String,String>(\"test\", StyleConverter.getStringConverter());\n+        ParsedValue<String,String> value = new ParsedValueImpl<>(\"test\", StyleConverter.getStringConverter());\n@@ -65,2 +65,2 @@\n-            new ParsedValueImpl<String,String>(\"hello\", StyleConverter.getStringConverter()),\n-            new ParsedValueImpl<String,String>(\"world\", StyleConverter.getStringConverter())\n+            new ParsedValueImpl<>(\"hello\", StyleConverter.getStringConverter()),\n+            new ParsedValueImpl<>(\"world\", StyleConverter.getStringConverter())\n@@ -70,1 +70,1 @@\n-            new ParsedValueImpl<ParsedValue<String,String>[], String[]>(values, StringConverter.SequenceConverter.getInstance());\n+            new ParsedValueImpl<>(values, StringConverter.SequenceConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/StringTypeTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1007,1 +1007,1 @@\n-        sm.platformUserAgentStylesheetContainers_clear();;\n+        sm.platformUserAgentStylesheetContainers_clear();\n@@ -1017,1 +1017,1 @@\n-        sm.platformUserAgentStylesheetContainers_clear();;\n+        sm.platformUserAgentStylesheetContainers_clear();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/StyleManagerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-             new CssMetaData<TestNode, Number>(\"-fx-xyzzy\",\n+             new CssMetaData<>(\"-fx-xyzzy\",\n@@ -100,1 +100,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(TestNodeBase.getClassCssMetaData());\n+                new ArrayList<>(TestNodeBase.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/TestNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -195,1 +195,1 @@\n-                new CssMetaData<TestNodeBase,Boolean>(\"-fx-test\",\n+                new CssMetaData<>(\"-fx-test\",\n@@ -210,1 +210,1 @@\n-                new CssMetaData<TestNodeBase,String>(\"-fx-string\",\n+                new CssMetaData<>(\"-fx-string\",\n@@ -225,1 +225,1 @@\n-                new CssMetaData<TestNodeBase,Number>(\"-fx-double-property\",\n+                new CssMetaData<>(\"-fx-double-property\",\n@@ -242,1 +242,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Node.getClassCssMetaData());\n+                new ArrayList<>(Node.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/TestNodeBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,2 +30,0 @@\n-import static org.junit.Assert.fail;\n-\n@@ -92,1 +90,1 @@\n-                new ParsedValueImpl<String,String>(testPairs[n][0], StringConverter.getInstance()),\n+                new ParsedValueImpl<>(testPairs[n][0], StringConverter.getInstance()),\n@@ -95,2 +93,2 @@\n-            urls[n] = new ParsedValueImpl<ParsedValue[],String>(values, URLConverter.getInstance());\n-        };\n+            urls[n] = new ParsedValueImpl<>(values, URLConverter.getInstance());\n+        }\n@@ -99,1 +97,1 @@\n-                new ParsedValueImpl<ParsedValue<ParsedValue[],String>[],String[]>(urls, URLConverter.SequenceConverter.getInstance());\n+                new ParsedValueImpl<>(urls, URLConverter.SequenceConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/URLTypeTest.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-            new ParsedValueImpl<ParsedValue[], String>(values, URLConverter.getInstance());\n+            new ParsedValueImpl<>(values, URLConverter.getInstance());\n@@ -79,1 +79,1 @@\n-            new ParsedValueImpl<ParsedValue[], String>(values, URLConverter.getInstance());\n+            new ParsedValueImpl<>(values, URLConverter.getInstance());\n@@ -97,1 +97,1 @@\n-            new ParsedValueImpl<ParsedValue[], String>(values, URLConverter.getInstance());\n+            new ParsedValueImpl<>(values, URLConverter.getInstance());\n@@ -115,1 +115,1 @@\n-            new ParsedValueImpl<ParsedValue[], String>(values, URLConverter.getInstance());\n+            new ParsedValueImpl<>(values, URLConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/converters\/URLConverterTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        return p < data.length ? (int)data[p++] & 0xff : -1;\n+        return p < data.length ? data[p++] & 0xff : -1;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/iio\/GIFLoaderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -697,2 +697,2 @@\n-            hbuf.put(i, (byte) bv);\n-            dbuf.put(i, (byte) bv);\n+            hbuf.put(i, bv);\n+            dbuf.put(i, bv);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/image\/ConverterTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import com.sun.javafx.geom.PathConsumer2D;\n@@ -33,1 +32,1 @@\n-public class SVGPathImpl extends Path2D implements PathConsumer2D {\n+public class SVGPathImpl extends Path2D {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/SVGPathImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        imageInfos = new HashMap<Object, StubPlatformImageInfo>();\n+        imageInfos = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubImageLoaderFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    @Override\n@@ -46,0 +47,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubPrimaryTimer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javafx.scene.Node;\n@@ -51,0 +50,1 @@\n+    @Override\n@@ -55,0 +55,1 @@\n+    @Override\n@@ -59,0 +60,1 @@\n+    @Override\n@@ -63,0 +65,1 @@\n+    @Override\n@@ -67,0 +70,1 @@\n+    @Override\n@@ -71,0 +75,1 @@\n+    @Override\n@@ -75,0 +80,1 @@\n+    @Override\n@@ -79,0 +85,1 @@\n+    @Override\n@@ -83,0 +90,1 @@\n+    @Override\n@@ -91,0 +99,1 @@\n+    @Override\n@@ -106,0 +115,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubScene.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-                new LinkedList<Notification>();\n+                new LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubStage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        final double fontSize = (font == null ? nullFontSize : ((Font)font).getSize());\n+        final double fontSize = (font == null ? nullFontSize : font.getSize());\n@@ -167,1 +167,1 @@\n-        final double fontSize = (font == null ? nullFontSize : ((Font)font).getSize());\n+        final double fontSize = (font == null ? nullFontSize : font.getSize());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubTextLayout.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-    private Map<Object, Object> contextMap = new HashMap<Object, Object>();\n+    private Map<Object, Object> contextMap = new HashMap<>();\n@@ -374,1 +374,1 @@\n-        private Map<DataFormat, Object> map = new HashMap<DataFormat, Object>();\n+        private Map<DataFormat, Object> map = new HashMap<>();\n@@ -405,1 +405,1 @@\n-            Set<TransferMode> modes = new HashSet<TransferMode>();\n+            Set<TransferMode> modes = new HashSet<>();\n@@ -738,0 +738,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/pgstub\/StubToolkit.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import javafx.scene.Parent;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/KeyboardShortcutsTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/bounds\/ResizablePerfNodeHelper.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import javafx.geometry.Insets;\n-import javafx.scene.layout.BackgroundFill;\n-import javafx.scene.paint.Color;\n@@ -33,6 +30,0 @@\n-import java.util.HashMap;\n-\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundFillTest.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                new ParsedValueImpl<ParsedValue<String,BackgroundRepeat>[][], RepeatStruct[]>(\n+                new ParsedValueImpl<>(\n@@ -63,1 +63,1 @@\n-                new ParsedValueImpl<ParsedValue<String,BackgroundRepeat>[][], RepeatStruct[]>(\n+                new ParsedValueImpl<>(\n@@ -83,1 +83,1 @@\n-                new ParsedValueImpl<ParsedValue<String,BackgroundRepeat>[][], RepeatStruct[]>(\n+                new ParsedValueImpl<>(\n@@ -101,1 +101,1 @@\n-                new ParsedValueImpl<ParsedValue<String,BackgroundRepeat>[][], RepeatStruct[]>(\n+                new ParsedValueImpl<>(\n@@ -120,1 +120,1 @@\n-                new ParsedValueImpl<ParsedValue<String,BackgroundRepeat>[][], RepeatStruct[]>(\n+                new ParsedValueImpl<>(\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundRepeatConverterTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -197,3 +197,3 @@\n-                            (TransformShim.ImmutableTransformShim) conc,\n-                                TransformShim.getImmutableState3d(conc),\n-                                TransformShim.getImmutableState2d(conc));\n+                            conc,\n+                            TransformShim.getImmutableState3d(conc),\n+                            TransformShim.getImmutableState2d(conc));\n@@ -223,1 +223,1 @@\n-                        (TransformShim.ImmutableTransformShim) conc2,\n+                        conc2,\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/transform\/TransformUtilsTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import com.sun.javafx.scene.traversal.ContainerTabOrder;\n@@ -34,1 +33,0 @@\n-import com.sun.javafx.scene.traversal.TopMostTraversalEngine;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/traversal\/TopMostTraversalEngineTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import com.sun.javafx.scene.traversal.Direction;\n-import com.sun.javafx.scene.traversal.SceneTraversalEngine;\n@@ -33,1 +31,0 @@\n-import com.sun.javafx.scene.traversal.TraversalEngine;\n@@ -36,1 +33,0 @@\n-import com.sun.javafx.scene.traversal.TraverseListener;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/traversal\/TraversalTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,2 +29,0 @@\n-import com.sun.javafx.scene.traversal.Direction;\n-import com.sun.javafx.scene.traversal.SceneTraversalEngine;\n@@ -33,1 +31,0 @@\n-import com.sun.javafx.scene.traversal.TraversalEngine;\n@@ -36,3 +33,0 @@\n-import com.sun.javafx.scene.traversal.TraverseListener;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertSame;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/scene\/traversal\/TraverseInvisibleTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.scene.Scene;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/ContentBoundsTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-        List<Object[]> params = new ArrayList<Object[]>();\n+        List<Object[]> params = new ArrayList<>();\n@@ -84,1 +84,1 @@\n-        List<Polluter> rectanglePolluters = new ArrayList<Polluter>(polluters);\n+        List<Polluter> rectanglePolluters = new ArrayList<>(polluters);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/DirtyRegionClipTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-        List<Object[]> params = new ArrayList<Object[]>();\n+        List<Object[]> params = new ArrayList<>();\n@@ -225,1 +225,1 @@\n-        List<Polluter> rectanglePolluters = new ArrayList<Polluter>(polluters);\n+        List<Polluter> rectanglePolluters = new ArrayList<>(polluters);\n@@ -241,1 +241,1 @@\n-        List<Polluter> circlePolluters = new ArrayList<Polluter>(polluters);\n+        List<Polluter> circlePolluters = new ArrayList<>(polluters);\n@@ -385,1 +385,1 @@\n-        Set<NGNode> set = new HashSet<NGNode>(Arrays.asList(nodes));\n+        Set<NGNode> set = new HashSet<>(Arrays.asList(nodes));\n@@ -405,1 +405,1 @@\n-        Set<NGNode> set = new HashSet<NGNode>(Arrays.asList(nodes));\n+        Set<NGNode> set = new HashSet<>(Arrays.asList(nodes));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/DirtyRegionTestBase.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import javafx.scene.Scene;\n@@ -40,1 +39,0 @@\n-import com.sun.javafx.sg.prism.NGNode;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/EffectDirtyRegionTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.com.sun.javafx.sg.prism.TestGraphics;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/GridDirtyRegionTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import com.sun.javafx.sg.prism.NGNode;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGNodeTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import com.sun.javafx.sg.prism.NGNodeShim;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGTestBase.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,2 +27,0 @@\n-import com.sun.javafx.collections.FloatArraySyncer;\n-import com.sun.javafx.collections.IntegerArraySyncer;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/NGTriangleMeshTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.com.sun.javafx.sg.prism.TestGraphics;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/OcclusionCullingTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,0 +75,1 @@\n+    @Override\n@@ -78,0 +79,1 @@\n+    @Override\n@@ -81,0 +83,1 @@\n+    @Override\n@@ -84,0 +87,1 @@\n+    @Override\n@@ -87,0 +91,1 @@\n+    @Override\n@@ -90,0 +95,1 @@\n+    @Override\n@@ -93,0 +99,1 @@\n+    @Override\n@@ -96,0 +103,1 @@\n+    @Override\n@@ -99,0 +107,1 @@\n+    @Override\n@@ -102,0 +111,1 @@\n+    @Override\n@@ -105,0 +115,1 @@\n+    @Override\n@@ -130,0 +141,1 @@\n+    @Override\n@@ -142,0 +154,1 @@\n+    @Override\n@@ -145,0 +158,1 @@\n+    @Override\n@@ -275,0 +289,1 @@\n+        @Override\n@@ -279,0 +294,1 @@\n+        @Override\n@@ -283,0 +299,1 @@\n+        @Override\n@@ -287,0 +304,1 @@\n+        @Override\n@@ -290,0 +308,1 @@\n+        @Override\n@@ -294,0 +313,1 @@\n+        @Override\n@@ -298,0 +318,1 @@\n+        @Override\n@@ -302,0 +323,1 @@\n+        @Override\n@@ -306,0 +328,1 @@\n+        @Override\n@@ -310,0 +333,1 @@\n+        @Override\n@@ -314,0 +338,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/sg\/prism\/TestGraphics.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Iterator;\n@@ -131,1 +130,1 @@\n-                new StyleConverter<String, Object>();\n+                new StyleConverter<>();\n@@ -134,1 +133,1 @@\n-                new CssMetaData<Node,Object>(\"U-N-D-E-F-I-N-E-D\", TEST_TYPE, \"\") {\n+                new CssMetaData<>(\"U-N-D-E-F-I-N-E-D\", TEST_TYPE, \"\") {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/test\/CssMethodsTestBase.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import java.util.List;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/test\/OnInvalidateMethodsTestBase.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-            new SimpleObjectProperty<Scene>() {\n+            new SimpleObjectProperty<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/test\/objects\/TestGroup.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-            new SimpleObjectProperty<Group>() {\n+            new SimpleObjectProperty<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/test\/objects\/TestNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-            new ObjectPropertyBase<Window>() {\n+            new ObjectPropertyBase<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/test\/objects\/TestScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,0 @@\n-    @SuppressWarnings(\"deprecation\")\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/text\/TextLayoutTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/scenario\/animation\/AbstractPrimaryTimerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    private final Set<PulseReceiver> targets = new HashSet<PulseReceiver>();\n+    private final Set<PulseReceiver> targets = new HashSet<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/AbstractPrimaryTimerMock.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    public enum Command {PLAY, JUMP, NONE};\n+    public enum Command {PLAY, JUMP, NONE}\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/AnimationMock.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import javafx.animation.Animation;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/AnimationPulseReceiverTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.beans.property.Property;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/InterpolatorTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-    };\n+    }\n@@ -136,1 +136,1 @@\n-    };\n+    }\n@@ -141,1 +141,1 @@\n-    };\n+    }\n@@ -146,1 +146,1 @@\n-    };\n+    }\n@@ -218,1 +218,1 @@\n-    };\n+    }\n@@ -223,1 +223,1 @@\n-    };\n+    }\n@@ -228,1 +228,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/KeyFrameTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import javafx.animation.AnimationShim;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/SequentialTransitionPlayTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-        ObservableList<KeyFrame> keyFrames = ((Timeline) a).getKeyFrames();\n+        ObservableList<KeyFrame> keyFrames = a.getKeyFrames();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/animation\/TimelinePlayTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-    @Test public void delayIsHonored_Positive() throws InterruptedException {\n+    @Test public void delayIsHonored_Positive() {\n@@ -368,1 +368,1 @@\n-    @Test public void delayIsHonored_Unknown() throws InterruptedException {\n+    @Test public void delayIsHonored_Unknown() {\n@@ -374,1 +374,1 @@\n-    @Test public void delayIsHonored_Infinite() throws InterruptedException {\n+    @Test public void delayIsHonored_Infinite() {\n@@ -380,1 +380,1 @@\n-    @Test public void delayIsHonored_ZERO() throws InterruptedException {\n+    @Test public void delayIsHonored_ZERO() {\n@@ -643,1 +643,1 @@\n-        taskFactory = new Callback<Void, AbstractTask>() {\n+        taskFactory = new Callback<>() {\n@@ -661,1 +661,1 @@\n-        taskFactory = new Callback<Void, AbstractTask>() {\n+        taskFactory = new Callback<>() {\n@@ -687,1 +687,1 @@\n-        taskFactory = new Callback<Void, AbstractTask>() {\n+        taskFactory = new Callback<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ScheduledServiceTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceExceptionTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n@@ -32,1 +30,0 @@\n-import javafx.event.Event;\n@@ -46,1 +43,0 @@\n-import javafx.event.EventType;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceLifecycleTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import javafx.concurrent.Service;\n@@ -39,1 +38,0 @@\n-import javafx.concurrent.Task;\n@@ -42,1 +40,0 @@\n-import javafx.concurrent.Worker;\n@@ -60,1 +57,1 @@\n-        service = new ServiceShim<String>() {\n+        service = new ServiceShim<>() {\n@@ -101,1 +98,1 @@\n-        ObjectProperty<Executor> other = new SimpleObjectProperty<Executor>(e);\n+        ObjectProperty<Executor> other = new SimpleObjectProperty<>(e);\n@@ -185,1 +182,1 @@\n-            Service<Void> s = new ServiceShim<Void>() {\n+            Service<Void> s = new ServiceShim<>() {\n@@ -190,1 +187,1 @@\n-                    return new TaskShim<Void>() {\n+                    return new TaskShim<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceTest.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-            new ConcurrentLinkedQueue<Runnable>();\n+            new ConcurrentLinkedQueue<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/ServiceTestBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,0 +130,1 @@\n+                @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/TaskCancelTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import javafx.event.EventType;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/TaskEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n@@ -120,1 +118,1 @@\n-        final List<Worker.State> states = new ArrayList<Worker.State>();\n+        final List<Worker.State> states = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/TaskSimpleTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-        return new ServiceShim<String>() {\n+        return new ServiceShim<>() {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/TestServiceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import javafx.concurrent.TaskShim;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/mocks\/EpicFailTask.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    @SuppressWarnings(\"InfiniteLoopStatement\")\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/mocks\/InfiniteTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.concurrent.CountDownLatch;\n@@ -30,1 +29,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/concurrent\/mocks\/RunAwayTask.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        final List<TokenShim> tokens = new ArrayList<TokenShim>();\n+        final List<TokenShim> tokens = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssLexerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n-import com.sun.javafx.sg.prism.NGNode;\n@@ -57,2 +56,0 @@\n-import com.sun.javafx.geom.BaseBounds;\n-import com.sun.javafx.geom.transform.BaseTransform;\n@@ -184,1 +181,1 @@\n-                new FontCssMetaData<TestNode>(\"-fx-font\", Font.getDefault()) {\n+                new FontCssMetaData<>(\"-fx-font\", Font.getDefault()) {\n@@ -221,1 +218,1 @@\n-                new FontCssMetaData<TestNode>(\"-fx-font\", Font.getDefault()) {\n+                new FontCssMetaData<>(\"-fx-font\", Font.getDefault()) {\n@@ -294,1 +291,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -302,1 +299,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -305,1 +302,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -308,1 +305,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -317,1 +314,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -325,1 +322,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -328,1 +325,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -335,1 +332,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -340,1 +337,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -343,1 +340,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -346,1 +343,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -352,1 +349,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -399,1 +396,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -407,1 +404,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -410,1 +407,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -413,1 +410,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -422,1 +419,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -430,1 +427,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -433,1 +430,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -440,1 +437,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -445,1 +442,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -448,1 +445,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -451,1 +448,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -470,1 +467,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -523,1 +520,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -531,1 +528,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -534,1 +531,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -537,1 +534,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -546,1 +543,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -554,1 +551,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -557,1 +554,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -564,1 +561,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -569,1 +566,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -572,1 +569,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -575,1 +572,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -594,1 +591,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -647,1 +644,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -655,1 +652,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -658,1 +655,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -661,1 +658,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -670,1 +667,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -678,1 +675,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -681,1 +678,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -688,1 +685,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -693,1 +690,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -696,1 +693,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -699,1 +696,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -720,1 +717,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -775,1 +772,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -783,1 +780,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -786,1 +783,1 @@\n-        ParsedValueImpl<Color,Color> fxFillShouldNotMatchValue = new ParsedValueImpl<Color,Color>(Color.RED, null);\n+        ParsedValueImpl<Color,Color> fxFillShouldNotMatchValue = new ParsedValueImpl<>(Color.RED, null);\n@@ -789,1 +786,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -792,1 +789,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -801,1 +798,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -809,1 +806,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -812,1 +809,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -819,1 +816,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -824,1 +821,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -827,1 +824,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -830,1 +827,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -836,1 +833,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -880,1 +877,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -883,1 +880,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -894,1 +891,1 @@\n-        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<String,String>(fxBase.getProperty(), null, true);\n+        ParsedValueImpl<String,String> fxColorValue = new ParsedValueImpl<>(fxBase.getProperty(), null, true);\n@@ -897,1 +894,1 @@\n-        ParsedValueImpl<Color,Color> fxFillShouldNotMatchValue = new ParsedValueImpl<Color,Color>(Color.RED, null);\n+        ParsedValueImpl<Color,Color> fxFillShouldNotMatchValue = new ParsedValueImpl<>(Color.RED, null);\n@@ -900,1 +897,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -903,1 +900,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -917,1 +914,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -920,1 +917,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -927,1 +924,1 @@\n-        List<String> pseudoclasses = new ArrayList<String>();\n+        List<String> pseudoclasses = new ArrayList<>();\n@@ -932,1 +929,1 @@\n-        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<Color,Color>(Color.YELLOW, null);\n+        ParsedValueImpl<Color,Color> fxFillHoverValue = new ParsedValueImpl<>(Color.YELLOW, null);\n@@ -935,1 +932,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -938,1 +935,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -944,1 +941,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -989,1 +986,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -997,1 +994,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -1000,1 +997,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -1009,1 +1006,1 @@\n-        List<String> textStyleClass = new ArrayList<String>();\n+        List<String> textStyleClass = new ArrayList<>();\n@@ -1017,1 +1014,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -1020,1 +1017,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -1026,1 +1023,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -1070,1 +1067,1 @@\n-        List<String> rootStyleClass = new ArrayList<String>();\n+        List<String> rootStyleClass = new ArrayList<>();\n@@ -1078,1 +1075,1 @@\n-        List<Selector> selectors = new ArrayList<Selector>();\n+        List<Selector> selectors = new ArrayList<>();\n@@ -1081,1 +1078,1 @@\n-        List<Declaration> declarations = new ArrayList<Declaration>();\n+        List<Declaration> declarations = new ArrayList<>();\n@@ -1090,1 +1087,1 @@\n-        List<String> rectStyleClass = new ArrayList<String>();\n+        List<String> rectStyleClass = new ArrayList<>();\n@@ -1101,1 +1098,1 @@\n-        selectors = new ArrayList<Selector>();\n+        selectors = new ArrayList<>();\n@@ -1104,1 +1101,1 @@\n-        declarations = new ArrayList<Declaration>();\n+        declarations = new ArrayList<>();\n@@ -1110,1 +1107,1 @@\n-        List<Style> expecteds = new ArrayList<Style>();\n+        List<Style> expecteds = new ArrayList<>();\n@@ -1322,1 +1319,1 @@\n-                new CssMetaData<Pane, TestEnum>(\"-test-enum\", StyleConverter.getEnumConverter(TestEnum.class), TestEnum.LEFT, false) {\n+                new CssMetaData<>(\"-test-enum\", StyleConverter.getEnumConverter(TestEnum.class), TestEnum.LEFT, false) {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssMetaDataTest.java","additions":91,"deletions":94,"binary":false,"changes":185,"status":"modified"},{"patch":"@@ -31,4 +31,0 @@\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.DataInputStream;\n-import java.io.DataOutputStream;\n@@ -40,1 +36,0 @@\n-import java.util.Arrays;\n@@ -48,1 +43,0 @@\n-import javafx.css.ParsedValue;\n@@ -308,1 +302,1 @@\n-        assertEquals(1d, (Number)obj);\n+        assertEquals(1d, obj);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParserTest.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.ArrayList;\n@@ -35,1 +34,0 @@\n-import java.util.List;\n@@ -38,1 +36,0 @@\n-import javafx.css.Rule;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/DeclarationTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-        ParsedValue<String,String> family = new ParsedValueImpl<String,String>(font.getFamily(), null);\n+        ParsedValue<String,String> family = new ParsedValueImpl<>(font.getFamily(), null);\n@@ -68,1 +68,1 @@\n-                new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+                new ParsedValueImpl<>(\n@@ -74,1 +74,1 @@\n-                new ParsedValueImpl<String,FontPosture>(FontPosture.REGULAR.name(), FontConverter.FontStyleConverter.getInstance());\n+                new ParsedValueImpl<>(FontPosture.REGULAR.name(), FontConverter.FontStyleConverter.getInstance());\n@@ -77,2 +77,2 @@\n-                new ParsedValueImpl<String,FontWeight>(FontWeight.NORMAL.name(), FontConverter.FontWeightConverter.getInstance());\n-        ParsedValue<ParsedValue[],Font> value = new ParsedValueImpl<ParsedValue[],Font>(\n+                new ParsedValueImpl<>(FontWeight.NORMAL.name(), FontConverter.FontWeightConverter.getInstance());\n+        ParsedValue<ParsedValue[],Font> value = new ParsedValueImpl<>(\n@@ -88,1 +88,1 @@\n-                new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+                new ParsedValueImpl<>(\n@@ -93,1 +93,1 @@\n-        value = new ParsedValueImpl<ParsedValue[],Font>(\n+        value = new ParsedValueImpl<>(\n@@ -103,1 +103,1 @@\n-                new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+                new ParsedValueImpl<>(\n@@ -108,1 +108,1 @@\n-        value = new ParsedValueImpl<ParsedValue[],Font>(\n+        value = new ParsedValueImpl<>(\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/FontTypeTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n@@ -43,3 +41,0 @@\n-import javafx.stage.Window;\n-\n-import com.sun.javafx.util.Logging;\n@@ -50,2 +45,0 @@\n-import com.sun.javafx.logging.PlatformLogger;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/HonorDeveloperSettingsTest.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.css.TypeTest;\n@@ -30,3 +29,0 @@\n-import static org.junit.Assert.fail;\n-\n-import java.io.IOException;\n@@ -39,1 +35,0 @@\n-import javafx.css.CssParser;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/InsetsTypeTest.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.css.CascadingStyle;\n@@ -56,1 +55,0 @@\n-import javafx.scene.Node;\n@@ -60,1 +58,0 @@\n-import javafx.scene.text.Font;\n@@ -128,1 +125,1 @@\n-        final List<Declaration> declsNoState = new ArrayList<Declaration>();\n+        final List<Declaration> declsNoState = new ArrayList<>();\n@@ -132,1 +129,1 @@\n-            DeclarationShim.getDeclaration(\"-fx-stroke-width\", new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            DeclarationShim.getDeclaration(\"-fx-stroke-width\", new ParsedValueImpl<>(\n@@ -138,1 +135,1 @@\n-        final List<Selector> selsNoState = new ArrayList<Selector>();\n+        final List<Selector> selsNoState = new ArrayList<>();\n@@ -149,1 +146,1 @@\n-        final List<Declaration> declsDisabledState = new ArrayList<Declaration>();\n+        final List<Declaration> declsDisabledState = new ArrayList<>();\n@@ -155,1 +152,1 @@\n-        final List<Selector> selsDisabledState = new ArrayList<Selector>();\n+        final List<Selector> selsDisabledState = new ArrayList<>();\n@@ -195,1 +192,1 @@\n-        final List<Declaration> declsNoState = new ArrayList<Declaration>();\n+        final List<Declaration> declsNoState = new ArrayList<>();\n@@ -200,1 +197,1 @@\n-        final List<Selector> selsNoState = new ArrayList<Selector>();\n+        final List<Selector> selsNoState = new ArrayList<>();\n@@ -234,1 +231,1 @@\n-        final List<Declaration> rootDecls = new ArrayList<Declaration>();\n+        final List<Declaration> rootDecls = new ArrayList<>();\n@@ -236,1 +233,1 @@\n-            DeclarationShim.getDeclaration(\"-fx-font-size\", new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            DeclarationShim.getDeclaration(\"-fx-font-size\", new ParsedValueImpl<>(\n@@ -241,1 +238,1 @@\n-        final List<Selector> rootSels = new ArrayList<Selector>();\n+        final List<Selector> rootSels = new ArrayList<>();\n@@ -258,1 +255,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -265,1 +262,1 @@\n-        final List<Declaration> textDecls = new ArrayList<Declaration>();\n+        final List<Declaration> textDecls = new ArrayList<>();\n@@ -267,1 +264,1 @@\n-            DeclarationShim.getDeclaration(\"-fx-font\", new ParsedValueImpl<ParsedValue[], Font>(\n+            DeclarationShim.getDeclaration(\"-fx-font\", new ParsedValueImpl<>(\n@@ -271,1 +268,1 @@\n-        final List<Selector> textSels = new ArrayList<Selector>();\n+        final List<Selector> textSels = new ArrayList<>();\n@@ -301,1 +298,1 @@\n-        final List<Declaration> txtDecls = new ArrayList<Declaration>();\n+        final List<Declaration> txtDecls = new ArrayList<>();\n@@ -306,1 +303,1 @@\n-        final List<Selector> textSels = new ArrayList<Selector>();\n+        final List<Selector> textSels = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/Node_cssStyleMap_Test.java","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.css.TypeTest;\n@@ -66,1 +65,1 @@\n-        return new ParsedValueImpl<Size,Size>(new Size(value*100, SizeUnits.PERCENT), null);\n+        return new ParsedValueImpl<>(new Size(value*100, SizeUnits.PERCENT), null);\n@@ -71,1 +70,1 @@\n-        ParsedValue<Color,Color> color = new ParsedValueImpl<Color,Color>(stop.getColor(), null);\n+        ParsedValue<Color,Color> color = new ParsedValueImpl<>(stop.getColor(), null);\n@@ -73,2 +72,2 @@\n-        return new ParsedValueImpl<ParsedValue[],Stop>(values, StopConverter.getInstance());\n-    };\n+        return new ParsedValueImpl<>(values, StopConverter.getInstance());\n+    }\n@@ -86,1 +85,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Paint>(values, PaintConverter.LinearGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.LinearGradientConverter.getInstance());\n@@ -100,1 +99,1 @@\n-        return new ParsedValueImpl<ParsedValue[],Paint>(values, PaintConverter.RadialGradientConverter.getInstance());\n+        return new ParsedValueImpl<>(values, PaintConverter.RadialGradientConverter.getInstance());\n@@ -119,1 +118,1 @@\n-        return new ParsedValueImpl<ParsedValue<?,Paint>[],Paint[]>(layers, PaintConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, PaintConverter.SequenceConverter.getInstance());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/PaintTypeTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import javafx.css.StylesheetShim;\n@@ -63,2 +62,2 @@\n-                new ParsedValueImpl<Size,Size>(new Size(100.0, SizeUnits.PERCENT), null);\n-        Size expResult = new Size(100.0, SizeUnits.PERCENT);;\n+                new ParsedValueImpl<>(new Size(100.0, SizeUnits.PERCENT), null);\n+        Size expResult = new Size(100.0, SizeUnits.PERCENT);\n@@ -78,1 +77,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -93,1 +92,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -98,1 +97,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -106,1 +105,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -111,1 +110,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -118,1 +117,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -125,1 +124,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(null, null);\n+            new ParsedValueImpl<>(null, null);\n@@ -130,1 +129,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -141,1 +140,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -151,1 +150,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -161,1 +160,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -172,1 +171,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -181,1 +180,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -189,1 +188,1 @@\n-                new ParsedValueImpl<ParsedValue[][],Number[][]>(\n+                new ParsedValueImpl<>(\n@@ -208,1 +207,1 @@\n-                new ParsedValueImpl<ParsedValue[][],Number[][]>(\n+                new ParsedValueImpl<>(\n@@ -224,1 +223,1 @@\n-                new ParsedValueImpl<ParsedValue[][],Number[][]>(\n+                new ParsedValueImpl<>(\n@@ -241,1 +240,1 @@\n-                new ParsedValueImpl<ParsedValue[][],Number[][]>(\n+                new ParsedValueImpl<>(\n@@ -257,1 +256,1 @@\n-                new ParsedValueImpl<ParsedValue[][],Number[][]>(\n+                new ParsedValueImpl<>(\n@@ -424,1 +423,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -431,1 +430,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n@@ -515,1 +514,1 @@\n-            new ParsedValueImpl<ParsedValue<?,Size>,Number>(\n+            new ParsedValueImpl<>(\n@@ -522,1 +521,1 @@\n-                new ParsedValueImpl<ParsedValue[],Number[]>(\n+                new ParsedValueImpl<>(\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/ParsedValueTest.java","additions":24,"deletions":25,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -44,1 +44,0 @@\n-import javafx.css.StylesheetShim;\n@@ -68,1 +67,1 @@\n-        List<Selector> expResult = new ArrayList<Selector>();\n+        List<Selector> expResult = new ArrayList<>();\n@@ -78,1 +77,1 @@\n-        List<Declaration> expResult = new ArrayList<Declaration>();\n+        List<Declaration> expResult = new ArrayList<>();\n@@ -89,1 +88,1 @@\n-        List<Selector> expResult = new ArrayList<Selector>();\n+        List<Selector> expResult = new ArrayList<>();\n@@ -99,1 +98,1 @@\n-        List<Declaration> expResult = new ArrayList<Declaration>();\n+        List<Declaration> expResult = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/RuleTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.ArrayList;\n@@ -31,1 +30,0 @@\n-import java.util.List;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StyleTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import org.junit.Before;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StyleablePropertyFactoryTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -331,0 +331,1 @@\n+        @Override\n@@ -338,0 +339,1 @@\n+        @Override\n@@ -345,0 +347,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StyleablePropertyFactory_createMethod_Test.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.nio.file.Files;\n@@ -549,1 +548,1 @@\n-                            (new EnumConverter<FontSmoothingType>(FontSmoothingType.class)).convert(pv, null);\n+                            (new EnumConverter<>(FontSmoothingType.class)).convert(pv, null);\n@@ -551,1 +550,1 @@\n-                            (new EnumConverter<TextAlignment>(TextAlignment.class)).convert(pv, null);\n+                            (new EnumConverter<>(TextAlignment.class)).convert(pv, null);\n@@ -553,1 +552,1 @@\n-                            (new EnumConverter<Pos>(Pos.class)).convert(pv, null);\n+                            (new EnumConverter<>(Pos.class)).convert(pv, null);\n@@ -555,1 +554,1 @@\n-                            (new EnumConverter<VPos>(VPos.class)).convert(pv, null);\n+                            (new EnumConverter<>(VPos.class)).convert(pv, null);\n@@ -567,1 +566,1 @@\n-                            (new EnumConverter<Orientation>(Orientation.class)).convert(pv, null);\n+                            (new EnumConverter<>(Orientation.class)).convert(pv, null);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/StylesheetTest.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -30,4 +30,0 @@\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.assertFalse;\n-import org.junit.After;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/print\/JobSettingsTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import javafx.application.Platform;\n-\n@@ -40,1 +38,0 @@\n-import javax.print.attribute.standard.Media;\n@@ -86,2 +83,2 @@\n-        int mlm = (int)(Math.round(mpa[0].getX(INCH)*72));\n-        int mtm = (int)(Math.round(mpa[0].getX(INCH)*72));\n+        int mlm = Math.round(mpa[0].getX(INCH) * 72);\n+        int mtm = Math.round(mpa[0].getY(INCH) * 72);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/print\/MarginsTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n@@ -32,3 +29,0 @@\n-import static org.junit.Assert.assertFalse;\n-import org.junit.After;\n-import org.junit.Before;\n@@ -37,2 +31,0 @@\n-import javafx.beans.property.ObjectProperty;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/print\/PaperUnitsTest.java","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,4 +30,0 @@\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.assertFalse;\n-import org.junit.After;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/print\/PrinterJobTest.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import test.com.sun.javafx.test.MouseEventGenerator;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/AcceleratorsTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -275,1 +275,1 @@\n-            new CssMetaData<CSSNode,Paint>(\"fill\", PaintConverter.getInstance()) {\n+            new CssMetaData<>(\"fill\", PaintConverter.getInstance()) {\n@@ -289,1 +289,1 @@\n-            new CssMetaData<CSSNode,Paint>(\"stroke\", PaintConverter.getInstance()) {\n+            new CssMetaData<>(\"stroke\", PaintConverter.getInstance()) {\n@@ -303,1 +303,1 @@\n-            new CssMetaData<CSSNode,Number>(\"padding\", SizeConverter.getInstance()) {\n+            new CssMetaData<>(\"padding\", SizeConverter.getInstance()) {\n@@ -319,1 +319,1 @@\n-                new ArrayList<CssMetaData<? extends Styleable, ?>>(Node.getClassCssMetaData());\n+                new ArrayList<>(Node.getClassCssMetaData());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/CSSNode.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -865,0 +865,1 @@\n+        @Override\n@@ -868,0 +869,1 @@\n+        @Override\n@@ -913,0 +915,1 @@\n+        @Override\n@@ -916,0 +919,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/CameraTest.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/EventAnyTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import javafx.beans.Observable;\n@@ -238,1 +237,1 @@\n-                new PropertyInvalidationCounter<Number>();\n+                new PropertyInvalidationCounter<>();\n@@ -240,1 +239,1 @@\n-                new PropertyInvalidationCounter<Number>();\n+                new PropertyInvalidationCounter<>();\n@@ -242,1 +241,1 @@\n-                new PropertyInvalidationCounter<Object>();\n+                new PropertyInvalidationCounter<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/ImageCursorTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    private StubToolkit toolkit = (StubToolkit) Toolkit.getToolkit();;\n+    private StubToolkit toolkit = (StubToolkit) Toolkit.getToolkit();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/LightBaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.event.EventHandler;\n@@ -70,3 +69,3 @@\n-    private EventHolder<MouseEvent> me = new EventHolder<MouseEvent>();\n-    private EventHolder<MouseEvent> pme = new EventHolder<MouseEvent>();\n-    private EventHolder<MouseEvent> sme = new EventHolder<MouseEvent>();\n+    private EventHolder<MouseEvent> me = new EventHolder<>();\n+    private EventHolder<MouseEvent> pme = new EventHolder<>();\n+    private EventHolder<MouseEvent> sme = new EventHolder<>();\n@@ -2283,3 +2282,3 @@\n-        EventHolder<MouseDragEvent> smde = new EventHolder<MouseDragEvent>();\n-        EventHolder<MouseDragEvent> tmde = new EventHolder<MouseDragEvent>();\n-        EventHolder<MouseDragEvent> tmde2 = new EventHolder<MouseDragEvent>();\n+        EventHolder<MouseDragEvent> smde = new EventHolder<>();\n+        EventHolder<MouseDragEvent> tmde = new EventHolder<>();\n+        EventHolder<MouseDragEvent> tmde2 = new EventHolder<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Mouse3DTest.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,1 +52,0 @@\n-import javafx.scene.input.MouseDragEvent;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/MouseTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-import javafx.scene.GroupShim;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/NodeTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-import javafx.beans.Observable;\n-import javafx.beans.InvalidationListener;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_LocalToParentTransform_Test.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-import javafx.beans.Observable;\n-import java.lang.reflect.Method;\n@@ -34,1 +32,0 @@\n-import javafx.beans.property.ReadOnlyObjectProperty;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_LocalToSceneTransform_Test.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-         ObjectProperty<Node> v = new SimpleObjectProperty<Node>(clip1);\n+         ObjectProperty<Node> v = new SimpleObjectProperty<>(clip1);\n@@ -70,1 +70,1 @@\n-         ObjectProperty<Node> v = new SimpleObjectProperty<Node>(clip1);\n+         ObjectProperty<Node> v = new SimpleObjectProperty<>(clip1);\n@@ -93,1 +93,1 @@\n-         ObjectProperty<Node> v = new SimpleObjectProperty<Node>(clip1);\n+         ObjectProperty<Node> v = new SimpleObjectProperty<>(clip1);\n@@ -107,1 +107,1 @@\n-         ObjectProperty<Effect> v = new SimpleObjectProperty<Effect>(effect1);\n+         ObjectProperty<Effect> v = new SimpleObjectProperty<>(effect1);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_bind_Test.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.sun.javafx.tk.Toolkit;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_effectiveOrientation_Css_Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.event.Event;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Node_properties_Test.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import javafx.scene.effect.BlendMode;\n-\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Parent_cssMethods_Test.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.concurrent.Task;\n@@ -39,1 +38,0 @@\n-import javafx.stage.PopupWindow;\n@@ -49,2 +47,0 @@\n-import javafx.beans.InvalidationListener;\n-import javafx.beans.Observable;\n@@ -58,2 +54,0 @@\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.ExecutionException;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/SceneTest.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.cursor.CursorFrame;\n@@ -32,1 +31,0 @@\n-import javafx.event.Event;\n@@ -36,1 +34,0 @@\n-import javafx.scene.Cursor;\n@@ -39,1 +36,0 @@\n-import javafx.scene.Group;\n@@ -41,2 +37,0 @@\n-import javafx.scene.ParallelCamera;\n-import javafx.scene.PerspectiveCamera;\n@@ -51,1 +45,0 @@\n-import test.com.sun.javafx.test.PropertiesTestBase.Configuration;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Scene_properties_Test.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import javafx.scene.input.MouseButton;\n@@ -342,1 +341,1 @@\n-    private static final Event TEST_EVENT = new Event(new EventType<Event>(\"Test Event\"));\n+    private static final Event TEST_EVENT = new Event(new EventType<>(\"Test Event\"));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/Scenegraph_eventHandlers_Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -394,1 +394,1 @@\n-                LinkedList<String> whatHappenedStack = new java.util.LinkedList<String>();\n+                LinkedList<String> whatHappenedStack = new java.util.LinkedList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/bounds\/GroupBoundsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,0 @@\n-import test.javafx.scene.effect.EffectsTestBase;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/BlendTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import test.javafx.scene.effect.EffectsTestBase;\n@@ -53,1 +52,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Bloom)\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Bloom)\n@@ -63,1 +62,1 @@\n-        assertEquals(0.3f, (float) ((com.sun.scenario.effect.Bloom)\n+        assertEquals(0.3f, ((com.sun.scenario.effect.Bloom)\n@@ -75,1 +74,1 @@\n-        assertEquals(0.0f, (float) ((com.sun.scenario.effect.Bloom)\n+        assertEquals(0.0f, ((com.sun.scenario.effect.Bloom)\n@@ -87,1 +86,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Bloom)\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Bloom)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/BloomTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import test.javafx.scene.effect.EffectsTestBase;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/BoxBlurTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.effect.LightTestBase;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/DistantLightTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n@@ -109,1 +109,1 @@\n-        assertEquals(0.5f, (float)((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n+        assertEquals(0.5f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n@@ -115,1 +115,1 @@\n-        assertEquals(0.1f, (float) ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n+        assertEquals(0.1f, ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n@@ -123,1 +123,1 @@\n-        assertEquals(0.1f, (float) ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom3)).getThreshold(), 1e-100);\n+        assertEquals(0.1f, ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom3)).getThreshold(), 1e-100);\n@@ -156,1 +156,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n@@ -161,1 +161,1 @@\n-        assertEquals(0.5f, (float)((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n+        assertEquals(0.5f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(glow)).getLevel(), 1e-100);\n@@ -171,1 +171,1 @@\n-        assertEquals(0.1f, (float) ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n+        assertEquals(0.1f, ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n@@ -183,1 +183,1 @@\n-        assertEquals(0.1f, (float) ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom3)).getThreshold(), 1e-100);\n+        assertEquals(0.1f, ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom3)).getThreshold(), 1e-100);\n@@ -190,1 +190,1 @@\n-        assertEquals(0.1f, (float) ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n+        assertEquals(0.1f, ((com.sun.scenario.effect.Bloom) EffectHelper.getPeer(bloom2)).getThreshold(), 1e-100);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/EffectTest.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.effect.EffectsTestBase;\n@@ -60,2 +59,1 @@\n-        assertEquals(2, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n+        assertEquals(2, FloatMapShim.getImpl(floatMap).getWidth());\n@@ -70,2 +68,1 @@\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getWidth());\n@@ -82,2 +79,1 @@\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getWidth());\n@@ -94,2 +90,1 @@\n-        assertEquals(4096, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n+        assertEquals(4096, FloatMapShim.getImpl(floatMap).getWidth());\n@@ -104,2 +99,1 @@\n-        assertEquals(5, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(5, FloatMapShim.getImpl(floatMap).getHeight());\n@@ -114,2 +108,1 @@\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getHeight());\n@@ -126,2 +119,1 @@\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getHeight());\n@@ -138,2 +130,1 @@\n-        assertEquals(4096, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(4096, FloatMapShim.getImpl(floatMap).getHeight());\n@@ -257,4 +248,2 @@\n-        assertEquals(2, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n-        assertEquals(3, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(2, FloatMapShim.getImpl(floatMap).getWidth());\n+        assertEquals(3, FloatMapShim.getImpl(floatMap).getHeight());\n@@ -272,4 +261,2 @@\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getWidth());\n-        assertEquals(1, ((com.sun.scenario.effect.FloatMap)\n-                FloatMapShim.getImpl(floatMap)).getHeight());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getWidth());\n+        assertEquals(1, FloatMapShim.getImpl(floatMap).getHeight());\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/FloatMapTest.java","additions":12,"deletions":25,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n@@ -61,1 +61,1 @@\n-        assertEquals(0.3f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n+        assertEquals(0.3f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n@@ -72,1 +72,1 @@\n-        assertEquals(0.0f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n+        assertEquals(0.0f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n@@ -83,1 +83,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n+        assertEquals(1.0f, ((com.sun.scenario.effect.Glow) EffectHelper.getPeer(effect)).getLevel(), 1e-100);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/GlowTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.effect.EffectsTestBase;\n@@ -65,1 +64,1 @@\n-        assertEquals(1.1f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1.1f, ((com.sun.scenario.effect.PhongLighting)\n@@ -75,1 +74,1 @@\n-        assertEquals(1f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1f, ((com.sun.scenario.effect.PhongLighting)\n@@ -87,1 +86,1 @@\n-        assertEquals(0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -99,1 +98,1 @@\n-        assertEquals(2f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(2f, ((com.sun.scenario.effect.PhongLighting)\n@@ -109,1 +108,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1.0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -119,1 +118,1 @@\n-        assertEquals(0.3f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(0.3f, ((com.sun.scenario.effect.PhongLighting)\n@@ -131,1 +130,1 @@\n-        assertEquals(0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -143,1 +142,1 @@\n-        assertEquals(2f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(2f, ((com.sun.scenario.effect.PhongLighting)\n@@ -153,1 +152,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1.0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -163,1 +162,1 @@\n-        assertEquals(20f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(20f, ((com.sun.scenario.effect.PhongLighting)\n@@ -175,1 +174,1 @@\n-        assertEquals(0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -187,1 +186,1 @@\n-        assertEquals(40f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(40f, ((com.sun.scenario.effect.PhongLighting)\n@@ -197,1 +196,1 @@\n-        assertEquals(1.0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1.0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -207,1 +206,1 @@\n-        assertEquals(1.5f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(1.5f, ((com.sun.scenario.effect.PhongLighting)\n@@ -219,1 +218,1 @@\n-        assertEquals(0f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(0f, ((com.sun.scenario.effect.PhongLighting)\n@@ -231,1 +230,1 @@\n-        assertEquals(10f, (float) ((com.sun.scenario.effect.PhongLighting)\n+        assertEquals(10f, ((com.sun.scenario.effect.PhongLighting)\n@@ -352,1 +351,1 @@\n-        assertEquals(100f, (float) ((com.sun.scenario.effect.light.PointLight)\n+        assertEquals(100f, ((com.sun.scenario.effect.light.PointLight)\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/LightingTest.java","additions":17,"deletions":18,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.effect.LightTestBase;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/PointLightTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.effect.LightTestBase;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/effect\/SpotLightTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -261,1 +261,1 @@\n-                new LinkedList<StubAsyncImageLoader>();\n+                new LinkedList<>();\n@@ -397,1 +397,1 @@\n-                new PropertyInvalidationCounter<Number>();\n+                new PropertyInvalidationCounter<>();\n@@ -399,1 +399,1 @@\n-                new PropertyInvalidationCounter<Number>();\n+                new PropertyInvalidationCounter<>();\n@@ -401,1 +401,1 @@\n-                new PropertyInvalidationCounter<Object>();\n+                new PropertyInvalidationCounter<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/image\/ImageTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -137,0 +137,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/image\/ImageViewTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/ContextMenuEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -65,2 +65,0 @@\n-import javafx.scene.input.ClipboardContent;\n-import javafx.scene.input.DataFormat;\n@@ -69,2 +67,0 @@\n-import javafx.scene.input.DragEvent;\n-import javafx.scene.input.Dragboard;\n@@ -74,2 +70,0 @@\n-import javafx.scene.input.MouseEvent;\n-import javafx.scene.input.PickResult;\n@@ -78,1 +72,0 @@\n-import javafx.scene.input.TransferMode;\n@@ -1547,1 +1540,1 @@\n-            new EventHandler<MouseEvent>() {\n+            new EventHandler<>() {\n@@ -1642,1 +1635,1 @@\n-            Set<DataFormat> types = new HashSet<DataFormat>();\n+            Set<DataFormat> types = new HashSet<>();\n@@ -1665,1 +1658,1 @@\n-            content = new ArrayList<Pair<DataFormat, Object>>();\n+            content = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/DragAndDropTest.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.scene.input.GestureEvent;\n@@ -34,1 +33,0 @@\n-import javafx.scene.input.PickResult;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/GestureEventTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-                new HashMap<String, KeyCode>();\n+                new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/KeyCombinationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/RotateEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/ScrollEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/SwipeEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.Random;\n@@ -38,1 +37,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/TouchEventTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/input\/ZoomEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/AnchorPaneTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,3 +36,0 @@\n-import javafx.scene.layout.Border;\n-import javafx.scene.layout.BorderStroke;\n-import javafx.scene.layout.BorderStrokeStyle;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/BackgroundTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/BorderPaneTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        List<Double> dashArray = new ArrayList<Double>();\n+        List<Double> dashArray = new ArrayList<>();\n@@ -74,1 +74,1 @@\n-        List<Double> dashArray = new ArrayList<Double>();\n+        List<Double> dashArray = new ArrayList<>();\n@@ -115,1 +115,1 @@\n-        List<Double> dashArray1 = new ArrayList<Double>();\n+        List<Double> dashArray1 = new ArrayList<>();\n@@ -119,1 +119,1 @@\n-        List<Double> dashArray2 = new ArrayList<Double>();\n+        List<Double> dashArray2 = new ArrayList<>();\n@@ -160,1 +160,1 @@\n-        List<Double> dashArray1 = new ArrayList<Double>();\n+        List<Double> dashArray1 = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/BorderStrokeStyleTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -561,1 +561,1 @@\n-        assertEquals((int)2, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getRowIndex(child1));\n@@ -573,1 +573,1 @@\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n@@ -585,1 +585,1 @@\n-        assertEquals((int)2, (int)GridPane.getRowSpan(child1));\n+        assertEquals(2, (int)GridPane.getRowSpan(child1));\n@@ -597,1 +597,1 @@\n-        assertEquals((int)2, (int)GridPane.getColumnSpan(child1));\n+        assertEquals(2, (int)GridPane.getColumnSpan(child1));\n@@ -708,2 +708,2 @@\n-        assertEquals((int)6, (int)GridPane.getRowIndex(child1));\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(6, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n@@ -716,4 +716,4 @@\n-        assertEquals((int)6, (int)GridPane.getRowIndex(child1));\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n-        assertEquals((int)8, (int)GridPane.getRowSpan(child1));\n-        assertEquals((int)3, (int)GridPane.getColumnSpan(child1));\n+        assertEquals(6, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(8, (int)GridPane.getRowSpan(child1));\n+        assertEquals(3, (int)GridPane.getColumnSpan(child1));\n@@ -726,4 +726,4 @@\n-        assertEquals((int)6, (int)GridPane.getRowIndex(child1));\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n-        assertEquals((int)8, (int)GridPane.getRowSpan(child1));\n-        assertEquals((int)3, (int)GridPane.getColumnSpan(child1));\n+        assertEquals(6, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(8, (int)GridPane.getRowSpan(child1));\n+        assertEquals(3, (int)GridPane.getColumnSpan(child1));\n@@ -738,4 +738,4 @@\n-        assertEquals((int)6, (int)GridPane.getRowIndex(child1));\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n-        assertEquals((int)8, (int)GridPane.getRowSpan(child1));\n-        assertEquals((int)3, (int)GridPane.getColumnSpan(child1));\n+        assertEquals(6, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(8, (int)GridPane.getRowSpan(child1));\n+        assertEquals(3, (int)GridPane.getColumnSpan(child1));\n@@ -754,4 +754,4 @@\n-        assertEquals((int)6, (int)GridPane.getRowIndex(child1));\n-        assertEquals((int)2, (int)GridPane.getColumnIndex(child1));\n-        assertEquals((int)8, (int)GridPane.getRowSpan(child1));\n-        assertEquals((int)3, (int)GridPane.getColumnSpan(child1));\n+        assertEquals(6, (int)GridPane.getRowIndex(child1));\n+        assertEquals(2, (int)GridPane.getColumnIndex(child1));\n+        assertEquals(8, (int)GridPane.getRowSpan(child1));\n+        assertEquals(3, (int)GridPane.getColumnSpan(child1));\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/GridPaneTest.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n-import test.javafx.scene.layout.MockRegion;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/HBoxTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import javafx.collections.ObservableList;\n-import javafx.scene.Node;\n-import javafx.scene.Parent;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/MockParent.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.EnumSet;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/RegionPickTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n-import test.javafx.scene.layout.MockRegion;\n@@ -1224,1 +1222,1 @@\n-    };\n+    }\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/RegionTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.layout.MockNode;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/ResizabilityTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/StackPaneTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/TilePaneTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import test.javafx.scene.layout.MockBiased;\n-import test.javafx.scene.layout.MockRegion;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/layout\/VBoxTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-        ArrayList<Color> colors = new ArrayList<Color>();\n+        ArrayList<Color> colors = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/paint\/ColorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import javafx.scene.paint.ImagePattern;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/paint\/ImagePatternTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-        PathIterator it = (PathIterator)geometry.getPathIterator(null);\n+        PathIterator it = geometry.getPathIterator(null);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/ArcToTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import javafx.beans.property.BooleanProperty;\n@@ -70,1 +69,1 @@\n-        List<PathElement> listOfElements = new ArrayList<PathElement>();\n+        List<PathElement> listOfElements = new ArrayList<>();\n@@ -82,1 +81,1 @@\n-        ObjectProperty<FillRule> v = new SimpleObjectProperty<FillRule>(FillRule.EVEN_ODD);\n+        ObjectProperty<FillRule> v = new SimpleObjectProperty<>(FillRule.EVEN_ODD);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/PathTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.javafx.scene.DirtyBits;\n@@ -31,2 +30,0 @@\n-import com.sun.javafx.sg.prism.NGNode;\n-import com.sun.javafx.sg.prism.NGShape;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/ShapeTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import org.junit.Test;\n@@ -42,3 +41,0 @@\n-import javafx.collections.ListChangeListener;\n-import javafx.collections.ListChangeListener.Change;\n-import javafx.collections.ObservableList;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/Shape_properties_Test.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    @Override\n@@ -55,0 +56,1 @@\n+    @Override\n@@ -87,0 +89,1 @@\n+    @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/shape\/StubNGShape.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import static org.junit.Assert.assertFalse;\n@@ -31,2 +30,0 @@\n-import static org.junit.Assert.assertNotNull;\n-\n@@ -35,1 +32,0 @@\n-import javafx.scene.layout.HBox;\n@@ -39,1 +35,0 @@\n-\n@@ -41,0 +36,1 @@\n+\n@@ -48,1 +44,4 @@\n-        Toolkit tk = (StubToolkit) Toolkit.getToolkit();\n+        Toolkit tk = Toolkit.getToolkit();\n+\n+        assertTrue(tk instanceof StubToolkit);  \/\/ Ensure it's StubToolkit\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/text\/TextFlowTest.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import javafx.geometry.VPos;\n-import test.javafx.scene.NodeTest;\n@@ -40,1 +38,0 @@\n-\n@@ -42,0 +39,1 @@\n+\n@@ -242,1 +240,4 @@\n-        Toolkit tk = (StubToolkit)Toolkit.getToolkit();\n+        Toolkit tk = Toolkit.getToolkit();\n+\n+        assertTrue(tk instanceof StubToolkit);  \/\/ Ensure it's StubToolkit\n+\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/text\/TextTest.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.beans.Observable;\n@@ -39,2 +38,0 @@\n-import javafx.beans.InvalidationListener;\n-import javafx.event.EventHandler;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/AffineOperationsTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import test.javafx.scene.transform.TransformTest;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/ScaleTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import javafx.event.EventDispatchChain;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/TransformChangedEventTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import javafx.beans.Observable;\n@@ -33,1 +32,0 @@\n-import javafx.beans.value.ObservableValue;\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/scene\/transform\/TransformOperationsTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -798,0 +798,1 @@\n+        @Override\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/stage\/PopupTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        final List<Object> configurations = new ArrayList<Object>();\n+        final List<Object> configurations = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/stage\/Popup_parentWindow_Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}