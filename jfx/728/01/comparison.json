{"files":[{"patch":"@@ -172,2 +172,0 @@\n-    private ObjectProperty<SingleSelectionModel<Tab>> selectionModel = new SimpleObjectProperty<SingleSelectionModel<Tab>>(this, \"selectionModel\");\n-\n@@ -175,3 +173,2 @@\n-     * <p>Sets the model used for tab selection.  By changing the model you can alter\n-     * how the tabs are selected and which tabs are first or last.<\/p>\n-     * @param value the selection model\n+     * The selection model used for selecting tabs. Changing the model alters\n+     * how the tabs are selected and which tabs are first or last.\n@@ -179,0 +176,2 @@\n+    private ObjectProperty<SingleSelectionModel<Tab>> selectionModel = new SimpleObjectProperty<SingleSelectionModel<Tab>>(this, \"selectionModel\");\n+\n@@ -181,4 +180,0 @@\n-    \/**\n-     * <p>Gets the model used for tab selection.<\/p>\n-     * @return the model used for tab selection\n-     *\/\n@@ -187,4 +182,0 @@\n-    \/**\n-     * The selection model used for selecting tabs.\n-     * @return selection model property\n-     *\/\n@@ -193,2 +184,0 @@\n-    private ObjectProperty<Side> side;\n-\n@@ -196,5 +185,3 @@\n-     * <p>The position to place the tabs in this TabPane. Whenever this changes\n-     * the TabPane will immediately update the location of the tabs to reflect\n-     * this.<\/p>\n-     *\n-     * @param value the side\n+     * The position to place the tabs in this {@code TabPane}. Changes to the value of this property\n+     * immediately updates the location of the tabs.\n+     * @defaultValue {@code Side.Top}\n@@ -202,0 +189,2 @@\n+    private ObjectProperty<Side> side;\n+\n@@ -206,6 +195,0 @@\n-    \/**\n-     * The current position of the tabs in the TabPane.  The default position\n-     * for the tabs is Side.Top.\n-     *\n-     * @return The current position of the tabs in the TabPane.\n-     *\/\n@@ -216,4 +199,0 @@\n-    \/**\n-     * The position of the tabs in the TabPane.\n-     * @return the side property\n-     *\/\n@@ -248,2 +227,0 @@\n-    private ObjectProperty<TabClosingPolicy> tabClosingPolicy;\n-\n@@ -251,12 +228,2 @@\n-     * <p>Specifies how the TabPane handles tab closing from an end-users\n-     * perspective. The options are:<\/p>\n-     *\n-     * <ul>\n-     *   <li> TabClosingPolicy.UNAVAILABLE: Tabs can not be closed by the user\n-     *   <li> TabClosingPolicy.SELECTED_TAB: Only the currently selected tab will\n-     *          have the option to be closed, with a graphic next to the tab\n-     *          text being shown. The graphic will disappear when a tab is no\n-     *          longer selected.\n-     *   <li> TabClosingPolicy.ALL_TABS: All tabs will have the option to be\n-     *          closed.\n-     * <\/ul>\n+     * <p>Specifies how the {@code TabPane} handles tab closing from an end-user's\n+     * perspective.\n@@ -266,2 +233,1 @@\n-     * The default closing policy is TabClosingPolicy.SELECTED_TAB\n-     * @param value the closing policy\n+     * @defaultValue {@code TabClosingPolicy.SELECTED_TAB}\n@@ -269,0 +235,2 @@\n+    private ObjectProperty<TabClosingPolicy> tabClosingPolicy;\n+\n@@ -273,5 +241,0 @@\n-    \/**\n-     * The closing policy for the tabs.\n-     *\n-     * @return The closing policy for the tabs.\n-     *\/\n@@ -282,4 +245,0 @@\n-    \/**\n-     * The closing policy for the tabs.\n-     * @return the closing policy property\n-     *\/\n@@ -293,2 +252,0 @@\n-    private BooleanProperty rotateGraphic;\n-\n@@ -296,2 +253,2 @@\n-     * <p>Specifies whether the graphic inside a Tab is rotated or not, such\n-     * that it is always upright, or rotated in the same way as the Tab text is.<\/p>\n+     * <p>Specifies whether the graphic inside a {@code Tab} is rotated or not, such\n+     * that it is always upright, or rotated in the same way as the {@code Tab} text is.<\/p>\n@@ -299,4 +256,2 @@\n-     * <p>By default rotateGraphic is set to false, to represent the fact that\n-     * the graphic isn't rotated, resulting in it always appearing upright. If\n-     * rotateGraphic is set to {@code true}, the graphic will rotate such that it\n-     * rotates with the tab text.<\/p>\n+     * <p>If the value is {@code false}, the graphic isn't rotated, resulting in it always appearing upright.\n+     * If the value is {@code true}, the graphic is rotated with the {@code Tab} text.<\/p>\n@@ -304,1 +259,1 @@\n-     * @param value a flag indicating whether to rotate the graphic\n+     * @defaultValue {@code false}\n@@ -306,0 +261,2 @@\n+    private BooleanProperty rotateGraphic;\n+\n@@ -310,6 +267,0 @@\n-    \/**\n-     * Returns {@code true} if the graphic inside a Tab is rotated. The\n-     * default is {@code false}\n-     *\n-     * @return the rotatedGraphic state.\n-     *\/\n@@ -320,4 +271,0 @@\n-    \/**\n-     * The rotateGraphic state of the tabs in the TabPane.\n-     * @return the rotateGraphic property\n-     *\/\n@@ -331,2 +278,0 @@\n-    private DoubleProperty tabMinWidth;\n-\n@@ -334,6 +279,5 @@\n-     * <p>The minimum width of the tabs in the TabPane.  This can be used to limit\n-     * the length of text in tabs to prevent truncation.  Setting the min equal\n-     * to the max will fix the width of the tab.  By default the min equals to the max.\n-     *\n-     * This value can also be set via CSS using {@code -fx-tab-min-width}\n-     *\n+     * <p>The minimum width of a {@code Tab} in the {@code TabPane}.\n+     * This can be used to limit the length of text in tabs to prevent truncation.\n+     * Setting the same minimum and maximum widths will fix the width of the {@code Tab}.\n+     * <p>\n+     * This value can also be set via CSS using {@code -fx-tab-min-width}.\n@@ -341,1 +285,2 @@\n-     * @param value the minimum width of the tabs\n+     *\n+     * @defaultValue 0\n@@ -343,0 +288,2 @@\n+    private DoubleProperty tabMinWidth;\n+\n@@ -347,5 +294,0 @@\n-    \/**\n-     * The minimum width of the tabs in the TabPane.\n-     *\n-     * @return The minimum width of the tabs\n-     *\/\n@@ -356,4 +298,0 @@\n-    \/**\n-     * The minimum width of the tabs in the TabPane.\n-     * @return the minimum width property\n-     *\/\n@@ -384,4 +322,7 @@\n-     * <p>Specifies the maximum width of a tab.  This can be used to limit\n-     * the length of text in tabs.  If the tab text is longer than the maximum\n-     * width the text will be truncated.  Setting the max equal\n-     * to the min will fix the width of the tab.  By default the min equals to the max\n+     * <p>The maximum width of a {@code Tab} in the {@code TabPane}.\n+     * This can be used to limit the length of text in tabs to prevent truncation.\n+     * If the {@code Tab} text is longer than the maximum width, the text will be truncated.\n+     * Setting the same minimum and maximum widths will fix the width of the {@code Tab}.\n+     * <p>\n+     * This value can also be set via CSS using {@code -fx-tab-max-width}.\n+     * <\/p>\n@@ -389,1 +330,1 @@\n-     * This value can also be set via CSS using {@code -fx-tab-max-width}.<\/p>\n+     * @defaultValue {@code Double.MAX_VALUE}\n@@ -392,0 +333,1 @@\n+\n@@ -396,5 +338,0 @@\n-    \/**\n-     * The maximum width of the tabs in the TabPane.\n-     *\n-     * @return The maximum width of the tabs\n-     *\/\n@@ -405,4 +342,0 @@\n-    \/**\n-     * The maximum width of the tabs in the TabPane.\n-     * @return the maximum width property\n-     *\/\n@@ -432,2 +365,0 @@\n-    private DoubleProperty tabMinHeight;\n-\n@@ -435,5 +366,5 @@\n-     * <p>The minimum height of the tabs in the TabPane.  This can be used to limit\n-     * the height in tabs. Setting the min equal to the max will fix the height\n-     * of the tab.  By default the min equals to the max.\n-     *\n-     * This value can also be set via CSS using {@code -fx-tab-min-height}\n+     * <p>The minimum height of a {@code Tab} in the {@code TabPane}.\n+     * This can be used to limit the height of tabs.\n+     * Setting the same minimum and maximum heights will fix the height of the {@code Tab}.\n+     * <p>\n+     * This value can also be set via CSS using {@code -fx-tab-min-height}.\n@@ -441,1 +372,2 @@\n-     * @param value the minimum height of the tabs\n+     *\n+     * @defaultValue 0\n@@ -443,0 +375,2 @@\n+    private DoubleProperty tabMinHeight;\n+\n@@ -447,5 +381,0 @@\n-    \/**\n-     * The minimum height of the tabs in the TabPane.\n-     *\n-     * @return the minimum height of the tabs\n-     *\/\n@@ -456,4 +385,0 @@\n-    \/**\n-     * The minimum height of the tab.\n-     * @return the minimum height property\n-     *\/\n@@ -484,5 +409,5 @@\n-     * <p>The maximum height if the tabs in the TabPane.  This can be used to limit\n-     * the height in tabs. Setting the max equal to the min will fix the height\n-     * of the tab.  By default the min equals to the max.\n-     *\n-     * This value can also be set via CSS using -fx-tab-max-height\n+     * <p>The maximum height of a {@code Tab} in the {@code TabPane}.\n+     * This can be used to limit the height of tabs.\n+     * Setting the same minimum and maximum heights will fix the height of the {@code Tab}.\n+     * <p>\n+     * This value can also be set via CSS using {@code -fx-tab-max-height}.\n@@ -490,0 +415,2 @@\n+     *\n+     * @defaultValue {@code Double.MAX_VALUE}\n@@ -492,0 +419,1 @@\n+\n@@ -496,5 +424,0 @@\n-    \/**\n-     * The maximum height of the tabs in the TabPane.\n-     *\n-     * @return The maximum height of the tabs\n-     *\/\n@@ -505,4 +428,0 @@\n-    \/**\n-     * <p>The maximum height of the tabs in the TabPane.<\/p>\n-     * @return the maximum height of the tabs\n-     *\/\n@@ -819,1 +738,1 @@\n-     * <p>This specifies how the TabPane handles tab closing from an end-users\n+     * <p>This specifies how the {@code TabPane} handles tab closing from an end-user's\n@@ -823,2 +742,2 @@\n-     *   <li> TabClosingPolicy.UNAVAILABLE: Tabs can not be closed by the user\n-     *   <li> TabClosingPolicy.SELECTED_TAB: Only the currently selected tab will\n+     *   <li> {@code TabClosingPolicy.UNAVAILABLE}: Tabs can not be closed by the user\n+     *   <li> {@code TabClosingPolicy.SELECTED_TAB}: Only the currently selected tab will\n@@ -828,1 +747,1 @@\n-     *   <li> TabClosingPolicy.ALL_TABS: All tabs will have the option to be\n+     *   <li> {@code TabClosingPolicy.ALL_TABS}: All tabs will have the option to be\n@@ -854,3 +773,0 @@\n-    \/\/ TabDragPolicy \/\/\n-    private ObjectProperty<TabDragPolicy> tabDragPolicy;\n-\n@@ -858,1 +774,1 @@\n-     * The drag policy for the tabs. The policy can be changed dynamically.\n+     * The drag policy for the tabs. It specifies if tabs can be reordered or not.\n@@ -860,2 +776,1 @@\n-     * @defaultValue TabDragPolicy.FIXED\n-     * @return The tab drag policy property\n+     * @defaultValue {@code TabDragPolicy.FIXED}\n@@ -864,0 +779,2 @@\n+    private ObjectProperty<TabDragPolicy> tabDragPolicy;\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/TabPane.java","additions":64,"deletions":147,"binary":false,"changes":211,"status":"modified"}]}