{"files":[{"patch":"@@ -143,1 +143,1 @@\n-    runs-on: \"macos-10.15\"\n+    runs-on: \"macos-11\"\n@@ -202,1 +202,1 @@\n-          sudo xcode-select --switch \/Applications\/Xcode_11.3.1.app\/Contents\/Developer\n+          sudo xcode-select --switch \/Applications\/Xcode_12.4.app\/Contents\/Developer\n","filename":".github\/workflows\/submit.yml","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-version=openjfx19\n+version=openjfx20\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -368,0 +368,3 @@\n+\/\/ JAVA_TARGET_VERSION specifies the minimum compile and runtime Java version that we will target when building the JavaFX classes\n+ext.JAVA_TARGET_VERSION = Integer.parseInt(jfxJdkTargetVersion)\n+\n@@ -630,2 +633,6 @@\n-            def status = compareJdkVersion(jdkVersion, \"12\")\n-            ext.jdk12OrLater = (status >= 0)\n+            \/\/ For example, we could define a \"jdk18OrLater\" property as\n+            \/\/ follows that could then be used to implement conditional build\n+            \/\/ logic based on whether we were running on JDK 18 or later,\n+            \/\/ should the need arise.\n+\/\/            def status = compareJdkVersion(jdkVersion, \"18\")\n+\/\/            ext.jdk18OrLater = (status >= 0)\n@@ -1343,0 +1350,1 @@\n+logger.quiet(\"Java target version: ${JAVA_TARGET_VERSION}\")\n@@ -1957,1 +1965,5 @@\n-    sourceCompatibility = 11\n+\n+    \/\/ Set sourceCompatibility to the target release of Java. Most modules\n+    \/\/ set compiler.options.release (to the same target version), which will\n+    \/\/ override this setting, but it is needed for those modules that can't.\n+    sourceCompatibility = JAVA_TARGET_VERSION\n@@ -2629,0 +2641,6 @@\n+    \/\/ We need to skip setting compiler.options.release for this module,\n+    \/\/ since javafx.swing requires jdk.unsupported.desktop, which is\n+    \/\/ excluded by \"--release NN\". This will fall back to using\n+    \/\/ \"-source NN -target NN\" for this module.\n+    project.ext.skipJavaCompilerOptionRelease = true\n+\n@@ -3489,3 +3507,1 @@\n-        if (jdk12OrLater) {\n-            systemProperty 'java.security.manager', 'allow'\n-        }\n+        systemProperty 'java.security.manager', 'allow'\n@@ -3700,0 +3716,6 @@\n+    \/\/ We need to skip setting compiler.options.release for system tests,\n+    \/\/ since the tests export an internal package from java.desktop, which\n+    \/\/ is disallowed by \"--release NN\". This will fall back to using\n+    \/\/ \"-source NN -target NN\" for the system tests.\n+    project.ext.skipJavaCompilerOptionRelease = true\n+\n@@ -3869,3 +3891,1 @@\n-        if (jdk12OrLater) {\n-            systemProperty 'java.security.manager', 'allow'\n-        }\n+        systemProperty 'java.security.manager', 'allow'\n@@ -3906,0 +3926,9 @@\n+\n+        if (project.hasProperty('skipJavaCompilerOptionRelease') &&\n+                project.ext.skipJavaCompilerOptionRelease) {\n+\n+            logger.info \"Using 'javac -source\/-target' for ${compile}\"\n+        } else {\n+            compile.options.release = JAVA_TARGET_VERSION\n+        }\n+\n","filename":"build.gradle","additions":38,"deletions":9,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-jfx.release.major.version=19\n+jfx.release.major.version=20\n@@ -59,2 +59,2 @@\n-javadoc.title=JavaFX 19\n-javadoc.header=JavaFX&nbsp;19\n+javadoc.title=JavaFX 20\n+javadoc.header=JavaFX&nbsp;20\n@@ -73,0 +73,4 @@\n+# jfx.jdk.target.version is set to the minimum runtime version that\n+# JavaFX will run on. This is passed to javac as the value of \"--release\",\n+# so it also defines the language features that can be used.\n+#\n@@ -78,2 +82,3 @@\n-jfx.build.jdk.version.min=11\n-jfx.build.jdk.buildnum.min=28\n+jfx.build.jdk.version.min=17\n+jfx.build.jdk.buildnum.min=35\n+jfx.jdk.target.version=17\n@@ -88,1 +93,1 @@\n-jfx.gradle.version.min=6.3\n+jfx.gradle.version.min=7.3\n","filename":"build.properties","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-        assertTrue(version.startsWith(\"19\"));\n+        assertTrue(version.startsWith(\"20\"));\n","filename":"modules\/javafx.base\/src\/test\/java\/test\/com\/sun\/javafx\/runtime\/VersionInfoTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import com.sun.javafx.tk.Toolkit;\n@@ -162,0 +163,13 @@\n+\n+            \/\/ Inform the native webkit code when either the JVM or the\n+            \/\/ JavaFX runtime is being shutdown\n+            final Runnable shutdownHook = () -> {\n+                synchronized(WebPage.class) {\n+                    MainThread.twkSetShutdown(true);\n+                }\n+            };\n+\n+            \/\/ Register shutdown hook with the Java runtime and the Toolkit\n+            Toolkit.getToolkit().addShutdownHook(shutdownHook);\n+            Runtime.getRuntime().addShutdownHook(new Thread(shutdownHook));\n+\n","filename":"modules\/javafx.web\/src\/main\/java\/com\/sun\/webkit\/WebPage.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## WebKit Open Source Project: WebKit v613.1\n+## WebKit Open Source Project: WebKit v614.1\n@@ -32,2 +32,2 @@\n-overarching license is LGPL 2.1, however parts are covered by MPL 2 and\n-other parts by BSD-style licenses.\n+overarching license is LGPL 2.1, however parts are covered by MPL 2,\n+Apache 2.0, and BSD-style licenses.\n@@ -562,0 +562,24 @@\n+#### Apache 2.0 License\n+```\n+\n+---------------------------------\n+The below license applies to the following files:\n+Source\/WTF\/wtf\/Int128.cpp\n+Source\/WTF\/wtf\/Int128.h\n+\n+Copyright 2017 The Abseil Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+     https:\/\/www.apache.org\/licenses\/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+\n+```\n+\n@@ -625,0 +649,1 @@\n+Source\/WebCore\/Modules\/model-element\/scenekit\n@@ -648,1 +673,0 @@\n-Source\/WebCore\/bridge\/c\n@@ -654,0 +678,2 @@\n+Source\/WebCore\/css\/typedom\/numeric\n+Source\/WebCore\/css\/typedom\/transform\n@@ -679,0 +705,1 @@\n+Source\/WebCore\/platform\/graphics\/coretext\n@@ -682,0 +709,1 @@\n+Source\/WebCore\/platform\/graphics\/filters\/software\n@@ -699,1 +727,0 @@\n-Source\/WebCore\/platform\/posix\n@@ -705,1 +732,0 @@\n-Source\/WebCore\/plugins\n@@ -714,0 +740,1 @@\n+Source\/WebCore\/svg\/graphics\/filters\n@@ -721,0 +748,3 @@\n+Source\/WebGPU\/CommandLinePlayground\n+Source\/WebGPU\/WGSL\n+Source\/WebGPU\/WebGPU\n@@ -734,1 +764,1 @@\n-Copyright (C) 1016-2108 Apple Inc. All rights reserved.\n+Copyright (C) 1016-2022 Apple Inc. All rights reserved.\n@@ -757,1 +787,1 @@\n-Copyright (C) 2005-2021 Apple, Inc. All rights reserved.\n+Copyright (C) 2005-2022 Apple, Inc. All rights reserved.\n@@ -764,0 +794,1 @@\n+Copyright (C) 2022 Leaning Technologies Inc. All rights reserved.\n@@ -777,0 +808,2 @@\n+Copyright (C) 2021 Red Hat Inc.\n+Copyright (c) 2018-2022 Apple Inc. All rights reserved.\n@@ -788,0 +821,2 @@\n+Copyright (C) 2006 Alexey Proskuryakov <ap@nypop.com>\n+Copyright (C) 2010-2013 Nokia Corporation and\/or its subsidiary(-ies).\n@@ -797,1 +832,0 @@\n-Copyright (C) 2006-2007 Alexey Proskuryakov (ap@nypop.com)\n@@ -807,2 +841,0 @@\n-Copyright (C) 2010-2011 Adam Barth. All rights reserved.\n-Copyright (C) 2011 Daniel Bates (dbates@intudata.com).\n@@ -813,1 +845,0 @@\n-Copyright (C) 2010-2013 Nokia Corporation and\/or its subsidiary(-ies).\n@@ -839,1 +870,1 @@\n-Copyright (C) 2010 Company 100, Inc. All rights reserved.\n+Copyright (C) 2010 Adam Barth. All rights reserved.\n@@ -842,1 +873,0 @@\n-Copyright (C) 2006 Alexey Proskuryakov <ap@nypop.com>\n@@ -850,0 +880,1 @@\n+Copyright (C) 2007 Alexey Proskuryakov (ap@nypop.com)\n@@ -851,1 +882,0 @@\n-Copyright (c) 2018-2021 Apple Inc. All rights reserved.\n@@ -925,0 +955,1 @@\n+Source\/WebCore\/Modules\/applepay-ams-ui\n@@ -932,0 +963,1 @@\n+Source\/WebCore\/Modules\/cookie-consent\n@@ -937,0 +969,1 @@\n+Source\/WebCore\/Modules\/filesystemaccess\n@@ -949,0 +982,2 @@\n+Source\/WebCore\/Modules\/model-element\n+Source\/WebCore\/Modules\/model-element\/dummy\n@@ -953,0 +988,1 @@\n+Source\/WebCore\/Modules\/push-api\n@@ -955,0 +991,1 @@\n+Source\/WebCore\/Modules\/storage\n@@ -956,0 +993,1 @@\n+Source\/WebCore\/Modules\/web-locks\n@@ -959,0 +997,1 @@\n+Source\/WebCore\/Modules\/webcodecs\n@@ -960,2 +999,1 @@\n-Source\/WebCore\/Modules\/webgpu\/WHLSL\/AST\n-Source\/WebCore\/Modules\/webgpu\/WHLSL\n+Source\/WebCore\/Modules\/webgpu\n@@ -970,0 +1008,2 @@\n+Source\/WebCore\/PAL\/pal\/graphics\/WebGPU\/Impl\n+Source\/WebCore\/PAL\/pal\/graphics\/WebGPU\n@@ -971,0 +1011,1 @@\n+Source\/WebCore\/PAL\/pal\/text\n@@ -1016,0 +1057,2 @@\n+Source\/WebCore\/layout\/formattingContexts\/inline\/display\n+Source\/WebCore\/layout\/formattingContexts\/inline\/invalidation\n@@ -1019,1 +1062,0 @@\n-Source\/WebCore\/layout\/invalidation\n@@ -1042,0 +1084,1 @@\n+Source\/WebCore\/platform\/graphics\/gbm\n@@ -1047,0 +1090,1 @@\n+Source\/WebCore\/platform\/graphics\/wc\n@@ -1063,0 +1107,1 @@\n+Source\/WebCore\/rendering\/svg\n@@ -1072,0 +1117,2 @@\n+Source\/WebCore\/workers\/shared\n+Source\/WebCore\/workers\/shared\/context\n@@ -1073,0 +1120,1 @@\n+Source\/WebGPU\/WGSL\n@@ -1080,2 +1128,2 @@\n-Copyright (C) 2003-2021 Apple Inc. All rights reserved.\n-Copyright (C) 2017-2021 Sony Interactive Entertainment Inc.\n+Copyright (C) 2003-2022 Apple Inc. All rights reserved.\n+Copyright (C) 2017-2022 Sony Interactive Entertainment Inc.\n@@ -1088,0 +1136,1 @@\n+Copyright (C) 2014-2022 Igalia S.L.\n@@ -1089,1 +1138,0 @@\n-Copyright (C) 2014-2021 Igalia S.L.\n@@ -1095,0 +1143,1 @@\n+Copyright (C) 2021-2022 Apple, Inc. All rights reserved.\n@@ -1098,0 +1147,1 @@\n+Copyright (C) 2016-2022 Apple Inc.\n@@ -1101,1 +1151,0 @@\n-Copyright (C) 2016-2021 Apple Inc.\n@@ -1109,2 +1158,1 @@\n-Copyright (C) 2021 Apple, Inc. All rights reserved.\n-Copyright (C) 2017-2018 Metrological Group B.V.\n+Copyright (C) 2017-2022 Metrological Group B.V.\n@@ -1129,0 +1177,1 @@\n+Copyright (c) 2022 Igalia S.L.\n@@ -1164,0 +1213,1 @@\n+Source\/WebCore\/platform\/graphics\/lcms\n@@ -1166,0 +1216,1 @@\n+Source\/WebCore\/platform\/image-decoders\/jpegxl\n@@ -1172,1 +1223,1 @@\n-Copyright (C) 2003-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2003-2022 Apple Inc. All rights reserved.\n@@ -1177,1 +1228,1 @@\n-Copyright (C) 2018 Sony Interactive Entertainment Inc.\n+Copyright (C) 2018-2021 Sony Interactive Entertainment Inc.\n@@ -1239,1 +1290,1 @@\n-Copyright (C) 2006-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2006-2022 Apple Inc. All rights reserved.\n@@ -1249,1 +1300,1 @@\n-Copyright (C) 2016, Apple Inc. All rights reserved.\n+Copyright (C) 2016-2021, Apple Inc. All rights reserved.\n@@ -1547,1 +1598,1 @@\n-Copyright (C) 2003-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2003-2022 Apple Inc. All rights reserved.\n@@ -1555,2 +1606,2 @@\n-Copyright (C) 2015-2020 Igalia S.L\n-Copyright (C) 2020 Metrological Group B.V.\n+Copyright (C) 2015-2022 Igalia S.L\n+Copyright (C) 2020-2022 Metrological Group B.V.\n@@ -1672,0 +1723,1 @@\n+Source\/WebGPU\/WebGPU\n@@ -1673,1 +1725,1 @@\n-Copyright (C) 2011 Apple Inc. All rights reserved.\n+Copyright (C) 2011-2021 Apple Inc. All rights reserved.\n@@ -1702,0 +1754,31 @@\n+---------------------------------\n+The below license applies to some files in the following directories:\n+Source\/JavaScriptCore\/runtime\n+\n+Copyright (C) 2021 Igalia S.L.\n+Copyright (C) 2022 Apple Inc. All rights reserved.\n+\n+Author: Caitlin Potter <caitp@igalia.com>\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions\n+are met:\n+1. Redistributions of source code must retain the above copyright\n+   notice, this list of conditions and the following disclaimer.\n+2. Redistributions in binary form must reproduce the above copyright\n+   notice, this list of conditions and the following disclaimer in the\n+   documentation and\/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''\n+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS\n+BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n+THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\n@@ -1711,1 +1794,1 @@\n-Copyright (C) 2009-2019 Apple Inc. All rights reserved.\n+Copyright (C) 2009-2021 Apple Inc. All rights reserved.\n@@ -1714,1 +1797,2 @@\n-Copyright (C) 2012 Google, Inc.\n+Copyright (C) 2012 Google, Inc.\n+Copyright (C) 2020-2022 Igalia S.L.\n@@ -1805,0 +1889,1 @@\n+Source\/WebCore\/platform\/graphics\/filters\/software\n@@ -1819,1 +1904,1 @@\n-Copyright (C) 2018 Apple Inc.\n+Copyright (C) 2018-2022 Apple Inc. All rights reserved.\n@@ -1821,0 +1906,1 @@\n+Copyright (C) 2018-2022 Apple, Inc. All rights reserved.\n@@ -1853,1 +1939,1 @@\n-Copyright (C) 2017-2019 Apple Inc. All rights reserved.\n+Copyright (C) 2017-2022 Apple Inc. All rights reserved.\n@@ -2103,0 +2189,1 @@\n+Source\/WebCore\/page\/scrolling\n@@ -2115,1 +2202,1 @@\n-Copyright (C) 2012-2019 Apple Inc. All rights reserved.\n+Copyright (C) 2012-2022 Apple Inc. All rights reserved.\n@@ -2117,1 +2204,1 @@\n-Copyright (C) 2020 Sony Interactive Entertainment Inc.\n+Copyright (C) 2020-2022 Sony Interactive Entertainment Inc.\n@@ -2176,1 +2263,1 @@\n-Source\/WebCore\/Modules\/plugins\n+Source\/WebCore\/Modules\/pdfjs-extras\n@@ -2183,1 +2270,1 @@\n-Copyright (C) 2006-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2006-2022 Apple Inc. All rights reserved.\n@@ -2279,1 +2366,1 @@\n-Copyright (C) 2018 Apple Inc. All rights reserved.\n+Copyright (C) 2018-2022 Apple Inc. All rights reserved.\n@@ -2363,0 +2450,1 @@\n+Source\/WebCore\/Modules\/web-locks\n@@ -2366,0 +2454,1 @@\n+Copyright (C) 2016-2021, Apple Inc. All rights reserved.\n@@ -2368,2 +2457,1 @@\n-Copyright (C) 2016-2021, Apple Inc. All rights reserved.\n-Copyright (C) 2011-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2011-2022 Apple Inc. All rights reserved.\n@@ -2488,0 +2576,1 @@\n+Copyright (C) 2016-2022 Apple Inc. All rights reserved.\n@@ -2489,1 +2578,0 @@\n-Copyright (C) 2016-2021 Apple Inc. All rights reserved.\n@@ -2559,1 +2647,1 @@\n-Copyright (C) 2004-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2004-2022 Apple Inc. All rights reserved.\n@@ -2700,0 +2788,1 @@\n+Source\/WebCore\/css\/typedom\/transform\n@@ -2742,1 +2831,1 @@\n-Copyright (C) 2012-2020 Apple Inc. All rights reserved.\n+Copyright (C) 2012-2022 Apple Inc. All rights reserved.\n@@ -2806,1 +2895,1 @@\n-Copyright (C) 2007-2013 Apple Inc. All rights reserved.\n+Copyright (C) 2007-2021 Apple Inc. All rights reserved.\n@@ -3609,30 +3698,0 @@\n----------------------------------\n-The below license applies to some files in the following directories:\n-Source\/WebCore\/platform\/graphics\n-Source\/WebCore\/plugins\n-Source\/WebCore\/rendering\/style\n-\n-Copyright (C) 2011 Google Inc. All rights reserved.\n-Copyright (C) 2009-2010 Apple Inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions\n-are met:\n-1.  Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-2.  Redistributions in binary form must reproduce the above copyright\n-notice, this list of conditions and the following disclaimer in the\n-documentation and\/or other materials provided with the distribution.\n-\n-THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY\n-EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n-DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\n@@ -3935,0 +3994,28 @@\n+---------------------------------\n+The below license applies to some files in the following directories:\n+Source\/WebCore\/plugins\n+Source\/WebCore\/rendering\/style\n+\n+Copyright (C) 2009-2010 Apple Inc. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions\n+are met:\n+1.  Redistributions of source code must retain the above copyright\n+notice, this list of conditions and the following disclaimer.\n+2.  Redistributions in binary form must reproduce the above copyright\n+notice, this list of conditions and the following disclaimer in the\n+documentation and\/or other materials provided with the distribution.\n+\n+THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY\n+EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n+DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\n@@ -4300,1 +4387,1 @@\n-Copyright (C) 2003-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2003-2022 Apple Inc. All rights reserved.\n@@ -4316,1 +4403,1 @@\n-Copyright (C) 2005-2014 Apple, Inc. All rights reserved.\n+Copyright (C) 2005-2021 Apple, Inc. All rights reserved.\n@@ -4530,0 +4617,1 @@\n+Source\/WebCore\/PAL\/pal\/text\n@@ -4569,1 +4657,1 @@\n-Copyright (C) 2004-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2004-2022 Apple Inc. All rights reserved.\n@@ -4578,1 +4666,1 @@\n-Copyright (C) 2013-2019 Igalia S.L.\n+Copyright (C) 2013-2022 Igalia S.L.\n@@ -4594,0 +4682,1 @@\n+Copyright (c) 2021 Apple Inc.\n@@ -4659,41 +4748,0 @@\n----------------------------------\n-The below license applies to some files in the following directories:\n-Source\/WTF\/wtf\n-\n-Copyright (c) 2015, Just Software Solutions Ltd\n-\n-All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or\n-without modification, are permitted provided that the\n-following conditions are met:\n-\n-1. Redistributions of source code must retain the above\n-copyright notice, this list of conditions and the following\n-disclaimer.\n-\n-2. Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following\n-disclaimer in the documentation and\/or other materials\n-provided with the distribution.\n-\n-3. Neither the name of the copyright holder nor the names of\n-its contributors may be used to endorse or promote products\n-derived from this software without specific prior written\n-permission.\n-\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\n-CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n-INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n-CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n-NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n-HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n-OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n-EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\n@@ -4776,1 +4824,1 @@\n-Copyright (C) 2020 Apple Inc.\n+Copyright (C) 2020-2021 Apple Inc.\n@@ -4844,1 +4892,1 @@\n-Copyright (C) 2010-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2010-2022 Apple Inc. All rights reserved.\n@@ -4883,1 +4931,1 @@\n-Copyright (C) 2013-2020 Apple Inc. All rights reserved.\n+Copyright (C) 2013-2022 Apple Inc. All rights reserved.\n@@ -4925,1 +4973,1 @@\n-Copyright (C) 2016-2021 Apple Inc. All rights reserved.\n+Copyright (C) 2016-2022 Apple Inc. All rights reserved.\n@@ -5020,3 +5068,1 @@\n-Source\/WebCore\/bindings\/js\n-\n-Copyright (c) 2008-2011 Google Inc.\n+Source\/WebCore\/PAL\/pal\/text\n@@ -5024,1 +5070,2 @@\n-All rights reserved.\n+Copyright (C) 2011 Daniel Bates (dbates@intudata.com). All rights reserved.\n+Copyright (c) 2012 Google, inc. All rights reserved.\n@@ -5027,12 +5074,10 @@\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-    * Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-    * Redistributions in binary form must reproduce the above\n-copyright notice, this list of conditions and the following disclaimer\n-in the documentation and\/or other materials provided with the\n-distribution.\n-    * Neither the name of Google Inc. nor the names of its\n-contributors may be used to endorse or promote products derived from\n-this software without specific prior written permission.\n+modification, are permitted provided that the following conditions\n+are met:\n+1. Redistributions of source code must retain the above copyright\n+   notice, this list of conditions and the following disclaimer.\n+2. Redistributions in binary form must reproduce the above copyright\n+   notice, this list of conditions and the following disclaimer in the\n+   documentation and\/or other materials provided with the distribution.\n+3. Neither the name of Google Inc. nor the names of its\n+   contributors may be used to endorse or promote products derived from\n+   this software without specific prior written permission.\n@@ -5040,9 +5085,9 @@\n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n+EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n+PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n+CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n+EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n+PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n+PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n+OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n@@ -5502,32 +5547,0 @@\n----------------------------------\n-The below license applies to some files in the following directories:\n-Source\/WebCore\/platform\/text\n-\n-Copyright (C) 2011 Daniel Bates (dbates@intudata.com). All rights reserved.\n-Copyright (c) 2012 Google, inc. All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions\n-are met:\n-1. Redistributions of source code must retain the above copyright\n-   notice, this list of conditions and the following disclaimer.\n-2. Redistributions in binary form must reproduce the above copyright\n-   notice, this list of conditions and the following disclaimer in the\n-   documentation and\/or other materials provided with the distribution.\n-3. Neither the name of Google Inc. nor the names of its\n-   contributors may be used to endorse or promote products derived from\n-   this software without specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n-EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n-PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n-CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n-PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n-OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\n@@ -5566,35 +5579,0 @@\n----------------------------------\n-The below license applies to some files in the following directories:\n-Source\/WebCore\/plugins\n-\n-Copyright (c) 2004, Apple Inc. and The Mozilla Foundation.\n-\n-All rights reserved.\n-\n-Redistribution and use in source and binary forms, with or without\n-modification, are permitted provided that the following conditions are\n-met:\n-\n-1. Redistributions of source code must retain the above copyright\n-notice, this list of conditions and the following disclaimer.\n-2. Redistributions in binary form must reproduce the above copyright\n-notice, this list of conditions and the following disclaimer in the\n-documentation and\/or other materials provided with the distribution.\n-3. Neither the names of Apple Inc. (\"Apple\") or The Mozilla\n-Foundation (\"Mozilla\") nor the names of their contributors may be used\n-to endorse or promote products derived from this software without\n-specific prior written permission.\n-\n-THIS SOFTWARE IS PROVIDED BY APPLE, MOZILLA AND THEIR CONTRIBUTORS \"AS\n-IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n-TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n-PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE, MOZILLA OR\n-THEIR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n-TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-\n@@ -5634,0 +5612,81 @@\n+---------------------------------\n+The below license applies to some files in the following directories:\n+Source\/WebGPU\/WebGPU\n+\n+Copyright (c) 2019, \"WebGPU native\" developers\n+\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are met:\n+\n+1. Redistributions of source code must retain the above copyright notice, this\n+   list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright notice,\n+   this list of conditions and the following disclaimer in the documentation\n+   and\/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holder nor the names of its\n+   contributors may be used to endorse or promote products derived from\n+   this software without specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n+FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n+CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\n+---------------------------------\n+The below license applies to some files in the following directories:\n+Source\/bmalloc\/bmalloc\n+\n+Copyright (C) 2000-2017 Julian Seward. All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions\n+are met:\n+\n+1. Redistributions of source code must retain the above copyright\n+   notice, this list of conditions and the following disclaimer.\n+\n+2. The origin of this software must not be misrepresented; you must\n+   not claim that you wrote the original software.  If you use this\n+   software in a product, an acknowledgment in the product\n+   documentation would be appreciated but is not required.\n+\n+3. Altered source versions must be plainly marked as such, and must\n+   not be misrepresented as being the original software.\n+\n+4. The name of the author may not be used to endorse or promote\n+   products derived from this software without specific prior written\n+   permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS\n+OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n+DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n+GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n+WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n+NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+----------------------------------------------------------------\n+\n+Notice that the above BSD-style license applies to this one file\n+(valgrind.h) only.  The entire rest of Valgrind is licensed under\n+the terms of the GNU General Public License, version 2.  See the\n+COPYING file in the source distribution for details.\n+\n+----------------------------------------------------------------\n+\n+\n","filename":"modules\/javafx.web\/src\/main\/legal\/webkit.md","additions":277,"deletions":218,"binary":false,"changes":495,"status":"modified"},{"patch":"@@ -450,0 +450,43 @@\n+void deleteAllFilesModifiedSince(const String& path, WallTime t)\n+{\n+    fprintf(stderr, \"deleteAllFilesModifiedSince(const String&, WallTime) NOT IMPLEMENTED\\n\");\n+    UNUSED_PARAM(path);\n+    UNUSED_PARAM(t);\n+}\n+\n+bool flushFile(PlatformFileHandle handle)\n+{\n+     fprintf(stderr, \"flushFile(PlatformFileHandle) NOT IMPLEMENTED\\n\");\n+     UNUSED_PARAM(handle);\n+     return false;\n+}\n+\n+std::optional<Vector<uint8_t>> readEntireFile(PlatformFileHandle handle)\n+{\n+    fprintf(stderr, \"readEntireFile(PlatformFileHandle handle) NOT IMPLEMENTED\\n\");\n+    UNUSED_PARAM(handle);\n+    Vector<uint8_t> vec;\n+    return vec;\n+}\n+std::optional<Vector<uint8_t>> readEntireFile(const String& path)\n+{\n+    fprintf(stderr, \"readEntireFile(const String& path) NOT IMPLEMENTED\\n\");\n+    UNUSED_PARAM(path);\n+    Vector<uint8_t> vec;\n+    return vec;\n+}\n+\n+bool deleteNonEmptyDirectory(String const &)\n+{\n+    fprintf(stderr, \"deleteNonEmptyDirectory(String const &) NOT IMPLEMENTED\\n\");\n+    return false;\n+}\n+\n+std::optional<uint64_t> fileSize(PlatformFileHandle handle)\n+{\n+    long long size = 0;\n+    fprintf(stderr, \"readEntireFile(PlatformFileHandle) NOT IMPLEMENTED\\n\");\n+    UNUSED_PARAM(handle);\n+    return size;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WTF\/wtf\/java\/FileSystemJava.cpp","additions":43,"deletions":0,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-platform\/graphics\/displaylists\/DisplayListDrawGlyphsRecorderJava.cpp\n+platform\/graphics\/DrawGlyphsRecorderJava.cpp\n@@ -94,3 +94,0 @@\n-platform\/ScrollAnimationKinetic.cpp\n-platform\/generic\/ScrollAnimatorGeneric.cpp\n-\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/SourcesJava.txt","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"config.h\"\n+\/\/#include \"DisplayListDrawGlyphsRecorder.h\"\n+#include \"DrawGlyphsRecorder.h\"\n+\n+#include \"DisplayListItems.h\"\n+#include \"DisplayListRecorder.h\"\n+#include \"FloatPoint.h\"\n+#include \"Font.h\"\n+#include \"GlyphBuffer.h\"\n+\n+namespace WebCore {\n+DrawGlyphsRecorder::DrawGlyphsRecorder(GraphicsContext& owner, DeconstructDrawGlyphs, DeriveFontFromContext)\n+    : m_owner(owner)\n+{\n+}\n+\n+void DrawGlyphsRecorder::drawGlyphs(const Font& font, const GlyphBufferGlyph* glyphs, const GlyphBufferAdvance* advances, unsigned numGlyphs, const FloatPoint& startPoint, FontSmoothingMode smoothingMode)\n+{\n+    m_owner.drawGlyphsAndCacheFont(font, glyphs, advances, numGlyphs, startPoint, m_smoothingMode);\n+}\n+\n+} \/\/ namespace WebCore\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/DrawGlyphsRecorderJava.cpp","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -48,2 +48,1 @@\n-std::unique_ptr<FontPlatformData> FontCache::createFontPlatformData(const FontDescription& fontDescription, const AtomString& family, const FontFeatureSettings*, FontSelectionSpecifiedCapabilities) {\n-\n+std::unique_ptr<FontPlatformData> FontCache::createFontPlatformData(const FontDescription& fontDescription, const AtomString& family, const FontCreationContext&){\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/FontCacheJava.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include <wtf\/Variant.h>\n+#include <variant>\n@@ -69,1 +69,1 @@\n-    const Vector<Gradient::ColorStop, 2> stops = gradient.stops();\n+    const Vector<GradientColorStop, 2> stops = gradient.stops().stops();\n@@ -114,1 +114,1 @@\n-        auto [r, g, b, a] = cs.color.toSRGBALossy<float>();\n+        auto [r, g, b, a] = cs.color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -231,1 +231,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<float>();\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -245,1 +245,1 @@\n-        auto image = m_state.fillPattern->tileImage().platformImage();\n+        auto image = m_state.fillPattern->tileNativeImage()->platformImage();\n@@ -250,1 +250,1 @@\n-        drawPlatformPattern(image, FloatSize(), destRect,\n+        drawPlatformPattern(image, destRect,\n@@ -333,1 +333,1 @@\n-        auto [r, g, b, a] = color.toSRGBALossy<float>();\n+        auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -499,1 +499,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<float>();\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -534,1 +534,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<float>();\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -602,1 +602,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<float>();\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -830,1 +830,1 @@\n-void GraphicsContextJava::drawPlatformPattern(const PlatformImagePtr& image, const FloatSize&, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform, const FloatPoint& phase, const FloatSize&, const ImagePaintingOptions&)\n+void GraphicsContextJava::drawPlatformPattern(const PlatformImagePtr& image, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform, const FloatPoint& phase, const FloatSize&, const ImagePaintingOptions&)\n@@ -873,1 +873,1 @@\n-        auto image = m_state.fillPattern->tileImage().platformImage();\n+        auto image = m_state.fillPattern->tileNativeImage()->platformImage();\n@@ -878,1 +878,1 @@\n-        drawPlatformPattern(image, FloatSize(), destRect,\n+        drawPlatformPattern(image, destRect,\n@@ -933,1 +933,1 @@\n-        auto [r, g, b, a] = color.toSRGBALossy<float>();\n+        auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<float>>().resolved();\n@@ -992,1 +992,1 @@\n-void GraphicsContextJava::updateState(const GraphicsContextState& state, GraphicsContextState::StateChangeFlags flags)\n+void GraphicsContextJava::didUpdateState(const GraphicsContextState& state, GraphicsContextState::StateChangeFlags flags)\n@@ -1038,1 +1038,1 @@\n-void GraphicsContextJava::drawPattern(NativeImage& image, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& tileRect,\n+\/*void GraphicsContextJava::drawPattern(NativeImage& image, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& tileRect,\n@@ -1041,2 +1041,4 @@\n-{\n-    drawPlatformPattern(image.platformImage(), imageSize, destRect, tileRect, patternTransform, phase, spacing, imagePaintingOptions);\n+*\/\n+void GraphicsContextJava::drawPattern(NativeImage& image, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform,\n+                       const FloatPoint& phase, const FloatSize& spacing, const ImagePaintingOptions& imagePaintingOptions){\n+    drawPlatformPattern(image.platformImage(), destRect, tileRect, patternTransform, phase, spacing, imagePaintingOptions);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/GraphicsContextJava.cpp","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-    void drawLineForText(const FloatRect& rect, bool printing, bool doubleLines, StrokeStyle stroke) override;\n+    void drawLineForText(const FloatRect& rect, bool printing, bool doubleLines, StrokeStyle stroke);\n@@ -97,1 +97,1 @@\n-    void drawPlatformPattern(const PlatformImagePtr& image, const FloatSize&, const FloatRect& destRect, const FloatRect& tileRect,\n+    void drawPlatformPattern(const PlatformImagePtr& image, const FloatRect& destRect, const FloatRect& tileRect,\n@@ -150,1 +150,1 @@\n-    void updateState(const GraphicsContextState&, GraphicsContextState::StateChangeFlags) override;\n+    void didUpdateState(const GraphicsContextState&, GraphicsContextState::StateChangeFlags) override;\n@@ -154,1 +154,1 @@\n-    void drawPattern(NativeImage&, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& tileRect,\n+    \/*void drawPattern(NativeImage&, const FloatSize& imageSize, const FloatRect& destRect, const FloatRect& tileRect,\n@@ -157,0 +157,3 @@\n+    *\/\n+     void drawPattern(NativeImage&, const FloatRect& destRect, const FloatRect& tileRect, const AffineTransform& patternTransform,\n+                             const FloatPoint& phase, const FloatSize& spacing, const ImagePaintingOptions& = { }) override;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/GraphicsContextJava.h","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-    return NativeImage::create(makeRefPtr(m_image.get()));\n+    return NativeImage::create((m_image.get()));\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/ImageBufferJavaBackend.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-void ImageDecoderJava::setData(SharedBuffer& data, bool allDataReceived)\n+void ImageDecoderJava::setData(const FragmentedSharedBuffer& data, bool allDataReceived)\n@@ -199,1 +199,1 @@\n-        return 0;\n+        return nullptr;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/ImageDecoderJava.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    static Ref<ImageDecoder> create(const SharedBuffer&, AlphaOption, GammaAndColorProfileOption)\n+    static Ref<ImageDecoder> create(const FragmentedSharedBuffer&, AlphaOption, GammaAndColorProfileOption)\n@@ -75,1 +75,1 @@\n-    void setData(SharedBuffer&, bool allDataReceived) final;\n+    void setData(const FragmentedSharedBuffer&, bool allDataReceived) final;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/ImageDecoderJava.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -773,0 +773,6 @@\n+DestinationColorSpace MediaPlayerPrivate::colorSpace()\n+{                                                \/\/ Needs to be implemented\n+    notImplemented();\n+    return DestinationColorSpace::SRGB();\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/MediaPlayerPrivateJava.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,0 +112,1 @@\n+        virtual DestinationColorSpace colorSpace();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/graphics\/java\/MediaPlayerPrivateJava.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-    RefPtr<SharedBuffer> m_fileContent;\n+    RefPtr<FragmentedSharedBuffer> m_fileContent;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/DataObjectJava.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -739,0 +739,7 @@\n+#if USE(CF) && !PLATFORM(WIN)\n+String localizedString(CFStringRef key)\n+{\n+     notImplemented();\n+     return String::fromUTF8(\"localizedString(CFStringRef key)\"); \/\/Need to add implementation\n+}\n+#else\n@@ -743,0 +750,2 @@\n+#endif\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/LocalizedStringsJava.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    SharedBuffer* imageBuffer = cachedImage->image()->data();\n+    FragmentedSharedBuffer* imageBuffer = cachedImage->image()->data();\n@@ -520,0 +520,4 @@\n+void Pasteboard::write(const PasteboardBuffer&)\n+{\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/PasteboardJava.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -192,1 +192,1 @@\n-    auto [r, g, b, a] = bgColor.toSRGBALossy<uint8_t>();\n+    auto [r, g, b, a] = bgColor.toColorTypeLossy<SRGBA<uint8_t>>().resolved();\n@@ -546,1 +546,1 @@\n-Color RenderThemeJava::platformActiveSelectionBackgroundColor(OptionSet<StyleColor::Options>) const\n+Color RenderThemeJava::platformActiveSelectionBackgroundColor(OptionSet<StyleColorOptions>) const\n@@ -551,1 +551,1 @@\n-Color RenderThemeJava::platformInactiveSelectionBackgroundColor(OptionSet<StyleColor::Options> opt) const\n+Color RenderThemeJava::platformInactiveSelectionBackgroundColor(OptionSet<StyleColorOptions> opt) const\n@@ -556,1 +556,1 @@\n-Color RenderThemeJava::platformActiveSelectionForegroundColor(OptionSet<StyleColor::Options>) const\n+Color RenderThemeJava::platformActiveSelectionForegroundColor(OptionSet<StyleColorOptions>) const\n@@ -561,1 +561,1 @@\n-Color RenderThemeJava::platformInactiveSelectionForegroundColor(OptionSet<StyleColor::Options> opt) const\n+Color RenderThemeJava::platformInactiveSelectionForegroundColor(OptionSet<StyleColorOptions> opt) const\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/RenderThemeJava.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,4 +76,4 @@\n-    Color platformActiveSelectionBackgroundColor(OptionSet<StyleColor::Options>) const override;\n-    Color platformInactiveSelectionBackgroundColor(OptionSet<StyleColor::Options>) const override;\n-    Color platformActiveSelectionForegroundColor(OptionSet<StyleColor::Options>) const override;\n-    Color platformInactiveSelectionForegroundColor(OptionSet<StyleColor::Options>) const override;\n+    Color platformActiveSelectionBackgroundColor(OptionSet<StyleColorOptions>) const override;\n+    Color platformInactiveSelectionBackgroundColor(OptionSet<StyleColorOptions>) const override;\n+    Color platformActiveSelectionForegroundColor(OptionSet<StyleColorOptions>) const override;\n+    Color platformInactiveSelectionForegroundColor(OptionSet<StyleColorOptions>) const override;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/RenderThemeJava.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -46,1 +46,2 @@\n-    return ptr_to_jlong(&SharedBuffer::create().leakRef());\n+   auto buffer_address = &FragmentedSharedBuffer::create().get();\n+   return ptr_to_jlong(new SharedBufferBuilder(std::move(buffer_address)));\n@@ -52,1 +53,1 @@\n-    SharedBuffer* p = static_cast<SharedBuffer*>(jlong_to_ptr(nativePointer));\n+    FragmentedSharedBuffer* p = static_cast<FragmentedSharedBuffer*>(jlong_to_ptr(nativePointer));\n@@ -61,1 +62,1 @@\n-    SharedBuffer* p = static_cast<SharedBuffer*>(jlong_to_ptr(nativePointer));\n+    FragmentedSharedBuffer* p = static_cast<FragmentedSharedBuffer*>(jlong_to_ptr(nativePointer));\n@@ -92,1 +93,1 @@\n-    SharedBuffer* p = static_cast<SharedBuffer*>(jlong_to_ptr(nativePointer));\n+    SharedBufferBuilder* p = static_cast<SharedBufferBuilder*>(jlong_to_ptr(nativePointer));\n@@ -107,1 +108,1 @@\n-    SharedBuffer* p = static_cast<SharedBuffer*>(jlong_to_ptr(nativePointer));\n+    FragmentedSharedBuffer* p = static_cast<FragmentedSharedBuffer*>(jlong_to_ptr(nativePointer));\n@@ -109,1 +110,0 @@\n-    p->deref();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/java\/SharedBufferJava.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-    client()->willSendRequestAsync(this, WTFMove(newRequest), ResourceResponse(response), [this, protectedThis = makeRef(*this)] (ResourceRequest&& request) {\n+    client()->willSendRequestAsync(this, WTFMove(newRequest), ResourceResponse(response), [this, protectedThis = Ref(*this)] (ResourceRequest&& request) {\n@@ -185,1 +185,1 @@\n-    if (challenge != d->m_currentWebChallenge)\n+    if (!AuthenticationChallengeBase::equalForWebKitLegacyChallengeComparison(challenge, d->m_currentWebChallenge))\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/network\/java\/ResourceHandleJava.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+#include \"SharedBuffer.h\"\n@@ -300,1 +301,1 @@\n-void URLLoader::AsynchronousTarget::didReceiveData(const uint8_t* data, int length)\n+void URLLoader::AsynchronousTarget::didReceiveData(const SharedBuffer* data, int length)\n@@ -304,1 +305,1 @@\n-        client->didReceiveData(m_handle, data, length, 0);\n+        client->didReceiveData(m_handle, *data, length);\n@@ -364,1 +365,1 @@\n-void URLLoader::SynchronousTarget::didReceiveData(const uint8_t* data, int length)\n+void URLLoader::SynchronousTarget::didReceiveData(const SharedBuffer* data, int length)\n@@ -366,1 +367,1 @@\n-    m_data.append(data, length);\n+    m_data.append(*data->data());\n@@ -509,1 +510,3 @@\n-    target->didReceiveData(address + position, remaining);\n+    Ref<FragmentedSharedBuffer> tmp_buf = FragmentedSharedBuffer::create(address,remaining);\n+    target->didReceiveData(tmp_buf->makeContiguous().ptr() + position, remaining);\n+    \/\/target->didReceiveData((SharedBuffer*)(address) + position, remaining);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/network\/java\/URLLoader.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-        virtual void didReceiveData(const uint8_t* data, int length) = 0;\n+        virtual void didReceiveData(const SharedBuffer* data, int length) = 0;\n@@ -82,1 +82,1 @@\n-        void didReceiveData(const uint8_t* data, int length) final;\n+        void didReceiveData(const SharedBuffer* data, int length) final;\n@@ -99,1 +99,1 @@\n-        void didReceiveData(const uint8_t* data, int length) final;\n+        void didReceiveData(const SharedBuffer* data, int length) final;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebCore\/platform\/network\/java\/URLLoader.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-    return IMPL->valueAsDate();\n+    return IMPL->valueAsDate().approximateMonotonicTime().get_time_value();\n@@ -426,0 +426,1 @@\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/DOM\/JavaHTMLInputElement.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-#include <wtf\/Variant.h>\n+#include <variant>\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/DOM\/JavaHTMLOptionsCollection.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    void closeWindowSoon() override;\n+    void closeWindow() override;\n@@ -179,0 +179,3 @@\n+    void requestCookieConsent(CompletionHandler<void(CookieConsentDecisionResult)>&&) override;\n+    void classifyModalContainerControls(Vector<String>&& texts, CompletionHandler<void(Vector<ModalContainerControlType>&&)>&&) override;\n+    void decidePolicyForModalContainer(OptionSet<ModalContainerControlType>, CompletionHandler<void(ModalContainerDecision)>&&) override;\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/ChromeClientJava.h","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,2 +47,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<uint8_t>();\n-\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<uint8_t>>().resolved();\n@@ -73,1 +72,1 @@\n-    auto [r, g, b, a] = color.toSRGBALossy<uint8_t>();\n+    auto [r, g, b, a] = color.toColorTypeLossy<SRGBA<uint8_t>>().resolved();\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/ColorChooserJava.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -570,0 +570,4 @@\n+void EditorClientJava::subFrameScrollPositionChanged() {\n+     notImplemented();\n+}\n+\n@@ -639,0 +643,5 @@\n+DOMPasteAccessResponse EditorClientJava::requestDOMPasteAccess(DOMPasteAccessCategory, const String& originIdentifier)\n+{\n+    return DOMPasteAccessResponse::DeniedForGesture;\n+}\n+\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/EditorClientJava.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    void didEndUserTriggeredSelectionChanges() final { }\n+    void didEndUserTriggeredSelectionChanges() override { }\n@@ -74,1 +74,1 @@\n-    void didUpdateComposition() final { }\n+    void didUpdateComposition() override { }\n@@ -76,0 +76,1 @@\n+    DOMPasteAccessResponse requestDOMPasteAccess(DOMPasteAccessCategory, const String& originIdentifier) override;\n@@ -101,1 +102,1 @@\n-    void subFrameScrollPositionChanged() final { }\n+    void subFrameScrollPositionChanged() override;\n@@ -158,1 +159,0 @@\n-    DOMPasteAccessResponse requestDOMPasteAccess(const String&) final { return DOMPasteAccessResponse::DeniedForGesture; }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/EditorClientJava.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-void FrameLoaderClientJava::setRequestURL(Frame* f, int identifier, String url)\n+void FrameLoaderClientJava::setRequestURL(Frame* f,ResourceLoaderIdentifier  identifier, String url)\n@@ -261,1 +261,1 @@\n-void FrameLoaderClientJava::removeRequestURL(Frame* f, int identifier)\n+void FrameLoaderClientJava::removeRequestURL(Frame* f, ResourceLoaderIdentifier identifier)\n@@ -302,1 +302,1 @@\n-                                                  int id, String contentType,\n+                                                  ResourceLoaderIdentifier id, String contentType,\n@@ -360,1 +360,1 @@\n-void FrameLoaderClientJava::committedLoad(DocumentLoader* loader, const uint8_t* data, int length)\n+void FrameLoaderClientJava::committedLoad(DocumentLoader* loader, const SharedBuffer& data)\n@@ -363,1 +363,1 @@\n-    loader->commitData(data, length);\n+    loader->commitData(data);\n@@ -366,1 +366,1 @@\n-void FrameLoaderClientJava::dispatchDecidePolicyForResponse(const ResourceResponse& response, const ResourceRequest&, PolicyCheckIdentifier identifier, const String&, BrowsingContextGroupSwitchDecision, FramePolicyFunction&& policyFunction)\n+void FrameLoaderClientJava::dispatchDecidePolicyForResponse(const ResourceResponse& response, const ResourceRequest&, PolicyCheckIdentifier identifier, const String&, FramePolicyFunction&& policyFunction)\n@@ -392,1 +392,1 @@\n-void FrameLoaderClientJava::dispatchDidReceiveResponse(DocumentLoader*, unsigned long identifier, const ResourceResponse& response)\n+void FrameLoaderClientJava::dispatchDidReceiveResponse(DocumentLoader*, ResourceLoaderIdentifier identifier, const ResourceResponse& response)\n@@ -573,1 +573,1 @@\n-void FrameLoaderClientJava::assignIdentifierToInitialRequest(unsigned long, DocumentLoader*, const ResourceRequest&)\n+void FrameLoaderClientJava::assignIdentifierToInitialRequest(ResourceLoaderIdentifier, DocumentLoader*, const ResourceRequest&)\n@@ -595,1 +595,1 @@\n-    m_mainResourceRequestID = 0;\n+    m_mainResourceRequestID = { };\n@@ -598,1 +598,1 @@\n-void FrameLoaderClientJava::dispatchWillSendRequest(DocumentLoader* l, unsigned long identifier, ResourceRequest& req, const ResourceResponse& res)\n+void FrameLoaderClientJava::dispatchWillSendRequest(DocumentLoader* l, ResourceLoaderIdentifier identifier, ResourceRequest& req, const ResourceResponse& res)\n@@ -612,1 +612,1 @@\n-    if (m_mainResourceRequestID == 0) {\n+    if (!m_mainResourceRequestID) {\n@@ -648,1 +648,1 @@\n-void FrameLoaderClientJava::dispatchDidFailLoading(DocumentLoader* dl, unsigned long identifier, const ResourceError& error)\n+void FrameLoaderClientJava::dispatchDidFailLoading(DocumentLoader* dl, ResourceLoaderIdentifier identifier, const ResourceError& error)\n@@ -724,1 +724,1 @@\n-void FrameLoaderClientJava::dispatchDidReceiveContentLength(DocumentLoader*, unsigned long, int)\n+void FrameLoaderClientJava::dispatchDidReceiveContentLength(DocumentLoader*, ResourceLoaderIdentifier, int)\n@@ -761,1 +761,1 @@\n-void FrameLoaderClientJava::dispatchDidFinishLoading(DocumentLoader* l, unsigned long identifier)\n+void FrameLoaderClientJava::dispatchDidFinishLoading(DocumentLoader* l, ResourceLoaderIdentifier identifier)\n@@ -787,1 +787,1 @@\n-        dl->writer().setEncoding(\"\", false);\n+        dl->writer().setEncoding(\"\", DocumentWriter::IsEncodingUserChosen::No);\n@@ -1103,1 +1103,1 @@\n-    unsigned long)\n+    ResourceLoaderIdentifier)\n@@ -1109,1 +1109,1 @@\n-void FrameLoaderClientJava::dispatchDidReceiveAuthenticationChallenge(DocumentLoader*, unsigned long, const AuthenticationChallenge& challenge)\n+void FrameLoaderClientJava::dispatchDidReceiveAuthenticationChallenge(DocumentLoader*, ResourceLoaderIdentifier, const AuthenticationChallenge& challenge)\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/FrameLoaderClientJava.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    void assignIdentifierToInitialRequest(unsigned long identifier, DocumentLoader*, const ResourceRequest&) override;\n+    void assignIdentifierToInitialRequest(ResourceLoaderIdentifier, DocumentLoader*, const ResourceRequest&) override;\n@@ -66,5 +66,5 @@\n-    void dispatchWillSendRequest(DocumentLoader*, unsigned long  identifier, ResourceRequest&, const ResourceResponse& redirectResponse) override;\n-    void dispatchDidReceiveResponse(DocumentLoader*, unsigned long  identifier, const ResourceResponse&) override;\n-    void dispatchDidReceiveContentLength(DocumentLoader*, unsigned long identifier, int lengthReceived) override;\n-    void dispatchDidFinishLoading(DocumentLoader*, unsigned long  identifier) override;\n-    void dispatchDidFailLoading(DocumentLoader*, unsigned long  identifier, const ResourceError&) override;\n+    void dispatchWillSendRequest(DocumentLoader*, ResourceLoaderIdentifier, ResourceRequest&, const ResourceResponse& redirectResponse) override;\n+    void dispatchDidReceiveResponse(DocumentLoader*, ResourceLoaderIdentifier, const ResourceResponse&) override;\n+    void dispatchDidReceiveContentLength(DocumentLoader*, ResourceLoaderIdentifier, int lengthReceived) override;\n+    void dispatchDidFinishLoading(DocumentLoader*, ResourceLoaderIdentifier) override;\n+    void dispatchDidFailLoading(DocumentLoader*, ResourceLoaderIdentifier, const ResourceError&) override;\n@@ -96,1 +96,1 @@\n-    void dispatchDecidePolicyForResponse(const ResourceResponse&, const ResourceRequest&, PolicyCheckIdentifier, const String& downloadAttribute, BrowsingContextGroupSwitchDecision, FramePolicyFunction&&) override;\n+    void dispatchDecidePolicyForResponse(const ResourceResponse&, const ResourceRequest&, PolicyCheckIdentifier, const String& downloadAttribute, FramePolicyFunction&&) override;\n@@ -124,1 +124,1 @@\n-    void committedLoad(DocumentLoader*, const uint8_t*, int) override;\n+    void committedLoad(DocumentLoader*, const SharedBuffer&) override;\n@@ -154,2 +154,2 @@\n-    bool shouldUseCredentialStorage(DocumentLoader*, unsigned long identifier) override;\n-    void dispatchDidReceiveAuthenticationChallenge(DocumentLoader*, unsigned long identifier, const AuthenticationChallenge&) override;\n+    bool shouldUseCredentialStorage(DocumentLoader*, ResourceLoaderIdentifier) override;\n+    void dispatchDidReceiveAuthenticationChallenge(DocumentLoader*, ResourceLoaderIdentifier, const AuthenticationChallenge&) override;\n@@ -200,1 +200,1 @@\n-    unsigned long m_mainResourceRequestID;\n+    ResourceLoaderIdentifier m_mainResourceRequestID;\n@@ -209,2 +209,2 @@\n-    void setRequestURL(Frame* f, int identifier, String url);\n-    void removeRequestURL(Frame* f, int identifier);\n+    void setRequestURL(Frame* f,  ResourceLoaderIdentifier identifier, String url);\n+    void removeRequestURL(Frame* f, ResourceLoaderIdentifier identifier);\n@@ -213,1 +213,1 @@\n-    void postResourceLoadEvent(Frame* f, int state, int id, String contentType, double progress, int errorCode = 0);\n+    void postResourceLoadEvent(Frame* f, int state, ResourceLoaderIdentifier id, String contentType, double progress, int errorCode = 0);\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/FrameLoaderClientJava.h","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n-    bool show(Notification*) override { return false; }\n-    void cancel(Notification*) override {}\n-    void notificationObjectDestroyed(Notification*) override {}\n+    bool show(Notification&) override { return false; }\n+    void cancel(Notification&) override {}\n+    void notificationObjectDestroyed(Notification&) override {}\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/NotificationClientJava.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    void writeBlobsToTemporaryFiles(const Vector<String>& blobURLs, CompletionHandler<void(Vector<String>&& filePaths)>&& completionHandler) final { m_blobRegistry.writeBlobsToTemporaryFiles(blobURLs, WTFMove(completionHandler)); }\n+    void writeBlobsToTemporaryFilesForIndexedDB(const Vector<String>& blobURLs, CompletionHandler<void(Vector<String>&& filePaths)>&& completionHandler) final { m_blobRegistry.writeBlobsToTemporaryFilesForIndexedDB(blobURLs, WTFMove(completionHandler)); }\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/PlatformStrategiesJava.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,0 +67,1 @@\n+#include <WebCore\/DocumentInlines.h>\n@@ -612,1 +613,1 @@\n-        *scrollGranularity = ScrollByLine;\n+        *scrollGranularity = ScrollGranularity::Line;\n@@ -616,1 +617,1 @@\n-        *scrollGranularity = ScrollByLine;\n+        *scrollGranularity = ScrollGranularity::Line;\n@@ -620,1 +621,1 @@\n-        *scrollGranularity = ScrollByLine;\n+        *scrollGranularity = ScrollGranularity::Line;\n@@ -624,1 +625,1 @@\n-        *scrollGranularity = ScrollByLine;\n+        *scrollGranularity = ScrollGranularity::Line;\n@@ -628,1 +629,1 @@\n-        *scrollGranularity = ScrollByDocument;\n+        *scrollGranularity = ScrollGranularity::Document;\n@@ -632,1 +633,1 @@\n-        *scrollGranularity = ScrollByDocument;\n+        *scrollGranularity = ScrollGranularity::Document;\n@@ -636,1 +637,1 @@\n-        *scrollGranularity = ScrollByPage;\n+        *scrollGranularity = ScrollGranularity::Page;\n@@ -640,1 +641,1 @@\n-        *scrollGranularity = ScrollByPage;\n+        *scrollGranularity = ScrollGranularity::Page;\n@@ -711,1 +712,1 @@\n-    static const auto userAgentString = makeNeverDestroyed([] {\n+    static const NeverDestroyed userAgentString = [] {\n@@ -717,1 +718,1 @@\n-    }());\n+    }();\n@@ -1329,1 +1330,1 @@\n-    } else if (nativePropertyName == \"KeygenElementEnabled\") {\n+    } \/*else if (nativePropertyName == \"KeygenElementEnabled\") {\n@@ -1333,1 +1334,1 @@\n-    } else if (nativePropertyName == \"CSSCustomPropertiesAndValuesEnabled\") {\n+    } *\/else if (nativePropertyName == \"CSSCustomPropertiesAndValuesEnabled\") {\n","filename":"modules\/javafx.web\/src\/main\/native\/Source\/WebKitLegacy\/java\/WebCoreSupport\/WebPage.cpp","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-            assertEquals(\"Font weight should be bold\", \"bold\", (String) getEngine().executeScript(\n+            assertEquals(\"Font weight should be bold\", \"700\", (String) getEngine().executeScript(\n","filename":"modules\/javafx.web\/src\/test\/java\/test\/javafx\/scene\/web\/LoadTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}