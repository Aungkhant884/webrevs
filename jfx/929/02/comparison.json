{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            sm.getSelectedCells().addListener(selectedCellsListener);\n+            sm.getSelectedCells().addListener(weakSelectedCellsListener);\n@@ -89,2 +89,6 @@\n-    @Override public void dispose() {\n-        if (tlFocus != null) tlFocus.dispose();\n+    @Override\n+    public void dispose() {\n+        if (tlFocus != null) {\n+            tlFocus.dispose();\n+            tlFocus = null;\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableViewBehavior.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -408,0 +408,18 @@\n+    @Override\n+    public void dispose() {\n+        onScrollPageUp = null;\n+        onScrollPageDown = null;\n+        onFocusPreviousRow = null;\n+        onFocusNextRow = null;\n+        onSelectPreviousRow = null;\n+        onSelectNextRow = null;\n+        onMoveToFirstCell = null;\n+        onMoveToLastCell = null;\n+        onSelectRightCell = null;\n+        onSelectLeftCell = null;\n+        onFocusRightCell = null;\n+        onFocusLeftCell = null;\n+\n+        super.dispose();\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/behavior\/TableViewBehaviorBase.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,0 @@\n-    private TableViewSkin<T> tableViewSkin;\n@@ -86,3 +85,0 @@\n-\/\/        control.setInputMap(behavior.getInputMap());\n-\n-        updateTableViewSkin();\n@@ -91,2 +87,0 @@\n-            updateTableViewSkin();\n-\n@@ -232,1 +226,2 @@\n-    private void updateTableViewSkin() {\n+    \/\/ test-only\n+    TableViewSkin<T> getTableViewSkin() {\n@@ -235,1 +230,1 @@\n-            tableViewSkin = (TableViewSkin)tableView.getSkin();\n+            return (TableViewSkin)tableView.getSkin();\n@@ -237,0 +232,1 @@\n+        return null;\n@@ -238,6 +234,0 @@\n-\n-    \/\/ test-only\n-    TableViewSkin<T> getTableViewSkin() {\n-        return tableViewSkin;\n-    }\n-\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableRowSkin.java","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+\n+import com.sun.javafx.scene.control.ListenerHelper;\n@@ -84,1 +86,0 @@\n-\/\/        control.setInputMap(behavior.getInputMap());\n@@ -89,0 +90,2 @@\n+        ListenerHelper lh = ListenerHelper.get(this);\n+\n@@ -99,2 +102,2 @@\n-        flow.getVbar().addEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n-        flow.getHbar().addEventFilter(MouseEvent.MOUSE_PRESSED, ml);\n+        lh.addEventFilter(flow.getVbar(), MouseEvent.MOUSE_PRESSED, ml);\n+        lh.addEventFilter(flow.getHbar(), MouseEvent.MOUSE_PRESSED, ml);\n@@ -116,1 +119,3 @@\n-        registerChangeListener(control.fixedCellSizeProperty(), e -> flow.setFixedCellSize(getSkinnable().getFixedCellSize()));\n+        lh.addChangeListener(control.fixedCellSizeProperty(), (ev) -> {\n+            flow.setFixedCellSize(getSkinnable().getFixedCellSize());\n+        });\n@@ -130,3 +135,2 @@\n-    @Override public void dispose() {\n-        super.dispose();\n-\n+    @Override\n+    public void dispose() {\n@@ -136,0 +140,2 @@\n+\n+        super.dispose();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableViewSkin.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,1 +28,5 @@\n-import com.sun.javafx.scene.control.Properties;\n+import java.lang.ref.WeakReference;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.List;\n+\n@@ -32,0 +36,2 @@\n+import javafx.beans.WeakInvalidationListener;\n+import javafx.beans.property.ObjectProperty;\n@@ -34,1 +40,0 @@\n-import javafx.collections.MapChangeListener;\n@@ -37,0 +42,3 @@\n+import javafx.collections.WeakListChangeListener;\n+import javafx.geometry.HPos;\n+import javafx.geometry.VPos;\n@@ -39,2 +47,13 @@\n-import javafx.scene.control.*;\n-\n+import javafx.scene.control.Control;\n+import javafx.scene.control.FocusModel;\n+import javafx.scene.control.IndexedCell;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ResizeFeaturesBase;\n+import javafx.scene.control.ScrollToEvent;\n+import javafx.scene.control.SelectionModel;\n+import javafx.scene.control.TableColumnBase;\n+import javafx.scene.control.TableFocusModel;\n+import javafx.scene.control.TablePositionBase;\n+import javafx.scene.control.TableSelectionModel;\n+import javafx.scene.control.TableView;\n+import javafx.scene.control.TreeTableView;\n@@ -45,1 +64,2 @@\n-import javafx.collections.WeakListChangeListener;\n+import com.sun.javafx.scene.control.ListenerHelper;\n+import com.sun.javafx.scene.control.Properties;\n@@ -48,10 +68,0 @@\n-import java.lang.ref.WeakReference;\n-import java.util.List;\n-import javafx.beans.WeakInvalidationListener;\n-import javafx.beans.property.ObjectProperty;\n-import javafx.geometry.HPos;\n-import javafx.geometry.VPos;\n-\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-\n@@ -164,12 +174,0 @@\n-    private MapChangeListener<Object, Object> propertiesMapListener = c -> {\n-        if (! c.wasAdded()) return;\n-        if (Properties.REFRESH.equals(c.getKey())) {\n-            refreshView();\n-            getSkinnable().getProperties().remove(Properties.REFRESH);\n-        } else if (Properties.RECREATE.equals(c.getKey())) {\n-            needCellsRecreated = true;\n-            refreshView();\n-            getSkinnable().getProperties().remove(Properties.RECREATE);\n-        }\n-    };\n-\n@@ -214,7 +212,0 @@\n-    private ListChangeListener<TC> visibleLeafColumnsListener = c -> {\n-        updateVisibleColumnCount();\n-        while (c.next()) {\n-            updateVisibleLeafColumnWidthListeners(c.getAddedSubList(), c.getRemoved());\n-        }\n-    };\n-\n@@ -233,2 +224,0 @@\n-    private InvalidationListener itemsChangeListener;\n-\n@@ -237,2 +226,0 @@\n-    private WeakListChangeListener<TC> weakVisibleLeafColumnsListener =\n-            new WeakListChangeListener<>(visibleLeafColumnsListener);\n@@ -241,1 +228,0 @@\n-    private WeakInvalidationListener weakItemsChangeListener;\n@@ -261,1 +247,2 @@\n-\/\/        flow.setCellFactory(flow1 -> TableViewSkinBase.this.createCell());\n+\n+        ListenerHelper lh = ListenerHelper.get(this);\n@@ -267,1 +254,3 @@\n-        flow.getHbar().valueProperty().addListener(o -> horizontalScroll());\n+        lh.addInvalidationListener(flow.getHbar().valueProperty(), (o) -> {\n+            horizontalScroll();\n+        });\n@@ -292,1 +281,1 @@\n-        tableHeaderRow.reorderingProperty().addListener(valueModel -> {\n+        lh.addInvalidationListener(tableHeaderRow.reorderingProperty(), (ob) -> {\n@@ -296,1 +285,6 @@\n-        getVisibleLeafColumns().addListener(weakVisibleLeafColumnsListener);\n+        lh.addListChangeListener(getVisibleLeafColumns(), (c) -> {\n+            updateVisibleColumnCount();\n+            while (c.next()) {\n+                updateVisibleLeafColumnWidthListeners(c.getAddedSubList(), c.getRemoved());\n+            }\n+        });\n@@ -300,1 +294,2 @@\n-        itemsChangeListener = new InvalidationListener() {\n+\n+        lh.addInvalidationListener(itemsProperty, new InvalidationListener() {\n@@ -308,3 +303,1 @@\n-        };\n-        weakItemsChangeListener = new WeakInvalidationListener(itemsChangeListener);\n-        itemsProperty.addListener(weakItemsChangeListener);\n+        });\n@@ -315,1 +308,13 @@\n-        properties.addListener(propertiesMapListener);\n+        lh.addMapChangeListener(properties, (c) -> {\n+            if (!c.wasAdded()) {\n+                return;\n+            }\n+            if (Properties.REFRESH.equals(c.getKey())) {\n+                refreshView();\n+                getSkinnable().getProperties().remove(Properties.REFRESH);\n+            } else if (Properties.RECREATE.equals(c.getKey())) {\n+                needCellsRecreated = true;\n+                refreshView();\n+                getSkinnable().getProperties().remove(Properties.RECREATE);\n+            }\n+        });\n@@ -317,2 +322,2 @@\n-        control.addEventHandler(ScrollToEvent.<TC>scrollToColumn(), event -> {\n-            scrollHorizontally(event.getScrollTarget());\n+        lh.addEventHandler(control, ScrollToEvent.<TC>scrollToColumn(), (ev) -> {\n+            scrollHorizontally(ev.getScrollTarget());\n@@ -322,6 +327,8 @@\n-        InvalidationListener widthObserver = valueModel -> {\n-            contentWidthDirty = true;\n-            getSkinnable().requestLayout();\n-        };\n-        flow.widthProperty().addListener(widthObserver);\n-        flow.getVbar().widthProperty().addListener(widthObserver);\n+        lh.addInvalidationListener(\n+            () -> {\n+                contentWidthDirty = true;\n+                getSkinnable().requestLayout();\n+            },\n+            flow.widthProperty(),\n+            flow.getVbar().widthProperty()\n+        );\n@@ -330,1 +337,1 @@\n-        registerChangeListener(rowFactoryProperty, e -> {\n+        lh.addChangeListener(rowFactoryProperty, e -> {\n@@ -337,3 +344,10 @@\n-        registerChangeListener(TableSkinUtils.placeholderProperty(this), e -> updatePlaceholderRegionVisibility());\n-        registerChangeListener(flow.getVbar().visibleProperty(), e -> updateContentWidth());\n-        registerChangeListener(TableSkinUtils.columnResizePolicyProperty(this), (v) -> {\n+\n+        lh.addChangeListener(TableSkinUtils.placeholderProperty(this), (ev) -> {\n+            updatePlaceholderRegionVisibility();\n+        });\n+\n+        lh.addChangeListener(flow.getVbar().visibleProperty(), (ev) -> {\n+            updateContentWidth();\n+        });\n+\n+        lh.addChangeListener(TableSkinUtils.columnResizePolicyProperty(this), (ev) -> {\n@@ -342,0 +356,1 @@\n+\n@@ -364,3 +379,11 @@\n-    @Override public void dispose() {\n-        if (getSkinnable() == null) return;\n-        final ObjectProperty<ObservableList<S>> itemsProperty = TableSkinUtils.itemsProperty(this);\n+    @Override\n+    public void dispose() {\n+        if (getSkinnable() == null) {\n+            return;\n+        }\n+\n+        if (placeholderRegion != null) {\n+            getChildren().remove(placeholderRegion);\n+        }\n+\n+        getChildren().removeAll(tableHeaderRow, flow, columnReorderOverlay, columnReorderLine);\n@@ -368,3 +391,1 @@\n-        getVisibleLeafColumns().removeListener(weakVisibleLeafColumnsListener);\n-        itemsProperty.removeListener(weakItemsChangeListener);\n-        getSkinnable().getProperties().removeListener(propertiesMapListener);\n+        final ObjectProperty<ObservableList<S>> itemsProperty = TableSkinUtils.itemsProperty(this);\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/TableViewSkinBase.java","additions":87,"deletions":66,"binary":false,"changes":153,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import javafx.event.EventHandler;\n@@ -34,0 +33,2 @@\n+import com.sun.javafx.scene.control.ListenerHelper;\n+\n@@ -57,2 +58,0 @@\n-    private EventHandler<? super ScrollToEvent<Integer>> scrollToEventHandler;\n-\n@@ -74,1 +73,1 @@\n-        scrollToEventHandler = event -> {\n+        ListenerHelper.get(this).addEventHandler(control, ScrollToEvent.scrollToTopIndex(), (ev) -> {\n@@ -82,3 +81,2 @@\n-            flow.scrollToTop(event.getScrollTarget());\n-        };\n-        control.addEventHandler(ScrollToEvent.scrollToTopIndex(), scrollToEventHandler);\n+            flow.scrollToTop(ev.getScrollTarget());\n+        });\n@@ -135,2 +133,3 @@\n-        if (getSkinnable() == null) return;\n-        getSkinnable().removeEventHandler(ScrollToEvent.scrollToTopIndex(), scrollToEventHandler);\n+        if (getSkinnable() == null) {\n+            return;\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualContainerBase.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-                TableView.class,\n+                \/\/TableView.class,\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/SkinMemoryLeakTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}