{"files":[{"patch":"@@ -3072,0 +3072,2 @@\n+    private boolean recalculating = false;\n+\n@@ -3073,31 +3075,22 @@\n-        int itemCount = getCellCount();\n-        int cacheCount = itemSizeCache.size();\n-        boolean keepRatio = ((cacheCount > 0) && !Double.isInfinite(this.absoluteOffset));\n-        double estSize = estimatedSize \/ itemCount;\n-\n-        int oldIndex = computeCurrentIndex();\n-        double oldOffset = computeViewportOffset(getPosition());\n-        int added = 0;\n-        while ((itemCount > itemSizeCache.size()) && (added < improve)) {\n-            getOrCreateCellSize(itemSizeCache.size());\n-            added++;\n-        }\n-        cacheCount = itemSizeCache.size();\n-        int cnt = 0;\n-        double tot = 0d;\n-        for (int i = 0; (i < itemCount && i < cacheCount); i++) {\n-            Double il = itemSizeCache.get(i);\n-            if (il != null) {\n-                tot = tot + il;\n-                cnt++;\n-            }\n-        }\n-        this.estimatedSize = cnt == 0 ? 1d : tot * itemCount \/ cnt;\n-        estSize = estimatedSize \/ itemCount;\n-\n-        if (keepRatio) {\n-            double newOffset = 0;\n-            for (int i = 0; i < oldIndex; i++) {\n-                double h = getCellSize(i);\n-                if (h < 0) {\n-                    h = estSize;\n+        if (recalculating) return;\n+        recalculating = true;\n+        try {\n+            int itemCount = getCellCount();\n+            int cacheCount = itemSizeCache.size();\n+            boolean keepRatio = ((cacheCount > 0) && !Double.isInfinite(this.absoluteOffset));\n+\n+            int oldIndex = computeCurrentIndex();\n+            double oldOffset = computeViewportOffset(getPosition());\n+            int added = 0;\n+            while ((itemCount > itemSizeCache.size()) && (added < improve)) {\n+                getOrCreateCellSize(itemSizeCache.size());\n+                added++;\n+            }\n+            cacheCount = itemSizeCache.size();\n+            int cnt = 0;\n+            double tot = 0d;\n+            for (int i = 0; (i < itemCount && i < cacheCount); i++) {\n+                Double il = itemSizeCache.get(i);\n+                if (il != null) {\n+                    tot = tot + il;\n+                    cnt++;\n@@ -3105,1 +3098,0 @@\n-                newOffset += h;\n@@ -3107,3 +3099,2 @@\n-            this.absoluteOffset = newOffset + oldOffset;\n-            adjustPosition();\n-        }\n+            this.estimatedSize = cnt == 0 ? 1d : tot * itemCount \/ cnt;\n+            double estSize = estimatedSize \/ itemCount;\n@@ -3111,0 +3102,15 @@\n+            if (keepRatio) {\n+                double newOffset = 0;\n+                for (int i = 0; i < oldIndex; i++) {\n+                    double h = getCellSize(i);\n+                    if (h < 0) {\n+                        h = estSize;\n+                    }\n+                    newOffset += h;\n+                }\n+                this.absoluteOffset = newOffset + oldOffset;\n+                adjustPosition();\n+            }\n+        } finally {\n+            recalculating = false;\n+        }\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":41,"deletions":35,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -3910,0 +3910,29 @@\n+    private List<TreeItem<String>> generateChildren(int lvl) {\n+        List<TreeItem<String>> children = new ArrayList<>();\n+        for (int idx = 0; idx < 10; idx++) {\n+            TreeItem<String> child = new TreeItem<>(\"Child lvl. \" + lvl + \" idx. \" + idx);\n+            child.setExpanded(true);\n+            if (lvl <= 2) {\n+                child.getChildren().addAll(generateChildren(lvl + 1));\n+            }\n+            children.add(child);\n+        }\n+        return children;\n+    }\n+\n+    \/\/ JDK-8290348\n+    @Test\n+    public void testCheckPositionAfterCollapsed() {\n+        TreeItem<String> rootNode = new TreeItem<>(\"Root\");\n+        rootNode.setExpanded(true);\n+        rootNode.getChildren().addAll(generateChildren(1));\n+        TreeView<String> treeView = new TreeView<>(rootNode);\n+        treeView.scrollTo(100);\n+        IndexedCell expandedCell = VirtualFlowTestUtils.getCell(treeView, 100);\n+        Toolkit.getToolkit().firePulse();\n+        rootNode.getChildren().get(1).setExpanded(false);\n+        Toolkit.getToolkit().firePulse();\n+        IndexedCell scrolledCell = VirtualFlowTestUtils.getCell(treeView, 100);\n+        assertTrue(scrolledCell.isVisible());\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/TreeViewTest.java","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"}]}