{"files":[{"patch":"@@ -100,5 +100,0 @@\n-    private CompoundSelector() {\n-        this(null, null);\n-    }\n-\n-\n@@ -113,1 +108,1 @@\n-            allPseudoClasses.addAll(match.pseudoClasses);\n+            allPseudoClasses.addAll(match.getPseudoClasses());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CompoundSelector.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import com.sun.javafx.css.PseudoClassState;\n-\n@@ -32,0 +30,3 @@\n+import java.util.Collections;\n+import java.util.Objects;\n+import java.util.Set;\n@@ -43,3 +44,3 @@\n-    final Selector selector;\n-    final PseudoClassState pseudoClasses;\n-    final int idCount;\n+    private final Selector selector;\n+    private final Set<PseudoClass> pseudoClasses;\n+\n@@ -47,0 +48,1 @@\n+    final int idCount;\n@@ -52,2 +54,4 @@\n-    Match(final Selector selector, PseudoClassState pseudoClasses, int idCount, int styleClassCount) {\n-        assert selector != null;\n+    Match(final Selector selector, Set<PseudoClass> pseudoClasses, int idCount, int styleClassCount) {\n+        Objects.requireNonNull(selector);\n+        Objects.requireNonNull(pseudoClasses);\n+\n@@ -57,4 +61,3 @@\n-        this.pseudoClasses = pseudoClasses;\n-        int nPseudoClasses = pseudoClasses != null ? pseudoClasses.size() : 0;\n-        if (selector instanceof SimpleSelector) {\n-            final SimpleSelector simple = (SimpleSelector)selector;\n+        this.pseudoClasses = Collections.unmodifiableSet(pseudoClasses);\n+        int nPseudoClasses = pseudoClasses.size();\n+        if (selector instanceof SimpleSelector simple) {\n@@ -70,1 +73,2 @@\n-     * @return the {@code Selector}\n+     *\n+     * @return the {@code Selector}, never {@code null}\n@@ -77,2 +81,3 @@\n-     * Gets the pseudo class state.\n-     * @return the pseudo class state\n+     * Gets the pseudo class states as an immutable set.\n+     *\n+     * @return the pseudo class state, never {@code null}\n@@ -80,1 +85,1 @@\n-    public PseudoClassState getPseudoClasses() {\n+    public Set<PseudoClass> getPseudoClasses() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Match.java","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -96,1 +96,2 @@\n-     * @return match\n+     *\n+     * @return a match, never {@code null}\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Selector.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-     * Gets the {@code Set} of {@code StyleClass}es of the {@code Selector}.\n+     * Gets the immutable {@code Set} of {@code StyleClass}es of the {@code Selector}.\n@@ -99,1 +99,1 @@\n-    final private StyleClassSet styleClassSet;\n+    private final Set<StyleClass> styleClassSet;\n@@ -101,1 +101,1 @@\n-    final private String id;\n+    private final String id;\n@@ -111,2 +111,2 @@\n-    \/\/ a mask of bits corresponding to the pseudoclasses\n-    final private PseudoClassState pseudoClassState;\n+    \/\/ a mask of bits corresponding to the pseudoclasses (immutable)\n+    private final Set<PseudoClass> pseudoClassState;\n@@ -169,1 +169,1 @@\n-        this.matchOnName = (name != null && !(\"\".equals(name)) && !(\"*\".equals(name)));\n+        this.matchOnName = !(\"\".equals(name)) && !(\"*\".equals(name));\n@@ -171,1 +171,1 @@\n-        this.styleClassSet = new StyleClassSet();\n+        Set<StyleClass> scs = new StyleClassSet();\n@@ -173,2 +173,2 @@\n-        int nMax = styleClasses != null ? styleClasses.size() : 0;\n-        for(int n=0; n<nMax; n++) {\n+        if (styleClasses != null) {\n+            for(int n = 0; n < styleClasses.size(); n++) {\n@@ -176,2 +176,2 @@\n-            final String styleClassName = styleClasses.get(n);\n-            if (styleClassName == null || styleClassName.isEmpty()) continue;\n+                final String styleClassName = styleClasses.get(n);\n+                if (styleClassName == null || styleClassName.isEmpty()) continue;\n@@ -179,2 +179,2 @@\n-            final StyleClass styleClass = StyleClassSet.getStyleClass(styleClassName);\n-            this.styleClassSet.add(styleClass);\n+                scs.add(StyleClassSet.getStyleClass(styleClassName));\n+            }\n@@ -183,0 +183,1 @@\n+        this.styleClassSet = Collections.unmodifiableSet(scs);\n@@ -185,1 +186,2 @@\n-        this.pseudoClassState = new PseudoClassState();\n+        PseudoClassState pcs = new PseudoClassState();\n+        NodeOrientation dir = NodeOrientation.INHERIT;\n@@ -187,1 +189,2 @@\n-        nMax = pseudoClasses != null ? pseudoClasses.size() : 0;\n+        if (pseudoClasses != null) {\n+            for(int n = 0; n < pseudoClasses.size(); n++) {\n@@ -189,2 +192,2 @@\n-        NodeOrientation dir = NodeOrientation.INHERIT;\n-        for(int n=0; n<nMax; n++) {\n+                final String pclass = pseudoClasses.get(n);\n+                if (pclass == null || pclass.isEmpty()) continue;\n@@ -192,2 +195,6 @@\n-            final String pclass = pseudoClasses.get(n);\n-            if (pclass == null || pclass.isEmpty()) continue;\n+                \/\/ TODO: This is not how we should handle functional pseudo-classes in the long-run!\n+                if (\"dir(\".regionMatches(true, 0, pclass, 0, 4)) {\n+                    final boolean rtl = \"dir(rtl)\".equalsIgnoreCase(pclass);\n+                    dir = rtl ? RIGHT_TO_LEFT : LEFT_TO_RIGHT;\n+                    continue;\n+                }\n@@ -195,5 +202,1 @@\n-            \/\/ TODO: This is not how we should handle functional pseudo-classes in the long-run!\n-            if (\"dir(\".regionMatches(true, 0, pclass, 0, 4)) {\n-                final boolean rtl = \"dir(rtl)\".equalsIgnoreCase(pclass);\n-                dir = rtl ? RIGHT_TO_LEFT : LEFT_TO_RIGHT;\n-                continue;\n+                pcs.add(PseudoClassState.getPseudoClass(pclass));\n@@ -201,3 +204,0 @@\n-\n-            final PseudoClass pseudoClass = PseudoClassState.getPseudoClass(pclass);\n-            this.pseudoClassState.add(pseudoClass);\n@@ -206,0 +206,1 @@\n+        this.pseudoClassState = Collections.unmodifiableSet(pcs);\n@@ -209,1 +210,1 @@\n-        this.matchOnId = (id != null && !(\"\".equals(id)));\n+        this.matchOnId = !(\"\".equals(id));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/SimpleSelector.java","additions":29,"deletions":28,"binary":false,"changes":57,"status":"modified"}]}