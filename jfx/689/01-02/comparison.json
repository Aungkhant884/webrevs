{"files":[{"patch":"@@ -54,1 +54,1 @@\n-    private final ListChangeListener<E> listChangeListener = new BaseChangeListener<>(this);\n+    private final Listener<E> listener = new Listener<>(this);\n@@ -58,1 +58,0 @@\n-    private InvalidationListener listener = null;\n@@ -79,1 +78,1 @@\n-            initialValue.addListener(listChangeListener);\n+            initialValue.addListener((ListChangeListener) listener);\n@@ -212,1 +211,1 @@\n-                oldValue.removeListener(listChangeListener);\n+                oldValue.removeListener((ListChangeListener) listener);\n@@ -239,1 +238,1 @@\n-                value.addListener(listChangeListener);\n+                value.addListener((ListChangeListener) listener);\n@@ -272,4 +271,1 @@\n-            if (listener == null) {\n-                listener = new BaseInvalidationListener<>(this);\n-            }\n-            observable.addListener(listener);\n+            observable.addListener((InvalidationListener) listener);\n@@ -318,1 +314,1 @@\n-    private static class BaseChangeListener<E> extends WeakReference<ListPropertyBase<E>> implements ListChangeListener<E>, WeakListener {\n+    private static class Listener<E> extends WeakReference<ListPropertyBase<E>> implements InvalidationListener, ListChangeListener<E>, WeakListener {\n@@ -320,1 +316,1 @@\n-        BaseChangeListener(ListPropertyBase<E> ref) {\n+        Listener(ListPropertyBase<E> ref) {\n@@ -329,17 +325,0 @@\n-        @Override\n-        public void onChanged(Change<? extends E> change) {\n-            ListPropertyBase<E> ref = get();\n-            if(ref != null) {\n-                ref.invalidateProperties();\n-                ref.invalidated();\n-                ref.fireValueChangedEvent(change);\n-            }\n-        }\n-    }\n-\n-    private static class BaseInvalidationListener<E> extends WeakReference<ListPropertyBase<E>> implements InvalidationListener, WeakListener {\n-\n-        public BaseInvalidationListener(ListPropertyBase<E> ref) {\n-            super(ref);\n-        }\n-\n@@ -357,2 +336,7 @@\n-        public boolean wasGarbageCollected() {\n-            return get() == null;\n+        public void onChanged(Change<? extends E> change) {\n+            ListPropertyBase<E> ref = get();\n+            if(ref != null) {\n+                ref.invalidateProperties();\n+                ref.invalidated();\n+                ref.fireValueChangedEvent(change);\n+            }\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/ListPropertyBase.java","additions":14,"deletions":30,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    private final MapChangeListener<K, V> mapChangeListener = new BaseChangeListener<>(this);\n+    private final Listener<K, V> listener = new Listener<>(this);\n@@ -58,1 +58,0 @@\n-    private InvalidationListener listener = null;\n@@ -79,1 +78,1 @@\n-            initialValue.addListener(mapChangeListener);\n+            initialValue.addListener((MapChangeListener) listener);\n@@ -214,1 +213,1 @@\n-                oldValue.removeListener(mapChangeListener);\n+                oldValue.removeListener((MapChangeListener) listener);\n@@ -241,1 +240,1 @@\n-                value.addListener(mapChangeListener);\n+                value.addListener((MapChangeListener) listener);\n@@ -273,4 +272,1 @@\n-            if (listener == null) {\n-                listener = new BaseInvalidationListener<>(this);\n-            }\n-            observable.addListener(listener);\n+            observable.addListener((InvalidationListener) listener);\n@@ -319,1 +315,1 @@\n-    private static class BaseChangeListener<K,V> extends WeakReference<MapPropertyBase<K,V>> implements MapChangeListener<K,V>, WeakListener {\n+    private static class Listener<K,V> extends WeakReference<MapPropertyBase<K,V>> implements InvalidationListener, MapChangeListener<K,V>, WeakListener {\n@@ -321,1 +317,1 @@\n-        BaseChangeListener(MapPropertyBase<K,V> ref) {\n+        Listener(MapPropertyBase<K,V> ref) {\n@@ -330,17 +326,0 @@\n-        @Override\n-        public void onChanged(Change<? extends K, ? extends V> change) {\n-            MapPropertyBase<K,V> ref = get();\n-            if(ref != null) {\n-                ref.invalidateProperties();\n-                ref.invalidated();\n-                ref.fireValueChangedEvent(change);\n-            }\n-        }\n-    }\n-\n-    private static class BaseInvalidationListener<K,V> extends WeakReference<MapPropertyBase<K,V>> implements InvalidationListener, WeakListener {\n-\n-        public BaseInvalidationListener(MapPropertyBase<K,V> ref) {\n-            super(ref);\n-        }\n-\n@@ -358,2 +337,7 @@\n-        public boolean wasGarbageCollected() {\n-            return get() == null;\n+        public void onChanged(Change<? extends K, ? extends V> change) {\n+            MapPropertyBase<K,V> ref = get();\n+            if(ref != null) {\n+                ref.invalidateProperties();\n+                ref.invalidated();\n+                ref.fireValueChangedEvent(change);\n+            }\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/MapPropertyBase.java","additions":14,"deletions":30,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    private final SetChangeListener<E> setChangeListener = new BaseChangeListener(this);\n+    private final Listener<E> listener = new Listener(this);\n@@ -59,1 +59,0 @@\n-    private InvalidationListener listener = null;\n@@ -80,1 +79,1 @@\n-            initialValue.addListener(setChangeListener);\n+            initialValue.addListener((SetChangeListener) listener);\n@@ -215,1 +214,1 @@\n-                oldValue.removeListener(setChangeListener);\n+                oldValue.removeListener((SetChangeListener) listener);\n@@ -242,1 +241,1 @@\n-                value.addListener(setChangeListener);\n+                value.addListener((SetChangeListener) listener);\n@@ -275,4 +274,1 @@\n-            if (listener == null) {\n-                listener = new BaseInvalidationListener<>(this);\n-            }\n-            observable.addListener(listener);\n+            observable.addListener((InvalidationListener) listener);\n@@ -287,1 +283,1 @@\n-            observable.removeListener(listener);\n+            observable.removeListener((InvalidationListener) listener);\n@@ -321,1 +317,1 @@\n-    private static class BaseChangeListener<E> extends WeakReference<SetPropertyBase<E>> implements SetChangeListener<E>, WeakListener {\n+    private static class Listener<E> extends WeakReference<SetPropertyBase<E>> implements InvalidationListener, SetChangeListener<E>, WeakListener {\n@@ -323,1 +319,1 @@\n-        BaseChangeListener(SetPropertyBase<E> ref) {\n+        Listener(SetPropertyBase<E> ref) {\n@@ -332,17 +328,0 @@\n-        @Override\n-        public void onChanged(Change<? extends E> change) {\n-            SetPropertyBase<E> ref = get();\n-            if(ref != null) {\n-                ref.invalidateProperties();\n-                ref.invalidated();\n-                ref.fireValueChangedEvent(change);\n-            }\n-        }\n-    }\n-\n-    private static class BaseInvalidationListener<E> extends WeakReference<SetPropertyBase<E>> implements InvalidationListener, WeakListener {\n-\n-        public BaseInvalidationListener(SetPropertyBase<E> ref) {\n-            super(ref);\n-        }\n-\n@@ -360,2 +339,7 @@\n-        public boolean wasGarbageCollected() {\n-            return get() == null;\n+        public void onChanged(Change<? extends E> change) {\n+            SetPropertyBase<E> ref = get();\n+            if(ref != null) {\n+                ref.invalidateProperties();\n+                ref.invalidated();\n+                ref.fireValueChangedEvent(change);\n+            }\n","filename":"modules\/javafx.base\/src\/main\/java\/javafx\/beans\/property\/SetPropertyBase.java","additions":15,"deletions":31,"binary":false,"changes":46,"status":"modified"}]}