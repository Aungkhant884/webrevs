{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import javafx.beans.value.ChangeListener;\n@@ -49,0 +50,1 @@\n+import java.util.WeakHashMap;\n@@ -173,11 +175,1 @@\n-                menuitem.acceleratorProperty().addListener((observable, oldValue, newValue) -> {\n-                    final Map<KeyCombination, Runnable> accelerators = scene.getAccelerators();\n-\n-                    \/\/ remove the old KeyCombination from the accelerators map\n-                    Runnable _acceleratorRunnable = accelerators.remove(oldValue);\n-\n-                    \/\/ and put in the new accelerator KeyCombination, if it is not null\n-                    if (newValue != null) {\n-                        accelerators.put(newValue, _acceleratorRunnable);\n-                    }\n-                });\n+                menuitem.acceleratorProperty().addListener(getListener(scene, menuitem));\n@@ -188,0 +180,8 @@\n+    private static Map<MenuItem, ChangeListener<KeyCombination>> changeListenerMap = new WeakHashMap<>();\n+\n+    private static ChangeListener<KeyCombination> getListener(final Scene scene, MenuItem menuItem) {\n+\n+        ChangeListener<KeyCombination> listener = changeListenerMap.get(menuItem);\n+        if (listener == null) {\n+            listener = (observable, oldValue, newValue) -> {\n+                final Map<KeyCombination, Runnable> accelerators = scene.getAccelerators();\n@@ -189,0 +189,12 @@\n+                \/\/ remove the old KeyCombination from the accelerators map\n+                Runnable _acceleratorRunnable = accelerators.remove(oldValue);\n+\n+                \/\/ and put in the new accelerator KeyCombination, if it is not null\n+                if (newValue != null) {\n+                    accelerators.put(newValue, _acceleratorRunnable);\n+                }\n+            };\n+            changeListenerMap.put(menuItem, listener);\n+        }\n+        return listener;\n+    }\n@@ -223,1 +235,7 @@\n-                \/\/ TODO remove the menu listener from the menu.items list\n+                \/\/ MenuBarSkin uses MenuBarButton to display a Menu.\n+                \/\/ The listener that is added on the 'items' in the method\n+                \/\/ doAcceleratorInstall(final ObservableList<MenuItem> items, final Scene scene)\n+                \/\/ is added to the MenuBarButton.getItems() and not to Menu.getItems().\n+                \/\/ If a Menu is removed from scenegraph then it's skin get disposed(), which disposes the\n+                \/\/ related MenuBarButton. So it is not required to remove the listener that was added\n+                \/\/ to MenuBarButton.getItems().\n@@ -232,0 +250,6 @@\n+\n+                ChangeListener<KeyCombination> listener = changeListenerMap.get(menuitem);\n+                if (listener != null) {\n+                    menuitem.acceleratorProperty().removeListener(listener);\n+                    changeListenerMap.remove(menuitem);\n+                }\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ControlAcceleratorSupport.java","additions":36,"deletions":12,"binary":false,"changes":48,"status":"modified"}]}