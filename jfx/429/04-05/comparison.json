{"files":[{"patch":"@@ -239,1 +239,1 @@\n-                \/\/ If a Menu is removed from scenegraph then it's skin get disposed(), which disposes the\n+                \/\/ If a Menu is removed from scenegraph then it's skin gets disposed(), which disposes the\n@@ -275,5 +275,0 @@\n-\n-    \/\/ --- Test method\n-    static int testGetListenerMapSize() {\n-        return changeListenerMap.size();\n-    }\n","filename":"modules\/javafx.controls\/src\/main\/java\/com\/sun\/javafx\/scene\/control\/ControlAcceleratorSupport.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.sun.javafx.scene.control;\n-\n-import com.sun.javafx.scene.control.ControlAcceleratorSupport;\n-\n-public class ControlAcceleratorSupportShim {\n-    public static int get_ListenerMapSize() {\n-        return ControlAcceleratorSupport.testGetListenerMapSize();\n-    }\n-}\n","filename":"modules\/javafx.controls\/src\/shims\/java\/com\/sun\/javafx\/scene\/control\/ControlAcceleratorSupportShim.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -33,1 +33,0 @@\n-import com.sun.javafx.scene.control.ControlAcceleratorSupportShim;\n@@ -42,11 +41,0 @@\n-    private static int numListeners;\n-\n-    @BeforeClass\n-    public static void setup() throws Exception {\n-        for (int i = 0; i < 4; i++) {\n-            System.gc();\n-            System.runFinalization();\n-            Thread.sleep(500);\n-        }\n-        numListeners = ControlAcceleratorSupportShim.get_ListenerMapSize();\n-    }\n@@ -74,1 +62,0 @@\n-        assertEquals(numListeners + 4, ControlAcceleratorSupportShim.get_ListenerMapSize());\n@@ -81,1 +68,0 @@\n-        assertEquals(numListeners + 2, ControlAcceleratorSupportShim.get_ListenerMapSize());\n@@ -88,1 +74,0 @@\n-        assertEquals(numListeners + 0, ControlAcceleratorSupportShim.get_ListenerMapSize());\n@@ -95,1 +80,0 @@\n-        assertEquals(numListeners + 2, ControlAcceleratorSupportShim.get_ListenerMapSize());\n@@ -102,1 +86,0 @@\n-        assertEquals(numListeners + 4, ControlAcceleratorSupportShim.get_ListenerMapSize());\n@@ -111,1 +94,0 @@\n-        assertEquals(numListeners + 0, ControlAcceleratorSupportShim.get_ListenerMapSize());\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ControlAcceleratorSupportTest.java","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"}]}