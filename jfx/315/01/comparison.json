{"files":[{"patch":"@@ -73,0 +73,1 @@\n+                factory = null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PresentingPainter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+                factory = null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/UploadingPainter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import com.sun.prism.GraphicsPipeline;\n@@ -48,0 +49,1 @@\n+    public static final int D3DERR_DEVICEREMOVED    = 0x88760870;\n@@ -155,0 +157,6 @@\n+        if (hr == D3DERR_DEVICEREMOVED) {\n+            setLost();\n+            GraphicsPipeline.getPipeline().dispose();\n+            GraphicsPipeline.getPipeline().createPipeline();\n+        }\n+\n@@ -460,0 +468,2 @@\n+            case (int)D3DERR_DEVICEREMOVED:\n+                return \"D3DERR_DEVICEREMOVED\";\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DContext.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import com.sun.prism.Graphics;\n@@ -80,0 +81,8 @@\n+        if(theInstance == null){\n+            if (d3dEnabled) {\n+                \/\/ device was removed, reinitialize\n+                nInit(PrismSettings.class);\n+                theInstance = new D3DPipeline();\n+                factories = new D3DResourceFactory[nGetAdapterCount()];\n+            }\n+        }\n@@ -169,0 +178,1 @@\n+        theInstance = null;\n@@ -210,1 +220,8 @@\n-        for (int adapter = 0, n = nGetAdapterCount(); adapter != n; ++adapter) {\n+        int adapterCount = nGetAdapterCount();\n+        if(adapterCount == 0){\n+            \/\/ adapters lost, recreate\n+            GraphicsPipeline.getPipeline().dispose();\n+            GraphicsPipeline.getPipeline().createPipeline();\n+            return null;\n+        }\n+        for (int adapter = 0, n = adapterCount; adapter != n; ++adapter) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DPipeline.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -463,1 +463,3 @@\n-        throw new IllegalStateException(\"unmanaged resource freed from pool \"+this);\n+        if(PrismSettings.verbose) {\n+            System.err.println(\"unmanaged resource freed from pool \" + this);\n+        }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseResourcePool.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}