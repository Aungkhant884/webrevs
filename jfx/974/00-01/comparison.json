{"files":[{"patch":"@@ -2326,2 +2326,6 @@\n-        if (index > 0) getOrCreateCellSize(index - 1);\n-        if (index < getCellCount() -1) getOrCreateCellSize(index + 1);\n+        if (index > 0) {\n+            getOrCreateCellSize(index - 1);\n+        }\n+        if (index < getCellCount() -1) {\n+            getOrCreateCellSize(index + 1);\n+        }\n@@ -3069,1 +3073,7 @@\n-     * @param cell\n+     * If the specific cell is the \"current\" cell (which is the first cell that is\n+     * at least partially visible), the offset used for the viewport needs to be\n+     * recalculated in case the new size is different from the cached size. This way,\n+     * we keep the end of the current cell (and start of the cell at current + 1)\n+     * constant. An exception to this is when the current cell starts at offset 0,\n+     * in which case we keep the (0) offset as is.\n+     * @param cell the cell which size has to be calculated\n@@ -3076,0 +3086,1 @@\n+\n@@ -3077,6 +3088,5 @@\n-            if (isVertical()) {\n-                double newh = cell.getLayoutBounds().getHeight();\n-                itemSizeCache.set(cellIndex, newh);\n-            } else {\n-                double newh = cell.getLayoutBounds().getWidth();\n-                itemSizeCache.set(cellIndex, newh);\n+            Double oldSize = itemSizeCache.get(cellIndex);\n+            double newSize = isVertical() ? cell.getLayoutBounds().getHeight() : cell.getLayoutBounds().getWidth();\n+            itemSizeCache.set(cellIndex, newSize);\n+            if ((cellIndex == currentIndex) && (oldSize != null) && (oldOffset != 0)) {\n+                oldOffset = oldOffset + newSize - oldSize;\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -69,0 +69,1 @@\n+import javafx.scene.control.skin.VirtualFlow;\n@@ -2513,0 +2514,3 @@\n+            VirtualFlow vf = VirtualFlowTestUtils.getVirtualFlow(listView);\n+            vf.scrollPixels(-1);\n+            assertEquals(\"Upper cell should move 1 pixels, after scrolling 1 pixel\", previousLayoutY + 1, scrollToCell.getLayoutY(), 1.);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}