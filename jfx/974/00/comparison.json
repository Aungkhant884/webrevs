{"files":[{"patch":"@@ -1606,0 +1606,1 @@\n+        int oldIndex = computeCurrentIndex();\n@@ -1616,0 +1617,1 @@\n+        getCellSizesInExpectedViewport(oldIndex);\n@@ -2316,1 +2318,1 @@\n-     * visible content to be modified.\n+     * visible content to be modified. The existing offset and index are respected.\n@@ -2321,1 +2323,6 @@\n-        double estlength = getOrCreateCellSize(index);\n+        double oldOffset = computeViewportOffset(getPosition());\n+        int oldIndex = computeCurrentIndex();\n+        double cellLength = getOrCreateCellSize(index);\n+        if (index > 0) getOrCreateCellSize(index - 1);\n+        if (index < getCellCount() -1) getOrCreateCellSize(index + 1);\n+        double estlength = cellLength;\n@@ -2326,0 +2333,1 @@\n+        estlength = cellLength;\n@@ -2332,1 +2340,1 @@\n-        recalculateEstimatedSize();\n+        recalculateAndImproveEstimatedSize(0, oldIndex, oldOffset);\n@@ -2922,0 +2930,1 @@\n+\n@@ -3058,1 +3067,2 @@\n-     * new size.\n+     * new size. The total size of the flow will be recalculated, respecting the\n+     * current index and offset.\n@@ -3063,0 +3073,3 @@\n+        int currentIndex = computeCurrentIndex();\n+        double oldOffset = computeViewportOffset(getPosition());\n+\n@@ -3064,7 +3077,7 @@\n-        if (isVertical()) {\n-            double newh = cell.getLayoutBounds().getHeight();\n-            itemSizeCache.set(cellIndex, newh);\n-          } else {\n-            double newh = cell.getLayoutBounds().getWidth();\n-            itemSizeCache.set(cellIndex, newh);\n-          }\n+            if (isVertical()) {\n+                double newh = cell.getLayoutBounds().getHeight();\n+                itemSizeCache.set(cellIndex, newh);\n+            } else {\n+                double newh = cell.getLayoutBounds().getWidth();\n+                itemSizeCache.set(cellIndex, newh);\n+            }\n@@ -3072,0 +3085,1 @@\n+        recalculateAndImproveEstimatedSize(0, currentIndex, oldOffset);\n@@ -3085,0 +3099,10 @@\n+        recalculateAndImproveEstimatedSize(improve, -1, computeViewportOffset(getPosition()));\n+    }\n+\n+    \/**\n+     * Recalculate the estimated size. If an oldIndex different from  -1 is supplied, that value will\n+     * be respected:\n+     * at the end of this calculation, we make sure that if the current index is calculated, it will\n+     * be the same as the old index. If the oldIndex is -1, there is no guarantee about the new index.\n+     *\/\n+    private void recalculateAndImproveEstimatedSize(int improve, int oldIndex, double oldOffset) {\n@@ -3092,2 +3116,1 @@\n-            int oldIndex = computeCurrentIndex();\n-            double oldOffset = computeViewportOffset(getPosition());\n+            if (oldIndex < 0) oldIndex = computeCurrentIndex();\n","filename":"modules\/javafx.controls\/src\/main\/java\/javafx\/scene\/control\/skin\/VirtualFlow.java","additions":36,"deletions":13,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -61,0 +61,5 @@\n+    @Override\n+    public void setCellDirty(int idx) {\n+        super.setCellDirty(idx);\n+    }\n+\n","filename":"modules\/javafx.controls\/src\/shims\/java\/javafx\/scene\/control\/skin\/VirtualFlowShim.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1169,1 +1169,1 @@\n-                                    assertEquals(useFixedCellSize ? 17 : 71, rt_35395_counter);\n+                                    assertEquals(useFixedCellSize ? 17 : 101, rt_35395_counter);\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/ListViewTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1427,0 +1427,67 @@\n+\n+    @Test public void testChangingCellSize() {\n+        int[] heights = {100, 100, 100, 100, 100, 100, 100, 100, 100};\n+        VirtualFlowShim<IndexedCell> flow = new VirtualFlowShim();\n+        flow.setVertical(true);\n+        flow.setCellFactory(p -> new CellStub(flow) {\n+            @Override public void updateIndex(int i) {\n+                super.updateIndex(i);\n+                if ((i > -1) &&(i < heights.length)){\n+                    this.setPrefHeight(heights[i]);\n+                }\n+            }\n+           @Override public void updateItem(Object ic, boolean empty) {\n+               super.updateItem(ic, empty);\n+               if (ic instanceof Integer) {\n+                   Integer idx = (Integer)ic;\n+                   if (idx > -1) {\n+                       this.setMinHeight(heights[idx]);\n+                       this.setPrefHeight(heights[idx]);\n+                   }\n+               }\n+            }\n+        });\n+        flow.setCellCount(heights.length);\n+        flow.setViewportLength(400);\n+        flow.resize(400, 400);\n+        flow.layout();\n+IndexedCell firstCell = VirtualFlowShim.cells_getFirst(flow.cells);\n+        \/\/ Before scrolling, top-cell must have index 0\n+assertEquals(0, firstCell.getIndex());\n+        \/\/ We now scroll to item with index 3\n+        flow.scrollToTop(3);\n+        flow.layout();\n+        firstCell = VirtualFlowShim.cells_getFirst(flow.cells);\n+        \/\/ After scrolling, top-cell must have index 3\n+        \/\/ index(pixel);\n+        \/\/ 3 (0); 4 (100); 5 (200); 6 (300)\n+        assertEquals(3, firstCell.getIndex());\n+        IndexedCell thirdCell = VirtualFlowShim.cells_get(flow.cells, 3);\n+        double l3y = thirdCell.getLayoutY();\n+        \/\/ the third visible cell must be at 3 x 100 = 300\n+        assertEquals(l3y, 300, 0.1);\n+        assertEquals(6, thirdCell.getIndex());\n+        assertEquals(300, thirdCell.getLayoutY(), 1.);\n+\n+\n+        for (int i =0 ; i < heights.length; i++) {\n+            heights[i] = 220;\n+            flow.setCellDirty(i);\n+        }\n+        flow.setCellCount(heights.length);\n+        flow.layout();\n+        firstCell = VirtualFlowShim.cells_get(flow.cells, 0);\n+        \/\/ After resizing, top-cell must still have index 3\n+        assertEquals(3, firstCell.getIndex());\n+        assertEquals(0, firstCell.getLayoutY(),1);\n+        IndexedCell secondCell = VirtualFlowShim.cells_get(flow.cells, 1);\n+        assertEquals(4, secondCell.getIndex());\n+        assertEquals(220, secondCell.getLayoutY(),1);\n+        \/\/ And now scroll down 10 pixels\n+        flow.scrollPixels(10);\n+        flow.layout();\n+        firstCell = VirtualFlowShim.cells_get(flow.cells, 0);\n+        \/\/ After resizing, top-cell must still have index 3\n+        assertEquals(3, firstCell.getIndex());\n+        assertEquals(-10, firstCell.getLayoutY(),1);\n+    }\n@@ -1489,1 +1556,1 @@\n-   \/\/ VirtualFlowShim flow;\n+    VirtualFlowShim flow;\n@@ -1495,1 +1562,1 @@\n-     \/\/   this.flow = flow;\n+        this.flow = flow;\n@@ -1505,1 +1572,1 @@\n-\/\/        updateItem(getIndex(), getIndex() >= flow.getCellCount());\n+        updateItem(getIndex(), getIndex() >= flow.getCellCount());\n","filename":"modules\/javafx.controls\/src\/test\/java\/test\/javafx\/scene\/control\/skin\/VirtualFlowTest.java","additions":70,"deletions":3,"binary":false,"changes":73,"status":"modified"}]}