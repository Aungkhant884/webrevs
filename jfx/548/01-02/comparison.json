{"files":[{"patch":"@@ -35,1 +35,1 @@\n- * Used to access internal methods of SpotLight.\n+ * Used to access internal methods of DirectionalLight.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/DirectionalLightHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * can be rotated by setting a rotation transform on the {@code SpotLight}. For example, if the direction vector is\n- * {@code (1, 1, 1)} and the light is not rotated, it will point in the {@code (1, 1, 1)} direction, and if the light is\n- * rotated 90 degrees on the y axis, it will point in the {@code (1, 1, -1)} direction.\n+ * can be rotated by setting a rotation transform on the {@code DirectionalLight}. For example, if the direction vector\n+ * is {@code (1, 1, 1)} and the light is not rotated, it will point in the {@code (1, 1, 1)} direction, and if the light\n+ * is rotated 90 degrees on the y axis, it will point in the {@code (1, 1, -1)} direction.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/DirectionalLight.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,0 +86,3 @@\n+        directionalLight1.setDirection(new Point3D(-LIGHT_X_DIST, 0, LIGHT_Z_DIST));\n+        directionalLight2.setDirection(new Point3D(LIGHT_X_DIST, 0, LIGHT_Z_DIST));\n+\n","filename":"tests\/performance\/3DLighting\/attenuation\/Environment.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    public void testSpotlightAttenuation() {\n+    public void testDirectionalLight() {\n","filename":"tests\/system\/src\/test\/java\/test\/javafx\/scene\/lighting3D\/DirectionalLightTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}