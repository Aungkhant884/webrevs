{"files":[{"patch":"@@ -123,1 +123,1 @@\n-    private static volatile Map deviceDetails = null;\n+    private static volatile Map<Object, Object> deviceDetails = null;\n@@ -129,1 +129,1 @@\n-    public static void setDeviceDetails(Map details) {\n+    public static void setDeviceDetails(Map<Object, Object> details) {\n@@ -134,1 +134,1 @@\n-    public static Map getDeviceDetails() {\n+    public static Map<Object, Object> getDeviceDetails() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/Application.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                Class c = Class.forName(factory);\n+                Class<?> c = Class.forName(factory);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/PlatformFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -424,1 +424,1 @@\n-    protected abstract long _create(Map capabilities);\n+    protected abstract long _create(Map<Object, Object> capabilities);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/View.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-        Map ds = getDeviceDetails();\n+        Map<Object, Object> ds = getDeviceDetails();\n@@ -228,1 +228,1 @@\n-        Map map = getDeviceDetails();\n+        Map<Object, Object> map = getDeviceDetails();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkApplication.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    protected native long _create(Map caps);\n+    protected native long _create(Map<Object, Object> caps);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/gtk\/GtkView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,3 @@\n-import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n@@ -198,1 +200,1 @@\n-    private Object[] hashMapToArray(HashMap hashmap) {\n+    private Object[] mapToArray(Map<?, ?> map) {\n@@ -200,4 +202,4 @@\n-        if ((hashmap != null) && (hashmap.size() > 0)) {\n-            array = new Object[hashmap.size()];\n-            java.util.Set keys = hashmap.keySet();\n-            java.util.Iterator iterator = keys.iterator();\n+        if ((map != null) && (map.size() > 0)) {\n+            array = new Object[map.size()];\n+            Set<?> keys = map.keySet();\n+            Iterator<?> iterator = keys.iterator();\n@@ -209,1 +211,1 @@\n-                item[IosPasteboard.ObjectIndex] = hashmap.get(utf);\n+                item[IosPasteboard.ObjectIndex] = map.get(utf);\n@@ -216,1 +218,1 @@\n-    public long putItems(HashMap<String,Object>[] items, int supportedActions) {\n+    public long putItems(Map<String, Object>[] items, int supportedActions) {\n@@ -222,1 +224,1 @@\n-                array[i] = hashMapToArray(items[i]);\n+                array[i] = mapToArray(items[i]);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosPasteboard.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,0 +37,3 @@\n+import java.util.Iterator;\n+import java.util.Map;\n+import java.util.Set;\n@@ -67,2 +70,2 @@\n-        HashMap<String,Object> itemFirst = null; \/\/ used to handle paste as one item if we can\n-        HashMap<String,Object> itemList[] = null; \/\/ special case: multiple items for handling urls 10.6 style\n+        Map<String, Object> itemFirst = null; \/\/ used to handle paste as one item if we can\n+        Map<String, Object> itemList[] = null; \/\/ special case: multiple items for handling urls 10.6 style\n@@ -70,2 +73,2 @@\n-        java.util.Set keys = data.keySet();\n-        java.util.Iterator iterator = keys.iterator();\n+        Set<String> keys = data.keySet();\n+        Iterator<String> iterator = keys.iterator();\n@@ -74,1 +77,1 @@\n-            String mime = (String)iterator.next();\n+            String mime = iterator.next();\n@@ -105,1 +108,1 @@\n-                                itemList[count] = new HashMap();\n+                                itemList[count] = new HashMap<>();\n@@ -114,1 +117,1 @@\n-                        itemFirst = new HashMap();\n+                        itemFirst = new HashMap<>();\n@@ -123,1 +126,1 @@\n-                            itemFirst = new HashMap();\n+                            itemFirst = new HashMap<>();\n@@ -149,1 +152,1 @@\n-                            itemList[i] = new HashMap();\n+                            itemList[i] = new HashMap<>();\n@@ -156,1 +159,1 @@\n-                        itemFirst = new HashMap();\n+                        itemFirst = new HashMap<>();\n@@ -168,1 +171,1 @@\n-                HashMap temp = itemList[0];\n+                Map<String, Object> temp = itemList[0];\n@@ -171,2 +174,2 @@\n-                while (iterator.hasNext() == true) {\n-                    String utf = (String)iterator.next();\n+                while (iterator.hasNext()) {\n+                    String utf = iterator.next();\n@@ -310,1 +313,1 @@\n-    static private HashMap utm = null;\n+    private static Map<String, String> utm = null;\n@@ -313,1 +316,1 @@\n-            IosSystemClipboard.utm = new HashMap(6);\n+            IosSystemClipboard.utm = new HashMap<>(6);\n@@ -323,1 +326,1 @@\n-            return (String)IosSystemClipboard.utm.get(utf);\n+            return IosSystemClipboard.utm.get(utf);\n@@ -329,1 +332,1 @@\n-    static private HashMap mtu = null;\n+    static private Map<String, String> mtu = null;\n@@ -332,1 +335,1 @@\n-            IosSystemClipboard.mtu = new HashMap(4);\n+            IosSystemClipboard.mtu = new HashMap<>(4);\n@@ -341,1 +344,1 @@\n-            return (String)IosSystemClipboard.mtu.get(mime);\n+            return IosSystemClipboard.mtu.get(mime);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosSystemClipboard.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    @Override native protected long _create(Map caps);\n+    @Override native protected long _create(Map<Object, Object> caps);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/ios\/IosView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    @Override native protected long _create(Map caps);\n+    @Override native protected long _create(Map<Object, Object> caps);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/mac\/MacView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-    protected long _create(Map caps) {\n+    protected long _create(Map<Object, Object> caps) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/MonocleView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-        Map<String, String> uevent = new HashMap();\n+        Map<String, String> uevent = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/SysFS.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,0 @@\n-                Class cls;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/monocle\/TouchPipeline.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    @Override native protected long _create(Map caps);\n+    @Override native protected long _create(Map<Object, Object> caps);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/ui\/win\/WinView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            Class caller = walker.getCallerClass();\n+            Class<?> caller = walker.getCallerClass();\n@@ -64,1 +64,1 @@\n-            Class caller = walker.getCallerClass();\n+            Class<?> caller = walker.getCallerClass();\n@@ -116,1 +116,1 @@\n-    private static void loadLibraryInternal(String libraryName, List<String> dependencies, Class caller) {\n+    private static void loadLibraryInternal(String libraryName, List<String> dependencies, Class<?> caller) {\n@@ -196,1 +196,1 @@\n-    private static boolean loadLibraryFromResource(String libraryName, List<String> dependencies, Class caller) {\n+    private static boolean loadLibraryFromResource(String libraryName, List<String> dependencies, Class<?> caller) {\n@@ -204,1 +204,1 @@\n-    private static boolean installLibraryFromResource(String libraryName, List<String> dependencies, Class caller, boolean load) {\n+    private static boolean installLibraryFromResource(String libraryName, List<String> dependencies, Class<?> caller, boolean load) {\n@@ -235,1 +235,1 @@\n-    private static String cacheLibrary(InputStream is, String name, Class caller) throws IOException {\n+    private static String cacheLibrary(InputStream is, String name, Class<?> caller) throws IOException {\n@@ -386,1 +386,1 @@\n-                Class theClass = NativeLibLoader.class;\n+                Class<NativeLibLoader> theClass = NativeLibLoader.class;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/glass\/utils\/NativeLibLoader.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        private Class appClass = null;\n+        private Class<?> appClass = null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/HostServicesDelegate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-            ArrayList jcpList = new ArrayList();\n+            List<URL> jcpList = new ArrayList<>();\n@@ -582,1 +582,1 @@\n-        List args = new LinkedList();\n+        List<String> args = new LinkedList<>();\n@@ -604,1 +604,1 @@\n-        return (String[]) args.toArray(new String[0]);\n+        return args.toArray(new String[0]);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/LauncherImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,19 +56,0 @@\n-\n-    \/**\n-     * Constructs an empty Parameters object.\n-     *\/\n-    public ParametersImpl() {\n-    }\n-\n-    \/**\n-     * Constructs an Parameters object from the specified list of arguments.\n-     * The list may be null.\n-     *\n-     * @param args list of command line arguments\n-     *\/\n-    public ParametersImpl(List<String> args) {\n-        if (args != null) {\n-            init(args);\n-        }\n-    }\n-\n@@ -87,11 +68,0 @@\n-    \/**\n-     * Constructs an Parameters object from the specified map of named\n-     * parameters.\n-     *\n-     * @param params a map of parameters from which to initialize this\n-     * object.\n-     *\/\n-    public ParametersImpl(Map params, String[] arguments) {\n-        init(params, arguments);\n-    }\n-\n@@ -114,27 +84,0 @@\n-    \/**\n-     * Constructs an Parameters object from the specified map of named\n-     * parameters.\n-     *\n-     * @param params a map of parameters from which to initialize this\n-     * object.\n-     *\/\n-    private void init(Map params, String[] arguments) {\n-        for (Object e : params.entrySet()) {\n-            Object key = ((Map.Entry)e).getKey();\n-            if (validKey(key)) {\n-                Object value = params.get(key);\n-                if (value instanceof String) {\n-                    namedParams.put((String)key, (String)value);\n-                }\n-            }\n-        }\n-\n-        computeRawArgs();\n-        if (arguments != null) {\n-            for (String arg : arguments) {\n-                unnamedParams.add(arg);\n-                rawArgs.add(arg);\n-            }\n-        }\n-    }\n-\n@@ -153,19 +96,0 @@\n-    \/**\n-     * Validate the key. A key is valid if it is a String object that starts\n-     * with a letter or \"_\" character and does not contain an \"=\" character.\n-     *\n-     * @param key Object representing a potential key\n-     *\n-     * @return true if key is a valid key, otherwise false\n-     *\/\n-    private boolean validKey(Object key) {\n-        if (key instanceof String) {\n-            String keyStr = (String)key;\n-            if (keyStr.length() > 0 && keyStr.indexOf('=') < 0) {\n-                return validFirstChar(keyStr.charAt(0));\n-            }\n-        }\n-\n-        return false;\n-    }\n-\n@@ -216,15 +140,0 @@\n-    \/**\n-     * This method creates string representations of the name,value pairs in\n-     * the map for this Parameters object, and appends those strings to the\n-     * raw arguments array. The newly added strings are of the form:\n-     * \"--name=value\".\n-     *\/\n-    private void computeRawArgs() {\n-        ArrayList<String> keys = new ArrayList<>();\n-        keys.addAll(namedParams.keySet());\n-        Collections.sort(keys);\n-        for (String key : keys) {\n-            rawArgs.add(\"--\" + key + \"=\" + namedParams.get(key));\n-        }\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/ParametersImpl.java","additions":0,"deletions":91,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    public static void setApplicationName(final Class appClass) {\n+    public static void setApplicationName(final Class<?> appClass) {\n@@ -314,1 +314,1 @@\n-            Map map = com.sun.glass.ui.Application.getDeviceDetails();\n+            Map<Object, Object> map = com.sun.glass.ui.Application.getDeviceDetails();\n@@ -316,1 +316,1 @@\n-                map = new HashMap();\n+                map = new HashMap<>();\n@@ -400,1 +400,1 @@\n-            Class swingFXUtilsClass = Class.forName(\"com.sun.javafx.embed.swing.SwingFXUtilsImpl\");\n+            Class<?> swingFXUtilsClass = Class.forName(\"com.sun.javafx.embed.swing.SwingFXUtilsImpl\");\n@@ -929,1 +929,1 @@\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n+        var dummy = AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n@@ -939,1 +939,1 @@\n-            AccessController.doPrivileged((PrivilegedAction) () -> {\n+            AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n@@ -945,1 +945,1 @@\n-            AccessController.doPrivileged((PrivilegedAction) () -> {\n+            AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -269,1 +269,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -341,1 +341,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -423,1 +423,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -519,1 +519,1 @@\n-        final BitSet other = (BitSet) obj;\n+        final BitSet<?> other = (BitSet<?>) obj;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    public ParsedValue getParsedValue() {\n+    public ParsedValue<?, ?> getParsedValue() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/CascadingStyle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-        Map<String,String> descriptors = new HashMap(nEntries);\n+        Map<String, String> descriptors = new HashMap<>(nEntries);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/FontFaceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,3 +71,1 @@\n-\n-        else if(obj instanceof ParsedValueImpl) {\n-            ParsedValueImpl value = (ParsedValueImpl)obj;\n+        else if(obj instanceof ParsedValueImpl<?, ?> value) {\n@@ -76,3 +74,1 @@\n-\n-        else if(obj instanceof ParsedValueImpl[]) {\n-            ParsedValueImpl[] values = (ParsedValueImpl[])obj;\n+        else if(obj instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -93,2 +89,1 @@\n-        } else if(obj instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] values = (ParsedValueImpl[][])obj;\n+        } else if(obj instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -118,1 +113,1 @@\n-    public static boolean containsFontRelativeSize(ParsedValue parsedValue, boolean percentUnitsAreRelative) {\n+    public static boolean containsFontRelativeSize(ParsedValue<?, ?> parsedValue, boolean percentUnitsAreRelative) {\n@@ -132,3 +127,1 @@\n-\n-        else if(obj instanceof ParsedValue) {\n-            ParsedValue value = (ParsedValueImpl)obj;\n+        else if(obj instanceof ParsedValue<?, ?> value) {\n@@ -137,3 +130,1 @@\n-\n-        else if(obj instanceof ParsedValue[]) {\n-            ParsedValue[] values = (ParsedValue[])obj;\n+        else if(obj instanceof ParsedValue<?, ?>[] values) {\n@@ -148,2 +139,1 @@\n-        } else if(obj instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] values = (ParsedValueImpl[][])obj;\n+        } else if(obj instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -235,2 +225,1 @@\n-        if (value instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] layers = (ParsedValueImpl[][])value;\n+        if (value instanceof ParsedValueImpl<?, ?>[][] layers) {\n@@ -245,1 +234,1 @@\n-            for (ParsedValueImpl[] layer : layers) {\n+            for (ParsedValueImpl<?, ?>[] layer : layers) {\n@@ -254,1 +243,1 @@\n-                for(ParsedValueImpl val : layer) {\n+                for(ParsedValueImpl<?, ?> val : layer) {\n@@ -269,2 +258,1 @@\n-        } else if (value instanceof ParsedValueImpl[]) {\n-            ParsedValueImpl[] values = (ParsedValueImpl[])value;\n+        } else if (value instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -279,1 +267,1 @@\n-            for(ParsedValueImpl val : values) {\n+            for(ParsedValueImpl<?, ?> val : values) {\n@@ -309,1 +297,1 @@\n-        final ParsedValueImpl other = (ParsedValueImpl)obj;\n+        final ParsedValueImpl<?, ?> other = (ParsedValueImpl<?, ?>) obj;\n@@ -313,1 +301,1 @@\n-        if (this.value instanceof ParsedValueImpl[][]) {\n+        if (this.value instanceof ParsedValueImpl<?, ?>[][] thisValues) {\n@@ -315,4 +303,1 @@\n-            if (!(other.value instanceof ParsedValueImpl[][])) return false;\n-\n-            final ParsedValueImpl[][] thisValues = (ParsedValueImpl[][])this.value;\n-            final ParsedValueImpl[][] otherValues = (ParsedValueImpl[][])other.value;\n+            if (!(other.value instanceof ParsedValueImpl<?, ?>[][] otherValues)) return false;\n@@ -336,2 +321,2 @@\n-                    final ParsedValueImpl thisValue = thisValues[i][j];\n-                    final ParsedValueImpl otherValue = otherValues[i][j];\n+                    final ParsedValueImpl<?, ?> thisValue = thisValues[i][j];\n+                    final ParsedValueImpl<?, ?> otherValue = otherValues[i][j];\n@@ -347,3 +332,1 @@\n-        } else if (this.value instanceof ParsedValueImpl[]) {\n-\n-            if (!(other.value instanceof ParsedValueImpl[])) return false;\n+        } else if (this.value instanceof ParsedValueImpl<?, ?>[] thisValues) {\n@@ -351,2 +334,1 @@\n-            final ParsedValueImpl[] thisValues = (ParsedValueImpl[])this.value;\n-            final ParsedValueImpl[] otherValues = (ParsedValueImpl[])other.value;\n+            if (!(other.value instanceof ParsedValueImpl<?, ?>[] otherValues)) return false;\n@@ -360,2 +342,2 @@\n-                final ParsedValueImpl thisValue = thisValues[i];\n-                final ParsedValueImpl otherValue = otherValues[i];\n+                final ParsedValueImpl<?, ?> thisValue = thisValues[i];\n+                final ParsedValueImpl<?, ?> otherValue = otherValues[i];\n@@ -393,2 +375,1 @@\n-            if (value instanceof ParsedValueImpl[][]) {\n-                ParsedValueImpl[][] values = (ParsedValueImpl[][])value;\n+            if (value instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -397,1 +378,1 @@\n-                        final ParsedValueImpl val = values[i][j];\n+                        final ParsedValueImpl<?, ?> val = values[i][j];\n@@ -401,2 +382,1 @@\n-            } else if (value instanceof ParsedValueImpl[]) {\n-                ParsedValueImpl[] values = (ParsedValueImpl[])value;\n+            } else if (value instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -405,1 +385,1 @@\n-                    final ParsedValueImpl val = values[i];\n+                    final ParsedValueImpl<?, ?> val = values[i];\n@@ -445,1 +425,1 @@\n-        if (value instanceof ParsedValue) {\n+        if (value instanceof ParsedValue<?, ?> pv) {\n@@ -447,3 +427,3 @@\n-            final ParsedValue pv = (ParsedValue)value;\n-            if (pv instanceof ParsedValueImpl) {\n-                ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+\n+            if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                pvi.writeBinary(os, stringStore);\n@@ -451,1 +431,1 @@\n-                final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -455,1 +435,1 @@\n-        } else if (value instanceof ParsedValue[]) {\n+        } else if (value instanceof ParsedValue<?, ?>[] values) {\n@@ -457,7 +437,2 @@\n-            final ParsedValue[] values = (ParsedValue[])value;\n-            if (values != null) {\n-                os.writeByte(VALUE);\n-            } else {\n-                os.writeByte(NULL_VALUE);\n-            }\n-            final int nValues = (values != null) ? values.length : 0;\n+            os.writeByte(VALUE);\n+            final int nValues = values.length;\n@@ -468,3 +443,3 @@\n-                    final ParsedValue pv = values[v];\n-                    if (pv instanceof ParsedValueImpl) {\n-                        ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+                    final ParsedValue<?, ?> pv = values[v];\n+                    if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                        pvi.writeBinary(os, stringStore);\n@@ -472,1 +447,1 @@\n-                        final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                        final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -480,1 +455,1 @@\n-        } else if (value instanceof ParsedValue[][]) {\n+        } else if (value instanceof ParsedValue<?, ?>[][] layers) {\n@@ -482,7 +457,2 @@\n-            final ParsedValue[][] layers = (ParsedValue[][])value;\n-            if (layers != null) {\n-                os.writeByte(VALUE);\n-            } else {\n-                os.writeByte(NULL_VALUE);\n-            }\n-            final int nLayers = (layers != null) ? layers.length : 0;\n+            os.writeByte(VALUE);\n+            final int nLayers = layers.length;\n@@ -491,1 +461,1 @@\n-                final ParsedValue[] values = layers[l];\n+                final ParsedValue<?, ?>[] values = layers[l];\n@@ -502,3 +472,3 @@\n-                        final ParsedValue pv = values[v];\n-                        if (pv instanceof ParsedValueImpl) {\n-                            ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+                        final ParsedValue<?, ?> pv = values[v];\n+                        if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                            pvi.writeBinary(os, stringStore);\n@@ -506,1 +476,1 @@\n-                            final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                            final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -523,3 +493,2 @@\n-        } else if (value instanceof Enum) {\n-            final Enum e = (Enum)value;\n-            final int nameIndex = stringStore.addString(e.name());\n+        } else if (value instanceof Enum<?> value) {\n+            final int nameIndex = stringStore.addString(value.name());\n@@ -563,1 +532,1 @@\n-    public static ParsedValueImpl readBinary(int bssVersion, DataInputStream is, String[] strings)\n+    public static ParsedValueImpl<?, ?> readBinary(int bssVersion, DataInputStream is, String[] strings)\n@@ -569,1 +538,2 @@\n-        final StyleConverter converter = (hasType) ? StyleConverter.readBinary(is, strings) : null;\n+        @SuppressWarnings(\"unchecked\")\n+        final StyleConverter<Object, Object> converter = (StyleConverter<Object, Object>) (hasType ? StyleConverter.readBinary(is, strings) : null);\n@@ -574,2 +544,2 @@\n-            final ParsedValueImpl value = ParsedValueImpl.readBinary(bssVersion, is, strings);\n-            return new ParsedValueImpl(value, converter, lookup);\n+            final ParsedValueImpl<?, ?> value = ParsedValueImpl.readBinary(bssVersion, is, strings);\n+            return new ParsedValueImpl<>(value, converter, lookup);\n@@ -584,1 +554,1 @@\n-            final ParsedValueImpl[] values = (nVals > 0)\n+            final ParsedValueImpl<?, ?>[] values = (nVals > 0)\n@@ -595,1 +565,1 @@\n-            return new ParsedValueImpl(values, converter, lookup);\n+            return new ParsedValueImpl<>(values, converter, lookup);\n@@ -605,1 +575,1 @@\n-            final ParsedValueImpl[][] layers = nLayers > 0 ? new ParsedValueImpl[nLayers][0] : null;\n+            final ParsedValueImpl<?, ?>[][] layers = nLayers > 0 ? new ParsedValueImpl[nLayers][0] : null;\n@@ -628,1 +598,1 @@\n-            return new ParsedValueImpl(layers, converter, lookup);\n+            return new ParsedValueImpl<>(layers, converter, lookup);\n@@ -635,1 +605,1 @@\n-            return new ParsedValueImpl<Color,Color>(Color.color(r, g, b, a), converter, lookup);\n+            return new ParsedValueImpl<>(Color.color(r, g, b, a), converter, lookup);\n@@ -659,2 +629,1 @@\n-            ParsedValueImpl value = new ParsedValueImpl(ename, converter, lookup);\n-            return value;\n+            return new ParsedValueImpl<>(ename, converter, lookup);\n@@ -664,1 +633,1 @@\n-            return new ParsedValueImpl<Boolean,Boolean>(b, converter, lookup);\n+            return new ParsedValueImpl<>(b, converter, lookup);\n@@ -677,1 +646,1 @@\n-            return new ParsedValueImpl<Size,Size>(new Size(val,units), converter, lookup);\n+            return new ParsedValueImpl<>(new Size(val, units), converter, lookup);\n@@ -681,1 +650,1 @@\n-            return new ParsedValueImpl(str, converter, lookup);\n+            return new ParsedValueImpl<>(str, converter, lookup);\n@@ -687,1 +656,1 @@\n-                return new ParsedValueImpl(url, converter, lookup);\n+                return new ParsedValueImpl<>(url, converter, lookup);\n@@ -693,1 +662,1 @@\n-            return new ParsedValueImpl(null, converter, lookup);\n+            return new ParsedValueImpl<>(null, converter, lookup);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ParsedValueImpl.java","additions":63,"deletions":94,"binary":false,"changes":157,"status":"modified"},{"patch":"@@ -53,1 +53,2 @@\n-    private final static class PartitionKey<K> {\n+    private final static class PartitionKey {\n+        private final Object key;\n@@ -55,1 +56,3 @@\n-        private final K key;\n+        private PartitionKey(String key) {\n+            this.key = key;\n+        }\n@@ -57,1 +60,1 @@\n-        private PartitionKey(K key) {\n+        private PartitionKey(Set<StyleClass> key) {\n@@ -69,1 +72,1 @@\n-            final PartitionKey<K> other = (PartitionKey<K>) obj;\n+            final PartitionKey other = (PartitionKey) obj;\n@@ -130,1 +133,1 @@\n-                Partition partition = getPartition(id,map);\n+                Partition partition = getPartition(id, map);\n@@ -212,1 +215,1 @@\n-    private static Partition getPartition(PartitionKey id, Map<PartitionKey,Partition> map) {\n+    private static Partition getPartition(PartitionKey id, Map<PartitionKey, Partition> map) {\n@@ -229,1 +232,1 @@\n-    private static final PartitionKey WILDCARD = new PartitionKey<>(\"*\");\n+    private static final PartitionKey WILDCARD = new PartitionKey(\"*\");\n@@ -261,1 +264,1 @@\n-                ? new PartitionKey<>(selectorStyleClass)\n+                ? new PartitionKey(selectorStyleClass)\n@@ -324,1 +327,1 @@\n-                ? new PartitionKey<>(selectorStyleClass)\n+                ? new PartitionKey(selectorStyleClass)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SelectorPartitioning.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-public class SubCssMetaData<T> extends CssMetaData<Node,T> {\n-    public SubCssMetaData(String property, StyleConverter converter, T initialValue) {\n+public class SubCssMetaData<T> extends CssMetaData<Node, T> {\n+    public SubCssMetaData(String property, StyleConverter<?, T> converter, T initialValue) {\n@@ -41,1 +41,1 @@\n-    public SubCssMetaData(String property, StyleConverter converter) {\n+    public SubCssMetaData(String property, StyleConverter<?, T> converter) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SubCssMetaData.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-            WeakReference ref = fontResource.getStrikeMap().get(desc);\n+            WeakReference<FontStrike> ref = fontResource.getStrikeMap().get(desc);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/CompositeStrikeDisposer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,2 +47,2 @@\n-    private static final ReferenceQueue queue = new ReferenceQueue();\n-    private static final Hashtable records = new Hashtable();\n+    private static final ReferenceQueue<Object> queue = new ReferenceQueue<>();\n+    private static final Hashtable<Object, DisposerRecord> records = new Hashtable<>();\n@@ -57,1 +57,1 @@\n-            new java.security.PrivilegedAction() {\n+            new java.security.PrivilegedAction<>() {\n@@ -86,2 +86,2 @@\n-    public static WeakReference addRecord(Object target, DisposerRecord rec) {\n-        WeakReference ref = new WeakReference(target, queue);\n+    public static <T> WeakReference<T> addRecord(T target, DisposerRecord rec) {\n+        WeakReference<T> ref = new WeakReference<>(target, queue);\n@@ -97,2 +97,2 @@\n-                ((Reference)obj).clear();\n-                DisposerRecord rec = (DisposerRecord)records.remove(obj);\n+                ((Reference<Object>) obj).clear();\n+                DisposerRecord rec = records.remove(obj);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/Disposer.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.util.List;\n@@ -309,4 +310,2 @@\n-    public static ArrayList<String>\n-        getFileNames(FcCompFont font, boolean fallBacksOnly) {\n-\n-        ArrayList fileList = new ArrayList<String>();\n+    public static List<String> getFileNames(FcCompFont font, boolean fallBacksOnly) {\n+        List<String> fileList = new ArrayList<>();\n@@ -323,2 +322,1 @@\n-    public static ArrayList<String>\n-        getFontNames(FcCompFont font, boolean fallBacksOnly) {\n+    public static List<String> getFontNames(FcCompFont font, boolean fallBacksOnly) {\n@@ -326,1 +324,1 @@\n-        ArrayList fontList = new ArrayList<String>();\n+        List<String> fontList = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontConfigManager.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-                            (java.security.PrivilegedAction) () -> {\n+                            (java.security.PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/FontFileWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-    Map<FontStrikeDesc, WeakReference<PrismFontStrike>> strikeMap = new ConcurrentHashMap<>();\n+    Map<FontStrikeDesc, WeakReference<FontStrike>> strikeMap = new ConcurrentHashMap<>();\n@@ -328,1 +328,1 @@\n-    public Map getStrikeMap() {\n+    public Map<FontStrikeDesc, WeakReference<FontStrike>> getStrikeMap() {\n@@ -332,1 +332,1 @@\n-    protected abstract PrismFontStrike createStrike(float size,\n+    protected abstract PrismFontStrike<?> createStrike(float size,\n@@ -341,2 +341,2 @@\n-        WeakReference<PrismFontStrike> ref = strikeMap.get(desc);\n-        PrismFontStrike strike = null;\n+        WeakReference<FontStrike> ref = strikeMap.get(desc);\n+        FontStrike strike = null;\n@@ -348,1 +348,1 @@\n-            DisposerRecord disposer = strike.getDisposer();\n+            DisposerRecord disposer = ((PrismFontStrike<?>) strike).getDisposer();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontFile.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-            Class plc = Class.forName(\"com.sun.prism.GraphicsPipeline\");\n+            Class<?> plc = Class.forName(\"com.sun.prism.GraphicsPipeline\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -226,1 +226,1 @@\n-        final PrismFontStrike other = (PrismFontStrike) obj;\n+        final PrismFontStrike<?> other = (PrismFontStrike<?>) obj;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/PrismFontStrike.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.util.ArrayList;\n+import java.util.List;\n@@ -135,2 +135,2 @@\n-        ArrayList<String> linkedFontFiles = FontConfigManager.getFileNames(font, false);\n-        ArrayList<String> linkedFontNames = FontConfigManager.getFontNames(font, false);\n+        List<String> linkedFontFiles = FontConfigManager.getFileNames(font, false);\n+        List<String> linkedFontNames = FontConfigManager.getFontNames(font, false);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/font\/freetype\/FTFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-    private static final Vector EmptyCurves = new Vector();\n+    private static final Vector<Curve> EmptyCurves = new Vector<>();\n@@ -98,1 +98,1 @@\n-    private Vector curves;\n+    private Vector<Curve> curves;\n@@ -117,2 +117,2 @@\n-        if (s instanceof Area) {\n-            curves = ((Area) s).curves;\n+        if (s instanceof Area a) {\n+            curves = a.curves;\n@@ -128,2 +128,2 @@\n-    private static Vector pathToCurves(PathIterator pi) {\n-        Vector curves = new Vector();\n+    private static Vector<Curve> pathToCurves(PathIterator pi) {\n+        Vector<Curve> curves = new Vector<>();\n@@ -338,1 +338,1 @@\n-        curves = new Vector();\n+        curves = new Vector<>();\n@@ -359,1 +359,1 @@\n-        Enumeration enum_ = curves.elements();\n+        Enumeration<Curve> enum_ = curves.elements();\n@@ -361,1 +361,1 @@\n-            if (((Curve) enum_.nextElement()).getOrder() > 1) {\n+            if (enum_.nextElement().getOrder() > 1) {\n@@ -382,2 +382,2 @@\n-        Curve c1 = (Curve) curves.get(1);\n-        Curve c2 = (Curve) curves.get(2);\n+        Curve c1 = curves.get(1);\n+        Curve c2 = curves.get(2);\n@@ -411,1 +411,1 @@\n-        Enumeration enum_ = curves.elements();\n+        Enumeration<Curve> enum_ = curves.elements();\n@@ -414,1 +414,1 @@\n-            if (((Curve) enum_.nextElement()).getOrder() == 0) {\n+            if (enum_.nextElement().getOrder() == 0) {\n@@ -431,1 +431,1 @@\n-            Curve c = (Curve) curves.get(0);\n+            Curve c = curves.get(0);\n@@ -435,1 +435,1 @@\n-                ((Curve) curves.get(i)).enlarge(r);\n+                curves.get(i).enlarge(r);\n@@ -477,1 +477,1 @@\n-        Vector c = new AreaOp.XorOp().calculate(this.curves, other.curves);\n+        Vector<Curve> c = new AreaOp.XorOp().calculate(this.curves, other.curves);\n@@ -523,1 +523,1 @@\n-        Enumeration enum_ = curves.elements();\n+        Enumeration<Curve> enum_ = curves.elements();\n@@ -526,1 +526,1 @@\n-            Curve c = (Curve) enum_.nextElement();\n+            Curve c = enum_.nextElement();\n@@ -615,1 +615,1 @@\n-    private Vector curves;\n+    private Vector<Curve> curves;\n@@ -620,1 +620,1 @@\n-    public AreaIterator(Vector curves, BaseTransform tx) {\n+    public AreaIterator(Vector<Curve> curves, BaseTransform tx) {\n@@ -624,1 +624,1 @@\n-            thiscurve = (Curve) curves.get(0);\n+            thiscurve = curves.get(0);\n@@ -649,1 +649,1 @@\n-                thiscurve = (Curve) curves.get(index);\n+                thiscurve = curves.get(index);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Area.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import java.util.Vector;\n-import java.util.Enumeration;\n-import java.util.Comparator;\n@@ -32,0 +29,6 @@\n+import java.util.Comparator;\n+import java.util.Enumeration;\n+import java.util.Vector;\n+import java.util.function.Consumer;\n+\n+import javafx.beans.property.SimpleStringProperty;\n@@ -34,0 +37,3 @@\n+\n+    private static final Vector<Curve> EMPTY = new Vector<>();\n+\n@@ -168,2 +174,3 @@\n-    public Vector calculate(Vector left, Vector right) {\n-        Vector edges = new Vector();\n+    public Vector<Curve> calculate(Vector<Curve> left, Vector<Curve> right) {\n+        Vector<Edge> edges = new Vector<>();\n+\n@@ -172,1 +179,3 @@\n-        edges = pruneEdges(edges);\n+\n+        Vector<Curve> curves = pruneEdges(edges);\n+\n@@ -175,2 +184,2 @@\n-            int numcurves = edges.size();\n-            Curve[] curvelist = (Curve[]) edges.toArray(new Curve[numcurves]);\n+            int numcurves = curves.size();\n+            Curve[] curvelist = curves.toArray(new Curve[numcurves]);\n@@ -181,1 +190,1 @@\n-        return edges;\n+        return curves;\n@@ -184,2 +193,2 @@\n-    private static void addEdges(Vector edges, Vector curves, int curvetag) {\n-        Enumeration enum_ = curves.elements();\n+    private static void addEdges(Vector<Edge> edges, Vector<Curve> curves, int curvetag) {\n+        Enumeration<Curve> enum_ = curves.elements();\n@@ -187,1 +196,1 @@\n-            Curve c = (Curve) enum_.nextElement();\n+            Curve c = enum_.nextElement();\n@@ -194,3 +203,3 @@\n-    private static Comparator YXTopComparator = (o1, o2) -> {\n-        Curve c1 = ((Edge) o1).getCurve();\n-        Curve c2 = ((Edge) o2).getCurve();\n+    private static Comparator<Edge> YXTopComparator = (o1, o2) -> {\n+        Curve c1 = o1.getCurve();\n+        Curve c2 = o2.getCurve();\n@@ -209,1 +218,1 @@\n-    private Vector pruneEdges(Vector edges) {\n+    private Vector<Curve> pruneEdges(Vector<Edge> edges) {\n@@ -212,1 +221,1 @@\n-            return edges;\n+            return EMPTY;\n@@ -214,1 +223,1 @@\n-        Edge[] edgelist = (Edge[]) edges.toArray(new Edge[numedges]);\n+        Edge[] edgelist = edges.toArray(new Edge[numedges]);\n@@ -228,3 +237,3 @@\n-        Vector subcurves = new Vector();\n-        Vector chains = new Vector();\n-        Vector links = new Vector();\n+        Vector<CurveLink> subcurves = new Vector<>();\n+        Vector<ChainEnd> chains = new Vector<>();\n+        Vector<CurveLink> links = new Vector<>();\n@@ -399,1 +408,1 @@\n-                    CurveLink link = (CurveLink) links.elementAt(i);\n+                    CurveLink link = links.elementAt(i);\n@@ -410,2 +419,2 @@\n-        Vector ret = new Vector();\n-        Enumeration enum_ = subcurves.elements();\n+        Vector<Curve> ret = new Vector<>();\n+        Enumeration<CurveLink> enum_ = subcurves.elements();\n@@ -413,1 +422,1 @@\n-            CurveLink link = (CurveLink) enum_.nextElement();\n+            CurveLink link = enum_.nextElement();\n@@ -427,1 +436,1 @@\n-    public static void finalizeSubCurves(Vector subcurves, Vector chains) {\n+    private static void finalizeSubCurves(Vector<CurveLink> subcurves, Vector<ChainEnd> chains) {\n@@ -451,3 +460,3 @@\n-    public static void resolveLinks(Vector subcurves,\n-                                    Vector chains,\n-                                    Vector links)\n+    private static void resolveLinks(Vector<CurveLink> subcurves,\n+                                    Vector<ChainEnd> chains,\n+                                    Vector<CurveLink> links)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/AreaOp.java","additions":38,"deletions":29,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-    public static Crossings findCrossings(Vector curves,\n+    public static Crossings findCrossings(Vector<Curve> curves,\n@@ -84,1 +84,1 @@\n-        Enumeration enum_ = curves.elements();\n+        Enumeration<Curve> enum_ = curves.elements();\n@@ -86,1 +86,1 @@\n-            Curve c = (Curve) enum_.nextElement();\n+            Curve c = enum_.nextElement();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Crossings.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-    public static void insertMove(Vector curves, double x, double y) {\n+    public static void insertMove(Vector<Curve> curves, double x, double y) {\n@@ -40,1 +40,1 @@\n-    public static void insertLine(Vector curves,\n+    public static void insertLine(Vector<Curve> curves,\n@@ -57,1 +57,1 @@\n-    public static void insertQuad(Vector curves, double tmp[],\n+    public static void insertQuad(Vector<Curve> curves, double tmp[],\n@@ -76,1 +76,1 @@\n-    public static void insertCubic(Vector curves, double tmp[],\n+    public static void insertCubic(Vector<Curve> curves, double tmp[],\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Curve.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-    public static void insert(Vector curves, double tmp[],\n+    public static void insert(Vector<Curve> curves, double tmp[],\n@@ -74,1 +74,1 @@\n-    public static void addInstance(Vector curves,\n+    public static void addInstance(Vector<Curve> curves,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    public static void insert(Vector curves, double tmp[],\n+    public static void insert(Vector<Curve> curves, double tmp[],\n@@ -105,1 +105,1 @@\n-    public static void addInstance(Vector curves,\n+    public static void addInstance(Vector<Curve> curves,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/geom\/Order3.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    private static native void initJPEGMethodIDs(Class inputStreamClass);\n+    private static native void initJPEGMethodIDs(Class<?> inputStreamClass);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/iio\/jpeg\/JPEGImageLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    static int[] getColors(BytePixelGetter getter, PixelSetter setter) {\n+    static int[] getColors(BytePixelGetter getter, PixelSetter<?> setter) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/image\/impl\/ByteIndexed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    protected final AsyncOperationListener listener;\n+    protected final AsyncOperationListener<V> listener;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/runtime\/async\/AbstractAsyncOperation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-            Iterator iter = list.iterator();\n+            Iterator<String> iter = list.iterator();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/runtime\/async\/AbstractRemoteResource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -303,1 +303,1 @@\n-    public static List<Style> getMatchingStyles(CssMetaData cssMetaData, Styleable styleable) {\n+    public static List<Style> getMatchingStyles(CssMetaData<Styleable, ?> cssMetaData, Styleable styleable) {\n@@ -371,1 +371,1 @@\n-        List<Style> getMatchingStyles(CssMetaData cssMetaData, Styleable styleable);\n+        List<Style> getMatchingStyles(CssMetaData<Styleable, ?> cssMetaData, Styleable styleable);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/NodeHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public final class BackgroundPositionConverter extends StyleConverter<ParsedValue[], BackgroundPosition> {\n+public final class BackgroundPositionConverter extends StyleConverter<ParsedValue<?, Size>[], BackgroundPosition> {\n@@ -51,2 +51,2 @@\n-    public BackgroundPosition convert(ParsedValue<ParsedValue[], BackgroundPosition> value, Font font) {\n-        ParsedValue[] positions = value.getValue();\n+    public BackgroundPosition convert(ParsedValue<ParsedValue<?, Size>[], BackgroundPosition> value, Font font) {\n+        ParsedValue<?, Size>[] positions = value.getValue();\n@@ -55,4 +55,4 @@\n-        final Size top = (Size)positions[0].convert(font);\n-        final Size right = (Size)positions[1].convert(font);\n-        final Size bottom = (Size)positions[2].convert(font);\n-        final Size left = (Size)positions[3].convert(font);\n+        final Size top = positions[0].convert(font);\n+        final Size right = positions[1].convert(font);\n+        final Size bottom = positions[2].convert(font);\n+        final Size left = positions[3].convert(font);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundPositionConverter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public final class BackgroundSizeConverter  extends StyleConverter<ParsedValue[], BackgroundSize> {\n+public final class BackgroundSizeConverter  extends StyleConverter<ParsedValue<?, ?>[], BackgroundSize> {\n@@ -50,2 +50,2 @@\n-    public BackgroundSize convert(ParsedValue<ParsedValue[], BackgroundSize> value, Font font) {\n-        ParsedValue[] values = value.getValue();\n+    public BackgroundSize convert(ParsedValue<ParsedValue<?, ?>[], BackgroundSize> value, Font font) {\n+        ParsedValue<?, ?>[] values = value.getValue();\n@@ -74,1 +74,1 @@\n-                ? BooleanConverter.getInstance().convert(values[2], font) : false;\n+                ? BooleanConverter.getInstance().convert((ParsedValue<String, Boolean>) values[2], font) : false;\n@@ -77,1 +77,1 @@\n-                ? BooleanConverter.getInstance().convert(values[3], font) : false;\n+                ? BooleanConverter.getInstance().convert((ParsedValue<String, Boolean>) values[3], font) : false;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundSizeConverter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public final class BorderImageSliceConverter extends StyleConverter<ParsedValue[], BorderImageSlices> {\n+public final class BorderImageSliceConverter extends StyleConverter<ParsedValue<?, ?>[], BorderImageSlices> {\n@@ -50,1 +50,1 @@\n-    public BorderImageSlices convert(ParsedValue<ParsedValue[], BorderImageSlices> layer, Font font) {\n+    public BorderImageSlices convert(ParsedValue<ParsedValue<?, ?>[], BorderImageSlices> layer, Font font) {\n@@ -52,1 +52,1 @@\n-        final ParsedValue[] values = layer.getValue();\n+        final ParsedValue<?, ?>[] values = layer.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageSliceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class BorderImageWidthConverter extends StyleConverter<ParsedValue[], BorderWidths> {\n+public class BorderImageWidthConverter extends StyleConverter<ParsedValue<?, Size>[], BorderWidths> {\n@@ -50,2 +50,2 @@\n-    public BorderWidths convert(ParsedValue<ParsedValue[], BorderWidths> value, Font font) {\n-        ParsedValue[] sides = value.getValue();\n+    public BorderWidths convert(ParsedValue<ParsedValue<?, Size>[], BorderWidths> value, Font font) {\n+        ParsedValue<?, Size>[] sides = value.getValue();\n@@ -56,1 +56,1 @@\n-        ParsedValue val = sides[0];\n+        ParsedValue<?, Size> val = sides[0];\n@@ -60,1 +60,1 @@\n-            Size size = (Size)val.convert(font);\n+            Size size = val.convert(font);\n@@ -69,1 +69,1 @@\n-            Size size = (Size)val.convert(font);\n+            Size size = val.convert(font);\n@@ -78,1 +78,1 @@\n-            Size size = (Size)val.convert(font);\n+            Size size = val.convert(font);\n@@ -87,1 +87,1 @@\n-            Size size = (Size)val.convert(font);\n+            Size size = val.convert(font);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageWidthConverter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.css.Size;\n@@ -38,1 +39,1 @@\n-public class BorderImageWidthsSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], BorderWidths>[], BorderWidths[]> {\n+public class BorderImageWidthsSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], BorderWidths>[], BorderWidths[]> {\n@@ -47,1 +48,1 @@\n-    public BorderWidths[] convert(ParsedValue<ParsedValue<ParsedValue[], BorderWidths>[], BorderWidths[]> value, Font font) {\n+    public BorderWidths[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], BorderWidths>[], BorderWidths[]> value, Font font) {\n@@ -64,1 +65,1 @@\n-        ParsedValue<ParsedValue[], BorderWidths>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<?, Size>[], BorderWidths>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageWidthsSequenceConverter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public final class BorderStrokeStyleSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]> {\n+public final class BorderStrokeStyleSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]> {\n@@ -55,1 +55,1 @@\n-    public BorderStrokeStyle[] convert(ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[], BorderStrokeStyle[]> value, Font font) {\n+    public BorderStrokeStyle[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]> value, Font font) {\n@@ -57,1 +57,1 @@\n-        ParsedValue<ParsedValue[],BorderStrokeStyle>[] borders = value.getValue();\n+        ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[] borders = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderStrokeStyleSequenceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public class BorderStyleConverter  extends StyleConverter<ParsedValue[], BorderStrokeStyle> {\n+public class BorderStyleConverter  extends StyleConverter<ParsedValue<?, ?>[], BorderStrokeStyle> {\n@@ -65,5 +65,5 @@\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> NONE = new ParsedValueImpl<>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> HIDDEN = new ParsedValueImpl<>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> DOTTED = new ParsedValueImpl<>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> DASHED = new ParsedValueImpl<>(null, null);\n-    public static final ParsedValueImpl<ParsedValue[],Number[]> SOLID = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue<?, ?>[],Number[]> NONE = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue<?, ?>[],Number[]> HIDDEN = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue<?, ?>[],Number[]> DOTTED = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue<?, ?>[],Number[]> DASHED = new ParsedValueImpl<>(null, null);\n+    public static final ParsedValueImpl<ParsedValue<?, ?>[],Number[]> SOLID = new ParsedValueImpl<>(null, null);\n@@ -85,1 +85,1 @@\n-    public BorderStrokeStyle convert(ParsedValue<ParsedValue[],BorderStrokeStyle> value, Font font) {\n+    public BorderStrokeStyle convert(ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle> value, Font font) {\n@@ -87,1 +87,1 @@\n-        final ParsedValue[] values = value.getValue();\n+        final ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderStyleConverter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.css.Size;\n@@ -41,1 +42,1 @@\n-public final class LayeredBackgroundPositionConverter extends StyleConverter<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]> {\n+public final class LayeredBackgroundPositionConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]> {\n@@ -54,2 +55,2 @@\n-    public BackgroundPosition[] convert(ParsedValue<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]> value, Font font) {\n-        ParsedValue<ParsedValue[], BackgroundPosition>[] layers = value.getValue();\n+    public BackgroundPosition[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]> value, Font font) {\n+        ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBackgroundPositionConverter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public final class LayeredBackgroundSizeConverter extends StyleConverter<ParsedValue<ParsedValue[], BackgroundSize>[], BackgroundSize[]> {\n+public final class LayeredBackgroundSizeConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[], BackgroundSize[]> {\n@@ -56,2 +56,2 @@\n-    public BackgroundSize[] convert(ParsedValue<ParsedValue<ParsedValue[], BackgroundSize>[], BackgroundSize[]> value, Font font) {\n-        ParsedValue<ParsedValue[], BackgroundSize>[] layers = value.getValue();\n+    public BackgroundSize[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[], BackgroundSize[]> value, Font font) {\n+        ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBackgroundSizeConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        extends StyleConverter<ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]> {\n+        extends StyleConverter<ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]> {\n@@ -65,1 +65,1 @@\n-    convert(ParsedValue<ParsedValue<ParsedValue<ParsedValue[], BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]> value, Font font) {\n+    convert(ParsedValue<ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]> value, Font font) {\n@@ -67,1 +67,1 @@\n-        ParsedValue<ParsedValue<ParsedValue[], BorderStrokeStyle>[],BorderStrokeStyle[]>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBorderStyleConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    public static final class Converter extends StyleConverter<ParsedValue[], Margins> {\n+    public static final class Converter extends StyleConverter<ParsedValue<?, Size>[], Margins> {\n@@ -92,1 +92,1 @@\n-        public Margins convert(ParsedValue<ParsedValue[], Margins> value, Font font) {\n+        public Margins convert(ParsedValue<ParsedValue<?, Size>[], Margins> value, Font font) {\n@@ -148,1 +148,1 @@\n-    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], Margins>[], Margins[]> {\n+    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], Margins>[], Margins[]> {\n@@ -159,2 +159,2 @@\n-        public Margins[] convert(ParsedValue<ParsedValue<ParsedValue[], Margins>[], Margins[]> value, Font font) {\n-            ParsedValue<ParsedValue[], Margins>[] layers = value.getValue();\n+        public Margins[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], Margins>[], Margins[]> value, Font font) {\n+            ParsedValue<ParsedValue<?, Size>[], Margins>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/Margins.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public final class SliceSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], BorderImageSlices>[], BorderImageSlices[]> {\n+public final class SliceSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[], BorderImageSlices[]> {\n@@ -44,1 +44,1 @@\n-    public BorderImageSlices[] convert(ParsedValue<ParsedValue<ParsedValue[], BorderImageSlices>[], BorderImageSlices[]> value, Font font) {\n+    public BorderImageSlices[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[], BorderImageSlices[]> value, Font font) {\n@@ -61,1 +61,1 @@\n-        ParsedValue<ParsedValue[], BorderImageSlices>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/SliceSequenceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -210,1 +210,1 @@\n-    protected Stack<Node> traversalNodeStack = new Stack();\n+    protected Stack<Node> traversalNodeStack = new Stack<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/traversal\/Hueristic2D.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -560,1 +560,1 @@\n-            Toolkit.getToolkit().addRenderJob(new RenderJob(f));\n+            Toolkit.getToolkit().addRenderJob(new RenderJob<>(f));\n@@ -744,1 +744,1 @@\n-        Texture tex = ((PrTexture) f).getTextureObject();\n+        Texture tex = ((PrTexture<?>) f).getTextureObject();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/sg\/prism\/NGCanvas.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-    void done(RenderJob job);\n+    void done(RenderJob<?> job);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/CompletionListener.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    public Future addRenderJob(RenderJob rj) {\n+    public Future<?> addRenderJob(RenderJob<?> rj) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/DummyToolkit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-                Class clazz = Class.forName(\"java.awt.AWTPermission\",\n+                Class<?> clazz = Class.forName(\"java.awt.AWTPermission\",\n@@ -52,1 +52,1 @@\n-                Constructor c = clazz.getConstructor(String.class);\n+                Constructor<?> c = clazz.getConstructor(String.class);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/PermissionHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    public PixelFormat getPlatformPixelFormat();\n+    public PixelFormat<? extends Buffer> getPlatformPixelFormat();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/PlatformImage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            Class klass = Class.forName(className);\n+            Class<?> klass = Class.forName(className);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/PrintPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public class RenderJob extends FutureTask {\n+public class RenderJob<T> extends FutureTask<T> {\n@@ -38,1 +38,1 @@\n-    private Object             futureReturn;\n+    private T futureReturn;\n@@ -85,2 +85,2 @@\n-    @Override public Object get() {\n-        return (futureReturn);\n+    @Override public T get() {\n+        return futureReturn;\n@@ -89,1 +89,1 @@\n-    public void setFutureReturn(Object o) {\n+    public void setFutureReturn(T o) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/RenderJob.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,0 +29,4 @@\n+import java.util.List;\n+\n+import com.sun.prism.Image;\n+\n@@ -97,1 +101,1 @@\n-    public void setIcons(java.util.List icons);\n+    public void setIcons(List<Object> icons);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/TKStage.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    private static final Map gradientMap = new WeakHashMap();\n+    private static final Map<Paint, Object> gradientMap = new WeakHashMap<>();\n@@ -244,1 +244,1 @@\n-            Class clz = null;\n+            Class<?> clz = null;\n@@ -561,1 +561,1 @@\n-    public abstract Future addRenderJob(RenderJob rj);\n+    public abstract Future<?> addRenderJob(RenderJob<?> rj);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/Toolkit.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import com.sun.prism.Image;\n+\n@@ -134,1 +136,1 @@\n-    public void setIcons(List icons) {\n+    public void setIcons(List<Object> icons) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/EmbeddedStage.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-    @Override public void done(RenderJob job) {\n+    @Override public void done(RenderJob<?> job) {\n@@ -330,1 +330,1 @@\n-             quantum.addRenderJob(new RenderJob(viewPainter, rj -> latch.countDown()));\n+             quantum.addRenderJob(new RenderJob<>(viewPainter, rj -> latch.countDown()));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PaintCollector.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-class PaintRenderJob extends RenderJob {\n+class PaintRenderJob extends RenderJob<Object> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/PaintRenderJob.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-                    Map device = GraphicsPipeline.getPipeline().getDeviceDetails();\n+                    Map<Object, Object> device = GraphicsPipeline.getPipeline().getDeviceDetails();\n@@ -99,1 +99,1 @@\n-                        device = new HashMap();\n+                        device = new HashMap<>();\n@@ -103,1 +103,1 @@\n-                    Map map =  Application.getDeviceDetails();\n+                    Map<Object, Object> map =  Application.getDeviceDetails();\n@@ -167,1 +167,1 @@\n-        final RenderJob job = new RenderJob(factoryCreator, createDone);\n+        final RenderJob<?> job = new RenderJob<>(factoryCreator, createDone);\n@@ -190,1 +190,1 @@\n-            final RenderJob job = new RenderJob(presentableDisposer, null);\n+            final RenderJob<?> job = new RenderJob<>(presentableDisposer, null);\n@@ -217,1 +217,1 @@\n-        return (RenderJob)runnable;\n+        return (RenderJob<T>)runnable;\n@@ -220,1 +220,1 @@\n-    protected Future submitRenderJob(RenderJob r) {\n+    protected Future<?> submitRenderJob(RenderJob<?> r) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumRenderer.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -483,1 +483,1 @@\n-    @Override public Future addRenderJob(RenderJob r) {\n+    @Override public Future<?> addRenderJob(RenderJob<?> r) {\n@@ -813,1 +813,1 @@\n-            AsyncOperationListener listener, String url,\n+            AsyncOperationListener<? extends ImageLoader> listener, String url,\n@@ -815,1 +815,1 @@\n-        return new PrismImageLoader2.AsyncImageLoader(listener, url, width, height, preserveRatio, smooth);\n+        return new PrismImageLoader2.AsyncImageLoader((AsyncOperationListener<PrismImageLoader2>) listener, url, width, height, preserveRatio, smooth);\n@@ -1480,1 +1480,1 @@\n-        RenderJob re = new RenderJob(new Runnable() {\n+        RenderJob<?> re = new RenderJob<>(new Runnable() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/QuantumToolkit.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import static com.sun.javafx.FXPermissions.SET_WINDOW_ALWAYS_ON_TOP_PERMISSION;\n+import static com.sun.javafx.FXPermissions.UNRESTRICTED_FULL_SCREEN_PERMISSION;\n+\n@@ -29,0 +32,1 @@\n+import java.security.AccessControlContext;\n@@ -32,1 +36,0 @@\n-import java.security.AccessControlContext;\n@@ -36,0 +39,1 @@\n+import java.util.Locale;\n@@ -37,5 +41,1 @@\n-\n-import javafx.scene.input.KeyCombination;\n-import javafx.stage.Modality;\n-import javafx.stage.Stage;\n-import javafx.stage.StageStyle;\n+import java.util.ResourceBundle;\n@@ -44,1 +44,4 @@\n-import com.sun.glass.ui.*;\n+import com.sun.glass.ui.Application;\n+import com.sun.glass.ui.Screen;\n+import com.sun.glass.ui.View;\n+import com.sun.glass.ui.Window;\n@@ -50,0 +53,1 @@\n+import com.sun.javafx.tk.PlatformImage;\n@@ -54,3 +58,5 @@\n-import java.util.Locale;\n-import java.util.ResourceBundle;\n-import static com.sun.javafx.FXPermissions.*;\n+\n+import javafx.scene.input.KeyCombination;\n+import javafx.stage.Modality;\n+import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n@@ -355,1 +361,1 @@\n-    static Image findBestImage(java.util.List icons, int width, int height) {\n+    static Image findBestImage(List<Object> icons, int width, int height) {\n@@ -365,1 +371,1 @@\n-            Image im = (Image)icon;\n+            Image im = (Image) icon;\n@@ -433,1 +439,1 @@\n-    @Override public void setIcons(java.util.List icons) {\n+    @Override public void setIcons(List<Object> icons) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/tk\/quantum\/WindowStage.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    public static Object getModule(Class clazz) {\n+    public static Object getModule(Class<?> clazz) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/ModuleHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private final ReferenceQueue garbage = new ReferenceQueue();\n+    private final ReferenceQueue<E> garbage = new ReferenceQueue<>();\n@@ -53,2 +53,3 @@\n-    private Object strongRef = new Object();\n-    private ListEntry head = new ListEntry(strongRef, garbage);\n+    @SuppressWarnings(\"unchecked\")\n+    private E strongRef = (E) new Object();\n+    private ListEntry<E> head = new ListEntry<>(strongRef, garbage);\n@@ -64,1 +65,1 @@\n-        new ListEntry(obj, garbage).insert(head.prev);\n+        new ListEntry<>(obj, garbage).insert(head.prev);\n@@ -70,1 +71,1 @@\n-        ListEntry entry = head.next;\n+        ListEntry<E> entry = head.next;\n@@ -83,2 +84,2 @@\n-        ListEntry entry;\n-        while ((entry = (ListEntry) garbage.poll()) != null) {\n+        ListEntry<?> entry;\n+        while ((entry = (ListEntry<?>) garbage.poll()) != null) {\n@@ -90,4 +91,4 @@\n-    public Iterator<? super E> iterator() {\n-        return new Iterator() {\n-            private ListEntry index = head;\n-            private Object next = null;\n+    public Iterator<E> iterator() {\n+        return new Iterator<>() {\n+            private ListEntry<E> index = head;\n+            private E next = null;\n@@ -99,1 +100,1 @@\n-                    ListEntry nextIndex = index.prev;\n+                    ListEntry<E> nextIndex = index.prev;\n@@ -114,1 +115,1 @@\n-            public Object next() {\n+            public E next() {\n@@ -124,1 +125,1 @@\n-                    ListEntry nextIndex = index.next;\n+                    ListEntry<E> nextIndex = index.next;\n@@ -133,2 +134,2 @@\n-    private static class ListEntry extends WeakReference {\n-        ListEntry prev, next;\n+    private static class ListEntry<E> extends WeakReference<E> {\n+        ListEntry<E> prev, next;\n@@ -136,1 +137,1 @@\n-        public ListEntry(Object o, ReferenceQueue queue) {\n+        public ListEntry(E o, ReferenceQueue<E> queue) {\n@@ -142,1 +143,1 @@\n-        public void insert(ListEntry where) {\n+        public void insert(ListEntry<E> where) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/util\/WeakReferenceQueue.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-    protected Map deviceDetails = null;\n+    protected Map<Object, Object> deviceDetails = null;\n@@ -166,1 +166,1 @@\n-    public Map getDeviceDetails() {\n+    public Map<Object, Object> getDeviceDetails() {\n@@ -174,1 +174,1 @@\n-    protected void setDeviceDetails(Map details) {\n+    protected void setDeviceDetails(Map<Object, Object> details) {\n@@ -218,1 +218,1 @@\n-                Class klass = Class.forName(className);\n+                Class<?> klass = Class.forName(className);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/GraphicsPipeline.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -604,1 +604,1 @@\n-            return new Pair(id, (dirtyRegion == null)? null : new Rectangle(dirtyRegion));\n+            return new Pair<>(id, (dirtyRegion == null)? null : new Rectangle(dirtyRegion));\n@@ -939,1 +939,1 @@\n-            return PixelUtils.getSetter((WritablePixelFormat) theFormat);\n+            return PixelUtils.getSetter((WritablePixelFormat<I>) theFormat);\n@@ -1124,1 +1124,1 @@\n-                             (WritablePixelFormat) theFormat,\n+                             (WritablePixelFormat<ByteBuffer>) theFormat,\n@@ -1192,1 +1192,1 @@\n-                             (WritablePixelFormat) theFormat,\n+                             (WritablePixelFormat<IntBuffer>) theFormat,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/Image.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    public TextureResourcePool getTextureResourcePool();\n+    public TextureResourcePool<?> getTextureResourcePool();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/ResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-    private static native boolean nInit(Class psClass, boolean load);\n+    private static native boolean nInit(Class<?> psClass, boolean load);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n@@ -459,1 +459,1 @@\n-            Class klass = Class.forName(\"com.sun.prism.shader.\" + name + \"_Loader\");\n+            Class<?> klass = Class.forName(\"com.sun.prism.shader.\" + name + \"_Loader\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DResourceFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-            ES2Texture es2Tex = (ES2Texture)tex;\n+            ES2Texture<?> es2Tex = (ES2Texture<?>) tex;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Context.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,6 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n@@ -30,0 +36,1 @@\n+import com.sun.javafx.PlatformUtil;\n@@ -33,5 +40,0 @@\n-import com.sun.javafx.PlatformUtil;\n-import java.util.List;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import java.util.HashMap;\n@@ -113,1 +115,1 @@\n-            HashMap devDetails = new HashMap();\n+            Map<Object, Object> devDetails = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Pipeline.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n@@ -316,1 +316,1 @@\n-            Class klass =\n+            Class<?> klass =\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2ResourceFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private ES2Texture(ES2Texture sharedTex, WrapMode newMode) {\n+    private ES2Texture(ES2Texture<T> sharedTex, WrapMode newMode) {\n@@ -79,1 +79,1 @@\n-        return new ES2Texture(this, newMode);\n+        return new ES2Texture<>(this, newMode);\n@@ -98,1 +98,1 @@\n-    static ES2Texture create(ES2Context context, PixelFormat format,\n+    static ES2Texture<?> create(ES2Context context, PixelFormat format,\n@@ -215,1 +215,1 @@\n-        ES2TextureResource texRes = new ES2TextureResource(texData);\n+        ES2TextureResource<?> texRes = new ES2TextureResource<>(texData);\n@@ -229,1 +229,1 @@\n-        return new ES2Texture(context, texRes, format, wrapMode,\n+        return new ES2Texture<>(context, texRes, format, wrapMode,\n@@ -266,1 +266,1 @@\n-                ES2Texture subTex =\n+                ES2Texture<?> subTex =\n@@ -319,1 +319,1 @@\n-        ES2TextureResource texRes = new ES2TextureResource(texData);\n+        ES2TextureResource<?> texRes = new ES2TextureResource<>(texData);\n@@ -329,1 +329,1 @@\n-        ES2Texture tex = null;\n+        ES2Texture<?> tex = null;\n@@ -331,1 +331,1 @@\n-            tex = new ES2Texture(context, texRes, format, WrapMode.CLAMP_TO_EDGE,\n+            tex = new ES2Texture<>(context, texRes, format, WrapMode.CLAMP_TO_EDGE,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Texture.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.prism.impl.ResourcePool;\n@@ -34,1 +35,1 @@\n-        super(resource, ES2VramPool.instance, resource);\n+        super(resource, (ResourcePool<T>) ES2VramPool.instance, resource);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2TextureResource.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Map;\n@@ -192,1 +193,1 @@\n-    abstract boolean initialize(Class psClass, GLPixelFormat.Attributes attrs);\n+    abstract boolean initialize(Class<?> psClass, GLPixelFormat.Attributes attrs);\n@@ -219,1 +220,1 @@\n-    abstract void updateDeviceDetails(HashMap deviceDetails);\n+    abstract void updateDeviceDetails(Map<Object, Object> deviceDetails);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/GLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.prism.es2.GLPixelFormat.Attributes;\n@@ -30,0 +29,3 @@\n+import java.util.Map;\n+\n+import com.sun.prism.es2.GLPixelFormat.Attributes;\n@@ -69,1 +71,1 @@\n-        HashMap devDetails = (HashMap) ES2Pipeline.getInstance().getDeviceDetails();\n+        Map<Object, Object> devDetails = ES2Pipeline.getInstance().getDeviceDetails();\n@@ -91,1 +93,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -129,1 +131,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/IOSGLFactory.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -71,1 +72,1 @@\n-        HashMap devDetails = (HashMap) ES2Pipeline.getInstance().getDeviceDetails();\n+        Map<Object, Object> devDetails = ES2Pipeline.getInstance().getDeviceDetails();\n@@ -93,1 +94,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -129,1 +130,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MacGLFactory.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import java.util.Map;\n+\n@@ -93,1 +95,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -154,1 +156,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MonocleGLFactory.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -80,1 +81,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -116,1 +117,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/WinGLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -133,1 +134,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -169,1 +170,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/X11GLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-            point2vbMap = new HashMap();\n+            point2vbMap = new HashMap<>();\n@@ -144,1 +144,1 @@\n-            normal2vbMap = new HashMap();\n+            normal2vbMap = new HashMap<>();\n@@ -149,1 +149,1 @@\n-            texCoord2vbMap = new HashMap();\n+            texCoord2vbMap = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseMesh.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            TextureResourcePool pool = getTextureResourcePool();\n+            TextureResourcePool<?> pool = getTextureResourcePool();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public abstract class BaseTexture<T extends ManagedResource> implements Texture {\n+public abstract class BaseTexture<T extends ManagedResource<?>> implements Texture {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static Class byteOrderClass;\n+    private static Class<?> byteOrderClass;\n@@ -65,2 +65,2 @@\n-                    byteOrderClass = (Class) AccessController.doPrivileged(\n-                            (PrivilegedExceptionAction) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n+                    byteOrderClass = (Class<?>) AccessController.doPrivileged(\n+                            (PrivilegedExceptionAction<?>) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BufferUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -75,2 +75,2 @@\n-    private final ReferenceQueue queue = new ReferenceQueue();\n-    private final Hashtable records = new Hashtable();\n+    private final ReferenceQueue<Object> queue = new ReferenceQueue<>();\n+    private final Hashtable<Object, Disposer.Record> records = new Hashtable<>();\n@@ -151,1 +151,1 @@\n-        Reference ref;\n+        Reference<Object> ref;\n@@ -153,1 +153,1 @@\n-            ref = new PhantomReference(target, queue);\n+            ref = new PhantomReference<>(target, queue);\n@@ -155,1 +155,1 @@\n-            ref = new SoftReference(target, queue);\n+            ref = new SoftReference<>(target, queue);\n@@ -157,1 +157,1 @@\n-            ref = new WeakReference(target, queue);\n+            ref = new WeakReference<>(target, queue);\n@@ -175,2 +175,2 @@\n-                ((Reference)obj).clear();\n-                Disposer.Record rec = (Disposer.Record)records.remove(obj);\n+                ((Reference<?>) obj).clear();\n+                Disposer.Record rec = records.remove(obj);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/Disposer.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    public DisposerManagedResource(T resource, ResourcePool pool,\n+    public DisposerManagedResource(T resource, ResourcePool<T> pool,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/DisposerManagedResource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,2 +118,1 @@\n-                (Properties) AccessController.doPrivileged(\n-                        (PrivilegedAction) () -> System.getProperties());\n+                AccessController.doPrivileged((PrivilegedAction<Properties>) () -> System.getProperties());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismSettings.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -538,1 +538,1 @@\n-        String v = (String) AccessController.doPrivileged((PrivilegedAction) () -> System.getProperty(\"prism.primshaderpad\"));\n+        String v = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"prism.primshaderpad\"));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -419,1 +419,1 @@\n-            ref = new WeakReference(compFont);\n+            ref = new WeakReference<>(compFont);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPrismGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    private final PixelSetter setter;\n+    private final PixelSetter<?> setter;\n@@ -67,1 +67,1 @@\n-        PixelSetter setter;\n+        PixelSetter<?> setter;\n@@ -95,1 +95,1 @@\n-               PixelSetter setter, WrapMode wrapMode)\n+               PixelSetter<?> setter, WrapMode wrapMode)\n@@ -116,1 +116,1 @@\n-    private static PixelGetter getGetter(PixelFormat format) {\n+    private static PixelGetter<?> getGetter(PixelFormat format) {\n@@ -149,2 +149,3 @@\n-        PixelGetter getter = getGetter(format);\n-        PixelConverter converter = PixelUtils.getConverter(getter, setter);\n+        PixelGetter<?> getter = getGetter(format);\n+        @SuppressWarnings(\"unchecked\")\n+        PixelConverter<Buffer, Buffer> converter = (PixelConverter<Buffer, Buffer>) PixelUtils.getConverter(getter, setter);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DTexture.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-    private static Class onTopClass = null;\n+    private static Class<?> onTopClass = null;\n@@ -136,1 +136,1 @@\n-                         cons = onTopClass.getConstructor();\n+                         cons = (Constructor<PrintRequestAttribute>) onTopClass.getConstructor();\n@@ -148,1 +148,1 @@\n-        PrintRequestAttribute getAlwaysOnTop(Class onTopClass, long id);\n+        PrintRequestAttribute getAlwaysOnTop(Class<?> onTopClass, long id);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/print\/J2DPrinterJob.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-class DummyTexture extends BaseTexture  {\n+class DummyTexture extends BaseTexture<ManagedResource<?>>  {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        final PixelGetter getter;\n+        final PixelGetter<?> getter;\n@@ -115,1 +115,2 @@\n-        PixelConverter converter = PixelUtils.getConverter(getter, IntArgbPre.setter);\n+        @SuppressWarnings(\"unchecked\")\n+        PixelConverter<Buffer, IntBuffer> converter = (PixelConverter<Buffer, IntBuffer>) PixelUtils.getConverter(getter, IntArgbPre.setter);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWArgbPreTexture.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-        Class c = Animation.class;\n+        Class<?> c = Animation.class;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/animation\/shared\/AnimationAccessor.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    private EffectPeer getPeer(FilterContext fctx, int approxW, int approxH) {\n+    private EffectPeer<?> getPeer(FilterContext fctx, int approxW, int approxH) {\n@@ -77,1 +77,1 @@\n-    final EffectPeer getPeer(FilterContext fctx, ImageData[] inputs) {\n+    final EffectPeer<?> getPeer(FilterContext fctx, ImageData[] inputs) {\n@@ -106,1 +106,1 @@\n-        return getPeer(fctx, inputs).filter(this, rstate, transform, outputClip, inputs);\n+        return ((EffectPeer<RenderState>) getPeer(fctx, inputs)).filter(this, rstate, transform, outputClip, inputs);\n@@ -114,1 +114,1 @@\n-        EffectPeer peer = getPeer(fctx, 1024, 1024);\n+        EffectPeer<?> peer = getPeer(fctx, 1024, 1024);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/CoreEffect.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n+        var dummy = AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/ImageData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,2 @@\n-            EffectPeer peer = lcrstate.getPassPeer(r, fctx);\n+            @SuppressWarnings(\"unchecked\")\n+            EffectPeer<LinearConvolveRenderState> peer = (EffectPeer<LinearConvolveRenderState>) lcrstate.getPassPeer(r, fctx);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/LinearConvolveCoreEffect.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static Class byteOrderClass;\n+    private static Class<?> byteOrderClass;\n@@ -65,2 +65,2 @@\n-                    byteOrderClass = (Class) AccessController.doPrivileged(\n-                            (PrivilegedExceptionAction) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n+                    byteOrderClass = AccessController.doPrivileged(\n+                            (PrivilegedExceptionAction<Class<?>>) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/BufferUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n+        var dummy = AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/ImagePool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import com.sun.scenario.effect.impl.state.RenderState;\n@@ -89,4 +90,2 @@\n-    private static final Map<FilterContext, Renderer> rendererMap =\n-        new HashMap<>(1);\n-    private Map<String, EffectPeer> peerCache =\n-        Collections.synchronizedMap(new HashMap<String, EffectPeer>(5));\n+    private static final Map<FilterContext, Renderer> rendererMap = new HashMap<>(1);\n+    private Map<String, EffectPeer<?>> peerCache = Collections.synchronizedMap(new HashMap<>(5));\n@@ -241,1 +240,1 @@\n-    public final synchronized EffectPeer\n+    public final synchronized <T extends RenderState> EffectPeer<T>\n@@ -247,1 +246,1 @@\n-        EffectPeer peer = peerCache.get(name);\n+        EffectPeer<?> peer = peerCache.get(name);\n@@ -249,1 +248,1 @@\n-            return peer;\n+            return (EffectPeer<T>) peer;\n@@ -256,1 +255,1 @@\n-                return peer;\n+                return (EffectPeer<T>) peer;\n@@ -268,1 +267,1 @@\n-        return peer;\n+        return (EffectPeer<T>) peer;\n@@ -288,1 +287,1 @@\n-    protected abstract EffectPeer createPeer(FilterContext fctx,\n+    protected abstract EffectPeer<?> createPeer(FilterContext fctx,\n@@ -294,1 +293,1 @@\n-    protected Collection<EffectPeer> getPeers() {\n+    protected Collection<EffectPeer<?>> getPeers() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/Renderer.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    private static boolean isRSLFriendly(Class klass) {\n+    private static boolean isRSLFriendly(Class<?> klass) {\n@@ -77,1 +77,1 @@\n-        for (Class iface : klass.getInterfaces()) {\n+        for (Class<?> iface : klass.getInterfaces()) {\n@@ -92,1 +92,1 @@\n-            Class klass = Class.forName(rootPkg + \".impl.j2d.rsl.RSLRenderer\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.j2d.rsl.RSLRenderer\");\n@@ -104,1 +104,1 @@\n-                Class klass = Class.forName(rootPkg + \".impl.j2d.jogl.JOGLRenderer\");\n+                Class<?> klass = Class.forName(rootPkg + \".impl.j2d.jogl.JOGLRenderer\");\n@@ -117,1 +117,1 @@\n-                Class klass = Class.forName(rootPkg + \".impl.prism.PrRenderer\");\n+                Class<?> klass = Class.forName(rootPkg + \".impl.prism.PrRenderer\");\n@@ -132,1 +132,1 @@\n-                Class klass = Class.forName(rootPkg + \".impl.j2d.J2DSWRenderer\");\n+                Class<?> klass = Class.forName(rootPkg + \".impl.j2d.J2DSWRenderer\");\n@@ -147,2 +147,2 @@\n-            Class klass = Class.forName(rootPkg + \".impl.prism.sw.PSWRenderer\");\n-            Class screenClass = Class.forName(\"com.sun.glass.ui.Screen\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.prism.sw.PSWRenderer\");\n+            Class<?> screenClass = Class.forName(\"com.sun.glass.ui.Screen\");\n@@ -162,1 +162,1 @@\n-            Class klass = Class.forName(rootPkg + \".impl.prism.sw.PSWRenderer\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.prism.sw.PSWRenderer\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/RendererFactory.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class PrCropPeer extends EffectPeer {\n+public class PrCropPeer extends EffectPeer<RenderState> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrCropPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-                Texture tex = ((PrTexture)res.getUntransformedImage()).getTextureObject();\n+                Texture tex = ((PrTexture<?>) res.getUntransformedImage()).getTextureObject();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrEffectHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class PrFloodPeer extends EffectPeer {\n+public class PrFloodPeer extends EffectPeer<RenderState> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrFloodPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class PrMergePeer extends EffectPeer {\n+public class PrMergePeer extends EffectPeer<RenderState> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrMergePeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class PrReflectionPeer extends EffectPeer {\n+public class PrReflectionPeer extends EffectPeer<RenderState> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrReflectionPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            Texture tex = ((PrTexture)image.getUntransformedImage()).getTextureObject();\n+            Texture tex = ((PrTexture<?>) image.getUntransformedImage()).getTextureObject();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrRenderInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            Class klass = Class.forName(klassName);\n+            Class<?> klass = Class.forName(klassName);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/PrRenderer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-        final PrTexture srcTex = (PrTexture) srcF;\n+        final PrTexture<?> srcTex = (PrTexture<?>) srcF;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSOneSamplerPeer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-        for (EffectPeer peer : getPeers()) {\n+        for (EffectPeer<?> peer : getPeers()) {\n@@ -240,1 +240,1 @@\n-        return new PrTexture(prismTex);\n+        return new PrTexture<>(prismTex);\n@@ -252,1 +252,1 @@\n-        Texture prismTex = ((PrTexture)texture).getTextureObject();\n+        Texture prismTex = ((PrTexture<?>) texture).getTextureObject();\n@@ -286,3 +286,3 @@\n-    private EffectPeer createIntrinsicPeer(FilterContext fctx, String name) {\n-        Class klass = null;\n-        EffectPeer peer;\n+    private EffectPeer<?> createIntrinsicPeer(FilterContext fctx, String name) {\n+        Class<?> klass = null;\n+        EffectPeer<?> peer;\n@@ -291,1 +291,1 @@\n-            Constructor ctor = klass.getConstructor(new Class[]\n+            Constructor<?> ctor = klass.getConstructor(new Class[]\n@@ -293,1 +293,1 @@\n-            peer = (EffectPeer)ctor.newInstance(new Object[]\n+            peer = (EffectPeer<?>)ctor.newInstance(new Object[]\n@@ -310,1 +310,1 @@\n-    private EffectPeer createPlatformPeer(FilterContext fctx, String name,\n+    private EffectPeer<?> createPlatformPeer(FilterContext fctx, String name,\n@@ -313,1 +313,1 @@\n-        EffectPeer peer;\n+        EffectPeer<?> peer;\n@@ -320,2 +320,2 @@\n-            Class klass = Class.forName(rootPkg + \".impl.prism.ps.PPS\" + name + \"Peer\");\n-            Constructor ctor = klass.getConstructor(new Class[]\n+            Class<?> klass = Class.forName(rootPkg + \".impl.prism.ps.PPS\" + name + \"Peer\");\n+            Constructor<?> ctor = klass.getConstructor(new Class[]\n@@ -323,1 +323,1 @@\n-            peer = (EffectPeer)ctor.newInstance(new Object[]\n+            peer = (EffectPeer<?>) ctor.newInstance(new Object[]\n@@ -334,1 +334,1 @@\n-    protected EffectPeer createPeer(FilterContext fctx, String name,\n+    protected EffectPeer<?> createPeer(FilterContext fctx, String name,\n@@ -450,1 +450,1 @@\n-        Class klass = null;\n+        Class<?> klass = null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSRenderer.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import com.sun.scenario.effect.impl.state.RenderState;\n@@ -40,1 +41,1 @@\n-public abstract class PPSTwoSamplerPeer extends PPSEffectPeer {\n+public abstract class PPSTwoSamplerPeer extends PPSEffectPeer<RenderState> {\n@@ -70,1 +71,1 @@\n-        final PrTexture src0Tex = (PrTexture) src0F;\n+        final PrTexture<?> src0Tex = (PrTexture<?>) src0F;\n@@ -80,1 +81,1 @@\n-        final PrTexture src1Tex;\n+        final PrTexture<?> src1Tex;\n@@ -86,1 +87,1 @@\n-            src1Tex = (PrTexture) src1F;\n+            src1Tex = (PrTexture<?>) src1F;\n@@ -105,1 +106,1 @@\n-            src1Tex = (PrTexture)map.getAccelData(getFilterContext());\n+            src1Tex = (PrTexture<?>) map.getAccelData(getFilterContext());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSTwoSamplerPeer.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.prism.paint.Color;\n@@ -31,1 +32,0 @@\n-import com.sun.prism.paint.Color;\n@@ -35,0 +35,1 @@\n+import com.sun.scenario.effect.impl.state.RenderState;\n@@ -36,1 +37,1 @@\n-public abstract class PPSZeroSamplerPeer extends PPSEffectPeer {\n+public abstract class PPSZeroSamplerPeer extends PPSEffectPeer<RenderState> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPSZeroSamplerPeer.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class PPStoPSWDisplacementMapPeer extends EffectPeer  {\n+public class PPStoPSWDisplacementMapPeer extends EffectPeer<RenderState>  {\n@@ -43,1 +43,1 @@\n-    EffectPeer softwarePeer;\n+    EffectPeer<RenderState> softwarePeer;\n@@ -59,1 +59,1 @@\n-        PrTexture srcTex = (PrTexture) input.getUntransformedImage();\n+        PrTexture<?> srcTex = (PrTexture<?>) input.getUntransformedImage();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/ps\/PPStoPSWDisplacementMapPeer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-            Class klass = Class.forName(rootPkg + \".impl.sw.java.JSWRendererDelegate\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.sw.java.JSWRendererDelegate\");\n@@ -106,1 +106,1 @@\n-            Class klass = Class.forName(rootPkg + \".impl.sw.java.JSWRendererDelegate\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.sw.java.JSWRendererDelegate\");\n@@ -130,1 +130,1 @@\n-            Class klass = Class.forName(rootPkg + \".impl.sw.sse.SSERendererDelegate\");\n+            Class<?> klass = Class.forName(rootPkg + \".impl.sw.sse.SSERendererDelegate\");\n@@ -244,3 +244,3 @@\n-    private EffectPeer createIntrinsicPeer(FilterContext fctx, String name) {\n-        Class klass = null;\n-        EffectPeer peer;\n+    private EffectPeer<?> createIntrinsicPeer(FilterContext fctx, String name) {\n+        Class<?> klass = null;\n+        EffectPeer<?> peer;\n@@ -249,1 +249,1 @@\n-            Constructor ctor = klass.getConstructor(new Class[]\n+            Constructor<?> ctor = klass.getConstructor(new Class[]\n@@ -251,1 +251,1 @@\n-            peer = (EffectPeer)ctor.newInstance(new Object[] {fctx, this, name});\n+            peer = (EffectPeer<?>)ctor.newInstance(new Object[] {fctx, this, name});\n@@ -267,1 +267,1 @@\n-    private EffectPeer createPlatformPeer(FilterContext fctx, String name,\n+    private EffectPeer<?> createPlatformPeer(FilterContext fctx, String name,\n@@ -271,1 +271,1 @@\n-        EffectPeer peer;\n+        EffectPeer<?> peer;\n@@ -273,2 +273,2 @@\n-            Class klass = Class.forName(klassName);\n-            Constructor ctor = klass.getConstructor(new Class[]\n+            Class<?> klass = Class.forName(klassName);\n+            Constructor<?> ctor = klass.getConstructor(new Class[]\n@@ -276,1 +276,1 @@\n-            peer = (EffectPeer)ctor.newInstance(new Object[] {fctx, this, name});\n+            peer = (EffectPeer<?>)ctor.newInstance(new Object[] {fctx, this, name});\n@@ -287,1 +287,1 @@\n-    protected EffectPeer createPeer(FilterContext fctx, String name,\n+    protected EffectPeer<?> createPeer(FilterContext fctx, String name,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/prism\/sw\/PSWRenderer.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-        EffectPeer peer = r.getPeerInstance(fctx, name, psize);\n+        EffectPeer<BoxRenderState> peer = r.getPeerInstance(fctx, name, psize);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/state\/BoxRenderState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n+        var dummy = AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/scenario\/effect\/impl\/sw\/sse\/SSERendererDelegate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-            Class theClass = Class.forName(callingClassName, false,\n+            Class<?> theClass = Class.forName(callingClassName, false,\n@@ -302,1 +302,2 @@\n-                Class<? extends Application> appClass = theClass;\n+                @SuppressWarnings(\"unchecked\")\n+                Class<? extends Application> appClass = (Class<? extends Application>) theClass;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/application\/Application.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    public WorkerStateEvent(@NamedArg(\"worker\") Worker worker, @NamedArg(\"eventType\") EventType<? extends WorkerStateEvent> eventType) {\n+    public WorkerStateEvent(@NamedArg(\"worker\") Worker<?> worker, @NamedArg(\"eventType\") EventType<? extends WorkerStateEvent> eventType) {\n@@ -104,2 +104,2 @@\n-    @Override public Worker getSource() {\n-        return (Worker) super.getSource();\n+    @Override public Worker<?> getSource() {\n+        return (Worker<?>) super.getSource();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/concurrent\/WorkerStateEvent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-    ParsedValue parseExpr(String property, String expr) {\n+    ParsedValue<?, ?> parseExpr(String property, String expr) {\n@@ -314,1 +314,1 @@\n-        ParsedValueImpl value = null;\n+        ParsedValueImpl<?, ?> value = null;\n@@ -701,1 +701,1 @@\n-    ParsedValueImpl valueFor(String property, Term root, CssLexer lexer) throws ParseException {\n+    ParsedValueImpl<?, ?> valueFor(String property, Term root, CssLexer lexer) throws ParseException {\n@@ -718,1 +718,1 @@\n-             ParsedValueImpl pv = parse(root);\n+            ParsedValueImpl<?, ?> pv = parse(root);\n@@ -722,1 +722,1 @@\n-                pv = new ParsedValueImpl(new ParsedValue[] {pv},PaintConverter.ImagePatternConverter.getInstance());\n+                pv = new ParsedValueImpl<>(new ParsedValue[] {pv},PaintConverter.ImagePatternConverter.getInstance());\n@@ -771,1 +771,1 @@\n-            ParsedValueImpl fsize = parseFontSize(root);\n+            ParsedValueImpl<ParsedValue<?, Size>, Number> fsize = parseFontSize(root);\n@@ -775,1 +775,1 @@\n-            ParsedValueImpl fstyle = parseFontStyle(root);\n+            ParsedValueImpl<String, FontPosture> fstyle = parseFontStyle(root);\n@@ -779,1 +779,1 @@\n-            ParsedValueImpl fweight = parseFontWeight(root);\n+            ParsedValueImpl<String, FontWeight> fweight = parseFontWeight(root);\n@@ -801,1 +801,1 @@\n-            ParsedValueImpl[] values = parseStrokeLineJoin(root);\n+            ParsedValueImpl<?, ?>[] values = parseStrokeLineJoin(root);\n@@ -807,1 +807,1 @@\n-            ParsedValueImpl value = parseStrokeLineCap(root);\n+            ParsedValueImpl<String, StrokeLineCap> value = parseStrokeLineCap(root);\n@@ -813,1 +813,1 @@\n-            ParsedValueImpl value = parseStrokeType(root);\n+            ParsedValueImpl<String, StrokeType> value = parseStrokeType(root);\n@@ -834,1 +834,1 @@\n-    private ParsedValueImpl parse(Term root) throws ParseException {\n+    private <V, T> ParsedValueImpl<V, T> parse(Term root) throws ParseException {\n@@ -838,1 +838,1 @@\n-        ParsedValueImpl value = null; \/\/ value to return;\n+        ParsedValueImpl<?, ?> value = null; \/\/ value to return;\n@@ -857,2 +857,2 @@\n-                ParsedValueImpl sizeValue = new ParsedValueImpl<Size,Number>(size(token), null);\n-                value = new ParsedValueImpl<ParsedValue<?,Size>, Number>(sizeValue, SizeConverter.getInstance());\n+                ParsedValueImpl<Size, Size> sizeValue = new ParsedValueImpl<>(size(token), null);\n+                value = new ParsedValueImpl<>(sizeValue, SizeConverter.getInstance());\n@@ -860,1 +860,1 @@\n-                ParsedValueImpl<Size,Size>[] sizeValue = parseSizeSeries(root);\n+                ParsedValueImpl<Size, Size>[] sizeValue = parseSizeSeries(root);\n@@ -885,2 +885,2 @@\n-                ParsedValueImpl sizeValue = new ParsedValueImpl<Size,Number>(size, null);\n-                value = new ParsedValueImpl<ParsedValue<?,Size>,Number>(sizeValue, SizeConverter.getInstance());\n+                ParsedValueImpl<Size, Size> sizeValue = new ParsedValueImpl<>(size, null);\n+                value = new ParsedValueImpl<>(sizeValue, SizeConverter.getInstance());\n@@ -919,1 +919,1 @@\n-            return  parseFunction(root);\n+            return (ParsedValueImpl<V, T>) parseFunction(root);\n@@ -921,1 +921,1 @@\n-            return parseURI(root);\n+            return (ParsedValueImpl<V, T>) parseURI(root);\n@@ -926,1 +926,1 @@\n-        return value;\n+        return (ParsedValueImpl<V, T>) value;\n@@ -933,1 +933,1 @@\n-    private ParsedValueImpl<?,Size> parseSize(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, Size> parseSize(final Term root) throws ParseException {\n@@ -974,1 +974,1 @@\n-    private ParsedValueImpl rgb(Term root) throws ParseException {\n+    private ParsedValueImpl<Color, Color> rgb(Term root) throws ParseException {\n@@ -1040,1 +1040,1 @@\n-        return new ParsedValueImpl<Color,Color>(Color.color(rval,gval,bval,aval), null);\n+        return new ParsedValueImpl<>(Color.color(rval,gval,bval,aval), null);\n@@ -1046,1 +1046,1 @@\n-    private ParsedValueImpl hsb(Term root) throws ParseException {\n+    private ParsedValueImpl<Color, Color> hsb(Term root) throws ParseException {\n@@ -1090,1 +1090,1 @@\n-        return new ParsedValueImpl<Color,Color>(Color.hsb(hue, saturation, brightness, opacity), null);\n+        return new ParsedValueImpl<>(Color.hsb(hue, saturation, brightness, opacity), null);\n@@ -1094,1 +1094,1 @@\n-    private ParsedValueImpl<ParsedValue[],Color> derive(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[],Color> derive(final Term root)\n@@ -1107,1 +1107,1 @@\n-        final ParsedValueImpl<?,Color> color = parseColor(arg);\n+        final ParsedValueImpl<?, Color> color = parseColor(arg);\n@@ -1112,1 +1112,1 @@\n-        final ParsedValueImpl<?,Size> brightness = parseSize(arg);\n+        final ParsedValueImpl<?, Size> brightness = parseSize(arg);\n@@ -1114,1 +1114,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] { color, brightness };\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[] { color, brightness };\n@@ -1119,1 +1119,1 @@\n-    private ParsedValueImpl<ParsedValue[],Color> ladder(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Color> ladder(final Term root) throws ParseException {\n@@ -1156,1 +1156,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[nStops+1];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[nStops+1];\n@@ -1160,1 +1160,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop = stop(term);\n@@ -1186,1 +1186,1 @@\n-    private ParsedValueImpl<ParsedValue[],Color> parseLadder(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Color> parseLadder(final Term root) throws ParseException {\n@@ -1198,1 +1198,1 @@\n-        final ParsedValueImpl<?,Color> color = parse(term);\n+        final ParsedValueImpl<?, Color> color = parse(term);\n@@ -1205,1 +1205,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(term);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(term);\n@@ -1207,1 +1207,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[stops.length+1];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[stops.length+1];\n@@ -1216,1 +1216,1 @@\n-    private ParsedValueImpl<ParsedValue[], Stop> stop(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop(final Term root)\n@@ -1237,1 +1237,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] { size, color };\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[] { size, color };\n@@ -1244,1 +1244,1 @@\n-    private ParsedValueImpl<ParsedValue[], Stop>[] parseColorStops(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] parseColorStops(final Term root)\n@@ -1264,1 +1264,1 @@\n-        ParsedValueImpl<?,Color>[] colors = new ParsedValueImpl[nArgs];\n+        ParsedValueImpl<?, Color>[] colors = new ParsedValueImpl[nArgs];\n@@ -1356,1 +1356,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = new ParsedValueImpl[nArgs];\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = new ParsedValueImpl[nArgs];\n@@ -1360,1 +1360,1 @@\n-                    new ParsedValueImpl<Size,Size>(positions[n], null),\n+                    new ParsedValueImpl<Size, Size>(positions[n], null),\n@@ -1372,1 +1372,1 @@\n-    private ParsedValueImpl[] point(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, Size>[] point(final Term root) throws ParseException {\n@@ -1388,1 +1388,1 @@\n-        final ParsedValueImpl<?,Size> ptX = parseSize(arg);\n+        final ParsedValueImpl<?, Size> ptX = parseSize(arg);\n@@ -1394,1 +1394,1 @@\n-        final ParsedValueImpl<?,Size> ptY = parseSize(arg);\n+        final ParsedValueImpl<?, Size> ptY = parseSize(arg);\n@@ -1399,1 +1399,1 @@\n-    private ParsedValueImpl parseFunction(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, ?> parseFunction(final Term root) throws ParseException {\n@@ -1433,1 +1433,1 @@\n-    private ParsedValueImpl<String,BlurType> blurType(final Term root) throws ParseException {\n+    private ParsedValueImpl<String, BlurType> blurType(final Term root) throws ParseException {\n@@ -1461,1 +1461,1 @@\n-    private ParsedValueImpl innershadow(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, ?> innershadow(final Term root) throws ParseException {\n@@ -1478,1 +1478,1 @@\n-        ParsedValueImpl<?,Color> colorVal = parseColor(arg);\n+        ParsedValueImpl<?, Color> colorVal = parseColor(arg);\n@@ -1483,1 +1483,1 @@\n-        ParsedValueImpl<?,Size> radiusVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> radiusVal = parseSize(arg);\n@@ -1488,1 +1488,1 @@\n-        ParsedValueImpl<?,Size> chokeVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> chokeVal = parseSize(arg);\n@@ -1493,1 +1493,1 @@\n-        ParsedValueImpl<?,Size> offsetXVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> offsetXVal = parseSize(arg);\n@@ -1498,1 +1498,1 @@\n-        ParsedValueImpl<?,Size> offsetYVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> offsetYVal = parseSize(arg);\n@@ -1500,1 +1500,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] {\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[] {\n@@ -1512,1 +1512,1 @@\n-    private ParsedValueImpl dropshadow(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, ?> dropshadow(final Term root) throws ParseException {\n@@ -1529,1 +1529,1 @@\n-        ParsedValueImpl<?,Color> colorVal = parseColor(arg);\n+        ParsedValueImpl<?, Color> colorVal = parseColor(arg);\n@@ -1534,1 +1534,1 @@\n-        ParsedValueImpl<?,Size> radiusVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> radiusVal = parseSize(arg);\n@@ -1539,1 +1539,1 @@\n-        ParsedValueImpl<?,Size> spreadVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> spreadVal = parseSize(arg);\n@@ -1544,1 +1544,1 @@\n-        ParsedValueImpl<?,Size> offsetXVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> offsetXVal = parseSize(arg);\n@@ -1549,1 +1549,1 @@\n-        ParsedValueImpl<?,Size> offsetYVal = parseSize(arg);\n+        ParsedValueImpl<?, Size> offsetYVal = parseSize(arg);\n@@ -1551,1 +1551,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] {\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[] {\n@@ -1583,1 +1583,1 @@\n-    private ParsedValueImpl<ParsedValue[],Paint> linearGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Paint> linearGradient(final Term root) throws ParseException {\n@@ -1629,1 +1629,1 @@\n-        ParsedValueImpl[] stops = new ParsedValueImpl[nStops];\n+        ParsedValueImpl<?, ?>[] stops = new ParsedValueImpl[nStops];\n@@ -1632,1 +1632,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop = stop(term);\n@@ -1670,1 +1670,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[5 + stops.length];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[5 + stops.length];\n@@ -1696,1 +1696,1 @@\n-    private ParsedValueImpl parseLinearGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, ?> parseLinearGradient(final Term root) throws ParseException {\n@@ -1717,2 +1717,2 @@\n-        ParsedValueImpl<?,Size>[] startPt = null;\n-        ParsedValueImpl<?,Size>[] endPt = null;\n+        ParsedValueImpl<?, Size>[] startPt = null;\n+        ParsedValueImpl<?, Size>[] endPt = null;\n@@ -1725,1 +1725,1 @@\n-            ParsedValueImpl<?,Size> ptX = parseSize(arg);\n+            ParsedValueImpl<?, Size> ptX = parseSize(arg);\n@@ -1730,1 +1730,1 @@\n-            ParsedValueImpl<?,Size> ptY = parseSize(arg);\n+            ParsedValueImpl<?, Size> ptY = parseSize(arg);\n@@ -1892,1 +1892,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(arg);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(arg);\n@@ -1894,1 +1894,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[5 + stops.length];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[5 + stops.length];\n@@ -1909,1 +1909,1 @@\n-    private ParsedValueImpl<ParsedValue[], Paint> radialGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Paint> radialGradient(final Term root) throws ParseException {\n@@ -2000,1 +2000,1 @@\n-        ParsedValueImpl[] stops = new ParsedValueImpl[nStops];\n+        ParsedValueImpl<?, ?>[] stops = new ParsedValueImpl[nStops];\n@@ -2003,1 +2003,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop = stop(term);\n@@ -2041,1 +2041,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[6 + stops.length];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[6 + stops.length];\n@@ -2064,1 +2064,1 @@\n-    private ParsedValueImpl parseRadialGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<?, ?> parseRadialGradient(final Term root) throws ParseException {\n@@ -2192,1 +2192,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(arg);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(arg);\n@@ -2194,1 +2194,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[6 + stops.length];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[6 + stops.length];\n@@ -2211,1 +2211,1 @@\n-    private ParsedValueImpl<ParsedValue[], Paint> parseImagePattern(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Paint> parseImagePattern(final Term root) throws ParseException {\n@@ -2231,1 +2231,1 @@\n-        ParsedValueImpl[] uriValues = new ParsedValueImpl[] {\n+        ParsedValueImpl<String, String>[] uriValues = new ParsedValueImpl[] {\n@@ -2235,1 +2235,1 @@\n-        ParsedValueImpl parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n+        ParsedValueImpl<ParsedValue<String, String>[], String> parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n@@ -2239,1 +2239,1 @@\n-            ParsedValueImpl[] values = new ParsedValueImpl[1];\n+            ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[1];\n@@ -2263,1 +2263,1 @@\n-            ParsedValueImpl[] values = new ParsedValueImpl[5];\n+            ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[5];\n@@ -2276,1 +2276,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[6];\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[6];\n@@ -2290,1 +2290,1 @@\n-    private ParsedValueImpl<ParsedValue[], Paint> parseRepeatingImagePattern(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<ParsedValue<String, String>[], String>[], Paint> parseRepeatingImagePattern(final Term root) throws ParseException {\n@@ -2307,1 +2307,1 @@\n-        ParsedValueImpl[] uriValues = new ParsedValueImpl[] {\n+        ParsedValueImpl<String, String>[] uriValues = new ParsedValueImpl[] {\n@@ -2311,2 +2311,2 @@\n-        ParsedValueImpl parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n-        ParsedValueImpl[] values = new ParsedValueImpl[1];\n+        ParsedValueImpl<ParsedValue<String, String>[], String> parsedURI = new ParsedValueImpl<>(uriValues, URLConverter.getInstance());\n+        ParsedValueImpl<ParsedValue<String, String>[], String>[] values = new ParsedValueImpl[1];\n@@ -2367,1 +2367,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],Insets>[], Insets[]> parseInsetsLayers(Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[], Insets>[], Insets[]> parseInsetsLayers(Term root)\n@@ -2374,1 +2374,1 @@\n-        ParsedValueImpl<ParsedValue[],Insets>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[], Insets>[] layers = new ParsedValueImpl[nLayers];\n@@ -2377,1 +2377,1 @@\n-            ParsedValueImpl<?,Size>[] sides = parseSize1to4(temp);\n+            ParsedValueImpl<?, Size>[] sides = parseSize1to4(temp);\n@@ -2390,1 +2390,1 @@\n-    private ParsedValueImpl<ParsedValue[],Insets> parseInsetsLayer(Term root)\n+    private ParsedValueImpl<ParsedValue<?, Size>[],Insets> parseInsetsLayer(Term root)\n@@ -2394,1 +2394,1 @@\n-        ParsedValueImpl<ParsedValue[],Insets> layer = null;\n+        ParsedValueImpl<ParsedValue<?, Size>[],Insets> layer = null;\n@@ -2408,1 +2408,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],Margins>[], Margins[]> parseMarginsLayers(Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[],Margins>[], Margins[]> parseMarginsLayers(Term root)\n@@ -2415,1 +2415,1 @@\n-        ParsedValueImpl<ParsedValue[],Margins>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[],Margins>[] layers = new ParsedValueImpl[nLayers];\n@@ -2456,1 +2456,1 @@\n-                    ParsedValueImpl sizeValue = new ParsedValueImpl<Size, Size>(size(token), null);\n+                    ParsedValueImpl<Size, Size> sizeValue = new ParsedValueImpl<>(size(token), null);\n@@ -2614,1 +2614,1 @@\n-    private ParsedValueImpl<ParsedValue[], BackgroundPosition> parseBackgroundPosition(Term term)\n+    private ParsedValueImpl<ParsedValue<?, Size>[], BackgroundPosition> parseBackgroundPosition(Term term)\n@@ -2916,1 +2916,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]>\n@@ -2920,1 +2920,1 @@\n-        ParsedValueImpl<ParsedValue[], BackgroundPosition>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[], BackgroundPosition>[] layers = new ParsedValueImpl[nLayers];\n@@ -3038,1 +3038,1 @@\n-    private ParsedValueImpl<ParsedValue[], BackgroundSize> parseBackgroundSize(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], BackgroundSize> parseBackgroundSize(final Term root)\n@@ -3041,1 +3041,1 @@\n-        ParsedValueImpl<?,Size> height = null, width = null;\n+        ParsedValueImpl<?, Size> height = null, width = null;\n@@ -3096,1 +3096,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] {\n+        ParsedValueImpl<String, Object>[] values = new ParsedValueImpl[] {\n@@ -3106,1 +3106,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundSize>[],  BackgroundSize[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[],  BackgroundSize[]>\n@@ -3110,1 +3110,1 @@\n-        ParsedValueImpl<ParsedValue[], BackgroundSize>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, ?>[], BackgroundSize>[] layers = new ParsedValueImpl[nLayers];\n@@ -3155,1 +3155,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]> parseBorderStyleSeries(final Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]> parseBorderStyleSeries(final Term root)\n@@ -3159,1 +3159,1 @@\n-        ParsedValueImpl<ParsedValue[],BorderStrokeStyle>[] borders = new ParsedValueImpl[4];\n+        ParsedValueImpl<ParsedValue<?, ?>[], BorderStrokeStyle>[] borders = new ParsedValueImpl[4];\n@@ -3174,1 +3174,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]>\n@@ -3178,1 +3178,1 @@\n-        ParsedValueImpl<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[] layers = new ParsedValueImpl[nLayers];\n@@ -3206,1 +3206,1 @@\n-    private ParsedValueImpl<ParsedValue[],BorderStrokeStyle> parseBorderStyle(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], BorderStrokeStyle> parseBorderStyle(final Term root)\n@@ -3210,6 +3210,6 @@\n-        ParsedValue<ParsedValue[],Number[]> dashStyle = null;\n-        ParsedValue<ParsedValue<?,Size>,Number> dashPhase = null;\n-        ParsedValue<String,StrokeType> strokeType = null;\n-        ParsedValue<String,StrokeLineJoin> strokeLineJoin = null;\n-        ParsedValue<ParsedValue<?,Size>,Number> strokeMiterLimit = null;\n-        ParsedValue<String,StrokeLineCap> strokeLineCap = null;\n+        ParsedValue<ParsedValue<?,?>[], Number[]> dashStyle = null;\n+        ParsedValue<ParsedValue<?, Size>, Number> dashPhase = null;\n+        ParsedValue<String, StrokeType> strokeType = null;\n+        ParsedValue<String, StrokeLineJoin> strokeLineJoin = null;\n+        ParsedValue<ParsedValue<?, Size>, Number> strokeMiterLimit = null;\n+        ParsedValue<String, StrokeLineCap> strokeLineCap = null;\n@@ -3254,1 +3254,1 @@\n-            ParsedValueImpl[] lineJoinValues = parseStrokeLineJoin(term);\n+            ParsedValueImpl<?, ?>[] lineJoinValues = parseStrokeLineJoin(term);\n@@ -3256,2 +3256,2 @@\n-                strokeLineJoin = lineJoinValues[0];\n-                strokeMiterLimit = lineJoinValues[1];\n+                strokeLineJoin = (ParsedValue<String, StrokeLineJoin>) lineJoinValues[0];\n+                strokeMiterLimit = (ParsedValue<ParsedValue<?, Size>, Number>) lineJoinValues[1];\n@@ -3292,1 +3292,1 @@\n-        final ParsedValue[] values = new ParsedValue[]{\n+        final ParsedValue<?, ?>[] values = new ParsedValue[]{\n@@ -3301,1 +3301,1 @@\n-        return new ParsedValueImpl(values, BorderStyleConverter.getInstance());\n+        return new ParsedValueImpl<>(values, BorderStyleConverter.getInstance());\n@@ -3307,1 +3307,1 @@\n-    private ParsedValue<ParsedValue[],Number[]> dashStyle(final Term root) throws ParseException {\n+    private ParsedValue<ParsedValue<?, ?>[], Number[]> dashStyle(final Term root) throws ParseException {\n@@ -3313,1 +3313,1 @@\n-        ParsedValue<ParsedValue[],Number[]>  segments = null;\n+        ParsedValue<ParsedValue<?, ?>[], Number[]> segments = null;\n@@ -3317,1 +3317,1 @@\n-            segments = segments(root);\n+            segments = (ParsedValue<ParsedValue<?, ?>[], Number[]>)(ParsedValue<?, ?>) segments(root);\n@@ -3328,1 +3328,1 @@\n-    private ParsedValue<ParsedValue[],Number[]>  borderStyle(Term root)\n+    private ParsedValue<ParsedValue<?, ?>[], Number[]> borderStyle(Term root)\n@@ -3368,1 +3368,1 @@\n-    private ParsedValueImpl<ParsedValue[],Number[]> segments(Term root)\n+    private ParsedValueImpl<ParsedValue<?, Size>[], Number[]> segments(Term root)\n@@ -3381,1 +3381,1 @@\n-        ParsedValueImpl<?,Size>[] segments = new ParsedValueImpl[nArgs];\n+        ParsedValueImpl<?, Size>[] segments = new ParsedValueImpl[nArgs];\n@@ -3388,1 +3388,1 @@\n-        return new ParsedValueImpl<>(segments,SizeConverter.SequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(segments, SizeConverter.SequenceConverter.getInstance());\n@@ -3392,1 +3392,1 @@\n-    private ParsedValueImpl<String,StrokeType> parseStrokeType(final Term root) {\n+    private ParsedValueImpl<String, StrokeType> parseStrokeType(final Term root) {\n@@ -3401,1 +3401,1 @@\n-            return new ParsedValueImpl<String,StrokeType>(keyword, new EnumConverter(StrokeType.class));\n+            return new ParsedValueImpl<>(keyword, new EnumConverter<>(StrokeType.class));\n@@ -3412,1 +3412,1 @@\n-    private ParsedValueImpl[] parseStrokeLineJoin(final Term root)\n+    private ParsedValueImpl<?, ?>[] parseStrokeLineJoin(final Term root)\n@@ -3421,2 +3421,2 @@\n-            ParsedValueImpl<String,StrokeLineJoin> strokeLineJoin =\n-                    new ParsedValueImpl<String,StrokeLineJoin>(keyword, new EnumConverter(StrokeLineJoin.class));\n+            ParsedValueImpl<String, StrokeLineJoin> strokeLineJoin =\n+                    new ParsedValueImpl<>(keyword, new EnumConverter<>(StrokeLineJoin.class));\n@@ -3424,1 +3424,1 @@\n-            ParsedValueImpl<ParsedValue<?,Size>,Number> strokeMiterLimit = null;\n+            ParsedValueImpl<ParsedValue<?, Size>, Number> strokeMiterLimit = null;\n@@ -3446,1 +3446,1 @@\n-    private ParsedValueImpl<String,StrokeLineCap> parseStrokeLineCap(final Term root) {\n+    private ParsedValueImpl<String, StrokeLineCap> parseStrokeLineCap(final Term root) {\n@@ -3454,1 +3454,1 @@\n-            return new ParsedValueImpl<String,StrokeLineCap>(keyword, new EnumConverter(StrokeLineCap.class));\n+            return new ParsedValueImpl<>(keyword, new EnumConverter<>(StrokeLineCap.class));\n@@ -3463,1 +3463,1 @@\n-    private ParsedValueImpl<ParsedValue[],BorderImageSlices> parseBorderImageSlice(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], BorderImageSlices> parseBorderImageSlice(final Term root)\n@@ -3492,1 +3492,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[] {\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[] {\n@@ -3494,1 +3494,1 @@\n-                new ParsedValueImpl<Boolean,Boolean>(fill, null)\n+                new ParsedValueImpl<>(fill, null)\n@@ -3499,1 +3499,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderImageSlices>[],BorderImageSlices[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[], BorderImageSlices[]>\n@@ -3503,1 +3503,1 @@\n-        ParsedValueImpl<ParsedValue[], BorderImageSlices>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, ?>[], BorderImageSlices>[] layers = new ParsedValueImpl[nLayers];\n@@ -3510,1 +3510,1 @@\n-        return new ParsedValueImpl<> (layers, SliceSequenceConverter.getInstance());\n+        return new ParsedValueImpl<>(layers, SliceSequenceConverter.getInstance());\n@@ -3517,1 +3517,1 @@\n-    private ParsedValueImpl<ParsedValue[], BorderWidths> parseBorderImageWidth(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, Size>[], BorderWidths> parseBorderImageWidth(final Term root)\n@@ -3524,1 +3524,1 @@\n-        ParsedValueImpl<?,Size>[] insets = new ParsedValueImpl[4];\n+        ParsedValueImpl<?, Size>[] insets = new ParsedValueImpl[4];\n@@ -3543,1 +3543,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderWidths>[],BorderWidths[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[], BorderWidths>[], BorderWidths[]>\n@@ -3547,1 +3547,1 @@\n-        ParsedValueImpl<ParsedValue[], BorderWidths>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[], BorderWidths>[] layers = new ParsedValueImpl[nLayers];\n@@ -3581,1 +3581,1 @@\n-    private ParsedValueImpl<ParsedValue[],String> parseURI(Term root)\n+    private ParsedValueImpl<ParsedValue<String, String>[], String> parseURI(Term root)\n@@ -3592,1 +3592,1 @@\n-        ParsedValueImpl[] uriValues = new ParsedValueImpl[] {\n+        ParsedValueImpl<String, String>[] uriValues = new ParsedValueImpl[] {\n@@ -3601,1 +3601,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],String>[],String[]> parseURILayers(Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<String, String>[],String>[],String[]> parseURILayers(Term root)\n@@ -3608,1 +3608,1 @@\n-        ParsedValueImpl<ParsedValue[],String>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<String, String>[],String>[] layers = new ParsedValueImpl[nLayers];\n@@ -3771,1 +3771,1 @@\n-    private ParsedValueImpl<ParsedValue[],Font> parseFont(Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[],Font> parseFont(Term root) throws ParseException {\n@@ -3834,1 +3834,1 @@\n-        ParsedValueImpl[] values = new ParsedValueImpl[]{ ffamily, fsize, fweight, fstyle };\n+        ParsedValueImpl<?, ?>[] values = new ParsedValueImpl[]{ ffamily, fsize, fweight, fstyle };\n@@ -4030,1 +4030,1 @@\n-                                ParsedValueImpl[] uriValues = new ParsedValueImpl[] {\n+                                ParsedValueImpl<String, String>[] uriValues = new ParsedValueImpl[] {\n@@ -4032,1 +4032,1 @@\n-                                        new ParsedValueImpl<String,String>(sourceOfStylesheet, null)\n+                                        new ParsedValueImpl<>(sourceOfStylesheet, null)\n@@ -4034,1 +4034,1 @@\n-                                ParsedValue<ParsedValue[], String> parsedValue =\n+                                ParsedValue<ParsedValue<String, String>[], String> parsedValue =\n@@ -4181,1 +4181,1 @@\n-            ParsedValueImpl[] uriValues = new ParsedValueImpl[] {\n+            ParsedValueImpl<String, String>[] uriValues = new ParsedValueImpl[] {\n@@ -4183,1 +4183,1 @@\n-                    new ParsedValueImpl<String,String>(sourceOfStylesheet, null)\n+                    new ParsedValueImpl<>(sourceOfStylesheet, null)\n@@ -4185,1 +4185,1 @@\n-            ParsedValue<ParsedValue[], String> parsedValue =\n+            ParsedValue<ParsedValue<String, String>[], String> parsedValue =\n@@ -4551,1 +4551,1 @@\n-        ParsedValueImpl value = null;\n+        ParsedValueImpl<?, ?> value = null;\n@@ -4827,1 +4827,1 @@\n-            private final CssMetaData styleableProperty;\n+            private final CssMetaData<?, ?> styleableProperty;\n@@ -4836,2 +4836,2 @@\n-            public PropertySetError(CssMetaData styleableProperty,\n-                    Styleable styleable, String message) {\n+            public <S extends Styleable> PropertySetError(CssMetaData<S, ?> styleableProperty,\n+                    S styleable, String message) {\n@@ -4847,1 +4847,1 @@\n-            CssMetaData getProperty() {\n+            CssMetaData<?, ?> getProperty() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":164,"deletions":164,"binary":false,"changes":328,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    final ParsedValue parsedValue;\n+    final ParsedValue<?, ?> parsedValue;\n@@ -52,1 +52,1 @@\n-    Declaration(final String propertyName, final ParsedValue parsedValue,\n+    Declaration(final String propertyName, final ParsedValue<?, ?> parsedValue,\n@@ -69,1 +69,1 @@\n-    public ParsedValue getParsedValue() {\n+    public ParsedValue<?, ?> getParsedValue() {\n@@ -172,1 +172,1 @@\n-        final StyleConverter converter = parsedValue.getConverter();\n+        final StyleConverter<?, ?> converter = parsedValue.getConverter();\n@@ -177,2 +177,4 @@\n-            final ParsedValue[] values = (ParsedValue[])parsedValue.getValue();\n-            values[1] = new ParsedValueImpl<String,String>(stylesheetUrl, null);\n+            @SuppressWarnings(\"unchecked\")\n+            final ParsedValue<String, String>[] values = (ParsedValue<String, String>[]) parsedValue.getValue();\n+\n+            values[1] = new ParsedValueImpl<>(stylesheetUrl, null);\n@@ -182,2 +184,3 @@\n-            final ParsedValue<ParsedValue[], String>[] layers =\n-                (ParsedValue<ParsedValue[], String>[])parsedValue.getValue();\n+            @SuppressWarnings(\"unchecked\")\n+            final ParsedValue<ParsedValue<String, String>[], String>[] layers =\n+                (ParsedValue<ParsedValue<String, String>[], String>[]) parsedValue.getValue();\n@@ -186,2 +189,2 @@\n-                final ParsedValue[] values = layers[layer].getValue();\n-                values[1] = new ParsedValueImpl<String,String>(stylesheetUrl, null);\n+                final ParsedValue<String, String>[] values = layers[layer].getValue();\n+                values[1] = new ParsedValueImpl<>(stylesheetUrl, null);\n@@ -199,1 +202,1 @@\n-            ((ParsedValueImpl)parsedValue).writeBinary(os,stringStore);\n+            ((ParsedValueImpl<?, ?>) parsedValue).writeBinary(os,stringStore);\n@@ -208,1 +211,1 @@\n-        final ParsedValueImpl parsedValue = ParsedValueImpl.readBinary(bssVersion,is,strings);\n+        final ParsedValueImpl<?, ?> parsedValue = ParsedValueImpl.readBinary(bssVersion,is,strings);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/Declaration.java","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    public static StyleConverter<ParsedValue[], Effect> getEffectConverter() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Effect> getEffectConverter() {\n@@ -176,1 +176,1 @@\n-    public static StyleConverter<ParsedValue[], Font> getFontConverter() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Font> getFontConverter() {\n@@ -186,1 +186,1 @@\n-    public static StyleConverter<ParsedValue[], Insets> getInsetsConverter() {\n+    public static StyleConverter<ParsedValue<?, Size>[], Insets> getInsetsConverter() {\n@@ -237,1 +237,1 @@\n-    public static StyleConverter<ParsedValue[], String> getUrlConverter() {\n+    public static StyleConverter<ParsedValue<String, String>[], String> getUrlConverter() {\n@@ -271,1 +271,1 @@\n-    private static Map<ParsedValue, Object> cache;\n+    private static Map<ParsedValue<?, ?>, Object> cache;\n@@ -289,1 +289,1 @@\n-    protected T getCachedValue(ParsedValue key) {\n+    protected T getCachedValue(ParsedValue<?, ?> key) {\n@@ -302,1 +302,1 @@\n-    protected void cacheValue(ParsedValue key, Object value) {\n+    protected void cacheValue(ParsedValue<?, ?> key, Object value) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1412,3 +1412,3 @@\n-                (CssMetaData<S, E>)getCssMetaData(Effect.class, property, key -> {\n-                    final StyleConverter<ParsedValue[], Effect> converter = StyleConverter.getEffectConverter();\n-                    return new SimpleCssMetaData(property, function, converter, initialValue, inherits);\n+                (CssMetaData<S, E>) getCssMetaData(Effect.class, property, key -> {\n+                    final StyleConverter<ParsedValue<?, ?>[], E> converter =  (StyleConverter<ParsedValue<?, ?>[], E>) StyleConverter.getEffectConverter();\n+                    return new SimpleCssMetaData<>(property, function, converter, initialValue, inherits);\n@@ -1464,1 +1464,1 @@\n-    createEnumCssMetaData(Class<? extends Enum> enumClass, final String property, final Function<S,StyleableProperty<E>> function, final E initialValue, final boolean inherits)\n+    createEnumCssMetaData(Class<E> enumClass, final String property, final Function<S,StyleableProperty<E>> function, final E initialValue, final boolean inherits)\n@@ -1477,1 +1477,1 @@\n-                    final EnumConverter<E> converter = new EnumConverter(enumClass);\n+                    final EnumConverter<E> converter = new EnumConverter<>(enumClass);\n@@ -1494,1 +1494,1 @@\n-    createEnumCssMetaData(Class<? extends Enum> enumClass, final String property, final Function<S,StyleableProperty<E>> function, final E initialValue) {\n+    createEnumCssMetaData(Class<E> enumClass, final String property, final Function<S,StyleableProperty<E>> function, final E initialValue) {\n@@ -1508,1 +1508,1 @@\n-    createEnumCssMetaData(Class<? extends Enum> enumClass, final String property, final Function<S,StyleableProperty<E>> function) {\n+    createEnumCssMetaData(Class<E> enumClass, final String property, final Function<S,StyleableProperty<E>> function) {\n@@ -1541,1 +1541,1 @@\n-                    final StyleConverter<ParsedValue[],Font> converter = StyleConverter.getFontConverter();\n+                    final StyleConverter<ParsedValue<?, ?>[], Font> converter = StyleConverter.getFontConverter();\n@@ -1601,1 +1601,1 @@\n-                    final StyleConverter<ParsedValue[],Insets> converter = StyleConverter.getInsetsConverter();\n+                    final StyleConverter<ParsedValue<?, Size>[], Insets> converter = StyleConverter.getInsetsConverter();\n@@ -1845,1 +1845,1 @@\n-                    final StyleConverter<ParsedValue[],String> converter = StyleConverter.getUrlConverter();\n+                    final StyleConverter<ParsedValue<String, String>[], String> converter = StyleConverter.getUrlConverter();\n@@ -1905,2 +1905,2 @@\n-            if (prop instanceof Property) {\n-                return !((Property)prop).isBound();\n+            if (prop instanceof Property<?> p) {\n+                return !p.isBound();\n@@ -1930,1 +1930,1 @@\n-    private CssMetaData<S, ?> getCssMetaData(final Class ofClass, String property) {\n+    private CssMetaData<S, ?> getCssMetaData(final Class<?> ofClass, String property) {\n@@ -1934,1 +1934,1 @@\n-    private CssMetaData<S, ?> getCssMetaData(final Class ofClass, String property, final Function<String,CssMetaData<S,?>> createFunction) {\n+    private CssMetaData<S, ?> getCssMetaData(final Class<?> ofClass, String property, final Function<String,CssMetaData<S,?>> createFunction) {\n@@ -1938,1 +1938,1 @@\n-        Pair<Class,CssMetaData<S,?>> entry = metaDataMap.get(key);\n+        Pair<Class<?>, CssMetaData<S,?>> entry = metaDataMap.get(key);\n@@ -1951,1 +1951,1 @@\n-        metaDataMap.put(key, new Pair(ofClass, cssMetaData));\n+        metaDataMap.put(key, new Pair<>(ofClass, cssMetaData));\n@@ -1956,1 +1956,1 @@\n-    private final Map<String,Pair<Class,CssMetaData<S,?>>> metaDataMap;\n+    private final Map<String,Pair<Class<?>, CssMetaData<S,?>>> metaDataMap;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleablePropertyFactory.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public final class DeriveColorConverter extends StyleConverter<ParsedValue[], Color> {\n+public final class DeriveColorConverter extends StyleConverter<ParsedValue<?, ?>[], Color> {\n@@ -59,2 +59,2 @@\n-    public Color convert(ParsedValue<ParsedValue[], Color> value, Font font) {\n-        ParsedValue[] values = value.getValue();\n+    public Color convert(ParsedValue<ParsedValue<?, ?>[], Color> value, Font font) {\n+        ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/DeriveColorConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public class EffectConverter extends StyleConverter<ParsedValue[], Effect> {\n+public class EffectConverter extends StyleConverter<ParsedValue<?, ?>[], Effect> {\n@@ -60,1 +60,1 @@\n-    public static StyleConverter<ParsedValue[], Effect> getInstance() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Effect> getInstance() {\n@@ -65,1 +65,1 @@\n-    public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+    public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -117,1 +117,1 @@\n-        public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+        public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -122,1 +122,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n@@ -196,1 +196,1 @@\n-        public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+        public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -201,1 +201,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n@@ -239,1 +239,1 @@\n-    private static Map<ParsedValue<ParsedValue[], Effect>, Effect> cache;\n+    private static Map<ParsedValue<ParsedValue<?, ?>[], Effect>, Effect> cache;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EffectConverter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -216,2 +216,2 @@\n-        if (other == null || !(other instanceof EnumConverter)) return false;\n-        return (enumClass.equals(((EnumConverter)other).enumClass));\n+        if (other == null || !(other instanceof EnumConverter<?> ec)) return false;\n+        return enumClass.equals(ec.enumClass);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EnumConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-public final class FontConverter extends StyleConverter<ParsedValue[], Font> {\n+public final class FontConverter extends StyleConverter<ParsedValue<?, ?>[], Font> {\n@@ -57,1 +57,1 @@\n-    public static StyleConverter<ParsedValue[], Font> getInstance() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Font> getInstance() {\n@@ -66,2 +66,2 @@\n-    public Font convert(ParsedValue<ParsedValue[], Font> value, Font font) {\n-        ParsedValue[] values = value.getValue();\n+    public Font convert(ParsedValue<ParsedValue<?, ?>[], Font> value, Font font) {\n+        ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/FontConverter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public final class InsetsConverter extends StyleConverter<ParsedValue[], Insets> {\n+public final class InsetsConverter extends StyleConverter<ParsedValue<?, Size>[], Insets> {\n@@ -56,1 +56,1 @@\n-    public static StyleConverter<ParsedValue[], Insets> getInstance() {\n+    public static StyleConverter<ParsedValue<?, Size>[], Insets> getInstance() {\n@@ -65,6 +65,6 @@\n-    public Insets convert(ParsedValue<ParsedValue[], Insets> value, Font font) {\n-        ParsedValue[] sides = value.getValue();\n-        double top = ((Size)sides[0].convert(font)).pixels(font);\n-        double right = (sides.length > 1) ? ((Size)sides[1].convert(font)).pixels(font) : top;\n-        double bottom = (sides.length > 2) ? ((Size)sides[2].convert(font)).pixels(font) : top;\n-        double left = (sides.length > 3) ? ((Size)sides[3].convert(font)).pixels(font) : right;\n+    public Insets convert(ParsedValue<ParsedValue<?, Size>[], Insets> value, Font font) {\n+        ParsedValue<?, Size>[] sides = value.getValue();\n+        double top = sides[0].convert(font).pixels(font);\n+        double right = (sides.length > 1) ? sides[1].convert(font).pixels(font) : top;\n+        double bottom = (sides.length > 2) ? sides[2].convert(font).pixels(font) : top;\n+        double left = (sides.length > 3) ? sides[3].convert(font).pixels(font) : right;\n@@ -84,1 +84,1 @@\n-    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], Insets>[], Insets[]> {\n+    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], Insets>[], Insets[]> {\n@@ -99,2 +99,2 @@\n-        public Insets[] convert(ParsedValue<ParsedValue<ParsedValue[], Insets>[], Insets[]> value, Font font) {\n-            ParsedValue<ParsedValue[], Insets>[] layers = value.getValue();\n+        public Insets[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], Insets>[], Insets[]> value, Font font) {\n+            ParsedValue<ParsedValue<?, Size>[], Insets>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/InsetsConverter.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public final class LadderConverter extends StyleConverter<ParsedValue[], Color> {\n+public final class LadderConverter extends StyleConverter<ParsedValue<?, ?>[], Color> {\n@@ -58,2 +58,2 @@\n-    public Color convert(ParsedValue<ParsedValue[], Color> value, Font font) {\n-        final ParsedValue[] values = value.getValue();\n+    public Color convert(ParsedValue<ParsedValue<?, ?>[], Color> value, Font font) {\n+        final ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/LadderConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+\n+import com.sun.javafx.css.ParsedValueImpl;\n@@ -123,1 +125,1 @@\n-    public static final class LinearGradientConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class LinearGradientConverter extends StyleConverter<ParsedValue<?, ?>[], Paint> {\n@@ -138,1 +140,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<?, ?>[], Paint> value, Font font) {\n@@ -143,1 +145,1 @@\n-            ParsedValue[] values = value.getValue();\n+            ParsedValue<?, ?>[] values = value.getValue();\n@@ -171,1 +173,1 @@\n-    public static final class ImagePatternConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class ImagePatternConverter extends StyleConverter<ParsedValue<?, ?>[], Paint> {\n@@ -186,1 +188,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<?, ?>[], Paint> value, Font font) {\n@@ -191,2 +193,2 @@\n-            ParsedValue[] values = value.getValue();\n-            ParsedValue<?,?> urlParsedValue = values[0];\n+            ParsedValue<?, ?>[] values = value.getValue();\n+            ParsedValue<?, ?> urlParsedValue = values[0];\n@@ -225,1 +227,1 @@\n-    public static final class RepeatingImagePatternConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class RepeatingImagePatternConverter extends StyleConverter<ParsedValue<ParsedValue<String, String>[], String>[], Paint> {\n@@ -240,1 +242,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<ParsedValue<String, String>[], String>[], Paint> value, Font font) {\n@@ -245,3 +247,3 @@\n-            ParsedValue[] values = value.getValue();\n-            ParsedValue<?, ?> url = values[0];\n-            String u = (String) url.convert(font);\n+            ParsedValue<ParsedValue<String, String>[], String>[] values = value.getValue();\n+            ParsedValue<ParsedValue<String, String>[], String> url = values[0];\n+            String u = url.convert(font);\n@@ -267,1 +269,1 @@\n-    public static final class RadialGradientConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class RadialGradientConverter extends StyleConverter<ParsedValue<?, ?>[], Paint> {\n@@ -282,1 +284,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<?, ?>[], Paint> value, Font font) {\n@@ -287,1 +289,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/PaintConverter.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    public static final class SequenceConverter extends StyleConverter<ParsedValue[], Number[]> {\n+    public static final class SequenceConverter extends StyleConverter<ParsedValue<?, Size>[], Number[]> {\n@@ -88,2 +88,2 @@\n-        public Number[] convert(ParsedValue<ParsedValue[], Number[]> value, Font font) {\n-            ParsedValue[] sizes = value.getValue();\n+        public Number[] convert(ParsedValue<ParsedValue<?, Size>[], Number[]> value, Font font) {\n+            ParsedValue<?, Size>[] sizes = value.getValue();\n@@ -92,1 +92,1 @@\n-                doubles[i] = ((Size)sizes[i].convert(font)).pixels(font);\n+                doubles[i] = sizes[i].convert(font).pixels(font);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/SizeConverter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public final class StopConverter extends StyleConverter<ParsedValue[], Stop> {\n+public final class StopConverter extends StyleConverter<ParsedValue<?, ?>[], Stop> {\n@@ -60,2 +60,2 @@\n-    public Stop convert(ParsedValue<ParsedValue[], Stop> value, Font font) {\n-        ParsedValue[] values = value.getValue();\n+    public Stop convert(ParsedValue<ParsedValue<?, ?>[], Stop> value, Font font) {\n+        ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/StopConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-public final class URLConverter extends StyleConverter<ParsedValue[], String> {\n+public final class URLConverter extends StyleConverter<ParsedValue<String, String>[], String> {\n@@ -64,1 +64,1 @@\n-    public static StyleConverter<ParsedValue[], String> getInstance() {\n+    public static StyleConverter<ParsedValue<String, String>[], String> getInstance() {\n@@ -73,1 +73,1 @@\n-    public String convert(ParsedValue<ParsedValue[], String> value, Font font) {\n+    public String convert(ParsedValue<ParsedValue<String, String>[], String> value, Font font) {\n@@ -77,1 +77,1 @@\n-        ParsedValue[] values = value.getValue();\n+        ParsedValue<String, String>[] values = value.getValue();\n@@ -257,1 +257,1 @@\n-    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], String>[], String[]> {\n+    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue<String, String>[], String>[], String[]> {\n@@ -272,2 +272,2 @@\n-        public String[] convert(ParsedValue<ParsedValue<ParsedValue[], String>[], String[]> value, Font font) {\n-            ParsedValue<ParsedValue[], String>[] layers = value.getValue();\n+        public String[] convert(ParsedValue<ParsedValue<ParsedValue<String, String>[], String>[], String[]> value, Font font) {\n+            ParsedValue<ParsedValue<String, String>[], String>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/URLConverter.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -476,1 +476,1 @@\n-        new ReadOnlyObjectWrapper(JobStatus.NOT_STARTED);\n+        new ReadOnlyObjectWrapper<>(JobStatus.NOT_STARTED);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/print\/PrinterJob.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+import javafx.css.Size;\n@@ -67,0 +68,3 @@\n+import javafx.css.converter.InsetsConverter;\n+import javafx.geometry.Insets;\n+\n@@ -197,1 +201,1 @@\n-            if (parent instanceof Node == false) {\n+            if (!(parent instanceof Node parentNode)) {\n@@ -201,1 +205,0 @@\n-            Node parentNode = (Node)parent;\n@@ -213,1 +216,1 @@\n-                    parentNode.styleHelper.firstStyleableAncestor = new WeakReference(findFirstStyleableAncestor(parentNode)) ;\n+                    parentNode.styleHelper.firstStyleableAncestor = new WeakReference<>(findFirstStyleableAncestor(parentNode)) ;\n@@ -254,3 +257,3 @@\n-            if (parent instanceof Node) {\n-                if (((Node) parent).styleHelper != null) {\n-                    ancestor = (Node) parent;\n+            if (parent instanceof Node n) {\n+                if (n.styleHelper != null) {\n+                    ancestor = n;\n@@ -386,3 +389,3 @@\n-                if ( parent instanceof Node) {\n-                    Node parentNode = (Node)parent;\n-                final CssStyleHelper helper = parentNode.styleHelper;\n+                if (parent instanceof Node parentNode) {\n+                    final CssStyleHelper helper = parentNode.styleHelper;\n+\n@@ -422,1 +425,1 @@\n-                SubScene subScene =  (styleable instanceof Node) ? ((Node) styleable).getSubScene() : null;\n+                SubScene subScene = (styleable instanceof Node n) ? n.getSubScene() : null;\n@@ -451,1 +454,1 @@\n-        private final Map<CssMetaData, CalculatedValue> cssSetProperties;\n+        private final Map<CssMetaData<? extends Styleable, ?>, CalculatedValue> cssSetProperties;\n@@ -466,1 +469,1 @@\n-        Set<Entry<CssMetaData, CalculatedValue>> entrySet = new HashSet<>(cacheContainer.cssSetProperties.entrySet());\n+        Set<Entry<CssMetaData<? extends Styleable, ?>, CalculatedValue>> entrySet = new HashSet<>(cacheContainer.cssSetProperties.entrySet());\n@@ -469,1 +472,1 @@\n-        for (Entry<CssMetaData, CalculatedValue> resetValues : entrySet) {\n+        for (Entry<CssMetaData<? extends Styleable, ?>, CalculatedValue> resetValues : entrySet) {\n@@ -471,2 +474,3 @@\n-            final CssMetaData metaData = resetValues.getKey();\n-            final StyleableProperty styleableProperty = metaData.getStyleableProperty(styleable);\n+            @SuppressWarnings(\"unchecked\")\n+            final CssMetaData<Styleable, Object> metaData = (CssMetaData<Styleable, Object>) resetValues.getKey();\n+            final StyleableProperty<Object> styleableProperty = metaData.getStyleableProperty(styleable);\n@@ -625,1 +629,1 @@\n-        final List<CssMetaData<? extends Styleable,  ?>> styleables = node.getCssMetaData();\n+        final List<CssMetaData<? extends Styleable, ?>> styleables = node.getCssMetaData();\n@@ -655,1 +659,1 @@\n-                final ParsedValue cssValue = style.getParsedValue();\n+                final ParsedValue<?, ?> cssValue = style.getParsedValue();\n@@ -657,1 +661,1 @@\n-                ParsedValue resolved = resolveLookups(node, cssValue, styleMap, transitionStates[0], whence, new HashSet<>());\n+                ParsedValue<?, ?> resolved = resolveLookups(node, cssValue, styleMap, transitionStates[0], whence, new HashSet<>());\n@@ -679,2 +683,1 @@\n-            CalculatedValue calculatedValue = lookup(node, cssMetaData, styleMap, transitionStates[0],\n-                        node, cachedFont);\n+            CalculatedValue calculatedValue = lookup(node, cssMetaData, styleMap, transitionStates[0], cachedFont);\n@@ -688,1 +691,1 @@\n-                StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(node);\n+                StyleableProperty<Object> styleableProperty = cssMetaData.getStyleableProperty(node);\n@@ -722,1 +725,1 @@\n-                StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(node);\n+                StyleableProperty<?> styleableProperty = cssMetaData.getStyleableProperty(node);\n@@ -809,1 +812,1 @@\n-        final List<CssMetaData<? extends Styleable,  ?>> styleables = node.getCssMetaData();\n+        final List<CssMetaData<? extends Styleable, ?>> styleables = node.getCssMetaData();\n@@ -858,2 +861,1 @@\n-                calculatedValue = lookup(node, cssMetaData, styleMap, transitionStates[0],\n-                        node, cachedFont);\n+                calculatedValue = lookup(node, cssMetaData, styleMap, transitionStates[0], cachedFont);\n@@ -896,1 +898,1 @@\n-                        StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(node);\n+                        StyleableProperty<Object> styleableProperty = cssMetaData.getStyleableProperty(node);\n@@ -913,1 +915,1 @@\n-                StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(node);\n+                StyleableProperty<Object> styleableProperty = cssMetaData.getStyleableProperty(node);\n@@ -966,1 +968,1 @@\n-                StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(node);\n+                StyleableProperty<Object> styleableProperty = cssMetaData.getStyleableProperty(node);\n@@ -1066,1 +1068,1 @@\n-                                   final CssMetaData cssMetaData,\n+                                   final CssMetaData<Styleable, ?> cssMetaData,\n@@ -1069,1 +1071,0 @@\n-                                   final Styleable originatingStyleable,\n@@ -1091,2 +1092,1 @@\n-                return handleNoStyleFound(styleable, cssMetaData,\n-                        styleMap, states, originatingStyleable, cachedFont);\n+                return handleNoStyleFound(styleable, cssMetaData, styleMap, states, cachedFont);\n@@ -1106,1 +1106,1 @@\n-                Map<CssMetaData,Object> subs = null;\n+                Map<CssMetaData<? extends Styleable, ?>, Object> subs = null;\n@@ -1112,4 +1112,3 @@\n-                    CssMetaData subkey = subProperties.get(i);\n-                    CalculatedValue constituent =\n-                        lookup(styleable, subkey, styleMap, states,\n-                                originatingStyleable, cachedFont);\n+                    @SuppressWarnings(\"unchecked\")\n+                    CssMetaData<Styleable, ?> subkey = (CssMetaData<Styleable, ?>) subProperties.get(i);\n+                    CalculatedValue constituent = lookup(styleable, subkey, styleMap, states, cachedFont);\n@@ -1138,2 +1137,1 @@\n-                    return handleNoStyleFound(styleable, cssMetaData,\n-                            styleMap, states, originatingStyleable, cachedFont);\n+                    return handleNoStyleFound(styleable, cssMetaData, styleMap, states, cachedFont);\n@@ -1143,1 +1141,3 @@\n-                    final StyleConverter keyType = cssMetaData.getConverter();\n+                    @SuppressWarnings(\"unchecked\")\n+                    final StyleConverter<Styleable, ?> keyType = (StyleConverter<Styleable, ?>) cssMetaData.getConverter();\n+\n@@ -1172,1 +1172,1 @@\n-                StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(originatingStyleable);\n+                StyleableProperty<?> styleableProperty = cssMetaData.getStyleableProperty(styleable);\n@@ -1181,1 +1181,1 @@\n-            final ParsedValue cssValue = style.getParsedValue();\n+            final ParsedValue<?, ?> cssValue = style.getParsedValue();\n@@ -1192,2 +1192,1 @@\n-        return calculateValue(style, styleable, cssMetaData, styleMap, states,\n-                originatingStyleable, cachedFont);\n+        return calculateValue(style, styleable, cssMetaData, styleMap, states, cachedFont);\n@@ -1200,2 +1199,2 @@\n-                                               final CssMetaData cssMetaData,\n-                                               final StyleMap styleMap, Set<PseudoClass> pseudoClassStates, Styleable originatingStyleable,\n+                                               final CssMetaData<Styleable, ?> cssMetaData,\n+                                               final StyleMap styleMap, Set<PseudoClass> pseudoClassStates,\n@@ -1207,1 +1206,1 @@\n-            StyleableProperty styleableProperty = cssMetaData.getStyleableProperty(styleable);\n+            StyleableProperty<?> styleableProperty = cssMetaData.getStyleableProperty(styleable);\n@@ -1223,2 +1222,1 @@\n-                            styleMap, pseudoClassStates, originatingStyleable,\n-                                   cachedFont);\n+                            styleMap, pseudoClassStates, cachedFont);\n@@ -1253,1 +1251,1 @@\n-                final ParsedValue cssValue = cascadingStyle.getParsedValue();\n+                final ParsedValue<?, ?> cssValue = cascadingStyle.getParsedValue();\n@@ -1296,2 +1294,2 @@\n-                    styleableParent instanceof Node\n-                        ? ((Node)styleableParent).pseudoClassStates\n+                    styleableParent instanceof Node n\n+                        ? n.pseudoClassStates\n@@ -1307,1 +1305,1 @@\n-    private ParsedValue resolveLookups(\n+    private ParsedValue<?, ?> resolveLookups(\n@@ -1309,1 +1307,1 @@\n-            final ParsedValue parsedValue,\n+            final ParsedValue<?, ?> parsedValue,\n@@ -1312,1 +1310,1 @@\n-            Set<ParsedValue> resolves) {\n+            Set<ParsedValue<?, ?>> resolves) {\n@@ -1322,1 +1320,1 @@\n-            if (val instanceof String) {\n+            if (val instanceof String s) {\n@@ -1324,1 +1322,1 @@\n-                final String sval = ((String) val).toLowerCase(Locale.ROOT);\n+                final String sval = s.toLowerCase(Locale.ROOT);\n@@ -1357,1 +1355,1 @@\n-                    ParsedValue pv = resolveLookups(styleable, resolved.getParsedValue(), styleMap, states, whence, resolves);\n+                    ParsedValue<?, ?> pv = resolveLookups(styleable, resolved.getParsedValue(), styleMap, states, whence, resolves);\n@@ -1376,1 +1374,1 @@\n-        if (val instanceof ParsedValue[][]) {\n+        if (val instanceof ParsedValue<?, ?>[][] layers) {\n@@ -1379,2 +1377,1 @@\n-            final ParsedValue[][] layers = (ParsedValue[][])val;\n-            ParsedValue[][] resolved = new ParsedValue[layers.length][0];\n+            ParsedValue<?, ?>[][] resolved = new ParsedValue[layers.length][0];\n@@ -1392,1 +1389,4 @@\n-            return new ParsedValueImpl(resolved, parsedValue.getConverter(), false);\n+            @SuppressWarnings(\"unchecked\")\n+            StyleConverter<Object, Object> castConverter = (StyleConverter<Object, Object>) parsedValue.getConverter();\n+\n+            return new ParsedValueImpl<>(resolved, castConverter, false);\n@@ -1394,1 +1394,1 @@\n-        } else if (val instanceof ParsedValueImpl[]) {\n+        } else if (val instanceof ParsedValueImpl<?, ?>[] layer) {\n@@ -1397,2 +1397,1 @@\n-            final ParsedValue[] layer = (ParsedValue[])val;\n-            ParsedValue[] resolved = new ParsedValue[layer.length];\n+            ParsedValue<?, ?>[] resolved = new ParsedValue[layer.length];\n@@ -1407,1 +1406,4 @@\n-            return new ParsedValueImpl(resolved, parsedValue.getConverter(), false);\n+            @SuppressWarnings(\"unchecked\")\n+            StyleConverter<Object, Object> castConverter = (StyleConverter<Object, Object>) parsedValue.getConverter();\n+\n+            return new ParsedValueImpl<>(resolved, castConverter, false);\n@@ -1415,1 +1417,1 @@\n-    private String getUnresolvedLookup(final ParsedValue resolved) {\n+    private String getUnresolvedLookup(final ParsedValue<?, ?> resolved) {\n@@ -1419,2 +1421,2 @@\n-        if (resolved.isLookup() && value instanceof String) {\n-            return (String)value;\n+        if (resolved.isLookup() && value instanceof String s) {\n+            return s;\n@@ -1423,2 +1425,1 @@\n-        if (value instanceof ParsedValue[][]) {\n-            final ParsedValue[][] layers = (ParsedValue[][])value;\n+        if (value instanceof ParsedValue<?, ?>[][] layers) {\n@@ -1433,3 +1434,2 @@\n-        } else if (value instanceof ParsedValue[]) {\n-        \/\/ If ParsedValue is a sequence of values, resolve the lookups for each.\n-            final ParsedValue[] layer = (ParsedValue[])value;\n+        } else if (value instanceof ParsedValue<?, ?>[] layer) {\n+            \/\/ If ParsedValue is a sequence of values, resolve the lookups for each.\n@@ -1446,1 +1446,1 @@\n-    private String formatUnresolvedLookupMessage(Styleable styleable, CssMetaData cssMetaData, Style style, ParsedValue resolved, ClassCastException cce) {\n+    private String formatUnresolvedLookupMessage(Styleable styleable, CssMetaData<Styleable, ?> cssMetaData, Style style, ParsedValue<?, ?> resolved, ClassCastException cce) {\n@@ -1486,1 +1486,1 @@\n-    private String formatExceptionMessage(Styleable styleable, CssMetaData cssMetaData, Style style, Exception e) {\n+    private String formatExceptionMessage(Styleable styleable, CssMetaData<Styleable, ?> cssMetaData, Style style, Exception e) {\n@@ -1526,1 +1526,1 @@\n-            final CssMetaData cssMetaData,\n+            final CssMetaData<Styleable, ?> cssMetaData,\n@@ -1528,1 +1528,0 @@\n-            final Styleable originatingStyleable,\n@@ -1531,1 +1530,1 @@\n-        final ParsedValue cssValue = style.getParsedValue();\n+        final ParsedValue<?, ?> cssValue = style.getParsedValue();\n@@ -1534,1 +1533,1 @@\n-            ParsedValue resolved = null;\n+            ParsedValue<?, ?> resolved = null;\n@@ -1610,1 +1609,1 @@\n-                final StyleConverter cssMetaDataConverter = cssMetaData.getConverter();\n+                final StyleConverter<?, ?> cssMetaDataConverter = cssMetaData.getConverter();\n@@ -1616,2 +1615,2 @@\n-                if (cssMetaDataConverter == StyleConverter.getInsetsConverter()) {\n-                    if (resolved.getValue() instanceof ParsedValue) {\n+                if (cssMetaDataConverter instanceof InsetsConverter ic) {\n+                    if (resolved.getValue() instanceof ParsedValue<?, ?> resolvedValue) {\n@@ -1621,1 +1620,1 @@\n-                        resolved = new ParsedValueImpl(new ParsedValue[] {(ParsedValue)resolved.getValue()}, null, false);\n+                        resolved = new ParsedValueImpl<>(new ParsedValue[] {resolvedValue}, null, false);\n@@ -1623,1 +1622,5 @@\n-                    val = cssMetaDataConverter.convert(resolved, fontForFontRelativeSizes);\n+\n+                    @SuppressWarnings(\"unchecked\")\n+                    ParsedValue<ParsedValue<?, Size>[], Insets> castResolved = (ParsedValue<ParsedValue<?, Size>[], Insets>) resolved;\n+\n+                    val = ic.convert(castResolved, fontForFontRelativeSizes);\n@@ -1625,1 +1628,1 @@\n-                else if (resolved.getConverter() != null)\n+                else if (resolved.getConverter() != null) {\n@@ -1627,2 +1630,8 @@\n-                else\n-                    val = cssMetaData.getConverter().convert(resolved, fontForFontRelativeSizes);\n+                }\n+                else {\n+                    @SuppressWarnings(\"unchecked\")\n+                    StyleConverter<Object, Object> converter = (StyleConverter<Object, Object>) cssMetaData.getConverter();\n+                    @SuppressWarnings(\"unchecked\")\n+                    ParsedValue<Object, Object> castResolved = (ParsedValue<Object, Object>) resolved;\n+                    val = converter.convert(castResolved, fontForFontRelativeSizes);\n+                }\n@@ -1634,1 +1643,1 @@\n-                final String msg = formatUnresolvedLookupMessage(styleable, cssMetaData, style.getStyle(),resolved, cce);\n+                final String msg = formatUnresolvedLookupMessage(styleable, cssMetaData, style.getStyle(), resolved, cce);\n@@ -1683,2 +1692,2 @@\n-    private static final CssMetaData dummyFontProperty =\n-            new FontCssMetaData<Node>(\"-fx-font\", Font.getDefault()) {\n+    private static final CssMetaData<Styleable, Font> dummyFontProperty =\n+            new FontCssMetaData<>(\"-fx-font\", Font.getDefault()) {\n@@ -1687,1 +1696,1 @@\n-        public boolean isSettable(Node node) {\n+        public boolean isSettable(Styleable node) {\n@@ -1692,1 +1701,1 @@\n-        public StyleableProperty<Font> getStyleableProperty(Node node) {\n+        public StyleableProperty<Font> getStyleableProperty(Styleable node) {\n@@ -1699,1 +1708,1 @@\n-        if (styleable instanceof Node == false) return null;\n+        if (!(styleable instanceof Node parent)) return null;\n@@ -1703,2 +1712,0 @@\n-        Node parent = (Node)styleable;\n-\n@@ -1844,1 +1851,1 @@\n-        Set<PseudoClass> states = styleable instanceof Node ? ((Node)styleable).pseudoClassStates : styleable.getPseudoClassStates();\n+        Set<PseudoClass> states = styleable instanceof Node n ? n.pseudoClassStates : styleable.getPseudoClassStates();\n@@ -1880,1 +1887,1 @@\n-                CssStyleHelper parentStyleHelper = parent instanceof Node ? ((Node)parent).styleHelper : null;\n+                CssStyleHelper parentStyleHelper = parent instanceof Node n ? n.styleHelper : null;\n@@ -1891,1 +1898,1 @@\n-                        final ParsedValue cssValue = cascadingStyle.getParsedValue();\n+                        final ParsedValue<?, ?> cssValue = cascadingStyle.getParsedValue();\n@@ -1920,1 +1927,1 @@\n-                                styleMap, states, styleable, parentCachedFont);\n+                                styleMap, states, parentCachedFont);\n@@ -1923,1 +1930,1 @@\n-                if (cv.getValue() instanceof Font) {\n+                if (cv.getValue() instanceof Font font) {\n@@ -1925,1 +1932,0 @@\n-                    Font font = (Font)cv.getValue();\n@@ -1966,2 +1972,1 @@\n-                    calculateValue(fontSize, styleable, dummyFontProperty,\n-                            styleMap, states, styleable, parentCachedFont);\n+                    calculateValue(fontSize, styleable, dummyFontProperty, styleMap, states, parentCachedFont);\n@@ -2020,2 +2025,1 @@\n-                    calculateValue(fontWeight, styleable, dummyFontProperty,\n-                            styleMap, states, styleable, null);\n+                    calculateValue(fontWeight, styleable, dummyFontProperty, styleMap, states, null);\n@@ -2057,2 +2061,1 @@\n-                    calculateValue(fontStyle, styleable, dummyFontProperty,\n-                            styleMap, states, styleable, null);\n+                    calculateValue(fontStyle, styleable, dummyFontProperty, styleMap, states, null);\n@@ -2094,2 +2097,1 @@\n-                    calculateValue(fontFamily, styleable, dummyFontProperty,\n-                            styleMap, states, styleable, null);\n+                    calculateValue(fontFamily, styleable, dummyFontProperty, styleMap, states, null);\n@@ -2130,1 +2132,1 @@\n-            CssStyleHelper parentStyleHelper = parent instanceof Node ? ((Node)parent).styleHelper : null;\n+            CssStyleHelper parentStyleHelper = parent instanceof Node n ? n.styleHelper : null;\n@@ -2149,1 +2151,1 @@\n-                    final ParsedValue cssValue = cascadingStyle.getParsedValue();\n+                    final ParsedValue<?, ?> cssValue = cascadingStyle.getParsedValue();\n@@ -2172,1 +2174,1 @@\n-    static List<Style> getMatchingStyles(final Styleable styleable, final CssMetaData styleableProperty) {\n+    static List<Style> getMatchingStyles(final Styleable styleable, final CssMetaData<Styleable, ?> styleableProperty) {\n@@ -2174,1 +2176,1 @@\n-        if (!(styleable instanceof Node)) return Collections.<Style>emptyList();\n+        if (!(styleable instanceof Node node)) return Collections.<Style>emptyList();\n@@ -2176,1 +2178,0 @@\n-        Node node = (Node)styleable;\n@@ -2180,1 +2181,1 @@\n-            return helper.getMatchingStyles(node, styleableProperty, false);\n+            return helper.getMatchingStyles(styleable, styleableProperty, false);\n@@ -2192,1 +2193,5 @@\n-            for (CssMetaData metaData : node.getCssMetaData()) {\n+            List<CssMetaData<? extends Styleable, ?>> cssMetaData = node.getCssMetaData();\n+\n+            for (int i = 0; i < cssMetaData.size(); i++) {\n+                @SuppressWarnings(\"unchecked\")\n+                CssMetaData<Styleable, ?> metaData = (CssMetaData<Styleable, ?>) cssMetaData.get(i);\n@@ -2195,1 +2200,1 @@\n-                    StyleableProperty prop = metaData.getStyleableProperty(node);\n+                    StyleableProperty<?> prop = metaData.getStyleableProperty(node);\n@@ -2210,1 +2215,1 @@\n-    private List<Style> getMatchingStyles(final Styleable node, final CssMetaData styleableProperty, boolean matchState) {\n+    private List<Style> getMatchingStyles(final Styleable node, final CssMetaData<Styleable, ?> styleableProperty, boolean matchState) {\n@@ -2219,1 +2224,2 @@\n-                final CssMetaData subProperty = subProperties.get(n);\n+                @SuppressWarnings(\"unchecked\")\n+                final CssMetaData<Styleable, ?> subProperty = (CssMetaData<Styleable, ?>) subProperties.get(n);\n@@ -2235,1 +2241,1 @@\n-    private void getMatchingStyles(final Styleable node, final CssMetaData styleableProperty, final List<CascadingStyle> styleList, boolean matchState) {\n+    private void getMatchingStyles(final Styleable node, final CssMetaData<Styleable, ?> styleableProperty, final List<CascadingStyle> styleList, boolean matchState) {\n@@ -2248,1 +2254,1 @@\n-                    final ParsedValue parsedValue = cascadingStyle.getParsedValue();\n+                    final ParsedValue<?, ?> parsedValue = cascadingStyle.getParsedValue();\n@@ -2261,1 +2267,1 @@\n-                        final ParsedValue parsedValue = style.getParsedValue();\n+                        final ParsedValue<?, ?> parsedValue = style.getParsedValue();\n@@ -2270,2 +2276,2 @@\n-                    CssStyleHelper parentHelper = parent instanceof Node\n-                            ? ((Node)parent).styleHelper\n+                    CssStyleHelper parentHelper = parent instanceof Node n\n+                            ? n.styleHelper\n@@ -2285,1 +2291,1 @@\n-    private void getMatchingLookupStyles(final Styleable node, final ParsedValue parsedValue, final List<CascadingStyle> styleList, boolean matchState) {\n+    private void getMatchingLookupStyles(final Styleable node, final ParsedValue<?, ?> parsedValue, final List<CascadingStyle> styleList, boolean matchState) {\n@@ -2298,1 +2304,1 @@\n-                    final Node _parent = parent instanceof Node ? (Node)parent : null;\n+                    final Node _parent = parent instanceof Node n ? n : null;\n@@ -2344,3 +2350,2 @@\n-        if (val instanceof ParsedValue[][]) {\n-        \/\/ If ParsedValue is a layered sequence of values, resolve the lookups for each.\n-            final ParsedValue[][] layers = (ParsedValue[][])val;\n+        if (val instanceof ParsedValue<?, ?>[][] layers) {\n+            \/\/ If ParsedValue is a layered sequence of values, resolve the lookups for each.\n@@ -2354,3 +2359,2 @@\n-        } else if (val instanceof ParsedValue[]) {\n-        \/\/ If ParsedValue is a sequence of values, resolve the lookups for each.\n-            final ParsedValue[] layer = (ParsedValue[])val;\n+        } else if (val instanceof ParsedValue<?, ?>[] layer) {\n+            \/\/ If ParsedValue is a sequence of values, resolve the lookups for each.\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/CssStyleHelper.java","additions":137,"deletions":133,"binary":false,"changes":270,"status":"modified"},{"patch":"@@ -612,1 +612,1 @@\n-            public List<Style> getMatchingStyles(CssMetaData cssMetaData,\n+            public List<Style> getMatchingStyles(CssMetaData<Styleable, ?> cssMetaData,\n@@ -1382,1 +1382,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<Node, Boolean> getCssMetaData() {\n@@ -1470,1 +1470,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<Node, Number> getCssMetaData() {\n@@ -1517,1 +1517,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<Node, BlendMode> getCssMetaData() {\n@@ -5932,1 +5932,1 @@\n-            private List localToSceneListeners;\n+            private List<Object> localToSceneListeners;\n@@ -6070,1 +6070,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6101,1 +6101,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6132,1 +6132,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6163,1 +6163,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6194,1 +6194,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6225,1 +6225,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6256,1 +6256,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6455,1 +6455,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<Node, NodeOrientation> getCssMetaData() {\n@@ -6735,1 +6735,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Number> getCssMetaData() {\n@@ -6998,1 +6998,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Cursor> getCssMetaData() {\n@@ -7128,1 +7128,1 @@\n-                    public CssMetaData getCssMetaData() {\n+                    public CssMetaData<Node, Effect> getCssMetaData() {\n@@ -8364,1 +8364,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<Node, Boolean> getCssMetaData() {\n@@ -8912,1 +8912,1 @@\n-                EventType eventType = event.getEventType();\n+                EventType<?> eventType = event.getEventType();\n@@ -9314,1 +9314,1 @@\n-    static List<Style> getMatchingStyles(CssMetaData cssMetaData, Styleable styleable) {\n+    static List<Style> getMatchingStyles(CssMetaData<Styleable, ?> cssMetaData, Styleable styleable) {\n@@ -9323,1 +9323,3 @@\n-             if (ret instanceof ObservableMap) return (ObservableMap)ret;\n+             if (ret instanceof ObservableMap) {\n+                 return (ObservableMap<StyleableProperty<?>, List<Style>>)ret;\n+             }\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Node.java","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-    private final List<Node> viewOrderChildren = new ArrayList(1);\n+    private final List<Node> viewOrderChildren = new ArrayList<>(1);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Parent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,0 +71,1 @@\n+import javafx.css.Styleable;\n@@ -6344,1 +6345,1 @@\n-                public CssMetaData getCssMetaData() {\n+                public CssMetaData<? extends Styleable, NodeOrientation> getCssMetaData() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/Scene.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    protected ObservableValue registredOn;\n+    protected ObservableValue<?> registredOn;\n@@ -35,1 +35,1 @@\n-    public void register(ObservableValue value) {\n+    public void register(ObservableValue<?> value) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/effect\/EffectChangeListener.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -753,1 +753,1 @@\n-    Image(PixelBuffer pixelBuffer) {\n+    Image(PixelBuffer<?> pixelBuffer) {\n@@ -1194,1 +1194,1 @@\n-                public PixelFormat getPixelFormat() {\n+                public PixelFormat<? extends Buffer> getPixelFormat() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/Image.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -388,1 +388,1 @@\n-        static PixelFormat createByte(int colors[], boolean premult) {\n+        static IndexedPixelFormat createByte(int colors[], boolean premult) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/PixelFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-                public PixelFormat getPixelFormat() {\n+                public PixelFormat<? extends Buffer> getPixelFormat() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/image\/WritableImage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-        Iterator itr = DATA_FORMAT_LIST.iterator();\n+        Iterator<DataFormat> itr = DATA_FORMAT_LIST.iterator();\n@@ -229,1 +229,1 @@\n-            DataFormat dataFormat = (DataFormat) itr.next();\n+            DataFormat dataFormat = itr.next();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/DataFormat.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -194,1 +194,1 @@\n-        oos.writeObject(new ArrayList(composed));\n+        oos.writeObject(new ArrayList<>(composed));\n@@ -200,1 +200,1 @@\n-        ArrayList<InputMethodTextRun> o = (ArrayList)ois.readObject();\n+        ArrayList<InputMethodTextRun> o = (ArrayList<InputMethodTextRun>) ois.readObject();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/input\/InputMethodEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.scene.image.Image;\n@@ -89,1 +88,1 @@\n-    static final CssMetaData<Node,Image[]> BACKGROUND_IMAGE =\n+    static final CssMetaData<Node, String[]> BACKGROUND_IMAGE =\n@@ -110,2 +109,1 @@\n-            \/\/ Unchecked!\n-            (List) Collections.unmodifiableList(Arrays.asList(\n+            Collections.unmodifiableList(Arrays.asList(\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Background.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-class BackgroundConverter extends StyleConverter<ParsedValue[], Background> {\n+class BackgroundConverter extends StyleConverter<ParsedValue<?, ?>[], Background> {\n@@ -44,1 +44,1 @@\n-    static final StyleConverter<ParsedValue[], Background> INSTANCE = new BackgroundConverter();\n+    static final StyleConverter<ParsedValue<?, ?>[], Background> INSTANCE = new BackgroundConverter();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BackgroundConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    static final CssMetaData<Node,Paint[]> BORDER_COLOR =\n+    static final CssMetaData<Node, Paint[][]> BORDER_COLOR =\n@@ -125,1 +125,1 @@\n-    static final CssMetaData<Node,BorderWidths[]> BORDER_IMAGE_WIDTH =\n+    static final CssMetaData<Node, BorderWidths> BORDER_IMAGE_WIDTH =\n@@ -128,1 +128,1 @@\n-                    new BorderWidths[] { BorderWidths.DEFAULT });\n+                    BorderWidths.DEFAULT);\n@@ -136,2 +136,1 @@\n-            \/\/ Unchecked!\n-            (List) Collections.unmodifiableList(Arrays.asList(\n+            Collections.unmodifiableList(Arrays.asList(\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Border.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-class BorderConverter extends StyleConverter<ParsedValue[], Border> {\n+class BorderConverter extends StyleConverter<ParsedValue<?, ?>[], Border> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/BorderConverter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    private WeakReferenceQueue nodes = new WeakReferenceQueue();\n+    private WeakReferenceQueue<Parent> nodes = new WeakReferenceQueue<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/ConstraintsBase.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-            orientation = new StyleableObjectProperty(HORIZONTAL) {\n+            orientation = new StyleableObjectProperty<>(HORIZONTAL) {\n@@ -661,1 +661,1 @@\n-            runs = new ArrayList();\n+            runs = new ArrayList<>();\n@@ -716,1 +716,1 @@\n-            ArrayList<Node> rownodes = new ArrayList();\n+            List<Node> rownodes = new ArrayList<>();\n@@ -977,1 +977,1 @@\n-        ArrayList<LayoutRect> rects = new ArrayList();\n+        List<LayoutRect> rects = new ArrayList<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/FlowPane.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-                public CssMetaData getCssMetaData () {\n+                public CssMetaData<? extends Styleable, Number> getCssMetaData() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/HBox.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -600,1 +600,2 @@\n-        final ReadOnlyObjectPropertyBase imageProperty = (ReadOnlyObjectPropertyBase) observable;\n+        @SuppressWarnings(\"unchecked\")\n+        final ReadOnlyObjectPropertyBase<Image> imageProperty = (ReadOnlyObjectPropertyBase<Image>) observable;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Region.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-            orientation = new StyleableObjectProperty(HORIZONTAL) {\n+            orientation = new StyleableObjectProperty<>(HORIZONTAL) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/TilePane.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -106,2 +106,2 @@\n-        ((StyleableProperty)fillProperty()).applyStyle(null, null);\n-        ((StyleableProperty)strokeProperty()).applyStyle(null, Color.BLACK);\n+        ((StyleableProperty<Paint>) fillProperty()).applyStyle(null, null);\n+        ((StyleableProperty<Paint>) strokeProperty()).applyStyle(null, Color.BLACK);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Line.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-                        new WeakChangeListener(meshChangeListener);\n+                        new WeakChangeListener<>(meshChangeListener);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/MeshView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -139,2 +139,2 @@\n-        ((StyleableProperty)fillProperty()).applyStyle(null, null);\n-        ((StyleableProperty)strokeProperty()).applyStyle(null, Color.BLACK);\n+        ((StyleableProperty<Paint>) fillProperty()).applyStyle(null, null);\n+        ((StyleableProperty<Paint>) strokeProperty()).applyStyle(null, Color.BLACK);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Path.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import javafx.scene.Node;\n@@ -71,1 +70,1 @@\n-    WeakReferenceQueue nodes = new WeakReferenceQueue();\n+    WeakReferenceQueue<Path> paths = new WeakReferenceQueue<>();\n@@ -79,2 +78,2 @@\n-    void addNode(final Node n) {\n-        nodes.add(n);\n+    void addNode(final Path n) {\n+        paths.add(n);\n@@ -83,2 +82,2 @@\n-    void removeNode(final Node n) {\n-        nodes.remove(n);\n+    void removeNode(final Path n) {\n+        paths.remove(n);\n@@ -88,1 +87,1 @@\n-        final Iterator iterator = nodes.iterator();\n+        final Iterator<Path> iterator = paths.iterator();\n@@ -90,1 +89,1 @@\n-            ((Path) iterator.next()).markPathDirty();\n+            iterator.next().markPathDirty();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/PathElement.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -107,2 +107,2 @@\n-        ((StyleableProperty)fillProperty()).applyStyle(null, null);\n-        ((StyleableProperty)strokeProperty()).applyStyle(null, Color.BLACK);\n+        ((StyleableProperty<Paint>) fillProperty()).applyStyle(null, null);\n+        ((StyleableProperty<Paint>) strokeProperty()).applyStyle(null, Color.BLACK);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Polyline.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -983,1 +983,1 @@\n-        shapeChangeListener = listener != null ? new WeakReference(listener) : null;\n+        shapeChangeListener = listener != null ? new WeakReference<>(listener) : null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Shape.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-                        new WeakChangeListener(materialChangeListener);\n+                        new WeakChangeListener<>(materialChangeListener);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/Shape3D.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,5 +142,5 @@\n-    private final Listener pointsSyncer = new Listener(points);\n-    private final Listener normalsSyncer = new Listener(normals);\n-    private final Listener texCoordsSyncer = new Listener(texCoords);\n-    private final Listener facesSyncer = new Listener(faces);\n-    private final Listener faceSmoothingGroupsSyncer = new Listener(faceSmoothingGroups);\n+    private final Listener<ObservableFloatArray> pointsSyncer = new Listener<>(points);\n+    private final Listener<ObservableFloatArray> normalsSyncer = new Listener<>(normals);\n+    private final Listener<ObservableFloatArray> texCoordsSyncer = new Listener<>(texCoords);\n+    private final Listener<ObservableIntegerArray> facesSyncer = new Listener<>(faces);\n+    private final Listener<ObservableIntegerArray> faceSmoothingGroupsSyncer = new Listener<>(faceSmoothingGroups);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/shape\/TriangleMesh.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1591,1 +1591,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, VPos> getCssMetaData() {\n@@ -1613,1 +1613,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, Boolean> getCssMetaData() {\n@@ -1638,1 +1638,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, Boolean> getCssMetaData() {\n@@ -1664,1 +1664,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, TextAlignment> getCssMetaData() {\n@@ -1696,1 +1696,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, Number> getCssMetaData() {\n@@ -1880,1 +1880,1 @@\n-                    @Override public CssMetaData getCssMetaData() {\n+                    @Override public CssMetaData<Text, Number> getCssMetaData() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/Text.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-                @Override public CssMetaData getCssMetaData() {\n+                @Override public CssMetaData<TextFlow, Number> getCssMetaData() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/text\/TextFlow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -336,1 +336,1 @@\n-    private WeakReferenceQueue nodes = new WeakReferenceQueue();\n+    private WeakReferenceQueue<Node> nodes = new WeakReferenceQueue<>();\n@@ -2088,1 +2088,1 @@\n-        final Iterator iterator = nodes.iterator();\n+        final Iterator<Node> iterator = nodes.iterator();\n@@ -2090,1 +2090,1 @@\n-            NodeHelper.transformsChanged(((Node) iterator.next()));\n+            NodeHelper.transformsChanged(iterator.next());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/transform\/Transform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-            new EventType(Event.ANY, \"TRANSFORM_CHANGED\");\n+            new EventType<>(Event.ANY, \"TRANSFORM_CHANGED\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/transform\/TransformChangedEvent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-    private WeakChangeListener<Boolean> weakOwnerNodeListener = new WeakChangeListener(changeListener);\n+    private WeakChangeListener<Boolean> weakOwnerNodeListener = new WeakChangeListener<>(changeListener);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/stage\/PopupWindow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    ParsedValue<ParsedValue[], Effect> getInnerShadowValue(InnerShadow is, boolean colorIsDerived) {\n+    ParsedValue<ParsedValue<?, ?>[], Effect> getInnerShadowValue(InnerShadow is, boolean colorIsDerived) {\n@@ -68,1 +68,1 @@\n-            ParsedValue[] values = new ParsedValue[] {\n+            ParsedValue<?, ?>[] values = new ParsedValue[] {\n@@ -79,1 +79,1 @@\n-        ParsedValue[] vals = new ParsedValue[] {\n+        ParsedValue<?, ?>[] vals = new ParsedValue[] {\n@@ -95,1 +95,1 @@\n-    ParsedValue<ParsedValue[], Effect> getDropShadowValue(DropShadow ds, boolean colorIsDerived) {\n+    ParsedValue<ParsedValue<?, ?>[], Effect> getDropShadowValue(DropShadow ds, boolean colorIsDerived) {\n@@ -104,1 +104,1 @@\n-            ParsedValue[] values = new ParsedValue[] {\n+            ParsedValue<?, ?>[] values = new ParsedValue[] {\n@@ -115,1 +115,1 @@\n-        ParsedValue[] vals = new ParsedValue[] {\n+        ParsedValue<?, ?>[] vals = new ParsedValue[] {\n@@ -160,1 +160,1 @@\n-        ParsedValue<ParsedValue[], Effect> value = getInnerShadowValue(is, false);\n+        ParsedValue<ParsedValue<?, ?>[], Effect> value = getInnerShadowValue(is, false);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/EffectTypeTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        ParsedValue<ParsedValue[],String>[] urls = new ParsedValue[testPairs.length];\n+        ParsedValue<ParsedValue<String, String>[], String>[] urls = new ParsedValue[testPairs.length];\n@@ -96,1 +96,1 @@\n-        ParsedValue<ParsedValue<ParsedValue[],String>[],String[]> value =\n+        ParsedValue<ParsedValue<ParsedValue<String, String>[], String>[], String[]> value =\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/URLTypeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        StyleConverter<ParsedValue[],String> result = URLConverter.getInstance();\n+        StyleConverter<ParsedValue<String, String>[], String> result = URLConverter.getInstance();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/converters\/URLConverterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-            ParsedValue<String, ?> parsedValue = stylesheet.getRules().get(0).getDeclarations().get(0).getParsedValue();\n+            ParsedValue<?, ?> parsedValue = stylesheet.getRules().get(0).getDeclarations().get(0).getParsedValue();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParserTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-        ParsedValue<ParsedValue[],Font> value = new ParsedValueImpl<>(\n+        ParsedValue<ParsedValue<?, ?>[],Font> value = new ParsedValueImpl<>(\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/FontTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    ParsedValue<ParsedValue[],Stop> stopValue(Stop stop) {\n+    ParsedValue<ParsedValue<?, ?>[], Stop> stopValue(Stop stop) {\n@@ -75,1 +75,1 @@\n-    ParsedValue<ParsedValue[],Paint> linearGradientValues(LinearGradient lg) {\n+    ParsedValue<ParsedValue<?, ?>[],Paint> linearGradientValues(LinearGradient lg) {\n@@ -88,1 +88,1 @@\n-    ParsedValue<ParsedValue[],Paint> radialGradientValues(RadialGradient rg) {\n+    ParsedValue<ParsedValue<?, ?>[], Paint> radialGradientValues(RadialGradient rg) {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/PaintTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-        ParsedValue<ParsedValue[],Number[]> value4 =\n+        ParsedValue<ParsedValue<?, Size>[],Number[]> value4 =\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/ParsedValueTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}