{"files":[{"patch":"@@ -52,1 +52,1 @@\n-        private Class appClass = null;\n+        private Class<?> appClass = null;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/HostServicesDelegate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -497,1 +497,1 @@\n-            ArrayList jcpList = new ArrayList();\n+            List<URL> jcpList = new ArrayList<>();\n@@ -582,1 +582,1 @@\n-        List args = new LinkedList();\n+        List<String> args = new LinkedList<>();\n@@ -604,1 +604,1 @@\n-        return (String[]) args.toArray(new String[0]);\n+        return args.toArray(new String[0]);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/LauncherImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,19 +56,0 @@\n-\n-    \/**\n-     * Constructs an empty Parameters object.\n-     *\/\n-    public ParametersImpl() {\n-    }\n-\n-    \/**\n-     * Constructs an Parameters object from the specified list of arguments.\n-     * The list may be null.\n-     *\n-     * @param args list of command line arguments\n-     *\/\n-    public ParametersImpl(List<String> args) {\n-        if (args != null) {\n-            init(args);\n-        }\n-    }\n-\n@@ -87,11 +68,0 @@\n-    \/**\n-     * Constructs an Parameters object from the specified map of named\n-     * parameters.\n-     *\n-     * @param params a map of parameters from which to initialize this\n-     * object.\n-     *\/\n-    public ParametersImpl(Map params, String[] arguments) {\n-        init(params, arguments);\n-    }\n-\n@@ -114,27 +84,0 @@\n-    \/**\n-     * Constructs an Parameters object from the specified map of named\n-     * parameters.\n-     *\n-     * @param params a map of parameters from which to initialize this\n-     * object.\n-     *\/\n-    private void init(Map params, String[] arguments) {\n-        for (Object e : params.entrySet()) {\n-            Object key = ((Map.Entry)e).getKey();\n-            if (validKey(key)) {\n-                Object value = params.get(key);\n-                if (value instanceof String) {\n-                    namedParams.put((String)key, (String)value);\n-                }\n-            }\n-        }\n-\n-        computeRawArgs();\n-        if (arguments != null) {\n-            for (String arg : arguments) {\n-                unnamedParams.add(arg);\n-                rawArgs.add(arg);\n-            }\n-        }\n-    }\n-\n@@ -153,19 +96,0 @@\n-    \/**\n-     * Validate the key. A key is valid if it is a String object that starts\n-     * with a letter or \"_\" character and does not contain an \"=\" character.\n-     *\n-     * @param key Object representing a potential key\n-     *\n-     * @return true if key is a valid key, otherwise false\n-     *\/\n-    private boolean validKey(Object key) {\n-        if (key instanceof String) {\n-            String keyStr = (String)key;\n-            if (keyStr.length() > 0 && keyStr.indexOf('=') < 0) {\n-                return validFirstChar(keyStr.charAt(0));\n-            }\n-        }\n-\n-        return false;\n-    }\n-\n@@ -216,15 +140,0 @@\n-    \/**\n-     * This method creates string representations of the name,value pairs in\n-     * the map for this Parameters object, and appends those strings to the\n-     * raw arguments array. The newly added strings are of the form:\n-     * \"--name=value\".\n-     *\/\n-    private void computeRawArgs() {\n-        ArrayList<String> keys = new ArrayList<>();\n-        keys.addAll(namedParams.keySet());\n-        Collections.sort(keys);\n-        for (String key : keys) {\n-            rawArgs.add(\"--\" + key + \"=\" + namedParams.get(key));\n-        }\n-    }\n-\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/ParametersImpl.java","additions":0,"deletions":91,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-    public static void setApplicationName(final Class appClass) {\n+    public static void setApplicationName(final Class<?> appClass) {\n@@ -314,1 +314,1 @@\n-            Map map = com.sun.glass.ui.Application.getDeviceDetails();\n+            Map<Object, Object> map = com.sun.glass.ui.Application.getDeviceDetails();\n@@ -316,1 +316,1 @@\n-                map = new HashMap();\n+                map = new HashMap<>();\n@@ -400,1 +400,1 @@\n-            Class swingFXUtilsClass = Class.forName(\"com.sun.javafx.embed.swing.SwingFXUtilsImpl\");\n+            Class<?> swingFXUtilsClass = Class.forName(\"com.sun.javafx.embed.swing.SwingFXUtilsImpl\");\n@@ -929,1 +929,1 @@\n-        var dummy = AccessController.doPrivileged((PrivilegedAction) () -> {\n+        var dummy = AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n@@ -939,1 +939,1 @@\n-            AccessController.doPrivileged((PrivilegedAction) () -> {\n+            AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n@@ -945,1 +945,1 @@\n-            AccessController.doPrivileged((PrivilegedAction) () -> {\n+            AccessController.doPrivileged((PrivilegedAction<?>) () -> {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/application\/PlatformImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -238,1 +238,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -269,1 +269,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -341,1 +341,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -423,1 +423,1 @@\n-        BitSet other = (BitSet)c;\n+        BitSet<?> other = (BitSet<?>) c;\n@@ -519,1 +519,1 @@\n-        final BitSet other = (BitSet) obj;\n+        final BitSet<?> other = (BitSet<?>) obj;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/BitSet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-    public ParsedValue getParsedValue() {\n+    public ParsedValue<?, ?> getParsedValue() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/CascadingStyle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-        Map<String,String> descriptors = new HashMap(nEntries);\n+        Map<String, String> descriptors = new HashMap<>(nEntries);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/FontFaceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,3 +71,1 @@\n-\n-        else if(obj instanceof ParsedValueImpl) {\n-            ParsedValueImpl value = (ParsedValueImpl)obj;\n+        else if(obj instanceof ParsedValueImpl<?, ?> value) {\n@@ -76,3 +74,1 @@\n-\n-        else if(obj instanceof ParsedValueImpl[]) {\n-            ParsedValueImpl[] values = (ParsedValueImpl[])obj;\n+        else if(obj instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -93,2 +89,1 @@\n-        } else if(obj instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] values = (ParsedValueImpl[][])obj;\n+        } else if(obj instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -118,1 +113,1 @@\n-    public static boolean containsFontRelativeSize(ParsedValue parsedValue, boolean percentUnitsAreRelative) {\n+    public static boolean containsFontRelativeSize(ParsedValue<?, ?> parsedValue, boolean percentUnitsAreRelative) {\n@@ -132,3 +127,1 @@\n-\n-        else if(obj instanceof ParsedValue) {\n-            ParsedValue value = (ParsedValueImpl)obj;\n+        else if(obj instanceof ParsedValue<?, ?> value) {\n@@ -137,3 +130,1 @@\n-\n-        else if(obj instanceof ParsedValue[]) {\n-            ParsedValue[] values = (ParsedValue[])obj;\n+        else if(obj instanceof ParsedValue<?, ?>[] values) {\n@@ -148,2 +139,1 @@\n-        } else if(obj instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] values = (ParsedValueImpl[][])obj;\n+        } else if(obj instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -235,2 +225,1 @@\n-        if (value instanceof ParsedValueImpl[][]) {\n-            ParsedValueImpl[][] layers = (ParsedValueImpl[][])value;\n+        if (value instanceof ParsedValueImpl<?, ?>[][] layers) {\n@@ -245,1 +234,1 @@\n-            for (ParsedValueImpl[] layer : layers) {\n+            for (ParsedValueImpl<?, ?>[] layer : layers) {\n@@ -254,1 +243,1 @@\n-                for(ParsedValueImpl val : layer) {\n+                for(ParsedValueImpl<?, ?> val : layer) {\n@@ -269,2 +258,1 @@\n-        } else if (value instanceof ParsedValueImpl[]) {\n-            ParsedValueImpl[] values = (ParsedValueImpl[])value;\n+        } else if (value instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -279,1 +267,1 @@\n-            for(ParsedValueImpl val : values) {\n+            for(ParsedValueImpl<?, ?> val : values) {\n@@ -309,1 +297,1 @@\n-        final ParsedValueImpl other = (ParsedValueImpl)obj;\n+        final ParsedValueImpl<?, ?> other = (ParsedValueImpl<?, ?>) obj;\n@@ -313,1 +301,1 @@\n-        if (this.value instanceof ParsedValueImpl[][]) {\n+        if (this.value instanceof ParsedValueImpl<?, ?>[][] thisValues) {\n@@ -315,4 +303,1 @@\n-            if (!(other.value instanceof ParsedValueImpl[][])) return false;\n-\n-            final ParsedValueImpl[][] thisValues = (ParsedValueImpl[][])this.value;\n-            final ParsedValueImpl[][] otherValues = (ParsedValueImpl[][])other.value;\n+            if (!(other.value instanceof ParsedValueImpl<?, ?>[][] otherValues)) return false;\n@@ -336,2 +321,2 @@\n-                    final ParsedValueImpl thisValue = thisValues[i][j];\n-                    final ParsedValueImpl otherValue = otherValues[i][j];\n+                    final ParsedValueImpl<?, ?> thisValue = thisValues[i][j];\n+                    final ParsedValueImpl<?, ?> otherValue = otherValues[i][j];\n@@ -347,3 +332,1 @@\n-        } else if (this.value instanceof ParsedValueImpl[]) {\n-\n-            if (!(other.value instanceof ParsedValueImpl[])) return false;\n+        } else if (this.value instanceof ParsedValueImpl<?, ?>[] thisValues) {\n@@ -351,2 +334,1 @@\n-            final ParsedValueImpl[] thisValues = (ParsedValueImpl[])this.value;\n-            final ParsedValueImpl[] otherValues = (ParsedValueImpl[])other.value;\n+            if (!(other.value instanceof ParsedValueImpl<?, ?>[] otherValues)) return false;\n@@ -360,2 +342,2 @@\n-                final ParsedValueImpl thisValue = thisValues[i];\n-                final ParsedValueImpl otherValue = otherValues[i];\n+                final ParsedValueImpl<?, ?> thisValue = thisValues[i];\n+                final ParsedValueImpl<?, ?> otherValue = otherValues[i];\n@@ -393,2 +375,1 @@\n-            if (value instanceof ParsedValueImpl[][]) {\n-                ParsedValueImpl[][] values = (ParsedValueImpl[][])value;\n+            if (value instanceof ParsedValueImpl<?, ?>[][] values) {\n@@ -397,1 +378,1 @@\n-                        final ParsedValueImpl val = values[i][j];\n+                        final ParsedValueImpl<?, ?> val = values[i][j];\n@@ -401,2 +382,1 @@\n-            } else if (value instanceof ParsedValueImpl[]) {\n-                ParsedValueImpl[] values = (ParsedValueImpl[])value;\n+            } else if (value instanceof ParsedValueImpl<?, ?>[] values) {\n@@ -405,1 +385,1 @@\n-                    final ParsedValueImpl val = values[i];\n+                    final ParsedValueImpl<?, ?> val = values[i];\n@@ -445,1 +425,1 @@\n-        if (value instanceof ParsedValue) {\n+        if (value instanceof ParsedValue<?, ?> pv) {\n@@ -447,3 +427,3 @@\n-            final ParsedValue pv = (ParsedValue)value;\n-            if (pv instanceof ParsedValueImpl) {\n-                ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+\n+            if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                pvi.writeBinary(os, stringStore);\n@@ -451,1 +431,1 @@\n-                final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -455,1 +435,1 @@\n-        } else if (value instanceof ParsedValue[]) {\n+        } else if (value instanceof ParsedValue<?, ?>[] values) {\n@@ -457,7 +437,2 @@\n-            final ParsedValue[] values = (ParsedValue[])value;\n-            if (values != null) {\n-                os.writeByte(VALUE);\n-            } else {\n-                os.writeByte(NULL_VALUE);\n-            }\n-            final int nValues = (values != null) ? values.length : 0;\n+            os.writeByte(VALUE);\n+            final int nValues = values.length;\n@@ -468,3 +443,3 @@\n-                    final ParsedValue pv = values[v];\n-                    if (pv instanceof ParsedValueImpl) {\n-                        ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+                    final ParsedValue<?, ?> pv = values[v];\n+                    if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                        pvi.writeBinary(os, stringStore);\n@@ -472,1 +447,1 @@\n-                        final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                        final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -480,1 +455,1 @@\n-        } else if (value instanceof ParsedValue[][]) {\n+        } else if (value instanceof ParsedValue<?, ?>[][] layers) {\n@@ -482,7 +457,2 @@\n-            final ParsedValue[][] layers = (ParsedValue[][])value;\n-            if (layers != null) {\n-                os.writeByte(VALUE);\n-            } else {\n-                os.writeByte(NULL_VALUE);\n-            }\n-            final int nLayers = (layers != null) ? layers.length : 0;\n+            os.writeByte(VALUE);\n+            final int nLayers = layers.length;\n@@ -491,1 +461,1 @@\n-                final ParsedValue[] values = layers[l];\n+                final ParsedValue<?, ?>[] values = layers[l];\n@@ -502,3 +472,3 @@\n-                        final ParsedValue pv = values[v];\n-                        if (pv instanceof ParsedValueImpl) {\n-                            ((ParsedValueImpl)pv).writeBinary(os, stringStore);\n+                        final ParsedValue<?, ?> pv = values[v];\n+                        if (pv instanceof ParsedValueImpl<?, ?> pvi) {\n+                            pvi.writeBinary(os, stringStore);\n@@ -506,1 +476,1 @@\n-                            final ParsedValueImpl impl = new ParsedValueImpl(pv.getValue(), pv.getConverter());\n+                            final ParsedValueImpl<?, ?> impl = new ParsedValueImpl<>((Object) pv.getValue(), (StyleConverter<Object, Object>) pv.getConverter());\n@@ -523,3 +493,2 @@\n-        } else if (value instanceof Enum) {\n-            final Enum e = (Enum)value;\n-            final int nameIndex = stringStore.addString(e.name());\n+        } else if (value instanceof Enum<?> value) {\n+            final int nameIndex = stringStore.addString(value.name());\n@@ -563,1 +532,1 @@\n-    public static ParsedValueImpl readBinary(int bssVersion, DataInputStream is, String[] strings)\n+    public static ParsedValueImpl<?, ?> readBinary(int bssVersion, DataInputStream is, String[] strings)\n@@ -569,1 +538,2 @@\n-        final StyleConverter converter = (hasType) ? StyleConverter.readBinary(is, strings) : null;\n+        @SuppressWarnings(\"unchecked\")\n+        final StyleConverter<Object, Object> converter = (StyleConverter<Object, Object>) (hasType ? StyleConverter.readBinary(is, strings) : null);\n@@ -574,2 +544,2 @@\n-            final ParsedValueImpl value = ParsedValueImpl.readBinary(bssVersion, is, strings);\n-            return new ParsedValueImpl(value, converter, lookup);\n+            final ParsedValueImpl<?, ?> value = ParsedValueImpl.readBinary(bssVersion, is, strings);\n+            return new ParsedValueImpl<>(value, converter, lookup);\n@@ -584,1 +554,1 @@\n-            final ParsedValueImpl[] values = (nVals > 0)\n+            final ParsedValueImpl<?, ?>[] values = (nVals > 0)\n@@ -595,1 +565,1 @@\n-            return new ParsedValueImpl(values, converter, lookup);\n+            return new ParsedValueImpl<>(values, converter, lookup);\n@@ -605,1 +575,1 @@\n-            final ParsedValueImpl[][] layers = nLayers > 0 ? new ParsedValueImpl[nLayers][0] : null;\n+            final ParsedValueImpl<?, ?>[][] layers = nLayers > 0 ? new ParsedValueImpl[nLayers][0] : null;\n@@ -628,1 +598,1 @@\n-            return new ParsedValueImpl(layers, converter, lookup);\n+            return new ParsedValueImpl<>(layers, converter, lookup);\n@@ -635,1 +605,1 @@\n-            return new ParsedValueImpl<Color,Color>(Color.color(r, g, b, a), converter, lookup);\n+            return new ParsedValueImpl<>(Color.color(r, g, b, a), converter, lookup);\n@@ -659,2 +629,1 @@\n-            ParsedValueImpl value = new ParsedValueImpl(ename, converter, lookup);\n-            return value;\n+            return new ParsedValueImpl<>(ename, converter, lookup);\n@@ -664,1 +633,1 @@\n-            return new ParsedValueImpl<Boolean,Boolean>(b, converter, lookup);\n+            return new ParsedValueImpl<>(b, converter, lookup);\n@@ -677,1 +646,1 @@\n-            return new ParsedValueImpl<Size,Size>(new Size(val,units), converter, lookup);\n+            return new ParsedValueImpl<>(new Size(val, units), converter, lookup);\n@@ -681,1 +650,1 @@\n-            return new ParsedValueImpl(str, converter, lookup);\n+            return new ParsedValueImpl<>(str, converter, lookup);\n@@ -687,1 +656,1 @@\n-                return new ParsedValueImpl(url, converter, lookup);\n+                return new ParsedValueImpl<>(url, converter, lookup);\n@@ -693,1 +662,1 @@\n-            return new ParsedValueImpl(null, converter, lookup);\n+            return new ParsedValueImpl<>(null, converter, lookup);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/ParsedValueImpl.java","additions":63,"deletions":94,"binary":false,"changes":157,"status":"modified"},{"patch":"@@ -53,1 +53,2 @@\n-    private final static class PartitionKey<K> {\n+    private final static class PartitionKey {\n+        private final Object key;\n@@ -55,1 +56,3 @@\n-        private final K key;\n+        private PartitionKey(String key) {\n+            this.key = key;\n+        }\n@@ -57,1 +60,1 @@\n-        private PartitionKey(K key) {\n+        private PartitionKey(Set<StyleClass> key) {\n@@ -69,1 +72,1 @@\n-            final PartitionKey<K> other = (PartitionKey<K>) obj;\n+            final PartitionKey other = (PartitionKey) obj;\n@@ -130,1 +133,1 @@\n-                Partition partition = getPartition(id,map);\n+                Partition partition = getPartition(id, map);\n@@ -212,1 +215,1 @@\n-    private static Partition getPartition(PartitionKey id, Map<PartitionKey,Partition> map) {\n+    private static Partition getPartition(PartitionKey id, Map<PartitionKey, Partition> map) {\n@@ -229,1 +232,1 @@\n-    private static final PartitionKey WILDCARD = new PartitionKey<>(\"*\");\n+    private static final PartitionKey WILDCARD = new PartitionKey(\"*\");\n@@ -261,1 +264,1 @@\n-                ? new PartitionKey<>(selectorStyleClass)\n+                ? new PartitionKey(selectorStyleClass)\n@@ -324,1 +327,1 @@\n-                ? new PartitionKey<>(selectorStyleClass)\n+                ? new PartitionKey(selectorStyleClass)\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SelectorPartitioning.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -36,2 +36,2 @@\n-public class SubCssMetaData<T> extends CssMetaData<Node,T> {\n-    public SubCssMetaData(String property, StyleConverter converter, T initialValue) {\n+public class SubCssMetaData<T> extends CssMetaData<Node, T> {\n+    public SubCssMetaData(String property, StyleConverter<?, T> converter, T initialValue) {\n@@ -41,1 +41,1 @@\n-    public SubCssMetaData(String property, StyleConverter converter) {\n+    public SubCssMetaData(String property, StyleConverter<?, T> converter) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/css\/SubCssMetaData.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public final class BackgroundPositionConverter extends StyleConverter<ParsedValue[], BackgroundPosition> {\n+public final class BackgroundPositionConverter extends StyleConverter<ParsedValue<?, Size>[], BackgroundPosition> {\n@@ -51,2 +51,2 @@\n-    public BackgroundPosition convert(ParsedValue<ParsedValue[], BackgroundPosition> value, Font font) {\n-        ParsedValue[] positions = value.getValue();\n+    public BackgroundPosition convert(ParsedValue<ParsedValue<?, Size>[], BackgroundPosition> value, Font font) {\n+        ParsedValue<?, Size>[] positions = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundPositionConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public final class BackgroundSizeConverter  extends StyleConverter<ParsedValue[], BackgroundSize> {\n+public final class BackgroundSizeConverter  extends StyleConverter<ParsedValue<?, ?>[], BackgroundSize> {\n@@ -50,1 +50,1 @@\n-    public BackgroundSize convert(ParsedValue<ParsedValue[], BackgroundSize> value, Font font) {\n+    public BackgroundSize convert(ParsedValue<ParsedValue<?, ?>[], BackgroundSize> value, Font font) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BackgroundSizeConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-public final class BorderImageSliceConverter extends StyleConverter<ParsedValue[], BorderImageSlices> {\n+public final class BorderImageSliceConverter extends StyleConverter<ParsedValue<?, ?>[], BorderImageSlices> {\n@@ -50,1 +50,1 @@\n-    public BorderImageSlices convert(ParsedValue<ParsedValue[], BorderImageSlices> layer, Font font) {\n+    public BorderImageSlices convert(ParsedValue<ParsedValue<?, ?>[], BorderImageSlices> layer, Font font) {\n@@ -52,1 +52,1 @@\n-        final ParsedValue[] values = layer.getValue();\n+        final ParsedValue<?, ?>[] values = layer.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageSliceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class BorderImageWidthConverter extends StyleConverter<ParsedValue[], BorderWidths> {\n+public class BorderImageWidthConverter extends StyleConverter<ParsedValue<?, Size>[], BorderWidths> {\n@@ -50,1 +50,1 @@\n-    public BorderWidths convert(ParsedValue<ParsedValue[], BorderWidths> value, Font font) {\n+    public BorderWidths convert(ParsedValue<ParsedValue<?, Size>[], BorderWidths> value, Font font) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageWidthConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.css.Size;\n@@ -38,1 +39,1 @@\n-public class BorderImageWidthsSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], BorderWidths>[], BorderWidths[]> {\n+public class BorderImageWidthsSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], BorderWidths>[], BorderWidths[]> {\n@@ -47,1 +48,1 @@\n-    public BorderWidths[] convert(ParsedValue<ParsedValue<ParsedValue[], BorderWidths>[], BorderWidths[]> value, Font font) {\n+    public BorderWidths[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], BorderWidths>[], BorderWidths[]> value, Font font) {\n@@ -64,1 +65,1 @@\n-        ParsedValue<ParsedValue[], BorderWidths>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<?, Size>[], BorderWidths>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderImageWidthsSequenceConverter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public final class BorderStrokeStyleSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]> {\n+public final class BorderStrokeStyleSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[],BorderStrokeStyle>[],BorderStrokeStyle[]> {\n@@ -55,1 +55,1 @@\n-    public BorderStrokeStyle[] convert(ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[], BorderStrokeStyle[]> value, Font font) {\n+    public BorderStrokeStyle[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[],BorderStrokeStyle>[], BorderStrokeStyle[]> value, Font font) {\n@@ -57,1 +57,1 @@\n-        ParsedValue<ParsedValue[],BorderStrokeStyle>[] borders = value.getValue();\n+        ParsedValue<ParsedValue<?, ?>[],BorderStrokeStyle>[] borders = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/BorderStrokeStyleSequenceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import javafx.css.Size;\n@@ -41,1 +42,1 @@\n-public final class LayeredBackgroundPositionConverter extends StyleConverter<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]> {\n+public final class LayeredBackgroundPositionConverter extends StyleConverter<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]> {\n@@ -54,2 +55,2 @@\n-    public BackgroundPosition[] convert(ParsedValue<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]> value, Font font) {\n-        ParsedValue<ParsedValue[], BackgroundPosition>[] layers = value.getValue();\n+    public BackgroundPosition[] convert(ParsedValue<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]> value, Font font) {\n+        ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBackgroundPositionConverter.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-public final class LayeredBackgroundSizeConverter extends StyleConverter<ParsedValue<ParsedValue[], BackgroundSize>[], BackgroundSize[]> {\n+public final class LayeredBackgroundSizeConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[], BackgroundSize[]> {\n@@ -56,2 +56,2 @@\n-    public BackgroundSize[] convert(ParsedValue<ParsedValue<ParsedValue[], BackgroundSize>[], BackgroundSize[]> value, Font font) {\n-        ParsedValue<ParsedValue[], BackgroundSize>[] layers = value.getValue();\n+    public BackgroundSize[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[], BackgroundSize[]> value, Font font) {\n+        ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBackgroundSizeConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-        extends StyleConverter<ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]> {\n+        extends StyleConverter<ParsedValue<ParsedValue<ParsedValue<?, ?>[],BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]> {\n@@ -65,1 +65,1 @@\n-    convert(ParsedValue<ParsedValue<ParsedValue<ParsedValue[], BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]> value, Font font) {\n+    convert(ParsedValue<ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]> value, Font font) {\n@@ -67,1 +67,1 @@\n-        ParsedValue<ParsedValue<ParsedValue[], BorderStrokeStyle>[],BorderStrokeStyle[]>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[],BorderStrokeStyle[]>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/LayeredBorderStyleConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-public final class SliceSequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], BorderImageSlices>[], BorderImageSlices[]> {\n+public final class SliceSequenceConverter extends StyleConverter<ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[], BorderImageSlices[]> {\n@@ -44,1 +44,1 @@\n-    public BorderImageSlices[] convert(ParsedValue<ParsedValue<ParsedValue[], BorderImageSlices>[], BorderImageSlices[]> value, Font font) {\n+    public BorderImageSlices[] convert(ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[], BorderImageSlices[]> value, Font font) {\n@@ -61,1 +61,1 @@\n-        ParsedValue<ParsedValue[], BorderImageSlices>[] layers = value.getValue();\n+        ParsedValue<ParsedValue<?, ?>[], BorderImageSlices>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/javafx\/scene\/layout\/region\/SliceSequenceConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-    protected Map deviceDetails = null;\n+    protected Map<Object, Object> deviceDetails = null;\n@@ -166,1 +166,1 @@\n-    public Map getDeviceDetails() {\n+    public Map<Object, Object> getDeviceDetails() {\n@@ -174,1 +174,1 @@\n-    protected void setDeviceDetails(Map details) {\n+    protected void setDeviceDetails(Map<Object, Object> details) {\n@@ -218,1 +218,1 @@\n-                Class klass = Class.forName(className);\n+                Class<?> klass = Class.forName(className);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/GraphicsPipeline.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -604,1 +604,1 @@\n-            return new Pair(id, (dirtyRegion == null)? null : new Rectangle(dirtyRegion));\n+            return new Pair<>(id, (dirtyRegion == null)? null : new Rectangle(dirtyRegion));\n@@ -939,1 +939,1 @@\n-            return PixelUtils.getSetter((WritablePixelFormat) theFormat);\n+            return PixelUtils.getSetter((WritablePixelFormat<I>) theFormat);\n@@ -1124,1 +1124,1 @@\n-                             (WritablePixelFormat) theFormat,\n+                             (WritablePixelFormat<ByteBuffer>) theFormat,\n@@ -1192,1 +1192,1 @@\n-                             (WritablePixelFormat) theFormat,\n+                             (WritablePixelFormat<IntBuffer>) theFormat,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/Image.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    public TextureResourcePool getTextureResourcePool();\n+    public TextureResourcePool<?> getTextureResourcePool();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/ResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-    private static native boolean nInit(Class psClass, boolean load);\n+    private static native boolean nInit(Class<?> psClass, boolean load);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n@@ -459,1 +459,1 @@\n-            Class klass = Class.forName(\"com.sun.prism.shader.\" + name + \"_Loader\");\n+            Class<?> klass = Class.forName(\"com.sun.prism.shader.\" + name + \"_Loader\");\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/d3d\/D3DResourceFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-            ES2Texture es2Tex = (ES2Texture)tex;\n+            ES2Texture<?> es2Tex = (ES2Texture<?>) tex;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Context.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,6 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n@@ -30,0 +36,1 @@\n+import com.sun.javafx.PlatformUtil;\n@@ -33,5 +40,0 @@\n-import com.sun.javafx.PlatformUtil;\n-import java.util.List;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n-import java.util.HashMap;\n@@ -113,1 +115,1 @@\n-            HashMap devDetails = new HashMap();\n+            Map<Object, Object> devDetails = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Pipeline.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n@@ -316,1 +316,1 @@\n-            Class klass =\n+            Class<?> klass =\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2ResourceFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private ES2Texture(ES2Texture sharedTex, WrapMode newMode) {\n+    private ES2Texture(ES2Texture<T> sharedTex, WrapMode newMode) {\n@@ -79,1 +79,1 @@\n-        return new ES2Texture(this, newMode);\n+        return new ES2Texture<>(this, newMode);\n@@ -98,1 +98,1 @@\n-    static ES2Texture create(ES2Context context, PixelFormat format,\n+    static ES2Texture<?> create(ES2Context context, PixelFormat format,\n@@ -215,1 +215,1 @@\n-        ES2TextureResource texRes = new ES2TextureResource(texData);\n+        ES2TextureResource<?> texRes = new ES2TextureResource<>(texData);\n@@ -229,1 +229,1 @@\n-        return new ES2Texture(context, texRes, format, wrapMode,\n+        return new ES2Texture<>(context, texRes, format, wrapMode,\n@@ -266,1 +266,1 @@\n-                ES2Texture subTex =\n+                ES2Texture<?> subTex =\n@@ -319,1 +319,1 @@\n-        ES2TextureResource texRes = new ES2TextureResource(texData);\n+        ES2TextureResource<?> texRes = new ES2TextureResource<>(texData);\n@@ -329,1 +329,1 @@\n-        ES2Texture tex = null;\n+        ES2Texture<?> tex = null;\n@@ -331,1 +331,1 @@\n-            tex = new ES2Texture(context, texRes, format, WrapMode.CLAMP_TO_EDGE,\n+            tex = new ES2Texture<>(context, texRes, format, WrapMode.CLAMP_TO_EDGE,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2Texture.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.prism.impl.ResourcePool;\n@@ -34,1 +35,1 @@\n-        super(resource, ES2VramPool.instance, resource);\n+        super(resource, (ResourcePool<T>) ES2VramPool.instance, resource);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/ES2TextureResource.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.util.Map;\n@@ -192,1 +193,1 @@\n-    abstract boolean initialize(Class psClass, GLPixelFormat.Attributes attrs);\n+    abstract boolean initialize(Class<?> psClass, GLPixelFormat.Attributes attrs);\n@@ -219,1 +220,1 @@\n-    abstract void updateDeviceDetails(HashMap deviceDetails);\n+    abstract void updateDeviceDetails(Map<Object, Object> deviceDetails);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/GLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.prism.es2.GLPixelFormat.Attributes;\n@@ -30,0 +29,3 @@\n+import java.util.Map;\n+\n+import com.sun.prism.es2.GLPixelFormat.Attributes;\n@@ -69,1 +71,1 @@\n-        HashMap devDetails = (HashMap) ES2Pipeline.getInstance().getDeviceDetails();\n+        Map<Object, Object> devDetails = ES2Pipeline.getInstance().getDeviceDetails();\n@@ -91,1 +93,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -129,1 +131,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/IOSGLFactory.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -71,1 +72,1 @@\n-        HashMap devDetails = (HashMap) ES2Pipeline.getInstance().getDeviceDetails();\n+        Map<Object, Object> devDetails = ES2Pipeline.getInstance().getDeviceDetails();\n@@ -93,1 +94,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -129,1 +130,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MacGLFactory.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+import java.util.Map;\n+\n@@ -93,1 +95,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -154,1 +156,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/MonocleGLFactory.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -80,1 +81,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -116,1 +117,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/WinGLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.util.Map;\n@@ -133,1 +134,1 @@\n-    boolean initialize(Class psClass, Attributes attrs) {\n+    boolean initialize(Class<?> psClass, Attributes attrs) {\n@@ -169,1 +170,1 @@\n-    void updateDeviceDetails(HashMap deviceDetails) {\n+    void updateDeviceDetails(Map<Object, Object> deviceDetails) {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/es2\/X11GLFactory.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-            point2vbMap = new HashMap();\n+            point2vbMap = new HashMap<>();\n@@ -144,1 +144,1 @@\n-            normal2vbMap = new HashMap();\n+            normal2vbMap = new HashMap<>();\n@@ -149,1 +149,1 @@\n-            texCoord2vbMap = new HashMap();\n+            texCoord2vbMap = new HashMap<>();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseMesh.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            TextureResourcePool pool = getTextureResourcePool();\n+            TextureResourcePool<?> pool = getTextureResourcePool();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-public abstract class BaseTexture<T extends ManagedResource> implements Texture {\n+public abstract class BaseTexture<T extends ManagedResource<?>> implements Texture {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BaseTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static Class byteOrderClass;\n+    private static Class<?> byteOrderClass;\n@@ -65,2 +65,2 @@\n-                    byteOrderClass = (Class) AccessController.doPrivileged(\n-                            (PrivilegedExceptionAction) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n+                    byteOrderClass = (Class<?>) AccessController.doPrivileged(\n+                            (PrivilegedExceptionAction<?>) () -> Class.forName(\"java.nio.ByteOrder\", true, null));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/BufferUtil.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -75,2 +75,2 @@\n-    private final ReferenceQueue queue = new ReferenceQueue();\n-    private final Hashtable records = new Hashtable();\n+    private final ReferenceQueue<Object> queue = new ReferenceQueue<>();\n+    private final Hashtable<Object, Disposer.Record> records = new Hashtable<>();\n@@ -151,1 +151,1 @@\n-        Reference ref;\n+        Reference<Object> ref;\n@@ -153,1 +153,1 @@\n-            ref = new PhantomReference(target, queue);\n+            ref = new PhantomReference<>(target, queue);\n@@ -155,1 +155,1 @@\n-            ref = new SoftReference(target, queue);\n+            ref = new SoftReference<>(target, queue);\n@@ -157,1 +157,1 @@\n-            ref = new WeakReference(target, queue);\n+            ref = new WeakReference<>(target, queue);\n@@ -175,2 +175,2 @@\n-                ((Reference)obj).clear();\n-                Disposer.Record rec = (Disposer.Record)records.remove(obj);\n+                ((Reference<?>) obj).clear();\n+                Disposer.Record rec = records.remove(obj);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/Disposer.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    public DisposerManagedResource(T resource, ResourcePool pool,\n+    public DisposerManagedResource(T resource, ResourcePool<T> pool,\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/DisposerManagedResource.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,2 +118,1 @@\n-                (Properties) AccessController.doPrivileged(\n-                        (PrivilegedAction) () -> System.getProperties());\n+                AccessController.doPrivileged((PrivilegedAction<Properties>) () -> System.getProperties());\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/PrismSettings.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -538,1 +538,1 @@\n-        String v = (String) AccessController.doPrivileged((PrivilegedAction) () -> System.getProperty(\"prism.primshaderpad\"));\n+        String v = AccessController.doPrivileged((PrivilegedAction<String>) () -> System.getProperty(\"prism.primshaderpad\"));\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/impl\/ps\/BaseShaderGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -419,1 +419,1 @@\n-            ref = new WeakReference(compFont);\n+            ref = new WeakReference<>(compFont);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DPrismGraphics.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    private final PixelSetter setter;\n+    private final PixelSetter<?> setter;\n@@ -67,1 +67,1 @@\n-        PixelSetter setter;\n+        PixelSetter<?> setter;\n@@ -95,1 +95,1 @@\n-               PixelSetter setter, WrapMode wrapMode)\n+               PixelSetter<?> setter, WrapMode wrapMode)\n@@ -116,1 +116,1 @@\n-    private static PixelGetter getGetter(PixelFormat format) {\n+    private static PixelGetter<?> getGetter(PixelFormat format) {\n@@ -149,2 +149,3 @@\n-        PixelGetter getter = getGetter(format);\n-        PixelConverter converter = PixelUtils.getConverter(getter, setter);\n+        PixelGetter<?> getter = getGetter(format);\n+        @SuppressWarnings(\"unchecked\")\n+        PixelConverter<Buffer, Buffer> converter = (PixelConverter<Buffer, Buffer>) PixelUtils.getConverter(getter, setter);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/J2DTexture.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-    private static Class onTopClass = null;\n+    private static Class<?> onTopClass = null;\n@@ -136,1 +136,1 @@\n-                         cons = onTopClass.getConstructor();\n+                         cons = (Constructor<PrintRequestAttribute>) onTopClass.getConstructor();\n@@ -148,1 +148,1 @@\n-        PrintRequestAttribute getAlwaysOnTop(Class onTopClass, long id);\n+        PrintRequestAttribute getAlwaysOnTop(Class<?> onTopClass, long id);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/j2d\/print\/J2DPrinterJob.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-class DummyTexture extends BaseTexture  {\n+class DummyTexture extends BaseTexture<ManagedResource<?>>  {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/null3d\/DummyTexture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        final PixelGetter getter;\n+        final PixelGetter<?> getter;\n@@ -115,1 +115,2 @@\n-        PixelConverter converter = PixelUtils.getConverter(getter, IntArgbPre.setter);\n+        @SuppressWarnings(\"unchecked\")\n+        PixelConverter<Buffer, IntBuffer> converter = (PixelConverter<Buffer, IntBuffer>) PixelUtils.getConverter(getter, IntArgbPre.setter);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWArgbPreTexture.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    public TextureResourcePool getTextureResourcePool() {\n+    public TextureResourcePool<?> getTextureResourcePool() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/com\/sun\/prism\/sw\/SWResourceFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -779,1 +779,1 @@\n-            ParsedValueImpl fweight = parseFontWeight(root);\n+            ParsedValueImpl<?, ?> fweight = parseFontWeight(root);\n@@ -1160,1 +1160,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop = stop(term);\n@@ -1205,1 +1205,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(term);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(term);\n@@ -1216,1 +1216,1 @@\n-    private ParsedValueImpl<ParsedValue[], Stop> stop(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop(final Term root)\n@@ -1244,1 +1244,1 @@\n-    private ParsedValueImpl<ParsedValue[], Stop>[] parseColorStops(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] parseColorStops(final Term root)\n@@ -1356,1 +1356,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = new ParsedValueImpl[nArgs];\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = new ParsedValueImpl[nArgs];\n@@ -1583,1 +1583,1 @@\n-    private ParsedValueImpl<ParsedValue[],Paint> linearGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[],Paint> linearGradient(final Term root) throws ParseException {\n@@ -1632,1 +1632,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[], Stop> stop = stop(term);\n@@ -1892,1 +1892,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(arg);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(arg);\n@@ -1909,1 +1909,1 @@\n-    private ParsedValueImpl<ParsedValue[], Paint> radialGradient(final Term root) throws ParseException {\n+    private ParsedValueImpl<ParsedValue<?, ?>[], Paint> radialGradient(final Term root) throws ParseException {\n@@ -2003,1 +2003,1 @@\n-            ParsedValueImpl<ParsedValue[],Stop> stop = stop(term);\n+            ParsedValueImpl<ParsedValue<?, ?>[],Stop> stop = stop(term);\n@@ -2192,1 +2192,1 @@\n-        ParsedValueImpl<ParsedValue[],Stop>[] stops = parseColorStops(arg);\n+        ParsedValueImpl<ParsedValue<?, ?>[], Stop>[] stops = parseColorStops(arg);\n@@ -2614,1 +2614,1 @@\n-    private ParsedValueImpl<ParsedValue[], BackgroundPosition> parseBackgroundPosition(Term term)\n+    private ParsedValueImpl<ParsedValue<?, Size>[], BackgroundPosition> parseBackgroundPosition(Term term)\n@@ -2912,1 +2912,1 @@\n-        ParsedValueImpl<?,Size>[] values = new ParsedValueImpl[] {top, right, bottom, left};\n+        ParsedValueImpl<?, Size>[] values = new ParsedValueImpl[] {top, right, bottom, left};\n@@ -2916,1 +2916,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundPosition>[], BackgroundPosition[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[], BackgroundPosition>[], BackgroundPosition[]>\n@@ -2920,1 +2920,1 @@\n-        ParsedValueImpl<ParsedValue[], BackgroundPosition>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[], BackgroundPosition>[] layers = new ParsedValueImpl[nLayers];\n@@ -3038,1 +3038,1 @@\n-    private ParsedValueImpl<ParsedValue[], BackgroundSize> parseBackgroundSize(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], BackgroundSize> parseBackgroundSize(final Term root)\n@@ -3106,1 +3106,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[], BackgroundSize>[],  BackgroundSize[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BackgroundSize>[],  BackgroundSize[]>\n@@ -3110,1 +3110,1 @@\n-        ParsedValueImpl<ParsedValue[], BackgroundSize>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, ?>[], BackgroundSize>[] layers = new ParsedValueImpl[nLayers];\n@@ -3155,1 +3155,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]> parseBorderStyleSeries(final Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[],BorderStrokeStyle>[],BorderStrokeStyle[]> parseBorderStyleSeries(final Term root)\n@@ -3159,1 +3159,1 @@\n-        ParsedValueImpl<ParsedValue[],BorderStrokeStyle>[] borders = new ParsedValueImpl[4];\n+        ParsedValueImpl<ParsedValue<?, ?>[],BorderStrokeStyle>[] borders = new ParsedValueImpl[4];\n@@ -3174,1 +3174,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>[], BorderStrokeStyle[][]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[], BorderStrokeStyle[][]>\n@@ -3178,1 +3178,1 @@\n-        ParsedValueImpl<ParsedValue<ParsedValue[],BorderStrokeStyle>[],BorderStrokeStyle[]>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[], BorderStrokeStyle>[], BorderStrokeStyle[]>[] layers = new ParsedValueImpl[nLayers];\n@@ -3206,1 +3206,1 @@\n-    private ParsedValueImpl<ParsedValue[],BorderStrokeStyle> parseBorderStyle(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[], BorderStrokeStyle> parseBorderStyle(final Term root)\n@@ -3463,1 +3463,1 @@\n-    private ParsedValueImpl<ParsedValue[],BorderImageSlices> parseBorderImageSlice(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, ?>[],BorderImageSlices> parseBorderImageSlice(final Term root)\n@@ -3499,1 +3499,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderImageSlices>[],BorderImageSlices[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, ?>[],BorderImageSlices>[],BorderImageSlices[]>\n@@ -3503,1 +3503,1 @@\n-        ParsedValueImpl<ParsedValue[], BorderImageSlices>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, ?>[], BorderImageSlices>[] layers = new ParsedValueImpl[nLayers];\n@@ -3517,1 +3517,1 @@\n-    private ParsedValueImpl<ParsedValue[], BorderWidths> parseBorderImageWidth(final Term root)\n+    private ParsedValueImpl<ParsedValue<?, Size>[], BorderWidths> parseBorderImageWidth(final Term root)\n@@ -3543,1 +3543,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],BorderWidths>[],BorderWidths[]>\n+    private ParsedValueImpl<ParsedValue<ParsedValue<?, Size>[],BorderWidths>[],BorderWidths[]>\n@@ -3547,1 +3547,1 @@\n-        ParsedValueImpl<ParsedValue[], BorderWidths>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<?, Size>[], BorderWidths>[] layers = new ParsedValueImpl[nLayers];\n@@ -3581,1 +3581,1 @@\n-    private ParsedValueImpl<ParsedValue[],String> parseURI(Term root)\n+    private ParsedValueImpl<ParsedValue<String, String>[], String> parseURI(Term root)\n@@ -3601,1 +3601,1 @@\n-    private ParsedValueImpl<ParsedValue<ParsedValue[],String>[],String[]> parseURILayers(Term root)\n+    private ParsedValueImpl<ParsedValue<ParsedValue<String, String>[],String>[],String[]> parseURILayers(Term root)\n@@ -3608,1 +3608,1 @@\n-        ParsedValueImpl<ParsedValue[],String>[] layers = new ParsedValueImpl[nLayers];\n+        ParsedValueImpl<ParsedValue<String, String>[],String>[] layers = new ParsedValueImpl[nLayers];\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/CssParser.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    public static StyleConverter<ParsedValue[], Effect> getEffectConverter() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Effect> getEffectConverter() {\n@@ -237,1 +237,1 @@\n-    public static StyleConverter<ParsedValue[], String> getUrlConverter() {\n+    public static StyleConverter<ParsedValue<String, String>[], String> getUrlConverter() {\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleConverter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1413,1 +1413,1 @@\n-                    final StyleConverter<ParsedValue[], Effect> converter = StyleConverter.getEffectConverter();\n+                    final StyleConverter<ParsedValue<?, ?>[], Effect> converter = StyleConverter.getEffectConverter();\n@@ -1845,1 +1845,1 @@\n-                    final StyleConverter<ParsedValue[],String> converter = StyleConverter.getUrlConverter();\n+                    final StyleConverter<ParsedValue<String, String>[], String> converter = StyleConverter.getUrlConverter();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/StyleablePropertyFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-public class EffectConverter extends StyleConverter<ParsedValue[], Effect> {\n+public class EffectConverter extends StyleConverter<ParsedValue<?, ?>[], Effect> {\n@@ -60,1 +60,1 @@\n-    public static StyleConverter<ParsedValue[], Effect> getInstance() {\n+    public static StyleConverter<ParsedValue<?, ?>[], Effect> getInstance() {\n@@ -65,1 +65,1 @@\n-    public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+    public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -117,1 +117,1 @@\n-        public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+        public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -122,1 +122,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n@@ -196,1 +196,1 @@\n-        public Effect convert(ParsedValue<ParsedValue[], Effect> value, Font font) {\n+        public Effect convert(ParsedValue<ParsedValue<?, ?>[], Effect> value, Font font) {\n@@ -201,1 +201,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n@@ -239,1 +239,1 @@\n-    private static Map<ParsedValue<ParsedValue[], Effect>, Effect> cache;\n+    private static Map<ParsedValue<ParsedValue<?, ?>[], Effect>, Effect> cache;\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/EffectConverter.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-    public static final class LinearGradientConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class LinearGradientConverter extends StyleConverter<ParsedValue<?, ?>[], Paint> {\n@@ -138,1 +138,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<?, ?>[], Paint> value, Font font) {\n@@ -143,1 +143,1 @@\n-            ParsedValue[] values = value.getValue();\n+            ParsedValue<?, ?>[] values = value.getValue();\n@@ -267,1 +267,1 @@\n-    public static final class RadialGradientConverter extends StyleConverter<ParsedValue[], Paint> {\n+    public static final class RadialGradientConverter extends StyleConverter<ParsedValue<?, ?>[], Paint> {\n@@ -282,1 +282,1 @@\n-        public Paint convert(ParsedValue<ParsedValue[], Paint> value, Font font) {\n+        public Paint convert(ParsedValue<ParsedValue<?, ?>[], Paint> value, Font font) {\n@@ -287,1 +287,1 @@\n-            final ParsedValue[] values = value.getValue();\n+            final ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/PaintConverter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public final class StopConverter extends StyleConverter<ParsedValue[], Stop> {\n+public final class StopConverter extends StyleConverter<ParsedValue<?, ?>[], Stop> {\n@@ -60,2 +60,2 @@\n-    public Stop convert(ParsedValue<ParsedValue[], Stop> value, Font font) {\n-        ParsedValue[] values = value.getValue();\n+    public Stop convert(ParsedValue<ParsedValue<?, ?>[], Stop> value, Font font) {\n+        ParsedValue<?, ?>[] values = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/StopConverter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import javafx.css.Size;\n@@ -52,1 +53,1 @@\n-public final class URLConverter extends StyleConverter<ParsedValue[], String> {\n+public final class URLConverter extends StyleConverter<ParsedValue<String, String>[], String> {\n@@ -64,1 +65,1 @@\n-    public static StyleConverter<ParsedValue[], String> getInstance() {\n+    public static StyleConverter<ParsedValue<String, String>[], String> getInstance() {\n@@ -73,1 +74,1 @@\n-    public String convert(ParsedValue<ParsedValue[], String> value, Font font) {\n+    public String convert(ParsedValue<ParsedValue<String, String>[], String> value, Font font) {\n@@ -257,1 +258,1 @@\n-    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue[], String>[], String[]> {\n+    public static final class SequenceConverter extends StyleConverter<ParsedValue<ParsedValue<String, String>[], String>[], String[]> {\n@@ -272,2 +273,2 @@\n-        public String[] convert(ParsedValue<ParsedValue<ParsedValue[], String>[], String[]> value, Font font) {\n-            ParsedValue<ParsedValue[], String>[] layers = value.getValue();\n+        public String[] convert(ParsedValue<ParsedValue<ParsedValue<String, String>[], String>[], String[]> value, Font font) {\n+            ParsedValue<ParsedValue<String, String>[], String>[] layers = value.getValue();\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/css\/converter\/URLConverter.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    static final CssMetaData<Node,Image[]> BACKGROUND_IMAGE =\n+    static final CssMetaData<Node, String[]> BACKGROUND_IMAGE =\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Background.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-    static final CssMetaData<Node,Paint[]> BORDER_COLOR =\n+    static final CssMetaData<Node, Paint[][]> BORDER_COLOR =\n@@ -125,1 +125,1 @@\n-    static final CssMetaData<Node,BorderWidths[]> BORDER_IMAGE_WIDTH =\n+    static final CssMetaData<Node, BorderWidths> BORDER_IMAGE_WIDTH =\n@@ -128,1 +128,1 @@\n-                    new BorderWidths[] { BorderWidths.DEFAULT });\n+                    BorderWidths.DEFAULT);\n","filename":"modules\/javafx.graphics\/src\/main\/java\/javafx\/scene\/layout\/Border.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    ParsedValue<ParsedValue[], Effect> getInnerShadowValue(InnerShadow is, boolean colorIsDerived) {\n+    ParsedValue<ParsedValue<?, ?>[], Effect> getInnerShadowValue(InnerShadow is, boolean colorIsDerived) {\n@@ -68,1 +68,1 @@\n-            ParsedValue[] values = new ParsedValue[] {\n+            ParsedValue<?, ?>[] values = new ParsedValue[] {\n@@ -79,1 +79,1 @@\n-        ParsedValue[] vals = new ParsedValue[] {\n+        ParsedValue<?, ?>[] vals = new ParsedValue[] {\n@@ -95,1 +95,1 @@\n-    ParsedValue<ParsedValue[], Effect> getDropShadowValue(DropShadow ds, boolean colorIsDerived) {\n+    ParsedValue<ParsedValue<?, ?>[], Effect> getDropShadowValue(DropShadow ds, boolean colorIsDerived) {\n@@ -104,1 +104,1 @@\n-            ParsedValue[] values = new ParsedValue[] {\n+            ParsedValue<?, ?>[] values = new ParsedValue[] {\n@@ -115,1 +115,1 @@\n-        ParsedValue[] vals = new ParsedValue[] {\n+        ParsedValue<?, ?>[] vals = new ParsedValue[] {\n@@ -160,1 +160,1 @@\n-        ParsedValue<ParsedValue[], Effect> value = getInnerShadowValue(is, false);\n+        ParsedValue<ParsedValue<?, ?>[], Effect> value = getInnerShadowValue(is, false);\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/EffectTypeTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        ParsedValue<ParsedValue[],String>[] urls = new ParsedValue[testPairs.length];\n+        ParsedValue<ParsedValue<String, String>[], String>[] urls = new ParsedValue[testPairs.length];\n@@ -96,1 +96,1 @@\n-        ParsedValue<ParsedValue<ParsedValue[],String>[],String[]> value =\n+        ParsedValue<ParsedValue<ParsedValue<String, String>[], String>[], String[]> value =\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/URLTypeTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        StyleConverter<ParsedValue[],String> result = URLConverter.getInstance();\n+        StyleConverter<ParsedValue<String, String>[], String> result = URLConverter.getInstance();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/com\/sun\/javafx\/css\/converters\/URLConverterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n-            ParsedValue<String, ?> parsedValue = stylesheet.getRules().get(0).getDeclarations().get(0).getParsedValue();\n+            ParsedValue<?, ?> parsedValue = stylesheet.getRules().get(0).getDeclarations().get(0).getParsedValue();\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/CssParserTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    ParsedValue<ParsedValue[],Stop> stopValue(Stop stop) {\n+    ParsedValue<ParsedValue<?, ?>[], Stop> stopValue(Stop stop) {\n@@ -75,1 +75,1 @@\n-    ParsedValue<ParsedValue[],Paint> linearGradientValues(LinearGradient lg) {\n+    ParsedValue<ParsedValue<?, ?>[],Paint> linearGradientValues(LinearGradient lg) {\n@@ -88,1 +88,1 @@\n-    ParsedValue<ParsedValue[],Paint> radialGradientValues(RadialGradient rg) {\n+    ParsedValue<ParsedValue<?, ?>[], Paint> radialGradientValues(RadialGradient rg) {\n","filename":"modules\/javafx.graphics\/src\/test\/java\/test\/javafx\/css\/PaintTypeTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}